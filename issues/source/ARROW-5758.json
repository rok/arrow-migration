{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13241984",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984",
    "key": "ARROW-5758",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pprudhvi",
            "name": "pprudhvi",
            "key": "pprudhvi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Prudhvi Porandla",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pprudhvi",
            "name": "pprudhvi",
            "key": "pprudhvi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Prudhvi Porandla",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pprudhvi",
            "name": "pprudhvi",
            "key": "pprudhvi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Prudhvi Porandla",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5758/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/worklog/268606",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #4726: ARROW-5758: [WIP][C++][Gandiva] Support casting decimals to varchar and vice versa\nURL: https://github.com/apache/arrow/pull/4726\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T16:13:33.413+0000",
                    "updated": "2019-06-27T16:13:33.413+0000",
                    "started": "2019-06-27T16:13:33.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268606",
                    "issueId": "13241984"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/worklog/272018",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #4726: ARROW-5758: [WIP][C++][Gandiva] Support casting decimals to varchar and vice versa\nURL: https://github.com/apache/arrow/pull/4726\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-04T07:00:18.325+0000",
                    "updated": "2019-07-04T07:00:18.325+0000",
                    "started": "2019-07-04T07:00:18.324+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "272018",
                    "issueId": "13241984"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/worklog/272185",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #4803: ARROW-5758: [C++][Gandiva][Java] Support casting decimals to varchar and vice versa\nURL: https://github.com/apache/arrow/pull/4803\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-04T12:28:51.649+0000",
                    "updated": "2019-07-04T12:28:51.649+0000",
                    "started": "2019-07-04T12:28:51.649+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "272185",
                    "issueId": "13241984"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/worklog/272432",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #4803: ARROW-5758: [C++][Gandiva][Java] Support casting decimals to varchar and vice versa\nURL: https://github.com/apache/arrow/pull/4803#discussion_r300548489\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/decimal_wrapper.cc\n ##########\n @@ -358,4 +358,36 @@ boolean is_distinct_from_decimal128_decimal128_internal(\n       y_isvalid);\n }\n \n+FORCE_INLINE\n+void castDECIMAL_utf8_internal(const char* in, int32_t in_length, int32_t out_precision,\n+                               int32_t out_scale, int64_t* out_high, uint64_t* out_low) {\n+  int64_t dec_high_from_str;\n+  uint64_t dec_low_from_str;\n+  int32_t precision_from_str;\n+  int32_t scale_from_str;\n+  gdv_fn_dec_from_string(in, in_length, &precision_from_str, &scale_from_str,\n+                         &dec_high_from_str, &dec_low_from_str);\n+\n+  gandiva::BasicDecimalScalar128 x({dec_high_from_str, dec_low_from_str},\n+                                   precision_from_str, scale_from_str);\n+  bool overflow = false;\n+  auto out = gandiva::decimalops::Convert(x, out_precision, out_scale, &overflow);\n+  *out_high = out.high_bits();\n+  *out_low = out.low_bits();\n+}\n+\n+FORCE_INLINE\n+char* castVARCHAR_decimal128_int64_internal(int64_t context, int64_t x_high,\n+                                            uint64_t x_low, int32_t x_precision,\n+                                            int32_t x_scale, int64_t out_len_param,\n+                                            int32_t* out_length) {\n+  int32_t full_dec_str_len;\n+  char* dec_str =\n+      gdv_fn_dec_to_string(context, x_high, x_low, x_scale, &full_dec_str_len);\n+  int32_t trunc_dec_str_len =\n+      out_len_param < full_dec_str_len ? out_len_param : full_dec_str_len;\n+  *out_length = trunc_dec_str_len;\n \n Review comment:\n   how do I free the remaining bytes if out_len < full_decimal_str_len? \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-05T05:53:22.581+0000",
                    "updated": "2019-07-05T05:53:22.581+0000",
                    "started": "2019-07-05T05:53:22.569+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "272432",
                    "issueId": "13241984"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/worklog/272502",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4803: ARROW-5758: [C++][Gandiva][Java] Support casting decimals to varchar and vice versa\nURL: https://github.com/apache/arrow/pull/4803#issuecomment-508695000\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=h1) Report\n   > :exclamation: No coverage uploaded for pull request base (`master@9ffb9cd`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4803/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##             master    #4803   +/-   ##\n   =========================================\n     Coverage          ?   89.09%           \n   =========================================\n     Files             ?      720           \n     Lines             ?   100184           \n     Branches          ?        0           \n   =========================================\n     Hits              ?    89256           \n     Misses            ?    10928           \n     Partials          ?        0\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/gandiva/function\\_registry\\_string.cc](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX3JlZ2lzdHJ5X3N0cmluZy5jYw==) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/gandiva/tests/decimal\\_test.cc](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3Rlc3RzL2RlY2ltYWxfdGVzdC5jYw==) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/gandiva/decimal\\_ir.cc](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2RlY2ltYWxfaXIuY2M=) | `77.83% <100%> (\u00f8)` | |\n   | [cpp/src/gandiva/gdv\\_function\\_stubs.cc](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2dkdl9mdW5jdGlvbl9zdHVicy5jYw==) | `96.26% <100%> (\u00f8)` | |\n   | [cpp/src/gandiva/function\\_registry\\_arithmetic.cc](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX3JlZ2lzdHJ5X2FyaXRobWV0aWMuY2M=) | `100% <100%> (\u00f8)` | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=footer). Last update [9ffb9cd...8864e7e](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-05T09:25:14.419+0000",
                    "updated": "2019-07-05T09:25:14.419+0000",
                    "started": "2019-07-05T09:25:14.418+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "272502",
                    "issueId": "13241984"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/worklog/272509",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #4803: ARROW-5758: [C++][Gandiva][Java] Support casting decimals to varchar and vice versa\nURL: https://github.com/apache/arrow/pull/4803#discussion_r300610093\n \n \n\n ##########\n File path: cpp/src/gandiva/gdv_function_stubs.cc\n ##########\n @@ -97,6 +97,26 @@ int32_t gdv_fn_populate_varlen_vector(int64_t context_ptr, int8_t* data_ptr,\n   offsets[slot + 1] = offset + entry_len;\n   return 0;\n }\n+\n+void gdv_fn_dec_from_string(const char* in, int32_t in_length,\n+                            int32_t* precision_from_str, int32_t* scale_from_str,\n+                            int64_t* dec_high_from_str, uint64_t* dec_low_from_str) {\n+  arrow::Decimal128 dec;\n+  auto status = arrow::Decimal128::FromString(std::string(in, in_length), &dec,\n+                                              precision_from_str, scale_from_str);\n+  *dec_high_from_str = dec.high_bits();\n \n Review comment:\n   we seem to be ignoring status..if it is not ok then we should set error in context and return.\r\n   else this is likely to crash..\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-05T09:37:13.039+0000",
                    "updated": "2019-07-05T09:37:13.039+0000",
                    "started": "2019-07-05T09:37:13.038+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "272509",
                    "issueId": "13241984"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/worklog/272510",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #4803: ARROW-5758: [C++][Gandiva][Java] Support casting decimals to varchar and vice versa\nURL: https://github.com/apache/arrow/pull/4803#discussion_r300612440\n \n \n\n ##########\n File path: cpp/src/gandiva/tests/decimal_test.cc\n ##########\n @@ -843,4 +844,116 @@ TEST_F(TestDecimal, TestNullDecimalConstant) {\n   EXPECT_ARROW_ARRAY_EQUALS(exp, outputs.at(0));\n }\n \n+TEST_F(TestDecimal, TestCastVarCharDecimal) {\n+  // schema for input fields\n+  constexpr int32_t precision = 38;\n+  constexpr int32_t scale = 2;\n+  auto decimal_type = std::make_shared<arrow::Decimal128Type>(precision, scale);\n+\n+  auto field_dec = field(\"dec\", decimal_type);\n+  auto field_res_str = field(\"res_str\", utf8());\n+  auto field_res_str_1 = field(\"res_str_1\", utf8());\n+  auto schema = arrow::schema({field_dec, field_res_str, field_res_str_1});\n+\n+  // output fields\n+  auto res_str = field(\"res_str\", utf8());\n+  auto equals_res_bool = field(\"equals_res\", boolean());\n+\n+  // build expressions.\n+  auto node_dec = TreeExprBuilder::MakeField(field_dec);\n+  auto node_res_str = TreeExprBuilder::MakeField(field_res_str);\n+  auto node_res_str_1 = TreeExprBuilder::MakeField(field_res_str_1);\n+  // limits decimal string to input length\n+  auto str_len_limit = TreeExprBuilder::MakeLiteral(static_cast<int64_t>(5));\n+  auto str_len_limit_1 = TreeExprBuilder::MakeLiteral(static_cast<int64_t>(1));\n+  auto cast_varchar =\n+      TreeExprBuilder::MakeFunction(\"castVARCHAR\", {node_dec, str_len_limit}, utf8());\n+  auto cast_varchar_1 =\n+      TreeExprBuilder::MakeFunction(\"castVARCHAR\", {node_dec, str_len_limit_1}, utf8());\n+  auto equals =\n+      TreeExprBuilder::MakeFunction(\"equal\", {cast_varchar, node_res_str}, boolean());\n+  auto equals_1 =\n+      TreeExprBuilder::MakeFunction(\"equal\", {cast_varchar_1, node_res_str_1}, boolean());\n+  auto expr = TreeExprBuilder::MakeExpression(equals, equals_res_bool);\n+  auto expr_1 = TreeExprBuilder::MakeExpression(equals_1, equals_res_bool);\n+\n+  // Build a projector for the expressions.\n+  std::shared_ptr<Projector> projector;\n+\n+  auto status = Projector::Make(schema, {expr, expr_1}, TestConfiguration(), &projector);\n+  EXPECT_TRUE(status.ok()) << status.message();\n+\n+  // Create a row-batch with some sample data\n+  int num_records = 5;\n+  auto array_dec = MakeArrowArrayDecimal(\n+      decimal_type,\n+      MakeDecimalVector({\"10.51\", \"1.23\", \"100.23\", \"-1000.23\", \"-0000.10\"}, scale),\n+      {true, false, true, true, true});\n+  auto array_str_res = MakeArrowArrayUtf8({\"10.51\", \"-null-\", \"100.2\", \"-1000\", \"-0.10\"},\n+                                          {true, false, true, true, true});\n+  auto array_str_res_1 =\n+      MakeArrowArrayUtf8({\"1\", \"-null-\", \"1\", \"-\", \"-\"}, {true, false, true, true, true});\n+  // prepare input record batch\n+  auto in_batch = arrow::RecordBatch::Make(schema, num_records,\n+                                           {array_dec, array_str_res, array_str_res_1});\n+\n+  // Evaluate expression\n+  arrow::ArrayVector outputs;\n+  status = projector->Evaluate(*in_batch, pool_, &outputs);\n+  EXPECT_TRUE(status.ok()) << status.message();\n+\n+  auto exp = MakeArrowArrayBool({true, false, true, true, true},\n+                                {true, false, true, true, true});\n+  auto exp_1 = MakeArrowArrayBool({true, false, true, true, true},\n+                                  {true, false, true, true, true});\n+  // Validate results\n+  EXPECT_ARROW_ARRAY_EQUALS(exp, outputs[0]);\n+  EXPECT_ARROW_ARRAY_EQUALS(exp, outputs[1]);\n+}\n+\n+TEST_F(TestDecimal, TestCastDecimalVarChar) {\n+  // schema for input fields\n+  constexpr int32_t precision = 4;\n+  constexpr int32_t scale = 2;\n+  auto decimal_type = std::make_shared<arrow::Decimal128Type>(precision, scale);\n+\n+  auto field_str = field(\"in_str\", utf8());\n+  auto schema = arrow::schema({field_str});\n+\n+  // output fields\n+  auto res_dec = field(\"res_dec\", decimal_type);\n+\n+  // build expressions.\n+  auto node_str = TreeExprBuilder::MakeField(field_str);\n+  auto cast_decimal =\n+      TreeExprBuilder::MakeFunction(\"castDECIMAL\", {node_str}, decimal_type);\n+  auto expr = TreeExprBuilder::MakeExpression(cast_decimal, res_dec);\n+\n+  // Build a projector for the expressions.\n+  std::shared_ptr<Projector> projector;\n+\n+  auto status = Projector::Make(schema, {expr}, TestConfiguration(), &projector);\n+  EXPECT_TRUE(status.ok()) << status.message();\n+\n+  // Create a row-batch with some sample data\n+  int num_records = 5;\n+\n+  auto array_str = MakeArrowArrayUtf8({\"10.5134\", \"-0.0\", \"-0.1\", \"10.516\", \"-1000\"},\n \n Review comment:\n   please add non-valid numbers..\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-05T09:37:13.058+0000",
                    "updated": "2019-07-05T09:37:13.058+0000",
                    "started": "2019-07-05T09:37:13.058+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "272510",
                    "issueId": "13241984"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/worklog/272511",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #4803: ARROW-5758: [C++][Gandiva][Java] Support casting decimals to varchar and vice versa\nURL: https://github.com/apache/arrow/pull/4803#discussion_r300612578\n \n \n\n ##########\n File path: cpp/src/gandiva/tests/decimal_test.cc\n ##########\n @@ -843,4 +844,116 @@ TEST_F(TestDecimal, TestNullDecimalConstant) {\n   EXPECT_ARROW_ARRAY_EQUALS(exp, outputs.at(0));\n }\n \n+TEST_F(TestDecimal, TestCastVarCharDecimal) {\n+  // schema for input fields\n+  constexpr int32_t precision = 38;\n+  constexpr int32_t scale = 2;\n+  auto decimal_type = std::make_shared<arrow::Decimal128Type>(precision, scale);\n+\n+  auto field_dec = field(\"dec\", decimal_type);\n+  auto field_res_str = field(\"res_str\", utf8());\n+  auto field_res_str_1 = field(\"res_str_1\", utf8());\n+  auto schema = arrow::schema({field_dec, field_res_str, field_res_str_1});\n+\n+  // output fields\n+  auto res_str = field(\"res_str\", utf8());\n+  auto equals_res_bool = field(\"equals_res\", boolean());\n+\n+  // build expressions.\n+  auto node_dec = TreeExprBuilder::MakeField(field_dec);\n+  auto node_res_str = TreeExprBuilder::MakeField(field_res_str);\n+  auto node_res_str_1 = TreeExprBuilder::MakeField(field_res_str_1);\n+  // limits decimal string to input length\n+  auto str_len_limit = TreeExprBuilder::MakeLiteral(static_cast<int64_t>(5));\n+  auto str_len_limit_1 = TreeExprBuilder::MakeLiteral(static_cast<int64_t>(1));\n+  auto cast_varchar =\n+      TreeExprBuilder::MakeFunction(\"castVARCHAR\", {node_dec, str_len_limit}, utf8());\n+  auto cast_varchar_1 =\n+      TreeExprBuilder::MakeFunction(\"castVARCHAR\", {node_dec, str_len_limit_1}, utf8());\n+  auto equals =\n+      TreeExprBuilder::MakeFunction(\"equal\", {cast_varchar, node_res_str}, boolean());\n+  auto equals_1 =\n+      TreeExprBuilder::MakeFunction(\"equal\", {cast_varchar_1, node_res_str_1}, boolean());\n+  auto expr = TreeExprBuilder::MakeExpression(equals, equals_res_bool);\n+  auto expr_1 = TreeExprBuilder::MakeExpression(equals_1, equals_res_bool);\n+\n+  // Build a projector for the expressions.\n+  std::shared_ptr<Projector> projector;\n+\n+  auto status = Projector::Make(schema, {expr, expr_1}, TestConfiguration(), &projector);\n+  EXPECT_TRUE(status.ok()) << status.message();\n+\n+  // Create a row-batch with some sample data\n+  int num_records = 5;\n+  auto array_dec = MakeArrowArrayDecimal(\n+      decimal_type,\n+      MakeDecimalVector({\"10.51\", \"1.23\", \"100.23\", \"-1000.23\", \"-0000.10\"}, scale),\n \n Review comment:\n   please add some thing greater than 38 digits with precision 38,0\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-05T09:37:13.063+0000",
                    "updated": "2019-07-05T09:37:13.063+0000",
                    "started": "2019-07-05T09:37:13.063+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "272511",
                    "issueId": "13241984"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/worklog/272512",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #4803: ARROW-5758: [C++][Gandiva][Java] Support casting decimals to varchar and vice versa\nURL: https://github.com/apache/arrow/pull/4803#discussion_r300611678\n \n \n\n ##########\n File path: cpp/src/gandiva/gdv_function_stubs.cc\n ##########\n @@ -97,6 +97,26 @@ int32_t gdv_fn_populate_varlen_vector(int64_t context_ptr, int8_t* data_ptr,\n   offsets[slot + 1] = offset + entry_len;\n   return 0;\n }\n+\n+void gdv_fn_dec_from_string(const char* in, int32_t in_length,\n+                            int32_t* precision_from_str, int32_t* scale_from_str,\n+                            int64_t* dec_high_from_str, uint64_t* dec_low_from_str) {\n+  arrow::Decimal128 dec;\n+  auto status = arrow::Decimal128::FromString(std::string(in, in_length), &dec,\n+                                              precision_from_str, scale_from_str);\n+  *dec_high_from_str = dec.high_bits();\n+  *dec_low_from_str = dec.low_bits();\n+}\n+\n+char* gdv_fn_dec_to_string(int64_t context, int64_t x_high, uint64_t x_low,\n \n Review comment:\n   good decision to split this to do only decimal to string! :)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-05T09:37:13.363+0000",
                    "updated": "2019-07-05T09:37:13.363+0000",
                    "started": "2019-07-05T09:37:13.363+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "272512",
                    "issueId": "13241984"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/worklog/272513",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #4803: ARROW-5758: [C++][Gandiva][Java] Support casting decimals to varchar and vice versa\nURL: https://github.com/apache/arrow/pull/4803#discussion_r300612810\n \n \n\n ##########\n File path: cpp/src/gandiva/tests/decimal_test.cc\n ##########\n @@ -843,4 +844,116 @@ TEST_F(TestDecimal, TestNullDecimalConstant) {\n   EXPECT_ARROW_ARRAY_EQUALS(exp, outputs.at(0));\n }\n \n+TEST_F(TestDecimal, TestCastVarCharDecimal) {\n+  // schema for input fields\n+  constexpr int32_t precision = 38;\n+  constexpr int32_t scale = 2;\n+  auto decimal_type = std::make_shared<arrow::Decimal128Type>(precision, scale);\n+\n+  auto field_dec = field(\"dec\", decimal_type);\n+  auto field_res_str = field(\"res_str\", utf8());\n+  auto field_res_str_1 = field(\"res_str_1\", utf8());\n+  auto schema = arrow::schema({field_dec, field_res_str, field_res_str_1});\n+\n+  // output fields\n+  auto res_str = field(\"res_str\", utf8());\n+  auto equals_res_bool = field(\"equals_res\", boolean());\n+\n+  // build expressions.\n+  auto node_dec = TreeExprBuilder::MakeField(field_dec);\n+  auto node_res_str = TreeExprBuilder::MakeField(field_res_str);\n+  auto node_res_str_1 = TreeExprBuilder::MakeField(field_res_str_1);\n+  // limits decimal string to input length\n+  auto str_len_limit = TreeExprBuilder::MakeLiteral(static_cast<int64_t>(5));\n+  auto str_len_limit_1 = TreeExprBuilder::MakeLiteral(static_cast<int64_t>(1));\n+  auto cast_varchar =\n+      TreeExprBuilder::MakeFunction(\"castVARCHAR\", {node_dec, str_len_limit}, utf8());\n+  auto cast_varchar_1 =\n+      TreeExprBuilder::MakeFunction(\"castVARCHAR\", {node_dec, str_len_limit_1}, utf8());\n+  auto equals =\n+      TreeExprBuilder::MakeFunction(\"equal\", {cast_varchar, node_res_str}, boolean());\n+  auto equals_1 =\n+      TreeExprBuilder::MakeFunction(\"equal\", {cast_varchar_1, node_res_str_1}, boolean());\n+  auto expr = TreeExprBuilder::MakeExpression(equals, equals_res_bool);\n+  auto expr_1 = TreeExprBuilder::MakeExpression(equals_1, equals_res_bool);\n+\n+  // Build a projector for the expressions.\n+  std::shared_ptr<Projector> projector;\n+\n+  auto status = Projector::Make(schema, {expr, expr_1}, TestConfiguration(), &projector);\n+  EXPECT_TRUE(status.ok()) << status.message();\n+\n+  // Create a row-batch with some sample data\n+  int num_records = 5;\n+  auto array_dec = MakeArrowArrayDecimal(\n+      decimal_type,\n+      MakeDecimalVector({\"10.51\", \"1.23\", \"100.23\", \"-1000.23\", \"-0000.10\"}, scale),\n+      {true, false, true, true, true});\n+  auto array_str_res = MakeArrowArrayUtf8({\"10.51\", \"-null-\", \"100.2\", \"-1000\", \"-0.10\"},\n+                                          {true, false, true, true, true});\n+  auto array_str_res_1 =\n+      MakeArrowArrayUtf8({\"1\", \"-null-\", \"1\", \"-\", \"-\"}, {true, false, true, true, true});\n+  // prepare input record batch\n+  auto in_batch = arrow::RecordBatch::Make(schema, num_records,\n+                                           {array_dec, array_str_res, array_str_res_1});\n+\n+  // Evaluate expression\n+  arrow::ArrayVector outputs;\n+  status = projector->Evaluate(*in_batch, pool_, &outputs);\n+  EXPECT_TRUE(status.ok()) << status.message();\n+\n+  auto exp = MakeArrowArrayBool({true, false, true, true, true},\n+                                {true, false, true, true, true});\n+  auto exp_1 = MakeArrowArrayBool({true, false, true, true, true},\n+                                  {true, false, true, true, true});\n+  // Validate results\n+  EXPECT_ARROW_ARRAY_EQUALS(exp, outputs[0]);\n+  EXPECT_ARROW_ARRAY_EQUALS(exp, outputs[1]);\n+}\n+\n+TEST_F(TestDecimal, TestCastDecimalVarChar) {\n+  // schema for input fields\n+  constexpr int32_t precision = 4;\n+  constexpr int32_t scale = 2;\n+  auto decimal_type = std::make_shared<arrow::Decimal128Type>(precision, scale);\n+\n+  auto field_str = field(\"in_str\", utf8());\n+  auto schema = arrow::schema({field_str});\n+\n+  // output fields\n+  auto res_dec = field(\"res_dec\", decimal_type);\n+\n+  // build expressions.\n+  auto node_str = TreeExprBuilder::MakeField(field_str);\n+  auto cast_decimal =\n+      TreeExprBuilder::MakeFunction(\"castDECIMAL\", {node_str}, decimal_type);\n \n Review comment:\n   please also add a wrapper test - \r\n   \r\n   1. convert decimal -> varchar\r\n   2. use varchar from 1 to convert to decimal..\r\n   \r\n   just to ensure we do not crash when user pipes data back.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-05T09:37:13.379+0000",
                    "updated": "2019-07-05T09:37:13.379+0000",
                    "started": "2019-07-05T09:37:13.378+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "272513",
                    "issueId": "13241984"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/worklog/272514",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #4803: ARROW-5758: [C++][Gandiva][Java] Support casting decimals to varchar and vice versa\nURL: https://github.com/apache/arrow/pull/4803#discussion_r300610895\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/decimal_wrapper.cc\n ##########\n @@ -358,4 +358,36 @@ boolean is_distinct_from_decimal128_decimal128_internal(\n       y_isvalid);\n }\n \n+FORCE_INLINE\n+void castDECIMAL_utf8_internal(const char* in, int32_t in_length, int32_t out_precision,\n+                               int32_t out_scale, int64_t* out_high, uint64_t* out_low) {\n+  int64_t dec_high_from_str;\n+  uint64_t dec_low_from_str;\n+  int32_t precision_from_str;\n+  int32_t scale_from_str;\n+  gdv_fn_dec_from_string(in, in_length, &precision_from_str, &scale_from_str,\n+                         &dec_high_from_str, &dec_low_from_str);\n+\n+  gandiva::BasicDecimalScalar128 x({dec_high_from_str, dec_low_from_str},\n \n Review comment:\n   what happens when length is > 38..\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-05T09:37:13.428+0000",
                    "updated": "2019-07-05T09:37:13.428+0000",
                    "started": "2019-07-05T09:37:13.427+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "272514",
                    "issueId": "13241984"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/worklog/272587",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4803: ARROW-5758: [C++][Gandiva][Java] Support casting decimals to varchar and vice versa\nURL: https://github.com/apache/arrow/pull/4803#discussion_r300677756\n \n \n\n ##########\n File path: cpp/src/gandiva/gdv_function_stubs.cc\n ##########\n @@ -97,6 +97,26 @@ int32_t gdv_fn_populate_varlen_vector(int64_t context_ptr, int8_t* data_ptr,\n   offsets[slot + 1] = offset + entry_len;\n   return 0;\n }\n+\n+void gdv_fn_dec_from_string(const char* in, int32_t in_length,\n+                            int32_t* precision_from_str, int32_t* scale_from_str,\n+                            int64_t* dec_high_from_str, uint64_t* dec_low_from_str) {\n+  arrow::Decimal128 dec;\n+  auto status = arrow::Decimal128::FromString(std::string(in, in_length), &dec,\n+                                              precision_from_str, scale_from_str);\n+  *dec_high_from_str = dec.high_bits();\n+  *dec_low_from_str = dec.low_bits();\n+}\n+\n+char* gdv_fn_dec_to_string(int64_t context, int64_t x_high, uint64_t x_low,\n+                           int32_t x_scale, int32_t* dec_str_len) {\n+  arrow::Decimal128 dec(arrow::BasicDecimal128(x_high, x_low));\n+  std::string dec_str = dec.ToString(x_scale);\n+  *dec_str_len = static_cast<int32_t>(dec_str.length());\n+  char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *dec_str_len));\n \n Review comment:\n   This function can return `NULL` on failure, you need to protect against this.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-05T13:13:18.294+0000",
                    "updated": "2019-07-05T13:13:18.294+0000",
                    "started": "2019-07-05T13:13:18.293+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "272587",
                    "issueId": "13241984"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/worklog/272616",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4803: ARROW-5758: [C++][Gandiva][Java] Support casting decimals to varchar and vice versa\nURL: https://github.com/apache/arrow/pull/4803#issuecomment-508695000\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=h1) Report\n   > Merging [#4803](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/9ffb9cdd46c498a2f46a8d030613e7c046b6e843?src=pr&el=desc) will **increase** coverage by `16.83%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4803/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #4803       +/-   ##\n   ===========================================\n   + Coverage   72.26%    89.1%   +16.83%     \n   ===========================================\n     Files         822      720      -102     \n     Lines      107713   100183     -7530     \n     Branches     1418        0     -1418     \n   ===========================================\n   + Hits        77844    89264    +11420     \n   + Misses      29507    10919    -18588     \n   + Partials      362        0      -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/gandiva/function\\_registry\\_string.cc](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX3JlZ2lzdHJ5X3N0cmluZy5jYw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/tests/decimal\\_test.cc](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3Rlc3RzL2RlY2ltYWxfdGVzdC5jYw==) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/gandiva/decimal\\_ir.cc](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2RlY2ltYWxfaXIuY2M=) | `77.83% <100%> (+0.24%)` | :arrow_up: |\n   | [cpp/src/gandiva/gdv\\_function\\_stubs.cc](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2dkdl9mdW5jdGlvbl9zdHVicy5jYw==) | `96.26% <100%> (+20.93%)` | :arrow_up: |\n   | [cpp/src/gandiva/function\\_registry\\_arithmetic.cc](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX3JlZ2lzdHJ5X2FyaXRobWV0aWMuY2M=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/testing/gtest\\_util.h](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90ZXN0aW5nL2d0ZXN0X3V0aWwuaA==) | `97.36% <0%> (-2.64%)` | :arrow_down: |\n   | [cpp/src/arrow/compute/kernel.h](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2tlcm5lbC5o) | `61.16% <0%> (-1.53%)` | :arrow_down: |\n   | [cpp/src/arrow/result.h](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9yZXN1bHQuaA==) | `91.3% <0%> (-0.37%)` | :arrow_down: |\n   | [cpp/src/arrow/flight/server.h](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvc2VydmVyLmg=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/expression\\_registry.h](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2V4cHJlc3Npb25fcmVnaXN0cnkuaA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | ... and [694 more](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=footer). Last update [9ffb9cd...8864e7e](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-05T14:28:22.446+0000",
                    "updated": "2019-07-05T14:28:22.446+0000",
                    "started": "2019-07-05T14:28:22.445+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "272616",
                    "issueId": "13241984"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/worklog/272722",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #4803: ARROW-5758: [C++][Gandiva][Java] Support casting decimals to varchar and vice versa\nURL: https://github.com/apache/arrow/pull/4803#discussion_r300775362\n \n \n\n ##########\n File path: cpp/src/gandiva/gdv_function_stubs.cc\n ##########\n @@ -97,6 +97,26 @@ int32_t gdv_fn_populate_varlen_vector(int64_t context_ptr, int8_t* data_ptr,\n   offsets[slot + 1] = offset + entry_len;\n   return 0;\n }\n+\n+void gdv_fn_dec_from_string(const char* in, int32_t in_length,\n+                            int32_t* precision_from_str, int32_t* scale_from_str,\n+                            int64_t* dec_high_from_str, uint64_t* dec_low_from_str) {\n+  arrow::Decimal128 dec;\n+  auto status = arrow::Decimal128::FromString(std::string(in, in_length), &dec,\n+                                              precision_from_str, scale_from_str);\n+  *dec_high_from_str = dec.high_bits();\n+  *dec_low_from_str = dec.low_bits();\n+}\n+\n+char* gdv_fn_dec_to_string(int64_t context, int64_t x_high, uint64_t x_low,\n+                           int32_t x_scale, int32_t* dec_str_len) {\n+  arrow::Decimal128 dec(arrow::BasicDecimal128(x_high, x_low));\n+  std::string dec_str = dec.ToString(x_scale);\n+  *dec_str_len = static_cast<int32_t>(dec_str.length());\n+  char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *dec_str_len));\n \n Review comment:\n   now sets error in context and returns NULLPTR\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-05T19:06:10.206+0000",
                    "updated": "2019-07-05T19:06:10.206+0000",
                    "started": "2019-07-05T19:06:10.206+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "272722",
                    "issueId": "13241984"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/worklog/272899",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4803: ARROW-5758: [C++][Gandiva][Java] Support casting decimals to varchar and vice versa\nURL: https://github.com/apache/arrow/pull/4803#issuecomment-508695000\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=h1) Report\n   > Merging [#4803](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/c037ee2be7c8065032494ba7e052941edaf3ac61?src=pr&el=desc) will **increase** coverage by `0.57%`.\n   > The diff coverage is `98.02%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4803/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4803      +/-   ##\n   ==========================================\n   + Coverage   88.51%   89.09%   +0.57%     \n   ==========================================\n     Files         911      720     -191     \n     Lines      115310   100238   -15072     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       102070    89303   -12767     \n   + Misses      12878    10935    -1943     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/gandiva/function\\_registry\\_string.cc](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX3JlZ2lzdHJ5X3N0cmluZy5jYw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/tests/decimal\\_test.cc](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3Rlc3RzL2RlY2ltYWxfdGVzdC5jYw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/decimal\\_ir.cc](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2RlY2ltYWxfaXIuY2M=) | `77.83% <100%> (+0.24%)` | :arrow_up: |\n   | [cpp/src/gandiva/function\\_registry\\_arithmetic.cc](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX3JlZ2lzdHJ5X2FyaXRobWV0aWMuY2M=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/gdv\\_function\\_stubs.cc](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2dkdl9mdW5jdGlvbl9zdHVicy5jYw==) | `93.91% <92.1%> (-0.9%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/column-builder.cc](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY29sdW1uLWJ1aWxkZXIuY2M=) | `95.29% <0%> (-1.77%)` | :arrow_down: |\n   | [cpp/src/arrow/io/readahead.cc](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9yZWFkYWhlYWQuY2M=) | `95.91% <0%> (-1.03%)` | :arrow_down: |\n   | [go/arrow/ipc/writer.go](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaXBjL3dyaXRlci5nbw==) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | ... and [188 more](https://codecov.io/gh/apache/arrow/pull/4803/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=footer). Last update [c037ee2...72f479f](https://codecov.io/gh/apache/arrow/pull/4803?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-06T23:22:24.904+0000",
                    "updated": "2019-07-06T23:22:24.904+0000",
                    "started": "2019-07-06T23:22:24.902+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "272899",
                    "issueId": "13241984"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/worklog/273071",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #4803: ARROW-5758: [C++][Gandiva][Java] Support casting decimals to varchar and vice versa\nURL: https://github.com/apache/arrow/pull/4803\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-08T06:15:57.689+0000",
                    "updated": "2019-07-08T06:15:57.689+0000",
                    "started": "2019-07-08T06:15:57.688+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "273071",
                    "issueId": "13241984"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/worklog/273073",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on issue #4803: ARROW-5758: [C++][Gandiva][Java] Support casting decimals to varchar and vice versa\nURL: https://github.com/apache/arrow/pull/4803#issuecomment-509093442\n \n \n   thanks @pprudhvi \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-08T06:16:29.498+0000",
                    "updated": "2019-07-08T06:16:29.498+0000",
                    "started": "2019-07-08T06:16:29.498+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "273073",
                    "issueId": "13241984"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@35a25eff[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1124866c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55a7be78[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@60055546[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@421d20b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5cb787ff[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@340bb66f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7eee7acd[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74554e91[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@14bdb79b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d6cc3ad[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7059e6df[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Jul 08 06:15:48 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-07-08T06:15:48.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5758/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-06-27T16:12:12.000+0000",
        "updated": "2019-09-26T03:14:03.000+0000",
        "timeoriginalestimate": null,
        "description": "Add castDecimal(varchar), castVarchar(Decimal)",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Support casting decimals to varchar and vice versa",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241984/comment/16880055",
                    "id": "16880055",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "Issue resolved by pull request 4803\n[https://github.com/apache/arrow/pull/4803]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2019-07-08T06:15:48.485+0000",
                    "updated": "2019-07-08T06:15:48.485+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0463c:",
        "customfield_12314139": null
    }
}