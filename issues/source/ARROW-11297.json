{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13352962",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962",
    "key": "ARROW-11297",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "orc",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yingzhou474",
            "name": "yingzhou474",
            "key": "yingzhou474",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Ian Alexander Joiner",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yingzhou474",
            "name": "yingzhou474",
            "key": "yingzhou474",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Ian Alexander Joiner",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yingzhou474",
            "name": "yingzhou474",
            "key": "yingzhou474",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Ian Alexander Joiner",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 88200,
            "total": 88200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 88200,
            "total": 88200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11297/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 147,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/565897",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mathyingzhou opened a new pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-14T13:15:04.818+0000",
                    "updated": "2021-03-14T13:15:04.818+0000",
                    "started": "2021-03-14T13:15:04.817+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "565897",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/565898",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#issuecomment-798904875\n\n\n   https://issues.apache.org/jira/browse/ARROW-11297\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-14T13:15:28.234+0000",
                    "updated": "2021-03-14T13:15:28.234+0000",
                    "started": "2021-03-14T13:15:28.233+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "565898",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/582220",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#issuecomment-819251330\n\n\n   Is this different than the other ORC PR?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-14T06:00:19.320+0000",
                    "updated": "2021-04-14T06:00:19.320+0000",
                    "started": "2021-04-14T06:00:19.320+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "582220",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/585231",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mathyingzhou commented on pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#issuecomment-822608577\n\n\n   @emkornfield Yes it is pretty different. Since the other has been merged this one will be open pretty soon haha.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T16:33:21.629+0000",
                    "updated": "2021-04-19T16:33:21.629+0000",
                    "started": "2021-04-19T16:33:21.629+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585231",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/585233",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mathyingzhou edited a comment on pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#issuecomment-822608577\n\n\n   @emkornfield Yes it is pretty different. Since the other has been merged this one will be open pretty soon haha.\r\n   \r\n   I will file 3-5 new smaller ORC PRs including this one so that when we release 5.0.0 in July all the ORC stuff will be there.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T16:34:57.882+0000",
                    "updated": "2021-04-19T16:34:57.882+0000",
                    "started": "2021-04-19T16:34:57.882+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585233",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/650434",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#discussion_r708059180\n\n\n\n##########\nFile path: cpp/src/arrow/adapters/orc/adapter.cc\n##########\n@@ -529,9 +527,9 @@ class ORCFileWriter::Impl {\n     return Status::OK();\n   }\n \n-  Status Write(const Table& table) {\n+  Status Write(const Table& table, const WriterOptions& writer_options) {\n\nReview comment:\n       Alternatively those options could also be passed to the FileWriter constructor?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-14T09:06:01.638+0000",
                    "updated": "2021-09-14T09:06:01.638+0000",
                    "started": "2021-09-14T09:06:01.638+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650434",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/685790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on a change in pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#discussion_r755942993\n\n\n\n##########\nFile path: cpp/src/arrow/adapters/orc/adapter.cc\n##########\n@@ -529,9 +527,9 @@ class ORCFileWriter::Impl {\n     return Status::OK();\n   }\n \n-  Status Write(const Table& table) {\n+  Status Write(const Table& table, const WriterOptions& writer_options) {\n\nReview comment:\n       @jorisvandenbossche  I'm back haha. Let's try to get all the ORC stuff including documentation in 7.0.0 (that is, late Jan 2022)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-24T11:08:11.389+0000",
                    "updated": "2021-11-24T11:08:11.389+0000",
                    "started": "2021-11-24T11:08:11.388+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "685790",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/685791",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on a change in pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#discussion_r755942993\n\n\n\n##########\nFile path: cpp/src/arrow/adapters/orc/adapter.cc\n##########\n@@ -529,9 +527,9 @@ class ORCFileWriter::Impl {\n     return Status::OK();\n   }\n \n-  Status Write(const Table& table) {\n+  Status Write(const Table& table, const WriterOptions& writer_options) {\n\nReview comment:\n       @jorisvandenbossche  I'm back haha. Stuff such as a legal name change and other personal stuff takes time. Now they are over! Let's try to get all the ORC stuff including documentation in 7.0.0 (that is, late Jan 2022)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-24T11:11:48.932+0000",
                    "updated": "2021-11-24T11:11:48.932+0000",
                    "started": "2021-11-24T11:11:48.932+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "685791",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/685890",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on a change in pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#discussion_r756145288\n\n\n\n##########\nFile path: cpp/src/arrow/adapters/orc/adapter.cc\n##########\n@@ -529,9 +527,9 @@ class ORCFileWriter::Impl {\n     return Status::OK();\n   }\n \n-  Status Write(const Table& table) {\n+  Status Write(const Table& table, const WriterOptions& writer_options) {\n\nReview comment:\n       Fixed!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-24T14:45:13.469+0000",
                    "updated": "2021-11-24T14:45:13.469+0000",
                    "started": "2021-11-24T14:45:13.469+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "685890",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/686282",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#issuecomment-978940542\n\n\n   This PR also takes care of ARROW-13571 \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-25T08:22:03.024+0000",
                    "updated": "2021-11-25T08:22:03.024+0000",
                    "started": "2021-11-25T08:22:03.023+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "686282",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/687090",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#issuecomment-981244312\n\n\n   @jorisvandenbossche I think this is review-worthy now. Once we are done with this one I will add the reader options next.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-29T02:54:24.863+0000",
                    "updated": "2021-11-29T02:54:24.863+0000",
                    "started": "2021-11-29T02:54:24.863+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "687090",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/687251",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#issuecomment-981532241\n\n\n   Also can we please remove the GLib and Ruby tags?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-29T11:09:01.110+0000",
                    "updated": "2021-11-29T11:09:01.110+0000",
                    "started": "2021-11-29T11:09:01.110+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "687251",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/687313",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#discussion_r758307660\n\n\n\n##########\nFile path: cpp/src/arrow/adapters/orc/adapter_options.h\n##########\n@@ -0,0 +1,269 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <set>\n+#include <sstream>\n+\n+#include \"arrow/io/interfaces.h\"\n+#include \"arrow/util/visibility.h\"\n+#include \"orc/OrcFile.hh\"\n+\n+namespace liborc = orc;\n+\n+namespace arrow {\n+\n+namespace adapters {\n+\n+namespace orc {\n+// Components of ORC Writer Options\n+\n+struct WriterOptionsPrivate;\n+\n+enum CompressionKind {\n+  CompressionKind_NONE = 0,\n+  CompressionKind_ZLIB = 1,\n+  CompressionKind_SNAPPY = 2,\n+  CompressionKind_LZO = 3,\n+  CompressionKind_LZ4 = 4,\n+  CompressionKind_ZSTD = 5,\n+  CompressionKind_MAX = INT32_MAX\n+};\n+\n+enum CompressionStrategy {\n+  CompressionStrategy_SPEED = 0,\n+  CompressionStrategy_COMPRESSION\n+};\n+\n+enum RleVersion { RleVersion_1 = 0, RleVersion_2 = 1 };\n+\n+enum BloomFilterVersion {\n+  // Include both the BLOOM_FILTER and BLOOM_FILTER_UTF8 streams to support\n+  // both old and new readers.\n+  ORIGINAL = 0,\n+  // Only include the BLOOM_FILTER_UTF8 streams that consistently use UTF8.\n+  // See ORC-101\n+  UTF8 = 1,\n+  FUTURE = INT32_MAX\n+};\n+\n+class ARROW_EXPORT FileVersion {\n+ private:\n+  uint32_t major_version;\n+  uint32_t minor_version;\n+\n+ public:\n+  static const FileVersion& v_0_11();\n+  static const FileVersion& v_0_12();\n+\n+  FileVersion(uint32_t major, uint32_t minor)\n+      : major_version(major), minor_version(minor) {}\n+\n+  /**\n+   * Get major version\n+   */\n+  uint32_t major() const { return this->major_version; }\n+\n+  /**\n+   * Get minor version\n+   */\n+  uint32_t minor() const { return this->minor_version; }\n+\n+  bool operator==(const FileVersion& right) const {\n+    return this->major_version == right.major() && this->minor_version == right.minor();\n+  }\n+\n+  bool operator!=(const FileVersion& right) const { return !(*this == right); }\n+\n+  std::string ToString() const;\n+};\n+\n+/**\n+ * Options for creating a Writer.\n+ */\n+class ARROW_EXPORT WriterOptions {\n\nReview comment:\n       Small naming comment: `WriterOptions` is consistent with ORC, but I think `WriteOptions` might be more consistent with other Arrow parts (or maybe `OrcWriteOptions`)\n\n##########\nFile path: python/pyarrow/_orc.pyx\n##########\n@@ -38,6 +38,283 @@ from pyarrow.lib cimport (check_status, _Weakrefable,\n                           get_writer)\n from pyarrow.lib import tobytes\n \n+cdef compression_kind_from_enum(CompressionKind compression_kind_):\n+    return {\n+        _CompressionKind_NONE: 'NONE',\n+        _CompressionKind_ZLIB: 'ZLIB',\n+        _CompressionKind_SNAPPY: 'SNAPPY',\n+        _CompressionKind_LZO: 'LZO',\n+        _CompressionKind_LZ4: 'LZ4',\n+        _CompressionKind_ZSTD: 'ZSTD',\n+    }.get(compression_kind_, 'UNKNOWN')\n+\n+cdef CompressionKind compression_kind_from_name(name):\n+    name = name.upper()\n+    if name == 'ZLIB':\n+        return _CompressionKind_ZLIB\n+    elif name == 'SNAPPY':\n+        return _CompressionKind_SNAPPY\n+    elif name == 'LZO':\n+        return _CompressionKind_LZO\n+    elif name == 'LZ4':\n+        return _CompressionKind_LZ4\n+    elif name == 'ZSTD':\n+        return _CompressionKind_ZSTD\n+    else:\n+        return _CompressionKind_NONE\n\nReview comment:\n       Can you raise an error here for an unknown compression (after checking explicitly for the None case)? So that you don't silently get no compression if you have for example a typo.\n\n##########\nFile path: python/pyarrow/orc.py\n##########\n@@ -117,8 +117,38 @@ def read(self, columns=None):\n         return self.reader.read(columns=columns)\n \n \n+_orc_writer_arg_docs = \"\"\"file_version : {\"0.11\", \"0.12\"}, default \"0.12\"\n+    Determine which ORC file version to use. Hive 0.11 / ORC v0 is the older\n+    version as defined `here <https://orc.apache.org/specification/ORCv0/>`\n+    while Hive 0.12 / ORC v1 is the newer one as defined\n+    `here <https://orc.apache.org/specification/ORCv1/>`.\n+stripe_size : int, default 64 * 1024 * 1024\n+    Size of each ORC stripe.\n+compression : string, default 'snappy'\n\nReview comment:\n       The default is ZLIB based on the C++?\n\n##########\nFile path: python/pyarrow/orc.py\n##########\n@@ -143,17 +210,52 @@ def write(self, table):\n         schema : pyarrow.lib.Table\n             The table to be written into the ORC file\n         \"\"\"\n+        assert self.is_open\n         self.writer.write(table)\n \n     def close(self):\n         \"\"\"\n         Close the ORC file\n         \"\"\"\n-        self.writer.close()\n+        if self.is_open:\n+            self.writer.close()\n+            self.is_open = False\n \n \n-def write_table(table, where):\n-    \"\"\"\n+def write_table(table, where, file_version='0.12',\n+                stripe_size=67108864,\n+                compression='snappy',\n+                compression_block_size=65536,\n+                compression_strategy='speed',\n+                row_index_stride=10000,\n+                padding_tolerance=0.0,\n+                dictionary_key_size_threshold=0.0,\n+                bloom_filter_columns=None,\n+                bloom_filter_fpp=0.05):\n+    if isinstance(where, Table):\n+        warnings.warn(\n+            \"The order of the arguments has changed. Pass as \"\n+            \"'write_table(table, where)' instead. The old order will raise \"\n+            \"an error in the future.\", FutureWarning, stacklevel=2\n+        )\n+        table, where = where, table\n+    writer = ORCWriter(\n+        where,\n+        file_version=file_version,\n+        stripe_size=stripe_size,\n+        compression=compression,\n+        compression_block_size=compression_block_size,\n+        compression_strategy=compression_strategy,\n+        row_index_stride=row_index_stride,\n+        padding_tolerance=padding_tolerance,\n+        dictionary_key_size_threshold=dictionary_key_size_threshold,\n+        bloom_filter_columns=bloom_filter_columns,\n+        bloom_filter_fpp=bloom_filter_fpp\n+    )\n+    writer.write(table)\n+    writer.close()\n+\n+    write_table.__doc__ = \"\"\"\n\nReview comment:\n       ```suggestion\r\n   \r\n   write_table.__doc__ = \"\"\"\r\n   ```\n\n##########\nFile path: python/pyarrow/_orc.pyx\n##########\n@@ -38,6 +38,283 @@ from pyarrow.lib cimport (check_status, _Weakrefable,\n                           get_writer)\n from pyarrow.lib import tobytes\n \n+cdef compression_kind_from_enum(CompressionKind compression_kind_):\n+    return {\n+        _CompressionKind_NONE: 'NONE',\n+        _CompressionKind_ZLIB: 'ZLIB',\n+        _CompressionKind_SNAPPY: 'SNAPPY',\n+        _CompressionKind_LZO: 'LZO',\n+        _CompressionKind_LZ4: 'LZ4',\n+        _CompressionKind_ZSTD: 'ZSTD',\n+    }.get(compression_kind_, 'UNKNOWN')\n+\n+cdef CompressionKind compression_kind_from_name(name):\n+    name = name.upper()\n+    if name == 'ZLIB':\n+        return _CompressionKind_ZLIB\n+    elif name == 'SNAPPY':\n+        return _CompressionKind_SNAPPY\n+    elif name == 'LZO':\n+        return _CompressionKind_LZO\n+    elif name == 'LZ4':\n+        return _CompressionKind_LZ4\n+    elif name == 'ZSTD':\n+        return _CompressionKind_ZSTD\n+    else:\n+        return _CompressionKind_NONE\n+\n+cdef compression_strategy_from_enum(CompressionStrategy compression_strategy_):\n+    return {\n+        _CompressionStrategy_SPEED: 'SPEED',\n+        _CompressionStrategy_COMPRESSION: 'COMPRESSION',\n+    }.get(compression_strategy_, 'UNKNOWN')\n+\n+cdef CompressionStrategy compression_strategy_from_name(name):\n+    name = name.upper()\n+    # SPEED is the default value in the ORC C++ implementaton\n+    if name == 'COMPRESSION':\n+        return _CompressionStrategy_COMPRESSION\n+    else:\n+        return _CompressionStrategy_SPEED\n+\n+cdef rle_version_from_enum(RleVersion rle_version_):\n+    return {\n+        _RleVersion_1: '1',\n+        _RleVersion_2: '2',\n+    }.get(rle_version_, 'UNKNOWN')\n+\n+cdef bloom_filter_version_from_enum(BloomFilterVersion bloom_filter_version_):\n+    return {\n+        _BloomFilterVersion_ORIGINAL: 'ORIGINAL',\n+        _BloomFilterVersion_UTF8: 'UTF8',\n+        _BloomFilterVersion_FUTURE: 'FUTURE',\n+    }.get(bloom_filter_version_, 'UNKNOWN')\n+\n+cdef file_version_from_class(FileVersion file_version_):\n+    cdef object file_version = file_version_.ToString()\n+    return file_version\n+\n+cdef class ORCWriterOptions(_Weakrefable):\n+    cdef:\n+        unique_ptr[WriterOptions] options\n\nReview comment:\n       Is this `ORCWriterOptions` class needed? I think the `_create_writer_options` function below can also directly construct a C++ WriterOptions object, and set the options that way? (this is how `_parquet.pyx::_create_writer_properties` does it)\r\n   \r\n   (this class is currently also not publicly exposed)\n\n##########\nFile path: python/pyarrow/_orc.pyx\n##########\n@@ -38,6 +38,283 @@ from pyarrow.lib cimport (check_status, _Weakrefable,\n                           get_writer)\n from pyarrow.lib import tobytes\n \n+cdef compression_kind_from_enum(CompressionKind compression_kind_):\n+    return {\n+        _CompressionKind_NONE: 'NONE',\n+        _CompressionKind_ZLIB: 'ZLIB',\n+        _CompressionKind_SNAPPY: 'SNAPPY',\n+        _CompressionKind_LZO: 'LZO',\n+        _CompressionKind_LZ4: 'LZ4',\n+        _CompressionKind_ZSTD: 'ZSTD',\n+    }.get(compression_kind_, 'UNKNOWN')\n+\n+cdef CompressionKind compression_kind_from_name(name):\n\nReview comment:\n       Small styling nit: can you leave 2 blank lines between module-level functions/classes?\n\n##########\nFile path: python/pyarrow/_orc.pyx\n##########\n@@ -38,6 +38,283 @@ from pyarrow.lib cimport (check_status, _Weakrefable,\n                           get_writer)\n from pyarrow.lib import tobytes\n \n+cdef compression_kind_from_enum(CompressionKind compression_kind_):\n+    return {\n+        _CompressionKind_NONE: 'NONE',\n\nReview comment:\n       We can maybe call this `UNCOMPRESSED` ?\n\n##########\nFile path: cpp/src/arrow/adapters/orc/adapter_options.cc\n##########\n@@ -0,0 +1,283 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/adapters/orc/adapter_options.h\"\n+\n+#include \"arrow/adapters/orc/adapter.h\"\n+#include \"orc/Common.hh\"\n+#include \"orc/Int128.hh\"\n+#include \"orc/Writer.hh\"\n+\n+namespace liborc = orc;\n+\n+namespace arrow {\n+\n+namespace adapters {\n+\n+namespace orc {\n+\n+std::string FileVersion::ToString() const {\n+  std::stringstream ss;\n+  ss << major() << '.' << minor();\n+  return ss.str();\n+}\n+\n+const FileVersion& FileVersion::v_0_11() {\n+  static FileVersion version(0, 11);\n+  return version;\n+}\n+\n+const FileVersion& FileVersion::v_0_12() {\n+  static FileVersion version(0, 12);\n+  return version;\n+}\n+\n+struct WriterOptionsPrivate {\n+  uint64_t stripe_size_;\n+  uint64_t compression_block_size_;\n+  uint64_t row_index_stride_;\n+  CompressionKind compression_;\n+  CompressionStrategy compression_strategy_;\n+  liborc::MemoryPool* memory_pool_;\n+  double padding_tolerance_;\n+  std::ostream* error_stream_;\n+  FileVersion file_version_;\n+  double dictionary_key_size_threshold_;\n+  bool enable_index_;\n+  std::set<uint64_t> columns_use_bloom_filter_;\n+  double bloom_filter_false_positive_prob_;\n+  BloomFilterVersion bloom_filter_version_;\n+\n+  WriterOptionsPrivate() : file_version_(FileVersion::v_0_12()) {\n+    stripe_size_ = 64 * 1024 * 1024;      // 64M\n+    compression_block_size_ = 64 * 1024;  // 64K\n+    row_index_stride_ = 10000;\n+    compression_ = CompressionKind_ZLIB;\n+    compression_strategy_ = CompressionStrategy_SPEED;\n+    memory_pool_ = liborc::getDefaultPool();\n+    padding_tolerance_ = 0.0;\n+    error_stream_ = &std::cerr;\n+    dictionary_key_size_threshold_ = 0.0;\n+    enable_index_ = true;\n+    bloom_filter_false_positive_prob_ = 0.05;\n+    bloom_filter_version_ = UTF8;\n+  }\n+};\n+\n+WriterOptions::WriterOptions()\n+    : private_bits_(std::unique_ptr<WriterOptionsPrivate>(new WriterOptionsPrivate())) {\n+  // PASS\n+}\n+\n+WriterOptions::WriterOptions(const WriterOptions& rhs)\n+    : private_bits_(std::unique_ptr<WriterOptionsPrivate>(\n+          new WriterOptionsPrivate(*(rhs.private_bits_.get())))) {\n+  // PASS\n+}\n+\n+WriterOptions::WriterOptions(WriterOptions& rhs) {\n+  // swap private_bits with rhs\n+  private_bits_.swap(rhs.private_bits_);\n+}\n+\n+WriterOptions& WriterOptions::operator=(const WriterOptions& rhs) {\n+  if (this != &rhs) {\n+    private_bits_.reset(new WriterOptionsPrivate(*(rhs.private_bits_.get())));\n+  }\n+  return *this;\n+}\n+\n+WriterOptions::~WriterOptions() {\n+  // PASS\n+}\n+RleVersion WriterOptions::rle_version() const {\n+  if (private_bits_->file_version_ == FileVersion::v_0_11()) {\n+    return RleVersion_1;\n+  }\n+\n+  return RleVersion_2;\n+}\n+\n+WriterOptions& WriterOptions::set_stripe_size(uint64_t size) {\n+  private_bits_->stripe_size_ = size;\n\nReview comment:\n       Wondering for the implementation strategy: now it seems you mimic the WriterOptions class from the ORC library (including the private_bits way), and in the end have one function that converts our Options class into a liborc Options class. \r\n   Would an alternative be to have our WriterOptions class wrap more directly liborc? So that eg this `set_stripe_size` method would call `orc_writer_options_->setStripeSize(size)` (more directly forwarding the calls to liborc::WriterOptions)\r\n   \r\n   (just wondering, I don't know if that's necessarily better) \n\n##########\nFile path: python/pyarrow/orc.py\n##########\n@@ -117,8 +117,38 @@ def read(self, columns=None):\n         return self.reader.read(columns=columns)\n \n \n+_orc_writer_arg_docs = \"\"\"file_version : {\"0.11\", \"0.12\"}, default \"0.12\"\n+    Determine which ORC file version to use. Hive 0.11 / ORC v0 is the older\n+    version as defined `here <https://orc.apache.org/specification/ORCv0/>`\n+    while Hive 0.12 / ORC v1 is the newer one as defined\n+    `here <https://orc.apache.org/specification/ORCv1/>`.\n+stripe_size : int, default 64 * 1024 * 1024\n+    Size of each ORC stripe.\n+compression : string, default 'snappy'\n+    Specify the compression codec.\n+    Valid values: {'NONE', 'SNAPPY', 'ZLIB', 'LZ0', 'LZ4', 'ZSTD'}\n+compression_block_size : int, default 64 * 1024\n+    Specify the size of each compression block.\n+compression_strategy : string, default 'speed'\n+    Specify the compression strategy i.e. speed vs size reduction.\n+    Valid values: {'SPEED', 'COMPRESSION'}\n+row_index_stride : int, default 10000\n+    Specify the row index stride i.e. the number of rows per\n+    an entry in the row index.\n+padding_tolerance : double, default 0.0\n+    Set the padding tolerance.\n+dictionary_key_size_threshold : double, default 0.0\n+    Specify if we should write statistics in general (default is True) or only\n+    for some columns.\n\nReview comment:\n       I think this can use some more explanation of the link between the default of True being 0.0\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-29T13:18:39.418+0000",
                    "updated": "2021-11-29T13:18:39.418+0000",
                    "started": "2021-11-29T13:18:39.418+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "687313",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/687746",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on a change in pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#discussion_r758913156\n\n\n\n##########\nFile path: python/pyarrow/_orc.pyx\n##########\n@@ -38,6 +38,283 @@ from pyarrow.lib cimport (check_status, _Weakrefable,\n                           get_writer)\n from pyarrow.lib import tobytes\n \n+cdef compression_kind_from_enum(CompressionKind compression_kind_):\n+    return {\n+        _CompressionKind_NONE: 'NONE',\n+        _CompressionKind_ZLIB: 'ZLIB',\n+        _CompressionKind_SNAPPY: 'SNAPPY',\n+        _CompressionKind_LZO: 'LZO',\n+        _CompressionKind_LZ4: 'LZ4',\n+        _CompressionKind_ZSTD: 'ZSTD',\n+    }.get(compression_kind_, 'UNKNOWN')\n+\n+cdef CompressionKind compression_kind_from_name(name):\n+    name = name.upper()\n+    if name == 'ZLIB':\n+        return _CompressionKind_ZLIB\n+    elif name == 'SNAPPY':\n+        return _CompressionKind_SNAPPY\n+    elif name == 'LZO':\n+        return _CompressionKind_LZO\n+    elif name == 'LZ4':\n+        return _CompressionKind_LZ4\n+    elif name == 'ZSTD':\n+        return _CompressionKind_ZSTD\n+    else:\n+        return _CompressionKind_NONE\n+\n+cdef compression_strategy_from_enum(CompressionStrategy compression_strategy_):\n+    return {\n+        _CompressionStrategy_SPEED: 'SPEED',\n+        _CompressionStrategy_COMPRESSION: 'COMPRESSION',\n+    }.get(compression_strategy_, 'UNKNOWN')\n+\n+cdef CompressionStrategy compression_strategy_from_name(name):\n+    name = name.upper()\n+    # SPEED is the default value in the ORC C++ implementaton\n+    if name == 'COMPRESSION':\n+        return _CompressionStrategy_COMPRESSION\n+    else:\n+        return _CompressionStrategy_SPEED\n+\n+cdef rle_version_from_enum(RleVersion rle_version_):\n+    return {\n+        _RleVersion_1: '1',\n+        _RleVersion_2: '2',\n+    }.get(rle_version_, 'UNKNOWN')\n+\n+cdef bloom_filter_version_from_enum(BloomFilterVersion bloom_filter_version_):\n+    return {\n+        _BloomFilterVersion_ORIGINAL: 'ORIGINAL',\n+        _BloomFilterVersion_UTF8: 'UTF8',\n+        _BloomFilterVersion_FUTURE: 'FUTURE',\n+    }.get(bloom_filter_version_, 'UNKNOWN')\n+\n+cdef file_version_from_class(FileVersion file_version_):\n+    cdef object file_version = file_version_.ToString()\n+    return file_version\n+\n+cdef class ORCWriterOptions(_Weakrefable):\n+    cdef:\n+        unique_ptr[WriterOptions] options\n\nReview comment:\n       I wonder whether people would enjoy having `WriteOptions` as a Python class. I know that the CSV writer has it while the Parquet one doesn't so I'm conflicted.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-30T03:58:48.017+0000",
                    "updated": "2021-11-30T03:58:48.017+0000",
                    "started": "2021-11-30T03:58:48.017+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "687746",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/687747",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on a change in pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#discussion_r758913342\n\n\n\n##########\nFile path: python/pyarrow/orc.py\n##########\n@@ -117,8 +117,38 @@ def read(self, columns=None):\n         return self.reader.read(columns=columns)\n \n \n+_orc_writer_arg_docs = \"\"\"file_version : {\"0.11\", \"0.12\"}, default \"0.12\"\n+    Determine which ORC file version to use. Hive 0.11 / ORC v0 is the older\n+    version as defined `here <https://orc.apache.org/specification/ORCv0/>`\n+    while Hive 0.12 / ORC v1 is the newer one as defined\n+    `here <https://orc.apache.org/specification/ORCv1/>`.\n+stripe_size : int, default 64 * 1024 * 1024\n+    Size of each ORC stripe.\n+compression : string, default 'snappy'\n\nReview comment:\n       I used the snappy for it is also the default in Parquet. Sure I can fix that.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-30T03:59:22.857+0000",
                    "updated": "2021-11-30T03:59:22.857+0000",
                    "started": "2021-11-30T03:59:22.857+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "687747",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/687748",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on a change in pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#discussion_r758913948\n\n\n\n##########\nFile path: cpp/src/arrow/adapters/orc/adapter_options.cc\n##########\n@@ -0,0 +1,283 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/adapters/orc/adapter_options.h\"\n+\n+#include \"arrow/adapters/orc/adapter.h\"\n+#include \"orc/Common.hh\"\n+#include \"orc/Int128.hh\"\n+#include \"orc/Writer.hh\"\n+\n+namespace liborc = orc;\n+\n+namespace arrow {\n+\n+namespace adapters {\n+\n+namespace orc {\n+\n+std::string FileVersion::ToString() const {\n+  std::stringstream ss;\n+  ss << major() << '.' << minor();\n+  return ss.str();\n+}\n+\n+const FileVersion& FileVersion::v_0_11() {\n+  static FileVersion version(0, 11);\n+  return version;\n+}\n+\n+const FileVersion& FileVersion::v_0_12() {\n+  static FileVersion version(0, 12);\n+  return version;\n+}\n+\n+struct WriterOptionsPrivate {\n+  uint64_t stripe_size_;\n+  uint64_t compression_block_size_;\n+  uint64_t row_index_stride_;\n+  CompressionKind compression_;\n+  CompressionStrategy compression_strategy_;\n+  liborc::MemoryPool* memory_pool_;\n+  double padding_tolerance_;\n+  std::ostream* error_stream_;\n+  FileVersion file_version_;\n+  double dictionary_key_size_threshold_;\n+  bool enable_index_;\n+  std::set<uint64_t> columns_use_bloom_filter_;\n+  double bloom_filter_false_positive_prob_;\n+  BloomFilterVersion bloom_filter_version_;\n+\n+  WriterOptionsPrivate() : file_version_(FileVersion::v_0_12()) {\n+    stripe_size_ = 64 * 1024 * 1024;      // 64M\n+    compression_block_size_ = 64 * 1024;  // 64K\n+    row_index_stride_ = 10000;\n+    compression_ = CompressionKind_ZLIB;\n+    compression_strategy_ = CompressionStrategy_SPEED;\n+    memory_pool_ = liborc::getDefaultPool();\n+    padding_tolerance_ = 0.0;\n+    error_stream_ = &std::cerr;\n+    dictionary_key_size_threshold_ = 0.0;\n+    enable_index_ = true;\n+    bloom_filter_false_positive_prob_ = 0.05;\n+    bloom_filter_version_ = UTF8;\n+  }\n+};\n+\n+WriterOptions::WriterOptions()\n+    : private_bits_(std::unique_ptr<WriterOptionsPrivate>(new WriterOptionsPrivate())) {\n+  // PASS\n+}\n+\n+WriterOptions::WriterOptions(const WriterOptions& rhs)\n+    : private_bits_(std::unique_ptr<WriterOptionsPrivate>(\n+          new WriterOptionsPrivate(*(rhs.private_bits_.get())))) {\n+  // PASS\n+}\n+\n+WriterOptions::WriterOptions(WriterOptions& rhs) {\n+  // swap private_bits with rhs\n+  private_bits_.swap(rhs.private_bits_);\n+}\n+\n+WriterOptions& WriterOptions::operator=(const WriterOptions& rhs) {\n+  if (this != &rhs) {\n+    private_bits_.reset(new WriterOptionsPrivate(*(rhs.private_bits_.get())));\n+  }\n+  return *this;\n+}\n+\n+WriterOptions::~WriterOptions() {\n+  // PASS\n+}\n+RleVersion WriterOptions::rle_version() const {\n+  if (private_bits_->file_version_ == FileVersion::v_0_11()) {\n+    return RleVersion_1;\n+  }\n+\n+  return RleVersion_2;\n+}\n+\n+WriterOptions& WriterOptions::set_stripe_size(uint64_t size) {\n+  private_bits_->stripe_size_ = size;\n\nReview comment:\n       I do think your proposal is shorter and more straightforward. More importantly we shouldn't keep a copy of ORC internals ourselves that can easily become outdated as ORC changes. I will make the change.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-30T04:01:41.447+0000",
                    "updated": "2021-11-30T04:01:41.447+0000",
                    "started": "2021-11-30T04:01:41.447+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "687748",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/687749",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on a change in pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#discussion_r758914561\n\n\n\n##########\nFile path: cpp/src/arrow/adapters/orc/adapter_options.h\n##########\n@@ -0,0 +1,269 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <set>\n+#include <sstream>\n+\n+#include \"arrow/io/interfaces.h\"\n+#include \"arrow/util/visibility.h\"\n+#include \"orc/OrcFile.hh\"\n+\n+namespace liborc = orc;\n+\n+namespace arrow {\n+\n+namespace adapters {\n+\n+namespace orc {\n+// Components of ORC Writer Options\n+\n+struct WriterOptionsPrivate;\n+\n+enum CompressionKind {\n+  CompressionKind_NONE = 0,\n+  CompressionKind_ZLIB = 1,\n+  CompressionKind_SNAPPY = 2,\n+  CompressionKind_LZO = 3,\n+  CompressionKind_LZ4 = 4,\n+  CompressionKind_ZSTD = 5,\n+  CompressionKind_MAX = INT32_MAX\n+};\n+\n+enum CompressionStrategy {\n+  CompressionStrategy_SPEED = 0,\n+  CompressionStrategy_COMPRESSION\n+};\n+\n+enum RleVersion { RleVersion_1 = 0, RleVersion_2 = 1 };\n+\n+enum BloomFilterVersion {\n+  // Include both the BLOOM_FILTER and BLOOM_FILTER_UTF8 streams to support\n+  // both old and new readers.\n+  ORIGINAL = 0,\n+  // Only include the BLOOM_FILTER_UTF8 streams that consistently use UTF8.\n+  // See ORC-101\n+  UTF8 = 1,\n+  FUTURE = INT32_MAX\n+};\n+\n+class ARROW_EXPORT FileVersion {\n+ private:\n+  uint32_t major_version;\n+  uint32_t minor_version;\n+\n+ public:\n+  static const FileVersion& v_0_11();\n+  static const FileVersion& v_0_12();\n+\n+  FileVersion(uint32_t major, uint32_t minor)\n+      : major_version(major), minor_version(minor) {}\n+\n+  /**\n+   * Get major version\n+   */\n+  uint32_t major() const { return this->major_version; }\n+\n+  /**\n+   * Get minor version\n+   */\n+  uint32_t minor() const { return this->minor_version; }\n+\n+  bool operator==(const FileVersion& right) const {\n+    return this->major_version == right.major() && this->minor_version == right.minor();\n+  }\n+\n+  bool operator!=(const FileVersion& right) const { return !(*this == right); }\n+\n+  std::string ToString() const;\n+};\n+\n+/**\n+ * Options for creating a Writer.\n+ */\n+class ARROW_EXPORT WriterOptions {\n\nReview comment:\n       Sure! I guess `arrow::adapters::orc::WriteOptions` will be fine and already denote that we are working with ORC as opposed to some other format. In Python on the other hand we probably should name it `ORCWriteOptions` if we want to keep it as a class.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-30T04:03:36.582+0000",
                    "updated": "2021-11-30T04:03:36.582+0000",
                    "started": "2021-11-30T04:03:36.582+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "687749",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/687750",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on a change in pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#discussion_r758914859\n\n\n\n##########\nFile path: python/pyarrow/orc.py\n##########\n@@ -117,8 +117,38 @@ def read(self, columns=None):\n         return self.reader.read(columns=columns)\n \n \n+_orc_writer_arg_docs = \"\"\"file_version : {\"0.11\", \"0.12\"}, default \"0.12\"\n+    Determine which ORC file version to use. Hive 0.11 / ORC v0 is the older\n+    version as defined `here <https://orc.apache.org/specification/ORCv0/>`\n+    while Hive 0.12 / ORC v1 is the newer one as defined\n+    `here <https://orc.apache.org/specification/ORCv1/>`.\n+stripe_size : int, default 64 * 1024 * 1024\n+    Size of each ORC stripe.\n+compression : string, default 'snappy'\n+    Specify the compression codec.\n+    Valid values: {'NONE', 'SNAPPY', 'ZLIB', 'LZ0', 'LZ4', 'ZSTD'}\n+compression_block_size : int, default 64 * 1024\n+    Specify the size of each compression block.\n+compression_strategy : string, default 'speed'\n+    Specify the compression strategy i.e. speed vs size reduction.\n+    Valid values: {'SPEED', 'COMPRESSION'}\n+row_index_stride : int, default 10000\n+    Specify the row index stride i.e. the number of rows per\n+    an entry in the row index.\n+padding_tolerance : double, default 0.0\n+    Set the padding tolerance.\n+dictionary_key_size_threshold : double, default 0.0\n+    Specify if we should write statistics in general (default is True) or only\n+    for some columns.\n\nReview comment:\n       Oops there is something weird about this. Sorry. Fixed.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-30T04:04:39.410+0000",
                    "updated": "2021-11-30T04:04:39.410+0000",
                    "started": "2021-11-30T04:04:39.410+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "687750",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/688418",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on a change in pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#discussion_r759849832\n\n\n\n##########\nFile path: python/pyarrow/_orc.pyx\n##########\n@@ -38,6 +38,283 @@ from pyarrow.lib cimport (check_status, _Weakrefable,\n                           get_writer)\n from pyarrow.lib import tobytes\n \n+cdef compression_kind_from_enum(CompressionKind compression_kind_):\n+    return {\n+        _CompressionKind_NONE: 'NONE',\n\nReview comment:\n       Fixed!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-01T04:43:10.885+0000",
                    "updated": "2021-12-01T04:43:10.885+0000",
                    "started": "2021-12-01T04:43:10.885+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "688418",
                    "issueId": "13352962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/worklog/688420",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on a change in pull request #9702:\nURL: https://github.com/apache/arrow/pull/9702#discussion_r759850713\n\n\n\n##########\nFile path: python/pyarrow/_orc.pyx\n##########\n@@ -38,6 +38,283 @@ from pyarrow.lib cimport (check_status, _Weakrefable,\n                           get_writer)\n from pyarrow.lib import tobytes\n \n+cdef compression_kind_from_enum(CompressionKind compression_kind_):\n+    return {\n+        _CompressionKind_NONE: 'NONE',\n+        _CompressionKind_ZLIB: 'ZLIB',\n+        _CompressionKind_SNAPPY: 'SNAPPY',\n+        _CompressionKind_LZO: 'LZO',\n+        _CompressionKind_LZ4: 'LZ4',\n+        _CompressionKind_ZSTD: 'ZSTD',\n+    }.get(compression_kind_, 'UNKNOWN')\n+\n+cdef CompressionKind compression_kind_from_name(name):\n+    name = name.upper()\n+    if name == 'ZLIB':\n+        return _CompressionKind_ZLIB\n+    elif name == 'SNAPPY':\n+        return _CompressionKind_SNAPPY\n+    elif name == 'LZO':\n+        return _CompressionKind_LZO\n+    elif name == 'LZ4':\n+        return _CompressionKind_LZ4\n+    elif name == 'ZSTD':\n+        return _CompressionKind_ZSTD\n+    else:\n+        return _CompressionKind_NONE\n\nReview comment:\n       Fixed! Note that the None case is obviously 'uncompressed'.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-01T04:46:22.644+0000",
                    "updated": "2021-12-01T04:46:22.644+0000",
                    "started": "2021-12-01T04:46:22.644+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "688420",
                    "issueId": "13352962"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 88200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1e752d2f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1167f5af[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1eb858c8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@30dc0c3d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@445552af[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@75537921[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2971015b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@791c4dac[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1732a80a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@79c651bc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@589cec06[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4376ab94[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 88200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jan 20 14:41:54 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-20T14:41:54.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11297/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2021-01-18T04:18:51.000+0000",
        "updated": "2022-01-25T17:10:36.000+0000",
        "timeoriginalestimate": null,
        "description": "Implement orc::WriterOptions in Arrow and add it to the Arrow ORC reader in C++ and Python.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "24.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 88200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Python] Add WriterOptions for ORC",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/comment/17322249",
                    "id": "17322249",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Postponing to 5.0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2021-04-15T15:01:45.060+0000",
                    "updated": "2021-04-15T15:01:45.060+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/comment/17478489",
                    "id": "17478489",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Postponing to 8.0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2022-01-19T09:41:27.764+0000",
                    "updated": "2022-01-19T09:41:27.764+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352962/comment/17479413",
                    "id": "17479413",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 9702\n[https://github.com/apache/arrow/pull/9702]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-01-20T14:41:54.528+0000",
                    "updated": "2022-01-20T14:41:54.528+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z0mpi0:",
        "customfield_12314139": null
    }
}