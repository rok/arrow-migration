{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13244102",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102",
    "key": "ARROW-5902",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "aggregateprogress": {
            "progress": 18000,
            "total": 18000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 18000,
            "total": 18000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5902/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 32,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/274848",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4846: ARROW-5902: [Java][WIP] Implement HashTable for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846\n \n \n   As discussed in https://github.com/apache/arrow/pull/4792\r\n   \r\n   Implement a hash table to only store hash & index, meanwhile add check equal function in ValueVector API.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T12:48:28.414+0000",
                    "updated": "2019-07-10T12:48:28.414+0000",
                    "started": "2019-07-10T12:48:28.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274848",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/274852",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #4846: ARROW-5902: [Java][WIP] Implement HashTable for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#issuecomment-510047410\n \n \n   @emkornfield Hi Micah, I made a simple implementation for dictionary hash table.\r\n   1 Implement hash table to store dictionary vector hash & index, support lookup with given toEncode vector index.\r\n   2 add hashCode and equals methods in ValueVector API.\r\n   Please take a look and give some comments, thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T12:50:49.449+0000",
                    "updated": "2019-07-10T12:50:49.449+0000",
                    "started": "2019-07-10T12:50:49.447+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274852",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/275165",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4846: ARROW-5902: [Java][WIP] Implement HashTable for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#discussion_r302357466\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ValueVector.java\n ##########\n @@ -237,4 +237,10 @@\n    * @return true if element is null\n    */\n   boolean isNull(int index);\n+\n+  //TODO remove default\n+  default int hashCode(int index) {return 0;}\n+\n+  //TODO remove default\n+  default boolean equals(int index, ValueVector to, int toIndex) {return false;}\n \n Review comment:\n   What is the reason of providing default implementations?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T04:13:40.092+0000",
                    "updated": "2019-07-11T04:13:40.092+0000",
                    "started": "2019-07-11T04:13:40.091+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275165",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/275169",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4846: ARROW-5902: [Java][WIP] Implement HashTable for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#discussion_r302357839\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/VarCharVector.java\n ##########\n @@ -270,6 +273,21 @@ public void setSafe(int index, Text text) {\n     setSafe(index, text.getBytes(), 0, text.getLength());\n   }\n \n+  @Override\n+  public int hashCode (int index) {\n+    //TODO cal hashCode in memory level\n+    byte[] values = get(index);\n+    return Arrays.hashCode(values);\n+  }\n+\n+  @Override\n+  public boolean equals(int index, ValueVector to, int toIndex) {\n+    //TODO compare value in memory level\n+    String value1 = this.getObject(index).toString();\n+    String value2 = to.getObject(toIndex).toString();\n \n Review comment:\n   Also, there are unnecessary memory copies here. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T04:16:22.267+0000",
                    "updated": "2019-07-11T04:16:22.267+0000",
                    "started": "2019-07-11T04:16:22.267+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275169",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/275171",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #4846: ARROW-5902: [Java][WIP] Implement HashTable for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#issuecomment-510323075\n \n \n   @liyafan82 Thanks for your comments, This PR is just a demo as I commented as WIP and this will work for VarCharVector type encoding in TestDictionaryVector to test correctness. default and memory copy already commented as TODO to make it perfect since we have to use memory level hashCode and implement equals in all type vectors.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T04:20:12.646+0000",
                    "updated": "2019-07-11T04:20:12.646+0000",
                    "started": "2019-07-11T04:20:12.645+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275171",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/275174",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4846: ARROW-5902: [Java][WIP] Implement HashTable for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#discussion_r302358747\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/VarCharVector.java\n ##########\n @@ -270,6 +273,21 @@ public void setSafe(int index, Text text) {\n     setSafe(index, text.getBytes(), 0, text.getLength());\n   }\n \n+  @Override\n+  public int hashCode (int index) {\n+    //TODO cal hashCode in memory level\n+    byte[] values = get(index);\n+    return Arrays.hashCode(values);\n+  }\n+\n+  @Override\n+  public boolean equals(int index, ValueVector to, int toIndex) {\n+    //TODO compare value in memory level\n+    String value1 = this.getObject(index).toString();\n+    String value2 = to.getObject(toIndex).toString();\n \n Review comment:\n   Sure, this should be done use something like ByteFunctionHelpers#equals\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T04:22:38.252+0000",
                    "updated": "2019-07-11T04:22:38.252+0000",
                    "started": "2019-07-11T04:22:38.252+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275174",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/276288",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4846: ARROW-5902: [Java] Implement hash table and equals & hashCode API for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#issuecomment-511122408\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4846?src=pr&el=h1) Report\n   > Merging [#4846](https://codecov.io/gh/apache/arrow/pull/4846?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/0325324722f17f86a2161d125240620433a449de?src=pr&el=desc) will **increase** coverage by `2.51%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4846/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4846?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4846      +/-   ##\n   ==========================================\n   + Coverage   87.06%   89.58%   +2.51%     \n   ==========================================\n     Files         883      661     -222     \n     Lines      116941    96860   -20081     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       101819    86774   -15045     \n   + Misses      14760    10086    -4674     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4846?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/4846/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `97.66% <0%> (-0.94%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4846/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4846/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/4846/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/4846/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4846/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/4846/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/4846/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/4846/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | [rust/datafusion/src/bin/main.rs](https://codecov.io/gh/apache/arrow/pull/4846/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9iaW4vbWFpbi5ycw==) | | |\n   | ... and [513 more](https://codecov.io/gh/apache/arrow/pull/4846/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4846?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4846?src=pr&el=footer). Last update [0325324...be38c5f](https://codecov.io/gh/apache/arrow/pull/4846?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-13T13:31:26.246+0000",
                    "updated": "2019-07-13T13:31:26.246+0000",
                    "started": "2019-07-13T13:31:26.246+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276288",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/277171",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4846: ARROW-5902: [Java] Implement hash table and equals & hashCode API for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#discussion_r303714610\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/util/ByteFunctionHelpers.java\n ##########\n @@ -49,6 +49,45 @@ public static final int equal(final ArrowBuf left, int lStart, int lEnd, final A\n     return memEqual(left.memoryAddress(), lStart, lEnd, right.memoryAddress(), rStart, rEnd);\n   }\n \n+  /**\n+   * Compute hashCode with the given {@link ArrowBuf} and start/end index.\n+   */\n+  public static final int hash(final ArrowBuf buf, int start, int end) {\n+    long addr = buf.memoryAddress();\n+    int len = end - start;\n+    long pos = addr + start;\n+\n+    int hash = 0;\n+\n+    while (len > 7) {\n+      long value = PlatformDependent.getLong(pos);\n+      hash = comebineHash(hash, Long.hashCode(value));\n+\n+      pos += 8;\n+      len -= 8;\n+    }\n+\n+    while (len > 3) {\n+      int value = PlatformDependent.getInt(pos);\n+      hash = comebineHash(hash, Integer.hashCode(value));\n \n Review comment:\n   this is a no-op I believe.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T03:23:07.459+0000",
                    "updated": "2019-07-16T03:23:07.459+0000",
                    "started": "2019-07-16T03:23:07.458+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277171",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/277174",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4846: ARROW-5902: [Java] Implement hash table and equals & hashCode API for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#discussion_r303714647\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/util/ByteFunctionHelpers.java\n ##########\n @@ -49,6 +49,45 @@ public static final int equal(final ArrowBuf left, int lStart, int lEnd, final A\n     return memEqual(left.memoryAddress(), lStart, lEnd, right.memoryAddress(), rStart, rEnd);\n   }\n \n+  /**\n+   * Compute hashCode with the given {@link ArrowBuf} and start/end index.\n+   */\n+  public static final int hash(final ArrowBuf buf, int start, int end) {\n+    long addr = buf.memoryAddress();\n+    int len = end - start;\n+    long pos = addr + start;\n+\n+    int hash = 0;\n+\n+    while (len > 7) {\n+      long value = PlatformDependent.getLong(pos);\n+      hash = comebineHash(hash, Long.hashCode(value));\n+\n+      pos += 8;\n+      len -= 8;\n+    }\n+\n+    while (len > 3) {\n+      int value = PlatformDependent.getInt(pos);\n+      hash = comebineHash(hash, Integer.hashCode(value));\n+\n+      pos += 4;\n+      len -= 4;\n+    }\n+\n+    while (len-- != 0) {\n+      byte value = PlatformDependent.getByte(pos);\n+      hash = comebineHash(hash, Byte.hashCode(value));\n \n Review comment:\n   this is also a no-op\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T03:30:47.360+0000",
                    "updated": "2019-07-16T03:30:47.360+0000",
                    "started": "2019-07-16T03:30:47.359+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277174",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/277175",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4846: ARROW-5902: [Java] Implement hash table and equals & hashCode API for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#discussion_r303715246\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/types/pojo/TestExtensionType.java\n ##########\n @@ -204,6 +205,14 @@ public UUID getObject(int index) {\n       return new UUID(bb.getLong(), bb.getLong());\n     }\n \n+    @Override public int hashCode(int index) {\n \n Review comment:\n   newline?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T03:30:47.377+0000",
                    "updated": "2019-07-16T03:30:47.377+0000",
                    "started": "2019-07-16T03:30:47.376+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277175",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/277176",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4846: ARROW-5902: [Java] Implement hash table and equals & hashCode API for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#discussion_r303714851\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/FixedSizeListVector.java\n ##########\n @@ -496,6 +496,37 @@ public TransferPair makeTransferPair(ValueVector target) {\n     return new TransferImpl((FixedSizeListVector) target);\n   }\n \n+  @Override\n+  public int hashCode(int index) {\n+    if (isSet(index) == 0) {\n+      return 0;\n+    }\n+    int hash = 0;\n+    for (int i = 0; i < listSize; i++) {\n+      hash = 31 * vector.hashCode(index * listSize + i);\n \n Review comment:\n   do you mean += here?\r\n   or maybe hash = 31 * hash + vector.hashCode(index * listSize + i);\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T03:30:47.436+0000",
                    "updated": "2019-07-16T03:30:47.436+0000",
                    "started": "2019-07-16T03:30:47.436+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277176",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/277177",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4846: ARROW-5902: [Java] Implement hash table and equals & hashCode API for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#discussion_r303715386\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/types/pojo/TestExtensionType.java\n ##########\n @@ -204,6 +205,14 @@ public UUID getObject(int index) {\n       return new UUID(bb.getLong(), bb.getLong());\n     }\n \n+    @Override public int hashCode(int index) {\n+      return 0;\n+    }\n+\n+    @Override public boolean equals(int index, ValueVector to, int toIndex) {\n+      return false;\n \n Review comment:\n   I think by default extensiontype should delegate to its underlying valuevector for hash/equality\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T03:30:47.438+0000",
                    "updated": "2019-07-16T03:30:47.438+0000",
                    "started": "2019-07-16T03:30:47.438+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277177",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/277178",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4846: ARROW-5902: [Java] Implement hash table and equals & hashCode API for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#discussion_r303715631\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ZeroVector.java\n ##########\n @@ -244,4 +244,14 @@ public int getNullCount() {\n   public boolean isNull(int index) {\n     return false;\n   }\n+\n+  @Override\n+  public int hashCode(int index) {\n+    return 0;\n+  }\n+\n+  @Override\n+  public boolean equals(int index, ValueVector to, int toIndex) {\n+    return false;\n \n Review comment:\n   this should probably be isNull on to?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T03:30:47.459+0000",
                    "updated": "2019-07-16T03:30:47.459+0000",
                    "started": "2019-07-16T03:30:47.459+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277178",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/277179",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4846: ARROW-5902: [Java] Implement hash table and equals & hashCode API for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#discussion_r303715453\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/util/ByteFunctionHelpers.java\n ##########\n @@ -49,6 +49,45 @@ public static final int equal(final ArrowBuf left, int lStart, int lEnd, final A\n     return memEqual(left.memoryAddress(), lStart, lEnd, right.memoryAddress(), rStart, rEnd);\n   }\n \n+  /**\n+   * Compute hashCode with the given {@link ArrowBuf} and start/end index.\n+   */\n+  public static final int hash(final ArrowBuf buf, int start, int end) {\n+    long addr = buf.memoryAddress();\n+    int len = end - start;\n+    long pos = addr + start;\n+\n+    int hash = 0;\n+\n+    while (len > 7) {\n+      long value = PlatformDependent.getLong(pos);\n+      hash = comebineHash(hash, Long.hashCode(value));\n+\n+      pos += 8;\n+      len -= 8;\n+    }\n+\n+    while (len > 3) {\n+      int value = PlatformDependent.getInt(pos);\n+      hash = comebineHash(hash, Integer.hashCode(value));\n+\n+      pos += 4;\n+      len -= 4;\n+    }\n+\n+    while (len-- != 0) {\n+      byte value = PlatformDependent.getByte(pos);\n+      hash = comebineHash(hash, Byte.hashCode(value));\n+      pos ++;\n+    }\n+\n+    return hash;\n+  }\n+\n+  private static int comebineHash(int currentHash, int newHash) {\n \n Review comment:\n   maybe make this public and use it where you combing hashes?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T03:30:47.461+0000",
                    "updated": "2019-07-16T03:30:47.461+0000",
                    "started": "2019-07-16T03:30:47.460+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277179",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/277180",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4846: ARROW-5902: [Java] Implement hash table and equals & hashCode API for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#discussion_r303715668\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ValueVector.java\n ##########\n @@ -237,4 +237,10 @@\n    * @return true if element is null\n    */\n   boolean isNull(int index);\n+\n+  //TODO remove default and implement in subclasses\n+  int hashCode(int index);\n+\n+  //TODO remove default and implement in subclasses\n \n Review comment:\n   it looks like this and the above TODO are done?  Or are more necessary?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T03:30:47.503+0000",
                    "updated": "2019-07-16T03:30:47.503+0000",
                    "started": "2019-07-16T03:30:47.503+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277180",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/277192",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4846: ARROW-5902: [Java] Implement hash table and equals & hashCode API for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#discussion_r303725034\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/util/ByteFunctionHelpers.java\n ##########\n @@ -49,6 +49,45 @@ public static final int equal(final ArrowBuf left, int lStart, int lEnd, final A\n     return memEqual(left.memoryAddress(), lStart, lEnd, right.memoryAddress(), rStart, rEnd);\n   }\n \n+  /**\n+   * Compute hashCode with the given {@link ArrowBuf} and start/end index.\n+   */\n+  public static final int hash(final ArrowBuf buf, int start, int end) {\n+    long addr = buf.memoryAddress();\n+    int len = end - start;\n+    long pos = addr + start;\n+\n+    int hash = 0;\n+\n+    while (len > 7) {\n+      long value = PlatformDependent.getLong(pos);\n+      hash = comebineHash(hash, Long.hashCode(value));\n+\n+      pos += 8;\n+      len -= 8;\n+    }\n+\n+    while (len > 3) {\n+      int value = PlatformDependent.getInt(pos);\n+      hash = comebineHash(hash, Integer.hashCode(value));\n \n Review comment:\n   Thanks for comments, IMO, what dose this mean? :)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T04:39:43.781+0000",
                    "updated": "2019-07-16T04:39:43.781+0000",
                    "started": "2019-07-16T04:39:43.780+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277192",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/277301",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4846: ARROW-5902: [Java] Implement hash table and equals & hashCode API for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#discussion_r303771181\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/FixedSizeListVector.java\n ##########\n @@ -496,6 +496,37 @@ public TransferPair makeTransferPair(ValueVector target) {\n     return new TransferImpl((FixedSizeListVector) target);\n   }\n \n+  @Override\n+  public int hashCode(int index) {\n+    if (isSet(index) == 0) {\n+      return 0;\n+    }\n+    int hash = 0;\n+    for (int i = 0; i < listSize; i++) {\n+      hash = 31 * vector.hashCode(index * listSize + i);\n \n Review comment:\n   Thanks, you are right, fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T07:54:36.621+0000",
                    "updated": "2019-07-16T07:54:36.621+0000",
                    "started": "2019-07-16T07:54:36.620+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277301",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/277302",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4846: ARROW-5902: [Java] Implement hash table and equals & hashCode API for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#discussion_r303771874\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/DictionaryHashTable.java\n ##########\n @@ -0,0 +1,271 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import java.util.Objects;\n+\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * HashTable used for Dictionary encoding. It holds two vectors (the vector to encode and dictionary vector)\n+ * It stores the index in dictionary vector and for a given index in encode vector,\n+ * it could return dictionary index.\n+ */\n+public class DictionaryHashTable {\n+\n+  /**\n+   * Represents a null value in map.\n+   */\n+  static final int NULL_VALUE = -1;\n+\n+  /**\n+   * The default initial capacity - MUST be a power of two.\n+   */\n+  static final int DEFAULT_INITIAL_CAPACITY = 1 << 4;\n+\n+  /**\n+   * The maximum capacity, used if a higher value is implicitly specified\n+   * by either of the constructors with arguments.\n+   */\n+  static final int MAXIMUM_CAPACITY = 1 << 30;\n+\n+  /**\n+   * The load factor used when none specified in constructor.\n+   */\n+  static final float DEFAULT_LOAD_FACTOR = 0.75f;\n+\n+  static final DictionaryHashTable.Entry[] EMPTY_TABLE = {};\n+\n+  /**\n+   * The table, initialized on first use, and resized as\n+   * necessary. When allocated, length is always a power of two.\n+   */\n+  transient DictionaryHashTable.Entry[] table = (DictionaryHashTable.Entry[]) EMPTY_TABLE;\n+\n+  /**\n+   * The number of key-value mappings contained in this map.\n+   */\n+  transient int size;\n+\n+  /**\n+   * The next size value at which to resize (capacity * load factor).\n+   */\n+  int threshold;\n+\n+  /**\n+   * The load factor for the hash table.\n+   */\n+  final float loadFactor;\n+\n+  private final ValueVector dictionary;\n+\n+  private final ValueVector toEncode;\n \n Review comment:\n   Sure, toEncode should as a param in which dictionary could be used for multiple vectors, fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T07:56:18.753+0000",
                    "updated": "2019-07-16T07:56:18.753+0000",
                    "started": "2019-07-16T07:56:18.752+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277302",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/277303",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4846: ARROW-5902: [Java] Implement hash table and equals & hashCode API for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#discussion_r303771990\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/types/pojo/TestExtensionType.java\n ##########\n @@ -204,6 +205,14 @@ public UUID getObject(int index) {\n       return new UUID(bb.getLong(), bb.getLong());\n     }\n \n+    @Override public int hashCode(int index) {\n \n Review comment:\n   Thanks, fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T07:56:34.596+0000",
                    "updated": "2019-07-16T07:56:34.596+0000",
                    "started": "2019-07-16T07:56:34.596+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277303",
                    "issueId": "13244102"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/worklog/277304",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4846: ARROW-5902: [Java] Implement hash table and equals & hashCode API for dictionary encoding\nURL: https://github.com/apache/arrow/pull/4846#discussion_r303772446\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/util/ByteFunctionHelpers.java\n ##########\n @@ -49,6 +49,45 @@ public static final int equal(final ArrowBuf left, int lStart, int lEnd, final A\n     return memEqual(left.memoryAddress(), lStart, lEnd, right.memoryAddress(), rStart, rEnd);\n   }\n \n+  /**\n+   * Compute hashCode with the given {@link ArrowBuf} and start/end index.\n+   */\n+  public static final int hash(final ArrowBuf buf, int start, int end) {\n+    long addr = buf.memoryAddress();\n+    int len = end - start;\n+    long pos = addr + start;\n+\n+    int hash = 0;\n+\n+    while (len > 7) {\n+      long value = PlatformDependent.getLong(pos);\n+      hash = comebineHash(hash, Long.hashCode(value));\n+\n+      pos += 8;\n+      len -= 8;\n+    }\n+\n+    while (len > 3) {\n+      int value = PlatformDependent.getInt(pos);\n+      hash = comebineHash(hash, Integer.hashCode(value));\n+\n+      pos += 4;\n+      len -= 4;\n+    }\n+\n+    while (len-- != 0) {\n+      byte value = PlatformDependent.getByte(pos);\n+      hash = comebineHash(hash, Byte.hashCode(value));\n+      pos ++;\n+    }\n+\n+    return hash;\n+  }\n+\n+  private static int comebineHash(int currentHash, int newHash) {\n \n Review comment:\n   fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T07:57:46.825+0000",
                    "updated": "2019-07-16T07:57:46.825+0000",
                    "started": "2019-07-16T07:57:46.825+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277304",
                    "issueId": "13244102"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 18000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6c9844af[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5bf502a4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6cc4cf45[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1f57005b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4f30e94c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@37ab3590[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d5f6ac7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5aade8ef[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@129f007f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7cf6a009[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7a79e402[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4f269132[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 18000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jul 19 03:42:15 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-07-19T03:42:15.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5902/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-07-10T12:47:19.000+0000",
        "updated": "2019-08-01T22:39:23.000+0000",
        "timeoriginalestimate": null,
        "description": "As discussed in\u00a0[https://github.com/apache/arrow/pull/4792]\r\n\r\nImplement a hash table to only store hash & index, meanwhile add check equal function in ValueVector API.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 18000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Implement hash table and equals & hashCode API for dictionary encoding",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/comment/16884907",
                    "id": "16884907",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
                        "name": "tianchen92",
                        "key": "tianchen92",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
                        },
                        "displayName": "Ji Liu",
                        "active": true,
                        "timeZone": "Asia/Gaza"
                    },
                    "body": "cc [~emkornfield@gmail.com]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
                        "name": "tianchen92",
                        "key": "tianchen92",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
                        },
                        "displayName": "Ji Liu",
                        "active": true,
                        "timeZone": "Asia/Gaza"
                    },
                    "created": "2019-07-15T07:49:36.955+0000",
                    "updated": "2019-07-15T07:49:36.955+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244102/comment/16888487",
                    "id": "16888487",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4846\n[https://github.com/apache/arrow/pull/4846]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-07-19T03:42:15.142+0000",
                    "updated": "2019-07-19T03:42:15.142+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z04j4o:",
        "customfield_12314139": null
    }
}