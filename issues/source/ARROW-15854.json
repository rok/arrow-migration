{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13432169",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169",
    "key": "ARROW-15854",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yibocai",
            "name": "yibocai",
            "key": "yibo",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yibo&avatarId=47542",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yibo&avatarId=47542",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yibo&avatarId=47542",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yibo&avatarId=47542"
            },
            "displayName": "Yibo Cai",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yibocai",
            "name": "yibocai",
            "key": "yibo",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yibo&avatarId=47542",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yibo&avatarId=47542",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yibo&avatarId=47542",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yibo&avatarId=47542"
            },
            "displayName": "Yibo Cai",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yibocai",
            "name": "yibocai",
            "key": "yibo",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yibo&avatarId=47542",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yibo&avatarId=47542",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yibo&avatarId=47542",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yibo&avatarId=47542"
            },
            "displayName": "Yibo Cai",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 16800,
            "total": 16800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 16800,
            "total": 16800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15854/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 28,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737217",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 opened a new pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574\n\n\n   - populate columns in normal order\r\n   - support int64 row length\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-06T11:13:58.665+0000",
                    "updated": "2022-03-06T11:13:58.665+0000",
                    "started": "2022-03-06T11:13:58.665+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737217",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737218",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#issuecomment-1059942623\n\n\n   https://issues.apache.org/jira/browse/ARROW-15854\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-06T11:14:11.199+0000",
                    "updated": "2022-03-06T11:14:11.199+0000",
                    "started": "2022-03-06T11:14:11.199+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737218",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737219",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#discussion_r820218686\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -117,17 +116,16 @@ class ColumnPopulator {\n   }\n \n   // Places string data onto each row in output and updates the corresponding row\n-  // pointers in preparation for calls to other (preceding) ColumnPopulators.\n+  // pointers in preparation for calls to other (next) ColumnPopulators.\n   // Implementations may apply certain checks e.g. for illegal values, which in case of\n   // failure causes this function to return an error Status.\n   // Args:\n   //   output: character buffer to write to.\n-  //   offsets: an array of end of row column within the the output buffer (values are\n-  //   one past the end of the position to write to).\n-  virtual Status PopulateColumns(char* output, int32_t* offsets) const = 0;\n+  //   offsets: an array of start of row column within the output buffer.\n+  virtual Status PopulateRows(char* output, int64_t* offsets) const = 0;\n\nReview comment:\n       Name `PopulateColumns` is a bit confusing IMO as this function writes rows of a single column to csv output buffer.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-06T11:19:07.925+0000",
                    "updated": "2022-03-06T11:19:07.925+0000",
                    "started": "2022-03-06T11:19:07.925+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737219",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737220",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#issuecomment-1059943490\n\n\n   Don't see obvious performance difference from this PR.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-06T11:20:10.400+0000",
                    "updated": "2022-03-06T11:20:10.400+0000",
                    "started": "2022-03-06T11:20:10.400+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737220",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737221",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#issuecomment-1059943990\n\n\n   @ursabot please benchmark lang=C++\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-06T11:23:35.822+0000",
                    "updated": "2022-03-06T11:23:35.822+0000",
                    "started": "2022-03-06T11:23:35.821+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737221",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737222",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#issuecomment-1059944004\n\n\n   Benchmark runs are scheduled for baseline = a13870e33eb8b25a1e9cee28a310c7c6cd9a4fb4 and contender = a360344a15ae6cdabef60a2190e2cfeb55c52c76. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Skipped :warning: Only ['Python'] langs are supported on ec2-t3-xlarge-us-east-2] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/86d347e07f004445908e47ef2a497020...5a487a36834549e5b048e1a51878029f/)\n   [Scheduled] [test-mac-arm](https://conbench.ursa.dev/compare/runs/01fda4daaae649b790899e54d666210c...30b1772b7ffa4c128ffe542f73463b4e/)\n   [Skipped :warning: Only ['JavaScript', 'Python', 'R'] langs are supported on ursa-i9-9960x] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/9292568e6e4b4c1882d0564bf8ebc3e7...4ba1ac8d32754eb89f1b1dcf6af5f958/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/05cdab4ca5ba44da896bc9997232878a...9b7c09d5b862469aba99d1c025f8d4e4/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-06T11:23:38.259+0000",
                    "updated": "2022-03-06T11:23:38.259+0000",
                    "started": "2022-03-06T11:23:38.258+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737222",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737228",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#issuecomment-1059944004\n\n\n   Benchmark runs are scheduled for baseline = a13870e33eb8b25a1e9cee28a310c7c6cd9a4fb4 and contender = a360344a15ae6cdabef60a2190e2cfeb55c52c76. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Skipped :warning: Only ['Python'] langs are supported on ec2-t3-xlarge-us-east-2] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/86d347e07f004445908e47ef2a497020...5a487a36834549e5b048e1a51878029f/)\n   [Finished :arrow_down:3.56% :arrow_up:3.81%] [test-mac-arm](https://conbench.ursa.dev/compare/runs/01fda4daaae649b790899e54d666210c...30b1772b7ffa4c128ffe542f73463b4e/)\n   [Skipped :warning: Only ['JavaScript', 'Python', 'R'] langs are supported on ursa-i9-9960x] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/9292568e6e4b4c1882d0564bf8ebc3e7...4ba1ac8d32754eb89f1b1dcf6af5f958/)\n   [Finished :arrow_down:0.85% :arrow_up:0.13%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/05cdab4ca5ba44da896bc9997232878a...9b7c09d5b862469aba99d1c025f8d4e4/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-06T12:21:43.866+0000",
                    "updated": "2022-03-06T12:21:43.866+0000",
                    "started": "2022-03-06T12:21:43.866+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737228",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737255",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#discussion_r820256069\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -117,17 +116,16 @@ class ColumnPopulator {\n   }\n \n   // Places string data onto each row in output and updates the corresponding row\n-  // pointers in preparation for calls to other (preceding) ColumnPopulators.\n+  // pointers in preparation for calls to other (next) ColumnPopulators.\n   // Implementations may apply certain checks e.g. for illegal values, which in case of\n   // failure causes this function to return an error Status.\n   // Args:\n   //   output: character buffer to write to.\n-  //   offsets: an array of end of row column within the the output buffer (values are\n-  //   one past the end of the position to write to).\n-  virtual Status PopulateColumns(char* output, int32_t* offsets) const = 0;\n+  //   offsets: an array of start of row column within the output buffer.\n+  virtual Status PopulateRows(char* output, int64_t* offsets) const = 0;\n\nReview comment:\n       The new name seems fine to me\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-06T16:24:22.897+0000",
                    "updated": "2022-03-06T16:24:22.897+0000",
                    "started": "2022-03-06T16:24:22.896+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737255",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737256",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#discussion_r820256307\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -136,15 +134,14 @@ class ColumnPopulator {\n   MemoryPool* const pool_;\n };\n \n-// Copies the contents of to out properly escaping any necessary characters.\n-// Returns the position prior to last copied character (out_end is decremented).\n-char* EscapeReverse(arrow::util::string_view s, char* out_end) {\n-  for (const char* val = s.data() + s.length() - 1; val >= s.data(); val--, out_end--) {\n-    if (*val == '\"') {\n-      *out_end = *val;\n-      out_end--;\n+// Copies the contents of s to out properly escaping any necessary characters.\n+// Returns the position next to last copied character.\n+char* Escape(arrow::util::string_view s, char* out_end) {\n+  for (const char c : s) {\n\nReview comment:\n       It occurs to me that performance here might be improved by using higher level methods to find the next escape character and memcpy in between.  Probably depends on string lengths being processed.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-06T16:26:15.643+0000",
                    "updated": "2022-03-06T16:26:15.643+0000",
                    "started": "2022-03-06T16:26:15.643+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737256",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737257",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#issuecomment-1059993867\n\n\n   I'm slightly ambivalent on reversing the population direction, it seems border line like change just for the sake of change.  I don't recall if the reverse population was necessary for some reason that has changed or just an overcomplicating on my part.   If you think it makes things easier to understand I'll do a more a thorough review\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-06T16:29:10.275+0000",
                    "updated": "2022-03-06T16:29:10.275+0000",
                    "started": "2022-03-06T16:29:10.274+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737257",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737309",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#discussion_r820309351\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -136,15 +134,14 @@ class ColumnPopulator {\n   MemoryPool* const pool_;\n };\n \n-// Copies the contents of to out properly escaping any necessary characters.\n-// Returns the position prior to last copied character (out_end is decremented).\n-char* EscapeReverse(arrow::util::string_view s, char* out_end) {\n-  for (const char* val = s.data() + s.length() - 1; val >= s.data(); val--, out_end--) {\n-    if (*val == '\"') {\n-      *out_end = *val;\n-      out_end--;\n+// Copies the contents of s to out properly escaping any necessary characters.\n+// Returns the position next to last copied character.\n+char* Escape(arrow::util::string_view s, char* out_end) {\n+  for (const char c : s) {\n\nReview comment:\n       Yes. It's the main reason I change the scan order. This function is the hotspot of string with quotes benchmark. Reverse scanning makes it hard to improve, the output string header pos is not known until end.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-07T00:06:37.526+0000",
                    "updated": "2022-03-07T00:06:37.526+0000",
                    "started": "2022-03-07T00:06:37.525+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737309",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737330",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#issuecomment-1060122050\n\n\n   > I'm slightly ambivalent on reversing the population direction, it seems border line like change just for the sake of change. I don't recall if the reverse population was necessary for some reason that has changed or just an overcomplicating on my part. If you think it makes things easier to understand I'll do a more a thorough review\r\n   \r\n   Thanks @emkornfield. I agree change just for the sake of change is not good. As I commented above, this change may make further optimization easier. And I do think it simplifies the code. Reading input strings forward continuously is also more friendly to prefetcher, though this workload is cpu bound.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-07T02:18:33.005+0000",
                    "updated": "2022-03-07T02:18:33.005+0000",
                    "started": "2022-03-07T02:18:33.005+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737330",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737333",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#discussion_r820339520\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -572,33 +558,34 @@ class CSVWriterImpl : public ipc::RecordBatchWriter {\n     }\n     // Calculate cumulative offsets for each row (including delimiters).\n     // ',' * num_columns - 1(last column doesn't have ,) + eol\n-    int32_t delimiters_length =\n+    const int32_t delimiters_length =\n         static_cast<int32_t>(batch.num_columns() - 1 + options_.eol.size());\n-    offsets_[0] += delimiters_length;\n-    for (int64_t row = 1; row < batch.num_rows(); row++) {\n-      offsets_[row] += offsets_[row - 1] + delimiters_length;\n+    int64_t last_row_length = offsets_[0] + delimiters_length;\n+    offsets_[0] = 0;\n+    for (size_t row = 1; row < offsets_.size(); ++row) {\n+      const int64_t this_row_length = offsets_[row] + delimiters_length;\n+      offsets_[row] = offsets_[row - 1] + last_row_length;\n+      last_row_length = this_row_length;\n\nReview comment:\n       `offsets_[i]` was the length of row `i` before the conversion.\r\n   After the conversion, `offsets_[i]` is the start position of row `i` in output buffer.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-07T02:30:39.581+0000",
                    "updated": "2022-03-07T02:30:39.581+0000",
                    "started": "2022-03-07T02:30:39.581+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737333",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737597",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#discussion_r820852990\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -136,15 +134,14 @@ class ColumnPopulator {\n   MemoryPool* const pool_;\n };\n \n-// Copies the contents of to out properly escaping any necessary characters.\n-// Returns the position prior to last copied character (out_end is decremented).\n-char* EscapeReverse(arrow::util::string_view s, char* out_end) {\n-  for (const char* val = s.data() + s.length() - 1; val >= s.data(); val--, out_end--) {\n-    if (*val == '\"') {\n-      *out_end = *val;\n-      out_end--;\n+// Copies the contents of s to out properly escaping any necessary characters.\n+// Returns the position next to last copied character.\n+char* Escape(arrow::util::string_view s, char* out_end) {\n\nReview comment:\n       Change variable name to match new meaning?\r\n   \r\n   ```suggestion\r\n   char* Escape(arrow::util::string_view s, char* out) {\r\n   ```\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -184,28 +181,23 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n     return Status::OK();\n   }\n \n-  Status PopulateColumns(char* output, int32_t* offsets) const override {\n+  Status PopulateRows(char* output, int64_t* offsets) const override {\n     // Function applied to valid values cast to string.\n     auto valid_function = [&](arrow::util::string_view s) {\n-      int32_t next_column_offset = static_cast<int32_t>(s.length() + end_chars_.size());\n-      memcpy((output + *offsets - next_column_offset), s.data(), s.length());\n-      memcpy((output + *offsets - end_chars_.size()), end_chars_.c_str(),\n-             end_chars_.size());\n-      *offsets -= next_column_offset;\n+      memcpy(output + *offsets, s.data(), s.length());\n+      memcpy(output + *offsets + s.length(), end_chars_.c_str(), end_chars_.size());\n+      *offsets += static_cast<int64_t>(s.length() + end_chars_.size());\n       offsets++;\n       return Status::OK();\n     };\n \n     // Function applied to null values cast to string.\n     auto null_function = [&]() {\n       // For nulls, the configured null value string is copied into the output.\n-      int32_t next_column_offset =\n-          static_cast<int32_t>(null_string_->size() + end_chars_.size());\n-      memcpy((output + *offsets - next_column_offset), null_string_->data(),\n-             null_string_->size());\n-      memcpy((output + *offsets - end_chars_.size()), end_chars_.c_str(),\n+      memcpy(output + *offsets, null_string_->data(), null_string_->size());\n+      memcpy(output + *offsets + null_string_->size(), end_chars_.c_str(),\n              end_chars_.size());\n-      *offsets -= next_column_offset;\n+      *offsets += static_cast<int32_t>(null_string_->size() + end_chars_.size());\n\nReview comment:\n       Why not `int64_t`?\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -309,40 +300,33 @@ class QuotedColumnPopulator : public ColumnPopulator {\n     return Status::OK();\n   }\n \n-  Status PopulateColumns(char* output, int32_t* offsets) const override {\n+  Status PopulateRows(char* output, int64_t* offsets) const override {\n     auto needs_escaping = row_needs_escaping_.begin();\n     VisitArrayDataInline<StringType>(\n         *(casted_array_->data()),\n         [&](arrow::util::string_view s) {\n           // still needs string content length to be added\n-          char* row_end = output + *offsets;\n-          int32_t next_column_offset = 0;\n+          char* row = output + *offsets;\n+          *row++ = '\"';\n           if (!*needs_escaping) {\n-            next_column_offset = static_cast<int32_t>(s.length() + kQuoteDelimiterCount);\n-            memcpy(row_end - next_column_offset + /*quote_offset=*/1, s.data(),\n-                   s.length());\n+            memcpy(row, s.data(), s.length());\n+            row += s.length();\n           } else {\n-            // Adjust row_end by 2 + end_chars_.size(): 1 quote char, end_chars_.size()\n-            // and 1 to position at the first position to write to.\n-            next_column_offset = static_cast<int32_t>(\n-                row_end - EscapeReverse(s, row_end - 2 - end_chars_.size()));\n+            row = Escape(s, row);\n           }\n-          *(row_end - next_column_offset) = '\"';\n-          *(row_end - end_chars_.size() - 1) = '\"';\n-          memcpy(row_end - end_chars_.size(), end_chars_.data(), end_chars_.length());\n-          *offsets -= next_column_offset;\n+          *row++ = '\"';\n+          memcpy(row, end_chars_.data(), end_chars_.length());\n+          row += end_chars_.length();\n+          *offsets += static_cast<int64_t>(row - (output + *offsets));\n           offsets++;\n           needs_escaping++;\n         },\n         [&]() {\n           // For nulls, the configured null value string is copied into the output.\n-          int32_t next_column_offset =\n-              static_cast<int32_t>(null_string_->size() + end_chars_.size());\n-          memcpy((output + *offsets - next_column_offset), null_string_->data(),\n-                 null_string_->size());\n-          memcpy((output + *offsets - end_chars_.size()), end_chars_.c_str(),\n+          memcpy(output + *offsets, null_string_->data(), null_string_->size());\n+          memcpy(output + *offsets + null_string_->size(), end_chars_.c_str(),\n                  end_chars_.size());\n-          *offsets -= next_column_offset;\n+          *offsets += static_cast<int32_t>(null_string_->size() + end_chars_.size());\n\nReview comment:\n       `int64_t` perhaps?\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -572,33 +558,34 @@ class CSVWriterImpl : public ipc::RecordBatchWriter {\n     }\n     // Calculate cumulative offsets for each row (including delimiters).\n     // ',' * num_columns - 1(last column doesn't have ,) + eol\n-    int32_t delimiters_length =\n+    const int32_t delimiters_length =\n         static_cast<int32_t>(batch.num_columns() - 1 + options_.eol.size());\n-    offsets_[0] += delimiters_length;\n-    for (int64_t row = 1; row < batch.num_rows(); row++) {\n-      offsets_[row] += offsets_[row - 1] + delimiters_length;\n+    int64_t last_row_length = offsets_[0] + delimiters_length;\n+    offsets_[0] = 0;\n+    for (size_t row = 1; row < offsets_.size(); ++row) {\n+      const int64_t this_row_length = offsets_[row] + delimiters_length;\n+      offsets_[row] = offsets_[row - 1] + last_row_length;\n+      last_row_length = this_row_length;\n\nReview comment:\n       Can you add a comment with this?\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -309,40 +300,33 @@ class QuotedColumnPopulator : public ColumnPopulator {\n     return Status::OK();\n   }\n \n-  Status PopulateColumns(char* output, int32_t* offsets) const override {\n+  Status PopulateRows(char* output, int64_t* offsets) const override {\n     auto needs_escaping = row_needs_escaping_.begin();\n     VisitArrayDataInline<StringType>(\n         *(casted_array_->data()),\n         [&](arrow::util::string_view s) {\n           // still needs string content length to be added\n-          char* row_end = output + *offsets;\n-          int32_t next_column_offset = 0;\n+          char* row = output + *offsets;\n+          *row++ = '\"';\n           if (!*needs_escaping) {\n-            next_column_offset = static_cast<int32_t>(s.length() + kQuoteDelimiterCount);\n-            memcpy(row_end - next_column_offset + /*quote_offset=*/1, s.data(),\n-                   s.length());\n+            memcpy(row, s.data(), s.length());\n+            row += s.length();\n           } else {\n-            // Adjust row_end by 2 + end_chars_.size(): 1 quote char, end_chars_.size()\n-            // and 1 to position at the first position to write to.\n-            next_column_offset = static_cast<int32_t>(\n-                row_end - EscapeReverse(s, row_end - 2 - end_chars_.size()));\n+            row = Escape(s, row);\n           }\n-          *(row_end - next_column_offset) = '\"';\n-          *(row_end - end_chars_.size() - 1) = '\"';\n-          memcpy(row_end - end_chars_.size(), end_chars_.data(), end_chars_.length());\n-          *offsets -= next_column_offset;\n+          *row++ = '\"';\n+          memcpy(row, end_chars_.data(), end_chars_.length());\n+          row += end_chars_.length();\n+          *offsets += static_cast<int64_t>(row - (output + *offsets));\n\nReview comment:\n       Wouldn't it be simpler as:\r\n   ```suggestion\r\n             *offsets = static_cast<int64_t>(row - output);\r\n   ```\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -572,33 +558,34 @@ class CSVWriterImpl : public ipc::RecordBatchWriter {\n     }\n     // Calculate cumulative offsets for each row (including delimiters).\n     // ',' * num_columns - 1(last column doesn't have ,) + eol\n-    int32_t delimiters_length =\n+    const int32_t delimiters_length =\n         static_cast<int32_t>(batch.num_columns() - 1 + options_.eol.size());\n-    offsets_[0] += delimiters_length;\n-    for (int64_t row = 1; row < batch.num_rows(); row++) {\n-      offsets_[row] += offsets_[row - 1] + delimiters_length;\n+    int64_t last_row_length = offsets_[0] + delimiters_length;\n+    offsets_[0] = 0;\n+    for (size_t row = 1; row < offsets_.size(); ++row) {\n+      const int64_t this_row_length = offsets_[row] + delimiters_length;\n+      offsets_[row] = offsets_[row - 1] + last_row_length;\n+      last_row_length = this_row_length;\n\nReview comment:\n       Also, you probably mean: \"`offsets_[i]` was the length of row `i-1` before the conversion\"...?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-07T16:14:41.593+0000",
                    "updated": "2022-03-07T16:14:41.593+0000",
                    "started": "2022-03-07T16:14:41.593+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737597",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737924",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#discussion_r821276863\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -136,15 +134,14 @@ class ColumnPopulator {\n   MemoryPool* const pool_;\n };\n \n-// Copies the contents of to out properly escaping any necessary characters.\n-// Returns the position prior to last copied character (out_end is decremented).\n-char* EscapeReverse(arrow::util::string_view s, char* out_end) {\n-  for (const char* val = s.data() + s.length() - 1; val >= s.data(); val--, out_end--) {\n-    if (*val == '\"') {\n-      *out_end = *val;\n-      out_end--;\n+// Copies the contents of s to out properly escaping any necessary characters.\n+// Returns the position next to last copied character.\n+char* Escape(arrow::util::string_view s, char* out_end) {\n\nReview comment:\n       changed\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-08T02:48:45.777+0000",
                    "updated": "2022-03-08T02:48:45.777+0000",
                    "started": "2022-03-08T02:48:45.776+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737924",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737926",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#discussion_r821278922\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -309,40 +300,33 @@ class QuotedColumnPopulator : public ColumnPopulator {\n     return Status::OK();\n   }\n \n-  Status PopulateColumns(char* output, int32_t* offsets) const override {\n+  Status PopulateRows(char* output, int64_t* offsets) const override {\n     auto needs_escaping = row_needs_escaping_.begin();\n     VisitArrayDataInline<StringType>(\n         *(casted_array_->data()),\n         [&](arrow::util::string_view s) {\n           // still needs string content length to be added\n-          char* row_end = output + *offsets;\n-          int32_t next_column_offset = 0;\n+          char* row = output + *offsets;\n+          *row++ = '\"';\n           if (!*needs_escaping) {\n-            next_column_offset = static_cast<int32_t>(s.length() + kQuoteDelimiterCount);\n-            memcpy(row_end - next_column_offset + /*quote_offset=*/1, s.data(),\n-                   s.length());\n+            memcpy(row, s.data(), s.length());\n+            row += s.length();\n           } else {\n-            // Adjust row_end by 2 + end_chars_.size(): 1 quote char, end_chars_.size()\n-            // and 1 to position at the first position to write to.\n-            next_column_offset = static_cast<int32_t>(\n-                row_end - EscapeReverse(s, row_end - 2 - end_chars_.size()));\n+            row = Escape(s, row);\n           }\n-          *(row_end - next_column_offset) = '\"';\n-          *(row_end - end_chars_.size() - 1) = '\"';\n-          memcpy(row_end - end_chars_.size(), end_chars_.data(), end_chars_.length());\n-          *offsets -= next_column_offset;\n+          *row++ = '\"';\n+          memcpy(row, end_chars_.data(), end_chars_.length());\n+          row += end_chars_.length();\n+          *offsets += static_cast<int64_t>(row - (output + *offsets));\n\nReview comment:\n       Yeah\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-08T02:54:11.676+0000",
                    "updated": "2022-03-08T02:54:11.676+0000",
                    "started": "2022-03-08T02:54:11.676+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737926",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737928",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#discussion_r821286290\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -184,28 +181,23 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n     return Status::OK();\n   }\n \n-  Status PopulateColumns(char* output, int32_t* offsets) const override {\n+  Status PopulateRows(char* output, int64_t* offsets) const override {\n     // Function applied to valid values cast to string.\n     auto valid_function = [&](arrow::util::string_view s) {\n-      int32_t next_column_offset = static_cast<int32_t>(s.length() + end_chars_.size());\n-      memcpy((output + *offsets - next_column_offset), s.data(), s.length());\n-      memcpy((output + *offsets - end_chars_.size()), end_chars_.c_str(),\n-             end_chars_.size());\n-      *offsets -= next_column_offset;\n+      memcpy(output + *offsets, s.data(), s.length());\n+      memcpy(output + *offsets + s.length(), end_chars_.c_str(), end_chars_.size());\n+      *offsets += static_cast<int64_t>(s.length() + end_chars_.size());\n       offsets++;\n       return Status::OK();\n     };\n \n     // Function applied to null values cast to string.\n     auto null_function = [&]() {\n       // For nulls, the configured null value string is copied into the output.\n-      int32_t next_column_offset =\n-          static_cast<int32_t>(null_string_->size() + end_chars_.size());\n-      memcpy((output + *offsets - next_column_offset), null_string_->data(),\n-             null_string_->size());\n-      memcpy((output + *offsets - end_chars_.size()), end_chars_.c_str(),\n+      memcpy(output + *offsets, null_string_->data(), null_string_->size());\n+      memcpy(output + *offsets + null_string_->size(), end_chars_.c_str(),\n              end_chars_.size());\n-      *offsets -= next_column_offset;\n+      *offsets += static_cast<int32_t>(null_string_->size() + end_chars_.size());\n\nReview comment:\n       changed\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -309,40 +300,33 @@ class QuotedColumnPopulator : public ColumnPopulator {\n     return Status::OK();\n   }\n \n-  Status PopulateColumns(char* output, int32_t* offsets) const override {\n+  Status PopulateRows(char* output, int64_t* offsets) const override {\n     auto needs_escaping = row_needs_escaping_.begin();\n     VisitArrayDataInline<StringType>(\n         *(casted_array_->data()),\n         [&](arrow::util::string_view s) {\n           // still needs string content length to be added\n-          char* row_end = output + *offsets;\n-          int32_t next_column_offset = 0;\n+          char* row = output + *offsets;\n+          *row++ = '\"';\n           if (!*needs_escaping) {\n-            next_column_offset = static_cast<int32_t>(s.length() + kQuoteDelimiterCount);\n-            memcpy(row_end - next_column_offset + /*quote_offset=*/1, s.data(),\n-                   s.length());\n+            memcpy(row, s.data(), s.length());\n+            row += s.length();\n           } else {\n-            // Adjust row_end by 2 + end_chars_.size(): 1 quote char, end_chars_.size()\n-            // and 1 to position at the first position to write to.\n-            next_column_offset = static_cast<int32_t>(\n-                row_end - EscapeReverse(s, row_end - 2 - end_chars_.size()));\n+            row = Escape(s, row);\n           }\n-          *(row_end - next_column_offset) = '\"';\n-          *(row_end - end_chars_.size() - 1) = '\"';\n-          memcpy(row_end - end_chars_.size(), end_chars_.data(), end_chars_.length());\n-          *offsets -= next_column_offset;\n+          *row++ = '\"';\n+          memcpy(row, end_chars_.data(), end_chars_.length());\n+          row += end_chars_.length();\n+          *offsets += static_cast<int64_t>(row - (output + *offsets));\n           offsets++;\n           needs_escaping++;\n         },\n         [&]() {\n           // For nulls, the configured null value string is copied into the output.\n-          int32_t next_column_offset =\n-              static_cast<int32_t>(null_string_->size() + end_chars_.size());\n-          memcpy((output + *offsets - next_column_offset), null_string_->data(),\n-                 null_string_->size());\n-          memcpy((output + *offsets - end_chars_.size()), end_chars_.c_str(),\n+          memcpy(output + *offsets, null_string_->data(), null_string_->size());\n+          memcpy(output + *offsets + null_string_->size(), end_chars_.c_str(),\n                  end_chars_.size());\n-          *offsets -= next_column_offset;\n+          *offsets += static_cast<int32_t>(null_string_->size() + end_chars_.size());\n\nReview comment:\n       changed\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-08T03:14:47.646+0000",
                    "updated": "2022-03-08T03:14:47.646+0000",
                    "started": "2022-03-08T03:14:47.646+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737928",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/737945",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#discussion_r821311256\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -572,33 +558,34 @@ class CSVWriterImpl : public ipc::RecordBatchWriter {\n     }\n     // Calculate cumulative offsets for each row (including delimiters).\n     // ',' * num_columns - 1(last column doesn't have ,) + eol\n-    int32_t delimiters_length =\n+    const int32_t delimiters_length =\n         static_cast<int32_t>(batch.num_columns() - 1 + options_.eol.size());\n-    offsets_[0] += delimiters_length;\n-    for (int64_t row = 1; row < batch.num_rows(); row++) {\n-      offsets_[row] += offsets_[row - 1] + delimiters_length;\n+    int64_t last_row_length = offsets_[0] + delimiters_length;\n+    offsets_[0] = 0;\n+    for (size_t row = 1; row < offsets_.size(); ++row) {\n+      const int64_t this_row_length = offsets_[row] + delimiters_length;\n+      offsets_[row] = offsets_[row - 1] + last_row_length;\n+      last_row_length = this_row_length;\n\nReview comment:\n       comment added\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-08T04:29:07.903+0000",
                    "updated": "2022-03-08T04:29:07.903+0000",
                    "started": "2022-03-08T04:29:07.903+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "737945",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/738116",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#discussion_r821645141\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -571,34 +556,39 @@ class CSVWriterImpl : public ipc::RecordBatchWriter {\n           column_populators_[col]->UpdateRowLengths(*batch.column(col), offsets_.data()));\n     }\n     // Calculate cumulative offsets for each row (including delimiters).\n-    // ',' * num_columns - 1(last column doesn't have ,) + eol\n-    int32_t delimiters_length =\n+    // - before conversion: offsets_[i] = length of i-th row\n\nReview comment:\n       ```suggestion\r\n       // - before conversion: offsets_[i] = length of (i-1)th row\r\n   ```\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -571,34 +556,39 @@ class CSVWriterImpl : public ipc::RecordBatchWriter {\n           column_populators_[col]->UpdateRowLengths(*batch.column(col), offsets_.data()));\n     }\n     // Calculate cumulative offsets for each row (including delimiters).\n-    // ',' * num_columns - 1(last column doesn't have ,) + eol\n-    int32_t delimiters_length =\n+    // - before conversion: offsets_[i] = length of i-th row\n+    // - after conversion:  offsets_[i] = offset to the starting of i-th row buffer\n+    //   - offsets_[0] = 0\n+    //   - offsets_[i] = offsets_[i-1] + len(i-1-th row) + len(delimiters)\n+    // Delimiters: ',' * num_columns - 1(last column doesn't have ,) + eol\n\nReview comment:\n       ```suggestion\r\n       // Delimiters: ',' * (num_columns - 1) + eol\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-08T13:09:06.514+0000",
                    "updated": "2022-03-08T13:09:06.514+0000",
                    "started": "2022-03-08T13:09:06.514+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738116",
                    "issueId": "13432169"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/worklog/738164",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #12574:\nURL: https://github.com/apache/arrow/pull/12574#discussion_r821705177\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -571,34 +556,39 @@ class CSVWriterImpl : public ipc::RecordBatchWriter {\n           column_populators_[col]->UpdateRowLengths(*batch.column(col), offsets_.data()));\n     }\n     // Calculate cumulative offsets for each row (including delimiters).\n-    // ',' * num_columns - 1(last column doesn't have ,) + eol\n-    int32_t delimiters_length =\n+    // - before conversion: offsets_[i] = length of i-th row\n\nReview comment:\n       `offsets_[i]` is indeed the length of  `i-th` row before conversion, not `(i-1)th`.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-08T14:17:31.747+0000",
                    "updated": "2022-03-08T14:17:31.747+0000",
                    "started": "2022-03-08T14:17:31.747+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738164",
                    "issueId": "13432169"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 16800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@556df11c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2b57c016[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5246dc93[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4784e1bd[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@d4d521[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@21402d6b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4506df94[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@25ef5780[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@334f3c1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@23bfbdb9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@50363c25[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@f3a32f4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 16800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Mar 09 00:54:00 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-03-09T00:54:00.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15854/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-03-05T13:42:30.000+0000",
        "updated": "2022-03-09T08:21:38.000+0000",
        "timeoriginalestimate": null,
        "description": "CSV writer populates columns in reverse order, each row is constructed from last cell to first cell.\r\nPopulating columns in normal order makes the code easier to follow, and offers better optimization chances. E.g., EscapeReverse [1] is the hotspot for quoted string benchmark, it's hard to improve if chars are scanned in reverse order, but may benefit from simd if scanned in normal order.\r\n\r\n[1] https://github.com/apache/arrow/blob/master/cpp/src/arrow/csv/writer.cc#L141-L150",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 16800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Refine csv writer - populate columns in normal order",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13432169/comment/17503236",
                    "id": "17503236",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=yibocai",
                        "name": "yibocai",
                        "key": "yibo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yibo&avatarId=47542",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yibo&avatarId=47542",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yibo&avatarId=47542",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yibo&avatarId=47542"
                        },
                        "displayName": "Yibo Cai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 12574\n[https://github.com/apache/arrow/pull/12574]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=yibocai",
                        "name": "yibocai",
                        "key": "yibo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yibo&avatarId=47542",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yibo&avatarId=47542",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yibo&avatarId=47542",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yibo&avatarId=47542"
                        },
                        "displayName": "Yibo Cai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-03-09T00:54:00.506+0000",
                    "updated": "2022-03-09T00:54:00.506+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z107fc:",
        "customfield_12314139": null
    }
}