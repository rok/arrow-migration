{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13210943",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943",
    "key": "ARROW-4320",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4320/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 22,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/188089",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453\n \n \n   I would like to add some test cases for tensors with non-contiguous strides.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-22T10:44:41.430+0000",
                    "updated": "2019-01-22T10:44:41.430+0000",
                    "started": "2019-01-22T10:44:41.429+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188089",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/188851",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#discussion_r250144307\n \n \n\n ##########\n File path: cpp/src/arrow/tensor-test.cc\n ##########\n @@ -121,22 +122,23 @@ TEST(TestNumericTensor, ElementAccess) {\n   std::shared_ptr<Buffer> buffer_f32(Buffer::Wrap(values_f32));\n   NumericTensor<FloatType> t_f32(buffer_f32, shape);\n \n+  ASSERT_TRUE(t_f32.is_row_major());\n   ASSERT_EQ(1.1f, t_f32.Value({0, 0}));\n   ASSERT_EQ(5.1f, t_f32.Value({1, 0}));\n   ASSERT_EQ(6.1f, t_f32.Value({1, 1}));\n   ASSERT_EQ(11.1f, t_f32.Value({2, 2}));\n }\n \n-TEST(TestNumericTensor, ElementAccessWithRowMajorStrides) {\n+TEST(TestNumericTensor, ElementAccessWithColumnMajorStrides) {\n   std::vector<int64_t> shape = {3, 4};\n \n   const int64_t i64_size = sizeof(int64_t);\n-  std::vector<int64_t> values_i64 = {1, 2, 3, 4, 0,  0,  5,  6, 7,\n-                                     8, 0, 0, 9, 10, 11, 12, 0, 0};\n-  std::vector<int64_t> strides_i64 = {i64_size * 6, i64_size};\n+  std::vector<int64_t> values_i64 = {1, 5, 9, 2, 6, 10, 3, 7, 11, 4, 8, 12};\n+  std::vector<int64_t> strides_i64 = {i64_size, i64_size * 3};\n   std::shared_ptr<Buffer> buffer_i64(Buffer::Wrap(values_i64));\n   NumericTensor<Int64Type> t_i64(buffer_i64, shape, strides_i64);\n \n+  ASSERT_TRUE(t_i64.is_column_major());\n \n Review comment:\n   Same here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T11:15:04.336+0000",
                    "updated": "2019-01-23T11:15:04.336+0000",
                    "started": "2019-01-23T11:15:04.335+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188851",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/188852",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#discussion_r250144146\n \n \n\n ##########\n File path: cpp/src/arrow/tensor-test.cc\n ##########\n @@ -160,15 +162,17 @@ TEST(TestNumericTensor, ElementAccessWithRowMajorStrides) {\n   ASSERT_EQ(11.1f, t_f32.Value({2, 2}));\n }\n \n-TEST(TestNumericTensor, ElementAccessWithColumnMajorStrides) {\n+TEST(TestNumericTensor, ElementAccessWithNonContiguousStrides) {\n   std::vector<int64_t> shape = {3, 4};\n \n   const int64_t i64_size = sizeof(int64_t);\n-  std::vector<int64_t> values_i64 = {1, 5, 9, 0, 2, 6, 10, 0, 3, 7, 11, 0, 4, 8, 12, 0};\n-  std::vector<int64_t> strides_i64 = {i64_size, i64_size * 4};\n+  std::vector<int64_t> values_i64 = {1, 2, 3, 4, 0,  0,  5,  6, 7,\n+                                     8, 0, 0, 9, 10, 11, 12, 0, 0};\n+  std::vector<int64_t> strides_i64 = {i64_size * 6, i64_size};\n   std::shared_ptr<Buffer> buffer_i64(Buffer::Wrap(values_i64));\n   NumericTensor<Int64Type> t_i64(buffer_i64, shape, strides_i64);\n \n+  ASSERT_FALSE(t_i64.is_contiguous());\n \n Review comment:\n   Also ASSERT_FALSE on the row_major / column_major properties?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T11:15:04.359+0000",
                    "updated": "2019-01-23T11:15:04.359+0000",
                    "started": "2019-01-23T11:15:04.359+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188852",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/188853",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#discussion_r250147298\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor-test.cc\n ##########\n @@ -186,6 +186,58 @@ TEST(TestSparseCOOTensor, CreationFromTensor) {\n   ASSERT_EQ(3, sidx->Value({11, 2}));\n }\n \n+TEST(TestSparseCOOTensor, CreationFromNonContiguousTensor) {\n+  std::vector<int64_t> shape = {2, 3, 4};\n+  std::vector<int64_t> values = {1,  0, 0, 0, 2,  0, 0, 0, 0, 0, 3,  0, 0, 0, 4,  0,\n+                                 5,  0, 0, 0, 6,  0, 0, 0, 0, 0, 11, 0, 0, 0, 12, 0,\n+                                 13, 0, 0, 0, 14, 0, 0, 0, 0, 0, 15, 0, 0, 0, 16, 0};\n+  std::vector<int64_t> strides = {192, 64, 16};\n+  std::shared_ptr<Buffer> buffer = Buffer::Wrap(values);\n+  Tensor tensor(int64(), buffer, shape, strides);\n+  SparseTensorImpl<SparseCOOIndex> st(tensor);\n+\n+  ASSERT_EQ(12, st.non_zero_length());\n+  ASSERT_TRUE(st.is_mutable());\n+\n+  const int64_t* ptr = reinterpret_cast<const int64_t*>(st.raw_data());\n+  for (int i = 0; i < 6; ++i) {\n+    ASSERT_EQ(i + 1, ptr[i]);\n+  }\n+  for (int i = 0; i < 6; ++i) {\n+    ASSERT_EQ(i + 11, ptr[i + 6]);\n+  }\n+\n+  const auto& si = internal::checked_cast<const SparseCOOIndex&>(*st.sparse_index());\n+  std::shared_ptr<SparseCOOIndex::CoordsTensor> sidx = si.indices();\n+  ASSERT_EQ(std::vector<int64_t>({12, 3}), sidx->shape());\n+  ASSERT_TRUE(sidx->is_column_major());\n \n Review comment:\n   Interesting. Out of curiosity, why not row-major?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T11:15:04.420+0000",
                    "updated": "2019-01-23T11:15:04.420+0000",
                    "started": "2019-01-23T11:15:04.419+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188853",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/188854",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#discussion_r250146880\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor-test.cc\n ##########\n @@ -186,6 +186,58 @@ TEST(TestSparseCOOTensor, CreationFromTensor) {\n   ASSERT_EQ(3, sidx->Value({11, 2}));\n }\n \n+TEST(TestSparseCOOTensor, CreationFromNonContiguousTensor) {\n+  std::vector<int64_t> shape = {2, 3, 4};\n+  std::vector<int64_t> values = {1,  0, 0, 0, 2,  0, 0, 0, 0, 0, 3,  0, 0, 0, 4,  0,\n+                                 5,  0, 0, 0, 6,  0, 0, 0, 0, 0, 11, 0, 0, 0, 12, 0,\n+                                 13, 0, 0, 0, 14, 0, 0, 0, 0, 0, 15, 0, 0, 0, 16, 0};\n+  std::vector<int64_t> strides = {192, 64, 16};\n+  std::shared_ptr<Buffer> buffer = Buffer::Wrap(values);\n+  Tensor tensor(int64(), buffer, shape, strides);\n+  SparseTensorImpl<SparseCOOIndex> st(tensor);\n+\n+  ASSERT_EQ(12, st.non_zero_length());\n+  ASSERT_TRUE(st.is_mutable());\n+\n+  const int64_t* ptr = reinterpret_cast<const int64_t*>(st.raw_data());\n+  for (int i = 0; i < 6; ++i) {\n+    ASSERT_EQ(i + 1, ptr[i]);\n+  }\n+  for (int i = 0; i < 6; ++i) {\n+    ASSERT_EQ(i + 11, ptr[i + 6]);\n+  }\n+\n+  const auto& si = internal::checked_cast<const SparseCOOIndex&>(*st.sparse_index());\n+  std::shared_ptr<SparseCOOIndex::CoordsTensor> sidx = si.indices();\n+  ASSERT_EQ(std::vector<int64_t>({12, 3}), sidx->shape());\n+  ASSERT_TRUE(sidx->is_column_major());\n+\n+  // (0, 0, 0) -> 1\n+  ASSERT_EQ(0, sidx->Value({0, 0}));\n+  ASSERT_EQ(0, sidx->Value({0, 1}));\n+  ASSERT_EQ(0, sidx->Value({0, 2}));\n \n Review comment:\n   Ideally there would be a test helper which would allow writing:\r\n   ```cpp\r\n   AssertCOOIndex(sidx, {0}, {0, 0, 0});\r\n   AssertCOOIndex(sidx, {1}, {0, 0, 2});\r\n   // etc.\r\n   ```\r\n   \r\n   It would make the tests a bit clearer and shorter.\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T11:15:04.434+0000",
                    "updated": "2019-01-23T11:15:04.434+0000",
                    "started": "2019-01-23T11:15:04.433+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188854",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/188855",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#discussion_r250150700\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor-test.cc\n ##########\n @@ -241,4 +293,45 @@ TEST(TestSparseCSRMatrix, CreationFromNumericTensor2D) {\n   ASSERT_EQ(std::vector<int64_t>({0, 2, 1, 3, 0, 2, 1, 3, 0, 2, 1, 3}), indices_values);\n }\n \n+TEST(TestSparseCSRMatrix, CreationFromNonContiguousTensor) {\n+  std::vector<int64_t> shape = {6, 4};\n+  std::vector<int64_t> values = {1,  0, 0, 0, 2,  0, 0, 0, 0, 0, 3,  0, 0, 0, 4,  0,\n+                                 5,  0, 0, 0, 6,  0, 0, 0, 0, 0, 11, 0, 0, 0, 12, 0,\n+                                 13, 0, 0, 0, 14, 0, 0, 0, 0, 0, 15, 0, 0, 0, 16, 0};\n+  std::vector<int64_t> strides = {64, 16};\n+  std::shared_ptr<Buffer> buffer = Buffer::Wrap(values);\n+  Tensor tensor(int64(), buffer, shape, strides);\n+  SparseTensorImpl<SparseCSRIndex> st(tensor);\n+\n+  ASSERT_EQ(12, st.non_zero_length());\n+  ASSERT_TRUE(st.is_mutable());\n+\n+  const int64_t* ptr = reinterpret_cast<const int64_t*>(st.raw_data());\n+  for (int i = 0; i < 6; ++i) {\n+    ASSERT_EQ(i + 1, ptr[i]);\n+  }\n+  for (int i = 0; i < 6; ++i) {\n+    ASSERT_EQ(i + 11, ptr[i + 6]);\n+  }\n+\n+  const auto& si = internal::checked_cast<const SparseCSRIndex&>(*st.sparse_index());\n+  ASSERT_EQ(1, si.indptr()->ndim());\n+  ASSERT_EQ(1, si.indices()->ndim());\n+\n+  const int64_t* indptr_begin = reinterpret_cast<const int64_t*>(si.indptr()->raw_data());\n+  std::vector<int64_t> indptr_values(indptr_begin,\n+                                     indptr_begin + si.indptr()->shape()[0]);\n+\n+  ASSERT_EQ(7, indptr_values.size());\n+  ASSERT_EQ(std::vector<int64_t>({0, 2, 4, 6, 8, 10, 12}), indptr_values);\n \n Review comment:\n   This could benefit from a `AssertNumericDataEqual` helper or similar.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T11:15:04.486+0000",
                    "updated": "2019-01-23T11:15:04.486+0000",
                    "started": "2019-01-23T11:15:04.485+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188855",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/188856",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#discussion_r250149347\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor-test.cc\n ##########\n @@ -186,6 +186,58 @@ TEST(TestSparseCOOTensor, CreationFromTensor) {\n   ASSERT_EQ(3, sidx->Value({11, 2}));\n }\n \n+TEST(TestSparseCOOTensor, CreationFromNonContiguousTensor) {\n+  std::vector<int64_t> shape = {2, 3, 4};\n+  std::vector<int64_t> values = {1,  0, 0, 0, 2,  0, 0, 0, 0, 0, 3,  0, 0, 0, 4,  0,\n+                                 5,  0, 0, 0, 6,  0, 0, 0, 0, 0, 11, 0, 0, 0, 12, 0,\n+                                 13, 0, 0, 0, 14, 0, 0, 0, 0, 0, 15, 0, 0, 0, 16, 0};\n+  std::vector<int64_t> strides = {192, 64, 16};\n+  std::shared_ptr<Buffer> buffer = Buffer::Wrap(values);\n+  Tensor tensor(int64(), buffer, shape, strides);\n+  SparseTensorImpl<SparseCOOIndex> st(tensor);\n+\n+  ASSERT_EQ(12, st.non_zero_length());\n+  ASSERT_TRUE(st.is_mutable());\n+\n+  const int64_t* ptr = reinterpret_cast<const int64_t*>(st.raw_data());\n \n Review comment:\n   This can of code occurs several time in the test file. Could you define a test helper for this (perhaps in `test-util.h`)? So this would become e.g.:\r\n   ```cpp\r\n   AssertNumericDataEqual(st.raw_data(), std::vector<int64_t>{1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 16});\r\n   ```\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T11:15:04.515+0000",
                    "updated": "2019-01-23T11:15:04.515+0000",
                    "started": "2019-01-23T11:15:04.515+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188856",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/188857",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#discussion_r250143867\n \n \n\n ##########\n File path: cpp/src/arrow/tensor-test.cc\n ##########\n @@ -104,13 +104,14 @@ TEST(TestTensor, ZeroDimensionalTensor) {\n   ASSERT_EQ(t.strides().size(), 1);\n }\n \n-TEST(TestNumericTensor, ElementAccess) {\n+TEST(TestNumericTensor, ElementAccessWithRowMajorStrides) {\n   std::vector<int64_t> shape = {3, 4};\n \n   std::vector<int64_t> values_i64 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};\n   std::shared_ptr<Buffer> buffer_i64(Buffer::Wrap(values_i64));\n   NumericTensor<Int64Type> t_i64(buffer_i64, shape);\n \n+  ASSERT_TRUE(t_i64.is_row_major());\n \n Review comment:\n   Also `ASSERT_FALSE(is_column_major())` and `ASSERT_TRUE(is_contiguous())`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T11:15:04.522+0000",
                    "updated": "2019-01-23T11:15:04.522+0000",
                    "started": "2019-01-23T11:15:04.520+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188857",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/188858",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#discussion_r250149347\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor-test.cc\n ##########\n @@ -186,6 +186,58 @@ TEST(TestSparseCOOTensor, CreationFromTensor) {\n   ASSERT_EQ(3, sidx->Value({11, 2}));\n }\n \n+TEST(TestSparseCOOTensor, CreationFromNonContiguousTensor) {\n+  std::vector<int64_t> shape = {2, 3, 4};\n+  std::vector<int64_t> values = {1,  0, 0, 0, 2,  0, 0, 0, 0, 0, 3,  0, 0, 0, 4,  0,\n+                                 5,  0, 0, 0, 6,  0, 0, 0, 0, 0, 11, 0, 0, 0, 12, 0,\n+                                 13, 0, 0, 0, 14, 0, 0, 0, 0, 0, 15, 0, 0, 0, 16, 0};\n+  std::vector<int64_t> strides = {192, 64, 16};\n+  std::shared_ptr<Buffer> buffer = Buffer::Wrap(values);\n+  Tensor tensor(int64(), buffer, shape, strides);\n+  SparseTensorImpl<SparseCOOIndex> st(tensor);\n+\n+  ASSERT_EQ(12, st.non_zero_length());\n+  ASSERT_TRUE(st.is_mutable());\n+\n+  const int64_t* ptr = reinterpret_cast<const int64_t*>(st.raw_data());\n \n Review comment:\n   This kind of code occurs several time in the test file. Could you define a test helper for this (perhaps in `test-util.h`)? So this would become e.g.:\r\n   ```cpp\r\n   AssertNumericDataEqual(st.raw_data(), std::vector<int64_t>{1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 16});\r\n   ```\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T11:15:25.000+0000",
                    "updated": "2019-01-23T11:15:25.000+0000",
                    "started": "2019-01-23T11:15:24.999+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188858",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/190553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#discussion_r251234896\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor-test.cc\n ##########\n @@ -186,6 +186,58 @@ TEST(TestSparseCOOTensor, CreationFromTensor) {\n   ASSERT_EQ(3, sidx->Value({11, 2}));\n }\n \n+TEST(TestSparseCOOTensor, CreationFromNonContiguousTensor) {\n+  std::vector<int64_t> shape = {2, 3, 4};\n+  std::vector<int64_t> values = {1,  0, 0, 0, 2,  0, 0, 0, 0, 0, 3,  0, 0, 0, 4,  0,\n+                                 5,  0, 0, 0, 6,  0, 0, 0, 0, 0, 11, 0, 0, 0, 12, 0,\n+                                 13, 0, 0, 0, 14, 0, 0, 0, 0, 0, 15, 0, 0, 0, 16, 0};\n+  std::vector<int64_t> strides = {192, 64, 16};\n+  std::shared_ptr<Buffer> buffer = Buffer::Wrap(values);\n+  Tensor tensor(int64(), buffer, shape, strides);\n+  SparseTensorImpl<SparseCOOIndex> st(tensor);\n+\n+  ASSERT_EQ(12, st.non_zero_length());\n+  ASSERT_TRUE(st.is_mutable());\n+\n+  const int64_t* ptr = reinterpret_cast<const int64_t*>(st.raw_data());\n+  for (int i = 0; i < 6; ++i) {\n+    ASSERT_EQ(i + 1, ptr[i]);\n+  }\n+  for (int i = 0; i < 6; ++i) {\n+    ASSERT_EQ(i + 11, ptr[i + 6]);\n+  }\n+\n+  const auto& si = internal::checked_cast<const SparseCOOIndex&>(*st.sparse_index());\n+  std::shared_ptr<SparseCOOIndex::CoordsTensor> sidx = si.indices();\n+  ASSERT_EQ(std::vector<int64_t>({12, 3}), sidx->shape());\n+  ASSERT_TRUE(sidx->is_column_major());\n \n Review comment:\n   It is for the zero-copy compatibility with SciPy and pydata/sparse.\r\n   \r\n   See [this discussion](https://github.com/apache/arrow/pull/2546#discussion_r221608596).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-27T12:47:47.341+0000",
                    "updated": "2019-01-27T12:47:47.341+0000",
                    "started": "2019-01-27T12:47:47.340+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "190553",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/190565",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#discussion_r251237518\n \n \n\n ##########\n File path: cpp/src/arrow/tensor-test.cc\n ##########\n @@ -104,13 +104,14 @@ TEST(TestTensor, ZeroDimensionalTensor) {\n   ASSERT_EQ(t.strides().size(), 1);\n }\n \n-TEST(TestNumericTensor, ElementAccess) {\n+TEST(TestNumericTensor, ElementAccessWithRowMajorStrides) {\n   std::vector<int64_t> shape = {3, 4};\n \n   std::vector<int64_t> values_i64 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};\n   std::shared_ptr<Buffer> buffer_i64(Buffer::Wrap(values_i64));\n   NumericTensor<Int64Type> t_i64(buffer_i64, shape);\n \n+  ASSERT_TRUE(t_i64.is_row_major());\n \n Review comment:\n   Done.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-27T13:51:20.633+0000",
                    "updated": "2019-01-27T13:51:20.633+0000",
                    "started": "2019-01-27T13:51:20.632+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "190565",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/190566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#discussion_r251237536\n \n \n\n ##########\n File path: cpp/src/arrow/tensor-test.cc\n ##########\n @@ -160,15 +162,17 @@ TEST(TestNumericTensor, ElementAccessWithRowMajorStrides) {\n   ASSERT_EQ(11.1f, t_f32.Value({2, 2}));\n }\n \n-TEST(TestNumericTensor, ElementAccessWithColumnMajorStrides) {\n+TEST(TestNumericTensor, ElementAccessWithNonContiguousStrides) {\n   std::vector<int64_t> shape = {3, 4};\n \n   const int64_t i64_size = sizeof(int64_t);\n-  std::vector<int64_t> values_i64 = {1, 5, 9, 0, 2, 6, 10, 0, 3, 7, 11, 0, 4, 8, 12, 0};\n-  std::vector<int64_t> strides_i64 = {i64_size, i64_size * 4};\n+  std::vector<int64_t> values_i64 = {1, 2, 3, 4, 0,  0,  5,  6, 7,\n+                                     8, 0, 0, 9, 10, 11, 12, 0, 0};\n+  std::vector<int64_t> strides_i64 = {i64_size * 6, i64_size};\n   std::shared_ptr<Buffer> buffer_i64(Buffer::Wrap(values_i64));\n   NumericTensor<Int64Type> t_i64(buffer_i64, shape, strides_i64);\n \n+  ASSERT_FALSE(t_i64.is_contiguous());\n \n Review comment:\n   Done.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-27T13:51:23.809+0000",
                    "updated": "2019-01-27T13:51:23.809+0000",
                    "started": "2019-01-27T13:51:23.809+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "190566",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/190567",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#discussion_r251237544\n \n \n\n ##########\n File path: cpp/src/arrow/tensor-test.cc\n ##########\n @@ -121,22 +122,23 @@ TEST(TestNumericTensor, ElementAccess) {\n   std::shared_ptr<Buffer> buffer_f32(Buffer::Wrap(values_f32));\n   NumericTensor<FloatType> t_f32(buffer_f32, shape);\n \n+  ASSERT_TRUE(t_f32.is_row_major());\n   ASSERT_EQ(1.1f, t_f32.Value({0, 0}));\n   ASSERT_EQ(5.1f, t_f32.Value({1, 0}));\n   ASSERT_EQ(6.1f, t_f32.Value({1, 1}));\n   ASSERT_EQ(11.1f, t_f32.Value({2, 2}));\n }\n \n-TEST(TestNumericTensor, ElementAccessWithRowMajorStrides) {\n+TEST(TestNumericTensor, ElementAccessWithColumnMajorStrides) {\n   std::vector<int64_t> shape = {3, 4};\n \n   const int64_t i64_size = sizeof(int64_t);\n-  std::vector<int64_t> values_i64 = {1, 2, 3, 4, 0,  0,  5,  6, 7,\n-                                     8, 0, 0, 9, 10, 11, 12, 0, 0};\n-  std::vector<int64_t> strides_i64 = {i64_size * 6, i64_size};\n+  std::vector<int64_t> values_i64 = {1, 5, 9, 2, 6, 10, 3, 7, 11, 4, 8, 12};\n+  std::vector<int64_t> strides_i64 = {i64_size, i64_size * 3};\n   std::shared_ptr<Buffer> buffer_i64(Buffer::Wrap(values_i64));\n   NumericTensor<Int64Type> t_i64(buffer_i64, shape, strides_i64);\n \n+  ASSERT_TRUE(t_i64.is_column_major());\n \n Review comment:\n   Done.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-27T13:51:27.895+0000",
                    "updated": "2019-01-27T13:51:27.895+0000",
                    "started": "2019-01-27T13:51:27.895+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "190567",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/190568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#discussion_r251237557\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor-test.cc\n ##########\n @@ -186,6 +186,58 @@ TEST(TestSparseCOOTensor, CreationFromTensor) {\n   ASSERT_EQ(3, sidx->Value({11, 2}));\n }\n \n+TEST(TestSparseCOOTensor, CreationFromNonContiguousTensor) {\n+  std::vector<int64_t> shape = {2, 3, 4};\n+  std::vector<int64_t> values = {1,  0, 0, 0, 2,  0, 0, 0, 0, 0, 3,  0, 0, 0, 4,  0,\n+                                 5,  0, 0, 0, 6,  0, 0, 0, 0, 0, 11, 0, 0, 0, 12, 0,\n+                                 13, 0, 0, 0, 14, 0, 0, 0, 0, 0, 15, 0, 0, 0, 16, 0};\n+  std::vector<int64_t> strides = {192, 64, 16};\n+  std::shared_ptr<Buffer> buffer = Buffer::Wrap(values);\n+  Tensor tensor(int64(), buffer, shape, strides);\n+  SparseTensorImpl<SparseCOOIndex> st(tensor);\n+\n+  ASSERT_EQ(12, st.non_zero_length());\n+  ASSERT_TRUE(st.is_mutable());\n+\n+  const int64_t* ptr = reinterpret_cast<const int64_t*>(st.raw_data());\n+  for (int i = 0; i < 6; ++i) {\n+    ASSERT_EQ(i + 1, ptr[i]);\n+  }\n+  for (int i = 0; i < 6; ++i) {\n+    ASSERT_EQ(i + 11, ptr[i + 6]);\n+  }\n+\n+  const auto& si = internal::checked_cast<const SparseCOOIndex&>(*st.sparse_index());\n+  std::shared_ptr<SparseCOOIndex::CoordsTensor> sidx = si.indices();\n+  ASSERT_EQ(std::vector<int64_t>({12, 3}), sidx->shape());\n+  ASSERT_TRUE(sidx->is_column_major());\n+\n+  // (0, 0, 0) -> 1\n+  ASSERT_EQ(0, sidx->Value({0, 0}));\n+  ASSERT_EQ(0, sidx->Value({0, 1}));\n+  ASSERT_EQ(0, sidx->Value({0, 2}));\n \n Review comment:\n   Done.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-27T13:51:44.412+0000",
                    "updated": "2019-01-27T13:51:44.412+0000",
                    "started": "2019-01-27T13:51:44.411+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "190568",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/190569",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#discussion_r251237570\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor-test.cc\n ##########\n @@ -186,6 +186,58 @@ TEST(TestSparseCOOTensor, CreationFromTensor) {\n   ASSERT_EQ(3, sidx->Value({11, 2}));\n }\n \n+TEST(TestSparseCOOTensor, CreationFromNonContiguousTensor) {\n+  std::vector<int64_t> shape = {2, 3, 4};\n+  std::vector<int64_t> values = {1,  0, 0, 0, 2,  0, 0, 0, 0, 0, 3,  0, 0, 0, 4,  0,\n+                                 5,  0, 0, 0, 6,  0, 0, 0, 0, 0, 11, 0, 0, 0, 12, 0,\n+                                 13, 0, 0, 0, 14, 0, 0, 0, 0, 0, 15, 0, 0, 0, 16, 0};\n+  std::vector<int64_t> strides = {192, 64, 16};\n+  std::shared_ptr<Buffer> buffer = Buffer::Wrap(values);\n+  Tensor tensor(int64(), buffer, shape, strides);\n+  SparseTensorImpl<SparseCOOIndex> st(tensor);\n+\n+  ASSERT_EQ(12, st.non_zero_length());\n+  ASSERT_TRUE(st.is_mutable());\n+\n+  const int64_t* ptr = reinterpret_cast<const int64_t*>(st.raw_data());\n \n Review comment:\n   Done.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-27T13:51:58.790+0000",
                    "updated": "2019-01-27T13:51:58.790+0000",
                    "started": "2019-01-27T13:51:58.790+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "190569",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/190570",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#discussion_r251237573\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor-test.cc\n ##########\n @@ -241,4 +293,45 @@ TEST(TestSparseCSRMatrix, CreationFromNumericTensor2D) {\n   ASSERT_EQ(std::vector<int64_t>({0, 2, 1, 3, 0, 2, 1, 3, 0, 2, 1, 3}), indices_values);\n }\n \n+TEST(TestSparseCSRMatrix, CreationFromNonContiguousTensor) {\n+  std::vector<int64_t> shape = {6, 4};\n+  std::vector<int64_t> values = {1,  0, 0, 0, 2,  0, 0, 0, 0, 0, 3,  0, 0, 0, 4,  0,\n+                                 5,  0, 0, 0, 6,  0, 0, 0, 0, 0, 11, 0, 0, 0, 12, 0,\n+                                 13, 0, 0, 0, 14, 0, 0, 0, 0, 0, 15, 0, 0, 0, 16, 0};\n+  std::vector<int64_t> strides = {64, 16};\n+  std::shared_ptr<Buffer> buffer = Buffer::Wrap(values);\n+  Tensor tensor(int64(), buffer, shape, strides);\n+  SparseTensorImpl<SparseCSRIndex> st(tensor);\n+\n+  ASSERT_EQ(12, st.non_zero_length());\n+  ASSERT_TRUE(st.is_mutable());\n+\n+  const int64_t* ptr = reinterpret_cast<const int64_t*>(st.raw_data());\n+  for (int i = 0; i < 6; ++i) {\n+    ASSERT_EQ(i + 1, ptr[i]);\n+  }\n+  for (int i = 0; i < 6; ++i) {\n+    ASSERT_EQ(i + 11, ptr[i + 6]);\n+  }\n+\n+  const auto& si = internal::checked_cast<const SparseCSRIndex&>(*st.sparse_index());\n+  ASSERT_EQ(1, si.indptr()->ndim());\n+  ASSERT_EQ(1, si.indices()->ndim());\n+\n+  const int64_t* indptr_begin = reinterpret_cast<const int64_t*>(si.indptr()->raw_data());\n+  std::vector<int64_t> indptr_values(indptr_begin,\n+                                     indptr_begin + si.indptr()->shape()[0]);\n+\n+  ASSERT_EQ(7, indptr_values.size());\n+  ASSERT_EQ(std::vector<int64_t>({0, 2, 4, 6, 8, 10, 12}), indptr_values);\n \n Review comment:\n   Done.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-27T13:52:02.652+0000",
                    "updated": "2019-01-27T13:52:02.652+0000",
                    "started": "2019-01-27T13:52:02.652+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "190570",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/190995",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#issuecomment-458143039\n \n \n   Thanks for the updates @mrkn. There are some compilation and linting failures that need fixing (see the Travis-CI and AppVeyor builds).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-28T14:02:28.887+0000",
                    "updated": "2019-01-28T14:02:28.887+0000",
                    "started": "2019-01-28T14:02:28.886+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "190995",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/191045",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#issuecomment-458161112\n \n \n   I will merge if CI succeeds.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-28T14:51:04.972+0000",
                    "updated": "2019-01-28T14:51:04.972+0000",
                    "started": "2019-01-28T14:51:04.971+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "191045",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/191120",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#issuecomment-458209144\n \n \n   I pushed a fix for what I hope is the last Windows compilation error :-)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-28T16:49:14.523+0000",
                    "updated": "2019-01-28T16:49:14.523+0000",
                    "started": "2019-01-28T16:49:14.522+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "191120",
                    "issueId": "13210943"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/worklog/191188",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #3453: ARROW-4320: [C++] Add tests for non-contiguous tensors\nURL: https://github.com/apache/arrow/pull/3453#issuecomment-458246307\n \n \n   Successful AppVeyor build at: https://ci.appveyor.com/project/pitrou/arrow/builds/21945035\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-28T18:27:57.178+0000",
                    "updated": "2019-01-28T18:27:57.178+0000",
                    "started": "2019-01-28T18:27:57.177+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "191188",
                    "issueId": "13210943"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/6",
            "id": "6",
            "description": "A new unit, integration or system test.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/issuetypes/requirement.png",
            "name": "Test",
            "subtask": false
        },
        "timespent": 12000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3b7132d8[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6da855a6[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7a09d7bf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5523a83d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@23e55789[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@d4b7850[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@394be269[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@71e1d73d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@78319f97[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2eeef139[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@48501627[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3777782f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12000,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Jan 28 18:28:26 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-01-28T18:28:26.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4320/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-01-22T10:44:12.000+0000",
        "updated": "2019-03-12T20:42:48.000+0000",
        "timeoriginalestimate": null,
        "description": "I would like to add some test cases for tensors with non-contiguous strides.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add tests for non-contiguous tensors",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/comment/16748598",
                    "id": "16748598",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
                        "name": "mrkn",
                        "key": "mrkn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Kenta Murata",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I created the pull-request [https://github.com/apache/arrow/pull/3453|https://github.com/apache/arrow/pull/3453]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
                        "name": "mrkn",
                        "key": "mrkn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Kenta Murata",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-01-22T10:45:44.689+0000",
                    "updated": "2019-01-22T10:45:44.689+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210943/comment/16754228",
                    "id": "16754228",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 3453\n[https://github.com/apache/arrow/pull/3453]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-01-28T18:28:26.135+0000",
                    "updated": "2019-01-28T18:28:26.135+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|yi05w0:",
        "customfield_12314139": null
    }
}