{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13356245",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356245",
    "key": "ARROW-11473",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jasonkhadka",
            "name": "jasonkhadka",
            "key": "jasonkhadka",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34059",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34059",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34059",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34059"
            },
            "displayName": "jason khadka",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jasonkhadka",
            "name": "jasonkhadka",
            "key": "jasonkhadka",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34059",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34059",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34059",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34059"
            },
            "displayName": "jason khadka",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11473/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@507f24c9[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f348467[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@361be6a8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4df75bb0[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@574078b4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@16edce7c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7faa44af[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@877ba31[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c26f653[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@24c04d85[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@962fa8e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3cf16fa1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Dec 17 17:16:15 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11473/watchers",
            "watchCount": 5,
            "isWatching": false
        },
        "created": "2021-02-02T16:38:32.000+0000",
        "updated": "2021-12-17T17:16:15.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently there is no way to handle the error raised by missing columns in parquet file.\r\n\r\nIf a column passed is missing, it just raises ArrowInvalid error\r\n{code:java}\r\ncolumns=[item1, item2, item3] #item3 is not there in parquet file\r\n\r\npd.read_parquet(file_name, columns = columns)\r\n\r\n> ArrowInvalid: Field named 'item3' not found or not unique in the schema.{code}\r\nThere is no way to handle this. The ArrowInvalid also does not carry any information that can give out the field name so that in next try this filed can be ignored.\r\n\r\nExample :\r\n{code:java}\r\nfrom pyarrow.lib import ArrowInvalid \r\n\r\nread_columns = ['a','b','X'] \r\ndf = pd.DataFrame({'a': [1, 2, 3], 'b': ['foo', 'bar', 'jar']}) \r\n\r\nfile_name = '/tmp/my_df.pq' df.to_parquet(file_name) \r\n\r\ntry: \r\n    df = pd.read_parquet(file_name, columns = read_columns) \r\nexcept ArrowInvalid as e: \r\n    inval = e \r\n\r\nprint(inval.args)\r\n>(\"Field named 'X' not found or not unique in the schema.\",){code}\r\n\u00a0\r\n\r\nYou could parse the message above to get 'X', but that is a bit of hectic solution. It would be great if the error message contained the field name. So, you could do for example :\r\n\r\n\u00a0\r\n{code:java}\r\ninval.field \r\n> 'X'{code}\r\nOr a better feature would be to have a error handling in read_table of pyarrow, where something like\u00a0\\{{error='ignore'}}could be passed. This would then ignore the missing column by checking the schema.\r\n\r\nExample, in case above :\r\n{code:java}\r\ndf = pd.read_parquet(file_name, columns = read_columns, error = 'ignore'){code}\r\nWould ignore the missing column 'X'",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Needs a handling for missing columns while reading parquet file ",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356245/comment/17460722",
                    "id": "17460722",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "body": "Hi [~jasonkhadka], sorry for such a late reply.\r\n\r\nWhat you could do is use the column names from the metadata of the parquet file to get a subset of columns you want to read. Using you example I did it like so:\r\n{code:python}\r\nimport pyarrow.parquet as pq\r\nimport pandas as pd\r\n\r\nread_columns = ['a','X']\u00a0\r\ndf = pd.DataFrame({'a': [1, 2, 3], 'b': ['foo', 'bar', 'jar']})\r\n\r\nfile_name = '/tmp/my_df.pq'\r\n\r\ndf.to_parquet(file_name)\r\nm = pq.read_metadata(file_name) # reads only the metadata\r\n\r\n# Get the column names from the schema\r\ndf_columns = m.schema.names\r\n# Do an intersection with the names you want to read\r\ncolumns = list(set(read_columns) & set(df_columns))\r\n\r\npd.read_parquet(file_name, columns = columns)\r\n{code}\r\n\u00a0\r\nThe output:\r\n{code:python}\r\n   a\r\n0  1\r\n1  2\r\n2  3\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "created": "2021-12-16T13:52:12.420+0000",
                    "updated": "2021-12-16T13:52:12.420+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356245/comment/17460767",
                    "id": "17460767",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jasonkhadka",
                        "name": "jasonkhadka",
                        "key": "jasonkhadka",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34059",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34059",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34059",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34059"
                        },
                        "displayName": "jason khadka",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~alenkaf]\u00a0\r\nThanks for the solution. Yeah, definitely better than what I came up with. But still would be better to have an easier way to ignore the missing column, instead of doing all the gymnastic to go around the error:\r\n\r\n{code:java}df = pd.read_parquet(file_name, columns = read_columns, error = 'ignore'){code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jasonkhadka",
                        "name": "jasonkhadka",
                        "key": "jasonkhadka",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34059",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34059",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34059",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34059"
                        },
                        "displayName": "jason khadka",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-12-16T14:17:22.776+0000",
                    "updated": "2021-12-16T14:18:57.151+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356245/comment/17461262",
                    "id": "17461262",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "body": "I am not sure if that would be something to add into the library itself. Validating a schema and returning an error if the field name can not be referenced is a way I would expect it to work. Also it is possible to deal with the error in a straightforward way, I would say. But I can be wrong.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "created": "2021-12-17T08:06:01.723+0000",
                    "updated": "2021-12-17T08:06:01.723+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356245/comment/17461572",
                    "id": "17461572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hi Jason,\r\n\r\nIf you know the schema ahead of time (it seems like you are expecting a certain column), the datasets module might be useful to you. Any missing columns can be populated with null.\u00a0\r\n\r\n\u00a0\r\n{code:python}\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\nimport pyarrow.dataset as ds\r\n\r\nread_columns = ['a','b','X'] \r\ndf = pa.table({'a': pa.array([1, 2, 3]), 'b': pa.array(['foo', 'bar', 'jar'])})\r\n\r\nfile_name = '/tmp/my_df.pq'\r\npq.write_table(df, file_name)\r\n\r\nmy_schema = pa.schema([\r\n    pa.field(\"a\", pa.int64()),\r\n    pa.field(\"b\", pa.utf8()),\r\n    pa.field(\"X\", pa.utf8())\r\n])\r\n\r\ndataset = ds.dataset(file_name, format=\"parquet\", schema=my_schema)\r\ndf = dataset.to_table()\r\nprint(df)\r\n# pyarrow.Table\r\n# a: int64\r\n# b: string\r\n# X: string\r\n# ----\r\n# a: [[1,2,3]]\r\n# b: [[\"foo\",\"bar\",\"jar\"]]\r\n# X: [[null,null,null]] {code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-12-17T17:16:15.139+0000",
                    "updated": "2021-12-17T17:16:15.139+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0n9qw:",
        "customfield_12314139": null
    }
}