{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13259067",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259067",
    "key": "ARROW-6710",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "aggregateprogress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6710/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 9,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259067/worklog/319333",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5521: ARROW-6710: [Java] Add JDBC adapter test to cover cases which contains some null values\nURL: https://github.com/apache/arrow/pull/5521\n \n \n   Related to [ARROW-6710](https://issues.apache.org/jira/browse/ARROW-6710).\r\n   \r\n   The current JDBC adapter tests only cover the cases that values are all non-null or all null.\r\n   However, the cases that ResultSet has some null values are not covered (see ARROW-6709).\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T03:57:54.044+0000",
                    "updated": "2019-09-27T03:57:54.044+0000",
                    "started": "2019-09-27T03:57:54.044+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319333",
                    "issueId": "13259067"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259067/worklog/319358",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5521: ARROW-6710: [Java] Add JDBC adapter test to cover cases which contains some null values\nURL: https://github.com/apache/arrow/pull/5521#issuecomment-535799980\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5521?src=pr&el=h1) Report\n   > Merging [#5521](https://codecov.io/gh/apache/arrow/pull/5521?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/46a14db8ae4b77da3f29065304badbeb84cbddf6?src=pr&el=desc) will **increase** coverage by `1%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5521/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5521?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5521      +/-   ##\n   ==========================================\n   + Coverage    88.7%    89.7%      +1%     \n   ==========================================\n     Files         964      714     -250     \n     Lines      128215   108722   -19493     \n     Branches     1501        0    -1501     \n   ==========================================\n   - Hits       113731    97529   -16202     \n   + Misses      14119    11193    -2926     \n   + Partials      365        0     -365\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5521?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/filesystem/s3\\_internal.h](https://codecov.io/gh/apache/arrow/pull/5521/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9maWxlc3lzdGVtL3MzX2ludGVybmFsLmg=) | `90.74% <0%> (-3.71%)` | :arrow_down: |\n   | [cpp/src/arrow/json/converter.cc](https://codecov.io/gh/apache/arrow/pull/5521/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NvbnZlcnRlci5jYw==) | `90.05% <0%> (-1.76%)` | :arrow_down: |\n   | [cpp/src/arrow/json/chunked\\_builder.cc](https://codecov.io/gh/apache/arrow/pull/5521/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NodW5rZWRfYnVpbGRlci5jYw==) | `79.91% <0%> (-1.68%)` | :arrow_down: |\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/5521/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `70.75% <0%> (-0.95%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/5521/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/5521/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [r/R/filesystem.R](https://codecov.io/gh/apache/arrow/pull/5521/diff?src=pr&el=tree#diff-ci9SL2ZpbGVzeXN0ZW0uUg==) | | |\n   | [r/R/list.R](https://codecov.io/gh/apache/arrow/pull/5521/diff?src=pr&el=tree#diff-ci9SL2xpc3QuUg==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/5521/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [r/src/array\\_to\\_vector.cpp](https://codecov.io/gh/apache/arrow/pull/5521/diff?src=pr&el=tree#diff-ci9zcmMvYXJyYXlfdG9fdmVjdG9yLmNwcA==) | | |\n   | ... and [245 more](https://codecov.io/gh/apache/arrow/pull/5521/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5521?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5521?src=pr&el=footer). Last update [46a14db...4f95eed](https://codecov.io/gh/apache/arrow/pull/5521?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T06:01:32.759+0000",
                    "updated": "2019-09-27T06:01:32.759+0000",
                    "started": "2019-09-27T06:01:32.759+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319358",
                    "issueId": "13259067"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259067/worklog/320256",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5521: ARROW-6710: [Java] Add JDBC adapter test to cover cases which contains some null values\nURL: https://github.com/apache/arrow/pull/5521#issuecomment-536329767\n \n \n   https://issues.apache.org/jira/browse/ARROW-6710\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-29T18:46:12.515+0000",
                    "updated": "2019-09-29T18:46:12.515+0000",
                    "started": "2019-09-29T18:46:12.515+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "320256",
                    "issueId": "13259067"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259067/worklog/323384",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #5521: ARROW-6710: [Java] Add JDBC adapter test to cover cases which contains some null values\nURL: https://github.com/apache/arrow/pull/5521#issuecomment-538376489\n \n \n   cc @emkornfield \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-04T12:29:57.293+0000",
                    "updated": "2019-10-04T12:29:57.293+0000",
                    "started": "2019-10-04T12:29:57.292+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "323384",
                    "issueId": "13259067"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259067/worklog/323732",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5521: ARROW-6710: [Java] Add JDBC adapter test to cover cases which contains some null values\nURL: https://github.com/apache/arrow/pull/5521#discussion_r331684607\n \n \n\n ##########\n File path: java/adapter/jdbc/src/test/java/org/apache/arrow/adapter/jdbc/JdbcToArrowTestHelper.java\n ##########\n @@ -56,112 +56,167 @@ public static void assertIntVectorValues(IntVector intVector, int rowCount, Inte\n     assertEquals(rowCount, intVector.getValueCount());\n \n     for (int j = 0; j < intVector.getValueCount(); j++) {\n-      assertEquals(values[j].intValue(), intVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(intVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].intValue(), intVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertBooleanVectorValues(BitVector bitVector, int rowCount, Boolean[] values) {\n     assertEquals(rowCount, bitVector.getValueCount());\n \n     for (int j = 0; j < bitVector.getValueCount(); j++) {\n-      assertEquals(values[j].booleanValue(), bitVector.get(j) == 1);\n+      if (values[j] == null) {\n+        assertTrue(bitVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].booleanValue(), bitVector.get(j) == 1);\n+      }\n     }\n   }\n \n   public static void assertBitVectorValues(BitVector bitVector, int rowCount, Integer[] values) {\n     assertEquals(rowCount, bitVector.getValueCount());\n \n     for (int j = 0; j < bitVector.getValueCount(); j++) {\n-      assertEquals(values[j].intValue(), bitVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(bitVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].intValue(), bitVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertTinyIntVectorValues(TinyIntVector tinyIntVector, int rowCount, Integer[] values) {\n     assertEquals(rowCount, tinyIntVector.getValueCount());\n \n     for (int j = 0; j < tinyIntVector.getValueCount(); j++) {\n-      assertEquals(values[j].intValue(), tinyIntVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(tinyIntVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].intValue(), tinyIntVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertSmallIntVectorValues(SmallIntVector smallIntVector, int rowCount, Integer[] values) {\n     assertEquals(rowCount, smallIntVector.getValueCount());\n \n     for (int j = 0; j < smallIntVector.getValueCount(); j++) {\n-      assertEquals(values[j].intValue(), smallIntVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(smallIntVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].intValue(), smallIntVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertBigIntVectorValues(BigIntVector bigIntVector, int rowCount, Long[] values) {\n     assertEquals(rowCount, bigIntVector.getValueCount());\n \n     for (int j = 0; j < bigIntVector.getValueCount(); j++) {\n-      assertEquals(values[j].longValue(), bigIntVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(bigIntVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].longValue(), bigIntVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertDecimalVectorValues(DecimalVector decimalVector, int rowCount, BigDecimal[] values) {\n     assertEquals(rowCount, decimalVector.getValueCount());\n \n     for (int j = 0; j < decimalVector.getValueCount(); j++) {\n-      assertNotNull(decimalVector.getObject(j));\n-      assertEquals(values[j].doubleValue(), decimalVector.getObject(j).doubleValue(), 0);\n+      if (values[j] == null) {\n+        assertTrue(decimalVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].doubleValue(), decimalVector.getObject(j).doubleValue(), 0);\n+      }\n     }\n   }\n \n   public static void assertFloat8VectorValues(Float8Vector float8Vector, int rowCount, Double[] values) {\n     assertEquals(rowCount, float8Vector.getValueCount());\n \n     for (int j = 0; j < float8Vector.getValueCount(); j++) {\n-      assertEquals(values[j], float8Vector.get(j), 0.01);\n+      if (values[j] == null) {\n+        assertTrue(float8Vector.isNull(j));\n+      } else {\n+        assertEquals(values[j], float8Vector.get(j), 0.01);\n+      }\n     }\n   }\n \n   public static void assertFloat4VectorValues(Float4Vector float4Vector, int rowCount, Float[] values) {\n     assertEquals(rowCount, float4Vector.getValueCount());\n \n     for (int j = 0; j < float4Vector.getValueCount(); j++) {\n-      assertEquals(values[j], float4Vector.get(j), 0.01);\n+      if (values[j] == null) {\n+        assertTrue(float4Vector.isNull(j));\n+      } else {\n+        assertEquals(values[j], float4Vector.get(j), 0.01);\n+      }\n     }\n   }\n \n   public static void assertTimeVectorValues(TimeMilliVector timeMilliVector, int rowCount, Long[] values) {\n     assertEquals(rowCount, timeMilliVector.getValueCount());\n \n     for (int j = 0; j < timeMilliVector.getValueCount(); j++) {\n-      assertEquals(values[j].longValue(), timeMilliVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(timeMilliVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].longValue(), timeMilliVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertDateVectorValues(DateMilliVector dateMilliVector, int rowCount, Long[] values) {\n     assertEquals(rowCount, dateMilliVector.getValueCount());\n \n     for (int j = 0; j < dateMilliVector.getValueCount(); j++) {\n-      assertEquals(values[j].longValue(), dateMilliVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(dateMilliVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].longValue(), dateMilliVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertTimeStampVectorValues(TimeStampVector timeStampVector, int rowCount, Long[] values) {\n     assertEquals(rowCount, timeStampVector.getValueCount());\n \n     for (int j = 0; j < timeStampVector.getValueCount(); j++) {\n-      assertEquals(values[j].longValue(), timeStampVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(timeStampVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].longValue(), timeStampVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertVarBinaryVectorValues(VarBinaryVector varBinaryVector, int rowCount, byte[][] values) {\n     assertEquals(rowCount, varBinaryVector.getValueCount());\n \n     for (int j = 0; j < varBinaryVector.getValueCount(); j++) {\n-      assertArrayEquals(values[j], varBinaryVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(varBinaryVector.isNull(j));\n+      } else {\n+        assertArrayEquals(values[j], varBinaryVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertVarcharVectorValues(VarCharVector varCharVector, int rowCount, byte[][] values) {\n     assertEquals(rowCount, varCharVector.getValueCount());\n \n     for (int j = 0; j < varCharVector.getValueCount(); j++) {\n-      assertArrayEquals(values[j], varCharVector.get(j));\n+      if (values[j] == null) {\n \n Review comment:\n   it is possible to factor out the the code in some way to avoid the same if/else block in all tests?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-04T21:01:11.324+0000",
                    "updated": "2019-10-04T21:01:11.324+0000",
                    "started": "2019-10-04T21:01:11.323+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "323732",
                    "issueId": "13259067"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259067/worklog/323733",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5521: ARROW-6710: [Java] Add JDBC adapter test to cover cases which contains some null values\nURL: https://github.com/apache/arrow/pull/5521#issuecomment-538558614\n \n \n   One question on potential refactoring, otherwise I think this can be merged.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-04T21:01:52.421+0000",
                    "updated": "2019-10-04T21:01:52.421+0000",
                    "started": "2019-10-04T21:01:52.421+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "323733",
                    "issueId": "13259067"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259067/worklog/323852",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5521: ARROW-6710: [Java] Add JDBC adapter test to cover cases which contains some null values\nURL: https://github.com/apache/arrow/pull/5521#discussion_r331727690\n \n \n\n ##########\n File path: java/adapter/jdbc/src/test/java/org/apache/arrow/adapter/jdbc/JdbcToArrowTestHelper.java\n ##########\n @@ -56,112 +56,167 @@ public static void assertIntVectorValues(IntVector intVector, int rowCount, Inte\n     assertEquals(rowCount, intVector.getValueCount());\n \n     for (int j = 0; j < intVector.getValueCount(); j++) {\n-      assertEquals(values[j].intValue(), intVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(intVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].intValue(), intVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertBooleanVectorValues(BitVector bitVector, int rowCount, Boolean[] values) {\n     assertEquals(rowCount, bitVector.getValueCount());\n \n     for (int j = 0; j < bitVector.getValueCount(); j++) {\n-      assertEquals(values[j].booleanValue(), bitVector.get(j) == 1);\n+      if (values[j] == null) {\n+        assertTrue(bitVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].booleanValue(), bitVector.get(j) == 1);\n+      }\n     }\n   }\n \n   public static void assertBitVectorValues(BitVector bitVector, int rowCount, Integer[] values) {\n     assertEquals(rowCount, bitVector.getValueCount());\n \n     for (int j = 0; j < bitVector.getValueCount(); j++) {\n-      assertEquals(values[j].intValue(), bitVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(bitVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].intValue(), bitVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertTinyIntVectorValues(TinyIntVector tinyIntVector, int rowCount, Integer[] values) {\n     assertEquals(rowCount, tinyIntVector.getValueCount());\n \n     for (int j = 0; j < tinyIntVector.getValueCount(); j++) {\n-      assertEquals(values[j].intValue(), tinyIntVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(tinyIntVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].intValue(), tinyIntVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertSmallIntVectorValues(SmallIntVector smallIntVector, int rowCount, Integer[] values) {\n     assertEquals(rowCount, smallIntVector.getValueCount());\n \n     for (int j = 0; j < smallIntVector.getValueCount(); j++) {\n-      assertEquals(values[j].intValue(), smallIntVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(smallIntVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].intValue(), smallIntVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertBigIntVectorValues(BigIntVector bigIntVector, int rowCount, Long[] values) {\n     assertEquals(rowCount, bigIntVector.getValueCount());\n \n     for (int j = 0; j < bigIntVector.getValueCount(); j++) {\n-      assertEquals(values[j].longValue(), bigIntVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(bigIntVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].longValue(), bigIntVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertDecimalVectorValues(DecimalVector decimalVector, int rowCount, BigDecimal[] values) {\n     assertEquals(rowCount, decimalVector.getValueCount());\n \n     for (int j = 0; j < decimalVector.getValueCount(); j++) {\n-      assertNotNull(decimalVector.getObject(j));\n-      assertEquals(values[j].doubleValue(), decimalVector.getObject(j).doubleValue(), 0);\n+      if (values[j] == null) {\n+        assertTrue(decimalVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].doubleValue(), decimalVector.getObject(j).doubleValue(), 0);\n+      }\n     }\n   }\n \n   public static void assertFloat8VectorValues(Float8Vector float8Vector, int rowCount, Double[] values) {\n     assertEquals(rowCount, float8Vector.getValueCount());\n \n     for (int j = 0; j < float8Vector.getValueCount(); j++) {\n-      assertEquals(values[j], float8Vector.get(j), 0.01);\n+      if (values[j] == null) {\n+        assertTrue(float8Vector.isNull(j));\n+      } else {\n+        assertEquals(values[j], float8Vector.get(j), 0.01);\n+      }\n     }\n   }\n \n   public static void assertFloat4VectorValues(Float4Vector float4Vector, int rowCount, Float[] values) {\n     assertEquals(rowCount, float4Vector.getValueCount());\n \n     for (int j = 0; j < float4Vector.getValueCount(); j++) {\n-      assertEquals(values[j], float4Vector.get(j), 0.01);\n+      if (values[j] == null) {\n+        assertTrue(float4Vector.isNull(j));\n+      } else {\n+        assertEquals(values[j], float4Vector.get(j), 0.01);\n+      }\n     }\n   }\n \n   public static void assertTimeVectorValues(TimeMilliVector timeMilliVector, int rowCount, Long[] values) {\n     assertEquals(rowCount, timeMilliVector.getValueCount());\n \n     for (int j = 0; j < timeMilliVector.getValueCount(); j++) {\n-      assertEquals(values[j].longValue(), timeMilliVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(timeMilliVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].longValue(), timeMilliVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertDateVectorValues(DateMilliVector dateMilliVector, int rowCount, Long[] values) {\n     assertEquals(rowCount, dateMilliVector.getValueCount());\n \n     for (int j = 0; j < dateMilliVector.getValueCount(); j++) {\n-      assertEquals(values[j].longValue(), dateMilliVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(dateMilliVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].longValue(), dateMilliVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertTimeStampVectorValues(TimeStampVector timeStampVector, int rowCount, Long[] values) {\n     assertEquals(rowCount, timeStampVector.getValueCount());\n \n     for (int j = 0; j < timeStampVector.getValueCount(); j++) {\n-      assertEquals(values[j].longValue(), timeStampVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(timeStampVector.isNull(j));\n+      } else {\n+        assertEquals(values[j].longValue(), timeStampVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertVarBinaryVectorValues(VarBinaryVector varBinaryVector, int rowCount, byte[][] values) {\n     assertEquals(rowCount, varBinaryVector.getValueCount());\n \n     for (int j = 0; j < varBinaryVector.getValueCount(); j++) {\n-      assertArrayEquals(values[j], varBinaryVector.get(j));\n+      if (values[j] == null) {\n+        assertTrue(varBinaryVector.isNull(j));\n+      } else {\n+        assertArrayEquals(values[j], varBinaryVector.get(j));\n+      }\n     }\n   }\n \n   public static void assertVarcharVectorValues(VarCharVector varCharVector, int rowCount, byte[][] values) {\n     assertEquals(rowCount, varCharVector.getValueCount());\n \n     for (int j = 0; j < varCharVector.getValueCount(); j++) {\n-      assertArrayEquals(values[j], varCharVector.get(j));\n+      if (values[j] == null) {\n \n Review comment:\n   Since the forms(values/vector.get(j)/assert) are not all same, I think it's hard to factor out or make it complex to read.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-05T01:53:21.464+0000",
                    "updated": "2019-10-05T01:53:21.464+0000",
                    "started": "2019-10-05T01:53:21.463+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "323852",
                    "issueId": "13259067"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259067/worklog/323992",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5521: ARROW-6710: [Java] Add JDBC adapter test to cover cases which contains some null values\nURL: https://github.com/apache/arrow/pull/5521#issuecomment-538697145\n \n \n   +1 thank you.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-05T23:18:26.924+0000",
                    "updated": "2019-10-05T23:18:26.924+0000",
                    "started": "2019-10-05T23:18:26.923+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "323992",
                    "issueId": "13259067"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259067/worklog/323993",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5521: ARROW-6710: [Java] Add JDBC adapter test to cover cases which contains some null values\nURL: https://github.com/apache/arrow/pull/5521\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-05T23:18:38.187+0000",
                    "updated": "2019-10-05T23:18:38.187+0000",
                    "started": "2019-10-05T23:18:38.184+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "323993",
                    "issueId": "13259067"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 5400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@64b4e9e9[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@674febf2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@70bcc69[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1f03a701[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4759c2e2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1f472a18[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4676d51d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@444f597d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4d08ddc4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6bb93997[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b17d7c0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@252de16e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 5400,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Oct 05 23:18:46 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-10-05T23:18:46.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6710/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-09-26T14:06:53.000+0000",
        "updated": "2019-10-05T23:18:46.000+0000",
        "timeoriginalestimate": null,
        "description": "The current JDBC adapter tests only cover the cases that values are all non-null or all null.\r\n\r\nHowever, the cases that ResultSet has some null values are not covered (ARROW-6709).",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 5400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Add JDBC adapter test to cover cases which contains some null values",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13259067/comment/16945178",
                    "id": "16945178",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 5521\n[https://github.com/apache/arrow/pull/5521]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-10-05T23:18:46.338+0000",
                    "updated": "2019-10-05T23:18:46.338+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z071uw:",
        "customfield_12314139": null
    }
}