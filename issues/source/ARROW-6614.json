{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13257509",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257509",
    "key": "ARROW-6614",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6614/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 12,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257509/worklog/319589",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5529: ARROW-6614: [C++][Dataset] Add DataSourceDiscovery class\nURL: https://github.com/apache/arrow/pull/5529\n \n \n   DataSourceDiscovery is a factory-like interface to build DataSource. The class exists for the purpose of unifying/discovery schema of datasource before materializing it (since all DataSources in a Dataset must have a matching schema).\r\n   \r\n   - Add MockFileSystem::Make\r\n   - Refactor FileSystemBaseDataSource to use fs::PathTree and support partition pruning.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T14:34:19.498+0000",
                    "updated": "2019-09-27T14:34:19.498+0000",
                    "started": "2019-09-27T14:34:19.498+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319589",
                    "issueId": "13257509"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257509/worklog/319753",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5529: ARROW-6614: [C++][Dataset] Add DataSourceDiscovery class\nURL: https://github.com/apache/arrow/pull/5529#discussion_r329212169\n \n \n\n ##########\n File path: cpp/src/arrow/type.cc\n ##########\n @@ -676,6 +676,16 @@ std::vector<std::string> Schema::field_names() const {\n   return names;\n }\n \n+bool operator==(const std::shared_ptr<Schema>& lhs, const std::shared_ptr<Schema> rhs) {\n \n Review comment:\n   I think we should avoid overriding operators for stl containers, especially ones which already have those operators. To do otherwise seems like a recipe for [unfortunate surprises](https://google.github.io/styleguide/cppguide.html#Operator_Overloading). That said, an overloaded equality operator which operates on `const Schema&` seems fine (though it can't do null checking)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T19:05:06.443+0000",
                    "updated": "2019-09-27T19:05:06.443+0000",
                    "started": "2019-09-27T19:05:06.443+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319753",
                    "issueId": "13257509"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257509/worklog/319754",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5529: ARROW-6614: [C++][Dataset] Add DataSourceDiscovery class\nURL: https://github.com/apache/arrow/pull/5529#discussion_r329183104\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery.h\n ##########\n @@ -23,23 +23,80 @@\n \n #include <memory>\n #include <string>\n+#include <vector>\n \n #include \"arrow/dataset/type_fwd.h\"\n #include \"arrow/dataset/visibility.h\"\n+#include \"arrow/filesystem/filesystem.h\"\n+#include \"arrow/filesystem/path_tree.h\"\n #include \"arrow/util/macros.h\"\n \n namespace arrow {\n namespace dataset {\n \n-struct ARROW_DS_EXPORT DiscoveryOptions {\n-  std::shared_ptr<FileFormat> format = NULLPTR;\n+struct ARROW_DS_EXPORT BuildOptions {\n+  // Schema to conform to.\n \n Review comment:\n   ```suggestion\r\n     /// Schema to conform to.\r\n   ```\r\n   ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T19:05:06.514+0000",
                    "updated": "2019-09-27T19:05:06.514+0000",
                    "started": "2019-09-27T19:05:06.513+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319754",
                    "issueId": "13257509"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257509/worklog/319756",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5529: ARROW-6614: [C++][Dataset] Add DataSourceDiscovery class\nURL: https://github.com/apache/arrow/pull/5529#discussion_r329200653\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/file_base.cc\n ##########\n @@ -48,79 +48,89 @@ Status FileBasedDataFragment::Scan(std::shared_ptr<ScanContext> scan_context,\n }\n \n FileSystemBasedDataSource::FileSystemBasedDataSource(\n-    fs::FileSystem* filesystem, const fs::Selector& selector,\n-    std::shared_ptr<FileFormat> format, std::shared_ptr<Expression> partition_expression,\n-    std::vector<fs::FileStats> stats)\n-    : DataSource(std::move(partition_expression)),\n+    fs::FileSystem* filesystem, fs::PathForest forest,\n+    std::shared_ptr<Expression> source_partition, PathPartitions partitions,\n+    std::shared_ptr<FileFormat> format)\n+    : DataSource(std::move(source_partition)),\n       filesystem_(filesystem),\n-      selector_(std::move(selector)),\n-      format_(std::move(format)),\n-      stats_(std::move(stats)) {}\n+      forest_(std::move(forest)),\n+      partitions_(std::move(partitions)),\n+      format_(std::move(format)) {}\n \n Status FileSystemBasedDataSource::Make(fs::FileSystem* filesystem,\n-                                       const fs::Selector& selector,\n+                                       std::vector<fs::FileStats> stats,\n+                                       std::shared_ptr<Expression> source_partition,\n+                                       PathPartitions partitions,\n                                        std::shared_ptr<FileFormat> format,\n-                                       std::shared_ptr<Expression> partition_expression,\n-                                       std::unique_ptr<FileSystemBasedDataSource>* out) {\n-  std::vector<fs::FileStats> stats;\n-  RETURN_NOT_OK(filesystem->GetTargetStats(selector, &stats));\n-\n-  auto new_end =\n-      std::remove_if(stats.begin(), stats.end(), [&](const fs::FileStats& stats) {\n-        return stats.type() != fs::FileType::File ||\n-               !format->IsKnownExtension(stats.extension());\n-      });\n-  stats.resize(new_end - stats.begin());\n-\n-  out->reset(new FileSystemBasedDataSource(filesystem, selector, std::move(format),\n-                                           std::move(partition_expression),\n-                                           std::move(stats)));\n+                                       std::shared_ptr<DataSource>* out) {\n+  fs::PathForest forest;\n+  RETURN_NOT_OK(fs::PathTree::Make(stats, &forest));\n+  out->reset(new FileSystemBasedDataSource(filesystem, std::move(forest),\n+                                           std::move(source_partition),\n+                                           std::move(partitions), std::move(format)));\n   return Status::OK();\n }\n \n-Status FileSystemBasedDataSource::Make(fs::FileSystem* filesystem,\n-                                       const fs::Selector& selector,\n-                                       std::shared_ptr<FileFormat> format,\n-                                       std::unique_ptr<FileSystemBasedDataSource>* out) {\n-  return Make(filesystem, selector, std::move(format), nullptr, out);\n-}\n-\n DataFragmentIterator FileSystemBasedDataSource::GetFragmentsImpl(\n-    std::shared_ptr<ScanOptions> scan_options) {\n-  std::shared_ptr<ScanOptions> simplified_scan_options;\n-  if (!AssumePartitionExpression(scan_options, &simplified_scan_options)) {\n-    return MakeEmptyIterator<std::shared_ptr<DataFragment>>();\n-  }\n+    std::shared_ptr<ScanOptions> options) {\n+  std::vector<std::unique_ptr<fs::FileStats>> files;\n \n-  struct Impl : DataFragmentIterator {\n-    Impl(fs::FileSystem* filesystem, std::shared_ptr<FileFormat> format,\n-         std::shared_ptr<ScanOptions> scan_options, std::vector<fs::FileStats> stats)\n-        : filesystem_(filesystem),\n-          format_(std::move(format)),\n-          scan_options_(std::move(scan_options)),\n-          stats_(std::move(stats)) {}\n-\n-    Status Next(std::shared_ptr<DataFragment>* out) {\n-      if (i_ == stats_.size()) {\n-        *out = nullptr;\n-        return Status::OK();\n-      }\n-      FileSource src(stats_[i_++].path(), filesystem_);\n-\n-      std::unique_ptr<DataFragment> fragment;\n-      RETURN_NOT_OK(format_->MakeFragment(src, scan_options_, &fragment));\n-      *out = std::move(fragment);\n-      return Status::OK();\n+  auto visitor = [&files](const fs::FileStats& stats) {\n+    if (stats.IsFile()) {\n+      files.emplace_back(new fs::FileStats(stats));\n     }\n+    return Status::OK();\n+  };\n+  // The matcher ensures that directories (and their descendants) are not\n+  // visited.\n+  auto matcher = [this, options](const fs::FileStats& stats, bool* match) {\n+    *match = this->PartitionMatches(stats, options->filter);\n+    return Status::OK();\n+  };\n+\n+  for (auto tree : forest_) {\n+    DCHECK_OK(tree->Visit(visitor, matcher));\n+  }\n+\n+  auto file_it = MakeVectorIterator(std::move(files));\n+  auto file_to_fragment = [options, this](std::unique_ptr<fs::FileStats> stats,\n+                                          std::shared_ptr<DataFragment>* out) {\n+    std::unique_ptr<DataFragment> fragment;\n+    FileSource src(stats->path(), filesystem_);\n \n-    size_t i_ = 0;\n-    fs::FileSystem* filesystem_;\n-    std::shared_ptr<FileFormat> format_;\n-    std::shared_ptr<ScanOptions> scan_options_;\n-    std::vector<fs::FileStats> stats_;\n+    RETURN_NOT_OK(format_->MakeFragment(src, options, &fragment));\n+    *out = std::move(fragment);\n+    return Status::OK();\n   };\n \n-  return DataFragmentIterator(Impl(filesystem_, format_, scan_options, stats_));\n+  return MakeMaybeMapIterator(file_to_fragment, std::move(file_it));\n+}\n+\n+bool FileSystemBasedDataSource::PartitionMatches(const fs::FileStats& stats,\n+                                                 std::shared_ptr<Expression> filter) {\n+  if (filter == nullptr) {\n+    return true;\n+  }\n+\n+  auto found = partitions_.find(stats.path());\n+  if (found == partitions_.end()) {\n+    // No partition attached to current node (directory or file), continue.\n+    return true;\n+  }\n+\n+  auto c = found->second->Assume(*filter);\n+  if (!c.ok()) {\n+    // Could not simplify expression move on!\n+    return true;\n+  }\n+\n+  auto expr = std::move(c).ValueOrDie();\n \n Review comment:\n   `expr` could be simplified in ways other than reduction to null or false. For example given filter`\"a\"_ == 1 and \"b\"_ == 2` and partition expression were `\"b\"_ == 2` expr would be `\"a\"_ == 1` (since the constraint on `b` is already satisfied by the partition and we don't need to waste kernel work checking it on rows)\r\n   \r\n   Taking advantage of this requires collecting the simplified filters alongside [files](https://github.com/apache/arrow/pull/5529/files?file-filters%5B%5D=.cc&file-filters%5B%5D=.h#diff-49c0202173daaea224a37a6d4e64f816R80) in GetFragmentsImpl. It's fine if you don't implement this in this PR, but please add a TODO\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T19:05:06.523+0000",
                    "updated": "2019-09-27T19:05:06.523+0000",
                    "started": "2019-09-27T19:05:06.522+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319756",
                    "issueId": "13257509"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257509/worklog/319755",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5529: ARROW-6614: [C++][Dataset] Add DataSourceDiscovery class\nURL: https://github.com/apache/arrow/pull/5529#discussion_r329182298\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery.cc\n ##########\n @@ -0,0 +1,90 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/dataset/discovery.h\"\n+\n+#include <algorithm>\n+#include <memory>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+#include \"arrow/dataset/dataset.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/filesystem/path_tree.h\"\n+#include \"arrow/status.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+FileSystemDataSourceDiscovery::FileSystemDataSourceDiscovery(\n+    fs::FileSystem* filesystem, std::vector<fs::FileStats> files,\n+    std::shared_ptr<FileFormat> format)\n+    : fs_(filesystem), files_(std::move(files)), format_(std::move(format)) {}\n+\n+Status FileSystemDataSourceDiscovery::Make(fs::FileSystem* filesystem,\n+                                           std::vector<fs::FileStats> files,\n+                                           std::shared_ptr<FileFormat> format,\n+                                           std::shared_ptr<DataSourceDiscovery>* out) {\n+  out->reset(new FileSystemDataSourceDiscovery(filesystem, files, format));\n+  return Status::OK();\n+}\n+\n+Status FileSystemDataSourceDiscovery::Make(fs::FileSystem* filesystem,\n+                                           fs::Selector selector,\n+                                           std::shared_ptr<FileFormat> format,\n+                                           std::shared_ptr<DataSourceDiscovery>* out) {\n+  std::vector<fs::FileStats> files;\n+  RETURN_NOT_OK(filesystem->GetTargetStats(selector, &files));\n+  return Make(filesystem, files, format, out);\n+}\n+\n+static Status InspectSchema(fs::FileSystem* fs, const std::vector<fs::FileStats> stats,\n \n Review comment:\n   Why not inline this?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T19:05:06.523+0000",
                    "updated": "2019-09-27T19:05:06.523+0000",
                    "started": "2019-09-27T19:05:06.522+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319755",
                    "issueId": "13257509"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257509/worklog/319757",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5529: ARROW-6614: [C++][Dataset] Add DataSourceDiscovery class\nURL: https://github.com/apache/arrow/pull/5529#discussion_r329213601\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery.cc\n ##########\n @@ -0,0 +1,90 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/dataset/discovery.h\"\n+\n+#include <algorithm>\n+#include <memory>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+#include \"arrow/dataset/dataset.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/filesystem/path_tree.h\"\n+#include \"arrow/status.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+FileSystemDataSourceDiscovery::FileSystemDataSourceDiscovery(\n+    fs::FileSystem* filesystem, std::vector<fs::FileStats> files,\n+    std::shared_ptr<FileFormat> format)\n+    : fs_(filesystem), files_(std::move(files)), format_(std::move(format)) {}\n+\n+Status FileSystemDataSourceDiscovery::Make(fs::FileSystem* filesystem,\n+                                           std::vector<fs::FileStats> files,\n+                                           std::shared_ptr<FileFormat> format,\n+                                           std::shared_ptr<DataSourceDiscovery>* out) {\n+  out->reset(new FileSystemDataSourceDiscovery(filesystem, files, format));\n+  return Status::OK();\n+}\n+\n+Status FileSystemDataSourceDiscovery::Make(fs::FileSystem* filesystem,\n+                                           fs::Selector selector,\n+                                           std::shared_ptr<FileFormat> format,\n+                                           std::shared_ptr<DataSourceDiscovery>* out) {\n+  std::vector<fs::FileStats> files;\n+  RETURN_NOT_OK(filesystem->GetTargetStats(selector, &files));\n+  return Make(filesystem, files, format, out);\n+}\n+\n+static Status InspectSchema(fs::FileSystem* fs, const std::vector<fs::FileStats> stats,\n+                            const std::shared_ptr<FileFormat>& format,\n+                            std::shared_ptr<Schema>* out) {\n+  std::vector<std::shared_ptr<Schema>> schemas;\n+\n+  for (const auto& f : stats) {\n+    if (!f.IsFile()) continue;\n+\n+    std::shared_ptr<Schema> schema;\n+    RETURN_NOT_OK(format->Inspect(FileSource(f.path(), fs), &schema));\n+    schemas.push_back(schema);\n+  }\n+\n+  if (schemas.size() > 0) {\n+    // TODO merge schemas.\n+    *out = schemas[0];\n+  }\n+\n+  return Status::OK();\n+}\n+\n+Status FileSystemDataSourceDiscovery::Inspect(std::shared_ptr<Schema>* out) {\n+  return InspectSchema(fs_, files_, format_, out);\n+}\n+\n+Status FileSystemDataSourceDiscovery::Build(const BuildOptions& options,\n+                                            std::shared_ptr<Expression> source_partition,\n+                                            std::shared_ptr<DataSource>* out) {\n+  return FileSystemBasedDataSource::Make(fs_, files_, std::move(source_partition), {},\n \n Review comment:\n   Looks like MSVC is choking on that initializer list\r\n   ```suggestion\r\n     return FileSystemBasedDataSource::Make(fs_, files_, std::move(source_partition), PathPartitions{},\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T19:09:13.954+0000",
                    "updated": "2019-09-27T19:09:13.954+0000",
                    "started": "2019-09-27T19:09:13.953+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319757",
                    "issueId": "13257509"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257509/worklog/319758",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5529: ARROW-6614: [C++][Dataset] Add DataSourceDiscovery class\nURL: https://github.com/apache/arrow/pull/5529#discussion_r329213653\n \n \n\n ##########\n File path: cpp/src/arrow/type.cc\n ##########\n @@ -676,6 +676,16 @@ std::vector<std::string> Schema::field_names() const {\n   return names;\n }\n \n+bool operator==(const std::shared_ptr<Schema>& lhs, const std::shared_ptr<Schema> rhs) {\n \n Review comment:\n   This is for testing, very handy to write `EXPECT_EQ(schema_1, schema_2)`. I can move this into test-utils.h, but @pitrou asked me to add this into the public interface in a different PR for a different class.\r\n   \r\n   I think we should take a position on this.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T19:09:24.100+0000",
                    "updated": "2019-09-27T19:09:24.100+0000",
                    "started": "2019-09-27T19:09:24.099+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319758",
                    "issueId": "13257509"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257509/worklog/319771",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5529: ARROW-6614: [C++][Dataset] Add DataSourceDiscovery class\nURL: https://github.com/apache/arrow/pull/5529#discussion_r329225094\n \n \n\n ##########\n File path: cpp/src/arrow/type.cc\n ##########\n @@ -676,6 +676,16 @@ std::vector<std::string> Schema::field_names() const {\n   return names;\n }\n \n+bool operator==(const std::shared_ptr<Schema>& lhs, const std::shared_ptr<Schema> rhs) {\n \n Review comment:\n   If it's for public usage, my comment holds. If it's for testing only, I'd prefer that we add `EXPECT_PTR_EQ` or so\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T19:45:01.284+0000",
                    "updated": "2019-09-27T19:45:01.284+0000",
                    "started": "2019-09-27T19:45:01.283+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319771",
                    "issueId": "13257509"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257509/worklog/320264",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5529: ARROW-6614: [C++][Dataset] Add DataSourceDiscovery class\nURL: https://github.com/apache/arrow/pull/5529#issuecomment-536329785\n \n \n   https://issues.apache.org/jira/browse/ARROW-6614\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-29T18:46:12.991+0000",
                    "updated": "2019-09-29T18:46:12.991+0000",
                    "started": "2019-09-29T18:46:12.991+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "320264",
                    "issueId": "13257509"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257509/worklog/320656",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5529: ARROW-6614: [C++][Dataset] Add DataSourceDiscovery class\nURL: https://github.com/apache/arrow/pull/5529#discussion_r329679616\n \n \n\n ##########\n File path: cpp/src/arrow/type.cc\n ##########\n @@ -676,6 +676,16 @@ std::vector<std::string> Schema::field_names() const {\n   return names;\n }\n \n+bool operator==(const std::shared_ptr<Schema>& lhs, const std::shared_ptr<Schema> rhs) {\n \n Review comment:\n   I agree with @bkietz that it looks like a bad idea.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-30T16:47:47.469+0000",
                    "updated": "2019-09-30T16:47:47.469+0000",
                    "started": "2019-09-30T16:47:47.468+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "320656",
                    "issueId": "13257509"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257509/worklog/322066",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5529: ARROW-6614: [C++][Dataset] Add DataSourceDiscovery class\nURL: https://github.com/apache/arrow/pull/5529#discussion_r330670365\n \n \n\n ##########\n File path: cpp/src/arrow/type.h\n ##########\n @@ -1317,6 +1317,7 @@ class ARROW_EXPORT Schema : public detail::Fingerprintable {\n \n   /// Returns true if all of the schema fields are equal\n   bool Equals(const Schema& other, bool check_metadata = true) const;\n+  bool operator==(const Schema& other) const { return Equals(other); }\n \n Review comment:\n   :+1:\r\n   Added https://issues.apache.org/jira/browse/ARROW-6772 for other classes\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-02T17:16:00.727+0000",
                    "updated": "2019-10-02T17:16:00.727+0000",
                    "started": "2019-10-02T17:16:00.727+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322066",
                    "issueId": "13257509"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257509/worklog/322068",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5529: ARROW-6614: [C++][Dataset] Add DataSourceDiscovery class\nURL: https://github.com/apache/arrow/pull/5529\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-02T17:17:32.298+0000",
                    "updated": "2019-10-02T17:17:32.298+0000",
                    "started": "2019-10-02T17:17:32.297+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322068",
                    "issueId": "13257509"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 6000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6957c98e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4bd4bb50[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2736944d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4956b5c0[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4adb8ac5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6b43baeb[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@78c4df32[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4409d5f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@12dbb2b0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6439c6e2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3a5ab818[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3af07069[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Oct 02 17:17:35 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-10-02T17:17:35.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6614/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-09-18T21:14:20.000+0000",
        "updated": "2019-10-02T17:17:35.000+0000",
        "timeoriginalestimate": null,
        "description": "DataSourceDiscovery is what allows InferingSchema and constructing a DataSource with PartitionScheme.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset] Implement FileSystemDataSourceDiscovery",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257509/comment/16942999",
                    "id": "16942999",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 5529\n[https://github.com/apache/arrow/pull/5529]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-02T17:17:35.616+0000",
                    "updated": "2019-10-02T17:17:35.616+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z06s94:",
        "customfield_12314139": null
    }
}