{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13290882",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882",
    "key": "ARROW-8061",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 21000,
            "total": 21000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 21000,
            "total": 21000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8061/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 38,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/406470",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670\n \n \n   Provides ParquetFileFragment::RowGroupFragments, which wraps each row group of a parquet file in a single Fragment. These fragments may also be directly constructed from a path and the row group's index\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-19T18:20:15.025+0000",
                    "updated": "2020-03-19T18:20:15.025+0000",
                    "started": "2020-03-19T18:20:15.025+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "406470",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/406493",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#issuecomment-601346635\n \n \n   https://issues.apache.org/jira/browse/ARROW-8061\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-19T18:31:44.472+0000",
                    "updated": "2020-03-19T18:31:44.472+0000",
                    "started": "2020-03-19T18:31:44.472+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "406493",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/408212",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#discussion_r396712077\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -426,6 +469,32 @@ cdef class FileFragment(Fragment):\n         return FileFormat.wrap(self.file_fragment.format())\n \n \n+cdef class ParquetFileFragment(FileFragment):\n+    \"\"\"A Fragment representing a parquet file.\"\"\"\n+\n+    cdef:\n+        CParquetFileFragment* parquet_file_fragment\n+        int _num_row_groups\n+\n+    cdef void init(self, const shared_ptr[CFragment]& sp):\n+        FileFragment.init(self, sp)\n+        self.parquet_file_fragment = <CParquetFileFragment*> sp.get()\n+        self._num_row_groups = -1\n+\n+    @property\n+    def row_groups(self):\n+        row_groups = set(self.parquet_file_fragment.row_groups())\n+        if len(row_groups) != 0:\n+            return row_groups\n+\n+        if self._num_row_groups == -1:\n \n Review comment:\n   Should this be taken care at the C++ level? Looks like internal optimisation leaking (vector of size 0).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T19:46:18.875+0000",
                    "updated": "2020-03-23T19:46:18.875+0000",
                    "started": "2020-03-23T19:46:18.875+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408212",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/408213",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#discussion_r396708711\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/file_parquet.cc\n ##########\n @@ -197,7 +199,7 @@ class RowGroupSkipper {\n       const auto row_group = metadata_->RowGroup(row_group_idx);\n \n       const auto num_rows = row_group->num_rows();\n-      if (CanSkip(*row_group)) {\n+      if (IsExplicitlySkipped(row_group_idx) || CanSkip(*row_group)) {\n \n Review comment:\n   Can we use a std::vector<int> instead? Otherwise we loop N times to skip N-1, thus a O(n^2) worse case if we have 1 row group per fragment. We can preserve this loop by breaking the assumption that `row_group_idx`  is a row group id, e.g. if the vector is empty, use the value, otherwise use `row_group_set_[row_group_idx_]`, `IsExplicitlySkipped` would disappear.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T19:46:18.879+0000",
                    "updated": "2020-03-23T19:46:18.879+0000",
                    "started": "2020-03-23T19:46:18.879+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408213",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/408229",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#discussion_r396723455\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -426,6 +469,32 @@ cdef class FileFragment(Fragment):\n         return FileFormat.wrap(self.file_fragment.format())\n \n \n+cdef class ParquetFileFragment(FileFragment):\n+    \"\"\"A Fragment representing a parquet file.\"\"\"\n+\n+    cdef:\n+        CParquetFileFragment* parquet_file_fragment\n+        int _num_row_groups\n+\n+    cdef void init(self, const shared_ptr[CFragment]& sp):\n+        FileFragment.init(self, sp)\n+        self.parquet_file_fragment = <CParquetFileFragment*> sp.get()\n+        self._num_row_groups = -1\n+\n+    @property\n+    def row_groups(self):\n+        row_groups = set(self.parquet_file_fragment.row_groups())\n+        if len(row_groups) != 0:\n+            return row_groups\n+\n+        if self._num_row_groups == -1:\n \n Review comment:\n   Or, I think it is fine to simply return `None` here, to indicate that all row groups and not a specific set or row groups will be read.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T20:03:05.621+0000",
                    "updated": "2020-03-23T20:03:05.621+0000",
                    "started": "2020-03-23T20:03:05.621+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408229",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/408230",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#discussion_r396723455\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -426,6 +469,32 @@ cdef class FileFragment(Fragment):\n         return FileFormat.wrap(self.file_fragment.format())\n \n \n+cdef class ParquetFileFragment(FileFragment):\n+    \"\"\"A Fragment representing a parquet file.\"\"\"\n+\n+    cdef:\n+        CParquetFileFragment* parquet_file_fragment\n+        int _num_row_groups\n+\n+    cdef void init(self, const shared_ptr[CFragment]& sp):\n+        FileFragment.init(self, sp)\n+        self.parquet_file_fragment = <CParquetFileFragment*> sp.get()\n+        self._num_row_groups = -1\n+\n+    @property\n+    def row_groups(self):\n+        row_groups = set(self.parquet_file_fragment.row_groups())\n+        if len(row_groups) != 0:\n+            return row_groups\n+\n+        if self._num_row_groups == -1:\n \n Review comment:\n   Or, I think it would also be fine to simply return `None` here, to indicate that all row groups and not a specific set or row groups will be read.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T20:03:22.746+0000",
                    "updated": "2020-03-23T20:03:22.746+0000",
                    "started": "2020-03-23T20:03:22.745+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408230",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/408248",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#discussion_r396732592\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -426,6 +469,32 @@ cdef class FileFragment(Fragment):\n         return FileFormat.wrap(self.file_fragment.format())\n \n \n+cdef class ParquetFileFragment(FileFragment):\n+    \"\"\"A Fragment representing a parquet file.\"\"\"\n+\n+    cdef:\n+        CParquetFileFragment* parquet_file_fragment\n+        int _num_row_groups\n+\n+    cdef void init(self, const shared_ptr[CFragment]& sp):\n+        FileFragment.init(self, sp)\n+        self.parquet_file_fragment = <CParquetFileFragment*> sp.get()\n+        self._num_row_groups = -1\n+\n+    @property\n+    def row_groups(self):\n+        row_groups = set(self.parquet_file_fragment.row_groups())\n+        if len(row_groups) != 0:\n+            return row_groups\n+\n+        if self._num_row_groups == -1:\n \n Review comment:\n   Handling this in C++ is certainly possible, [an earlier draft included this behavior](https://github.com/apache/arrow/pull/6670/commits/351512665814e816ef46ae1dda7fe97a378e3af9#diff-b7aed3b5c0adacff778c6930cc6a03e4R417-R427). However this requires I/O on construction or lazily when the field is accessed (as here). I removed it since it seemed better not to hide implicit I/O in C++\r\n   \r\n   Returning `None` is certainly a possibility. My intent here was to allow a ParquetFileFragment to be easily introspected for its row groups even if all are selected to expedite construction of sub fragments with a narrower selection. For example:\r\n   \r\n   ```python\r\n   def single_row_group_fragments(parquet_fragment):\r\n     for row_group in parquet_fragment.row_groups:\r\n       yield ParquetFileFragment(parquet_fragment.path, set(row_group))\r\n   ```\r\n   \r\n   (Note: this PR doen't expose such a constructor for ParquetFileFragment)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T20:23:53.580+0000",
                    "updated": "2020-03-23T20:23:53.580+0000",
                    "started": "2020-03-23T20:23:53.579+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408248",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/408254",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#discussion_r396735143\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -426,6 +469,32 @@ cdef class FileFragment(Fragment):\n         return FileFormat.wrap(self.file_fragment.format())\n \n \n+cdef class ParquetFileFragment(FileFragment):\n+    \"\"\"A Fragment representing a parquet file.\"\"\"\n+\n+    cdef:\n+        CParquetFileFragment* parquet_file_fragment\n+        int _num_row_groups\n+\n+    cdef void init(self, const shared_ptr[CFragment]& sp):\n+        FileFragment.init(self, sp)\n+        self.parquet_file_fragment = <CParquetFileFragment*> sp.get()\n+        self._num_row_groups = -1\n+\n+    @property\n+    def row_groups(self):\n+        row_groups = set(self.parquet_file_fragment.row_groups())\n+        if len(row_groups) != 0:\n+            return row_groups\n+\n+        if self._num_row_groups == -1:\n \n Review comment:\n   > My intent here was to allow a ParquetFileFragment to be easily introspected for its row groups even if all are selected\r\n   \r\n   There might be alternative ways to provide similar functionality (eg exposing a ``num_row_groups`` property on the fragment, or actually exposing the parquet metadata from which the number of row groups can be accessed. \r\n   \r\n   I *think* there is value in having this property indicate whether a subset of row groups is manually specified or not.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T20:26:46.794+0000",
                    "updated": "2020-03-23T20:26:46.794+0000",
                    "started": "2020-03-23T20:26:46.793+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408254",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/408258",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#discussion_r396737103\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -426,6 +469,32 @@ cdef class FileFragment(Fragment):\n         return FileFormat.wrap(self.file_fragment.format())\n \n \n+cdef class ParquetFileFragment(FileFragment):\n+    \"\"\"A Fragment representing a parquet file.\"\"\"\n+\n+    cdef:\n+        CParquetFileFragment* parquet_file_fragment\n+        int _num_row_groups\n+\n+    cdef void init(self, const shared_ptr[CFragment]& sp):\n+        FileFragment.init(self, sp)\n+        self.parquet_file_fragment = <CParquetFileFragment*> sp.get()\n+        self._num_row_groups = -1\n+\n+    @property\n+    def row_groups(self):\n+        row_groups = set(self.parquet_file_fragment.row_groups())\n+        if len(row_groups) != 0:\n+            return row_groups\n+\n+        if self._num_row_groups == -1:\n \n Review comment:\n   okay, I'll remove this for now\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T20:29:48.240+0000",
                    "updated": "2020-03-23T20:29:48.240+0000",
                    "started": "2020-03-23T20:29:48.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408258",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/408259",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#discussion_r396737103\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -426,6 +469,32 @@ cdef class FileFragment(Fragment):\n         return FileFormat.wrap(self.file_fragment.format())\n \n \n+cdef class ParquetFileFragment(FileFragment):\n+    \"\"\"A Fragment representing a parquet file.\"\"\"\n+\n+    cdef:\n+        CParquetFileFragment* parquet_file_fragment\n+        int _num_row_groups\n+\n+    cdef void init(self, const shared_ptr[CFragment]& sp):\n+        FileFragment.init(self, sp)\n+        self.parquet_file_fragment = <CParquetFileFragment*> sp.get()\n+        self._num_row_groups = -1\n+\n+    @property\n+    def row_groups(self):\n+        row_groups = set(self.parquet_file_fragment.row_groups())\n+        if len(row_groups) != 0:\n+            return row_groups\n+\n+        if self._num_row_groups == -1:\n \n Review comment:\n   okay, I'll remove this for now and return `None` when no selection is specified\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T20:30:02.295+0000",
                    "updated": "2020-03-23T20:30:02.295+0000",
                    "started": "2020-03-23T20:30:02.295+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408259",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/408306",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#discussion_r396748353\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -414,10 +419,48 @@ cdef class FileFragment(Fragment):\n     @property\n     def path(self):\n         \"\"\"\n-        The path of the data file viewed by this fragment.\n+        The path of the data file viewed by this fragment, if it views a\n+        file. If instead it views a buffer, this will be \"<Buffer>\".\n         \"\"\"\n         return frombytes(self.file_fragment.source().path())\n \n+    def open(self):\n \n Review comment:\n   Ideally I'd just provide a `filesystem` property for this fragment. Unfortunately at this stage we don't have a `shared_ptr[CFileSystem]` so we can't wrap it as a `FileSystem`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T20:58:13.478+0000",
                    "updated": "2020-03-23T20:58:13.478+0000",
                    "started": "2020-03-23T20:58:13.477+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408306",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/408625",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#issuecomment-603136900\n \n \n   I was just trying this out, and the row_groups property seems to work correctly for a dataset that I read with `dataset(..)`. \r\n   But, to have this usable from Python, we still need a way to control this behaviour (as right now I cannot create a Fragment directly):\r\n   \r\n   - Do we want a discovery option indicating to use row groups instead of files as fragment granularity? Or should this be part of  instead of ParquetFileFormatReaderOptions instead of FileSystemFactoryOptions? (but the reader options are generally just for reading, not for discovery, so that might be a bit weird) Or do we need a ParquetFactoryOptions ... ?\r\n   \r\n   - Do we want to be able to construct a ParquetFileFragment in the python API? And then we can optionally provide a row_groups index/indices. But, to make this useful, we probably also need to be able to create a dataset from a fragment (or be able to scan a fragment from the python API)\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T09:47:37.961+0000",
                    "updated": "2020-03-24T09:47:37.961+0000",
                    "started": "2020-03-24T09:47:37.960+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408625",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/408713",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on issue #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#issuecomment-603213932\n \n \n   @jorisvandenbossche my intention was that fragments would exclusively be discovered containing all row groups for a file. Fragments with a refined row group selection could then be created from these whole-file Fragments as desired:\r\n   \r\n   ```python\r\n   def single_row_group_fragments(parquet_dataset, filter, columns):\r\n       for fragment in parquet_dataset.get_fragments(filter=filter, columns=columns):\r\n           for row_group in range(fragment.metadata.num_row_groups):\r\n               yield parquet_dataset.format.make_fragment(fragment.path, row_groups=[row_group])\r\n   ```\r\n   \r\n   Fragments can be scanned in C++ so I can expose that to Python as well:\r\n   \r\n   ```python\r\n   assert first_row_group_fragment.row_groups == {0}\r\n   first_row_group_fragment.scan(memory_pool)\r\n   # NB: filter, columns already specified in get_fragments. See ARROW-8065\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T12:37:32.105+0000",
                    "updated": "2020-03-24T12:37:32.105+0000",
                    "started": "2020-03-24T12:37:32.104+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408713",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/408726",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#issuecomment-603221343\n \n \n   One potential advantage of having this at the dataset level, is that `dataset.get_fragments(filter=...)` could yield only those fragments / row groups that respect the filter.\r\n   \r\n   Now, an API where we can construct / scan fragments would certainly already be useful as well.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T12:54:23.295+0000",
                    "updated": "2020-03-24T12:54:23.295+0000",
                    "started": "2020-03-24T12:54:23.295+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408726",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/408730",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#issuecomment-603224189\n \n \n   Another potential problem is that, assuming discovery happens only for full files, for an application like dask where the fragments are then re-created per row group, dask needs to know the number of row groups per file. \r\n   Leaving this logic to the user to create those fragments, means that they will need to open the metadata for each parquet file. Which might interfere with how we are going to handle things like `_metadata` (although it depends on how we solve that issue). Eg, it might mean that we should expose this metadata as well on the dataset level / have a mapping of this metadata to the fragments (if we want to avoid reading the metadata again).\r\n   \r\n   (just thinking out loud)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T13:00:31.386+0000",
                    "updated": "2020-03-24T13:00:31.386+0000",
                    "started": "2020-03-24T13:00:31.386+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408730",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/408731",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#discussion_r397134050\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -27,6 +27,7 @@ from pyarrow.lib cimport *\n from pyarrow.includes.libarrow_dataset cimport *\n from pyarrow.compat import frombytes, tobytes\n from pyarrow._fs cimport FileSystem, FileInfo, FileSelector\n+from pyarrow._parquet import ParquetReader\n \n Review comment:\n   I am not yet very familiar with building issues, but, both dataset and parquet are optional modules when building pyarrow. So I don't think we can simply import from `pyarrow._parquet` here (maybe putting the import inline where it is needed is sufficient?)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T13:02:29.211+0000",
                    "updated": "2020-03-24T13:02:29.211+0000",
                    "started": "2020-03-24T13:02:29.211+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408731",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/408741",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on issue #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#issuecomment-603233399\n \n \n   I see. In that case, in C++ I'll add `ParquetFileFormat::GetRowGroupFragments(dataset, max_row_groups_per_fragment, ...)` and expose this in Python as a special case of `FileSystemDataset.get_fragments()`:\r\n   \r\n   ```python\r\n   for fragment in parquet_dataset.get_fragments(filter, columns,\r\n                                                 max_row_groups_per_fragment=1):\r\n       yield from fragment.scan(memory_pool)\r\n   ```\r\n   \r\n   WRT using `_metadata`: that seems like a separate problem. Once we have agreed on a mechanism for sharing metadata between files we'll use that to reimplement `ParquetFileFragment.metadata`\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T13:18:51.752+0000",
                    "updated": "2020-03-24T13:18:51.752+0000",
                    "started": "2020-03-24T13:18:51.752+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408741",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/408760",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on issue #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#issuecomment-603251190\n \n \n   We have the same problem with number of rows. We need to expose a lazy accessor or something like this. This is related to the `_metadata` file where we load this information once (and the partitions + statistics).\r\n   \r\n   I'd say leave it out for now?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T13:52:05.763+0000",
                    "updated": "2020-03-24T13:52:05.763+0000",
                    "started": "2020-03-24T13:52:05.763+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408760",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/408795",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#discussion_r397190787\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -27,6 +27,7 @@ from pyarrow.lib cimport *\n from pyarrow.includes.libarrow_dataset cimport *\n from pyarrow.compat import frombytes, tobytes\n from pyarrow._fs cimport FileSystem, FileInfo, FileSelector\n+from pyarrow._parquet import ParquetReader\n \n Review comment:\n   Currently parquet is a hard dependency of dataset, so even this should be fine until we bring dataset into core. I will inline the import\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T14:23:02.883+0000",
                    "updated": "2020-03-24T14:23:02.883+0000",
                    "started": "2020-03-24T14:23:02.882+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408795",
                    "issueId": "13290882"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/worklog/409478",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #6670: ARROW-8061: [C++][Dataset] Provide RowGroup fragments for ParquetFileFormat\nURL: https://github.com/apache/arrow/pull/6670#issuecomment-603817588\n \n \n   This example segfaults for me:\r\n   \r\n   ```\r\n   import pyarrow as pa\r\n   import pyarrow.parquet as pq  \r\n   \r\n   table = pa.table({'a': ['a', 'a', 'b', 'b'], 'b': [1, 2, 3, 4]}) \r\n   pq.write_to_dataset(table, \"test_parquet_dataset\", partition_cols=[\"a\"]) \r\n   \r\n   import pyarrow.dataset as ds  \r\n   dataset = ds.dataset(\"test_parquet_dataset/\", format=\"parquet\", partitioning=\"hive\")\r\n   fragments = list(dataset.get_fragments()) \r\n   f = fragments[0] \r\n   parquet_format = f.format \r\n   parquet_format.make_fragment(f.path, f.filesystem, partition_expression=f.partition_expression)\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-25T12:42:56.982+0000",
                    "updated": "2020-03-25T12:42:56.982+0000",
                    "started": "2020-03-25T12:42:56.981+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "409478",
                    "issueId": "13290882"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 21000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4889ad23[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@602633ab[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3a1600bc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6b7cc73e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37ba6bef[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@127a7a2e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@18639b3d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@15abfa38[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@712a0e71[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@30c0a170[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34fe6e26[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7ece38bb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 21000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Mar 27 16:52:44 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-03-27T16:52:44.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8061/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-03-10T18:00:31.000+0000",
        "updated": "2020-04-10T15:31:39.000+0000",
        "timeoriginalestimate": null,
        "description": "Specifically for parquet (not sure if it will be relevant for other file formats as well, for IPC/feather potentially ther record batch), it would be useful to target row groups instead of files as fragments.\r\n\r\nQuoting the original design documents: _\"In datasets consisting of many fragments, the dataset API must expose the granularity of fragments in a public way to enable parallel processing, if desired. \"._   \r\nAnd a comment from Wes on that: _\"a single Parquet file can \"export\" one or more fragments based on settings. The default might be to split fragments based on row group\"_\r\n\r\nCurrently, the level on which fragments are defined (at least in the typical partitioned parquet dataset) is \"1 file == 1 fragment\".\r\n\r\nWould it be possible or desirable to make this more fine grained, where you could also opt to have a fragment per row group?   \r\nWe could have a ParquetFragment that has this option, and a ParquetFileFormat specific option to say what the granularity of a fragment is (file vs row group)?\r\n\r\ncc [~fsaintjacques] [~bkietz]",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 21000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset] Ability to specify granularity of ParquetFileFragment (support row groups)",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/comment/17056201",
                    "id": "17056201",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Example usecase for this: for Dask, wich wants to do it's own parallel scheduling, being able to map one task to one row group instead of one file would be useful. It is possible right now with the pyarrow.parquet ParquetDataset API, and dask also uses this API to map tasks to row groups by default (there is a {{split_row_groups}} keyword in dask's {{read_parquet}}, see https://docs.dask.org/en/latest/dataframe-api.html#dask.dataframe.read_parquet). ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-03-10T18:01:14.742+0000",
                    "updated": "2020-03-10T18:01:14.742+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/comment/17056211",
                    "id": "17056211",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Yes, this is possible, a ParquetFragment could have a FileSource and a list of RowGroup identifier. Note that parallelism of RowGroup is already achieved since we return \"1 row group == 1 scantask\". I believe this would be the job of the DatasetFactory to do such partitioning, e.g. do you want 1-1, 1-n, how to configure said threshold.\r\n\r\nAlso think about formats where we don't know the granularity ahead, e.g. gzipped CSV.\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-03-10T18:15:07.846+0000",
                    "updated": "2020-03-10T18:15:07.846+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/comment/17056248",
                    "id": "17056248",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "> Note that parallelism of RowGroup is already achieved since we return \"1 row group == 1 scantask\"\r\n\r\nYes, but for external users, it might be better to work on the level of fragments, rather than scan tasks? (eg, from the discussions, I had understood that serializing/reconstructing a scantask won't be possible. While for a fragment (or single-fragment dataset), this is posstible)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-03-10T18:33:15.767+0000",
                    "updated": "2020-03-10T18:33:15.767+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290882/comment/17068874",
                    "id": "17068874",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 6670\n[https://github.com/apache/arrow/pull/6670]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-03-27T16:52:44.241+0000",
                    "updated": "2020-03-27T16:52:44.241+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0cdz4:",
        "customfield_12314139": null
    }
}