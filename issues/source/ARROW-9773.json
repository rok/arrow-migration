{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13323099",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099",
    "key": "ARROW-9773",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "kernel",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12615444",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12615444",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13376404",
                    "key": "ARROW-12633",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376404",
                    "fields": {
                        "summary": "[C++] Query engine umbrella issue",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            },
            {
                "id": "12604237",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12604237",
                "type": {
                    "id": "12310000",
                    "name": "Duplicate",
                    "inward": "is duplicated by",
                    "outward": "duplicates",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"
                },
                "inwardIssue": {
                    "id": "13344076",
                    "key": "ARROW-10799",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344076",
                    "fields": {
                        "summary": "[C++] Take on string chunked arrays slow and fails",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            },
            {
                "id": "12637775",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12637775",
                "type": {
                    "id": "12310000",
                    "name": "Duplicate",
                    "inward": "is duplicated by",
                    "outward": "duplicates",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"
                },
                "inwardIssue": {
                    "id": "13431085",
                    "key": "ARROW-15808",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431085",
                    "fields": {
                        "summary": "[Python] take function doesn't work when table has large row counts",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            },
            {
                "id": "12604235",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12604235",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13344076",
                    "key": "ARROW-10799",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13344076",
                    "fields": {
                        "summary": "[C++] Take on string chunked arrays slow and fails",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
            "name": "willjones127",
            "key": "willjones127",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Will Jones",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/3",
            "description": "This issue is being actively worked on at the moment by the assignee.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/inprogress.png",
            "name": "In Progress",
            "id": "3",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4",
                "id": 4,
                "key": "indeterminate",
                "colorName": "yellow",
                "name": "In Progress"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9773/votes",
            "votes": 5,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 27,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/800053",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#issuecomment-1212272336\n\n   https://issues.apache.org/jira/browse/ARROW-9773\n\n\n",
                    "created": "2022-08-11T17:23:08.652+0000",
                    "updated": "2022-08-11T17:23:08.652+0000",
                    "started": "2022-08-11T17:23:08.652+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "800053",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/800390",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#discussion_r944930119\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_selection.cc:\n##########\n@@ -530,6 +683,54 @@ Status PrimitiveTake(KernelContext* ctx, const ExecSpan& batch, ExecResult* out)\n   return Status::OK();\n }\n \n+Status ChunkedPrimitiveTake(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const ChunkedArray& values = *batch[0].chunked_array();\n+  const ChunkedArray& indices = *batch[1].chunked_array();\n+\n+  if (TakeState::Get(ctx).boundscheck) {\n+    RETURN_NOT_OK(CheckIndexBounds(indices, values.length()));\n+  }\n+\n+  // TODO: Is there any reason to chunk the output for primitive arrays?\n+  // We probably want to keep within 32-bit sizes for interoperability with other\n+  // implementations.\n\nReview Comment:\n   I'd welcome some design input on this. How should the output chunking be structured?\n\n\n\n",
                    "created": "2022-08-12T23:12:00.661+0000",
                    "updated": "2022-08-12T23:12:00.661+0000",
                    "started": "2022-08-12T23:12:00.660+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "800390",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/801156",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drin commented on code in PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#discussion_r947315291\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_selection.cc:\n##########\n@@ -530,6 +683,54 @@ Status PrimitiveTake(KernelContext* ctx, const ExecSpan& batch, ExecResult* out)\n   return Status::OK();\n }\n \n+Status ChunkedPrimitiveTake(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const ChunkedArray& values = *batch[0].chunked_array();\n+  const ChunkedArray& indices = *batch[1].chunked_array();\n+\n+  if (TakeState::Get(ctx).boundscheck) {\n+    RETURN_NOT_OK(CheckIndexBounds(indices, values.length()));\n+  }\n+\n+  // TODO: Is there any reason to chunk the output for primitive arrays?\n+  // We probably want to keep within 32-bit sizes for interoperability with other\n+  // implementations.\n\nReview Comment:\n   My jerk reaction is to prefer the existing chunk layouts, just in case the chunking was specially chosen for hardware or data placement reasons.\n\n\n\n",
                    "created": "2022-08-16T23:02:28.561+0000",
                    "updated": "2022-08-16T23:02:28.561+0000",
                    "started": "2022-08-16T23:02:28.561+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801156",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/801180",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drin commented on code in PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#discussion_r947315291\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_selection.cc:\n##########\n@@ -530,6 +683,54 @@ Status PrimitiveTake(KernelContext* ctx, const ExecSpan& batch, ExecResult* out)\n   return Status::OK();\n }\n \n+Status ChunkedPrimitiveTake(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const ChunkedArray& values = *batch[0].chunked_array();\n+  const ChunkedArray& indices = *batch[1].chunked_array();\n+\n+  if (TakeState::Get(ctx).boundscheck) {\n+    RETURN_NOT_OK(CheckIndexBounds(indices, values.length()));\n+  }\n+\n+  // TODO: Is there any reason to chunk the output for primitive arrays?\n+  // We probably want to keep within 32-bit sizes for interoperability with other\n+  // implementations.\n\nReview Comment:\n   My knee jerk reaction is to prefer the existing chunk layouts, just in case the chunking was specially chosen for hardware or data placement reasons.\n\n\n\n",
                    "created": "2022-08-17T01:22:59.571+0000",
                    "updated": "2022-08-17T01:22:59.571+0000",
                    "started": "2022-08-17T01:22:59.571+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801180",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/801394",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#discussion_r948012133\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_selection.cc:\n##########\n@@ -530,6 +683,54 @@ Status PrimitiveTake(KernelContext* ctx, const ExecSpan& batch, ExecResult* out)\n   return Status::OK();\n }\n \n+Status ChunkedPrimitiveTake(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const ChunkedArray& values = *batch[0].chunked_array();\n+  const ChunkedArray& indices = *batch[1].chunked_array();\n+\n+  if (TakeState::Get(ctx).boundscheck) {\n+    RETURN_NOT_OK(CheckIndexBounds(indices, values.length()));\n+  }\n+\n+  // TODO: Is there any reason to chunk the output for primitive arrays?\n+  // We probably want to keep within 32-bit sizes for interoperability with other\n+  // implementations.\n\nReview Comment:\n   So, use the chunking of the take indices? I suppose that makes sense.\n\n\n\n",
                    "created": "2022-08-17T14:26:46.680+0000",
                    "updated": "2022-08-17T14:26:46.680+0000",
                    "started": "2022-08-17T14:26:46.680+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801394",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/801464",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#discussion_r948326162\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_selection.cc:\n##########\n@@ -530,6 +683,54 @@ Status PrimitiveTake(KernelContext* ctx, const ExecSpan& batch, ExecResult* out)\n   return Status::OK();\n }\n \n+Status ChunkedPrimitiveTake(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const ChunkedArray& values = *batch[0].chunked_array();\n+  const ChunkedArray& indices = *batch[1].chunked_array();\n+\n+  if (TakeState::Get(ctx).boundscheck) {\n+    RETURN_NOT_OK(CheckIndexBounds(indices, values.length()));\n+  }\n+\n+  // TODO: Is there any reason to chunk the output for primitive arrays?\n+  // We probably want to keep within 32-bit sizes for interoperability with other\n+  // implementations.\n\nReview Comment:\n   My intuition would be not to chunk at all. This is what we usually do for vector kernels when there is no natural mapping from input chunking to output chunking.\n\n\n\n",
                    "created": "2022-08-17T19:19:29.820+0000",
                    "updated": "2022-08-17T19:19:29.820+0000",
                    "started": "2022-08-17T19:19:29.819+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801464",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/801465",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#discussion_r948328088\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_selection.cc:\n##########\n@@ -530,6 +683,54 @@ Status PrimitiveTake(KernelContext* ctx, const ExecSpan& batch, ExecResult* out)\n   return Status::OK();\n }\n \n+Status ChunkedPrimitiveTake(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const ChunkedArray& values = *batch[0].chunked_array();\n+  const ChunkedArray& indices = *batch[1].chunked_array();\n+\n+  if (TakeState::Get(ctx).boundscheck) {\n+    RETURN_NOT_OK(CheckIndexBounds(indices, values.length()));\n+  }\n+\n+  // TODO: Is there any reason to chunk the output for primitive arrays?\n+  // We probably want to keep within 32-bit sizes for interoperability with other\n+  // implementations.\n\nReview Comment:\n   I think the original motivation here, though, was for things that won't fit in a chunk (not necessarily due to number of rows, due to things like string data)\n\n\n\n",
                    "created": "2022-08-17T19:22:05.205+0000",
                    "updated": "2022-08-17T19:22:05.205+0000",
                    "started": "2022-08-17T19:22:05.205+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801465",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/801466",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#discussion_r948328578\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_selection.cc:\n##########\n@@ -365,6 +370,122 @@ struct PrimitiveTakeImpl {\n     }\n     out_arr->null_count = out_arr->length - valid_count;\n   }\n+\n+  static void Exec(const ChunkedArray& values, const ChunkedArray& indices_chunked,\n+                   ArrayDataVector* out_chunks) {\n+    auto values_resolver = ChunkResolver(values.chunks());\n+    const std::vector<const ValueCType*> values_data = MapVector(\n+        [](const auto& x) { return x->data()->template GetValues<ValueCType>(1); },\n+        values.chunks());\n+    const std::vector<const uint8_t*> values_is_valid =\n+        MapVector([](const auto& x) { return x->null_bitmap_data(); }, values.chunks());\n+    const std::vector<int64_t> values_offset =\n+        MapVector([](const auto& x) { return x->offset(); }, values.chunks());\n+\n+    for (int i = 0; i < indices_chunked.num_chunks(); ++i) {\n+      const std::shared_ptr<Array>& indices_chunk = indices_chunked.chunk(i);\n+      ArrayData* out_arr = (*out_chunks)[i].get();\n+      ValueCType* out = out_arr->GetMutableValues<ValueCType>(1);\n+      uint8_t* out_is_valid = out_arr->buffers[0]->mutable_data();\n+      int64_t out_offset = out_arr->offset;\n+\n+      int64_t valid_count = 0;\n+\n+      int64_t position = 0;  // Position in output array\n+      const ArraySpan indices = ArraySpan(*indices_chunk.get()->data());\n+      // TODO: How do we reduce duplication of code?\n\nReview Comment:\n   See https://github.com/apache/arrow/blob/8474ee5a3ed725d4bb56c75fc1b13a53cba1fd1f/cpp/src/arrow/compute/kernels/vector_sort.cc#L690-L711 and https://github.com/apache/arrow/blob/8474ee5a3ed725d4bb56c75fc1b13a53cba1fd1f/cpp/src/arrow/compute/kernels/vector_sort.cc#L844-L889 for ideas of how to parametrize this.\n\n\n\n",
                    "created": "2022-08-17T19:22:45.287+0000",
                    "updated": "2022-08-17T19:22:45.287+0000",
                    "started": "2022-08-17T19:22:45.287+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801466",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/801467",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#discussion_r948330188\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_selection.cc:\n##########\n@@ -530,6 +683,54 @@ Status PrimitiveTake(KernelContext* ctx, const ExecSpan& batch, ExecResult* out)\n   return Status::OK();\n }\n \n+Status ChunkedPrimitiveTake(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const ChunkedArray& values = *batch[0].chunked_array();\n+  const ChunkedArray& indices = *batch[1].chunked_array();\n+\n+  if (TakeState::Get(ctx).boundscheck) {\n+    RETURN_NOT_OK(CheckIndexBounds(indices, values.length()));\n+  }\n+\n+  // TODO: Is there any reason to chunk the output for primitive arrays?\n+  // We probably want to keep within 32-bit sizes for interoperability with other\n+  // implementations.\n\nReview Comment:\n   Possibly, though there's a more general performance concern (you don't want to concatenate the chunks of a large chunked array just to take 10 elements out of it).\n\n\n\n",
                    "created": "2022-08-17T19:24:50.446+0000",
                    "updated": "2022-08-17T19:24:50.446+0000",
                    "started": "2022-08-17T19:24:50.446+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801467",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/801468",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#discussion_r948330624\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_selection.cc:\n##########\n@@ -530,6 +683,54 @@ Status PrimitiveTake(KernelContext* ctx, const ExecSpan& batch, ExecResult* out)\n   return Status::OK();\n }\n \n+Status ChunkedPrimitiveTake(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const ChunkedArray& values = *batch[0].chunked_array();\n+  const ChunkedArray& indices = *batch[1].chunked_array();\n+\n+  if (TakeState::Get(ctx).boundscheck) {\n+    RETURN_NOT_OK(CheckIndexBounds(indices, values.length()));\n+  }\n+\n+  // TODO: Is there any reason to chunk the output for primitive arrays?\n+  // We probably want to keep within 32-bit sizes for interoperability with other\n+  // implementations.\n\nReview Comment:\n   (also this comment is about primitive arrays)\n\n\n\n",
                    "created": "2022-08-17T19:25:20.463+0000",
                    "updated": "2022-08-17T19:25:20.463+0000",
                    "started": "2022-08-17T19:25:20.462+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801468",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/801469",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#discussion_r948330700\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_selection.cc:\n##########\n@@ -530,6 +683,54 @@ Status PrimitiveTake(KernelContext* ctx, const ExecSpan& batch, ExecResult* out)\n   return Status::OK();\n }\n \n+Status ChunkedPrimitiveTake(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const ChunkedArray& values = *batch[0].chunked_array();\n+  const ChunkedArray& indices = *batch[1].chunked_array();\n+\n+  if (TakeState::Get(ctx).boundscheck) {\n+    RETURN_NOT_OK(CheckIndexBounds(indices, values.length()));\n+  }\n+\n+  // TODO: Is there any reason to chunk the output for primitive arrays?\n+  // We probably want to keep within 32-bit sizes for interoperability with other\n+  // implementations.\n\nReview Comment:\n   I'm kind of liking the idea of using the take indices; potentially gives the user control of the chunking output of take.\r\n   \r\n   Of course, for cases like string and binary data, we'll probably take a different approach and chunk based on what fits.\n\n\n\n",
                    "created": "2022-08-17T19:25:30.484+0000",
                    "updated": "2022-08-17T19:25:30.484+0000",
                    "started": "2022-08-17T19:25:30.483+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801469",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/801470",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#discussion_r948331309\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_selection.cc:\n##########\n@@ -530,6 +683,54 @@ Status PrimitiveTake(KernelContext* ctx, const ExecSpan& batch, ExecResult* out)\n   return Status::OK();\n }\n \n+Status ChunkedPrimitiveTake(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const ChunkedArray& values = *batch[0].chunked_array();\n+  const ChunkedArray& indices = *batch[1].chunked_array();\n+\n+  if (TakeState::Get(ctx).boundscheck) {\n+    RETURN_NOT_OK(CheckIndexBounds(indices, values.length()));\n+  }\n+\n+  // TODO: Is there any reason to chunk the output for primitive arrays?\n+  // We probably want to keep within 32-bit sizes for interoperability with other\n+  // implementations.\n\nReview Comment:\n   Ah, I missed that for primitive arrays. \n\n\n\n",
                    "created": "2022-08-17T19:26:20.578+0000",
                    "updated": "2022-08-17T19:26:20.578+0000",
                    "started": "2022-08-17T19:26:20.578+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801470",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/801797",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#discussion_r949516352\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_selection.cc:\n##########\n@@ -530,6 +683,54 @@ Status PrimitiveTake(KernelContext* ctx, const ExecSpan& batch, ExecResult* out)\n   return Status::OK();\n }\n \n+Status ChunkedPrimitiveTake(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const ChunkedArray& values = *batch[0].chunked_array();\n+  const ChunkedArray& indices = *batch[1].chunked_array();\n+\n+  if (TakeState::Get(ctx).boundscheck) {\n+    RETURN_NOT_OK(CheckIndexBounds(indices, values.length()));\n+  }\n+\n+  // TODO: Is there any reason to chunk the output for primitive arrays?\n+  // We probably want to keep within 32-bit sizes for interoperability with other\n+  // implementations.\n\nReview Comment:\n   This discussion seems like it might be relevant actually: https://issues.apache.org/jira/browse/ARROW-2532\n\n\n\n",
                    "created": "2022-08-18T19:23:30.473+0000",
                    "updated": "2022-08-18T19:23:30.473+0000",
                    "started": "2022-08-18T19:23:30.472+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "801797",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/809675",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#issuecomment-1249884324\n\n   @ursabot please benchmark lang=C++\n\n\n",
                    "created": "2022-09-16T22:04:28.430+0000",
                    "updated": "2022-09-16T22:04:28.430+0000",
                    "started": "2022-09-16T22:04:28.430+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "809675",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/809676",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#issuecomment-1249884423\n\n   Benchmark runs are scheduled for baseline = e63a13aacbf67897202c8a56fccb3a86f624a96e and contender = a43fa07eda14d3f36a9dda593af03d5f1a26325d. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Skipped :warning: Only ['Python'] langs are supported on ec2-t3-xlarge-us-east-2] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/a025f5d5a97646a8ad33e367b8f75494...4fe57ee0aff9466fa1729bb03aaae3c2/)\n   [Scheduled] [test-mac-arm](https://conbench.ursa.dev/compare/runs/baffb2803508461180a0c2db2b967910...49facbb88dfb43c289f7f4d44377105b/)\n   [Skipped :warning: Only ['JavaScript', 'Python', 'R'] langs are supported on ursa-i9-9960x] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/87093be42bbe4eab8ff3499168157618...8f149a4485894f119c96fa2d4b2b326b/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/95a52293004c4440a28af3f6c1adcf81...963dcd8610744861ad7d6d4a94f41f98/)\n   Buildkite builds:\n   [Scheduled] [`a43fa07e` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1515)\n   [Scheduled] [`a43fa07e` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/1511)\n   [Finished] [`e63a13aa` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/1491)\n   [Failed] [`e63a13aa` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1507)\n   [Failed] [`e63a13aa` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/1491)\n   [Finished] [`e63a13aa` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/1504)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python, R. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n",
                    "created": "2022-09-16T22:04:32.915+0000",
                    "updated": "2022-09-16T22:04:32.915+0000",
                    "started": "2022-09-16T22:04:32.914+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "809676",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/810162",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#issuecomment-1251448976\n\n   I started by working on the Take implementation for primitive values, so I could familiarize myself with how the Take kernels work. But based on the benchmark I added, it seems like I actually made performance much worse (except in the monotonic case)! I suspect this is because having to use `ChunkResolver` for every index is more expensive than just copying the values into a contiguous array. Does that sounds reasonable? Or is there something obviously wrong?\r\n   \r\n   <details><summary>\r\n   Benchmark results\r\n   </summary>\r\n   \r\n   Baseline:\r\n   \r\n   ```\r\n   --------------------------------------------------------------------------------------------------------------\r\n   Benchmark                                                    Time             CPU   Iterations UserCounters...\r\n   --------------------------------------------------------------------------------------------------------------\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/1000     19362199 ns     19358250 ns           36 items_per_second=216.668M/s null_percent=0.1 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/10       19504339 ns     19494278 ns           36 items_per_second=215.156M/s null_percent=10 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/2        34162071 ns     34146150 ns           20 items_per_second=122.834M/s null_percent=50 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/1        10458465 ns     10455803 ns           66 items_per_second=401.146M/s null_percent=100 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/0        12260952 ns     12258093 ns           54 items_per_second=342.166M/s null_percent=0 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/1000   19419778 ns     19412389 ns           36 items_per_second=216.063M/s null_percent=0.1 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/10     29953237 ns     29944261 ns           23 items_per_second=140.07M/s null_percent=10 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/2      51350571 ns     51330500 ns           14 items_per_second=81.7117M/s null_percent=50 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/1       3319791 ns      3318972 ns          214 items_per_second=1.26374G/s null_percent=100 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/0      12277404 ns     12275145 ns           55 items_per_second=341.691M/s null_percent=0 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/1000         24581060 ns     24574690 ns           29 items_per_second=170.676M/s null_percent=0.1 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/10           22506711 ns     22501129 ns           31 items_per_second=186.404M/s null_percent=10 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/2            20736080 ns     20730853 ns           34 items_per_second=202.322M/s null_percent=50 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/1            16202271 ns     16196349 ns           43 items_per_second=258.966M/s null_percent=100 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/0            15727504 ns     15721614 ns           44 items_per_second=266.786M/s null_percent=0 size=4.1943M\r\n   ```\r\n   \r\n   Proposed:\r\n   \r\n   ```\r\n   --------------------------------------------------------------------------------------------------------------\r\n   Benchmark                                                    Time             CPU   Iterations UserCounters...\r\n   --------------------------------------------------------------------------------------------------------------\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/1000    142831500 ns    142791200 ns            5 items_per_second=29.3737M/s null_percent=0.1 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/10      144134633 ns    144110400 ns            5 items_per_second=29.1048M/s null_percent=10 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/2       125704833 ns    125667167 ns            6 items_per_second=33.3763M/s null_percent=50 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/1        84408114 ns     84386875 ns            8 items_per_second=49.7033M/s null_percent=100 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/0        88094063 ns     88072375 ns            8 items_per_second=47.6234M/s null_percent=0 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/1000  111903111 ns    111859500 ns            6 items_per_second=37.4962M/s null_percent=0.1 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/10    113359923 ns    113286667 ns            6 items_per_second=37.0238M/s null_percent=10 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/2      95110995 ns     95098625 ns            8 items_per_second=44.1048M/s null_percent=50 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/1       1613900 ns      1613515 ns          437 items_per_second=2.59948G/s null_percent=100 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/0      88383021 ns     88365750 ns            8 items_per_second=47.4653M/s null_percent=0 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/1000         23783853 ns     23776276 ns           29 items_per_second=176.407M/s null_percent=0.1 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/10           24145126 ns     24140310 ns           29 items_per_second=173.747M/s null_percent=10 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/2            23058231 ns     23046233 ns           30 items_per_second=181.995M/s null_percent=50 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/1            16306472 ns     16301465 ns           43 items_per_second=257.296M/s null_percent=100 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/0            15400245 ns     15398652 ns           46 items_per_second=272.381M/s null_percent=0 size=4.1943M\r\n   ```\r\n   </details>\n\n\n",
                    "created": "2022-09-19T19:24:55.535+0000",
                    "updated": "2022-09-19T19:24:55.535+0000",
                    "started": "2022-09-19T19:24:55.535+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810162",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/810166",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#issuecomment-1251474805\n\n   @wjones127 The numbers seem a bit low to be honest, but perhaps that's just me. I haven't looked at the implementation.\r\n   @lidavidm What do you think?\n\n\n",
                    "created": "2022-09-19T19:49:23.588+0000",
                    "updated": "2022-09-19T19:49:23.588+0000",
                    "started": "2022-09-19T19:49:23.588+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810166",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/810182",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#issuecomment-1251563275\n\n   > The numbers seem a bit low to be honest\r\n   \r\n   You are correct on that. Both too low in test and baseline, by about the same factor. I was creating too large of a chunked array for the indices.\r\n   \r\n   \r\n   <details><summary>\r\n   Benchmark results\r\n   </summary>\r\n   \r\n   Baseline:\r\n   \r\n   ```\r\n   --------------------------------------------------------------------------------------------------------------\r\n   Benchmark                                                    Time             CPU   Iterations UserCounters...\r\n   --------------------------------------------------------------------------------------------------------------\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/1000      2770528 ns      2769802 ns          232 items_per_second=1.5143G/s null_percent=0.1 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/10        2802730 ns      2802061 ns          246 items_per_second=1.49686G/s null_percent=10 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/2         4277424 ns      4276390 ns          164 items_per_second=980.805M/s null_percent=50 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/1         2143412 ns      2142790 ns          305 items_per_second=1.9574G/s null_percent=100 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/0         1886756 ns      1886230 ns          374 items_per_second=2.22364G/s null_percent=0 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/1000    2799584 ns      2799301 ns          249 items_per_second=1.49834G/s null_percent=0.1 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/10      3865247 ns      3864123 ns          179 items_per_second=1085.45M/s null_percent=10 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/2       6030057 ns      6028330 ns          103 items_per_second=695.765M/s null_percent=50 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/1       1441460 ns      1440831 ns          498 items_per_second=2.91103G/s null_percent=100 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/0       1923944 ns      1923507 ns          371 items_per_second=2.18055G/s null_percent=0 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/1000          1827538 ns      1827005 ns          383 items_per_second=2.29573G/s null_percent=0.1 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/10            1806226 ns      1805824 ns          387 items_per_second=2.32265G/s null_percent=10 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/2             2600097 ns      2599818 ns          269 items_per_second=1.61331G/s null_percent=50 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/1             1069649 ns      1069057 ns          667 items_per_second=3.92337G/s null_percent=100 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/0              949020 ns       948810 ns          738 items_per_second=4.42059G/s null_percent=0 size=4.1943M\r\n   ```\r\n   \r\n   Proposed:\r\n   \r\n   ```\r\n   --------------------------------------------------------------------------------------------------------------\r\n   Benchmark                                                    Time             CPU   Iterations UserCounters...\r\n   --------------------------------------------------------------------------------------------------------------\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/1000     12734298 ns     12731491 ns           53 items_per_second=329.443M/s null_percent=0.1 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/10       13030870 ns     13027741 ns           54 items_per_second=321.952M/s null_percent=10 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/2        11699983 ns     11697067 ns           60 items_per_second=358.577M/s null_percent=50 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/1         8201179 ns      8200176 ns           85 items_per_second=511.489M/s null_percent=100 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesNoNulls/4194304/0         8281752 ns      8280094 ns           85 items_per_second=506.553M/s null_percent=0 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/1000   10054480 ns     10052444 ns           54 items_per_second=417.242M/s null_percent=0.1 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/10     10256613 ns     10254956 ns           68 items_per_second=409.003M/s null_percent=10 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/2       8735435 ns      8734213 ns           80 items_per_second=480.215M/s null_percent=50 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/1         98487 ns        98479 ns         7191 items_per_second=42.5911G/s null_percent=100 size=4.1943M\r\n   TakeChunkedInt64RandomIndicesWithNulls/4194304/0       8187746 ns      8186131 ns           84 items_per_second=512.367M/s null_percent=0 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/1000          2008840 ns      2007886 ns          352 items_per_second=2.08892G/s null_percent=0.1 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/10            2467236 ns      2466807 ns          285 items_per_second=1.7003G/s null_percent=10 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/2             3366623 ns      3365923 ns          208 items_per_second=1.24611G/s null_percent=50 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/1             1295032 ns      1294838 ns          538 items_per_second=3.23925G/s null_percent=100 size=4.1943M\r\n   TakeChunkedInt64MonotonicIndices/4194304/0             1240969 ns      1240848 ns          566 items_per_second=3.38019G/s null_percent=0 size=4.1943M\r\n   ```\r\n   </details>\n\n\n",
                    "created": "2022-09-19T21:15:52.663+0000",
                    "updated": "2022-09-19T21:15:52.663+0000",
                    "started": "2022-09-19T21:15:52.662+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810182",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/810514",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#issuecomment-1252891290\n\n   After some more testing it seems like concatenating buffers and indexing into that always wins over using `ChunkResolver`, both in primitive and string case.\r\n   \r\n   From my quick test of Take on chunked string arrays:\r\n    * Concatenating: items_per_second=50.3014M/s\r\n    * ChunkResolver: items_per_second=6.9115M/s\r\n   \r\n   Unless there is a more performant way, we might just only have Take kernels specialized for ChunkedArrays for String / Binary / List (and also Struct since it will then need to handle rechunking of child arrays.)\r\n   \r\n   <details>\r\n   <summary>String ChunkedArray Take Benchmark Code</summary>\r\n   \r\n   ```cpp\r\n   void BenchStringTest() {\r\n       // Create chunked string array\r\n       int32_t string_min_length = 0, string_max_length = 32;\r\n       const int64_t n_chunks = 10;\r\n       const int64_t array_size = args.size / n_chunks;\r\n       ArrayVector chunks;\r\n       for (int64_t i = 0; i < n_chunks; ++i) {\r\n         auto chunk = std::static_pointer_cast<StringArray>(\r\n             rand.String(args.size, string_min_length, string_max_length, 0));\r\n         chunks.push_back(chunk);\r\n       }\r\n       auto values = ChunkedArray(chunks);\r\n   \r\n       // Create indices\r\n       auto indices =\r\n           rand.Int32(values.length(), 0, static_cast<int32_t>(values.length() - 1), 0);\r\n   \r\n       for (auto _ : state) {\r\n         TypedBufferBuilder<int32_t> offset_builder;\r\n         TypedBufferBuilder<uint8_t> data_builder;\r\n   \r\n         const int32_t* indices_values = indices->data()->GetValues<int32_t>(1);\r\n   \r\n         if (concat_chunks) {\r\n           // Concat the chunks\r\n           ASSIGN_OR_ABORT(std::shared_ptr<Array> values_combined,\r\n                           Concatenate(values.chunks()));\r\n   \r\n           const uint8_t* values_data = values_combined->data()->GetValues<uint8_t>(1);\r\n           const int32_t* values_offsets = values_combined->data()->GetValues<int32_t>(2);\r\n   \r\n           // for each value\r\n           for (int i = 0; i < indices->length(); ++i) {\r\n             int32_t index = indices_values[i];\r\n             // get the offset and size\r\n             int32_t offset = values_offsets[index];\r\n             int64_t length = values_offsets[index + 1] - offset;\r\n             // throw them on the builder\r\n             data_builder.UnsafeAppend(values_data + offset, length);\r\n           }\r\n   \r\n         } else {\r\n           using arrow::internal::ChunkLocation;\r\n           using arrow::internal::ChunkResolver;\r\n   \r\n           ChunkResolver resolver(values.chunks());\r\n   \r\n           std::vector<const uint8_t*> values_data(values.num_chunks());\r\n           std::vector<const int32_t*> values_offsets(values.num_chunks());\r\n           for (int i = 0; i < values.num_chunks(); ++i) {\r\n             values_data[i] = values.chunks()[i]->data()->GetValues<uint8_t>(1);\r\n             values_offsets[i] = values.chunks()[i]->data()->GetValues<int32_t>(2);\r\n           }\r\n   \r\n           // for each index\r\n           for (int i = 0; i < indices->length(); ++i) {\r\n             // Resolve the location\r\n             ChunkLocation location = resolver.Resolve(indices_values[i]);\r\n   \r\n             // Get the offset and size\r\n             int32_t offset = values_offsets[location.chunk_index][location.index_in_chunk];\r\n             int32_t length =\r\n                 values_offsets[location.chunk_index][location.index_in_chunk + 1] - offset;\r\n   \r\n             // throw them on the builder\r\n             data_builder.UnsafeAppend(values_data[location.chunk_index] + offset, length);\r\n           }\r\n         }\r\n       }\r\n     }\r\n   ```\r\n   \r\n   </details>\n\n\n",
                    "created": "2022-09-20T20:44:08.836+0000",
                    "updated": "2022-09-20T20:44:08.836+0000",
                    "started": "2022-09-20T20:44:08.836+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810514",
                    "issueId": "13323099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/worklog/810931",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on PR #13857:\nURL: https://github.com/apache/arrow/pull/13857#issuecomment-1254133089\n\n   I think the benchmark test is not doing a fair comparison as there is no need on copying the data and offsets into the temporary std::vectors. The first loop is not necessary.\n\n\n",
                    "created": "2022-09-21T19:24:46.260+0000",
                    "updated": "2022-09-21T19:24:46.260+0000",
                    "started": "2022-09-21T19:24:46.260+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810931",
                    "issueId": "13323099"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 16200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@74848ca0[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7bc17216[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b7369f2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6b52e948[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ba88c60[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@30dc031e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@30e0d00e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4c8477f3[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@63e0298f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3374121e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a2d4de[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6a761076[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 16200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jun 08 11:31:44 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9773/watchers",
            "watchCount": 13,
            "isWatching": false
        },
        "created": "2020-08-17T19:47:10.000+0000",
        "updated": "2022-09-24T08:00:06.000+0000",
        "timeoriginalestimate": null,
        "description": "Take() currently concatenates ChunkedArrays first. However, this breaks down when calling Take() from a ChunkedArray or Table where concatenating the arrays would result in an array that's too large. While inconvenient to implement, it would be useful if this case were handled.\r\n\r\nThis could be done as a higher-level wrapper around Take(), perhaps.\r\n\r\nExample in Python:\r\n{code:python}\r\n>>> import pyarrow as pa\r\n>>> pa.__version__\r\n'1.0.0'\r\n>>> rb1 = pa.RecordBatch.from_arrays([[\"a\" * 2**30]], names=[\"a\"])\r\n>>> rb2 = pa.RecordBatch.from_arrays([[\"b\" * 2**30]], names=[\"a\"])\r\n>>> table = pa.Table.from_batches([rb1, rb2], schema=rb1.schema)\r\n>>> table.take([1, 0])\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"pyarrow/table.pxi\", line 1145, in pyarrow.lib.Table.take\r\n  File \"/home/lidavidm/Code/twosigma/arrow/venv/lib/python3.8/site-packages/pyarrow/compute.py\", line 268, in take\r\n    return call_function('take', [data, indices], options)\r\n  File \"pyarrow/_compute.pyx\", line 298, in pyarrow._compute.call_function\r\n  File \"pyarrow/_compute.pyx\", line 192, in pyarrow._compute.Function.call\r\n  File \"pyarrow/error.pxi\", line 122, in pyarrow.lib.pyarrow_internal_check_status\r\n  File \"pyarrow/error.pxi\", line 84, in pyarrow.lib.check_status\r\npyarrow.lib.ArrowInvalid: offset overflow while concatenating arrays\r\n{code}\r\n\r\nIn this example, it would be useful if Take() or a higher-level wrapper could generate multiple record batches as output.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 16200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Take kernel can't handle ChunkedArrays that don't fit in an Array",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/comment/17246649",
                    "id": "17246649",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Note that this can happen with regular arrays too:\r\n{code:python}\r\n>>> import pyarrow as pa\r\n>>> arr = pa.array([\"x\" * (1<<20)])\r\n>>> t = arr.take(pa.array([0]*((1<<12) + 1), type=pa.int8()))\r\n>>> t.validate(full=True)\r\nTraceback (most recent call last):\r\n  [...]\r\nArrowInvalid: Offset invariant failure: non-monotonic offset at slot 2048: -2147483648 < 2146435072\r\n{code}\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-12-09T16:26:00.118+0000",
                    "updated": "2020-12-09T16:26:00.118+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/comment/17271015",
                    "id": "17271015",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lausen",
                        "name": "lausen",
                        "key": "lausen",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Leonard Lausen",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "There is a similar issue with large tables (many rows) of medium size lists (~512 elements per list). When using `pa.list_` type, `take` will fail due to `offset overflow while concatenating arrays`. Using `pa.large_list` works. (But in practice it doesn't help as `.take` performs 3 orders of magnitude (~1s vs ~1ms) slower than indexing operations on pandas..)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lausen",
                        "name": "lausen",
                        "key": "lausen",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Leonard Lausen",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-01-24T23:17:46.287+0000",
                    "updated": "2021-01-24T23:17:46.287+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/comment/17535809",
                    "id": "17535809",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cfregly",
                        "name": "cfregly",
                        "key": "cfregly",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cfregly&avatarId=19874",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cfregly&avatarId=19874",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cfregly&avatarId=19874",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cfregly&avatarId=19874"
                        },
                        "displayName": "Chris Fregly",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Seeing this error through Ray 1.13 when I run the following code:\r\n\r\nimport ray\r\n\r\nray.init(address=\"auto\")\r\n\r\ndf = ray.data.read_parquet(\"\r\n[s3://amazon-reviews-pds/parquet/]\r\n\")\r\n\r\nprint(df.groupby(\"product_category\").count())\r\n\u00a0\r\n\r\nHere's the error:\r\n(_partition_and_combine_block pid=1933) 2022-05-06 20:51:29,275 INFO worker.py:431 \u2013 Task failed with retryable exception: TaskID(7f0166b85ffd7f1fffffffffffffffffffffffff01000000).\r\n(_partition_and_combine_block pid=1933) Traceback (most recent call last):\r\n(_partition_and_combine_block pid=1933) File \"python/ray/_raylet.pyx\", line 625, in ray._raylet.execute_task\r\n(_partition_and_combine_block pid=1933) File \"python/ray/_raylet.pyx\", line 629, in ray._raylet.execute_task\r\n(_partition_and_combine_block pid=1933) File \"/home/ray/anaconda3/lib/python3.7/site-packages/ray/data/grouped_dataset.py\", line 436, in _partition_and_combine_block\r\n(_partition_and_combine_block pid=1933) descending=False)\r\n(_partition_and_combine_block pid=1933) File \"/home/ray/anaconda3/lib/python3.7/site-packages/ray/data/impl/arrow_block.py\", line 308, in sort_and_partition\r\n(_partition_and_combine_block pid=1933) table = self._table.take(indices)\r\n(_partition_and_combine_block pid=1933) File \"pyarrow/table.pxi\", line 1382, in pyarrow.lib.Table.take\r\n(_partition_and_combine_block pid=1933) File \"/home/ray/anaconda3/lib/python3.7/site-packages/pyarrow/compute.py\", line 625, in take\r\n(_partition_and_combine_block pid=1933) return call_function('take', [data, indices], options, memory_pool)\r\n(_partition_and_combine_block pid=1933) File \"pyarrow/_compute.pyx\", line 528, in pyarrow._compute.call_function\r\n(_partition_and_combine_block pid=1933) File \"pyarrow/_compute.pyx\", line 327, in pyarrow._compute.Function.call\r\n(_partition_and_combine_block pid=1933) File \"pyarrow/error.pxi\", line 143, in pyarrow.lib.pyarrow_internal_check_status\r\n(_partition_and_combine_block pid=1933) File \"pyarrow/error.pxi\", line 99, in pyarrow.lib.check_status\r\n(_partition_and_combine_block pid=1933) pyarrow.lib.ArrowInvalid: offset overflow while concatenating arrays\r\nGroupBy Map: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 200/200 [01:31<00:00, 2.18it/s]\r\nGroupBy Reduce: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 200/200 [00:00<00:00, 19776.52it/s]\r\nTraceback (most recent call last):\r\nFile \"/home/ray/parquet-raydata.py\", line 10, in <module>\r\nprint(df.groupby(\"product_category\").count().sort())\r\nFile \"/home/ray/anaconda3/lib/python3.7/site-packages/ray/data/grouped_dataset.py\", line 147, in count\r\nreturn self.aggregate(Count())\r\nFile \"/home/ray/anaconda3/lib/python3.7/site-packages/ray/data/grouped_dataset.py\", line 114, in aggregate\r\nmetadata = ray.get(metadata)\r\nFile \"/home/ray/anaconda3/lib/python3.7/site-packages/ray/_private/client_mode_hook.py\", line 105, in wrapper\r\nreturn func(*args, **kwargs)\r\nFile \"/home/ray/anaconda3/lib/python3.7/site-packages/ray/worker.py\", line 1713, in get\r\nraise value.as_instanceof_cause()\r\nray.exceptions.RayTaskError(ArrowInvalid): ray::_aggregate_combined_blocks() (pid=27147, ip=172.31.14.160)\r\nAt least one of the input arguments for this task could not be computed:\r\nray.exceptions.RayTaskError: ray::_partition_and_combine_block() (pid=1930, ip=172.31.14.160)\r\nFile \"/home/ray/anaconda3/lib/python3.7/site-packages/ray/data/grouped_dataset.py\", line 436, in _partition_and_combine_block\r\ndescending=False)\r\nFile \"/home/ray/anaconda3/lib/python3.7/site-packages/ray/data/impl/arrow_block.py\", line 308, in sort_and_partition\r\ntable = self._table.take(indices)\r\nFile \"pyarrow/table.pxi\", line 1382, in pyarrow.lib.Table.take\r\nFile \"/home/ray/anaconda3/lib/python3.7/site-packages/pyarrow/compute.py\", line 625, in take\r\nreturn call_function('take', [data, indices], options, memory_pool)\r\nFile \"pyarrow/_compute.pyx\", line 528, in pyarrow._compute.call_function\r\nFile \"pyarrow/_compute.pyx\", line 327, in pyarrow._compute.Function.call\r\nFile \"pyarrow/error.pxi\", line 143, in pyarrow.lib.pyarrow_internal_check_status\r\nFile \"pyarrow/error.pxi\", line 99, in pyarrow.lib.check_status\r\npyarrow.lib.ArrowInvalid: offset overflow while concatenating arrays",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cfregly",
                        "name": "cfregly",
                        "key": "cfregly",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cfregly&avatarId=19874",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cfregly&avatarId=19874",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cfregly&avatarId=19874",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cfregly&avatarId=19874"
                        },
                        "displayName": "Chris Fregly",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-05-12T02:10:46.671+0000",
                    "updated": "2022-05-12T02:13:13.724+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/comment/17544575",
                    "id": "17544575",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mayuropensource",
                        "name": "mayuropensource",
                        "key": "mayuropensource",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Mayur Srivastava",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hi [~lidavidm] , is there any progress on this jira? (This issue is blocking a few use cases we have.)\r\n\r\n\u00a0\r\n\r\nThanks,\r\n\r\nMayur Srivastava",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mayuropensource",
                        "name": "mayuropensource",
                        "key": "mayuropensource",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Mayur Srivastava",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-05-31T19:35:21.619+0000",
                    "updated": "2022-05-31T19:35:21.619+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/comment/17544576",
                    "id": "17544576",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "It needs someone motivated to sit down and work through the implementation. I can review/offer suggestions but probably don't have the time to implement this right now.\r\n\r\nNote that I think the cases described in the comments above are fundamentally different from the original issue: they also require upgrading the output from Array to ChunkedArray (or from String/List to LargeString/LargeList) and so can't be done automatically. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-05-31T19:40:59.692+0000",
                    "updated": "2022-05-31T19:40:59.692+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/comment/17550684",
                    "id": "17550684",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I'm interested in working on this soon. I'll look through the issue a little deeper and ping you [~lidavidm] to get some ideas on the design.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-06-06T22:25:58.003+0000",
                    "updated": "2022-06-06T22:25:58.003+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/comment/17550686",
                    "id": "17550686",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~willjones127] great! Looking forward to it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-06-06T22:38:20.853+0000",
                    "updated": "2022-06-06T22:38:20.853+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/comment/17551259",
                    "id": "17551259",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I've looked through the code and I think there are three related issues. I'll try to describe them here. If you think I am missing some case, let me know. Otherwise, I'll open three sub-tasks and start work on those.\r\nh2. Problem 1: We concatenate when we shouldn't need to\r\n\r\nThis fails:\r\n{code:python}\r\narr = pa.chunked_array([[\"a\" * 2**30]] * 2)\r\narr.take([0,1])\r\n# Traceback (most recent call last):\r\n#   File \"<stdin>\", line 1, in <module>\r\n#   File \"pyarrow/table.pxi\", line 998, in pyarrow.lib.ChunkedArray.take\r\n#   File \"/Users/willjones/Documents/test-env/venv/lib/python3.9/site-packages/pyarrow/compute.py\", line 457, in take\r\n#     return call_function('take', [data, indices], options, memory_pool)\r\n#   File \"pyarrow/_compute.pyx\", line 542, in pyarrow._compute.call_function\r\n#   File \"pyarrow/_compute.pyx\", line 341, in pyarrow._compute.Function.call\r\n#   File \"pyarrow/error.pxi\", line 144, in pyarrow.lib.pyarrow_internal_check_status\r\n#   File \"pyarrow/error.pxi\", line 100, in pyarrow.lib.check_status\r\n# pyarrow.lib.ArrowInvalid: offset overflow while concatenating arrays\r\n{code}\r\n\u00a0because we concatenate input values [here|https://github.com/apache/arrow/blob/0d5cf1882228624271062e6c19583c8b0c361a20/cpp/src/arrow/compute/kernels/vector_selection.cc#L2024-L2025]. If that were corrected, it would then fail on the concatenation [here|https://github.com/apache/arrow/blob/0d5cf1882228624271062e6c19583c8b0c361a20/cpp/src/arrow/compute/kernels/vector_selection.cc#L2046-L2047] if the indices were a chunked array.\r\n\r\nThe first concatenation could be avoided somewhat easily in special cases (sorted / fall in same chunk), which was [partially implement in R|https://github.com/apache/arrow/blob/6f2c9041137001f7a9212f244b51bc004efc29af/r/src/compute.cpp#L123-L151]. For the general case, we'd need to address this within the kernel rather than within pre-processing (see Problem 3).\r\n\r\nThe second concatenation shouldn't always be eliminated, but we might want to add a check to validate that there is enough room in offset buffers of arrays to concatenate. TBD if there is an efficient way to test that.\r\nh2. Problem 2: take_array kernel doesn't handle case of offset overflow\r\n\r\nThis is what Antoine was pointing out:\r\n{code:python}\r\nimport pyarrow as pa\r\narr = pa.array([\"x\" * (1<<20)])\r\nt = arr.take(pa.array([0]*((1<<12) + 1), type=pa.int8()))\r\nt.validate(full=True)\r\n# Traceback (most recent call last):\r\n#   [...]\r\n# ArrowInvalid: Offset invariant failure: non-monotonic offset at slot 2048: -2147483648 < 2146435072\r\n{code}\r\nTo solve this, I think we'd either have to:\r\n # (optionally?) promote arrays to Large variants of type. Problem is we'd need to do this cast consistently across chunks.\r\n # Switch to returning chunked arrays, and create new chunks as needed. (TBD: Could we do that in some cases (String, Binary, List types) and not others?)\r\n\r\nh2. Problem 3: there isn't a take_array kernel that handles ChunkedArrays\r\n\r\nFinally, for sorting chunked arrays of type string/binary/list (that is, the case for take where the indices are out-of-order), I think we need to implement kernels specialized for chunked arrays. IIUC, everything but string/binary/list types could simply do the concatenation we do now; it's just those three types that need special logic to chunk as necessary to avoid offset overflows.\r\n\r\n\u00a0\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-06-07T19:50:22.616+0000",
                    "updated": "2022-06-07T19:50:22.616+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/comment/17551526",
                    "id": "17551526",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Ok, it's a bit unfortunate that several distinct issues have been amalgamated here :-)\r\n\r\nI'd argue that this issue is primarily about fixing problem 3 (which would also fix problem 1). Besides correctness, concatenating is also a performance problem because we might be allocating a lot of temporary memory.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-06-08T10:10:23.673+0000",
                    "updated": "2022-06-08T10:10:23.673+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323099/comment/17551563",
                    "id": "17551563",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Agreed, we should focus on 1/3. Problem 2 is also interesting, but I'm not sure how best to handle it: right now the kernels infrastructure assumes a fixed output type and shape up front, and dynamically switching to ChunkedArray or promoting type would be a surprise.\r\n\r\nI would think we could avoid concatenation for all types, even if it isn't strictly required, to avoid excessive allocation as Antoine mentioned.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-06-08T11:31:44.383+0000",
                    "updated": "2022-06-08T11:31:44.383+0000"
                }
            ],
            "maxResults": 10,
            "total": 10,
            "startAt": 0
        },
        "customfield_12311820": "0|z0hu6o:",
        "customfield_12314139": null
    }
}