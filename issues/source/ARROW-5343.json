{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13233614",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13233614",
    "key": "ARROW-5343",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5343/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 13,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13233614/worklog/314755",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5434: ARROW-5343: [C++] Refactor dictionary unification to incremental interface, and use Buffer for transpose map allocations\nURL: https://github.com/apache/arrow/pull/5434\n \n \n   I went ahead and nixed the current `DictionaryType::Unify` API since it is fairly internal anyway. I want to code against this API for ARROW-5717 which I'll stack on top of this patch\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T01:05:24.228+0000",
                    "updated": "2019-09-19T01:05:24.228+0000",
                    "started": "2019-09-19T01:05:24.227+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314755",
                    "issueId": "13233614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13233614/worklog/314937",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5434: ARROW-5343: [C++] Refactor dictionary unification to incremental interface, and use Buffer for transpose map allocations\nURL: https://github.com/apache/arrow/pull/5434#discussion_r326090425\n \n \n\n ##########\n File path: cpp/src/arrow/type_test.cc\n ##########\n @@ -911,6 +911,12 @@ TEST(TestDictionaryType, Equals) {\n   AssertTypesNotEqual(*t5, *t6);\n }\n \n+void CheckTransposeMap(const Buffer& map, std::vector<int32_t> expected) {\n+  Buffer ex_buffer(reinterpret_cast<const uint8_t*>(expected.data()),\n+                   static_cast<int64_t>(expected.size() * sizeof(int32_t)));\n+  ASSERT_TRUE(map.Equals(ex_buffer));\n \n Review comment:\n   Use `AssertBufferEqual`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T10:06:17.819+0000",
                    "updated": "2019-09-19T10:06:17.819+0000",
                    "started": "2019-09-19T10:06:17.819+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314937",
                    "issueId": "13233614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13233614/worklog/314938",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5434: ARROW-5343: [C++] Refactor dictionary unification to incremental interface, and use Buffer for transpose map allocations\nURL: https://github.com/apache/arrow/pull/5434#discussion_r326089247\n \n \n\n ##########\n File path: cpp/src/arrow/type.h\n ##########\n @@ -1289,6 +1266,35 @@ class ARROW_EXPORT DictionaryType : public FixedWidthType {\n   bool ordered_;\n };\n \n+/// \\brief Helper class for incremental dictionary unification\n+class ARROW_EXPORT DictionaryUnifier {\n+ public:\n+  virtual ~DictionaryUnifier() = default;\n+\n+  /// \\brief Construct a DictionaryUnifier\n+  /// \\param[in] pool MemoryPool to use for memory allocations\n+  /// \\param[in] value_type the data type of the dictionaries\n+  /// \\param[out] out the constructed unifier\n+  static Status Make(MemoryPool* pool, std::shared_ptr<DataType> value_type,\n+                     std::unique_ptr<DictionaryUnifier>* out);\n+\n+  /// \\brief Append dictionary to the internal memo\n+  virtual Status Unify(const Array& dictionary) = 0;\n+\n+  /// \\brief Append dictionary and compute transpose indices\n+  /// \\param[in] dictionary the dictionary values to unify\n+  /// \\param[out] out_transpose a Buffer containing computed transpose indices\n \n Review comment:\n   Mention that the indices are int32_t?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T10:06:17.937+0000",
                    "updated": "2019-09-19T10:06:17.937+0000",
                    "started": "2019-09-19T10:06:17.936+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314938",
                    "issueId": "13233614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13233614/worklog/314939",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5434: ARROW-5343: [C++] Refactor dictionary unification to incremental interface, and use Buffer for transpose map allocations\nURL: https://github.com/apache/arrow/pull/5434#discussion_r326089484\n \n \n\n ##########\n File path: cpp/src/arrow/type.h\n ##########\n @@ -1289,6 +1266,35 @@ class ARROW_EXPORT DictionaryType : public FixedWidthType {\n   bool ordered_;\n };\n \n+/// \\brief Helper class for incremental dictionary unification\n+class ARROW_EXPORT DictionaryUnifier {\n+ public:\n+  virtual ~DictionaryUnifier() = default;\n+\n+  /// \\brief Construct a DictionaryUnifier\n+  /// \\param[in] pool MemoryPool to use for memory allocations\n+  /// \\param[in] value_type the data type of the dictionaries\n+  /// \\param[out] out the constructed unifier\n+  static Status Make(MemoryPool* pool, std::shared_ptr<DataType> value_type,\n+                     std::unique_ptr<DictionaryUnifier>* out);\n+\n+  /// \\brief Append dictionary to the internal memo\n+  virtual Status Unify(const Array& dictionary) = 0;\n+\n+  /// \\brief Append dictionary and compute transpose indices\n+  /// \\param[in] dictionary the dictionary values to unify\n+  /// \\param[out] out_transpose a Buffer containing computed transpose indices\n+  /// for a DictionaryArray with the old dictionary\n+  virtual Status Unify(const Array& dictionary,\n+                       std::shared_ptr<Buffer>* out_transpose) = 0;\n+\n+  /// \\brief Return a result DictionaryType with the smallest possible index\n+  /// type to accommodate the unified dictionary and the unified\n+  /// dictionary. The unifier cannot be used after this is called\n \n Review comment:\n   \"to accomodate the unified dictionary and the unified dictionary\": typo??\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T10:06:18.059+0000",
                    "updated": "2019-09-19T10:06:18.059+0000",
                    "started": "2019-09-19T10:06:18.059+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314939",
                    "issueId": "13233614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13233614/worklog/314940",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5434: ARROW-5343: [C++] Refactor dictionary unification to incremental interface, and use Buffer for transpose map allocations\nURL: https://github.com/apache/arrow/pull/5434#discussion_r326091500\n \n \n\n ##########\n File path: cpp/src/arrow/array/dict_internal.cc\n ##########\n @@ -44,119 +44,114 @@ using internal::CopyBitmap;\n // ----------------------------------------------------------------------\n // DictionaryType unification\n \n-struct UnifyDictionaryValues {\n-  MemoryPool* pool_;\n-  std::shared_ptr<DataType> value_type_;\n-  const std::vector<const DictionaryType*>& types_;\n-  const std::vector<const Array*>& dictionaries_;\n-  std::shared_ptr<Array>* out_values_;\n-  std::vector<std::vector<int32_t>>* out_transpose_maps_;\n-\n-  template <typename T>\n-  enable_if_no_memoize<T, Status> Visit(const T&) {\n-    // Default implementation for non-dictionary-supported datatypes\n-    return Status::NotImplemented(\"Unification of \", value_type_,\n-                                  \" dictionaries is not implemented\");\n+template <typename T>\n+class DictionaryUnifierImpl : public DictionaryUnifier {\n+ public:\n+  using ArrayType = typename TypeTraits<T>::ArrayType;\n+  using DictTraits = typename internal::DictionaryTraits<T>;\n+  using MemoTableType = typename DictTraits::MemoTableType;\n+\n+  DictionaryUnifierImpl(MemoryPool* pool, std::shared_ptr<DataType> value_type)\n+      : pool_(pool), value_type_(value_type), memo_table_(pool) {}\n+\n+  Status Unify(const Array& dictionary) override {\n \n Review comment:\n   Could simply pass `out = nullptr` to the other `Unify` method instead of duplicating the memo table insertion code.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T10:06:18.302+0000",
                    "updated": "2019-09-19T10:06:18.302+0000",
                    "started": "2019-09-19T10:06:18.301+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314940",
                    "issueId": "13233614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13233614/worklog/314941",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5434: ARROW-5343: [C++] Refactor dictionary unification to incremental interface, and use Buffer for transpose map allocations\nURL: https://github.com/apache/arrow/pull/5434#discussion_r326090278\n \n \n\n ##########\n File path: cpp/src/arrow/type_test.cc\n ##########\n @@ -911,6 +911,12 @@ TEST(TestDictionaryType, Equals) {\n   AssertTypesNotEqual(*t5, *t6);\n }\n \n+void CheckTransposeMap(const Buffer& map, std::vector<int32_t> expected) {\n+  Buffer ex_buffer(reinterpret_cast<const uint8_t*>(expected.data()),\n \n Review comment:\n   Use `Buffer::Wrap`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T10:06:18.304+0000",
                    "updated": "2019-09-19T10:06:18.304+0000",
                    "started": "2019-09-19T10:06:18.304+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314941",
                    "issueId": "13233614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13233614/worklog/314942",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5434: ARROW-5343: [C++] Refactor dictionary unification to incremental interface, and use Buffer for transpose map allocations\nURL: https://github.com/apache/arrow/pull/5434#discussion_r326092059\n \n \n\n ##########\n File path: cpp/src/arrow/array/dict_internal.cc\n ##########\n @@ -44,119 +44,114 @@ using internal::CopyBitmap;\n // ----------------------------------------------------------------------\n // DictionaryType unification\n \n-struct UnifyDictionaryValues {\n-  MemoryPool* pool_;\n-  std::shared_ptr<DataType> value_type_;\n-  const std::vector<const DictionaryType*>& types_;\n-  const std::vector<const Array*>& dictionaries_;\n-  std::shared_ptr<Array>* out_values_;\n-  std::vector<std::vector<int32_t>>* out_transpose_maps_;\n-\n-  template <typename T>\n-  enable_if_no_memoize<T, Status> Visit(const T&) {\n-    // Default implementation for non-dictionary-supported datatypes\n-    return Status::NotImplemented(\"Unification of \", value_type_,\n-                                  \" dictionaries is not implemented\");\n+template <typename T>\n+class DictionaryUnifierImpl : public DictionaryUnifier {\n+ public:\n+  using ArrayType = typename TypeTraits<T>::ArrayType;\n+  using DictTraits = typename internal::DictionaryTraits<T>;\n+  using MemoTableType = typename DictTraits::MemoTableType;\n+\n+  DictionaryUnifierImpl(MemoryPool* pool, std::shared_ptr<DataType> value_type)\n+      : pool_(pool), value_type_(value_type), memo_table_(pool) {}\n+\n+  Status Unify(const Array& dictionary) override {\n+    const ArrayType& values = checked_cast<const ArrayType&>(dictionary);\n+    if (dictionary.null_count() > 0) {\n+      return Status::Invalid(\"Cannot yet unify dictionaries with nulls\");\n+    }\n+    if (!dictionary.type()->Equals(*value_type_)) {\n+      return Status::Invalid(\"Dictionary type different from unifier: \",\n+                             dictionary.type()->ToString());\n+    }\n+    for (int64_t i = 0; i < values.length(); ++i) {\n+      memo_table_.GetOrInsert(values.GetView(i));\n+    }\n+    return Status::OK();\n   }\n \n-  template <typename T>\n-  enable_if_memoize<T, Status> Visit(const T&) {\n-    using ArrayType = typename TypeTraits<T>::ArrayType;\n-    using DictTraits = typename internal::DictionaryTraits<T>;\n-    using MemoTableType = typename DictTraits::MemoTableType;\n-\n-    MemoTableType memo_table(pool_);\n-    if (out_transpose_maps_ != nullptr) {\n-      out_transpose_maps_->clear();\n-      out_transpose_maps_->reserve(types_.size());\n+  Status Unify(const Array& dictionary, std::shared_ptr<Buffer>* out) override {\n+    const ArrayType& values = checked_cast<const ArrayType&>(dictionary);\n+    if (dictionary.null_count() > 0) {\n+      return Status::Invalid(\"Cannot yet unify dictionaries with nulls\");\n \n Review comment:\n   Do we have a JIRA open to add null support to MemoTables?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T10:06:18.307+0000",
                    "updated": "2019-09-19T10:06:18.307+0000",
                    "started": "2019-09-19T10:06:18.307+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314942",
                    "issueId": "13233614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13233614/worklog/315215",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5434: ARROW-5343: [C++] Refactor dictionary unification to incremental interface, and use Buffer for transpose map allocations\nURL: https://github.com/apache/arrow/pull/5434#discussion_r326310475\n \n \n\n ##########\n File path: cpp/src/arrow/array/dict_internal.cc\n ##########\n @@ -44,119 +44,114 @@ using internal::CopyBitmap;\n // ----------------------------------------------------------------------\n // DictionaryType unification\n \n-struct UnifyDictionaryValues {\n-  MemoryPool* pool_;\n-  std::shared_ptr<DataType> value_type_;\n-  const std::vector<const DictionaryType*>& types_;\n-  const std::vector<const Array*>& dictionaries_;\n-  std::shared_ptr<Array>* out_values_;\n-  std::vector<std::vector<int32_t>>* out_transpose_maps_;\n-\n-  template <typename T>\n-  enable_if_no_memoize<T, Status> Visit(const T&) {\n-    // Default implementation for non-dictionary-supported datatypes\n-    return Status::NotImplemented(\"Unification of \", value_type_,\n-                                  \" dictionaries is not implemented\");\n+template <typename T>\n+class DictionaryUnifierImpl : public DictionaryUnifier {\n+ public:\n+  using ArrayType = typename TypeTraits<T>::ArrayType;\n+  using DictTraits = typename internal::DictionaryTraits<T>;\n+  using MemoTableType = typename DictTraits::MemoTableType;\n+\n+  DictionaryUnifierImpl(MemoryPool* pool, std::shared_ptr<DataType> value_type)\n+      : pool_(pool), value_type_(value_type), memo_table_(pool) {}\n+\n+  Status Unify(const Array& dictionary) override {\n+    const ArrayType& values = checked_cast<const ArrayType&>(dictionary);\n+    if (dictionary.null_count() > 0) {\n+      return Status::Invalid(\"Cannot yet unify dictionaries with nulls\");\n+    }\n+    if (!dictionary.type()->Equals(*value_type_)) {\n+      return Status::Invalid(\"Dictionary type different from unifier: \",\n+                             dictionary.type()->ToString());\n+    }\n+    for (int64_t i = 0; i < values.length(); ++i) {\n+      memo_table_.GetOrInsert(values.GetView(i));\n+    }\n+    return Status::OK();\n   }\n \n-  template <typename T>\n-  enable_if_memoize<T, Status> Visit(const T&) {\n-    using ArrayType = typename TypeTraits<T>::ArrayType;\n-    using DictTraits = typename internal::DictionaryTraits<T>;\n-    using MemoTableType = typename DictTraits::MemoTableType;\n-\n-    MemoTableType memo_table(pool_);\n-    if (out_transpose_maps_ != nullptr) {\n-      out_transpose_maps_->clear();\n-      out_transpose_maps_->reserve(types_.size());\n+  Status Unify(const Array& dictionary, std::shared_ptr<Buffer>* out) override {\n+    const ArrayType& values = checked_cast<const ArrayType&>(dictionary);\n+    if (dictionary.null_count() > 0) {\n+      return Status::Invalid(\"Cannot yet unify dictionaries with nulls\");\n \n Review comment:\n   @fsaintjacques ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T18:03:35.508+0000",
                    "updated": "2019-09-19T18:03:35.508+0000",
                    "started": "2019-09-19T18:03:35.508+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315215",
                    "issueId": "13233614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13233614/worklog/315240",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5434: ARROW-5343: [C++] Refactor dictionary unification to incremental interface, and use Buffer for transpose map allocations\nURL: https://github.com/apache/arrow/pull/5434#discussion_r326335323\n \n \n\n ##########\n File path: cpp/src/arrow/array/dict_internal.cc\n ##########\n @@ -44,119 +44,114 @@ using internal::CopyBitmap;\n // ----------------------------------------------------------------------\n // DictionaryType unification\n \n-struct UnifyDictionaryValues {\n-  MemoryPool* pool_;\n-  std::shared_ptr<DataType> value_type_;\n-  const std::vector<const DictionaryType*>& types_;\n-  const std::vector<const Array*>& dictionaries_;\n-  std::shared_ptr<Array>* out_values_;\n-  std::vector<std::vector<int32_t>>* out_transpose_maps_;\n-\n-  template <typename T>\n-  enable_if_no_memoize<T, Status> Visit(const T&) {\n-    // Default implementation for non-dictionary-supported datatypes\n-    return Status::NotImplemented(\"Unification of \", value_type_,\n-                                  \" dictionaries is not implemented\");\n+template <typename T>\n+class DictionaryUnifierImpl : public DictionaryUnifier {\n+ public:\n+  using ArrayType = typename TypeTraits<T>::ArrayType;\n+  using DictTraits = typename internal::DictionaryTraits<T>;\n+  using MemoTableType = typename DictTraits::MemoTableType;\n+\n+  DictionaryUnifierImpl(MemoryPool* pool, std::shared_ptr<DataType> value_type)\n+      : pool_(pool), value_type_(value_type), memo_table_(pool) {}\n+\n+  Status Unify(const Array& dictionary) override {\n+    const ArrayType& values = checked_cast<const ArrayType&>(dictionary);\n+    if (dictionary.null_count() > 0) {\n+      return Status::Invalid(\"Cannot yet unify dictionaries with nulls\");\n+    }\n+    if (!dictionary.type()->Equals(*value_type_)) {\n+      return Status::Invalid(\"Dictionary type different from unifier: \",\n+                             dictionary.type()->ToString());\n+    }\n+    for (int64_t i = 0; i < values.length(); ++i) {\n+      memo_table_.GetOrInsert(values.GetView(i));\n+    }\n+    return Status::OK();\n   }\n \n-  template <typename T>\n-  enable_if_memoize<T, Status> Visit(const T&) {\n-    using ArrayType = typename TypeTraits<T>::ArrayType;\n-    using DictTraits = typename internal::DictionaryTraits<T>;\n-    using MemoTableType = typename DictTraits::MemoTableType;\n-\n-    MemoTableType memo_table(pool_);\n-    if (out_transpose_maps_ != nullptr) {\n-      out_transpose_maps_->clear();\n-      out_transpose_maps_->reserve(types_.size());\n+  Status Unify(const Array& dictionary, std::shared_ptr<Buffer>* out) override {\n+    const ArrayType& values = checked_cast<const ArrayType&>(dictionary);\n+    if (dictionary.null_count() > 0) {\n+      return Status::Invalid(\"Cannot yet unify dictionaries with nulls\");\n \n Review comment:\n   Nulls are supported in MemoTables (GetOrInsertNull). The issue to adding them in dictionary is compat with parquet/pandas testing facility. There was also deciding if it could have multiple nulls in the dictionary.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T19:01:11.169+0000",
                    "updated": "2019-09-19T19:01:11.169+0000",
                    "started": "2019-09-19T19:01:11.168+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315240",
                    "issueId": "13233614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13233614/worklog/315242",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5434: ARROW-5343: [C++] Refactor dictionary unification to incremental interface, and use Buffer for transpose map allocations\nURL: https://github.com/apache/arrow/pull/5434#discussion_r326335323\n \n \n\n ##########\n File path: cpp/src/arrow/array/dict_internal.cc\n ##########\n @@ -44,119 +44,114 @@ using internal::CopyBitmap;\n // ----------------------------------------------------------------------\n // DictionaryType unification\n \n-struct UnifyDictionaryValues {\n-  MemoryPool* pool_;\n-  std::shared_ptr<DataType> value_type_;\n-  const std::vector<const DictionaryType*>& types_;\n-  const std::vector<const Array*>& dictionaries_;\n-  std::shared_ptr<Array>* out_values_;\n-  std::vector<std::vector<int32_t>>* out_transpose_maps_;\n-\n-  template <typename T>\n-  enable_if_no_memoize<T, Status> Visit(const T&) {\n-    // Default implementation for non-dictionary-supported datatypes\n-    return Status::NotImplemented(\"Unification of \", value_type_,\n-                                  \" dictionaries is not implemented\");\n+template <typename T>\n+class DictionaryUnifierImpl : public DictionaryUnifier {\n+ public:\n+  using ArrayType = typename TypeTraits<T>::ArrayType;\n+  using DictTraits = typename internal::DictionaryTraits<T>;\n+  using MemoTableType = typename DictTraits::MemoTableType;\n+\n+  DictionaryUnifierImpl(MemoryPool* pool, std::shared_ptr<DataType> value_type)\n+      : pool_(pool), value_type_(value_type), memo_table_(pool) {}\n+\n+  Status Unify(const Array& dictionary) override {\n+    const ArrayType& values = checked_cast<const ArrayType&>(dictionary);\n+    if (dictionary.null_count() > 0) {\n+      return Status::Invalid(\"Cannot yet unify dictionaries with nulls\");\n+    }\n+    if (!dictionary.type()->Equals(*value_type_)) {\n+      return Status::Invalid(\"Dictionary type different from unifier: \",\n+                             dictionary.type()->ToString());\n+    }\n+    for (int64_t i = 0; i < values.length(); ++i) {\n+      memo_table_.GetOrInsert(values.GetView(i));\n+    }\n+    return Status::OK();\n   }\n \n-  template <typename T>\n-  enable_if_memoize<T, Status> Visit(const T&) {\n-    using ArrayType = typename TypeTraits<T>::ArrayType;\n-    using DictTraits = typename internal::DictionaryTraits<T>;\n-    using MemoTableType = typename DictTraits::MemoTableType;\n-\n-    MemoTableType memo_table(pool_);\n-    if (out_transpose_maps_ != nullptr) {\n-      out_transpose_maps_->clear();\n-      out_transpose_maps_->reserve(types_.size());\n+  Status Unify(const Array& dictionary, std::shared_ptr<Buffer>* out) override {\n+    const ArrayType& values = checked_cast<const ArrayType&>(dictionary);\n+    if (dictionary.null_count() > 0) {\n+      return Status::Invalid(\"Cannot yet unify dictionaries with nulls\");\n \n Review comment:\n   Nulls are supported in MemoTables (GetOrInsertNull). The issue to supporting them in dictionary is compatibility with parquet/pandas testing facility. We also have to decide what to do with multiple nulls in the array (effectively break the uniqueness guarantee).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T19:02:08.274+0000",
                    "updated": "2019-09-19T19:02:08.274+0000",
                    "started": "2019-09-19T19:02:08.273+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315242",
                    "issueId": "13233614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13233614/worklog/315350",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5434: ARROW-5343: [C++] Refactor dictionary unification to incremental interface, and use Buffer for transpose map allocations\nURL: https://github.com/apache/arrow/pull/5434#discussion_r326418396\n \n \n\n ##########\n File path: cpp/src/arrow/array/dict_internal.cc\n ##########\n @@ -44,119 +44,114 @@ using internal::CopyBitmap;\n // ----------------------------------------------------------------------\n // DictionaryType unification\n \n-struct UnifyDictionaryValues {\n-  MemoryPool* pool_;\n-  std::shared_ptr<DataType> value_type_;\n-  const std::vector<const DictionaryType*>& types_;\n-  const std::vector<const Array*>& dictionaries_;\n-  std::shared_ptr<Array>* out_values_;\n-  std::vector<std::vector<int32_t>>* out_transpose_maps_;\n-\n-  template <typename T>\n-  enable_if_no_memoize<T, Status> Visit(const T&) {\n-    // Default implementation for non-dictionary-supported datatypes\n-    return Status::NotImplemented(\"Unification of \", value_type_,\n-                                  \" dictionaries is not implemented\");\n+template <typename T>\n+class DictionaryUnifierImpl : public DictionaryUnifier {\n+ public:\n+  using ArrayType = typename TypeTraits<T>::ArrayType;\n+  using DictTraits = typename internal::DictionaryTraits<T>;\n+  using MemoTableType = typename DictTraits::MemoTableType;\n+\n+  DictionaryUnifierImpl(MemoryPool* pool, std::shared_ptr<DataType> value_type)\n+      : pool_(pool), value_type_(value_type), memo_table_(pool) {}\n+\n+  Status Unify(const Array& dictionary) override {\n+    const ArrayType& values = checked_cast<const ArrayType&>(dictionary);\n+    if (dictionary.null_count() > 0) {\n+      return Status::Invalid(\"Cannot yet unify dictionaries with nulls\");\n+    }\n+    if (!dictionary.type()->Equals(*value_type_)) {\n+      return Status::Invalid(\"Dictionary type different from unifier: \",\n+                             dictionary.type()->ToString());\n+    }\n+    for (int64_t i = 0; i < values.length(); ++i) {\n+      memo_table_.GetOrInsert(values.GetView(i));\n+    }\n+    return Status::OK();\n   }\n \n-  template <typename T>\n-  enable_if_memoize<T, Status> Visit(const T&) {\n-    using ArrayType = typename TypeTraits<T>::ArrayType;\n-    using DictTraits = typename internal::DictionaryTraits<T>;\n-    using MemoTableType = typename DictTraits::MemoTableType;\n-\n-    MemoTableType memo_table(pool_);\n-    if (out_transpose_maps_ != nullptr) {\n-      out_transpose_maps_->clear();\n-      out_transpose_maps_->reserve(types_.size());\n+  Status Unify(const Array& dictionary, std::shared_ptr<Buffer>* out) override {\n+    const ArrayType& values = checked_cast<const ArrayType&>(dictionary);\n+    if (dictionary.null_count() > 0) {\n+      return Status::Invalid(\"Cannot yet unify dictionaries with nulls\");\n \n Review comment:\n   I'll open a follow up\r\n   \r\n   https://issues.apache.org/jira/browse/ARROW-6628\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T23:10:57.626+0000",
                    "updated": "2019-09-19T23:10:57.626+0000",
                    "started": "2019-09-19T23:10:57.625+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315350",
                    "issueId": "13233614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13233614/worklog/315388",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5434: ARROW-5343: [C++] Refactor dictionary unification to incremental interface, and use Buffer for transpose map allocations\nURL: https://github.com/apache/arrow/pull/5434#issuecomment-533355152\n \n \n   Travis CI: https://travis-ci.org/wesm/arrow/builds/587244732\r\n   Appveyor seems to be passing: https://ci.appveyor.com/project/wesm/arrow/builds/27537470\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-20T00:18:52.533+0000",
                    "updated": "2019-09-20T00:18:52.533+0000",
                    "started": "2019-09-20T00:18:52.532+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315388",
                    "issueId": "13233614"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13233614/worklog/315389",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5434: ARROW-5343: [C++] Refactor dictionary unification to incremental interface, and use Buffer for transpose map allocations\nURL: https://github.com/apache/arrow/pull/5434\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-20T00:19:10.511+0000",
                    "updated": "2019-09-20T00:19:10.511+0000",
                    "started": "2019-09-20T00:19:10.511+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315389",
                    "issueId": "13233614"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@47eaf45a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@461b3c2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@57009a0f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5e76dc8e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@45e3f27[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4f2bd88[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@57f19ffb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3f8bab27[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ad91cf6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5bd6f6d8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b41e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6233e5aa[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Sep 20 00:19:16 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-09-20T00:19:16.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5343/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-05-15T22:06:24.000+0000",
        "updated": "2019-09-20T00:19:16.000+0000",
        "timeoriginalestimate": null,
        "description": "In the spirit of \"track all the allocations\", if dictionaries have non-trivial length, we may want to account for this memory more precisely. ",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Consider using Buffer for transpose maps in DictionaryType::Unify instead of std::vector",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13233614/comment/16913761",
                    "id": "16913761",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'm also interested in incremental unification so I'll have a look at this",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-08-22T22:38:00.289+0000",
                    "updated": "2019-08-22T22:38:00.289+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13233614/comment/16933877",
                    "id": "16933877",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 5434\n[https://github.com/apache/arrow/pull/5434]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-09-20T00:19:16.872+0000",
                    "updated": "2019-09-20T00:19:16.872+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z02qko:",
        "customfield_12314139": null
    }
}