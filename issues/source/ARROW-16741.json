{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13448192",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192",
    "key": "ARROW-16741",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ichauster",
            "name": "ichauster",
            "key": "JIRAUSER290345",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
            },
            "displayName": "Ivan Chau",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334978",
                "id": "12334978",
                "name": "Benchmarking"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ichauster",
            "name": "ichauster",
            "key": "JIRAUSER290345",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
            },
            "displayName": "Ivan Chau",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ichauster",
            "name": "ichauster",
            "key": "JIRAUSER290345",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
            },
            "displayName": "Ivan Chau",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16741/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 27,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/777766",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iChauster opened a new pull request, #13302:\nURL: https://github.com/apache/arrow/pull/13302\n\n   [JIRA](https://issues.apache.org/jira/browse/ARROW-16741)\n\n\n",
                    "created": "2022-06-02T17:56:10.791+0000",
                    "updated": "2022-06-02T17:56:10.791+0000",
                    "started": "2022-06-02T17:56:10.790+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "777766",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/777769",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#issuecomment-1145158430\n\n   https://issues.apache.org/jira/browse/ARROW-16741\n\n\n",
                    "created": "2022-06-02T18:03:42.256+0000",
                    "updated": "2022-06-02T18:03:42.256+0000",
                    "started": "2022-06-02T18:03:42.256+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "777769",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/777770",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#issuecomment-1145158468\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-06-02T18:03:47.094+0000",
                    "updated": "2022-06-02T18:03:47.094+0000",
                    "started": "2022-06-02T18:03:47.094+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "777770",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/777779",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#discussion_r888253687\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_benchmark.cc:\n##########\n@@ -214,5 +240,19 @@ BENCHMARK_TEMPLATE(BenchmarkStrptime, non_zoned)->Apply(SetArgs);\n BENCHMARK_TEMPLATE(BenchmarkStrptime, zoned)->Apply(SetArgs);\n BENCHMARK(BenchmarkAssumeTimezone)->Apply(SetArgs);\n \n+// binary temporal benchmarks\n\nReview Comment:\n   Perhaps we could also add `add`,  `add_checked`, `subtract`, `subtract_checked`, `multiply`, `multiply_checked`, `divide` and `divide_checked` here since they are binary?\r\n   These kernels are [defined here](https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/scalar_arithmetic.cc#L1999). However they are a bit more heterogeneous type wise so they will require some care (e.g. `add(timestamp, timestamp)` is invalid, while `subtract(timestamp, timestamp)` isn't)\n\n\n\n##########\ncpp/src/arrow/compute/api_scalar.h:\n##########\n@@ -1446,6 +1446,163 @@ ARROW_EXPORT Result<Datum> AssumeTimezone(const Datum& values,\n ARROW_EXPORT Result<Datum> IsDaylightSavings(const Datum& values,\n                                              ExecContext* ctx = NULLPTR);\n \n+/// \\brief Years Between finds the number of years between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> YearsBetween(const Datum& left, const Datum& right,\n+                                        ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Quarters Between finds the number of quarters between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> QuartersBetween(const Datum& left, const Datum& right,\n+                                           ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Months Between finds the number of month between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> MonthsBetween(const Datum& left, const Datum& right,\n+                                         ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Weeks Between finds the number of weeks between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> WeeksBetween(const Datum& left, const Datum& right,\n+                                        ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Month Day Nano Between finds the number of months, days, and nonaseconds\n+/// between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> MonthDayNanoBetween(const Datum& left, const Datum& right,\n+                                               ExecContext* ctx = NULLPTR);\n+\n+/// \\brief DayTime Between finds the number of days and milliseconds between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> DayTimeBetween(const Datum& left, const Datum& right,\n+                                          ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Days Between finds the number of days between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> DaysBetween(const Datum& left, const Datum& right,\n+                                       ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Hours Between finds the number of hours between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> HoursBetween(const Datum& left, const Datum& right,\n+                                        ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Minutes Between finds the number of minutes between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> MinutesBetween(const Datum& left, const Datum& right,\n+                                          ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Seconds Between finds the number of hours between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> SecondsBetween(const Datum& left, const Datum& right,\n+                                          ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Milliseconds Between finds the number of milliseconds between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> MillisecondsBetween(const Datum& left, const Datum& right,\n+                                               ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Microseconds Between finds the number of microseconds between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> MicrosecondsBetween(const Datum& left, const Datum& right,\n+                                               ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Nanoseconds Between finds the number of nanoseconds between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> NanoesecondsBetween(const Datum& left, const Datum& right,\n+                                               ExecContext* ctx = NULLPTR);\n\nReview Comment:\n   @lidavidm was this not mapped out for a reason?\n\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_benchmark.cc:\n##########\n@@ -172,6 +194,10 @@ auto non_zoned = timestamp(TimeUnit::NANO);\n #define DECLARE_TEMPORAL_BENCHMARKS_ZONED(OP) \\\n   BENCHMARK_TEMPLATE(BenchmarkTemporal, OP, zoned)->Apply(SetArgs);\n \n+#define DECLARE_TEMPORAL_BINARY_BENCHMARKS(OP)                                \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, non_zoned)->Apply(SetArgs); \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, zoned)->Apply(SetArgs);\n\nReview Comment:\n   For some cases you might want other time types here (date32 date64, time32, time64, duration). \n\n\n\n",
                    "created": "2022-06-02T18:28:43.241+0000",
                    "updated": "2022-06-02T18:28:43.241+0000",
                    "started": "2022-06-02T18:28:43.241+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "777779",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/777784",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#discussion_r888279575\n\n\n##########\ncpp/src/arrow/compute/api_scalar.h:\n##########\n@@ -1446,6 +1446,163 @@ ARROW_EXPORT Result<Datum> AssumeTimezone(const Datum& values,\n ARROW_EXPORT Result<Datum> IsDaylightSavings(const Datum& values,\n                                              ExecContext* ctx = NULLPTR);\n \n+/// \\brief Years Between finds the number of years between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> YearsBetween(const Datum& left, const Datum& right,\n+                                        ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Quarters Between finds the number of quarters between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> QuartersBetween(const Datum& left, const Datum& right,\n+                                           ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Months Between finds the number of month between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> MonthsBetween(const Datum& left, const Datum& right,\n+                                         ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Weeks Between finds the number of weeks between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> WeeksBetween(const Datum& left, const Datum& right,\n+                                        ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Month Day Nano Between finds the number of months, days, and nonaseconds\n+/// between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> MonthDayNanoBetween(const Datum& left, const Datum& right,\n+                                               ExecContext* ctx = NULLPTR);\n+\n+/// \\brief DayTime Between finds the number of days and milliseconds between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> DayTimeBetween(const Datum& left, const Datum& right,\n+                                          ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Days Between finds the number of days between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> DaysBetween(const Datum& left, const Datum& right,\n+                                       ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Hours Between finds the number of hours between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> HoursBetween(const Datum& left, const Datum& right,\n+                                        ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Minutes Between finds the number of minutes between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> MinutesBetween(const Datum& left, const Datum& right,\n+                                          ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Seconds Between finds the number of hours between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> SecondsBetween(const Datum& left, const Datum& right,\n+                                          ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Milliseconds Between finds the number of milliseconds between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> MillisecondsBetween(const Datum& left, const Datum& right,\n+                                               ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Microseconds Between finds the number of microseconds between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> MicrosecondsBetween(const Datum& left, const Datum& right,\n+                                               ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Nanoseconds Between finds the number of nanoseconds between two values\n+///\n+/// \\param[in] left input treated as the start time\n+/// \\param[in] right input treated as the end time\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 8.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT Result<Datum> NanoesecondsBetween(const Datum& left, const Datum& right,\n+                                               ExecContext* ctx = NULLPTR);\n\nReview Comment:\n   I don't think there was any reason, I just neglected to add those.\n\n\n\n",
                    "created": "2022-06-02T18:46:10.538+0000",
                    "updated": "2022-06-02T18:46:10.538+0000",
                    "started": "2022-06-02T18:46:10.538+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "777784",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/777829",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iChauster commented on code in PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#discussion_r888402428\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_benchmark.cc:\n##########\n@@ -214,5 +240,19 @@ BENCHMARK_TEMPLATE(BenchmarkStrptime, non_zoned)->Apply(SetArgs);\n BENCHMARK_TEMPLATE(BenchmarkStrptime, zoned)->Apply(SetArgs);\n BENCHMARK(BenchmarkAssumeTimezone)->Apply(SetArgs);\n \n+// binary temporal benchmarks\n\nReview Comment:\n   They are binary, but I believe these kernels are already benchmarked in `scalar_arithmetic_benchmark.cc`. Does this mean adding support for adding, subtracting, (multiplying and dividing!) timestamps, and then benchmarking those implementations?\n\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_benchmark.cc:\n##########\n@@ -172,6 +194,10 @@ auto non_zoned = timestamp(TimeUnit::NANO);\n #define DECLARE_TEMPORAL_BENCHMARKS_ZONED(OP) \\\n   BENCHMARK_TEMPLATE(BenchmarkTemporal, OP, zoned)->Apply(SetArgs);\n \n+#define DECLARE_TEMPORAL_BINARY_BENCHMARKS(OP)                                \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, non_zoned)->Apply(SetArgs); \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, zoned)->Apply(SetArgs);\n\nReview Comment:\n   Hi @rok, thanks for the timely review! \r\n   \r\n   I was a bit curious about this, since it seems for `BenchmarkTemporalBinary` and `BenchmarkTemporal` (the original unary version), we are picking random `int64_t` ",
                    "created": "2022-06-02T20:50:44.306+0000",
                    "updated": "2022-06-02T20:50:44.306+0000",
                    "started": "2022-06-02T20:50:44.306+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "777829",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/778672",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iChauster commented on PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#issuecomment-1147592977\n\n   Hi @rok, unfortunately I can't re-request review as a first-time contributor but I was wondering if you could answer some of my clarification questions from a few days ago when you get the chance! Excited to get this merged in.\n\n\n",
                    "created": "2022-06-06T15:40:30.866+0000",
                    "updated": "2022-06-06T15:40:30.866+0000",
                    "started": "2022-06-06T15:40:30.865+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "778672",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/779561",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#discussion_r892581372\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_benchmark.cc:\n##########\n@@ -214,5 +240,19 @@ BENCHMARK_TEMPLATE(BenchmarkStrptime, non_zoned)->Apply(SetArgs);\n BENCHMARK_TEMPLATE(BenchmarkStrptime, zoned)->Apply(SetArgs);\n BENCHMARK(BenchmarkAssumeTimezone)->Apply(SetArgs);\n \n+// binary temporal benchmarks\n\nReview Comment:\n   `scalar_arithmetic_benchmark.cc` benchmarks non-temporal arrays right now. It would be useful to also benchmark for temporal zoned/nonzoned temporal types as computation would follow a different codepath for those.\n\n\n\n",
                    "created": "2022-06-08T16:12:33.228+0000",
                    "updated": "2022-06-08T16:12:33.228+0000",
                    "started": "2022-06-08T16:12:33.227+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779561",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/779569",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#discussion_r892593123\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_benchmark.cc:\n##########\n@@ -214,5 +240,19 @@ BENCHMARK_TEMPLATE(BenchmarkStrptime, non_zoned)->Apply(SetArgs);\n BENCHMARK_TEMPLATE(BenchmarkStrptime, zoned)->Apply(SetArgs);\n BENCHMARK(BenchmarkAssumeTimezone)->Apply(SetArgs);\n \n+// binary temporal benchmarks\n\nReview Comment:\n   Actually, maybe the codepaths are not that different. Feel free to ignore this.\n\n\n\n",
                    "created": "2022-06-08T16:23:54.415+0000",
                    "updated": "2022-06-08T16:23:54.415+0000",
                    "started": "2022-06-08T16:23:54.415+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779569",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/779572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#discussion_r892603134\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_benchmark.cc:\n##########\n@@ -172,6 +194,10 @@ auto non_zoned = timestamp(TimeUnit::NANO);\n #define DECLARE_TEMPORAL_BENCHMARKS_ZONED(OP) \\\n   BENCHMARK_TEMPLATE(BenchmarkTemporal, OP, zoned)->Apply(SetArgs);\n \n+#define DECLARE_TEMPORAL_BINARY_BENCHMARKS(OP)                                \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, non_zoned)->Apply(SetArgs); \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, zoned)->Apply(SetArgs);\n\nReview Comment:\n   I assume you're referring to this part?\r\n   ```\r\n   auto array = rand.Numeric<Int64Type>(array_size, kInt64Min, kInt64Max, args.null_proportion);\r\n   std::shared_ptr<DataType> timestamp_type = timestamp(TimeUnit::NANO, \"Pacific/Marquesas\");\r\n   EXPECT_OK_AND_ASSIGN(auto timestamp_array, array->View(timestamp_type));\r\n   ```\r\n   So `int64_t` here represents an integer array. Before throwing it into the kernel we interpret it as a timestamp array which does not change the underlaying buffer. I believe 32 types use `Int32Type` and 64 use `Int64Type`. Perhaps you can just use [`RandomArrayGenerator`](https://github.com/apache/arrow/blob/master/cpp/src/arrow/testing/random.h) to generate needed arrays.\n\n\n\n",
                    "created": "2022-06-08T16:34:25.983+0000",
                    "updated": "2022-06-08T16:34:25.983+0000",
                    "started": "2022-06-08T16:34:25.983+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779572",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/779573",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#discussion_r892604335\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_benchmark.cc:\n##########\n@@ -172,6 +194,10 @@ auto non_zoned = timestamp(TimeUnit::NANO);\n #define DECLARE_TEMPORAL_BENCHMARKS_ZONED(OP) \\\n   BENCHMARK_TEMPLATE(BenchmarkTemporal, OP, zoned)->Apply(SetArgs);\n \n+#define DECLARE_TEMPORAL_BINARY_BENCHMARKS(OP)                                \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, non_zoned)->Apply(SetArgs); \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, zoned)->Apply(SetArgs);\n\nReview Comment:\n   [A more complete example.](https://github.com/apache/arrow/blob/master/cpp/src/arrow/testing/generator.cc#L101-L155)\n\n\n\n",
                    "created": "2022-06-08T16:35:41.325+0000",
                    "updated": "2022-06-08T16:35:41.325+0000",
                    "started": "2022-06-08T16:35:41.325+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779573",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/779574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#issuecomment-1150143539\n\n   Hey @iChauster sorry for the delay!\n\n\n",
                    "created": "2022-06-08T16:36:05.764+0000",
                    "updated": "2022-06-08T16:36:05.764+0000",
                    "started": "2022-06-08T16:36:05.764+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779574",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/779639",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iChauster commented on code in PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#discussion_r892773713\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_benchmark.cc:\n##########\n@@ -172,6 +194,10 @@ auto non_zoned = timestamp(TimeUnit::NANO);\n #define DECLARE_TEMPORAL_BENCHMARKS_ZONED(OP) \\\n   BENCHMARK_TEMPLATE(BenchmarkTemporal, OP, zoned)->Apply(SetArgs);\n \n+#define DECLARE_TEMPORAL_BINARY_BENCHMARKS(OP)                                \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, non_zoned)->Apply(SetArgs); \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, zoned)->Apply(SetArgs);\n\nReview Comment:\n   Hi @rok, thank you for the clarification!\r\n   \r\n   I refactored the code to work for the other data types, however it seems like these temporal binary functions [currently do not support any other datatype](https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/scalar_temporal_binary.cc#L461) than `Int64`.\r\n   \r\n   When running my code with something like `date32` or `time64` with `random.ArrayOf`, I get an `NotImplemented: Function years_between has no kernel matching input types (array[time64[ns]], array[time64[ns]])`\n\n\n\n",
                    "created": "2022-06-08T19:21:16.302+0000",
                    "updated": "2022-06-08T19:21:16.302+0000",
                    "started": "2022-06-08T19:21:16.301+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779639",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/779640",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iChauster commented on code in PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#discussion_r892773713\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_benchmark.cc:\n##########\n@@ -172,6 +194,10 @@ auto non_zoned = timestamp(TimeUnit::NANO);\n #define DECLARE_TEMPORAL_BENCHMARKS_ZONED(OP) \\\n   BENCHMARK_TEMPLATE(BenchmarkTemporal, OP, zoned)->Apply(SetArgs);\n \n+#define DECLARE_TEMPORAL_BINARY_BENCHMARKS(OP)                                \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, non_zoned)->Apply(SetArgs); \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, zoned)->Apply(SetArgs);\n\nReview Comment:\n   Hi @rok, thank you for the clarification!\r\n   \r\n   I refactored the code to work for the other data types, however it seems like (many of) these temporal binary functions [currently do not support any other datatype](https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/scalar_temporal_binary.cc#L461) than `Int64`.\r\n   \r\n   When running my code with something like `date32` or `time64` with `random.ArrayOf`, I get an `NotImplemented: Function years_between has no kernel matching input types (array[time64[ns]], array[time64[ns]])`\n\n\n\n",
                    "created": "2022-06-08T19:22:01.390+0000",
                    "updated": "2022-06-08T19:22:01.390+0000",
                    "started": "2022-06-08T19:22:01.390+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779640",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/779641",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iChauster commented on code in PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#discussion_r892773713\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_benchmark.cc:\n##########\n@@ -172,6 +194,10 @@ auto non_zoned = timestamp(TimeUnit::NANO);\n #define DECLARE_TEMPORAL_BENCHMARKS_ZONED(OP) \\\n   BENCHMARK_TEMPLATE(BenchmarkTemporal, OP, zoned)->Apply(SetArgs);\n \n+#define DECLARE_TEMPORAL_BINARY_BENCHMARKS(OP)                                \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, non_zoned)->Apply(SetArgs); \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, zoned)->Apply(SetArgs);\n\nReview Comment:\n   Hi @rok, thank you for the clarification!\r\n   \r\n   I refactored the code to work for the other data types, however it seems like (many of) these temporal binary functions [currently do not support any other datatype](https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/scalar_temporal_binary.cc#L461) than `Int64`.\r\n   \r\n   When running my code with something like `date32` or `time64` with `random.ArrayOf`, I get an `NotImplemented: Function years_between has no kernel matching input types (array[time64[ns]], array[time64[ns]])`,\r\n   \r\n   Let me know if I've missed a detail!\n\n\n\n",
                    "created": "2022-06-08T19:22:41.427+0000",
                    "updated": "2022-06-08T19:22:41.427+0000",
                    "started": "2022-06-08T19:22:41.427+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779641",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/779643",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iChauster commented on code in PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#discussion_r892779444\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_benchmark.cc:\n##########\n@@ -172,6 +194,10 @@ auto non_zoned = timestamp(TimeUnit::NANO);\n #define DECLARE_TEMPORAL_BENCHMARKS_ZONED(OP) \\\n   BENCHMARK_TEMPLATE(BenchmarkTemporal, OP, zoned)->Apply(SetArgs);\n \n+#define DECLARE_TEMPORAL_BINARY_BENCHMARKS(OP)                                \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, non_zoned)->Apply(SetArgs); \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, zoned)->Apply(SetArgs);\n\nReview Comment:\n   Not sure why, but it seems like `date64` is viable as an input type, but `time64` / `time32`, and `duration` are not.\n\n\n\n",
                    "created": "2022-06-08T19:28:16.872+0000",
                    "updated": "2022-06-08T19:28:16.872+0000",
                    "started": "2022-06-08T19:28:16.872+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779643",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/779652",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iChauster commented on code in PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#discussion_r892779444\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_benchmark.cc:\n##########\n@@ -172,6 +194,10 @@ auto non_zoned = timestamp(TimeUnit::NANO);\n #define DECLARE_TEMPORAL_BENCHMARKS_ZONED(OP) \\\n   BENCHMARK_TEMPLATE(BenchmarkTemporal, OP, zoned)->Apply(SetArgs);\n \n+#define DECLARE_TEMPORAL_BINARY_BENCHMARKS(OP)                                \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, non_zoned)->Apply(SetArgs); \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, zoned)->Apply(SetArgs);\n\nReview Comment:\n   Not sure why, but it seems like `date64` is viable as an input type, but `time64` / `time32`, and `duration` are not.\n\n\n\n",
                    "created": "2022-06-08T19:50:03.449+0000",
                    "updated": "2022-06-08T19:50:03.449+0000",
                    "started": "2022-06-08T19:50:03.449+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779652",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/779653",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iChauster commented on code in PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#discussion_r892773713\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_benchmark.cc:\n##########\n@@ -172,6 +194,10 @@ auto non_zoned = timestamp(TimeUnit::NANO);\n #define DECLARE_TEMPORAL_BENCHMARKS_ZONED(OP) \\\n   BENCHMARK_TEMPLATE(BenchmarkTemporal, OP, zoned)->Apply(SetArgs);\n \n+#define DECLARE_TEMPORAL_BINARY_BENCHMARKS(OP)                                \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, non_zoned)->Apply(SetArgs); \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, zoned)->Apply(SetArgs);\n\nReview Comment:\n   Hi @rok, thank you for the clarification!\r\n   \r\n   I refactored the code to work for the other data types, however it seems like (many of) these temporal binary functions [currently do not support any other datatype](https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/scalar_temporal_binary.cc#L461) than `Int64`.\r\n   \r\n   When running my code with something like `date32` or `time64` with `random.ArrayOf`, I get an `NotImplemented: Function years_between has no kernel matching input types (array[time64[ns]], array[time64[ns]])`,\r\n   \r\n   Let me know if I've missed a detail!\r\n   \r\n   **EDIT: Ah, I see my error now!**\n\n\n\n",
                    "created": "2022-06-08T19:50:18.474+0000",
                    "updated": "2022-06-08T19:50:18.474+0000",
                    "started": "2022-06-08T19:50:18.473+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779653",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/779659",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#discussion_r892805514\n\n\n##########\ncpp/src/arrow/compute/kernels/scalar_temporal_benchmark.cc:\n##########\n@@ -172,6 +194,10 @@ auto non_zoned = timestamp(TimeUnit::NANO);\n #define DECLARE_TEMPORAL_BENCHMARKS_ZONED(OP) \\\n   BENCHMARK_TEMPLATE(BenchmarkTemporal, OP, zoned)->Apply(SetArgs);\n \n+#define DECLARE_TEMPORAL_BINARY_BENCHMARKS(OP)                                \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, non_zoned)->Apply(SetArgs); \\\n+  BENCHMARK_TEMPLATE(BenchmarkTemporalBinary, OP, zoned)->Apply(SetArgs);\n\nReview Comment:\n   Yeah, not all kernels will support all types.\n\n\n\n",
                    "created": "2022-06-08T19:55:34.089+0000",
                    "updated": "2022-06-08T19:55:34.089+0000",
                    "started": "2022-06-08T19:55:34.089+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779659",
                    "issueId": "13448192"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/worklog/779668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iChauster commented on PR #13302:\nURL: https://github.com/apache/arrow/pull/13302#issuecomment-1150384413\n\n   @rok, excellent, I think the binary benchmarks now support different datatypes for their respective kernels. Is this ready to be merged now?\n\n\n",
                    "created": "2022-06-08T20:33:56.665+0000",
                    "updated": "2022-06-08T20:33:56.665+0000",
                    "started": "2022-06-08T20:33:56.665+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779668",
                    "issueId": "13448192"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 16200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6e41fcae[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@43f5203c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c92922c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@360cbd42[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25fce8c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2e5e96e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4aae08ec[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@199b5a56[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@654cdc47[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@484ff719[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@721c7f94[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3196c26b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 16200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jun 09 15:56:19 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-06-09T15:56:19.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16741/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-06-02T17:53:53.000+0000",
        "updated": "2022-06-09T16:32:43.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 16200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add Benchmarks for Binary Temporal Operations",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/comment/17551161",
                    "id": "17551161",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ichauster",
                        "name": "ichauster",
                        "key": "JIRAUSER290345",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Ivan Chau",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~westonpace], I also have an open PR here that needs to be reviewed; this one is more of an incremental change compared to the other benchmarks. [~rokm] left some comments, but I think I need some more clarification and was wondering if you had any thoughts. \r\n\r\nThank you all in advance!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ichauster",
                        "name": "ichauster",
                        "key": "JIRAUSER290345",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Ivan Chau",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-06-07T15:45:28.553+0000",
                    "updated": "2022-06-07T15:45:28.553+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13448192/comment/17552283",
                    "id": "17552283",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 13302\n[https://github.com/apache/arrow/pull/13302]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-06-09T15:56:19.015+0000",
                    "updated": "2022-06-09T15:56:19.015+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z12wyg:",
        "customfield_12314139": null
    }
}