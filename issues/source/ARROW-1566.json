{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13103423",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423",
    "key": "ARROW-1566",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "Analytics",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12554454",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12554454",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13216762",
                    "key": "ARROW-4631",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216762",
                    "fields": {
                        "summary": "[C++] Implement serial version of sort computational kernel",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fexolm",
            "name": "fexolm",
            "key": "fexolm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Artem Alekseev",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 22200,
            "total": 22200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 22200,
            "total": 22200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1566/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 42,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/275883",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fexolm commented on pull request #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861\n \n \n   Initial implementation of the requested kernel.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T12:48:27.499+0000",
                    "updated": "2019-07-12T12:48:27.499+0000",
                    "started": "2019-07-12T12:48:27.499+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275883",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/275897",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#issuecomment-510878421\n \n \n   This implementation does not take into account null values. Also `std::sort` is not a stable sort. So I don't think this is the right approach\r\n   \r\n   I think we should start by implementing null-aware mergesort (with an optimized version when neither array has nulls).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T13:03:41.074+0000",
                    "updated": "2019-07-12T13:03:41.074+0000",
                    "started": "2019-07-12T13:03:41.073+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275897",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/275898",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#issuecomment-510878421\n \n \n   This implementation does not take into account null values. Also `std::sort` is not a stable sort. So I don't think this is the right approach\r\n   \r\n   I think we should start by implementing null-aware mergesort (with an optimized version when the array does not have nulls).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T13:05:35.995+0000",
                    "updated": "2019-07-12T13:05:35.995+0000",
                    "started": "2019-07-12T13:05:35.994+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275898",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/275926",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fexolm commented on issue #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#issuecomment-510890802\n \n \n   Thanks for your comments, @wesm. I'll send fixes soon.  \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T13:41:38.882+0000",
                    "updated": "2019-07-12T13:41:38.882+0000",
                    "started": "2019-07-12T13:41:38.881+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275926",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/276047",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#issuecomment-510975152\n \n \n   I recommend also implementing \"Argsort\" (see `numpy.argsort`) in the process of doing this, which makes it easier to test the stability of the sort\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T17:50:36.115+0000",
                    "updated": "2019-07-12T17:50:36.115+0000",
                    "started": "2019-07-12T17:50:36.115+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276047",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/276061",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fexolm commented on issue #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#issuecomment-510986872\n \n \n   @wesm, I've implemented this by using std::stable_partision and std::stable_sort.\r\n   What do you think about this solution? \r\n   \r\n   BTW. I'm not sure what you mean by \"Argsort\", as far as I understand it is already \"argsort\". I've used `np.argsort` to write tests.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T18:27:51.346+0000",
                    "updated": "2019-07-12T18:27:51.346+0000",
                    "started": "2019-07-12T18:27:51.345+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276061",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/276075",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fexolm commented on issue #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#issuecomment-510986872\n \n \n   @wesm, I've implemented this by using std::stable_partition and std::stable_sort.\r\n   What do you think about this solution? \r\n   \r\n   BTW. I'm not sure what you mean by \"Argsort\", as far as I understand it is already \"argsort\". I've used `np.argsort` to write tests.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T18:51:58.815+0000",
                    "updated": "2019-07-12T18:51:58.815+0000",
                    "started": "2019-07-12T18:51:58.815+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276075",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/276076",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fexolm commented on issue #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#issuecomment-510986872\n \n \n   @wesm, I've implemented this by using `std::stable_partition` and `std::stable_sort`.\r\n   What do you think about this solution? \r\n   \r\n   BTW. I'm not sure what you mean by \"Argsort\", as far as I understand it is already \"argsort\". I've used `np.argsort` to write tests.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T18:52:25.238+0000",
                    "updated": "2019-07-12T18:52:25.238+0000",
                    "started": "2019-07-12T18:52:25.237+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276076",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/276079",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#issuecomment-510999685\n \n \n   Sorry, I missed that detail. argsort means \"return the indices that would sort an array\". Can you update the PR title, description, and name of the kernels to more clearly indicate what they do? \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T19:07:13.452+0000",
                    "updated": "2019-07-12T19:07:13.452+0000",
                    "started": "2019-07-12T19:07:13.451+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276079",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/276082",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#issuecomment-511001039\n \n \n   I'm not sure about a solution that requires multiple passes of the data. Personally if I were working on this I would write a hand-coded mergesort\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T19:11:51.666+0000",
                    "updated": "2019-07-12T19:11:51.666+0000",
                    "started": "2019-07-12T19:11:51.666+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276082",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/276088",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#discussion_r303115054\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/sort-test.cc\n ##########\n @@ -0,0 +1,71 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <memory>\n+#include <vector>\n+\n+#include \"arrow/compute/context.h\"\n+#include \"arrow/compute/kernels/sort.h\"\n+#include \"arrow/compute/test-util.h\"\n+#include \"arrow/testing/gtest_common.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/random.h\"\n+#include \"arrow/testing/util.h\"\n+#include \"arrow/type_traits.h\"\n+namespace arrow {\n+namespace compute {\n+\n+template <typename ArrowType>\n+class TestSortKernel : public ComputeFixture, public TestBase {\n+ protected:\n+  void AssertSortArrays(const std::shared_ptr<Array> values,\n+                        const std::shared_ptr<Array> expected) {\n+    std::shared_ptr<Array> actual;\n+    ASSERT_OK(arrow::compute::Sort(&this->ctx_, *values, &actual));\n+    ASSERT_OK(ValidateArray(*actual));\n+    AssertArraysEqual(*expected, *actual);\n+  }\n+\n+  virtual void AssertSort(const std::string& values, const std::string& expected) {\n+    auto type = TypeTraits<ArrowType>::type_singleton();\n+    AssertSortArrays(ArrayFromJSON(type, values), ArrayFromJSON(uint64(), expected));\n+  }\n+};\n+\n+class TestSortKernelInt32 : public TestSortKernel<Int32Type> {\n+ protected:\n+  void AssertSort(const std::string& values, const std::string& expected) override {\n+    TestSortKernel<Int32Type>::AssertSort(values, expected);\n+  }\n+};\n+\n+TEST_F(TestSortKernelInt32, SortInt32) {\n \n Review comment:\n   You could instantiate this test for several types with `TYPED_TEST`:\r\n   \r\n   ```suggestion\r\n   TYPED_TEST_CASE(TestSortKernel, NumericArrowTypes);\r\n   TYPED_TEST(TestSortKernel, SortNumeric) {\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T19:22:23.357+0000",
                    "updated": "2019-07-12T19:22:23.357+0000",
                    "started": "2019-07-12T19:22:23.356+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276088",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/276089",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#discussion_r303115390\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/sort.cc\n ##########\n @@ -0,0 +1,129 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/compute/kernels/sort.h\"\n+#include <algorithm>\n+#include <numeric>\n+#include <vector>\n+#include \"arrow/builder.h\"\n+#include \"arrow/compute/context.h\"\n+#include \"arrow/compute/expression.h\"\n+#include \"arrow/compute/logical_type.h\"\n+#include \"arrow/type_traits.h\"\n+namespace arrow {\n+\n+class Array;\n+\n+namespace compute {\n+\n+template <typename ArrowType>\n+class SortKernelImpl : public SortKernel {\n+  using ArrayType = typename TypeTraits<ArrowType>::ArrayType;\n+  using BuilderType = typename TypeTraits<ArrowType>::BuilderType;\n+  using CType = typename TypeTraits<ArrowType>::CType;\n+\n+ private:\n+  Status SortImpl(FunctionContext* ctx, const std::shared_ptr<ArrayType>& values,\n+                  std::shared_ptr<Array>* offsets) {\n+    std::vector<uint64_t> ind(values->length());\n+    std::iota(ind.begin(), ind.end(), 0);\n+    auto nulls_begin = ind.end();\n+\n+    if (values->null_count()) {\n+      nulls_begin = std::stable_partition(ind.begin(), ind.end(),\n+                                        [&values](uint64_t ind) { return !values->IsNull(ind); });\n+    }\n+    std::stable_sort(ind.begin(), nulls_begin, [&values](uint64_t left, uint64_t right) {\n+      return values->Value(left) < values->Value(right);\n+    });\n+    UInt64Builder builder(ctx->memory_pool());\n+    builder.AppendValues(ind.begin(), ind.end());\n+    return builder.Finish(offsets);\n+  }\n+\n+ public:\n+  explicit SortKernelImpl(const std::shared_ptr<DataType>& type) : SortKernel(type) {}\n+\n+  Status Sort(FunctionContext* ctx, const std::shared_ptr<Array>& values,\n+              std::shared_ptr<Array>* offsets) {\n+    return SortImpl(ctx, std::static_pointer_cast<ArrayType>(values), offsets);\n+  }\n+\n+  Status Call(FunctionContext* ctx, const Datum& values, Datum* offsets) {\n+    if (!values.is_array()) {\n+      return Status::Invalid(\"SortKernel expects array values\");\n+    }\n+    auto values_array = values.make_array();\n+    std::shared_ptr<Array> offsets_array;\n+    RETURN_NOT_OK(this->Sort(ctx, values_array, &offsets_array));\n+    *offsets = offsets_array;\n+    return Status::OK();\n+  }\n+\n+  std::shared_ptr<DataType> out_type() const { return type_; }\n+};\n+\n+Status SortKernel::Make(const std::shared_ptr<DataType>& value_type,\n+                        std::unique_ptr<SortKernel>* out) {\n+  SortKernel* kernel;\n+  switch (value_type->id()) {\n+    case Type::UINT8:\n+      kernel = new SortKernelImpl<UInt8Type>(value_type);\n+      break;\n+    case Type::INT8:\n+      kernel = new SortKernelImpl<Int8Type>(value_type);\n+      break;\n+    case Type::UINT16:\n+      kernel = new SortKernelImpl<UInt16Type>(value_type);\n+      break;\n+    case Type::INT16:\n+      kernel = new SortKernelImpl<Int16Type>(value_type);\n+      break;\n+    case Type::UINT32:\n+      kernel = new SortKernelImpl<UInt32Type>(value_type);\n+      break;\n+    case Type::INT32:\n+      kernel = new SortKernelImpl<Int32Type>(value_type);\n+      break;\n+    case Type::UINT64:\n+      kernel = new SortKernelImpl<UInt64Type>(value_type);\n+      break;\n+    case Type::INT64:\n+      kernel = new SortKernelImpl<Int64Type>(value_type);\n+      break;\n \n Review comment:\n   Why not floating point values? Temporal types?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T19:22:23.379+0000",
                    "updated": "2019-07-12T19:22:23.379+0000",
                    "started": "2019-07-12T19:22:23.378+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276089",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/276090",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#discussion_r303115868\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/sort.cc\n ##########\n @@ -0,0 +1,129 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/compute/kernels/sort.h\"\n+#include <algorithm>\n+#include <numeric>\n+#include <vector>\n+#include \"arrow/builder.h\"\n+#include \"arrow/compute/context.h\"\n+#include \"arrow/compute/expression.h\"\n+#include \"arrow/compute/logical_type.h\"\n+#include \"arrow/type_traits.h\"\n+namespace arrow {\n+\n+class Array;\n+\n+namespace compute {\n+\n+template <typename ArrowType>\n+class SortKernelImpl : public SortKernel {\n+  using ArrayType = typename TypeTraits<ArrowType>::ArrayType;\n+  using BuilderType = typename TypeTraits<ArrowType>::BuilderType;\n+  using CType = typename TypeTraits<ArrowType>::CType;\n+\n+ private:\n+  Status SortImpl(FunctionContext* ctx, const std::shared_ptr<ArrayType>& values,\n+                  std::shared_ptr<Array>* offsets) {\n+    std::vector<uint64_t> ind(values->length());\n+    std::iota(ind.begin(), ind.end(), 0);\n+    auto nulls_begin = ind.end();\n+\n+    if (values->null_count()) {\n+      nulls_begin = std::stable_partition(ind.begin(), ind.end(),\n+                                        [&values](uint64_t ind) { return !values->IsNull(ind); });\n+    }\n+    std::stable_sort(ind.begin(), nulls_begin, [&values](uint64_t left, uint64_t right) {\n+      return values->Value(left) < values->Value(right);\n \n Review comment:\n   If you use `GetView` instead of `Value` this class can sort BinaryArrays\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T19:22:23.385+0000",
                    "updated": "2019-07-12T19:22:23.385+0000",
                    "started": "2019-07-12T19:22:23.385+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276090",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/276091",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#discussion_r303114584\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/sort-test.cc\n ##########\n @@ -0,0 +1,71 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <memory>\n+#include <vector>\n+\n+#include \"arrow/compute/context.h\"\n+#include \"arrow/compute/kernels/sort.h\"\n+#include \"arrow/compute/test-util.h\"\n+#include \"arrow/testing/gtest_common.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/random.h\"\n+#include \"arrow/testing/util.h\"\n+#include \"arrow/type_traits.h\"\n+namespace arrow {\n+namespace compute {\n+\n+template <typename ArrowType>\n+class TestSortKernel : public ComputeFixture, public TestBase {\n+ protected:\n+  void AssertSortArrays(const std::shared_ptr<Array> values,\n+                        const std::shared_ptr<Array> expected) {\n+    std::shared_ptr<Array> actual;\n+    ASSERT_OK(arrow::compute::Sort(&this->ctx_, *values, &actual));\n+    ASSERT_OK(ValidateArray(*actual));\n+    AssertArraysEqual(*expected, *actual);\n+  }\n+\n+  virtual void AssertSort(const std::string& values, const std::string& expected) {\n+    auto type = TypeTraits<ArrowType>::type_singleton();\n+    AssertSortArrays(ArrayFromJSON(type, values), ArrayFromJSON(uint64(), expected));\n+  }\n+};\n+\n+class TestSortKernelInt32 : public TestSortKernel<Int32Type> {\n+ protected:\n+  void AssertSort(const std::string& values, const std::string& expected) override {\n+    TestSortKernel<Int32Type>::AssertSort(values, expected);\n+  }\n+};\n+\n+TEST_F(TestSortKernelInt32, SortInt32) {\n+  this->AssertSort(\"[]\", \"[]\");\n+\n+  this->AssertSort(\"[3,2,6]\", \"[1, 0, 2]\");\n \n Review comment:\n   these tests would be clearer if you used double digits for sorted values (so they won't be confused with the expected output indices) \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T19:22:23.467+0000",
                    "updated": "2019-07-12T19:22:23.467+0000",
                    "started": "2019-07-12T19:22:23.466+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276091",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/276092",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#discussion_r303117303\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/sort-test.cc\n ##########\n @@ -0,0 +1,71 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <memory>\n+#include <vector>\n+\n+#include \"arrow/compute/context.h\"\n+#include \"arrow/compute/kernels/sort.h\"\n+#include \"arrow/compute/test-util.h\"\n+#include \"arrow/testing/gtest_common.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/random.h\"\n+#include \"arrow/testing/util.h\"\n+#include \"arrow/type_traits.h\"\n+namespace arrow {\n+namespace compute {\n+\n+template <typename ArrowType>\n+class TestSortKernel : public ComputeFixture, public TestBase {\n+ protected:\n+  void AssertSortArrays(const std::shared_ptr<Array> values,\n+                        const std::shared_ptr<Array> expected) {\n+    std::shared_ptr<Array> actual;\n+    ASSERT_OK(arrow::compute::Sort(&this->ctx_, *values, &actual));\n+    ASSERT_OK(ValidateArray(*actual));\n+    AssertArraysEqual(*expected, *actual);\n+  }\n+\n+  virtual void AssertSort(const std::string& values, const std::string& expected) {\n+    auto type = TypeTraits<ArrowType>::type_singleton();\n+    AssertSortArrays(ArrayFromJSON(type, values), ArrayFromJSON(uint64(), expected));\n+  }\n+};\n+\n \n Review comment:\n   Please add more tests, including some with larger random data (see for example [the aggregate tests](https://github.com/apache/arrow/blob/da752fddab34d71e5c5f648b2cb20740c16ce11e/cpp/src/arrow/compute/kernels/aggregate-test.cc#L231-L243))\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T19:22:23.651+0000",
                    "updated": "2019-07-12T19:22:23.651+0000",
                    "started": "2019-07-12T19:22:23.650+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276092",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/276093",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#discussion_r303114243\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/sort.h\n ##########\n @@ -0,0 +1,59 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+\n+#include \"arrow/compute/kernel.h\"\n+#include \"arrow/status.h\"\n+#include \"arrow/util/visibility.h\"\n+\n+namespace arrow {\n+\n+class Array;\n+\n+namespace compute {\n+\n+class FunctionContext;\n+\n+ARROW_EXPORT\n+Status Sort(FunctionContext* ctx, const Array& values, std::shared_ptr<Array>* offsets);\n+\n+ARROW_EXPORT\n+Status Sort(FunctionContext* ctx, const Datum& values, Datum* offsets);\n+\n+class ARROW_EXPORT SortKernel : public UnaryKernel {\n \n Review comment:\n   Please add doc comments for each public class and function. In particular, give an example (see [Take](https://github.com/apache/arrow/blob/da752fd/cpp/src/arrow/compute/kernels/take.h#L38-L45)) and note that the indices of nulls will be stably partitioned to the end of the output. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T19:22:26.118+0000",
                    "updated": "2019-07-12T19:22:26.118+0000",
                    "started": "2019-07-12T19:22:26.117+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276093",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/276094",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#discussion_r303112254\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/sort.cc\n ##########\n @@ -0,0 +1,129 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/compute/kernels/sort.h\"\n+#include <algorithm>\n+#include <numeric>\n+#include <vector>\n+#include \"arrow/builder.h\"\n+#include \"arrow/compute/context.h\"\n+#include \"arrow/compute/expression.h\"\n+#include \"arrow/compute/logical_type.h\"\n+#include \"arrow/type_traits.h\"\n+namespace arrow {\n+\n+class Array;\n+\n+namespace compute {\n+\n+template <typename ArrowType>\n+class SortKernelImpl : public SortKernel {\n+  using ArrayType = typename TypeTraits<ArrowType>::ArrayType;\n+  using BuilderType = typename TypeTraits<ArrowType>::BuilderType;\n+  using CType = typename TypeTraits<ArrowType>::CType;\n+\n+ private:\n+  Status SortImpl(FunctionContext* ctx, const std::shared_ptr<ArrayType>& values,\n+                  std::shared_ptr<Array>* offsets) {\n+    std::vector<uint64_t> ind(values->length());\n+    std::iota(ind.begin(), ind.end(), 0);\n+    auto nulls_begin = ind.end();\n+\n+    if (values->null_count()) {\n+      nulls_begin = std::stable_partition(ind.begin(), ind.end(),\n+                                        [&values](uint64_t ind) { return !values->IsNull(ind); });\n+    }\n+    std::stable_sort(ind.begin(), nulls_begin, [&values](uint64_t left, uint64_t right) {\n+      return values->Value(left) < values->Value(right);\n+    });\n+    UInt64Builder builder(ctx->memory_pool());\n+    builder.AppendValues(ind.begin(), ind.end());\n+    return builder.Finish(offsets);\n+  }\n+\n+ public:\n+  explicit SortKernelImpl(const std::shared_ptr<DataType>& type) : SortKernel(type) {}\n+\n+  Status Sort(FunctionContext* ctx, const std::shared_ptr<Array>& values,\n+              std::shared_ptr<Array>* offsets) {\n+    return SortImpl(ctx, std::static_pointer_cast<ArrayType>(values), offsets);\n+  }\n+\n+  Status Call(FunctionContext* ctx, const Datum& values, Datum* offsets) {\n+    if (!values.is_array()) {\n+      return Status::Invalid(\"SortKernel expects array values\");\n+    }\n+    auto values_array = values.make_array();\n+    std::shared_ptr<Array> offsets_array;\n+    RETURN_NOT_OK(this->Sort(ctx, values_array, &offsets_array));\n+    *offsets = offsets_array;\n+    return Status::OK();\n+  }\n+\n+  std::shared_ptr<DataType> out_type() const { return type_; }\n+};\n+\n+Status SortKernel::Make(const std::shared_ptr<DataType>& value_type,\n+                        std::unique_ptr<SortKernel>* out) {\n+  SortKernel* kernel;\n+  switch (value_type->id()) {\n+    case Type::UINT8:\n+      kernel = new SortKernelImpl<UInt8Type>(value_type);\n+      break;\n+    case Type::INT8:\n+      kernel = new SortKernelImpl<Int8Type>(value_type);\n+      break;\n+    case Type::UINT16:\n+      kernel = new SortKernelImpl<UInt16Type>(value_type);\n+      break;\n+    case Type::INT16:\n+      kernel = new SortKernelImpl<Int16Type>(value_type);\n+      break;\n+    case Type::UINT32:\n+      kernel = new SortKernelImpl<UInt32Type>(value_type);\n+      break;\n+    case Type::INT32:\n+      kernel = new SortKernelImpl<Int32Type>(value_type);\n+      break;\n+    case Type::UINT64:\n+      kernel = new SortKernelImpl<UInt64Type>(value_type);\n+      break;\n+    case Type::INT64:\n+      kernel = new SortKernelImpl<Int64Type>(value_type);\n+      break;\n+    default:\n+      return Status::Invalid(\"Use of unsaported array type in SortKernel\");\n \n Review comment:\n   ```suggestion\r\n         return Status::NotImplemented(\"Sorting of \", *value_type, \" arrays\");\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T19:22:26.119+0000",
                    "updated": "2019-07-12T19:22:26.119+0000",
                    "started": "2019-07-12T19:22:26.118+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276094",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/276096",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#issuecomment-511004842\n \n \n   Having basic benchmarks with ~1 million values would be a good place to start to talk about performance. Then we can make technical decisions based on what performs well -- I think it's more important to have a correct solution with sufficient testing than to debate implementation approaches, so if you want to use the STL functions to focus on correctness first, that's fine with me\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T19:25:03.568+0000",
                    "updated": "2019-07-12T19:25:03.568+0000",
                    "started": "2019-07-12T19:25:03.568+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276096",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/276130",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on issue #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#issuecomment-511020065\n \n \n   I agree that as a first pass this PR doesn't need to go beyond the STL functions. However if we want to add an option for explicit algorithm selection (as provided by numpy.argsort) then a SortOptions struct should probably be added. @wesm is that a goal for this kernel? Alternatively, the algorithm could be selected based on value type under the hood. (for example the arithmetic types can be bucket sorted in linear time)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T20:18:11.497+0000",
                    "updated": "2019-07-12T20:18:11.497+0000",
                    "started": "2019-07-12T20:18:11.496+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276130",
                    "issueId": "13103423"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/worklog/276756",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fexolm commented on issue #4861: ARROW-1566: [C++] Implement non-materializing sort kernels\nURL: https://github.com/apache/arrow/pull/4861#issuecomment-511426205\n \n \n   @wesm, @bkietz I've added more tests and benchmark. Also refactor all, what @bkietz mentioned. \r\n   Yes, I think that as very first implementation STL algorithms are good enough. I could try to optimize it in the near future in separate PR. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-15T14:34:02.343+0000",
                    "updated": "2019-07-15T14:34:02.343+0000",
                    "started": "2019-07-15T14:34:02.340+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276756",
                    "issueId": "13103423"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 22200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1971a30a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2c098fd2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a49e84b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@a5e9dcf[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@49026f12[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1480640b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@312ecd60[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4fe09e6f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@15c0127e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2f78cf1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@45f51402[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@eadf935[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 22200,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Aug 02 18:50:56 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-02T18:50:56.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1566/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-09-19T22:30:56.000+0000",
        "updated": "2019-08-02T19:24:23.000+0000",
        "timeoriginalestimate": null,
        "description": "The output of such operator would be a permutation vector that if applied to a column, would result in the data being sorted like requested. This is similar to numpy's argsort functionality.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 22200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Implement non-materializing sort kernels",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103423/comment/16899140",
                    "id": "16899140",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 4861\n[https://github.com/apache/arrow/pull/4861]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-08-02T18:50:56.831+0000",
                    "updated": "2019-08-02T18:50:56.831+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3k9mf:",
        "customfield_12314139": null
    }
}