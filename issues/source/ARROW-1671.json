{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13109343",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13109343",
    "key": "ARROW-1671",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1671/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@673ec7e2[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25b7ad3d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6e594726[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@769fc195[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@8a4f637[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3b298787[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f6d97b3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@17f66ea2[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@384c3725[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4f2e8a14[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3c8d4c4d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@18aaa600[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Oct 23 01:41:53 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-10-23T01:41:50.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1671/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-10-13T19:22:26.000+0000",
        "updated": "2017-10-23T01:41:53.000+0000",
        "timeoriginalestimate": null,
        "description": "It should not be possible for this function to fail. We can do a DCHECK internally of any internal Status values for testing purposes",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Change arrow::MakeArray to not return Status",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13109343/comment/16213648",
                    "id": "16213648",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "GitHub user wesm opened a pull request:\n\n    https://github.com/apache/arrow/pull/1227\n\n    ARROW-1671: [C++] Deprecate arrow::MakeArray that returns Status, refactor existing code to new variant\n\n    We should be very strict to not return Status from functions that cannot fail\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/wesm/arrow ARROW-1671\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/arrow/pull/1227.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #1227\n    \n----\ncommit 8a15a068c05078ff41d8166b775a061e212766e6\nAuthor: Wes McKinney <wes.mckinney@twosigma.com>\nDate:   2017-10-21T01:39:52Z\n\n    Deprecate arrow::MakeArray that returns Status, refactor existing code to use new MakeArray returning std::shared_ptr<Array>\n    \n    Change-Id: I2d005e8b3a3836a58182a7b2167ab955ab723ac3\n\n----\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-21T01:41:09.054+0000",
                    "updated": "2017-10-21T01:41:09.054+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13109343/comment/16214513",
                    "id": "16214513",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1227: ARROW-1671: [C++] Deprecate arrow::MakeArray that returns Status, refactor existing code to new variant\nURL: https://github.com/apache/arrow/pull/1227#issuecomment-338526702\n \n \n   +1\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-23T01:41:40.504+0000",
                    "updated": "2017-10-23T01:41:40.504+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13109343/comment/16214514",
                    "id": "16214514",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1227\n[https://github.com/apache/arrow/pull/1227]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-10-23T01:41:50.257+0000",
                    "updated": "2017-10-23T01:41:50.257+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13109343/comment/16214515",
                    "id": "16214515",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1227: ARROW-1671: [C++] Deprecate arrow::MakeArray that returns Status, refactor existing code to new variant\nURL: https://github.com/apache/arrow/pull/1227\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/array.cc b/cpp/src/arrow/array.cc\nindex a7930a139..eaac187a3 100644\n--- a/cpp/src/arrow/array.cc\n+++ b/cpp/src/arrow/array.cc\n@@ -97,9 +97,7 @@ static inline std::shared_ptr<ArrayData> SliceData(const ArrayData& data, int64_\n }\n \n std::shared_ptr<Array> Array::Slice(int64_t offset, int64_t length) const {\n-  std::shared_ptr<Array> result;\n-  DCHECK(MakeArray(SliceData(*data_, offset, length), &result).ok());\n-  return result;\n+  return MakeArray(SliceData(*data_, offset, length));\n }\n \n std::shared_ptr<Array> Array::Slice(int64_t offset) const {\n@@ -210,7 +208,7 @@ void ListArray::SetData(const std::shared_ptr<ArrayData>& data) {\n   raw_value_offsets_ = value_offsets == nullptr\n                            ? nullptr\n                            : reinterpret_cast<const int32_t*>(value_offsets->data());\n-  DCHECK(MakeArray(data_->child_data[0], &values_).ok());\n+  values_ = MakeArray(data_->child_data[0]);\n }\n \n std::shared_ptr<DataType> ListArray::value_type() const {\n@@ -323,7 +321,7 @@ StructArray::StructArray(const std::shared_ptr<DataType>& type, int64_t length,\n \n std::shared_ptr<Array> StructArray::field(int i) const {\n   if (!boxed_fields_[i]) {\n-    DCHECK(MakeArray(data_->child_data[i], &boxed_fields_[i]).ok());\n+    boxed_fields_[i] = MakeArray(data_->child_data[i]);\n   }\n   DCHECK(boxed_fields_[i]);\n   return boxed_fields_[i];\n@@ -369,7 +367,7 @@ UnionArray::UnionArray(const std::shared_ptr<DataType>& type, int64_t length,\n \n std::shared_ptr<Array> UnionArray::child(int i) const {\n   if (!boxed_fields_[i]) {\n-    DCHECK(MakeArray(data_->child_data[i], &boxed_fields_[i]).ok());\n+    boxed_fields_[i] = MakeArray(data_->child_data[i]);\n   }\n   DCHECK(boxed_fields_[i]);\n   return boxed_fields_[i];\n@@ -377,7 +375,7 @@ std::shared_ptr<Array> UnionArray::child(int i) const {\n \n const Array* UnionArray::UnsafeChild(int i) const {\n   if (!boxed_fields_[i]) {\n-    DCHECK(MakeArray(data_->child_data[i], &boxed_fields_[i]).ok());\n+    boxed_fields_[i] = MakeArray(data_->child_data[i]);\n   }\n   DCHECK(boxed_fields_[i]);\n   return boxed_fields_[i].get();\n@@ -407,7 +405,7 @@ void DictionaryArray::SetData(const std::shared_ptr<ArrayData>& data) {\n   auto indices_data = data_->ShallowCopy();\n   indices_data->type = dict_type_->index_type();\n   std::shared_ptr<Array> result;\n-  DCHECK(MakeArray(indices_data, &indices_).ok());\n+  indices_ = MakeArray(indices_data);\n }\n \n std::shared_ptr<Array> DictionaryArray::indices() const { return indices_; }\n@@ -589,6 +587,8 @@ class ArrayDataWrapper {\n \n }  // namespace internal\n \n+#ifndef ARROW_NO_DEPRECATED_API\n+\n Status MakeArray(const std::shared_ptr<ArrayData>& data, std::shared_ptr<Array>* out) {\n   internal::ArrayDataWrapper wrapper_visitor(data, out);\n   RETURN_NOT_OK(VisitTypeInline(*data->type, &wrapper_visitor));\n@@ -596,6 +596,17 @@ Status MakeArray(const std::shared_ptr<ArrayData>& data, std::shared_ptr<Array>*\n   return Status::OK();\n }\n \n+#endif\n+\n+std::shared_ptr<Array> MakeArray(const std::shared_ptr<ArrayData>& data) {\n+  std::shared_ptr<Array> out;\n+  internal::ArrayDataWrapper wrapper_visitor(data, &out);\n+  Status s = VisitTypeInline(*data->type, &wrapper_visitor);\n+  DCHECK(s.ok());\n+  DCHECK(out);\n+  return out;\n+}\n+\n // ----------------------------------------------------------------------\n // Instantiate templates\n \ndiff --git a/cpp/src/arrow/array.h b/cpp/src/arrow/array.h\nindex 0805cad3d..75dda4a75 100644\n--- a/cpp/src/arrow/array.h\n+++ b/cpp/src/arrow/array.h\n@@ -144,13 +144,25 @@ struct ARROW_EXPORT ArrayData {\n   std::vector<std::shared_ptr<ArrayData>> child_data;\n };\n \n+#ifndef ARROW_NO_DEPRECATED_API\n+\n /// \\brief Create a strongly-typed Array instance from generic ArrayData\n /// \\param[in] data the array contents\n /// \\param[out] out the resulting Array instance\n /// \\return Status\n+///\n+/// \\note Deprecated since 0.8.0\n ARROW_EXPORT\n Status MakeArray(const std::shared_ptr<ArrayData>& data, std::shared_ptr<Array>* out);\n \n+#endif\n+\n+/// \\brief Create a strongly-typed Array instance from generic ArrayData\n+/// \\param[in] data the array contents\n+/// \\return the resulting Array instance\n+ARROW_EXPORT\n+std::shared_ptr<Array> MakeArray(const std::shared_ptr<ArrayData>& data);\n+\n // ----------------------------------------------------------------------\n // User array accessor types\n \ndiff --git a/cpp/src/arrow/builder.cc b/cpp/src/arrow/builder.cc\nindex 331de2d36..c910170dd 100644\n--- a/cpp/src/arrow/builder.cc\n+++ b/cpp/src/arrow/builder.cc\n@@ -102,7 +102,8 @@ Status ArrayBuilder::Advance(int64_t elements) {\n Status ArrayBuilder::Finish(std::shared_ptr<Array>* out) {\n   std::shared_ptr<ArrayData> internal_data;\n   RETURN_NOT_OK(FinishInternal(&internal_data));\n-  return MakeArray(internal_data, out);\n+  *out = MakeArray(internal_data);\n+  return Status::OK();\n }\n \n Status ArrayBuilder::Reserve(int64_t elements) {\ndiff --git a/cpp/src/arrow/compute/cast.cc b/cpp/src/arrow/compute/cast.cc\nindex 2381e1ea3..e8bbfd347 100644\n--- a/cpp/src/arrow/compute/cast.cc\n+++ b/cpp/src/arrow/compute/cast.cc\n@@ -717,7 +717,8 @@ Status Cast(FunctionContext* ctx, const Array& array,\n   auto out_data = std::make_shared<ArrayData>(out_type, array.length());\n \n   RETURN_NOT_OK(func->Call(ctx, array, out_data.get()));\n-  return MakeArray(out_data, out);\n+  *out = MakeArray(out_data);\n+  return Status::OK();\n }\n \n }  // namespace compute\ndiff --git a/cpp/src/arrow/compute/compute-test.cc b/cpp/src/arrow/compute/compute-test.cc\nindex 602acff20..8a595178d 100644\n--- a/cpp/src/arrow/compute/compute-test.cc\n+++ b/cpp/src/arrow/compute/compute-test.cc\n@@ -369,8 +369,8 @@ TEST_F(TestCast, PreallocatedMemory) {\n   // Buffer address unchanged\n   ASSERT_EQ(out_values.get(), out_data->buffers[1].get());\n \n-  std::shared_ptr<Array> result, expected;\n-  ASSERT_OK(MakeArray(out_data, &result));\n+  std::shared_ptr<Array> result = MakeArray(out_data);\n+  std::shared_ptr<Array> expected;\n   ArrayFromVector<Int64Type, int64_t>(int64(), is_valid, e1, &expected);\n \n   AssertArraysEqual(*expected, *result);\ndiff --git a/cpp/src/arrow/ipc/feather.cc b/cpp/src/arrow/ipc/feather.cc\nindex 97ed601ad..cea720bd0 100644\n--- a/cpp/src/arrow/ipc/feather.cc\n+++ b/cpp/src/arrow/ipc/feather.cc\n@@ -371,7 +371,8 @@ class TableReader::TableReaderImpl {\n \n     auto arr_data =\n         std::make_shared<ArrayData>(type, meta->length(), buffers, meta->null_count());\n-    return MakeArray(arr_data, out);\n+    *out = MakeArray(arr_data);\n+    return Status::OK();\n   }\n \n   bool HasDescription() const { return metadata_->HasDescription(); }\n@@ -490,7 +491,8 @@ static Status SanitizeUnsupportedTypes(const Array& values, std::shared_ptr<Arra\n                                          values.null_bitmap(), values.null_count());\n     return Status::OK();\n   } else {\n-    return MakeArray(values.data(), out);\n+    *out = MakeArray(values.data());\n+    return Status::OK();\n   }\n }\n \ndiff --git a/cpp/src/arrow/python/numpy_to_arrow.cc b/cpp/src/arrow/python/numpy_to_arrow.cc\nindex 27ee2302e..2c89a9f61 100644\n--- a/cpp/src/arrow/python/numpy_to_arrow.cc\n+++ b/cpp/src/arrow/python/numpy_to_arrow.cc\n@@ -364,9 +364,7 @@ class NumPyConverter {\n   }\n \n   Status PushArray(const std::shared_ptr<ArrayData>& data) {\n-    std::shared_ptr<Array> result;\n-    RETURN_NOT_OK(MakeArray(data, &result));\n-    out_arrays_.emplace_back(std::move(result));\n+    out_arrays_.emplace_back(MakeArray(data));\n     return Status::OK();\n   }\n \n@@ -495,8 +493,8 @@ static Status CastBuffer(const std::shared_ptr<Buffer>& input, const int64_t len\n   std::vector<std::shared_ptr<Buffer>> buffers = {nullptr, input};\n   auto tmp_data = std::make_shared<ArrayData>(in_type, length, buffers, 0);\n \n-  std::shared_ptr<Array> tmp_array, casted_array;\n-  RETURN_NOT_OK(MakeArray(tmp_data, &tmp_array));\n+  std::shared_ptr<Array> tmp_array = MakeArray(tmp_data);\n+  std::shared_ptr<Array> casted_array;\n \n   compute::FunctionContext context(pool);\n   compute::CastOptions cast_options;\ndiff --git a/cpp/src/arrow/table.cc b/cpp/src/arrow/table.cc\nindex aac5dad1f..fe19bf4ce 100644\n--- a/cpp/src/arrow/table.cc\n+++ b/cpp/src/arrow/table.cc\n@@ -192,7 +192,7 @@ RecordBatch::RecordBatch(const std::shared_ptr<Schema>& schema, int64_t num_rows\n \n std::shared_ptr<Array> RecordBatch::column(int i) const {\n   if (!boxed_columns_[i]) {\n-    DCHECK(MakeArray(columns_[i], &boxed_columns_[i]).ok());\n+    boxed_columns_[i] = MakeArray(columns_[i]);\n   }\n   DCHECK(boxed_columns_[i]);\n   return boxed_columns_[i];\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-23T01:41:53.357+0000",
                    "updated": "2017-10-23T01:41:53.357+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|i3l9an:",
        "customfield_12314139": null
    }
}