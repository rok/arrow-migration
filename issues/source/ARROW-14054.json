{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13402459",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459",
    "key": "ARROW-14054",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/5",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/trivial.svg",
            "name": "Trivial",
            "id": "5"
        },
        "labels": [
            "easyfix",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=baksmj",
            "name": "baksmj",
            "key": "baksmj",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=baksmj&avatarId=46648",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=baksmj&avatarId=46648",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=baksmj&avatarId=46648",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=baksmj&avatarId=46648"
            },
            "displayName": "Benson Muite",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332532",
                "id": "12332532",
                "name": "Documentation"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=baksmj",
            "name": "baksmj",
            "key": "baksmj",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=baksmj&avatarId=46648",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=baksmj&avatarId=46648",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=baksmj&avatarId=46648",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=baksmj&avatarId=46648"
            },
            "displayName": "Benson Muite",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=baksmj",
            "name": "baksmj",
            "key": "baksmj",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=baksmj&avatarId=46648",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=baksmj&avatarId=46648",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=baksmj&avatarId=46648",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=baksmj&avatarId=46648"
            },
            "displayName": "Benson Muite",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14054/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 22,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/653516",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit opened a new pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197\n\n\n   - Add explanations for code example\r\n   - Print out entries\r\n   - make variable names clearer\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T12:29:07.950+0000",
                    "updated": "2021-09-21T12:29:07.950+0000",
                    "started": "2021-09-21T12:29:07.950+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653516",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/653517",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#issuecomment-923938167\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T12:29:31.946+0000",
                    "updated": "2021-09-21T12:29:31.946+0000",
                    "started": "2021-09-21T12:29:31.946+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653517",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/653546",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#discussion_r713021577\n\n\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -129,37 +135,37 @@ arrow::Status ColumnarTableToVector(const std::shared_ptr<arrow::Table>& table,\n   }\n \n   // As we have ensured that the table has the expected structure, we can unpack the\n-  // underlying arrays. For the primitive columns `id` and `cost` we can use the high\n-  // level functions to get the values whereas for the nested column\n-  // `cost_components` we need to access the C-pointer to the data to copy its\n-  // contents into the resulting `std::vector<double>`. Here we need to be care to\n+  // underlying arrays. For the primitive columns `id` and `components` we can use the \n+  // high level functions to get the values whereas for the nested column\n+  // `component_costs` we need to access the C-pointer to the data to copy its\n+  // contents into the resulting `std::vector<double>`. Here we need to be careful to\n   // also add the offset to the pointer. This offset is needed to enable zero-copy\n   // slicing operations. While this could be adjusted automatically for double\n   // arrays, this cannot be done for the accompanying bitmap as often the slicing\n   // border would be inside a byte.\n \n   auto ids =\n       std::static_pointer_cast<arrow::Int64Array>(table->column(0)->chunk(0));\n-  auto costs =\n-      std::static_pointer_cast<arrow::DoubleArray>(table->column(1)->chunk(0));\n-  auto cost_components =\n+  auto components =\n+      std::static_pointer_cast<arrow::Int64Array>(table->column(1)->chunk(0));\n+  auto component_cost =\n       std::static_pointer_cast<arrow::ListArray>(table->column(2)->chunk(0));\n-  auto cost_components_values =\n-      std::static_pointer_cast<arrow::DoubleArray>(cost_components->values());\n+  auto component_cost_values =\n+      std::static_pointer_cast<arrow::DoubleArray>(component_cost->values());\n   // To enable zero-copy slices, the native values pointer might need to account\n   // for this slicing offset. This is not needed for the higher level functions\n   // like Value(\u2026) that already account for this offset internally.\n-  const double* ccv_ptr = cost_components_values->data()->GetValues<double>(1);\n+  const double* ccv_ptr = component_cost_values->data()->GetValues<double>(1);\n\nReview comment:\n       Note this can simply be:\r\n   ```c++\r\n   const double* ccv_ptr = component_cost_values->raw_values();\r\n   ```\r\n   \r\n   I'm not sure showcasing the buffer lookup inside ArrayData is useful here or merely confusing?\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -47,10 +51,10 @@ struct data_row {\n // construction of the final `arrow::Array` instances.\n //\n // For each type, Arrow has a specially typed builder class. For the primitive\n-// values `id` and `cost` we can use the respective `arrow::Int64Builder` and\n-// `arrow::DoubleBuilder`. For the `cost_components` vector, we need to have two\n-// builders, a top-level `arrow::ListBuilder` that builds the array of offsets and\n-// a nested `arrow::DoubleBuilder` that constructs the underlying values array that\n+// values `id` and `components` we can use the `arrow::Int64Builder`. For the \n+// `component_cost` vector, we need to have two builders, a top-level \n+// `arrow::ListBuilder` that builds the array of offsets and a nested \n+// `arrow::DoubleBuilder` that constructs the underlying values array that\n // is referenced by the offsets in the former array.\n arrow::Status VectorToColumnarTable(const std::vector<struct data_row>& rows,\n                                     std::shared_ptr<arrow::Table>* table) {\n\nReview comment:\n       Since we are updating this function, can it perhaps return `Result<std::shared_ptr<Table>>` instead of `Status`?\r\n   \r\n   See https://arrow.apache.org/docs/cpp/conventions.html#error-reporting\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T13:08:53.478+0000",
                    "updated": "2021-09-21T13:08:53.478+0000",
                    "started": "2021-09-21T13:08:53.477+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653546",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/653547",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#issuecomment-923971561\n\n\n   @amol- Since you're getting acquainted with Arrow C++, what do you think about this?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T13:09:06.717+0000",
                    "updated": "2021-09-21T13:09:06.717+0000",
                    "started": "2021-09-21T13:09:06.716+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653547",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/653549",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#discussion_r713034657\n\n\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -61,51 +65,52 @@ arrow::Status VectorToColumnarTable(const std::vector<struct data_row>& rows,\n   arrow::MemoryPool* pool = arrow::default_memory_pool();\n \n   Int64Builder id_builder(pool);\n-  DoubleBuilder cost_builder(pool);\n-  ListBuilder components_builder(pool, std::make_shared<DoubleBuilder>(pool));\n-  // The following builder is owned by components_builder.\n-  DoubleBuilder& cost_components_builder =\n-      *(static_cast<DoubleBuilder*>(components_builder.value_builder()));\n+  Int64Builder components_builder(pool);\n+  ListBuilder component_cost_builder(pool, std::make_shared<DoubleBuilder>(pool));\n+  // The following builder is owned by component_cost_builder.\n+  DoubleBuilder& component_item_cost_builder =\n+      *(static_cast<DoubleBuilder*>(component_cost_builder.value_builder()));\n\nReview comment:\n       I think it would be easier to follow if we made `component_item_cost_builder` a pointer instead of a reference.\r\n   That would make much more obvious that `component_item_cost_builder` is the `value_builder` of `component_cost_builder` and we are not creating anything new.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T13:22:28.877+0000",
                    "updated": "2021-09-21T13:22:28.877+0000",
                    "started": "2021-09-21T13:22:28.877+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653549",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/653551",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#discussion_r713041858\n\n\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -61,51 +65,52 @@ arrow::Status VectorToColumnarTable(const std::vector<struct data_row>& rows,\n   arrow::MemoryPool* pool = arrow::default_memory_pool();\n \n   Int64Builder id_builder(pool);\n-  DoubleBuilder cost_builder(pool);\n-  ListBuilder components_builder(pool, std::make_shared<DoubleBuilder>(pool));\n-  // The following builder is owned by components_builder.\n-  DoubleBuilder& cost_components_builder =\n-      *(static_cast<DoubleBuilder*>(components_builder.value_builder()));\n+  Int64Builder components_builder(pool);\n+  ListBuilder component_cost_builder(pool, std::make_shared<DoubleBuilder>(pool));\n+  // The following builder is owned by component_cost_builder.\n+  DoubleBuilder& component_item_cost_builder =\n+      *(static_cast<DoubleBuilder*>(component_cost_builder.value_builder()));\n \n   // Now we can loop over our existing data and insert it into the builders. The\n   // `Append` calls here may fail (e.g. we cannot allocate enough additional memory).\n   // Thus we need to check their return values. For more information on these values,\n   // check the documentation about `arrow::Status`.\n   for (const data_row& row : rows) {\n     ARROW_RETURN_NOT_OK(id_builder.Append(row.id));\n-    ARROW_RETURN_NOT_OK(cost_builder.Append(row.cost));\n+    ARROW_RETURN_NOT_OK(components_builder.Append(row.components));\n \n     // Indicate the start of a new list row. This will memorise the current\n     // offset in the values builder.\n-    ARROW_RETURN_NOT_OK(components_builder.Append());\n+    ARROW_RETURN_NOT_OK(component_cost_builder.Append());\n     // Store the actual values. The final nullptr argument tells the underlying\n     // builder that all added values are valid, i.e. non-null.\n-    ARROW_RETURN_NOT_OK(cost_components_builder.AppendValues(row.cost_components.data(),\n-                                                             row.cost_components.size()));\n+    ARROW_RETURN_NOT_OK(component_item_cost_builder.AppendValues(row.component_cost.data(),\n+                                                                 row.component_cost.size()));\n\nReview comment:\n       Maybe add a comment about the fact that we expect the same memory layout for `std::vector<double>::data` and what `component_item_cost_builder.AppendValues` expects.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T13:30:06.532+0000",
                    "updated": "2021-09-21T13:30:06.532+0000",
                    "started": "2021-09-21T13:30:06.531+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653551",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/653553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit commented on pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#issuecomment-923996365\n\n\n   Thanks for the feedback. Will incorporate this.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T13:35:51.139+0000",
                    "updated": "2021-09-21T13:35:51.139+0000",
                    "started": "2021-09-21T13:35:51.138+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653553",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/653955",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit commented on a change in pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#discussion_r713705480\n\n\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -47,10 +51,10 @@ struct data_row {\n // construction of the final `arrow::Array` instances.\n //\n // For each type, Arrow has a specially typed builder class. For the primitive\n-// values `id` and `cost` we can use the respective `arrow::Int64Builder` and\n-// `arrow::DoubleBuilder`. For the `cost_components` vector, we need to have two\n-// builders, a top-level `arrow::ListBuilder` that builds the array of offsets and\n-// a nested `arrow::DoubleBuilder` that constructs the underlying values array that\n+// values `id` and `components` we can use the `arrow::Int64Builder`. For the \n+// `component_cost` vector, we need to have two builders, a top-level \n+// `arrow::ListBuilder` that builds the array of offsets and a nested \n+// `arrow::DoubleBuilder` that constructs the underlying values array that\n // is referenced by the offsets in the former array.\n arrow::Status VectorToColumnarTable(const std::vector<struct data_row>& rows,\n                                     std::shared_ptr<arrow::Table>* table) {\n\nReview comment:\n       A good update thanks.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T08:21:16.800+0000",
                    "updated": "2021-09-22T08:21:16.800+0000",
                    "started": "2021-09-22T08:21:16.799+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653955",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/653956",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit commented on a change in pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#discussion_r713706157\n\n\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -129,37 +135,37 @@ arrow::Status ColumnarTableToVector(const std::shared_ptr<arrow::Table>& table,\n   }\n \n   // As we have ensured that the table has the expected structure, we can unpack the\n-  // underlying arrays. For the primitive columns `id` and `cost` we can use the high\n-  // level functions to get the values whereas for the nested column\n-  // `cost_components` we need to access the C-pointer to the data to copy its\n-  // contents into the resulting `std::vector<double>`. Here we need to be care to\n+  // underlying arrays. For the primitive columns `id` and `components` we can use the \n+  // high level functions to get the values whereas for the nested column\n+  // `component_costs` we need to access the C-pointer to the data to copy its\n+  // contents into the resulting `std::vector<double>`. Here we need to be careful to\n   // also add the offset to the pointer. This offset is needed to enable zero-copy\n   // slicing operations. While this could be adjusted automatically for double\n   // arrays, this cannot be done for the accompanying bitmap as often the slicing\n   // border would be inside a byte.\n \n   auto ids =\n       std::static_pointer_cast<arrow::Int64Array>(table->column(0)->chunk(0));\n-  auto costs =\n-      std::static_pointer_cast<arrow::DoubleArray>(table->column(1)->chunk(0));\n-  auto cost_components =\n+  auto components =\n+      std::static_pointer_cast<arrow::Int64Array>(table->column(1)->chunk(0));\n+  auto component_cost =\n       std::static_pointer_cast<arrow::ListArray>(table->column(2)->chunk(0));\n-  auto cost_components_values =\n-      std::static_pointer_cast<arrow::DoubleArray>(cost_components->values());\n+  auto component_cost_values =\n+      std::static_pointer_cast<arrow::DoubleArray>(component_cost->values());\n   // To enable zero-copy slices, the native values pointer might need to account\n   // for this slicing offset. This is not needed for the higher level functions\n   // like Value(\u2026) that already account for this offset internally.\n-  const double* ccv_ptr = cost_components_values->data()->GetValues<double>(1);\n+  const double* ccv_ptr = component_cost_values->data()->GetValues<double>(1);\n\nReview comment:\n       Thanks for spotting this.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T08:22:00.147+0000",
                    "updated": "2021-09-22T08:22:00.147+0000",
                    "started": "2021-09-22T08:22:00.146+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653956",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/654105",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit commented on a change in pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#discussion_r714047656\n\n\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -47,10 +51,10 @@ struct data_row {\n // construction of the final `arrow::Array` instances.\n //\n // For each type, Arrow has a specially typed builder class. For the primitive\n-// values `id` and `cost` we can use the respective `arrow::Int64Builder` and\n-// `arrow::DoubleBuilder`. For the `cost_components` vector, we need to have two\n-// builders, a top-level `arrow::ListBuilder` that builds the array of offsets and\n-// a nested `arrow::DoubleBuilder` that constructs the underlying values array that\n+// values `id` and `components` we can use the `arrow::Int64Builder`. For the \n+// `component_cost` vector, we need to have two builders, a top-level \n+// `arrow::ListBuilder` that builds the array of offsets and a nested \n+// `arrow::DoubleBuilder` that constructs the underlying values array that\n // is referenced by the offsets in the former array.\n arrow::Status VectorToColumnarTable(const std::vector<struct data_row>& rows,\n                                     std::shared_ptr<arrow::Table>* table) {\n\nReview comment:\n       A minimal example of the required conversion is at https://github.com/bkmgit/arrow/blob/bkmgit-error-reporting-example/cpp/examples/arrow/error_report_result.cc  \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T15:13:21.302+0000",
                    "updated": "2021-09-22T15:13:21.302+0000",
                    "started": "2021-09-22T15:13:21.302+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654105",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/654119",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit commented on a change in pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#discussion_r714072130\n\n\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -129,37 +135,37 @@ arrow::Status ColumnarTableToVector(const std::shared_ptr<arrow::Table>& table,\n   }\n \n   // As we have ensured that the table has the expected structure, we can unpack the\n-  // underlying arrays. For the primitive columns `id` and `cost` we can use the high\n-  // level functions to get the values whereas for the nested column\n-  // `cost_components` we need to access the C-pointer to the data to copy its\n-  // contents into the resulting `std::vector<double>`. Here we need to be care to\n+  // underlying arrays. For the primitive columns `id` and `components` we can use the \n+  // high level functions to get the values whereas for the nested column\n+  // `component_costs` we need to access the C-pointer to the data to copy its\n+  // contents into the resulting `std::vector<double>`. Here we need to be careful to\n   // also add the offset to the pointer. This offset is needed to enable zero-copy\n   // slicing operations. While this could be adjusted automatically for double\n   // arrays, this cannot be done for the accompanying bitmap as often the slicing\n   // border would be inside a byte.\n \n   auto ids =\n       std::static_pointer_cast<arrow::Int64Array>(table->column(0)->chunk(0));\n-  auto costs =\n-      std::static_pointer_cast<arrow::DoubleArray>(table->column(1)->chunk(0));\n-  auto cost_components =\n+  auto components =\n+      std::static_pointer_cast<arrow::Int64Array>(table->column(1)->chunk(0));\n+  auto component_cost =\n       std::static_pointer_cast<arrow::ListArray>(table->column(2)->chunk(0));\n-  auto cost_components_values =\n-      std::static_pointer_cast<arrow::DoubleArray>(cost_components->values());\n+  auto component_cost_values =\n+      std::static_pointer_cast<arrow::DoubleArray>(component_cost->values());\n   // To enable zero-copy slices, the native values pointer might need to account\n   // for this slicing offset. This is not needed for the higher level functions\n   // like Value(\u2026) that already account for this offset internally.\n-  const double* ccv_ptr = cost_components_values->data()->GetValues<double>(1);\n+  const double* ccv_ptr = component_cost_values->data()->GetValues<double>(1);\n\nReview comment:\n       Shorter version seems clearer.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T15:39:34.617+0000",
                    "updated": "2021-09-22T15:39:34.617+0000",
                    "started": "2021-09-22T15:39:34.617+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654119",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/654126",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit commented on a change in pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#discussion_r714077599\n\n\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -61,51 +65,52 @@ arrow::Status VectorToColumnarTable(const std::vector<struct data_row>& rows,\n   arrow::MemoryPool* pool = arrow::default_memory_pool();\n \n   Int64Builder id_builder(pool);\n-  DoubleBuilder cost_builder(pool);\n-  ListBuilder components_builder(pool, std::make_shared<DoubleBuilder>(pool));\n-  // The following builder is owned by components_builder.\n-  DoubleBuilder& cost_components_builder =\n-      *(static_cast<DoubleBuilder*>(components_builder.value_builder()));\n+  Int64Builder components_builder(pool);\n+  ListBuilder component_cost_builder(pool, std::make_shared<DoubleBuilder>(pool));\n+  // The following builder is owned by component_cost_builder.\n+  DoubleBuilder& component_item_cost_builder =\n+      *(static_cast<DoubleBuilder*>(component_cost_builder.value_builder()));\n \n   // Now we can loop over our existing data and insert it into the builders. The\n   // `Append` calls here may fail (e.g. we cannot allocate enough additional memory).\n   // Thus we need to check their return values. For more information on these values,\n   // check the documentation about `arrow::Status`.\n   for (const data_row& row : rows) {\n     ARROW_RETURN_NOT_OK(id_builder.Append(row.id));\n-    ARROW_RETURN_NOT_OK(cost_builder.Append(row.cost));\n+    ARROW_RETURN_NOT_OK(components_builder.Append(row.components));\n \n     // Indicate the start of a new list row. This will memorise the current\n     // offset in the values builder.\n-    ARROW_RETURN_NOT_OK(components_builder.Append());\n+    ARROW_RETURN_NOT_OK(component_cost_builder.Append());\n     // Store the actual values. The final nullptr argument tells the underlying\n     // builder that all added values are valid, i.e. non-null.\n-    ARROW_RETURN_NOT_OK(cost_components_builder.AppendValues(row.cost_components.data(),\n-                                                             row.cost_components.size()));\n+    ARROW_RETURN_NOT_OK(component_item_cost_builder.AppendValues(row.component_cost.data(),\n+                                                                 row.component_cost.size()));\n\nReview comment:\n       Ok done.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T15:45:39.413+0000",
                    "updated": "2021-09-22T15:45:39.413+0000",
                    "started": "2021-09-22T15:45:39.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654126",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/655427",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit commented on a change in pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#discussion_r716572231\n\n\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -61,51 +65,52 @@ arrow::Status VectorToColumnarTable(const std::vector<struct data_row>& rows,\n   arrow::MemoryPool* pool = arrow::default_memory_pool();\n \n   Int64Builder id_builder(pool);\n-  DoubleBuilder cost_builder(pool);\n-  ListBuilder components_builder(pool, std::make_shared<DoubleBuilder>(pool));\n-  // The following builder is owned by components_builder.\n-  DoubleBuilder& cost_components_builder =\n-      *(static_cast<DoubleBuilder*>(components_builder.value_builder()));\n+  Int64Builder components_builder(pool);\n+  ListBuilder component_cost_builder(pool, std::make_shared<DoubleBuilder>(pool));\n+  // The following builder is owned by component_cost_builder.\n+  DoubleBuilder& component_item_cost_builder =\n+      *(static_cast<DoubleBuilder*>(component_cost_builder.value_builder()));\n\nReview comment:\n       Done\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-27T10:43:44.456+0000",
                    "updated": "2021-09-27T10:43:44.456+0000",
                    "started": "2021-09-27T10:43:44.456+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655427",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/655428",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit commented on a change in pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#discussion_r716572482\n\n\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -47,10 +51,10 @@ struct data_row {\n // construction of the final `arrow::Array` instances.\n //\n // For each type, Arrow has a specially typed builder class. For the primitive\n-// values `id` and `cost` we can use the respective `arrow::Int64Builder` and\n-// `arrow::DoubleBuilder`. For the `cost_components` vector, we need to have two\n-// builders, a top-level `arrow::ListBuilder` that builds the array of offsets and\n-// a nested `arrow::DoubleBuilder` that constructs the underlying values array that\n+// values `id` and `components` we can use the `arrow::Int64Builder`. For the \n+// `component_cost` vector, we need to have two builders, a top-level \n+// `arrow::ListBuilder` that builds the array of offsets and a nested \n+// `arrow::DoubleBuilder` that constructs the underlying values array that\n // is referenced by the offsets in the former array.\n arrow::Status VectorToColumnarTable(const std::vector<struct data_row>& rows,\n                                     std::shared_ptr<arrow::Table>* table) {\n\nReview comment:\n       @pitrou Done\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-27T10:44:07.652+0000",
                    "updated": "2021-09-27T10:44:07.652+0000",
                    "started": "2021-09-27T10:44:07.652+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655428",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/655429",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit commented on a change in pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#discussion_r716572834\n\n\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -61,51 +65,52 @@ arrow::Status VectorToColumnarTable(const std::vector<struct data_row>& rows,\n   arrow::MemoryPool* pool = arrow::default_memory_pool();\n \n   Int64Builder id_builder(pool);\n-  DoubleBuilder cost_builder(pool);\n-  ListBuilder components_builder(pool, std::make_shared<DoubleBuilder>(pool));\n-  // The following builder is owned by components_builder.\n-  DoubleBuilder& cost_components_builder =\n-      *(static_cast<DoubleBuilder*>(components_builder.value_builder()));\n+  Int64Builder components_builder(pool);\n+  ListBuilder component_cost_builder(pool, std::make_shared<DoubleBuilder>(pool));\n+  // The following builder is owned by component_cost_builder.\n+  DoubleBuilder& component_item_cost_builder =\n+      *(static_cast<DoubleBuilder*>(component_cost_builder.value_builder()));\n\nReview comment:\n       @amol- Done\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-27T10:44:43.009+0000",
                    "updated": "2021-09-27T10:44:43.009+0000",
                    "started": "2021-09-27T10:44:43.009+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655429",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/655437",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#discussion_r716602151\n\n\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -47,79 +53,85 @@ struct data_row {\n // construction of the final `arrow::Array` instances.\n //\n // For each type, Arrow has a specially typed builder class. For the primitive\n-// values `id` and `cost` we can use the respective `arrow::Int64Builder` and\n-// `arrow::DoubleBuilder`. For the `cost_components` vector, we need to have two\n-// builders, a top-level `arrow::ListBuilder` that builds the array of offsets and\n-// a nested `arrow::DoubleBuilder` that constructs the underlying values array that\n+// values `id` and `components` we can use the `arrow::Int64Builder`. For the \n+// `component_cost` vector, we need to have two builders, a top-level \n+// `arrow::ListBuilder` that builds the array of offsets and a nested \n+// `arrow::DoubleBuilder` that constructs the underlying values array that\n // is referenced by the offsets in the former array.\n-arrow::Status VectorToColumnarTable(const std::vector<struct data_row>& rows,\n-                                    std::shared_ptr<arrow::Table>* table) {\n+arrow::Result<std::shared_ptr<arrow::Table>> VectorToColumnarTable(\n+                                    const std::vector<struct data_row>& rows) {\n   // The builders are more efficient using\n   // arrow::jemalloc::MemoryPool::default_pool() as this can increase the size of\n   // the underlying memory regions in-place. At the moment, arrow::jemalloc is only\n   // supported on Unix systems, not Windows.\n   arrow::MemoryPool* pool = arrow::default_memory_pool();\n \n   Int64Builder id_builder(pool);\n-  DoubleBuilder cost_builder(pool);\n-  ListBuilder components_builder(pool, std::make_shared<DoubleBuilder>(pool));\n-  // The following builder is owned by components_builder.\n-  DoubleBuilder& cost_components_builder =\n-      *(static_cast<DoubleBuilder*>(components_builder.value_builder()));\n+  Int64Builder components_builder(pool);\n+  ListBuilder component_cost_builder(pool, std::make_shared<DoubleBuilder>(pool));\n+  // The following builder is owned by component_cost_builder.\n+  DoubleBuilder* component_item_cost_builder =\n+      (static_cast<DoubleBuilder*>(component_cost_builder.value_builder()));\n \n   // Now we can loop over our existing data and insert it into the builders. The\n   // `Append` calls here may fail (e.g. we cannot allocate enough additional memory).\n   // Thus we need to check their return values. For more information on these values,\n   // check the documentation about `arrow::Status`.\n   for (const data_row& row : rows) {\n     ARROW_RETURN_NOT_OK(id_builder.Append(row.id));\n-    ARROW_RETURN_NOT_OK(cost_builder.Append(row.cost));\n+    ARROW_RETURN_NOT_OK(components_builder.Append(row.components));\n \n     // Indicate the start of a new list row. This will memorise the current\n     // offset in the values builder.\n-    ARROW_RETURN_NOT_OK(components_builder.Append());\n-    // Store the actual values. The final nullptr argument tells the underlying\n-    // builder that all added values are valid, i.e. non-null.\n-    ARROW_RETURN_NOT_OK(cost_components_builder.AppendValues(row.cost_components.data(),\n-                                                             row.cost_components.size()));\n+    ARROW_RETURN_NOT_OK(component_cost_builder.Append());\n+    // Store the actual values. The same memory layout is\n+    // used for the component cost data, in this case a vector of\n+    // type double, as for the memory that Arrow uses to hold this\n+    // data and will be created.  The final nullptr argument tells \n+    // the underlying builder that all added values are valid, i.e. non-null.\n\nReview comment:\n       I know this is kept from the original version, but \"the final nullptr argument\" doesn't seem to point to anything. Should we remove that mention?\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -176,15 +188,49 @@ arrow::Status ColumnarTableToVector(const std::shared_ptr<arrow::Table>& table,\n \n int main(int argc, char** argv) {\n   std::vector<data_row> rows = {\n-      {1, 1.0, {1.0}}, {2, 2.0, {1.0, 2.0}}, {3, 3.0, {1.0, 2.0, 3.0}}};\n-\n+      {1, 1, {10.0}}, {2, 3, {11.0, 12.0, 13.0}}, {3, 2, {15.0, 25.0}}};\n   std::shared_ptr<arrow::Table> table;\n-  EXIT_ON_FAILURE(VectorToColumnarTable(rows, &table));\n-\n   std::vector<data_row> expected_rows;\n-  EXIT_ON_FAILURE(ColumnarTableToVector(table, &expected_rows));\n \n-  assert(rows.size() == expected_rows.size());\n+  arrow::Result<std::shared_ptr<arrow::Table>> table_result = \n+          VectorToColumnarTable(rows);\n+  if(table_result.ok()){\n+          table = std::move(table_result).ValueOrDie();\n\nReview comment:\n       Can you try to follow the [coding conventions](https://arrow.apache.org/docs/developers/cpp/development.html#code-style-linting-and-ci)? Specifically:\r\n   * use 2-space indentation\r\n   * use whitespace adequately around keyword and operators, for example `if (table_result.ok()) {` and not `if(table_result.ok()){`\r\n   \n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -176,15 +188,49 @@ arrow::Status ColumnarTableToVector(const std::shared_ptr<arrow::Table>& table,\n \n int main(int argc, char** argv) {\n   std::vector<data_row> rows = {\n-      {1, 1.0, {1.0}}, {2, 2.0, {1.0, 2.0}}, {3, 3.0, {1.0, 2.0, 3.0}}};\n-\n+      {1, 1, {10.0}}, {2, 3, {11.0, 12.0, 13.0}}, {3, 2, {15.0, 25.0}}};\n   std::shared_ptr<arrow::Table> table;\n-  EXIT_ON_FAILURE(VectorToColumnarTable(rows, &table));\n-\n   std::vector<data_row> expected_rows;\n-  EXIT_ON_FAILURE(ColumnarTableToVector(table, &expected_rows));\n \n-  assert(rows.size() == expected_rows.size());\n+  arrow::Result<std::shared_ptr<arrow::Table>> table_result = \n+          VectorToColumnarTable(rows);\n+  if(table_result.ok()){\n+          table = std::move(table_result).ValueOrDie();\n+          arrow::Result<std::vector<data_row>> expected_rows_result =\n+                  ColumnarTableToVector(table);\n+          if(expected_rows_result.ok()) {\n+                  expected_rows = \n+                          std::move(expected_rows_result).ValueOrDie();\n\nReview comment:\n       Since we're using `ValueOrDie`, it's obvious that an error will simply abort the process with a message. Consequently, we don't need to test for the result being ok. This should simplify the example quite a bit, for example:\r\n   ```c++\r\n     arrow::Result<std::shared_ptr<arrow::Table>> table_result = \r\n             VectorToColumnarTable(rows);\r\n     table = std::move(table_result).ValueOrDie();\r\n     // etc.\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-27T11:32:50.002+0000",
                    "updated": "2021-09-27T11:32:50.002+0000",
                    "started": "2021-09-27T11:32:50.002+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655437",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/655439",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit commented on a change in pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#discussion_r716606925\n\n\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -176,15 +188,49 @@ arrow::Status ColumnarTableToVector(const std::shared_ptr<arrow::Table>& table,\n \n int main(int argc, char** argv) {\n   std::vector<data_row> rows = {\n-      {1, 1.0, {1.0}}, {2, 2.0, {1.0, 2.0}}, {3, 3.0, {1.0, 2.0, 3.0}}};\n-\n+      {1, 1, {10.0}}, {2, 3, {11.0, 12.0, 13.0}}, {3, 2, {15.0, 25.0}}};\n   std::shared_ptr<arrow::Table> table;\n-  EXIT_ON_FAILURE(VectorToColumnarTable(rows, &table));\n-\n   std::vector<data_row> expected_rows;\n-  EXIT_ON_FAILURE(ColumnarTableToVector(table, &expected_rows));\n \n-  assert(rows.size() == expected_rows.size());\n+  arrow::Result<std::shared_ptr<arrow::Table>> table_result = \n+          VectorToColumnarTable(rows);\n+  if(table_result.ok()){\n+          table = std::move(table_result).ValueOrDie();\n+          arrow::Result<std::vector<data_row>> expected_rows_result =\n+                  ColumnarTableToVector(table);\n+          if(expected_rows_result.ok()) {\n+                  expected_rows = \n+                          std::move(expected_rows_result).ValueOrDie();\n\nReview comment:\n       ok\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-27T11:37:01.015+0000",
                    "updated": "2021-09-27T11:37:01.015+0000",
                    "started": "2021-09-27T11:37:01.015+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655439",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/655440",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit commented on a change in pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#discussion_r716607078\n\n\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -47,79 +53,85 @@ struct data_row {\n // construction of the final `arrow::Array` instances.\n //\n // For each type, Arrow has a specially typed builder class. For the primitive\n-// values `id` and `cost` we can use the respective `arrow::Int64Builder` and\n-// `arrow::DoubleBuilder`. For the `cost_components` vector, we need to have two\n-// builders, a top-level `arrow::ListBuilder` that builds the array of offsets and\n-// a nested `arrow::DoubleBuilder` that constructs the underlying values array that\n+// values `id` and `components` we can use the `arrow::Int64Builder`. For the \n+// `component_cost` vector, we need to have two builders, a top-level \n+// `arrow::ListBuilder` that builds the array of offsets and a nested \n+// `arrow::DoubleBuilder` that constructs the underlying values array that\n // is referenced by the offsets in the former array.\n-arrow::Status VectorToColumnarTable(const std::vector<struct data_row>& rows,\n-                                    std::shared_ptr<arrow::Table>* table) {\n+arrow::Result<std::shared_ptr<arrow::Table>> VectorToColumnarTable(\n+                                    const std::vector<struct data_row>& rows) {\n   // The builders are more efficient using\n   // arrow::jemalloc::MemoryPool::default_pool() as this can increase the size of\n   // the underlying memory regions in-place. At the moment, arrow::jemalloc is only\n   // supported on Unix systems, not Windows.\n   arrow::MemoryPool* pool = arrow::default_memory_pool();\n \n   Int64Builder id_builder(pool);\n-  DoubleBuilder cost_builder(pool);\n-  ListBuilder components_builder(pool, std::make_shared<DoubleBuilder>(pool));\n-  // The following builder is owned by components_builder.\n-  DoubleBuilder& cost_components_builder =\n-      *(static_cast<DoubleBuilder*>(components_builder.value_builder()));\n+  Int64Builder components_builder(pool);\n+  ListBuilder component_cost_builder(pool, std::make_shared<DoubleBuilder>(pool));\n+  // The following builder is owned by component_cost_builder.\n+  DoubleBuilder* component_item_cost_builder =\n+      (static_cast<DoubleBuilder*>(component_cost_builder.value_builder()));\n \n   // Now we can loop over our existing data and insert it into the builders. The\n   // `Append` calls here may fail (e.g. we cannot allocate enough additional memory).\n   // Thus we need to check their return values. For more information on these values,\n   // check the documentation about `arrow::Status`.\n   for (const data_row& row : rows) {\n     ARROW_RETURN_NOT_OK(id_builder.Append(row.id));\n-    ARROW_RETURN_NOT_OK(cost_builder.Append(row.cost));\n+    ARROW_RETURN_NOT_OK(components_builder.Append(row.components));\n \n     // Indicate the start of a new list row. This will memorise the current\n     // offset in the values builder.\n-    ARROW_RETURN_NOT_OK(components_builder.Append());\n-    // Store the actual values. The final nullptr argument tells the underlying\n-    // builder that all added values are valid, i.e. non-null.\n-    ARROW_RETURN_NOT_OK(cost_components_builder.AppendValues(row.cost_components.data(),\n-                                                             row.cost_components.size()));\n+    ARROW_RETURN_NOT_OK(component_cost_builder.Append());\n+    // Store the actual values. The same memory layout is\n+    // used for the component cost data, in this case a vector of\n+    // type double, as for the memory that Arrow uses to hold this\n+    // data and will be created.  The final nullptr argument tells \n+    // the underlying builder that all added values are valid, i.e. non-null.\n\nReview comment:\n       ok\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-27T11:37:14.287+0000",
                    "updated": "2021-09-27T11:37:14.287+0000",
                    "started": "2021-09-27T11:37:14.287+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655440",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/655496",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit commented on a change in pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#discussion_r716690340\n\n\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -176,15 +188,49 @@ arrow::Status ColumnarTableToVector(const std::shared_ptr<arrow::Table>& table,\n \n int main(int argc, char** argv) {\n   std::vector<data_row> rows = {\n-      {1, 1.0, {1.0}}, {2, 2.0, {1.0, 2.0}}, {3, 3.0, {1.0, 2.0, 3.0}}};\n-\n+      {1, 1, {10.0}}, {2, 3, {11.0, 12.0, 13.0}}, {3, 2, {15.0, 25.0}}};\n   std::shared_ptr<arrow::Table> table;\n-  EXIT_ON_FAILURE(VectorToColumnarTable(rows, &table));\n-\n   std::vector<data_row> expected_rows;\n-  EXIT_ON_FAILURE(ColumnarTableToVector(table, &expected_rows));\n \n-  assert(rows.size() == expected_rows.size());\n+  arrow::Result<std::shared_ptr<arrow::Table>> table_result = \n+          VectorToColumnarTable(rows);\n+  if(table_result.ok()){\n+          table = std::move(table_result).ValueOrDie();\n\nReview comment:\n       ran linter on the code\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-27T13:27:24.975+0000",
                    "updated": "2021-09-27T13:27:24.975+0000",
                    "started": "2021-09-27T13:27:24.975+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655496",
                    "issueId": "13402459"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/worklog/655499",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit commented on a change in pull request #11197:\nURL: https://github.com/apache/arrow/pull/11197#discussion_r716694087\n\n\n\n##########\nFile path: cpp/examples/arrow/row_wise_conversion_example.cc\n##########\n@@ -176,15 +188,49 @@ arrow::Status ColumnarTableToVector(const std::shared_ptr<arrow::Table>& table,\n \n int main(int argc, char** argv) {\n   std::vector<data_row> rows = {\n-      {1, 1.0, {1.0}}, {2, 2.0, {1.0, 2.0}}, {3, 3.0, {1.0, 2.0, 3.0}}};\n-\n+      {1, 1, {10.0}}, {2, 3, {11.0, 12.0, 13.0}}, {3, 2, {15.0, 25.0}}};\n   std::shared_ptr<arrow::Table> table;\n-  EXIT_ON_FAILURE(VectorToColumnarTable(rows, &table));\n-\n   std::vector<data_row> expected_rows;\n-  EXIT_ON_FAILURE(ColumnarTableToVector(table, &expected_rows));\n \n-  assert(rows.size() == expected_rows.size());\n+  arrow::Result<std::shared_ptr<arrow::Table>> table_result = \n+          VectorToColumnarTable(rows);\n+  if(table_result.ok()){\n+          table = std::move(table_result).ValueOrDie();\n+          arrow::Result<std::vector<data_row>> expected_rows_result =\n+                  ColumnarTableToVector(table);\n+          if(expected_rows_result.ok()) {\n+                  expected_rows = \n+                          std::move(expected_rows_result).ValueOrDie();\n\nReview comment:\n       @pitrou done\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-27T13:31:30.579+0000",
                    "updated": "2021-09-27T13:31:30.579+0000",
                    "started": "2021-09-27T13:31:30.578+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655499",
                    "issueId": "13402459"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@637945c3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4364daef[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@70194243[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@15cf4d0d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@33ad5720[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5036e2ff[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a07b9e0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@54f3688[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c026556[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3bc44533[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6c5b3312[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@105cb367[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13200,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Sep 27 17:41:19 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": [
            "C++"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-09-27T17:41:18.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14054/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-09-21T12:25:12.000+0000",
        "updated": "2021-09-28T19:58:52.000+0000",
        "timeoriginalestimate": null,
        "description": "The C++ [row_wise_conversion_example|https://github.com/apache/arrow/blob/master/cpp/examples/arrow/row_wise_conversion_example.cc] is very helpful when starting to use Apache Arrow. It can be improved by:\r\n * Giving context to the data being converted\r\n * Naming the variables so that they have meaning for the example\r\n * Printing out the stored information to allow for a quick check",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Docs] Improve clarity of row_conversion_example.cpp",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402459/comment/17420932",
                    "id": "17420932",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 11197\n[https://github.com/apache/arrow/pull/11197]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-09-27T17:41:19.037+0000",
                    "updated": "2021-09-27T17:41:19.037+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0v560:",
        "customfield_12314139": null
    }
}