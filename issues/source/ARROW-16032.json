{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13435896",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896",
    "key": "ARROW-16032",
    "fields": {
        "parent": {
            "id": "13427191",
            "key": "ARROW-15612",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13427191",
            "fields": {
                "summary": "[C++] Migrate Flight APIs to Result<>",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                    "description": "The issue is open and ready for the assignee to start work on it.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                    "name": "Open",
                    "id": "1",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                        "id": 2,
                        "key": "new",
                        "colorName": "blue-gray",
                        "name": "To Do"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
                    "id": "3",
                    "description": "A task that needs to be done.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
                    "name": "Task",
                    "subtask": false,
                    "avatarId": 21148
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zagto",
            "name": "zagto",
            "key": "JIRAUSER286565",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Tobias Zagorni",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zagto",
            "name": "zagto",
            "key": "JIRAUSER286565",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Tobias Zagorni",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zagto",
            "name": "zagto",
            "key": "JIRAUSER286565",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Tobias Zagorni",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16032/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 16,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896/worklog/747997",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12719:\nURL: https://github.com/apache/arrow/pull/12719#issuecomment-1079428662\n\n\n   https://issues.apache.org/jira/browse/ARROW-16032\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-25T20:57:45.582+0000",
                    "updated": "2022-03-25T20:57:45.582+0000",
                    "started": "2022-03-25T20:57:45.582+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "747997",
                    "issueId": "13435896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896/worklog/750980",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12719:\nURL: https://github.com/apache/arrow/pull/12719#discussion_r839569118\n\n\n\n##########\nFile path: cpp/src/arrow/flight/flight_benchmark.cc\n##########\n@@ -124,7 +124,7 @@ Status WaitForReady(FlightClient* client, const FlightCallOptions& call_options)\n   Action action{\"ping\", nullptr};\n   for (int attempt = 0; attempt < 10; attempt++) {\n     std::unique_ptr<ResultStream> stream;\n-    if (client->DoAction(call_options, action, &stream).ok()) {\n+    if (client->DoAction(call_options, action).Value(&stream).ok()) {\n\nReview comment:\n       Just use `Result::ok`, you can remove `stream` and `Value()`\n\n##########\nFile path: cpp/src/arrow/flight/integration_tests/test_integration_client.cc\n##########\n@@ -94,7 +94,7 @@ Status ConsumeFlightLocation(\n     FlightClient* read_client, const Ticket& ticket,\n     const std::vector<std::shared_ptr<RecordBatch>>& retrieved_data) {\n   std::unique_ptr<FlightStreamReader> stream;\n-  RETURN_NOT_OK(read_client->DoGet(ticket, &stream));\n+  RETURN_NOT_OK(read_client->DoGet(ticket).Value(&stream));\n\nReview comment:\n       use ARROW_ASSIGN_OR_RAISE\n\n##########\nFile path: cpp/src/arrow/flight/test_definitions.cc\n##########\n@@ -156,10 +154,10 @@ void DataTest::CheckDoGet(const Ticket& ticket,\n   ASSERT_GE(num_batches, 2);\n \n   std::unique_ptr<FlightStreamReader> stream;\n-  ASSERT_OK(client_->DoGet(ticket, &stream));\n+  ASSERT_OK_AND_ASSIGN(stream, client_->DoGet(ticket));\n\nReview comment:\n       and ditto below\n\n##########\nFile path: cpp/src/arrow/flight/test_definitions.cc\n##########\n@@ -131,15 +130,14 @@ void DataTest::TearDown() {\n Status DataTest::ConnectClient() {\n   ARROW_ASSIGN_OR_RAISE(auto location,\n                         Location::ForScheme(transport(), \"localhost\", server_->port()));\n-  return FlightClient::Connect(location, &client_);\n+  return FlightClient::Connect(location).Value(&client_);\n\nReview comment:\n       ```suggestion\r\n     ARROW_ASSIGN_OR_RAISE(client_, FlightClient::Connect(location));\r\n     return Status::OK();\r\n   ```\n\n##########\nFile path: cpp/src/arrow/flight/sql/client.h\n##########\n@@ -185,17 +182,20 @@ class ARROW_EXPORT FlightSqlClient {\n                        const std::shared_ptr<Schema>& schema,\n                        std::unique_ptr<FlightStreamWriter>* stream,\n                        std::unique_ptr<FlightMetadataReader>* reader) {\n-    return impl_->DoPut(options, descriptor, schema, stream, reader);\n+    ARROW_ASSIGN_OR_RAISE(auto result, impl_->DoPut(options, descriptor, schema));\n\nReview comment:\n       (I think these are declared virtual only so we can do mocking/testing)\n\n##########\nFile path: cpp/src/arrow/flight/sql/client.h\n##########\n@@ -185,17 +182,20 @@ class ARROW_EXPORT FlightSqlClient {\n                        const std::shared_ptr<Schema>& schema,\n                        std::unique_ptr<FlightStreamWriter>* stream,\n                        std::unique_ptr<FlightMetadataReader>* reader) {\n-    return impl_->DoPut(options, descriptor, schema, stream, reader);\n+    ARROW_ASSIGN_OR_RAISE(auto result, impl_->DoPut(options, descriptor, schema));\n\nReview comment:\n       Can we create a ticket to refactor the Flight SQL APIs as well\n\n##########\nFile path: c_glib/arrow-flight-glib/client.cpp\n##########\n@@ -252,11 +252,11 @@ gaflight_client_new(GAFlightLocation *location,\n   if (options) {\n     const auto flight_options = gaflight_client_options_get_raw(options);\n     status = arrow::flight::FlightClient::Connect(*flight_location,\n-                                                  *flight_options,\n-                                                  &flight_client);\n+                                                  *flight_options\n+                                          ).Value(&flight_client);\n   } else {\n-    status = arrow::flight::FlightClient::Connect(*flight_location,\n-                                                  &flight_client);\n+    status = arrow::flight::FlightClient::Connect(*flight_location\n+                                                  ).Value(&flight_client);\n\nReview comment:\n       nit, but it might be good to break up some of these into multiple lines, e.g.\r\n   \r\n   ```\r\n   auto result = arrow::flight::FlightClient::Connect(...); // with original indentation\r\n   status = result.Value(&flight_client);\r\n   ```\r\n   just because the indentation here is starting to get awkward\n\n##########\nFile path: cpp/src/arrow/flight/client.h\n##########\n@@ -283,30 +309,49 @@ class ARROW_FLIGHT_EXPORT FlightClient {\n   }\n \n   /// \\brief List all available flights known to the server\n-  /// \\param[out] listing an iterator that returns a FlightInfo for each flight\n-  /// \\return Status\n+  /// \\return Arrow result with an iterator that returns a FlightInfo for each flight\n+  arrow::Result<std::unique_ptr<FlightListing>> ListFlights();\n+\n+  ARROW_DEPRECATED(\"Deprecated in 8.0.0. Use Result-returning overload instead.\")\n   Status ListFlights(std::unique_ptr<FlightListing>* listing);\n \n   /// \\brief List available flights given indicated filter criteria\n   /// \\param[in] options Per-RPC options\n   /// \\param[in] criteria the filter criteria (opaque)\n-  /// \\param[out] listing an iterator that returns a FlightInfo for each flight\n-  /// \\return Status\n+  /// \\return Arrow result with an iterator that returns a FlightInfo for each flight\n+  arrow::Result<std::unique_ptr<FlightListing>> ListFlights(\n+      const FlightCallOptions& options, const Criteria& criteria);\n+\n+  ARROW_DEPRECATED(\"Deprecated in 8.0.0. Use Result-returning overload instead.\")\n   Status ListFlights(const FlightCallOptions& options, const Criteria& criteria,\n                      std::unique_ptr<FlightListing>* listing);\n \n   /// \\brief Given a flight ticket and schema, request to be sent the\n   /// stream. Returns record batch stream reader\n   /// \\param[in] options Per-RPC options\n   /// \\param[in] ticket The flight ticket to use\n-  /// \\param[out] stream the returned RecordBatchReader\n-  /// \\return Status\n+  /// \\return Arrow result with the returned RecordBatchReader\n+  arrow::Result<std::unique_ptr<FlightStreamReader>> DoGet(\n+      const FlightCallOptions& options, const Ticket& ticket);\n+  arrow::Result<std::unique_ptr<FlightStreamReader>> DoGet(const Ticket& ticket) {\n+    return DoGet({}, ticket);\n+  }\n+\n+  ARROW_DEPRECATED(\"Deprecated in 8.0.0. Use Result-returning overload instead.\")\n   Status DoGet(const FlightCallOptions& options, const Ticket& ticket,\n                std::unique_ptr<FlightStreamReader>* stream);\n+  ARROW_DEPRECATED(\"Deprecated in 8.0.0. Use Result-returning overload instead.\")\n   Status DoGet(const Ticket& ticket, std::unique_ptr<FlightStreamReader>* stream) {\n-    return DoGet({}, ticket, stream);\n+    return DoGet({}, ticket).Value(stream);\n   }\n \n+  /// \\brief DoPut return value\n+  struct DoPutResult {\n+    /// \\brief a writer to write record batches to\n+    std::unique_ptr<FlightStreamWriter> stream;\n\nReview comment:\n       nit: `writer`?\n\n##########\nFile path: cpp/src/arrow/flight/sql/server_test.cc\n##########\n@@ -164,7 +164,7 @@ class TestFlightSqlServer : public ::testing::Test {\n \n     std::unique_ptr<FlightClient> client;\n     ASSERT_OK_AND_ASSIGN(auto location, Location::Parse(uri));\n-    ASSERT_OK(FlightClient::Connect(location, &client));\n+    ASSERT_OK_AND_ASSIGN(client, FlightClient::Connect(location));\n\nReview comment:\n       ```suggestion\r\n       ASSERT_OK_AND_ASSIGN(auto client, FlightClient::Connect(location));\r\n   ```\n\n##########\nFile path: cpp/src/arrow/flight/test_definitions.cc\n##########\n@@ -156,10 +154,10 @@ void DataTest::CheckDoGet(const Ticket& ticket,\n   ASSERT_GE(num_batches, 2);\n \n   std::unique_ptr<FlightStreamReader> stream;\n-  ASSERT_OK(client_->DoGet(ticket, &stream));\n+  ASSERT_OK_AND_ASSIGN(stream, client_->DoGet(ticket));\n\nReview comment:\n       ```suggestion\r\n     ASSERT_OK_AND_ASSIGN(auto stream, client_->DoGet(ticket));\r\n   ```\n\n##########\nFile path: cpp/src/arrow/flight/sql/test_app_cli.cc\n##########\n@@ -103,7 +103,7 @@ Status PrintResults(FlightSqlClient& client, const FlightCallOptions& call_optio\n Status RunMain() {\n   std::unique_ptr<FlightClient> client;\n   ARROW_ASSIGN_OR_RAISE(auto location, Location::ForGrpcTcp(FLAGS_host, FLAGS_port));\n-  ARROW_RETURN_NOT_OK(FlightClient::Connect(location, &client));\n+  ARROW_ASSIGN_OR_RAISE(client, FlightClient::Connect(location));\n\nReview comment:\n       ```suggestion\r\n     ARROW_ASSIGN_OR_RAISE(auto client, FlightClient::Connect(location));\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-31T13:00:28.883+0000",
                    "updated": "2022-03-31T13:00:28.883+0000",
                    "started": "2022-03-31T13:00:28.883+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "750980",
                    "issueId": "13435896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896/worklog/752219",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zagto commented on code in PR #12719:\nURL: https://github.com/apache/arrow/pull/12719#discussion_r841680895\n\n\n##########\ncpp/src/arrow/flight/client.h:\n##########\n@@ -283,30 +309,49 @@ class ARROW_FLIGHT_EXPORT FlightClient {\n   }\n \n   /// \\brief List all available flights known to the server\n-  /// \\param[out] listing an iterator that returns a FlightInfo for each flight\n-  /// \\return Status\n+  /// \\return Arrow result with an iterator that returns a FlightInfo for each flight\n+  arrow::Result<std::unique_ptr<FlightListing>> ListFlights();\n+\n+  ARROW_DEPRECATED(\"Deprecated in 8.0.0. Use Result-returning overload instead.\")\n   Status ListFlights(std::unique_ptr<FlightListing>* listing);\n \n   /// \\brief List available flights given indicated filter criteria\n   /// \\param[in] options Per-RPC options\n   /// \\param[in] criteria the filter criteria (opaque)\n-  /// \\param[out] listing an iterator that returns a FlightInfo for each flight\n-  /// \\return Status\n+  /// \\return Arrow result with an iterator that returns a FlightInfo for each flight\n+  arrow::Result<std::unique_ptr<FlightListing>> ListFlights(\n+      const FlightCallOptions& options, const Criteria& criteria);\n+\n+  ARROW_DEPRECATED(\"Deprecated in 8.0.0. Use Result-returning overload instead.\")\n   Status ListFlights(const FlightCallOptions& options, const Criteria& criteria,\n                      std::unique_ptr<FlightListing>* listing);\n \n   /// \\brief Given a flight ticket and schema, request to be sent the\n   /// stream. Returns record batch stream reader\n   /// \\param[in] options Per-RPC options\n   /// \\param[in] ticket The flight ticket to use\n-  /// \\param[out] stream the returned RecordBatchReader\n-  /// \\return Status\n+  /// \\return Arrow result with the returned RecordBatchReader\n+  arrow::Result<std::unique_ptr<FlightStreamReader>> DoGet(\n+      const FlightCallOptions& options, const Ticket& ticket);\n+  arrow::Result<std::unique_ptr<FlightStreamReader>> DoGet(const Ticket& ticket) {\n+    return DoGet({}, ticket);\n+  }\n+\n+  ARROW_DEPRECATED(\"Deprecated in 8.0.0. Use Result-returning overload instead.\")\n   Status DoGet(const FlightCallOptions& options, const Ticket& ticket,\n                std::unique_ptr<FlightStreamReader>* stream);\n+  ARROW_DEPRECATED(\"Deprecated in 8.0.0. Use Result-returning overload instead.\")\n   Status DoGet(const Ticket& ticket, std::unique_ptr<FlightStreamReader>* stream) {\n-    return DoGet({}, ticket, stream);\n+    return DoGet({}, ticket).Value(stream);\n   }\n \n+  /// \\brief DoPut return value\n+  struct DoPutResult {\n+    /// \\brief a writer to write record batches to\n+    std::unique_ptr<FlightStreamWriter> stream;\n\nReview Comment:\n   It was called this in the old defintion I think, but I also like writer better \n\n\n\n",
                    "created": "2022-04-04T12:29:33.836+0000",
                    "updated": "2022-04-04T12:29:33.836+0000",
                    "started": "2022-04-04T12:29:33.836+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752219",
                    "issueId": "13435896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896/worklog/752299",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zagto commented on code in PR #12719:\nURL: https://github.com/apache/arrow/pull/12719#discussion_r841800208\n\n\n##########\ncpp/src/arrow/flight/sql/client.h:\n##########\n@@ -185,17 +182,20 @@ class ARROW_EXPORT FlightSqlClient {\n                        const std::shared_ptr<Schema>& schema,\n                        std::unique_ptr<FlightStreamWriter>* stream,\n                        std::unique_ptr<FlightMetadataReader>* reader) {\n-    return impl_->DoPut(options, descriptor, schema, stream, reader);\n+    ARROW_ASSIGN_OR_RAISE(auto result, impl_->DoPut(options, descriptor, schema));\n\nReview Comment:\n   created as ARROW-16111\n\n\n\n",
                    "created": "2022-04-04T14:25:03.647+0000",
                    "updated": "2022-04-04T14:25:03.647+0000",
                    "started": "2022-04-04T14:25:03.647+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752299",
                    "issueId": "13435896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896/worklog/752326",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #12719:\nURL: https://github.com/apache/arrow/pull/12719#discussion_r841877618\n\n\n##########\ncpp/src/arrow/flight/integration_tests/test_integration_client.cc:\n##########\n@@ -94,7 +94,7 @@ Status ConsumeFlightLocation(\n     FlightClient* read_client, const Ticket& ticket,\n     const std::vector<std::shared_ptr<RecordBatch>>& retrieved_data) {\n   std::unique_ptr<FlightStreamReader> stream;\n-  RETURN_NOT_OK(read_client->DoGet(ticket, &stream));\n+  RETURN_NOT_OK(read_client->DoGet(ticket).Value(&stream));\n\nReview Comment:\n   Did you mean to resolve this?\n\n\n\n##########\ncpp/src/arrow/flight/flight_benchmark.cc:\n##########\n@@ -124,7 +124,7 @@ Status WaitForReady(FlightClient* client, const FlightCallOptions& call_options)\n   Action action{\"ping\", nullptr};\n   for (int attempt = 0; attempt < 10; attempt++) {\n     std::unique_ptr<ResultStream> stream;\n-    if (client->DoAction(call_options, action, &stream).ok()) {\n+    if (client->DoAction(call_options, action).Value(&stream).ok()) {\n\nReview Comment:\n   Did you mean to resolve this? (Or did I miss something, is stream required?)\n\n\n\n",
                    "created": "2022-04-04T15:34:27.267+0000",
                    "updated": "2022-04-04T15:34:27.267+0000",
                    "started": "2022-04-04T15:34:27.267+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752326",
                    "issueId": "13435896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896/worklog/752355",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zagto commented on code in PR #12719:\nURL: https://github.com/apache/arrow/pull/12719#discussion_r841931005\n\n\n##########\ncpp/src/arrow/flight/integration_tests/test_integration_client.cc:\n##########\n@@ -94,7 +94,7 @@ Status ConsumeFlightLocation(\n     FlightClient* read_client, const Ticket& ticket,\n     const std::vector<std::shared_ptr<RecordBatch>>& retrieved_data) {\n   std::unique_ptr<FlightStreamReader> stream;\n-  RETURN_NOT_OK(read_client->DoGet(ticket, &stream));\n+  RETURN_NOT_OK(read_client->DoGet(ticket).Value(&stream));\n\nReview Comment:\n   Sorry forgot to push that. GLib code is still wrong, I'll fix that later\n\n\n\n",
                    "created": "2022-04-04T16:28:07.480+0000",
                    "updated": "2022-04-04T16:28:07.480+0000",
                    "started": "2022-04-04T16:28:07.480+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752355",
                    "issueId": "13435896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896/worklog/752837",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #12719:\nURL: https://github.com/apache/arrow/pull/12719#discussion_r842722964\n\n\n##########\nc_glib/arrow-flight-glib/client.cpp:\n##########\n@@ -316,8 +316,8 @@ gaflight_client_list_flights(GAFlightClient *client,\n   }\n   std::unique_ptr<arrow::flight::FlightListing> flight_listing;\n   auto status = flight_client->ListFlights(*flight_options,\n-                                           *flight_criteria,\n-                                           &flight_listing);\n+                                           *flight_criteria\n+                               ).Value(&flight_listing);\n\nReview Comment:\n   Similarly, this (and below) would benefit from splitting the result and the status into separate statements so that we can keep a consistent style.\n\n\n\n##########\nc_glib/arrow-flight-glib/client.cpp:\n##########\n@@ -251,12 +251,12 @@ gaflight_client_new(GAFlightLocation *location,\n   arrow::Status status;\n   if (options) {\n     const auto flight_options = gaflight_client_options_get_raw(options);\n-    status = arrow::flight::FlightClient::Connect(*flight_location,\n-                                                  *flight_options,\n-                                                  &flight_client);\n+     arrow::Result<std::unique_ptr<arrow::flight::FlightClient>> result = arrow::flight::FlightClient::Connect(*flight_location,\n+                                                        *flight_options);\n+    status = std::move(result).Value(&flight_client);\n\nReview Comment:\n   A few things:\r\n   \r\n   There's an extra space at the beginning of the line.\r\n   \r\n   Why not use `auto` as before and keep things aligned, in a consistent style with everything else?\n\n\n\n",
                    "created": "2022-04-05T12:28:06.392+0000",
                    "updated": "2022-04-05T12:28:06.392+0000",
                    "started": "2022-04-05T12:28:06.392+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752837",
                    "issueId": "13435896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896/worklog/752849",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zagto commented on code in PR #12719:\nURL: https://github.com/apache/arrow/pull/12719#discussion_r842736052\n\n\n##########\nc_glib/arrow-flight-glib/client.cpp:\n##########\n@@ -251,12 +251,12 @@ gaflight_client_new(GAFlightLocation *location,\n   arrow::Status status;\n   if (options) {\n     const auto flight_options = gaflight_client_options_get_raw(options);\n-    status = arrow::flight::FlightClient::Connect(*flight_location,\n-                                                  *flight_options,\n-                                                  &flight_client);\n+     arrow::Result<std::unique_ptr<arrow::flight::FlightClient>> result = arrow::flight::FlightClient::Connect(*flight_location,\n+                                                        *flight_options);\n+    status = std::move(result).Value(&flight_client);\n\nReview Comment:\n   For formatting, I thought archery would fix these things. Does it not check GLib code?\r\n   The explicit type was left over from when I was debugging why the original suggestion wouldn't work, I'll change it back\n\n\n\n",
                    "created": "2022-04-05T12:40:22.503+0000",
                    "updated": "2022-04-05T12:40:22.503+0000",
                    "started": "2022-04-05T12:40:22.503+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752849",
                    "issueId": "13435896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896/worklog/752856",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #12719:\nURL: https://github.com/apache/arrow/pull/12719#discussion_r842742862\n\n\n##########\nc_glib/arrow-flight-glib/client.cpp:\n##########\n@@ -251,12 +251,12 @@ gaflight_client_new(GAFlightLocation *location,\n   arrow::Status status;\n   if (options) {\n     const auto flight_options = gaflight_client_options_get_raw(options);\n-    status = arrow::flight::FlightClient::Connect(*flight_location,\n-                                                  *flight_options,\n-                                                  &flight_client);\n+     arrow::Result<std::unique_ptr<arrow::flight::FlightClient>> result = arrow::flight::FlightClient::Connect(*flight_location,\n+                                                        *flight_options);\n+    status = std::move(result).Value(&flight_client);\n\nReview Comment:\n   GLib doesn't use an auto-formatter, unfortunately. So, sorry for the nit-picking here :(\r\n   \r\n   @kou have we considered automated formatting for the GLib code?\n\n\n\n",
                    "created": "2022-04-05T12:47:18.268+0000",
                    "updated": "2022-04-05T12:47:18.268+0000",
                    "started": "2022-04-05T12:47:18.268+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752856",
                    "issueId": "13435896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896/worklog/752927",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm closed pull request #12719: ARROW-16032: [C++] Migrate FlightClient API to Result<>\nURL: https://github.com/apache/arrow/pull/12719\n\n\n",
                    "created": "2022-04-05T14:39:12.921+0000",
                    "updated": "2022-04-05T14:39:12.921+0000",
                    "started": "2022-04-05T14:39:12.921+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752927",
                    "issueId": "13435896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896/worklog/753323",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #12719:\nURL: https://github.com/apache/arrow/pull/12719#issuecomment-1090179010\n\n   Benchmark runs are scheduled for baseline = 8eaa995f0e8de2ebc0f2b09648ef033f01f9f959 and contender = 9e08c503f97fe3848039c80ec07e324db7dfbadf. 9e08c503f97fe3848039c80ec07e324db7dfbadf is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/a09704993cb7454a86f6f85a41e76a24...e5d23eca0b5241c5afc4432f27d5f3a9/)\n   [Failed :arrow_down:0.29% :arrow_up:0.0%] [test-mac-arm](https://conbench.ursa.dev/compare/runs/74e27b69cbed4108a555c283f630642d...c11cf394852744d59c7cdf9b368d8290/)\n   [Failed :arrow_down:0.0% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/c0e3ed715ec74f59b78e38a3020ecd31...3cd2dc1040004ba98d9493ba640a5313/)\n   [Finished :arrow_down:0.04% :arrow_up:0.0%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/94591839c92d4f9ea61ab5b68bcb7049...ec83894ed8904d31bd5c8da02fd8e49f/)\n   Buildkite builds:\n   [Finished] <https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/450| `9e08c503` ec2-t3-xlarge-us-east-2>\n   [Finished] <https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/435| `9e08c503` test-mac-arm>\n   [Failed] <https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/436| `9e08c503` ursa-i9-9960x>\n   [Finished] <https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/445| `9e08c503` ursa-thinkcentre-m75q>\n   [Finished] <https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/449| `8eaa995f` ec2-t3-xlarge-us-east-2>\n   [Failed] <https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/434| `8eaa995f` test-mac-arm>\n   [Failed] <https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/435| `8eaa995f` ursa-i9-9960x>\n   [Finished] <https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/444| `8eaa995f` ursa-thinkcentre-m75q>\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python, R. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n",
                    "created": "2022-04-06T11:51:06.967+0000",
                    "updated": "2022-04-06T11:51:06.967+0000",
                    "started": "2022-04-06T11:51:06.966+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "753323",
                    "issueId": "13435896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896/worklog/753804",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on code in PR #12719:\nURL: https://github.com/apache/arrow/pull/12719#discussion_r844553982\n\n\n##########\nc_glib/arrow-flight-glib/client.cpp:\n##########\n@@ -251,12 +251,12 @@ gaflight_client_new(GAFlightLocation *location,\n   arrow::Status status;\n   if (options) {\n     const auto flight_options = gaflight_client_options_get_raw(options);\n-    status = arrow::flight::FlightClient::Connect(*flight_location,\n-                                                  *flight_options,\n-                                                  &flight_client);\n+     arrow::Result<std::unique_ptr<arrow::flight::FlightClient>> result = arrow::flight::FlightClient::Connect(*flight_location,\n+                                                        *flight_options);\n+    status = std::move(result).Value(&flight_client);\n\nReview Comment:\n   We have considered it a few times but we didn't do any actions for it.\r\n   It may be a good time to work on it: https://issues.apache.org/jira/browse/ARROW-16137\n\n\n\n",
                    "created": "2022-04-07T01:13:50.063+0000",
                    "updated": "2022-04-07T01:13:50.063+0000",
                    "started": "2022-04-07T01:13:50.063+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "753804",
                    "issueId": "13435896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896/worklog/754906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on PR #12719:\nURL: https://github.com/apache/arrow/pull/12719#issuecomment-1093773110\n\n   @github-actions crossbow submit verify-rc-source-cpp-linux-ubuntu-18.04-amd64\n\n\n",
                    "created": "2022-04-09T07:26:49.977+0000",
                    "updated": "2022-04-09T07:26:49.977+0000",
                    "started": "2022-04-09T07:26:49.977+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "754906",
                    "issueId": "13435896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896/worklog/754907",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #12719:\nURL: https://github.com/apache/arrow/pull/12719#issuecomment-1093773618\n\n   Revision: 9518ca7115fac5b8ff921c9093c3e4aa54a035ad\n   \n   Submitted crossbow builds: [ursacomputing/crossbow @ actions-1836](https://github.com/ursacomputing/crossbow/branches/all?query=actions-1836)\n   \n   |Task|Status|\n   |----|------|\n   |verify-rc-source-cpp-linux-ubuntu-18.04-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1836-github-verify-rc-source-cpp-linux-ubuntu-18.04-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1836-github-verify-rc-source-cpp-linux-ubuntu-18.04-amd64)|\n\n\n",
                    "created": "2022-04-09T07:27:55.899+0000",
                    "updated": "2022-04-09T07:27:55.899+0000",
                    "started": "2022-04-09T07:27:55.899+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "754907",
                    "issueId": "13435896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896/worklog/754960",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on PR #12719:\nURL: https://github.com/apache/arrow/pull/12719#issuecomment-1094119113\n\n   @zagto It seems that this breaks a CI job on Ubuntu 18.04:\r\n   \r\n   https://github.com/ursacomputing/crossbow/runs/5953173410?check_suite_focus=true#step:5:8623\r\n   \r\n   ```text\r\n   FAILED: src/arrow/flight/CMakeFiles/arrow_flight_objlib.dir/client.cc.o \r\n   /usr/bin/c++  -DARROW_FLIGHT_EXPORTING -DARROW_HAVE_RUNTIME_AVX2 -DARROW_HAVE_RUNTIME_AVX512 -DARROW_HAVE_RUNTIME_BMI2 -DARROW_HAVE_RUNTIME_SSE4_2 -DARROW_HAVE_SSE4_2 -DARROW_HDFS -DARROW_JEMALLOC -DARROW_JEMALLOC_INCLUDE_DIR=\"\" -DARROW_WITH_BROTLI -DARROW_WITH_BZ2 -DARROW_WITH_LZ4 -DARROW_WITH_RE2 -DARROW_WITH_SNAPPY -DARROW_WITH_TIMING_TESTS -DARROW_WITH_UTF8PROC -DARROW_WITH_ZLIB -DARROW_WITH_ZSTD -DGRPC_NAMESPACE_FOR_TLS_CREDENTIALS_OPTIONS=grpc::experimental -DGRPC_USE_TLS_CHANNEL_CREDENTIALS_OPTIONS -DGRPC_USE_TLS_CHANNEL_CREDENTIALS_OPTIONS_ROOT_CERTS -DGTEST_LINKED_AS_SHARED_LIBRARY=1 -DURI_STATIC_BUILD -DUTF8PROC_STATIC -isystem /arrow/cpp/thirdparty/flatbuffers/include -isystem boost_ep-prefix/src/boost_ep -isystem snappy_ep/src/snappy_ep-install/include -isystem brotli_ep/src/brotli_ep-install/include -isystem gflags_ep-prefix/src/gflags_ep/include -isystem thrift_ep-install/include -isystem protobuf_ep-install/include -isystem jemalloc_ep-prefix/src -isystem googletest_ep-prefix/include -isystem rapidjson_ep/src/rapidjson_ep-install/include -isystem xsimd_ep/src/xsimd_ep-install/include -isystem lz4_ep-prefix/include -isystem zstd_ep-install/include -isystem re2_ep-install/include -isystem bzip2_ep-install/include -isystem utf8proc_ep-install/include -isystem cares_ep-install/include -isystem grpc_ep-install/include -isystem /arrow/cpp/thirdparty/hadoop/include -isystem orc_ep-install/include -Isrc -I/arrow/cpp/src -I/arrow/cpp/src/generated -Wno-noexcept-type  -fdiagnostics-color=always -O3 -DNDEBUG  -Wall -fno-semantic-interposition -msse4.2  -O3 -DNDEBUG -fPIC   -std=c++11 -MD -MT src/arrow/flight/CMakeFiles/arrow_flight_objlib.dir/client.cc.o -MF src/arrow/flight/CMakeFiles/arrow_flight_objlib.dir/client.cc.o.d -o src/arrow/flight/CMakeFiles/arrow_flight_objlib.dir/client.cc.o -c /arrow/cpp/src/arrow/flight/client.cc\r\n   /arrow/cpp/src/arrow/flight/client.cc: In member function 'arrow::Result<std::unique_ptr<arrow::flight::FlightStreamReader> > arrow::flight::FlightClient::DoGet(const arrow::flight::FlightCallOptions&, const arrow::flight::Ticket&)':\r\n   /arrow/cpp/src/arrow/flight/client.cc:618:10: error: could not convert 'stream_reader' from 'std::unique_ptr<arrow::flight::ClientStreamReader, std::default_delete<arrow::flight::ClientStreamReader> >' to 'arrow::Result<std::unique_ptr<arrow::flight::FlightStreamReader> >'\r\n      return stream_reader;\r\n             ^~~~~~~~~~~~~\r\n   ```\r\n   \r\n   Could you confirm this?\n\n\n",
                    "created": "2022-04-09T20:23:58.065+0000",
                    "updated": "2022-04-09T20:23:58.065+0000",
                    "started": "2022-04-09T20:23:58.065+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "754960",
                    "issueId": "13435896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896/worklog/755188",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #12719:\nURL: https://github.com/apache/arrow/pull/12719#issuecomment-1094949127\n\n   Thank you @kou. I can confirm this. I filed ARROW-16162.\n\n\n",
                    "created": "2022-04-11T11:42:57.684+0000",
                    "updated": "2022-04-11T11:42:57.684+0000",
                    "started": "2022-04-11T11:42:57.683+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "755188",
                    "issueId": "13435896"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2f637699[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ad65e47[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4cae61d4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@34f22a60[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d77ae6a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6d958469[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@520ae8ce[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@770e69c5[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@374a8db0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@763de1fc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@73743b6d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@77b03487[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Apr 05 14:39:13 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-04-05T14:39:13.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16032/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-03-25T20:47:36.000+0000",
        "updated": "2022-04-11T11:42:58.000+0000",
        "timeoriginalestimate": null,
        "description": "Subtask for the ClientFlight API",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Migrate FlightClient API to Result<>",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435896/comment/17517483",
                    "id": "17517483",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 12719\n[https://github.com/apache/arrow/pull/12719]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-04-05T14:39:13.737+0000",
                    "updated": "2022-04-05T14:39:13.737+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z10uaw:",
        "customfield_12314139": null
    }
}