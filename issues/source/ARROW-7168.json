{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13268293",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13268293",
    "key": "ARROW-7168",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346358",
                "id": "12346358",
                "description": "",
                "name": "0.15.1",
                "archived": false,
                "released": true,
                "releaseDate": "2019-11-01"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=buhrmann",
            "name": "buhrmann",
            "key": "buhrmann",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Thomas Buhrmann",
            "active": true,
            "timeZone": "Europe/Madrid"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=buhrmann",
            "name": "buhrmann",
            "key": "buhrmann",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Thomas Buhrmann",
            "active": true,
            "timeZone": "Europe/Madrid"
        },
        "aggregateprogress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7168/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 9,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13268293/worklog/346062",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #5866: ARROW-7168: [Python] Respect the specified dictionary type for pd.Categorical conversion\nURL: https://github.com/apache/arrow/pull/5866\n \n \n   https://issues.apache.org/jira/browse/ARROW-7168\r\n   \r\n   This change ensures that if you specify a `type` in `pa.array`, we ensure the output actually has this type when converting to dictionary array (as we also do for other types).\r\n   \r\n   The PR now implements this change, but we might want to do this with a deprecation first, as this can break people's code.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-19T15:57:46.638+0000",
                    "updated": "2019-11-19T15:57:46.638+0000",
                    "started": "2019-11-19T15:57:46.638+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "346062",
                    "issueId": "13268293"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13268293/worklog/346069",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5866: ARROW-7168: [Python] Respect the specified dictionary type for pd.Categorical conversion\nURL: https://github.com/apache/arrow/pull/5866#issuecomment-555575920\n \n \n   https://issues.apache.org/jira/browse/ARROW-7168\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-19T16:03:19.631+0000",
                    "updated": "2019-11-19T16:03:19.631+0000",
                    "started": "2019-11-19T16:03:19.631+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "346069",
                    "issueId": "13268293"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13268293/worklog/346226",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5866: ARROW-7168: [Python] Respect the specified dictionary type for pd.Categorical conversion\nURL: https://github.com/apache/arrow/pull/5866#discussion_r348140280\n \n \n\n ##########\n File path: python/pyarrow/tests/test_pandas.py\n ##########\n @@ -3212,6 +3212,46 @@ def test_variable_dictionary_to_pandas():\n     tm.assert_series_equal(result_dense, expected_dense)\n \n \n+def test_dictionary_from_pandas_specified_type():\n+    # ARROW-7168\n+    # the same as cat = pd.Categorical(['a', 'b'])\n+    cat = pd.Categorical.from_codes(\n+        np.array([0, 1], dtype='int8'), np.array(['a', 'b'], dtype=object))\n+\n+    # different index type -> allow this\n+    # (the type of the 'codes' in pandas is not part of the data type)\n+    typ = pa.dictionary(index_type=pa.int16(), value_type=pa.string())\n+    result = pa.array(cat, type=typ)\n+    assert result.type.equals(typ)\n+\n \n Review comment:\n   Also, should you perhaps check passing a `mask` argument to `pa.array()`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-19T20:04:41.758+0000",
                    "updated": "2019-11-19T20:04:41.758+0000",
                    "started": "2019-11-19T20:04:41.758+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "346226",
                    "issueId": "13268293"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13268293/worklog/346227",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5866: ARROW-7168: [Python] Respect the specified dictionary type for pd.Categorical conversion\nURL: https://github.com/apache/arrow/pull/5866#discussion_r348140013\n \n \n\n ##########\n File path: python/pyarrow/tests/test_pandas.py\n ##########\n @@ -3212,6 +3212,46 @@ def test_variable_dictionary_to_pandas():\n     tm.assert_series_equal(result_dense, expected_dense)\n \n \n+def test_dictionary_from_pandas_specified_type():\n+    # ARROW-7168\n+    # the same as cat = pd.Categorical(['a', 'b'])\n+    cat = pd.Categorical.from_codes(\n+        np.array([0, 1], dtype='int8'), np.array(['a', 'b'], dtype=object))\n+\n+    # different index type -> allow this\n+    # (the type of the 'codes' in pandas is not part of the data type)\n+    typ = pa.dictionary(index_type=pa.int16(), value_type=pa.string())\n+    result = pa.array(cat, type=typ)\n+    assert result.type.equals(typ)\n \n Review comment:\n   Shouldn't you check also the array value? (for example using `result.to_pylist()`)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-19T20:04:41.777+0000",
                    "updated": "2019-11-19T20:04:41.777+0000",
                    "started": "2019-11-19T20:04:41.777+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "346227",
                    "issueId": "13268293"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13268293/worklog/346598",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #5866: ARROW-7168: [Python] Respect the specified dictionary type for pd.Categorical conversion\nURL: https://github.com/apache/arrow/pull/5866#issuecomment-555935070\n \n \n   @pitrou thanks! Added some additional tests\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-20T10:11:40.770+0000",
                    "updated": "2019-11-20T10:11:40.770+0000",
                    "started": "2019-11-20T10:11:40.770+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "346598",
                    "issueId": "13268293"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13268293/worklog/346603",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #5866: ARROW-7168: [Python] Respect the specified dictionary type for pd.Categorical conversion\nURL: https://github.com/apache/arrow/pull/5866#issuecomment-555940058\n \n \n   Also added some additional code to do it with a warning for now, falling back to the previous behaviour if the new behaviour fails.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-20T10:24:58.447+0000",
                    "updated": "2019-11-20T10:24:58.447+0000",
                    "started": "2019-11-20T10:24:58.446+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "346603",
                    "issueId": "13268293"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13268293/worklog/347269",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #5866: ARROW-7168: [Python] Respect the specified dictionary type for pd.Categorical conversion\nURL: https://github.com/apache/arrow/pull/5866#issuecomment-556990428\n \n \n   We had some regressions with the changes in 0.15 related to following the types in the schema and the pandas index etc, so thought to be more cautious this time. But certainly not attached to it (I can't really judge if it will be something easy to run into or not). \r\n   \r\n   I think the extra maintenance work is limited, we will only need to remove the warnings and replace with an error at some point.\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-21T09:12:46.088+0000",
                    "updated": "2019-11-21T09:12:46.088+0000",
                    "started": "2019-11-21T09:12:46.087+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "347269",
                    "issueId": "13268293"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13268293/worklog/347303",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5866: ARROW-7168: [Python] Respect the specified dictionary type for pd.Categorical conversion\nURL: https://github.com/apache/arrow/pull/5866\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-21T10:18:05.416+0000",
                    "updated": "2019-11-21T10:18:05.416+0000",
                    "started": "2019-11-21T10:18:05.416+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "347303",
                    "issueId": "13268293"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13268293/worklog/347304",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #5866: ARROW-7168: [Python] Respect the specified dictionary type for pd.Categorical conversion\nURL: https://github.com/apache/arrow/pull/5866#issuecomment-557017130\n \n \n   Ok, merged as is :-)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-21T10:18:36.242+0000",
                    "updated": "2019-11-21T10:18:36.242+0000",
                    "started": "2019-11-21T10:18:36.242+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "347304",
                    "issueId": "13268293"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 4800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@27c83ffc[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@68e9a035[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@79067b65[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5ccb8478[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f10931c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3ce1a232[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@76f62b98[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@769e997a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6d0d6cc6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5ccca367[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b21e98d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@19f6f6da[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 4800,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Nov 21 10:18:16 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-11-21T10:18:16.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7168/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-11-14T12:21:15.000+0000",
        "updated": "2019-11-21T10:18:39.000+0000",
        "timeoriginalestimate": null,
        "description": "This might be related to\u00a0ARROW-6548 and others dealing with all NaN columns. When creating a dictionary array, even when fully specifying the desired type, this type is not respected when the data contains only NaNs:\r\n\r\n\r\n{code:python}\r\n# This may look a little artificial but easily occurs when processing categorial data in batches and a particular batch containing only NaNs\r\nser = pd.Series([None, None]).astype('object').astype('category')\r\ntyp = pa.dictionary(index_type=pa.int8(), value_type=pa.string(), ordered=False)\r\npa.array(ser, type=typ).type\r\n{code}\r\n\r\nresults in\r\n\r\n{noformat}\r\n>> DictionaryType(dictionary<values=null, indices=int8, ordered=0>)\r\n{noformat}\r\n\r\nwhich means that one cannot e.g. serialize batches of categoricals if the possibility of all-NaN batches exists, even when trying to enforce that each batch has the same schema (because the schema is not respected).\r\n\r\nI understand that inferring the type in this case would be difficult, but I'd imagine that a fully specified type should be respected in this case?\r\n\r\nIn the meantime, is there a workaround to manually create a dictionary array of the desired type containing only NaNs?\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 4800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] pa.array() doesn't respect specified dictionary type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13268293/comment/16974399",
                    "id": "16974399",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=buhrmann",
                        "name": "buhrmann",
                        "key": "buhrmann",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Buhrmann",
                        "active": true,
                        "timeZone": "Europe/Madrid"
                    },
                    "body": "Ok, I think I found a workaround for converting an all-NaN categorical pd.Series to dictionary array:\r\n{code:python}\r\n# Should be astype('string'), but pandas doesn't preserve NaNs\r\nser = pd.Series([np.nan, np.nan]).astype('object').astype('category')\r\n\r\narr = pa.DictionaryArray.from_arrays(\r\n    indices=-np.ones(len(ser), dtype=ser.cat.codes.dtype),\r\n    dictionary=np.array([], dtype='str'),\r\n    mask=np.ones(len(ser), dtype='bool'),\r\n    ordered=ser.cat.ordered)\r\n\r\nprint(arr.type)\r\npd.Series(arr.to_pandas())\r\n{code}\r\nwhich produces:\r\n{noformat}\r\ndictionary<values=string, indices=int8, ordered=0>\r\n\r\n0    NaN\r\n1    NaN\r\ndtype: category\r\nCategories (0, object): []\r\n{noformat}\r\ni.e. the 'str' value_type is now respected and the roundtrip produces the correct result.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=buhrmann",
                        "name": "buhrmann",
                        "key": "buhrmann",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Buhrmann",
                        "active": true,
                        "timeZone": "Europe/Madrid"
                    },
                    "created": "2019-11-14T16:21:28.302+0000",
                    "updated": "2019-11-14T16:21:28.302+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13268293/comment/16974427",
                    "id": "16974427",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=buhrmann",
                        "name": "buhrmann",
                        "key": "buhrmann",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Buhrmann",
                        "active": true,
                        "timeZone": "Europe/Madrid"
                    },
                    "body": "Since I'm already at it, and in case somebody faces the same problem... To safely convert pandas categoricals to arrow, ensuring a constant type across batches, something like the following would work:\r\n{code:python}\r\ndef categorical_to_arrow(ser, known_categories=None, ordered=None):\r\n    \"\"\"Safely create a pa.array from a categorial pd.Series.\r\n    \r\n    Args:\r\n        ser (pd.Series): should be of CategorialDtype\r\n        known_categories (np.array): force known categories. If None, and \r\n            the Series doesn't have any values to infer it from, will use \r\n            an empty array of the same dtype as the categories attribute\r\n            of the Series\r\n        ordered (bool): whether categories should be ordered \r\n    \"\"\"\r\n    n = len(ser)\r\n    all_nan = ser.isna().sum() == n\r\n       \r\n    # Enforce provided categories, use the original ones, or enforce\r\n    # the correct value_type if Arrow would otherwise change it to 'null'\r\n    if isinstance(known_categories, np.ndarray):\r\n        dictionary = known_categories\r\n    elif all_nan:\r\n        # value_type may be known, but Arrow doesn't understand 'object' dtype\r\n        value_type = ser.cat.categories.dtype\r\n        if value_type == 'object':\r\n            value_type = 'str'\r\n        dictionary = np.array([], dtype=value_type)\r\n    else:\r\n        dictionary = ser.cat.categories\r\n        \r\n    # Allow overwriting of ordered attribute\r\n    if ordered is None:\r\n        ordered = ser.cat.ordered\r\n\r\n    if all_nan:\r\n        return pa.DictionaryArray.from_arrays(\r\n            indices=-np.ones(n, dtype=ser.cat.codes.dtype),\r\n            dictionary=dictionary,\r\n            mask=np.ones(n, dtype='bool'),\r\n            ordered=ordered)\r\n    else:\r\n        return pa.DictionaryArray.from_arrays(\r\n            indices=ser.cat.codes,\r\n            dictionary=dictionary,\r\n            ordered=ordered,\r\n            from_pandas=True\r\n        )\r\n{code}\r\nThis seems to be the only ( ?)\u00a0way to have control over the resulting dictionary type. E.g.:\r\n{code:python}\r\n# String categories with and without non-NaN values\r\nsers = [\r\n    pd.Series([None, None]).astype('object').astype('category'),\r\n    pd.Series(['a', None, None]).astype('category')\r\n]\r\n\r\n# The categorical types we may want\r\nknown_categories = [\r\n    None,\r\n    np.array(['a', 'b', 'c'], dtype='str'),\r\n    np.array([1, 2, 3], dtype='int8')\r\n]\r\n\r\n# Convert each series with each of the desired category types\r\nfor ser in sers:\r\n    for cats in categories:\r\n        arr = categorical_to_arrow(ser, known_categories=cats)\r\n        ser2 = pd.Series(arr.to_pandas())\r\n        print(f\"Series: {list(ser)} | Known categories: {cats}\")\r\n        print(f\"Dictionary type: {arr.type}\")\r\n        print(f\"Roundtripped Series: \\n{ser2}\", \"\\n\")\r\n{code}\r\nwhich produces:\r\n{noformat}\r\nSeries: [nan, nan] | Known categories: None\r\nDictionary type: dictionary<values=string, indices=int8, ordered=0>\r\nRoundtripped Series: \r\n0    NaN\r\n1    NaN\r\ndtype: category\r\nCategories (0, object): [] \r\n\r\nSeries: [nan, nan] | Known categories: ['a' 'b' 'c']\r\nDictionary type: dictionary<values=string, indices=int8, ordered=0>\r\nRoundtripped Series: \r\n0    NaN\r\n1    NaN\r\ndtype: category\r\nCategories (3, object): [a, b, c] \r\n\r\nSeries: [nan, nan] | Known categories: [1 2 3]\r\nDictionary type: dictionary<values=int8, indices=int8, ordered=0>\r\nRoundtripped Series: \r\n0    NaN\r\n1    NaN\r\ndtype: category\r\nCategories (3, int64): [1, 2, 3] \r\n\r\nSeries: ['a', nan, nan] | Known categories: None\r\nDictionary type: dictionary<values=string, indices=int8, ordered=0>\r\nRoundtripped Series: \r\n0      a\r\n1    NaN\r\n2    NaN\r\ndtype: category\r\nCategories (1, object): [a] \r\n\r\nSeries: ['a', nan, nan] | Known categories: ['a' 'b' 'c']\r\nDictionary type: dictionary<values=string, indices=int8, ordered=0>\r\nRoundtripped Series: \r\n0      a\r\n1    NaN\r\n2    NaN\r\ndtype: category\r\nCategories (3, object): [a, b, c] \r\n\r\nSeries: ['a', nan, nan] | Known categories: [1 2 3]\r\nDictionary type: dictionary<values=int8, indices=int8, ordered=0>\r\nRoundtripped Series: \r\n0      1\r\n1    NaN\r\n2    NaN\r\ndtype: category\r\nCategories (3, int64): [1, 2, 3] \r\n{noformat}\r\n(the last example would correspond to a recoding of the categories, but that'd be a usage problem...)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=buhrmann",
                        "name": "buhrmann",
                        "key": "buhrmann",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Buhrmann",
                        "active": true,
                        "timeZone": "Europe/Madrid"
                    },
                    "created": "2019-11-14T16:51:17.166+0000",
                    "updated": "2019-11-14T16:51:17.166+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13268293/comment/16974511",
                    "id": "16974511",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~buhrmann] thanks for the report. When passing a type like that, I agree it should be honoured.\r\n\r\nSome other observations:\r\n\r\nAlso when it's not all-NaN, the specified type gets ignored:\r\n\r\n{code}\r\nIn [19]: cat = pd.Categorical(['a', 'b']) \r\n\r\nIn [20]: typ = pa.dictionary(index_type=pa.int8(), value_type=pa.int64(), ordered=False)  \r\n\r\nIn [21]: pa.array(cat, type=typ) \r\nOut[21]: \r\n<pyarrow.lib.DictionaryArray object at 0x7ff87b6a50b8>\r\n\r\n-- dictionary:\r\n  [\r\n    \"a\",\r\n    \"b\"\r\n  ]\r\n-- indices:\r\n  [\r\n    0,\r\n    1\r\n  ]\r\n\r\nIn [22]: pa.array(cat, type=typ).type  \r\nOut[22]: DictionaryType(dictionary<values=string, indices=int8, ordered=0>)\r\n{code}\r\n\r\nSo I suppose it's a more general problem, not specifically related to this all-NaN case (it only appears for you in this case, as otherwise the specified type and the type from the data will probably match).\r\n\r\nIn the example I show here above, we should probably raise an error is the specified type is not compatible (string vs int categories).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2019-11-14T18:22:14.364+0000",
                    "updated": "2019-11-14T18:22:14.364+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13268293/comment/16974964",
                    "id": "16974964",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=buhrmann",
                        "name": "buhrmann",
                        "key": "buhrmann",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Buhrmann",
                        "active": true,
                        "timeZone": "Europe/Madrid"
                    },
                    "body": "Yes, that's right. I didn't notice it silently 'failing' in other cases because I usually construct the type explicitly to match.\r\n\r\nI guess it should be a relatively easy fix, since as I show above, one can construct an all-NaN DictionaryArray using\u00a0from_arrays() with negative indices, a np.array with desired type as dictionary, and setting the mask. I haven't checked under the hood why using -1 as indices works without setting from_pandas=True, and so I'm not sure if this is the best way to create the array, but it seems to work in practice...",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=buhrmann",
                        "name": "buhrmann",
                        "key": "buhrmann",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Buhrmann",
                        "active": true,
                        "timeZone": "Europe/Madrid"
                    },
                    "created": "2019-11-15T09:41:27.430+0000",
                    "updated": "2019-11-15T09:41:27.430+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13268293/comment/16979154",
                    "id": "16979154",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 5866\n[https://github.com/apache/arrow/pull/5866]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-11-21T10:18:16.790+0000",
                    "updated": "2019-11-21T10:18:16.790+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|z08lxk:",
        "customfield_12314139": null
    }
}