{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13484175",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484175",
    "key": "ARROW-17912",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=firestarmanllc",
            "name": "firestarmanllc",
            "key": "JIRAUSER296424",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER296424&avatarId=51829",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER296424&avatarId=51829",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER296424&avatarId=51829",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER296424&avatarId=51829"
            },
            "displayName": "Liangcai li",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=firestarmanllc",
            "name": "firestarmanllc",
            "key": "JIRAUSER296424",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER296424&avatarId=51829",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER296424&avatarId=51829",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER296424&avatarId=51829",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER296424&avatarId=51829"
            },
            "displayName": "Liangcai li",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17912/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@79a02763[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6067c215[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4bb485e6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@159d91ef[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a3020cb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@50d3f5fa[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3fa7d1b3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@464c3d41[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1d217b3b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@52922140[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@533958e8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@74b8c1fb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Oct 05 13:50:55 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": [
            "C++"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-10-05T13:50:28.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17912/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2022-10-02T11:59:09.000+0000",
        "updated": "2022-10-05T13:50:55.000+0000",
        "timeoriginalestimate": null,
        "description": "My current work is about Pyspark Cogroup Pandas UDF. And two processes are involved, the JVM one (sender) and the Python one (receiver).\r\n\r\n[Spark is using the Arrow Java `ArrowStreamWriter`|https://github.com/apache/spark/blob/branch-3.3/sql/core/src/main/scala/org/apache/spark/sql/execution/python/CoGroupedArrowPythonRunner.scala#L99] to serialize Arrow tables being sent from the JVM process to the Python process, and ArrowStreamWriter can handle empty tables correctly.\r\n\r\n[While cuDF is using the Arrow C++ RecordBatchWriter |https://github.com/rapidsai/cudf/blob/branch-22.10/java/src/main/native/src/TableJni.cpp#L254]to do the same serialization, but it leads to an error as below on the Python side, where [the Pyspark is calling Pyarrow *Table.from_batches*|https://github.com/apache/spark/blob/branch-3.3/python/pyspark/sql/pandas/serializers.py#L366] to deserialize the arrow stream.\r\n\r\n```\u00a0\r\n\r\n_E \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 File \"/usr/local/spark/python/lib/pyspark.zip/pyspark/sql/pandas/serializers.py\", line 297, in load_stream_\r\n_E \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [self.arrow_to_pandas(c) for c in pa.Table.from_batches(batch2).itercolumns()]_\r\n_E \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 File \"pyarrow/table.pxi\", line 1609, in pyarrow.lib.Table.from_batches_\r\n_E \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {color:#de350b}*ValueError: Must pass schema, or at least one RecordBatch*{color}_\r\n\r\n```",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] IPC writer does not write an empty batch in the case of an empty table, which PySpark cannot handle",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484175/comment/17612091",
                    "id": "17612091",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=firestarmanllc",
                        "name": "firestarmanllc",
                        "key": "JIRAUSER296424",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER296424&avatarId=51829",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER296424&avatarId=51829",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER296424&avatarId=51829",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER296424&avatarId=51829"
                        },
                        "displayName": "Liangcai li",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "After some investigation, according to [the code here|https://github.com/apache/arrow/blob/release-8.0.0/cpp/src/arrow/table.cc#L621], it look likes the *_TableBatchReader_* will return null if given an empty table, not an empty batch. So the [RecordBatchWriter will skip the empty table, and write no batch into the stream|https://github.com/apache/arrow/blob/release-8.0.0/cpp/src/arrow/ipc/writer.cc#L964]. But the [Pyarrow requires at least one batch |https://github.com/apache/arrow/blob/release-7.0.0/python/pyarrow/table.pxi#L1936]when the schema is not specified.\r\n\r\n\u00a0\r\n\r\nMaybe we can do something as below to cover the empty table case, by adding a new boolean variable \"{*}_reach_end_{*}\". Then it will align with the Java's behavior.\u00a0\r\n\r\n```\r\n\r\n\u00a0_Status TableBatchReader::ReadNext(std::shared_ptr<RecordBatch>* out) {_\r\n_*{color:#de350b}- \u00a0if (absolute_row_position_ == table_.num_rows()) {{color}*_\r\n_*{color:#00875a}+ \u00a0if (reach_end) {{color}*_\r\n\u00a0 \u00a0 \u00a0_*{color:#00875a}*out = nullptr;{color}*_\r\n\u00a0 \u00a0 \u00a0_*{color:#00875a}return Status::OK();{color}*_\r\n\r\n_@@ -666,6 +668,10 @@ Status TableBatchReader::ReadNext(std::shared_ptr<RecordBatch>* out) {_\r\n\u00a0 \u00a0_absolute_row_position_ += chunksize;_\r\n\u00a0 \u00a0{_}*out = RecordBatch::Make(table{_}.schema(), chunksize, std::move(batch_data));_\r\n\r\n{color:#00875a}*_+ \u00a0if (absolute_row_position_ == table_.num_rows()) {*{color}\r\n*{color:#00875a}_+ \u00a0 \u00a0reach_end = true;_{color}*\r\n*{color:#00875a}_+ \u00a0}_{color}*\r\n*{color:#00875a}_+_{color}*\r\n\u00a0 \u00a0_return Status::OK();_\r\n\u00a0_}_\r\n\r\n```",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=firestarmanllc",
                        "name": "firestarmanllc",
                        "key": "JIRAUSER296424",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER296424&avatarId=51829",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER296424&avatarId=51829",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER296424&avatarId=51829",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER296424&avatarId=51829"
                        },
                        "displayName": "Liangcai li",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-10-02T12:06:41.984+0000",
                    "updated": "2022-10-02T12:31:54.703+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484175/comment/17612249",
                    "id": "17612249",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Hmm, I'd rather not adjust the C++ side. Why not provide the schema on the Python side? Or else, the C++ side can explicitly write out an empty batch. But I don't think it makes sense to adjust behavior for all programs.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-10-03T11:29:04.627+0000",
                    "updated": "2022-10-03T11:29:04.627+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484175/comment/17612250",
                    "id": "17612250",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Looks like PySpark should have the schema in ArrowStreamSerializer, it's just discarding it",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-10-03T11:30:33.754+0000",
                    "updated": "2022-10-03T11:30:33.754+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484175/comment/17612284",
                    "id": "17612284",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=firestarmanllc",
                        "name": "firestarmanllc",
                        "key": "JIRAUSER296424",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER296424&avatarId=51829",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER296424&avatarId=51829",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER296424&avatarId=51829",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER296424&avatarId=51829"
                        },
                        "displayName": "Liangcai li",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Thx a lot for review.\r\n\r\n\u2014 Why not provide the schema on the Python side?\u00a0\r\n\r\nOne Pyspark serializer may read batches with different schemas, so better to infer the \"local\" schema from a batch, not a \"global\" schema for all the read batches. [Cogroup is one of this kind of cases.|https://github.com/apache/spark/blob/branch-3.3/python/pyspark/sql/pandas/serializers.py#L363] The _CogroupUDFSerializer_ will load batches from two tables, and the two tables are likely to have different schemas.\r\n\r\n\u00a0\r\n\r\n\u2014 Or else, the C++ side can explicitly write out an empty batch. But I don't think it makes sense to adjust behavior for all programs.\r\n\r\nJava writer indeed can send out an empty table. And it makes sense I think to transport an empty table for the cases of joining two tables.\u00a0\r\n\r\nBesides, personally this would be a positive change to let C++ IPC work with more cases, just like the Java IPC. Or else, could we have a config to switch between the two behaviors?\r\n\r\n\u00a0\r\n\r\n\u2014 Looks like PySpark should have the schema in ArrowStreamSerializer, it's just discarding it.\r\n\r\nSimilarly, one Pyspark serializer may read batches with different schemas, so better to infer the \"local\" schema from a batch, even it is empty.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=firestarmanllc",
                        "name": "firestarmanllc",
                        "key": "JIRAUSER296424",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER296424&avatarId=51829",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER296424&avatarId=51829",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER296424&avatarId=51829",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER296424&avatarId=51829"
                        },
                        "displayName": "Liangcai li",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-10-03T13:13:58.760+0000",
                    "updated": "2022-10-03T13:24:13.507+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484175/comment/17612300",
                    "id": "17612300",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "A single Arrow stream has a consistent schema, so you still have a consistent schema for some 'unit' of data.\r\n\r\nThere is a slight difference between a stream with 0 batches and a stream of a single empty batch. Again, I don't think we should change this unilaterally for all consumers. I think either the sender here should explicitly write out an empty batch, or the consumer here should recognize that Arrow streams carry a schema and explicitly specify the schema. If there are batches with other schemas, those are in other streams, so I don't see how that affects the issue at hand.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-10-03T13:54:09.474+0000",
                    "updated": "2022-10-03T13:54:09.474+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484175/comment/17612549",
                    "id": "17612549",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=firestarmanllc",
                        "name": "firestarmanllc",
                        "key": "JIRAUSER296424",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER296424&avatarId=51829",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER296424&avatarId=51829",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER296424&avatarId=51829",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER296424&avatarId=51829"
                        },
                        "displayName": "Liangcai li",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "\u2014 \u00a0I think either the sender here should explicitly write out an empty batch\r\n\r\nNot fully get what this means. Could you share how to do it ?\r\n\r\nDo you mean the current C++ IPC supports write out an empty table ?\r\n\r\n\u00a0\r\n\r\n\u2014 There is a slight difference between a stream with 0 batches and a stream of a single empty batch\r\n\r\nYeah, what I want is just sending out an single empty table, and the Python receiver can get it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=firestarmanllc",
                        "name": "firestarmanllc",
                        "key": "JIRAUSER296424",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER296424&avatarId=51829",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER296424&avatarId=51829",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER296424&avatarId=51829",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER296424&avatarId=51829"
                        },
                        "displayName": "Liangcai li",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-10-04T10:11:17.721+0000",
                    "updated": "2022-10-04T10:16:38.121+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484175/comment/17612551",
                    "id": "17612551",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=firestarmanllc",
                        "name": "firestarmanllc",
                        "key": "JIRAUSER296424",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER296424&avatarId=51829",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER296424&avatarId=51829",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER296424&avatarId=51829",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER296424&avatarId=51829"
                        },
                        "displayName": "Liangcai li",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BTW, is it OK that the C++ IPC and Java IPC in the same Arrow library behaves differently at the sender side with an empty table ?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=firestarmanllc",
                        "name": "firestarmanllc",
                        "key": "JIRAUSER296424",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER296424&avatarId=51829",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER296424&avatarId=51829",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER296424&avatarId=51829",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER296424&avatarId=51829"
                        },
                        "displayName": "Liangcai li",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-10-04T10:13:31.570+0000",
                    "updated": "2022-10-04T10:18:08.157+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484175/comment/17612577",
                    "id": "17612577",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "There is no such thing as a 'table' in Java in the first place, nor is there any such concept in Arrow itself. Tables are only a convenience added in some Arrow implementations.\r\n\r\nYou can create an empty record batch of a given schema (e.g. by using MakeArrayOfNull) and explicitly write that out to the stream.\r\n\r\nAgain, there are two different kinds of 'empty'. Either you have a single empty batch, or you have no batches at all. Hence I think it is best to be explicit. I also do not understand why Spark cannot be made to be more robust about this.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-10-04T11:45:16.675+0000",
                    "updated": "2022-10-04T11:45:16.675+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484175/comment/17612897",
                    "id": "17612897",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "I agree with David that it seems this can be solved in pyspark. \r\n\r\nYou referenced https://github.com/apache/spark/blob/5483607910aba0aaf05d029c6c813faa37cb4731/python/pyspark/sql/pandas/serializers.py#L366 where {{Table.from_batches}} is being called, which requires a schema if {{batches}} is an empty list. But those batches comes from {{ArrowStreamSerializer.load_stream}}, which calls {{pyarrow.ipc.open_stream}} (https://github.com/apache/spark/blob/5483607910aba0aaf05d029c6c813faa37cb4731/python/pyspark/sql/pandas/serializers.py#L95-L97). At that point, you always have the schema from the stream as well ({{reader.schema}}), so it is just a matter of passing this through to {{from_batches}}.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2022-10-05T08:41:53.667+0000",
                    "updated": "2022-10-05T08:41:53.667+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484175/comment/17613009",
                    "id": "17613009",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=firestarmanllc",
                        "name": "firestarmanllc",
                        "key": "JIRAUSER296424",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER296424&avatarId=51829",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER296424&avatarId=51829",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER296424&avatarId=51829",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER296424&avatarId=51829"
                        },
                        "displayName": "Liangcai li",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Thx for all of these, closing ...\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=firestarmanllc",
                        "name": "firestarmanllc",
                        "key": "JIRAUSER296424",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER296424&avatarId=51829",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER296424&avatarId=51829",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER296424&avatarId=51829",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER296424&avatarId=51829"
                        },
                        "displayName": "Liangcai li",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-10-05T13:50:55.050+0000",
                    "updated": "2022-10-05T13:50:55.050+0000"
                }
            ],
            "maxResults": 10,
            "total": 10,
            "startAt": 0
        },
        "customfield_12311820": "0|z19094:",
        "customfield_12314139": null
    }
}