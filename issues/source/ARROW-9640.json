{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13320790",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790",
    "key": "ARROW-9640",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sagnikc",
            "name": "sagnikc",
            "key": "sagnikc",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Sagnik Chakraborty",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sagnikc",
            "name": "sagnikc",
            "key": "sagnikc",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Sagnik Chakraborty",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sagnikc",
            "name": "sagnikc",
            "key": "sagnikc",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Sagnik Chakraborty",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9640/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 24,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/466206",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#issuecomment-668579349\n\n\n   https://issues.apache.org/jira/browse/ARROW-9640\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-04T12:55:49.510+0000",
                    "updated": "2020-08-04T12:55:49.510+0000",
                    "started": "2020-08-04T12:55:49.510+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "466206",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/466597",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sagnikc-dremio commented on a change in pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#discussion_r465480139\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops.cc\n##########\n@@ -234,6 +234,25 @@ DIV_FLOAT(float64)\n \n #undef DIV_FLOAT\n \n+#define ROUND(TYPE)                                                \\\n+  FORCE_INLINE                                                     \\\n+  gdv_##TYPE round_##TYPE(gdv_##TYPE number, gdv_int32 place) {    \\\n+    if (number == 0) {                                             \\\n+      return 0;                                                    \\\n+    }                                                              \\\n+    if (number < 0) {                                              \\\n+      return -round_##TYPE(-number, place);                        \\\n+    }                                                              \\\n+    return floor(number * pow(10, place) + 0.5) * pow(10, -place); \\\n\nReview comment:\n       Modified this PR to handle only integers and long integers. For floats and doubles, handling for inf/NaN will be necessary, so will be taking it up in another PR.\r\n   \r\n   For this particular case, we need to be dealing with cases only where the precision for rounding is a negative number, and hence pow(10, precision) will never run into overflow or underflow (providing a check if the precision is larger than the number of digits in the number, return 0).\r\n   \r\n   Please let me know if you have any suggestions.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-05T05:24:08.528+0000",
                    "updated": "2020-08-05T05:24:08.528+0000",
                    "started": "2020-08-05T05:24:08.527+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "466597",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/466598",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sagnikc-dremio commented on a change in pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#discussion_r465480283\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops_test.cc\n##########\n@@ -101,4 +101,10 @@ TEST(TestArithmeticOps, TestDiv) {\n   context.Reset();\n }\n \n+TEST(TestArithmeticOps, TestRound) {\n+  EXPECT_EQ(round_int32(758, -1), 760);\n\nReview comment:\n       Added more test cases for negative numbers.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-05T05:24:31.814+0000",
                    "updated": "2020-08-05T05:24:31.814+0000",
                    "started": "2020-08-05T05:24:31.814+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "466598",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/466599",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sagnikc-dremio commented on a change in pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#discussion_r465480283\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops_test.cc\n##########\n@@ -101,4 +101,10 @@ TEST(TestArithmeticOps, TestDiv) {\n   context.Reset();\n }\n \n+TEST(TestArithmeticOps, TestRound) {\n+  EXPECT_EQ(round_int32(758, -1), 760);\n\nReview comment:\n       Added more test cases for negative numbers and boundary conditions.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-05T05:24:44.862+0000",
                    "updated": "2020-08-05T05:24:44.862+0000",
                    "started": "2020-08-05T05:24:44.862+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "466599",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/466601",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#discussion_r465485532\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops.cc\n##########\n@@ -234,6 +234,25 @@ DIV_FLOAT(float64)\n \n #undef DIV_FLOAT\n \n+#define ROUND(TYPE)                                                \\\n+  FORCE_INLINE                                                     \\\n+  gdv_##TYPE round_##TYPE(gdv_##TYPE number, gdv_int32 place) {    \\\n+    if (number == 0) {                                             \\\n+      return 0;                                                    \\\n+    }                                                              \\\n+    if (number < 0) {                                              \\\n+      return -round_##TYPE(-number, place);                        \\\n+    }                                                              \\\n+    return floor(number * pow(10, place) + 0.5) * pow(10, -place); \\\n\nReview comment:\n       My suggestion would be to avoid floating point operations altogether.   I haven't tested this but for pow(10, ...) on integers I think either a lookup table or recursive/squaring would like be more efficient.  Then for rounding I think something like:\r\n   \r\n   (num + (pow(10, -(precision + 1)) * 5) / pow(10, -precision) should work.\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-05T05:42:15.870+0000",
                    "updated": "2020-08-05T05:42:15.870+0000",
                    "started": "2020-08-05T05:42:15.870+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "466601",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/466603",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#discussion_r465485532\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops.cc\n##########\n@@ -234,6 +234,25 @@ DIV_FLOAT(float64)\n \n #undef DIV_FLOAT\n \n+#define ROUND(TYPE)                                                \\\n+  FORCE_INLINE                                                     \\\n+  gdv_##TYPE round_##TYPE(gdv_##TYPE number, gdv_int32 place) {    \\\n+    if (number == 0) {                                             \\\n+      return 0;                                                    \\\n+    }                                                              \\\n+    if (number < 0) {                                              \\\n+      return -round_##TYPE(-number, place);                        \\\n+    }                                                              \\\n+    return floor(number * pow(10, place) + 0.5) * pow(10, -place); \\\n\nReview comment:\n       My suggestion would be to avoid floating point operations altogether.   I haven't tested this but for pow(10, ...) on integers I think either a lookup table or recursive/squaring would like be more efficient.  Then for rounding I think something like:\r\n   \r\n   ((num + (pow(10, -(precision + 1)) * 5) / pow(10, -precision)) * pow(10, -precision)   should work.\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-05T05:54:52.306+0000",
                    "updated": "2020-08-05T05:54:52.306+0000",
                    "started": "2020-08-05T05:54:52.306+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "466603",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/466604",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#discussion_r465490152\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops_test.cc\n##########\n@@ -87,6 +87,19 @@ TEST(TestExtendedMathOps, TestLogWithBase) {\n   EXPECT_EQ(context1.has_error(), false);\n }\n \n+TEST(TestExtendedMathOps, TestRound) {\n+  EXPECT_EQ(round_int32(7589, -1), 7590);\n\nReview comment:\n       these tests are a little hard to read but I don't think any of them actually check rounding at the boundary (digit = 5)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-05T05:56:07.085+0000",
                    "updated": "2020-08-05T05:56:07.085+0000",
                    "started": "2020-08-05T05:56:07.084+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "466604",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/466612",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#discussion_r465485532\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops.cc\n##########\n@@ -234,6 +234,25 @@ DIV_FLOAT(float64)\n \n #undef DIV_FLOAT\n \n+#define ROUND(TYPE)                                                \\\n+  FORCE_INLINE                                                     \\\n+  gdv_##TYPE round_##TYPE(gdv_##TYPE number, gdv_int32 place) {    \\\n+    if (number == 0) {                                             \\\n+      return 0;                                                    \\\n+    }                                                              \\\n+    if (number < 0) {                                              \\\n+      return -round_##TYPE(-number, place);                        \\\n+    }                                                              \\\n+    return floor(number * pow(10, place) + 0.5) * pow(10, -place); \\\n\nReview comment:\n       My suggestion would be to avoid floating point operations altogether.   I haven't tested this but for pow(10, ...) on integers I think either a lookup table or recursive/squaring would like be more efficient.  Then for rounding I think something like:\r\n   \r\n   ((num + (pow(10, -(precision + 1)) * 5) / pow(10, -precision)) * pow(10, -precision)   should work.\r\n   \r\n   You would need to account for overflow on the addition here I think.\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-05T06:09:45.935+0000",
                    "updated": "2020-08-05T06:09:45.935+0000",
                    "started": "2020-08-05T06:09:45.935+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "466612",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/466615",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sagnikc-dremio commented on a change in pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#discussion_r465496907\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops_test.cc\n##########\n@@ -87,6 +87,19 @@ TEST(TestExtendedMathOps, TestLogWithBase) {\n   EXPECT_EQ(context1.has_error(), false);\n }\n \n+TEST(TestExtendedMathOps, TestRound) {\n+  EXPECT_EQ(round_int32(7589, -1), 7590);\n\nReview comment:\n       EXPECT_EQ(round_int32(8612, -5), 0) tests the boundary conditions. For 5 decimal places, the num before rounding is 0.08612 which rounds down to 0.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-05T06:16:19.470+0000",
                    "updated": "2020-08-05T06:16:19.470+0000",
                    "started": "2020-08-05T06:16:19.470+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "466615",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/468162",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#discussion_r467352487\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops_test.cc\n##########\n@@ -87,6 +87,19 @@ TEST(TestExtendedMathOps, TestLogWithBase) {\n   EXPECT_EQ(context1.has_error(), false);\n }\n \n+TEST(TestExtendedMathOps, TestRound) {\n+  EXPECT_EQ(round_int32(7589, -1), 7590);\n\nReview comment:\n       what I mean is I don't think anything here test for the addition of .5, I think there are currently other values for the rounding addition that would allow these tests to pass\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-08T02:53:56.477+0000",
                    "updated": "2020-08-08T02:53:56.477+0000",
                    "started": "2020-08-08T02:53:56.477+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "468162",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/472307",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#discussion_r472717430\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -111,6 +112,76 @@ LOG_WITH_BASE(float64, float64, float64)\n \n POWER(float64, float64, float64)\n \n+FORCE_INLINE\n+gdv_int32 round_int32_int32(gdv_int32 number, gdv_int32 precision) {\n+  // for integers, there is nothing following the decimal point,\n+  // so round() always returns the same number if precision >= 0\n+  if (precision >= 0 || number == 0) {\n+    return number;\n+  }\n+  gdv_int32 abs_precision = -precision;\n+  // This is to ensure that there is no overflow while calculating 10^precision, 9 is\n+  // the smallest N for which 10^N does not fit into 32 bits, so we can safely return 0\n+  if (abs_precision > 9) {\n+    return 0;\n+  }\n+  gdv_int32 power_of_10 = static_cast<gdv_int32>(get_power_of_10(abs_precision));\n+  gdv_int32 remainder = number % power_of_10, quotient = number / power_of_10;\n+  // if the fractional part of the quotient >= 0.5, round to next higher integer\n+  if (remainder >= power_of_10 / 2) {\n+    quotient++;\n+  }\n+  return quotient * power_of_10;\n+}\n+\n+FORCE_INLINE\n+gdv_int64 round_int64_int32(gdv_int64 number, gdv_int32 precision) {\n+  // for long integers, there is nothing following the decimal point,\n+  // so round() always returns the same number if precision >= 0\n+  if (precision >= 0 || number == 0) {\n+    return number;\n+  }\n+  gdv_int32 abs_precision = -precision;\n+  // This is to ensure that there is no overflow while calculating 10^precision, 19 is\n+  // the smallest N for which 10^N does not fit into 64 bits, so we can safely return 0\n+  if (abs_precision > 18) {\n+    return 0;\n+  }\n+  gdv_int64 power_of_10 = get_power_of_10(abs_precision);\n+  gdv_int64 remainder = number % power_of_10, quotient = number / power_of_10;\n\nReview comment:\n       nit: two separate lines.\r\n   \r\n   Further nit: I think you can get rid of a multiply and a divide you make the code:\r\n   \r\n   ```\r\n   number -= remainder;\r\n   if (remainder >= power_of_10 / 2) {\r\n      number += power_of_10;\r\n   }\r\n   return number;\r\n   ```\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T05:33:01.211+0000",
                    "updated": "2020-08-19T05:33:01.211+0000",
                    "started": "2020-08-19T05:33:01.211+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472307",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/472308",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#discussion_r472724359\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -111,6 +112,76 @@ LOG_WITH_BASE(float64, float64, float64)\n \n POWER(float64, float64, float64)\n \n+FORCE_INLINE\n+gdv_int32 round_int32_int32(gdv_int32 number, gdv_int32 precision) {\n+  // for integers, there is nothing following the decimal point,\n+  // so round() always returns the same number if precision >= 0\n+  if (precision >= 0 || number == 0) {\n+    return number;\n+  }\n+  gdv_int32 abs_precision = -precision;\n+  // This is to ensure that there is no overflow while calculating 10^precision, 9 is\n+  // the smallest N for which 10^N does not fit into 32 bits, so we can safely return 0\n+  if (abs_precision > 9) {\n+    return 0;\n+  }\n+  gdv_int32 power_of_10 = static_cast<gdv_int32>(get_power_of_10(abs_precision));\n+  gdv_int32 remainder = number % power_of_10, quotient = number / power_of_10;\n+  // if the fractional part of the quotient >= 0.5, round to next higher integer\n+  if (remainder >= power_of_10 / 2) {\n+    quotient++;\n+  }\n+  return quotient * power_of_10;\n+}\n+\n+FORCE_INLINE\n+gdv_int64 round_int64_int32(gdv_int64 number, gdv_int32 precision) {\n+  // for long integers, there is nothing following the decimal point,\n+  // so round() always returns the same number if precision >= 0\n+  if (precision >= 0 || number == 0) {\n+    return number;\n+  }\n+  gdv_int32 abs_precision = -precision;\n+  // This is to ensure that there is no overflow while calculating 10^precision, 19 is\n+  // the smallest N for which 10^N does not fit into 64 bits, so we can safely return 0\n+  if (abs_precision > 18) {\n+    return 0;\n+  }\n+  gdv_int64 power_of_10 = get_power_of_10(abs_precision);\n+  gdv_int64 remainder = number % power_of_10, quotient = number / power_of_10;\n\nReview comment:\n       would need to double check negative numbers.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T05:43:57.886+0000",
                    "updated": "2020-08-19T05:43:57.886+0000",
                    "started": "2020-08-19T05:43:57.886+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472308",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/472310",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#discussion_r472717430\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -111,6 +112,76 @@ LOG_WITH_BASE(float64, float64, float64)\n \n POWER(float64, float64, float64)\n \n+FORCE_INLINE\n+gdv_int32 round_int32_int32(gdv_int32 number, gdv_int32 precision) {\n+  // for integers, there is nothing following the decimal point,\n+  // so round() always returns the same number if precision >= 0\n+  if (precision >= 0 || number == 0) {\n+    return number;\n+  }\n+  gdv_int32 abs_precision = -precision;\n+  // This is to ensure that there is no overflow while calculating 10^precision, 9 is\n+  // the smallest N for which 10^N does not fit into 32 bits, so we can safely return 0\n+  if (abs_precision > 9) {\n+    return 0;\n+  }\n+  gdv_int32 power_of_10 = static_cast<gdv_int32>(get_power_of_10(abs_precision));\n+  gdv_int32 remainder = number % power_of_10, quotient = number / power_of_10;\n+  // if the fractional part of the quotient >= 0.5, round to next higher integer\n+  if (remainder >= power_of_10 / 2) {\n+    quotient++;\n+  }\n+  return quotient * power_of_10;\n+}\n+\n+FORCE_INLINE\n+gdv_int64 round_int64_int32(gdv_int64 number, gdv_int32 precision) {\n+  // for long integers, there is nothing following the decimal point,\n+  // so round() always returns the same number if precision >= 0\n+  if (precision >= 0 || number == 0) {\n+    return number;\n+  }\n+  gdv_int32 abs_precision = -precision;\n+  // This is to ensure that there is no overflow while calculating 10^precision, 19 is\n+  // the smallest N for which 10^N does not fit into 64 bits, so we can safely return 0\n+  if (abs_precision > 18) {\n+    return 0;\n+  }\n+  gdv_int64 power_of_10 = get_power_of_10(abs_precision);\n+  gdv_int64 remainder = number % power_of_10, quotient = number / power_of_10;\n\nReview comment:\n       nit: two separate lines.\r\n   \r\n   Further nit: I think you can get rid of a multiply if  you make the code:\r\n   \r\n   ```\r\n   number -= remainder;\r\n   if (remainder >= power_of_10 / 2) {\r\n      number += power_of_10;\r\n   }\r\n   return number;\r\n   ```\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T05:45:42.410+0000",
                    "updated": "2020-08-19T05:45:42.410+0000",
                    "started": "2020-08-19T05:45:42.410+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472310",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/472316",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#discussion_r472734667\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -111,6 +112,76 @@ LOG_WITH_BASE(float64, float64, float64)\n \n POWER(float64, float64, float64)\n \n+FORCE_INLINE\n+gdv_int32 round_int32_int32(gdv_int32 number, gdv_int32 precision) {\n+  // for integers, there is nothing following the decimal point,\n+  // so round() always returns the same number if precision >= 0\n+  if (precision >= 0 || number == 0) {\n+    return number;\n+  }\n+  gdv_int32 abs_precision = -precision;\n+  // This is to ensure that there is no overflow while calculating 10^precision, 9 is\n+  // the smallest N for which 10^N does not fit into 32 bits, so we can safely return 0\n+  if (abs_precision > 9) {\n+    return 0;\n+  }\n+  gdv_int32 power_of_10 = static_cast<gdv_int32>(get_power_of_10(abs_precision));\n+  gdv_int32 remainder = number % power_of_10, quotient = number / power_of_10;\n+  // if the fractional part of the quotient >= 0.5, round to next higher integer\n+  if (remainder >= power_of_10 / 2) {\n+    quotient++;\n+  }\n+  return quotient * power_of_10;\n+}\n+\n+FORCE_INLINE\n+gdv_int64 round_int64_int32(gdv_int64 number, gdv_int32 precision) {\n+  // for long integers, there is nothing following the decimal point,\n+  // so round() always returns the same number if precision >= 0\n+  if (precision >= 0 || number == 0) {\n\nReview comment:\n       also, I don'tthink || mumber == 0 is needed any more?\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -111,6 +112,76 @@ LOG_WITH_BASE(float64, float64, float64)\n \n POWER(float64, float64, float64)\n \n+FORCE_INLINE\n+gdv_int32 round_int32_int32(gdv_int32 number, gdv_int32 precision) {\n+  // for integers, there is nothing following the decimal point,\n+  // so round() always returns the same number if precision >= 0\n+  if (precision >= 0 || number == 0) {\n+    return number;\n+  }\n+  gdv_int32 abs_precision = -precision;\n+  // This is to ensure that there is no overflow while calculating 10^precision, 9 is\n+  // the smallest N for which 10^N does not fit into 32 bits, so we can safely return 0\n+  if (abs_precision > 9) {\n+    return 0;\n+  }\n+  gdv_int32 power_of_10 = static_cast<gdv_int32>(get_power_of_10(abs_precision));\n+  gdv_int32 remainder = number % power_of_10, quotient = number / power_of_10;\n+  // if the fractional part of the quotient >= 0.5, round to next higher integer\n+  if (remainder >= power_of_10 / 2) {\n+    quotient++;\n+  }\n+  return quotient * power_of_10;\n+}\n+\n+FORCE_INLINE\n+gdv_int64 round_int64_int32(gdv_int64 number, gdv_int32 precision) {\n+  // for long integers, there is nothing following the decimal point,\n+  // so round() always returns the same number if precision >= 0\n+  if (precision >= 0 || number == 0) {\n\nReview comment:\n       I  don'tthink || mumber == 0 is needed any more?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T05:59:22.433+0000",
                    "updated": "2020-08-19T05:59:22.433+0000",
                    "started": "2020-08-19T05:59:22.432+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472316",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/472317",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#discussion_r472736648\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -111,6 +112,76 @@ LOG_WITH_BASE(float64, float64, float64)\n \n POWER(float64, float64, float64)\n \n+FORCE_INLINE\n+gdv_int32 round_int32_int32(gdv_int32 number, gdv_int32 precision) {\n+  // for integers, there is nothing following the decimal point,\n+  // so round() always returns the same number if precision >= 0\n+  if (precision >= 0 || number == 0) {\n+    return number;\n+  }\n+  gdv_int32 abs_precision = -precision;\n+  // This is to ensure that there is no overflow while calculating 10^precision, 9 is\n+  // the smallest N for which 10^N does not fit into 32 bits, so we can safely return 0\n+  if (abs_precision > 9) {\n+    return 0;\n+  }\n+  gdv_int32 power_of_10 = static_cast<gdv_int32>(get_power_of_10(abs_precision));\n+  gdv_int32 remainder = number % power_of_10, quotient = number / power_of_10;\n+  // if the fractional part of the quotient >= 0.5, round to next higher integer\n+  if (remainder >= power_of_10 / 2) {\n+    quotient++;\n+  }\n+  return quotient * power_of_10;\n+}\n+\n+FORCE_INLINE\n+gdv_int64 round_int64_int32(gdv_int64 number, gdv_int32 precision) {\n+  // for long integers, there is nothing following the decimal point,\n+  // so round() always returns the same number if precision >= 0\n+  if (precision >= 0 || number == 0) {\n\nReview comment:\n       I don't think number == 0 is needed?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T06:02:07.038+0000",
                    "updated": "2020-08-19T06:02:07.038+0000",
                    "started": "2020-08-19T06:02:07.038+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472317",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/475649",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sagnikc-dremio commented on a change in pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#discussion_r478803356\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -111,6 +112,76 @@ LOG_WITH_BASE(float64, float64, float64)\n \n POWER(float64, float64, float64)\n \n+FORCE_INLINE\n+gdv_int32 round_int32_int32(gdv_int32 number, gdv_int32 precision) {\n+  // for integers, there is nothing following the decimal point,\n+  // so round() always returns the same number if precision >= 0\n+  if (precision >= 0 || number == 0) {\n+    return number;\n+  }\n+  gdv_int32 abs_precision = -precision;\n+  // This is to ensure that there is no overflow while calculating 10^precision, 9 is\n+  // the smallest N for which 10^N does not fit into 32 bits, so we can safely return 0\n+  if (abs_precision > 9) {\n+    return 0;\n+  }\n+  gdv_int32 power_of_10 = static_cast<gdv_int32>(get_power_of_10(abs_precision));\n+  gdv_int32 remainder = number % power_of_10, quotient = number / power_of_10;\n+  // if the fractional part of the quotient >= 0.5, round to next higher integer\n+  if (remainder >= power_of_10 / 2) {\n+    quotient++;\n+  }\n+  return quotient * power_of_10;\n+}\n+\n+FORCE_INLINE\n+gdv_int64 round_int64_int32(gdv_int64 number, gdv_int32 precision) {\n+  // for long integers, there is nothing following the decimal point,\n+  // so round() always returns the same number if precision >= 0\n+  if (precision >= 0 || number == 0) {\n+    return number;\n+  }\n+  gdv_int32 abs_precision = -precision;\n+  // This is to ensure that there is no overflow while calculating 10^precision, 19 is\n+  // the smallest N for which 10^N does not fit into 64 bits, so we can safely return 0\n+  if (abs_precision > 18) {\n+    return 0;\n+  }\n+  gdv_int64 power_of_10 = get_power_of_10(abs_precision);\n+  gdv_int64 remainder = number % power_of_10, quotient = number / power_of_10;\n\nReview comment:\n       What is your concern regarding negative numbers? As far as the unit tests with negative numbers are concerned, verified that the output is expected. Do you think more unit tests should be added?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-28T02:59:03.673+0000",
                    "updated": "2020-08-28T02:59:03.673+0000",
                    "started": "2020-08-28T02:59:03.673+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "475649",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/475652",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sagnikc-dremio commented on pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#issuecomment-682297850\n\n\n   > With the two changes mentioned round_int32_int32 can be vectorized.\r\n   > \r\n   > https://godbolt.org/z/fabEn6\r\n   > \r\n   > With LLVM it actually doesn't necessarily seem to matter.\r\n   \r\n   With the vectorized round_int32_int32, why are we passing -5 as the second argument? Would be glad if you could clarify.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-28T03:01:22.755+0000",
                    "updated": "2020-08-28T03:01:22.755+0000",
                    "started": "2020-08-28T03:01:22.755+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "475652",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/475653",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#discussion_r478803947\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -111,6 +112,76 @@ LOG_WITH_BASE(float64, float64, float64)\n \n POWER(float64, float64, float64)\n \n+FORCE_INLINE\n+gdv_int32 round_int32_int32(gdv_int32 number, gdv_int32 precision) {\n+  // for integers, there is nothing following the decimal point,\n+  // so round() always returns the same number if precision >= 0\n+  if (precision >= 0 || number == 0) {\n+    return number;\n+  }\n+  gdv_int32 abs_precision = -precision;\n+  // This is to ensure that there is no overflow while calculating 10^precision, 9 is\n+  // the smallest N for which 10^N does not fit into 32 bits, so we can safely return 0\n+  if (abs_precision > 9) {\n+    return 0;\n+  }\n+  gdv_int32 power_of_10 = static_cast<gdv_int32>(get_power_of_10(abs_precision));\n+  gdv_int32 remainder = number % power_of_10, quotient = number / power_of_10;\n+  // if the fractional part of the quotient >= 0.5, round to next higher integer\n+  if (remainder >= power_of_10 / 2) {\n+    quotient++;\n+  }\n+  return quotient * power_of_10;\n+}\n+\n+FORCE_INLINE\n+gdv_int64 round_int64_int32(gdv_int64 number, gdv_int32 precision) {\n+  // for long integers, there is nothing following the decimal point,\n+  // so round() always returns the same number if precision >= 0\n+  if (precision >= 0 || number == 0) {\n+    return number;\n+  }\n+  gdv_int32 abs_precision = -precision;\n+  // This is to ensure that there is no overflow while calculating 10^precision, 19 is\n+  // the smallest N for which 10^N does not fit into 64 bits, so we can safely return 0\n+  if (abs_precision > 18) {\n+    return 0;\n+  }\n+  gdv_int64 power_of_10 = get_power_of_10(abs_precision);\n+  gdv_int64 remainder = number % power_of_10, quotient = number / power_of_10;\n\nReview comment:\n       no, I think that is fine.  I just didn't attempt to analyze all cases in my head, if unit tests pass I think this is OK.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-28T03:01:25.647+0000",
                    "updated": "2020-08-28T03:01:25.647+0000",
                    "started": "2020-08-28T03:01:25.647+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "475653",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/475655",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#issuecomment-682300209\n\n\n   > With the vectorized round_int32_int32, why are we passing -5 as the second argument? Would be glad if you could clarify.\r\n   \r\n   I wanted to verify that with a static value, the function could get the multiplications necessary vectorized, since I believe this is the common case, -5 was arbitrary.  With a variable value it does not appear that the multiplications get vectorized.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-28T03:10:25.383+0000",
                    "updated": "2020-08-28T03:10:25.383+0000",
                    "started": "2020-08-28T03:10:25.383+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "475655",
                    "issueId": "13320790"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/worklog/475675",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7885:\nURL: https://github.com/apache/arrow/pull/7885#discussion_r478826768\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops_test.cc\n##########\n@@ -87,6 +87,22 @@ TEST(TestExtendedMathOps, TestLogWithBase) {\n   EXPECT_EQ(context1.has_error(), false);\n }\n \n+TEST(TestExtendedMathOps, TestRound) {\n+  EXPECT_EQ(round_int32_int32(85, -1), 90);\n\nReview comment:\n       @sagnikc-dremio this was what I referring to on my previous testing comments, do these seem reasonable?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-28T04:41:17.958+0000",
                    "updated": "2020-08-28T04:41:17.958+0000",
                    "started": "2020-08-28T04:41:17.958+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "475675",
                    "issueId": "13320790"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": 14400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4a750c95[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@41401563[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7cba4b63[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3d10b29a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2d645343[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7c1046d1[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@52dfeb63[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6a6317c0[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6592bf84[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1bca4b29[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@36632fc0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@444cf3db[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 14400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Sep 30 10:31:20 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-09-30T10:31:20.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9640/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-08-04T05:56:53.000+0000",
        "updated": "2020-10-06T17:40:49.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 14400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Implement round() for integers and long integers",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13320790/comment/17204634",
                    "id": "17204634",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=praveenbingo",
                        "name": "praveenbingo",
                        "key": "praveenbingo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Praveen Kumar",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 7885\n[https://github.com/apache/arrow/pull/7885]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=praveenbingo",
                        "name": "praveenbingo",
                        "key": "praveenbingo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Praveen Kumar",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-09-30T10:31:20.946+0000",
                    "updated": "2020-09-30T10:31:20.946+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0hg1c:",
        "customfield_12314139": null
    }
}