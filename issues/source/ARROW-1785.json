{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13117385",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385",
    "key": "ARROW-1785",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12519718",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12519718",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13110997",
                    "key": "ARROW-1693",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110997",
                    "fields": {
                        "summary": "[JS] Error reading dictionary-encoded integration test files",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328932",
                "id": "12328932",
                "name": "Format"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1785/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@674b4d8f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e651999[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5faa053f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@39656682[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e653dcb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3c69cbc7[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3365b288[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@21a68310[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56da698a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@249fb765[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3af0a08c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2f5b1ac1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Dec 04 22:52:57 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-12-04T22:52:54.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1785/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-11-09T20:10:19.000+0000",
        "updated": "2017-12-04T22:52:57.000+0000",
        "timeoriginalestimate": null,
        "description": "Based on the discussions on the mailing list, we should remove the VectorLayout metadata from the Flatbuffers spec for 0.8.0 since we are already breaking the metadata. We should instead make the buffer layouts an immutable part of the format specification so there is no ambiguity about what buffers accompany each type of field in an Arrow payload\r\n\r\nsee also ARROW-1693",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Format/C++/Java] Remove VectorLayout metadata from Flatbuffers metadata",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16246577",
                    "id": "16246577",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm opened a new pull request #1297: WIP ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297\n \n \n   What's here so far removes this code from the Flatbuffers schema and the C++ implementation. This logic is a little bit entangled on the Java side, I need some help from @icexelloss or @BryanCutler or @julienledem or someone else to handle the Java refactoring. It might be easiest to preserve the ArrowVectorType/TypeLayout/VectorLayout objects for now but simply remove the Flatbuffers dependency (we do need the names of the vectors in the JSON files used for integration testing)\r\n   \r\n   cc @trxcllnt since we may want to roll in the JS changes in this patch\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-09T21:30:19.297+0000",
                    "updated": "2017-11-09T21:30:19.297+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16246663",
                    "id": "16246663",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "trxcllnt commented on issue #1297: WIP ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-343309227\n \n \n   @wesm I'll regenerate the JS flatbuffers locally, and add to #1294. I have a bunch of little questions about the layouts for each type, but I'll ping you over email/slack to get the details.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-09T22:14:24.118+0000",
                    "updated": "2017-11-09T22:14:24.118+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16247993",
                    "id": "16247993",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on issue #1297: WIP ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-343572816\n \n \n   I can take a look at this. My understanding is we want to remove vector layout from metadata and assume buffer ordering (validity, data) and (validity, offset, data) in readers, is that correct?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-10T20:06:04.842+0000",
                    "updated": "2017-11-10T20:06:04.842+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16248036",
                    "id": "16248036",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1297: WIP ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-343587306\n \n \n   Right. Unfortunately the Java implementation (including the JSON reader/writer) is a bit intertwined with the Flatbuffers \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-10T21:11:18.782+0000",
                    "updated": "2017-11-10T21:11:18.782+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16248074",
                    "id": "16248074",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on issue #1297: WIP ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-343597903\n \n \n   Gee, also the concurrent patches that touch reader/writer is getting a bit out of control.\r\n   \r\n   https://github.com/apache/arrow/pull/1290\r\n   https://github.com/apache/arrow/pull/1259\r\n   \r\n   And this one. cc @siddharthteotia @BryanCutler.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-10T21:56:26.970+0000",
                    "updated": "2017-11-10T21:56:26.970+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16248615",
                    "id": "16248615",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1297: WIP ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-343683981\n \n \n   I think here I would like to touch the bare minimum of Java code to remove the dependence on the Flatbuffers. I can try to do this today so not impact the java-vector-refactor branch\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-11T18:18:39.144+0000",
                    "updated": "2017-11-11T18:18:39.144+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16248706",
                    "id": "16248706",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1297: WIP ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-343698351\n \n \n   This is a fairly invasive refactor. I don't have the skills or time to do the Java work, someone else is going to have to help. Having the Java object model tightly coupled to the Flatbuffers schemas is not great. I hope we can fix that\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-11T22:26:21.512+0000",
                    "updated": "2017-11-11T22:26:21.512+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16248901",
                    "id": "16248901",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on issue #1297: WIP ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-343745880\n \n \n   I can take a look at Java side next week.\n   On Sat, Nov 11, 2017 at 5:26 PM Wes McKinney <notifications@github.com>\n   wrote:\n   \n   > This is a fairly invasive refactor. I don't have the skills or time to do\n   > the Java work, someone else is going to have to help. Having the Java\n   > object model tightly coupled to the Flatbuffers schemas is not great. I\n   > hope we can fix that\n   >\n   > \u2014\n   > You are receiving this because you were mentioned.\n   > Reply to this email directly, view it on GitHub\n   > <https://github.com/apache/arrow/pull/1297#issuecomment-343698351>, or mute\n   > the thread\n   > <https://github.com/notifications/unsubscribe-auth/AAwbrLP9Sfnc8pTU3npjsVjhBQRuJucVks5s1h8LgaJpZM4QYr61>\n   > .\n   >\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-12T15:42:49.556+0000",
                    "updated": "2017-11-12T15:42:49.556+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16250356",
                    "id": "16250356",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on issue #1297: WIP ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-344078133\n \n \n   @wesm I took a look today. The change does't seem to be too bad. However, json reader probably needs the new vector class hierarchy (BaseNullableFixedWidthVector, BaseNullableVariableWidthVector) to determine the expected layout.\r\n   \r\n   So it's probably best either wait until java-refactor gets merged to master or do it on java-refactor branch. cc @siddharthteotia \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-13T22:19:22.658+0000",
                    "updated": "2017-11-13T22:19:22.658+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16250672",
                    "id": "16250672",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1297: WIP ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-344123614\n \n \n   Cool, since the merge seems likely this week, we can just wait. thanks!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-14T02:14:25.375+0000",
                    "updated": "2017-11-14T02:14:25.375+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16255985",
                    "id": "16255985",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1297: WIP ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-345066119\n \n \n   I'll rebase this, then I think we can do the Java work and merge this\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-16T21:20:13.752+0000",
                    "updated": "2017-11-16T21:20:13.752+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16256066",
                    "id": "16256066",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1297: WIP ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-345083490\n \n \n   Rebased\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-16T22:28:28.123+0000",
                    "updated": "2017-11-16T22:28:28.123+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16266183",
                    "id": "16266183",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1297: WIP ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-347037596\n \n \n   Can someone look at this early this coming week? We should not release 0.8.0 without this\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-26T20:54:46.398+0000",
                    "updated": "2017-11-26T20:54:46.398+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16267004",
                    "id": "16267004",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on issue #1297: WIP ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-347232695\n \n \n   @wesm, I am at pydata today but I will try to take a look later today or tomorrow.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-27T16:13:45.071+0000",
                    "updated": "2017-11-27T16:13:45.071+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16271594",
                    "id": "16271594",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1297: ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-348008837\n \n \n   @siddharthteotia can you review this? This is the last format-related change required for 0.8.0\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-29T21:52:55.961+0000",
                    "updated": "2017-11-29T21:52:55.961+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16275105",
                    "id": "16275105",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on issue #1297: ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-348632457\n \n \n   Looks like the java side of changes are messed up because of rebase commits? I am seeing code changes (like removal of non-nullable vectors) and those are not the java changes made by this PR. It is hard to make out what are we doing on the JAVA side as far this PR is concerned.\r\n   \r\n   I can see that ArrowVectorType  and VectorLayout have been removed and we are using BufferType and BufferLayout instead. Is that correct? \r\n   \r\n   I believe that these objects are still part of serialized schema -- it's just that names have changed.  Instead of ArrowVectorType, we have BufferType and instead of VectorLayout we have BufferLayout. Is the correct summary of JAVA side changes?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-01T22:35:12.969+0000",
                    "updated": "2017-12-01T22:35:12.969+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16275115",
                    "id": "16275115",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on issue #1297: ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-348632457\n \n \n   Looks like the java side of changes are messed up because of rebase commits? I am seeing code changes (like removal of non-nullable vectors) and those are not the java changes made by this PR. It is hard to make out what are we doing on the JAVA side as far this PR is concerned.\r\n   \r\n   I can see that ArrowVectorType  and VectorLayout have been removed and we are using BufferType and BufferLayout instead. Is that correct? \r\n   \r\n   I believe that these objects are still part of serialized schema -- it's just that names have changed.  Instead of ArrowVectorType, we have BufferType and instead of VectorLayout we have BufferLayout. Is this the correct summary of JAVA side changes?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-01T22:41:17.866+0000",
                    "updated": "2017-12-01T22:41:17.866+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16275145",
                    "id": "16275145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on issue #1297: ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-348637341\n \n \n   @siddharthteotia `VectorLayout` and `TypeLayout` are no longer part of the serialized schema. \r\n   \r\n   `VectorLayout` and `ArrowVectorType` are renamed to `BufferLayout` and `BufferType` and they are just internal classes now. \r\n   \r\n   Other changes to Java are to Reader/Writer classes 0- they no longer read/write type layout when reading/writing schema.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-01T23:03:07.288+0000",
                    "updated": "2017-12-01T23:03:07.288+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16275346",
                    "id": "16275346",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1297: ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-348656530\n \n \n   Rebased, apologies for the diff noise\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-02T01:26:31.604+0000",
                    "updated": "2017-12-02T01:26:31.604+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16277060",
                    "id": "16277060",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1297: ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#discussion_r154705264\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n ##########\n @@ -454,7 +454,7 @@ public void testNestedListVector() throws Exception {\n       /* allocate memory */\n       listWriter.allocate();\n \n-      /* the dataVector that backs a listVector will also be a\n+      /* the dataBuffer that backs a listVector will also be a\n \n Review comment:\n   Maybe some of these code comment changes aren't quite right?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-04T16:48:29.325+0000",
                    "updated": "2017-12-04T16:48:29.325+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16277063",
                    "id": "16277063",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1297: ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#discussion_r154705929\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n ##########\n @@ -454,7 +454,7 @@ public void testNestedListVector() throws Exception {\n       /* allocate memory */\n       listWriter.allocate();\n \n-      /* the dataVector that backs a listVector will also be a\n+      /* the dataBuffer that backs a listVector will also be a\n \n Review comment:\n   These are likely done be the IDE, I will double check.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-04T16:49:29.285+0000",
                    "updated": "2017-12-04T16:49:29.285+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16277087",
                    "id": "16277087",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1297: ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#discussion_r154710037\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n ##########\n @@ -454,7 +454,7 @@ public void testNestedListVector() throws Exception {\n       /* allocate memory */\n       listWriter.allocate();\n \n-      /* the dataVector that backs a listVector will also be a\n+      /* the dataBuffer that backs a listVector will also be a\n \n Review comment:\n   Fixed here https://github.com/wesm/arrow/pull/3\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-04T17:02:46.315+0000",
                    "updated": "2017-12-04T17:02:46.315+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16277697",
                    "id": "16277697",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on issue #1297: ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-349133588\n \n \n   +1\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-04T22:51:02.095+0000",
                    "updated": "2017-12-04T22:51:02.095+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16277702",
                    "id": "16277702",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1297: ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297#issuecomment-349133965\n \n \n   Thanks all!!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-04T22:52:47.405+0000",
                    "updated": "2017-12-04T22:52:47.405+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16277703",
                    "id": "16277703",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1297\n[https://github.com/apache/arrow/pull/1297]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-12-04T22:52:54.881+0000",
                    "updated": "2017-12-04T22:52:54.881+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117385/comment/16277704",
                    "id": "16277704",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1297: ARROW-1785: [Format/C++/Java] Remove VectorLayout from serialized schemas\nURL: https://github.com/apache/arrow/pull/1297\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/ipc/json-internal.cc b/cpp/src/arrow/ipc/json-internal.cc\nindex bfb3d282d..11a6956eb 100644\n--- a/cpp/src/arrow/ipc/json-internal.cc\n+++ b/cpp/src/arrow/ipc/json-internal.cc\n@@ -43,22 +43,6 @@ namespace ipc {\n namespace json {\n namespace internal {\n \n-static std::string GetBufferTypeName(BufferType type) {\n-  switch (type) {\n-    case BufferType::DATA:\n-      return \"DATA\";\n-    case BufferType::OFFSET:\n-      return \"OFFSET\";\n-    case BufferType::TYPE:\n-      return \"TYPE\";\n-    case BufferType::VALIDITY:\n-      return \"VALIDITY\";\n-    default:\n-      break;\n-  }\n-  return \"UNKNOWN\";\n-}\n-\n static std::string GetFloatingPrecisionName(FloatingPoint::Precision precision) {\n   switch (precision) {\n     case FloatingPoint::HALF:\n@@ -174,12 +158,9 @@ class SchemaWriter {\n       RETURN_NOT_OK(WriteDictionaryMetadata(dict_type));\n \n       const DataType& dictionary_type = *dict_type.dictionary()->type();\n-      const DataType& index_type = *dict_type.index_type();\n       RETURN_NOT_OK(WriteChildren(dictionary_type.children()));\n-      WriteBufferLayout(index_type.GetBufferLayout());\n     } else {\n       RETURN_NOT_OK(WriteChildren(type.children()));\n-      WriteBufferLayout(type.GetBufferLayout());\n     }\n \n     writer_->EndObject();\n@@ -301,26 +282,6 @@ class SchemaWriter {\n     return Status::OK();\n   }\n \n-  void WriteBufferLayout(const std::vector<BufferDescr>& buffer_layout) {\n-    writer_->Key(\"typeLayout\");\n-    writer_->StartObject();\n-    writer_->Key(\"vectors\");\n-    writer_->StartArray();\n-\n-    for (const BufferDescr& buffer : buffer_layout) {\n-      writer_->StartObject();\n-      writer_->Key(\"type\");\n-      writer_->String(GetBufferTypeName(buffer.type()));\n-\n-      writer_->Key(\"typeBitWidth\");\n-      writer_->Int(buffer.bit_width());\n-\n-      writer_->EndObject();\n-    }\n-    writer_->EndArray();\n-    writer_->EndObject();\n-  }\n-\n   Status WriteChildren(const std::vector<std::shared_ptr<Field>>& children) {\n     writer_->Key(\"children\");\n     writer_->StartArray();\ndiff --git a/cpp/src/arrow/ipc/metadata-internal.cc b/cpp/src/arrow/ipc/metadata-internal.cc\nindex 05202ea93..af1d6c851 100644\n--- a/cpp/src/arrow/ipc/metadata-internal.cc\n+++ b/cpp/src/arrow/ipc/metadata-internal.cc\n@@ -54,7 +54,6 @@ using DictionaryOffset = flatbuffers::Offset<flatbuf::DictionaryEncoding>;\n using FieldOffset = flatbuffers::Offset<flatbuf::Field>;\n using KeyValueOffset = flatbuffers::Offset<flatbuf::KeyValue>;\n using RecordBatchOffset = flatbuffers::Offset<flatbuf::RecordBatch>;\n-using VectorLayoutOffset = flatbuffers::Offset<arrow::flatbuf::VectorLayout>;\n using Offset = flatbuffers::Offset<void>;\n using FBString = flatbuffers::Offset<flatbuffers::String>;\n \n@@ -341,34 +340,8 @@ static Status TypeFromFlatbuffer(flatbuf::Type type, const void* type_data,\n // TODO(wesm): Convert this to visitor pattern\n static Status TypeToFlatbuffer(FBB& fbb, const DataType& type,\n                                std::vector<FieldOffset>* children,\n-                               std::vector<VectorLayoutOffset>* layout,\n                                flatbuf::Type* out_type, DictionaryMemo* dictionary_memo,\n                                Offset* offset) {\n-  std::vector<BufferDescr> buffer_layout = type.GetBufferLayout();\n-  for (const BufferDescr& descr : buffer_layout) {\n-    flatbuf::VectorType vector_type;\n-    switch (descr.type()) {\n-      case BufferType::OFFSET:\n-        vector_type = flatbuf::VectorType_OFFSET;\n-        break;\n-      case BufferType::DATA:\n-        vector_type = flatbuf::VectorType_DATA;\n-        break;\n-      case BufferType::VALIDITY:\n-        vector_type = flatbuf::VectorType_VALIDITY;\n-        break;\n-      case BufferType::TYPE:\n-        vector_type = flatbuf::VectorType_TYPE;\n-        break;\n-      default:\n-        vector_type = flatbuf::VectorType_DATA;\n-        break;\n-    }\n-    auto offset = flatbuf::CreateVectorLayout(\n-        fbb, static_cast<int16_t>(descr.bit_width()), vector_type);\n-    layout->push_back(offset);\n-  }\n-\n   const DataType* value_type = &type;\n \n   if (type.id() == Type::DICTIONARY) {\n@@ -543,14 +516,11 @@ static Status FieldToFlatbuffer(FBB& fbb, const Field& field,\n \n   flatbuf::Type type_enum;\n   Offset type_offset;\n-  Offset type_layout;\n   std::vector<FieldOffset> children;\n-  std::vector<VectorLayoutOffset> layout;\n \n-  RETURN_NOT_OK(TypeToFlatbuffer(fbb, *field.type(), &children, &layout, &type_enum,\n+  RETURN_NOT_OK(TypeToFlatbuffer(fbb, *field.type(), &children, &type_enum,\n                                  dictionary_memo, &type_offset));\n   auto fb_children = fbb.CreateVector(children);\n-  auto fb_layout = fbb.CreateVector(layout);\n \n   DictionaryOffset dictionary = 0;\n   if (field.type()->id() == Type::DICTIONARY) {\n@@ -560,7 +530,7 @@ static Status FieldToFlatbuffer(FBB& fbb, const Field& field,\n \n   // TODO: produce the list of VectorTypes\n   *offset = flatbuf::CreateField(fbb, fb_name, field.nullable(), type_enum, type_offset,\n-                                 dictionary, fb_children, fb_layout);\n+                                 dictionary, fb_children);\n \n   return Status::OK();\n }\ndiff --git a/cpp/src/arrow/type.cc b/cpp/src/arrow/type.cc\nindex ae1711832..31ad53458 100644\n--- a/cpp/src/arrow/type.cc\n+++ b/cpp/src/arrow/type.cc\n@@ -474,43 +474,6 @@ std::shared_ptr<DataType> decimal(int32_t precision, int32_t scale) {\n   return std::make_shared<Decimal128Type>(precision, scale);\n }\n \n-static const BufferDescr kValidityBuffer(BufferType::VALIDITY, 1);\n-static const BufferDescr kOffsetBuffer(BufferType::OFFSET, 32);\n-static const BufferDescr kTypeBuffer(BufferType::TYPE, 32);\n-static const BufferDescr kBooleanBuffer(BufferType::DATA, 1);\n-static const BufferDescr kValues64(BufferType::DATA, 64);\n-static const BufferDescr kValues32(BufferType::DATA, 32);\n-static const BufferDescr kValues16(BufferType::DATA, 16);\n-static const BufferDescr kValues8(BufferType::DATA, 8);\n-\n-std::vector<BufferDescr> FixedWidthType::GetBufferLayout() const {\n-  return {kValidityBuffer, BufferDescr(BufferType::DATA, bit_width())};\n-}\n-\n-std::vector<BufferDescr> NullType::GetBufferLayout() const { return {}; }\n-\n-std::vector<BufferDescr> BinaryType::GetBufferLayout() const {\n-  return {kValidityBuffer, kOffsetBuffer, kValues8};\n-}\n-\n-std::vector<BufferDescr> FixedSizeBinaryType::GetBufferLayout() const {\n-  return {kValidityBuffer, BufferDescr(BufferType::DATA, bit_width())};\n-}\n-\n-std::vector<BufferDescr> ListType::GetBufferLayout() const {\n-  return {kValidityBuffer, kOffsetBuffer};\n-}\n-\n-std::vector<BufferDescr> StructType::GetBufferLayout() const { return {kValidityBuffer}; }\n-\n-std::vector<BufferDescr> UnionType::GetBufferLayout() const {\n-  if (mode_ == UnionMode::SPARSE) {\n-    return {kValidityBuffer, kTypeBuffer};\n-  } else {\n-    return {kValidityBuffer, kTypeBuffer, kOffsetBuffer};\n-  }\n-}\n-\n std::string Decimal128Type::ToString() const {\n   std::stringstream s;\n   s << \"decimal(\" << precision_ << \", \" << scale_ << \")\";\ndiff --git a/cpp/src/arrow/type.h b/cpp/src/arrow/type.h\nindex 8dcc1592d..009e07db0 100644\n--- a/cpp/src/arrow/type.h\n+++ b/cpp/src/arrow/type.h\n@@ -133,20 +133,6 @@ struct Type {\n   };\n };\n \n-enum class BufferType : char { DATA, OFFSET, TYPE, VALIDITY };\n-\n-class BufferDescr {\n- public:\n-  BufferDescr(BufferType type, int bit_width) : type_(type), bit_width_(bit_width) {}\n-\n-  BufferType type() const { return type_; }\n-  int bit_width() const { return bit_width_; }\n-\n- private:\n-  BufferType type_;\n-  int bit_width_;\n-};\n-\n class ARROW_EXPORT DataType {\n  public:\n   explicit DataType(Type::type id) : id_(id) {}\n@@ -176,8 +162,6 @@ class ARROW_EXPORT DataType {\n   /// \\since 0.7.0\n   virtual std::string name() const = 0;\n \n-  virtual std::vector<BufferDescr> GetBufferLayout() const = 0;\n-\n   Type::type id() const { return id_; }\n \n  protected:\n@@ -201,8 +185,6 @@ class ARROW_EXPORT FixedWidthType : public DataType {\n   using DataType::DataType;\n \n   virtual int bit_width() const = 0;\n-\n-  std::vector<BufferDescr> GetBufferLayout() const override;\n };\n \n class ARROW_EXPORT PrimitiveCType : public FixedWidthType {\n@@ -319,8 +301,6 @@ class ARROW_EXPORT NullType : public DataType, public NoExtraMeta {\n   std::string ToString() const override;\n \n   std::string name() const override { return \"null\"; }\n-\n-  std::vector<BufferDescr> GetBufferLayout() const override;\n };\n \n class ARROW_EXPORT BooleanType : public FixedWidthType, public NoExtraMeta {\n@@ -425,8 +405,6 @@ class ARROW_EXPORT ListType : public NestedType {\n   std::string ToString() const override;\n \n   std::string name() const override { return \"list\"; }\n-\n-  std::vector<BufferDescr> GetBufferLayout() const override;\n };\n \n // BinaryType type is represents lists of 1-byte values.\n@@ -440,8 +418,6 @@ class ARROW_EXPORT BinaryType : public DataType, public NoExtraMeta {\n   std::string ToString() const override;\n   std::string name() const override { return \"binary\"; }\n \n-  std::vector<BufferDescr> GetBufferLayout() const override;\n-\n  protected:\n   // Allow subclasses to change the logical type.\n   explicit BinaryType(Type::type logical_type) : DataType(logical_type) {}\n@@ -461,8 +437,6 @@ class ARROW_EXPORT FixedSizeBinaryType : public FixedWidthType, public Parametri\n   std::string ToString() const override;\n   std::string name() const override { return \"fixed_size_binary\"; }\n \n-  std::vector<BufferDescr> GetBufferLayout() const override;\n-\n   int32_t byte_width() const { return byte_width_; }\n   int bit_width() const override;\n \n@@ -494,8 +468,6 @@ class ARROW_EXPORT StructType : public NestedType {\n   Status Accept(TypeVisitor* visitor) const override;\n   std::string ToString() const override;\n   std::string name() const override { return \"struct\"; }\n-\n-  std::vector<BufferDescr> GetBufferLayout() const override;\n };\n \n class ARROW_EXPORT DecimalType : public FixedSizeBinaryType {\n@@ -541,8 +513,6 @@ class ARROW_EXPORT UnionType : public NestedType {\n   std::string name() const override { return \"union\"; }\n   Status Accept(TypeVisitor* visitor) const override;\n \n-  std::vector<BufferDescr> GetBufferLayout() const override;\n-\n   const std::vector<uint8_t>& type_codes() const { return type_codes_; }\n \n   UnionMode::type mode() const { return mode_; }\ndiff --git a/format/Schema.fbs b/format/Schema.fbs\nindex 6021e92b8..3d739342b 100644\n--- a/format/Schema.fbs\n+++ b/format/Schema.fbs\n@@ -211,32 +211,6 @@ union Type {\n   Map\n }\n \n-/// ----------------------------------------------------------------------\n-/// The possible types of a vector\n-\n-enum VectorType: short {\n-  /// used in List type, Dense Union and variable length primitive types (String, Binary)\n-  OFFSET,\n-  /// actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n-  DATA,\n-  /// Bit vector indicating if each value is null\n-  VALIDITY,\n-  /// Type vector used in Union type\n-  TYPE\n-}\n-\n-/// ----------------------------------------------------------------------\n-/// represents the physical layout of a buffer\n-/// buffers have fixed width slots of a given type\n-\n-table VectorLayout {\n-  /// the width of a slot in the buffer (typically 1, 8, 16, 32 or 64)\n-  bit_width: short;\n-  /// the purpose of the vector\n-  type: VectorType;\n-}\n-\n-\n /// ----------------------------------------------------------------------\n /// user defined key value pairs to add custom metadata to arrow\n /// key namespacing is the responsibility of the user\n@@ -285,10 +259,7 @@ table Field {\n \n   // children apply only to Nested data types like Struct, List and Union\n   children: [Field];\n-  /// layout of buffers produced for this type (as derived from the Type)\n-  /// does not include children\n-  /// each recordbatch will return instances of those Buffers.\n-  layout: [ VectorLayout ];\n+\n   // User-defined metadata\n   custom_metadata: [ KeyValue ];\n }\ndiff --git a/integration/data/simple.json b/integration/data/simple.json\nindex bc8949912..663472919 100644\n--- a/integration/data/simple.json\n+++ b/integration/data/simple.json\n@@ -4,36 +4,20 @@\n       {\n         \"name\": \"foo\",\n         \"type\": {\"name\": \"int\", \"isSigned\": true, \"bitWidth\": 32},\n-        \"nullable\": true, \"children\": [],\n-        \"typeLayout\": {\n-          \"vectors\": [\n-            {\"type\": \"VALIDITY\", \"typeBitWidth\": 1},\n-            {\"type\": \"DATA\", \"typeBitWidth\": 32}\n-          ]\n-        }\n+        \"nullable\": true,\n+        \"children\": []\n       },\n       {\n         \"name\": \"bar\",\n         \"type\": {\"name\": \"floatingpoint\", \"precision\": \"DOUBLE\"},\n-        \"nullable\": true, \"children\": [],\n-        \"typeLayout\": {\n-          \"vectors\": [\n-            {\"type\": \"VALIDITY\", \"typeBitWidth\": 1},\n-            {\"type\": \"DATA\", \"typeBitWidth\": 64}\n-          ]\n-        }\n+        \"nullable\": true,\n+        \"children\": []\n       },\n       {\n         \"name\": \"baz\",\n         \"type\": {\"name\": \"utf8\"},\n-        \"nullable\": true, \"children\": [],\n-        \"typeLayout\": {\n-          \"vectors\": [\n-            {\"type\": \"VALIDITY\", \"typeBitWidth\": 1},\n-            {\"type\": \"OFFSET\", \"typeBitWidth\": 32},\n-            {\"type\": \"DATA\", \"typeBitWidth\": 8}\n-          ]\n-        }\n+        \"nullable\": true,\n+        \"children\": []\n       }\n     ]\n   },\ndiff --git a/integration/data/struct_example.json b/integration/data/struct_example.json\nindex 3ea062db7..4e6cc774e 100644\n--- a/integration/data/struct_example.json\n+++ b/integration/data/struct_example.json\n@@ -16,19 +16,7 @@\n               \"bitWidth\": 32\n             },\n             \"nullable\": true,\n-            \"children\": [],\n-            \"typeLayout\": {\n-              \"vectors\": [\n-                {\n-                  \"type\": \"VALIDITY\",\n-                  \"typeBitWidth\": 1\n-                },\n-                {\n-                  \"type\": \"DATA\",\n-                  \"typeBitWidth\": 32\n-                }\n-              ]\n-            }\n+            \"children\": []\n           },\n           {\n             \"name\": \"f2\",\n@@ -36,33 +24,9 @@\n               \"name\": \"utf8\"\n             },\n             \"nullable\": true,\n-            \"children\": [],\n-            \"typeLayout\": {\n-              \"vectors\": [\n-                {\n-                  \"type\": \"VALIDITY\",\n-                  \"typeBitWidth\": 1\n-                },\n-                {\n-                  \"type\": \"OFFSET\",\n-                  \"typeBitWidth\": 32\n-                },\n-                {\n-                  \"type\": \"DATA\",\n-                  \"typeBitWidth\": 8\n-                }\n-              ]\n-            }\n+            \"children\": []\n           }\n-        ],\n-        \"typeLayout\": {\n-          \"vectors\": [\n-            {\n-              \"type\": \"VALIDITY\",\n-              \"typeBitWidth\": 1\n-            }\n-          ]\n-        }\n+        ]\n       }\n     ]\n   },\n@@ -234,4 +198,4 @@\n       ]\n     }\n   ]\n-}\n\\ No newline at end of file\n+}\ndiff --git a/integration/integration_test.py b/integration/integration_test.py\nindex a063fb36f..5468ab19d 100644\n--- a/integration/integration_test.py\n+++ b/integration/integration_test.py\n@@ -111,8 +111,7 @@ def get_json(self):\n             ('name', self.name),\n             ('type', self._get_type()),\n             ('nullable', self.nullable),\n-            ('children', self._get_children()),\n-            ('typeLayout', self._get_type_layout())\n+            ('children', self._get_children())\n         ])\n \n     def _make_is_valid(self, size):\n@@ -158,14 +157,6 @@ class PrimitiveType(DataType):\n     def _get_children(self):\n         return []\n \n-    def _get_type_layout(self):\n-        return OrderedDict([\n-            ('vectors',\n-             [OrderedDict([('type', 'VALIDITY'),\n-                           ('typeBitWidth', 1)]),\n-              OrderedDict([('type', 'DATA'),\n-                           ('typeBitWidth', self.bit_width)])])])\n-\n \n class PrimitiveColumn(Column):\n \n@@ -402,14 +393,6 @@ def _get_type(self):\n             ('scale', self.scale),\n         ])\n \n-    def _get_type_layout(self):\n-        return OrderedDict([\n-            ('vectors',\n-             [OrderedDict([('type', 'VALIDITY'),\n-                           ('typeBitWidth', 1)]),\n-              OrderedDict([('type', 'DATA'),\n-                           ('typeBitWidth', self.bit_width)])])])\n-\n     def generate_column(self, size, name=None):\n         min_value, max_value = decimal_range_from_precision(self.precision)\n         values = [random.randint(min_value, max_value) for _ in range(size)]\n@@ -461,16 +444,6 @@ def column_class(self):\n     def _get_type(self):\n         return OrderedDict([('name', 'binary')])\n \n-    def _get_type_layout(self):\n-        return OrderedDict([\n-            ('vectors',\n-             [OrderedDict([('type', 'VALIDITY'),\n-                           ('typeBitWidth', 1)]),\n-              OrderedDict([('type', 'OFFSET'),\n-                           ('typeBitWidth', 32)]),\n-              OrderedDict([('type', 'DATA'),\n-                           ('typeBitWidth', 8)])])])\n-\n     def generate_column(self, size, name=None):\n         K = 7\n         is_valid = self._make_is_valid(size)\n@@ -572,14 +545,6 @@ def _get_type(self):\n     def _get_children(self):\n         return [self.value_type.get_json()]\n \n-    def _get_type_layout(self):\n-        return OrderedDict([\n-            ('vectors',\n-             [OrderedDict([('type', 'VALIDITY'),\n-                           ('typeBitWidth', 1)]),\n-              OrderedDict([('type', 'OFFSET'),\n-                           ('typeBitWidth', 32)])])])\n-\n     def generate_column(self, size, name=None):\n         MAX_LIST_SIZE = 4\n \n@@ -633,12 +598,6 @@ def _get_type(self):\n     def _get_children(self):\n         return [type_.get_json() for type_ in self.field_types]\n \n-    def _get_type_layout(self):\n-        return OrderedDict([\n-            ('vectors',\n-             [OrderedDict([('type', 'VALIDITY'),\n-                           ('typeBitWidth', 1)])])])\n-\n     def generate_column(self, size, name=None):\n         is_valid = self._make_is_valid(size)\n \n@@ -689,13 +648,9 @@ def get_json(self):\n                 ('id', self.dictionary.id_),\n                 ('indexType', self.index_type._get_type()),\n                 ('isOrdered', self.dictionary.ordered)\n-            ])),\n-            ('typeLayout', self.index_type._get_type_layout())\n+            ]))\n         ])\n \n-    def _get_type_layout(self):\n-        return self.index_type._get_type_layout()\n-\n     def generate_column(self, size, name=None):\n         if name is None:\n             name = self.name\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/ipc/message/VectorLayout.java b/java/vector/src/main/java/org/apache/arrow/vector/BufferLayout.java\nsimilarity index 50%\nrename from java/vector/src/main/java/org/apache/arrow/vector/ipc/message/VectorLayout.java\nrename to java/vector/src/main/java/org/apache/arrow/vector/BufferLayout.java\nindex e4f2f98fd..f6529d8e5 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/ipc/message/VectorLayout.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/BufferLayout.java\n@@ -16,33 +16,48 @@\n  * limitations under the License.\n  */\n \n-package org.apache.arrow.vector.ipc.message;\n+package org.apache.arrow.vector;\n \n-import com.fasterxml.jackson.annotation.JsonCreator;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n import com.google.common.base.Preconditions;\n-import com.google.flatbuffers.FlatBufferBuilder;\n \n-public class VectorLayout implements FBSerializable {\n+public class BufferLayout {\n \n-  private static final VectorLayout VALIDITY_VECTOR = new VectorLayout(ArrowVectorType.VALIDITY, 1);\n-  private static final VectorLayout OFFSET_VECTOR = new VectorLayout(ArrowVectorType.OFFSET, 32);\n-  private static final VectorLayout TYPE_VECTOR = new VectorLayout(ArrowVectorType.TYPE, 32);\n-  private static final VectorLayout BOOLEAN_VECTOR = new VectorLayout(ArrowVectorType.DATA, 1);\n-  private static final VectorLayout VALUES_64 = new VectorLayout(ArrowVectorType.DATA, 64);\n-  private static final VectorLayout VALUES_32 = new VectorLayout(ArrowVectorType.DATA, 32);\n-  private static final VectorLayout VALUES_16 = new VectorLayout(ArrowVectorType.DATA, 16);\n-  private static final VectorLayout VALUES_8 = new VectorLayout(ArrowVectorType.DATA, 8);\n+  public enum BufferType {\n+    DATA(\"DATA\"),\n+    OFFSET(\"OFFSET\"),\n+    VALIDITY(\"VALIDITY\"),\n+    TYPE(\"TYPE\");\n \n-  public static VectorLayout typeVector() {\n-    return TYPE_VECTOR;\n+    final private String name;\n+\n+    BufferType(String name) {\n+      this.name = name;\n+    }\n+\n+    public String getName() {\n+      return name;\n+    }\n   }\n \n-  public static VectorLayout offsetVector() {\n-    return OFFSET_VECTOR;\n+  private static final BufferLayout VALIDITY_BUFFER = new BufferLayout(BufferType.VALIDITY, 1);\n+  private static final BufferLayout OFFSET_BUFFER = new BufferLayout(BufferType.OFFSET, 32);\n+  private static final BufferLayout TYPE_BUFFER = new BufferLayout(BufferType.TYPE, 32);\n+  private static final BufferLayout BIT_BUFFER = new BufferLayout(BufferType.DATA, 1);\n+  private static final BufferLayout VALUES_128 = new BufferLayout(BufferType.DATA, 128);\n+  private static final BufferLayout VALUES_64 = new BufferLayout(BufferType.DATA, 64);\n+  private static final BufferLayout VALUES_32 = new BufferLayout(BufferType.DATA, 32);\n+  private static final BufferLayout VALUES_16 = new BufferLayout(BufferType.DATA, 16);\n+  private static final BufferLayout VALUES_8 = new BufferLayout(BufferType.DATA, 8);\n+\n+  public static BufferLayout typeBuffer() {\n+    return TYPE_BUFFER;\n   }\n \n-  public static VectorLayout dataVector(int typeBitWidth) {\n+  public static BufferLayout offsetBuffer() {\n+    return OFFSET_BUFFER;\n+  }\n+\n+  public static BufferLayout dataBuffer(int typeBitWidth) {\n     switch (typeBitWidth) {\n       case 8:\n         return VALUES_8;\n@@ -52,29 +67,30 @@ public static VectorLayout dataVector(int typeBitWidth) {\n         return VALUES_32;\n       case 64:\n         return VALUES_64;\n+      case 128:\n+        return VALUES_128;\n       default:\n         throw new IllegalArgumentException(\"only 8, 16, 32, or 64 bits supported\");\n     }\n   }\n \n-  public static VectorLayout booleanVector() {\n-    return BOOLEAN_VECTOR;\n+  public static BufferLayout booleanVector() {\n+    return BIT_BUFFER;\n   }\n \n-  public static VectorLayout validityVector() {\n-    return VALIDITY_VECTOR;\n+  public static BufferLayout validityVector() {\n+    return VALIDITY_BUFFER;\n   }\n \n-  public static VectorLayout byteVector() {\n-    return dataVector(8);\n+  public static BufferLayout byteVector() {\n+    return dataBuffer(8);\n   }\n \n   private final short typeBitWidth;\n \n-  private final ArrowVectorType type;\n+  private final BufferType type;\n \n-  @JsonCreator\n-  private VectorLayout(@JsonProperty(\"type\") ArrowVectorType type, @JsonProperty(\"typeBitWidth\") int typeBitWidth) {\n+  private BufferLayout(BufferType type, int typeBitWidth) {\n     super();\n     this.type = Preconditions.checkNotNull(type);\n     this.typeBitWidth = (short) typeBitWidth;\n@@ -83,15 +99,11 @@ private VectorLayout(@JsonProperty(\"type\") ArrowVectorType type, @JsonProperty(\"\n     }\n   }\n \n-  public VectorLayout(org.apache.arrow.flatbuf.VectorLayout layout) {\n-    this(new ArrowVectorType(layout.type()), layout.bitWidth());\n-  }\n-\n   public int getTypeBitWidth() {\n     return typeBitWidth;\n   }\n \n-  public ArrowVectorType getType() {\n+  public BufferType getType() {\n     return type;\n   }\n \n@@ -116,15 +128,7 @@ public boolean equals(Object obj) {\n     if (getClass() != obj.getClass()) {\n       return false;\n     }\n-    VectorLayout other = (VectorLayout) obj;\n+    BufferLayout other = (BufferLayout) obj;\n     return type.equals(other.type) && (typeBitWidth == other.typeBitWidth);\n   }\n-\n-  @Override\n-  public int writeTo(FlatBufferBuilder builder) {\n-    ;\n-    return org.apache.arrow.flatbuf.VectorLayout.createVectorLayout(builder, typeBitWidth, type.getType());\n-  }\n-\n-\n }\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/ipc/message/TypeLayout.java b/java/vector/src/main/java/org/apache/arrow/vector/TypeLayout.java\nsimilarity index 66%\nrename from java/vector/src/main/java/org/apache/arrow/vector/ipc/message/TypeLayout.java\nrename to java/vector/src/main/java/org/apache/arrow/vector/TypeLayout.java\nindex 06fe94816..d6f32b4b4 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/ipc/message/TypeLayout.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/TypeLayout.java\n@@ -16,7 +16,7 @@\n  * limitations under the License.\n  */\n \n-package org.apache.arrow.vector.ipc.message;\n+package org.apache.arrow.vector;\n \n import static java.util.Arrays.asList;\n \n@@ -24,6 +24,7 @@\n import java.util.Collections;\n import java.util.List;\n \n+import org.apache.arrow.vector.BufferLayout.BufferType;\n import org.apache.arrow.vector.types.pojo.ArrowType;\n import org.apache.arrow.vector.types.pojo.ArrowType.ArrowTypeVisitor;\n import org.apache.arrow.vector.types.pojo.ArrowType.Binary;\n@@ -41,14 +42,11 @@\n import org.apache.arrow.vector.types.pojo.ArrowType.Union;\n import org.apache.arrow.vector.types.pojo.ArrowType.Utf8;\n \n-import com.fasterxml.jackson.annotation.JsonCreator;\n-import com.fasterxml.jackson.annotation.JsonIgnore;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n import com.google.common.base.Preconditions;\n \n /**\n- * The layout of vectors for a given type\n- * It defines its own vectors followed by the vectors for the children\n+ * The buffer layout of vectors for a given type\n+ * It defines its own buffers followed by the buffers for the children\n  * if it is a nested type (Struct_, List, Union)\n  */\n public class TypeLayout {\n@@ -58,24 +56,24 @@ public static TypeLayout getTypeLayout(final ArrowType arrowType) {\n \n       @Override\n       public TypeLayout visit(Int type) {\n-        return newFixedWidthTypeLayout(VectorLayout.dataVector(type.getBitWidth()));\n+        return newFixedWidthTypeLayout(BufferLayout.dataBuffer(type.getBitWidth()));\n       }\n \n       @Override\n       public TypeLayout visit(Union type) {\n-        List<VectorLayout> vectors;\n+        List<BufferLayout> vectors;\n         switch (type.getMode()) {\n           case Dense:\n             vectors = asList(\n                 // TODO: validate this\n-                VectorLayout.validityVector(),\n-                VectorLayout.typeVector(),\n-                VectorLayout.offsetVector() // offset to find the vector\n+                BufferLayout.validityVector(),\n+                BufferLayout.typeBuffer(),\n+                BufferLayout.offsetBuffer() // offset to find the vector\n             );\n             break;\n           case Sparse:\n             vectors = asList(\n-                VectorLayout.typeVector() // type of the value at the index or 0 if null\n+                BufferLayout.typeBuffer() // type of the value at the index or 0 if null\n             );\n             break;\n           default:\n@@ -86,30 +84,30 @@ public TypeLayout visit(Union type) {\n \n       @Override\n       public TypeLayout visit(Struct type) {\n-        List<VectorLayout> vectors = asList(\n-            VectorLayout.validityVector()\n+        List<BufferLayout> vectors = asList(\n+            BufferLayout.validityVector()\n         );\n         return new TypeLayout(vectors);\n       }\n \n       @Override\n       public TypeLayout visit(Timestamp type) {\n-        return newFixedWidthTypeLayout(VectorLayout.dataVector(64));\n+        return newFixedWidthTypeLayout(BufferLayout.dataBuffer(64));\n       }\n \n       @Override\n       public TypeLayout visit(org.apache.arrow.vector.types.pojo.ArrowType.List type) {\n-        List<VectorLayout> vectors = asList(\n-            VectorLayout.validityVector(),\n-            VectorLayout.offsetVector()\n+        List<BufferLayout> vectors = asList(\n+            BufferLayout.validityVector(),\n+            BufferLayout.offsetBuffer()\n         );\n         return new TypeLayout(vectors);\n       }\n \n       @Override\n       public TypeLayout visit(FixedSizeList type) {\n-        List<VectorLayout> vectors = asList(\n-            VectorLayout.validityVector()\n+        List<BufferLayout> vectors = asList(\n+            BufferLayout.validityVector()\n         );\n         return new TypeLayout(vectors);\n       }\n@@ -130,18 +128,17 @@ public TypeLayout visit(FloatingPoint type) {\n           default:\n             throw new UnsupportedOperationException(\"Unsupported Precision: \" + type.getPrecision());\n         }\n-        return newFixedWidthTypeLayout(VectorLayout.dataVector(bitWidth));\n+        return newFixedWidthTypeLayout(BufferLayout.dataBuffer(bitWidth));\n       }\n \n       @Override\n       public TypeLayout visit(Decimal type) {\n-        // TODO: check size\n-        return newFixedWidthTypeLayout(VectorLayout.dataVector(64)); // actually depends on the type fields\n+        return newFixedWidthTypeLayout(BufferLayout.dataBuffer(128));\n       }\n \n       @Override\n       public TypeLayout visit(Bool type) {\n-        return newFixedWidthTypeLayout(VectorLayout.booleanVector());\n+        return newFixedWidthTypeLayout(BufferLayout.booleanVector());\n       }\n \n       @Override\n@@ -155,39 +152,46 @@ public TypeLayout visit(Utf8 type) {\n       }\n \n       private TypeLayout newVariableWidthTypeLayout() {\n-        return newPrimitiveTypeLayout(VectorLayout.validityVector(), VectorLayout.offsetVector(), VectorLayout.byteVector());\n+        return newPrimitiveTypeLayout(BufferLayout.validityVector(), BufferLayout.offsetBuffer(), BufferLayout.byteVector());\n       }\n \n-      private TypeLayout newPrimitiveTypeLayout(VectorLayout... vectors) {\n+      private TypeLayout newPrimitiveTypeLayout(BufferLayout... vectors) {\n         return new TypeLayout(asList(vectors));\n       }\n \n-      public TypeLayout newFixedWidthTypeLayout(VectorLayout dataVector) {\n-        return newPrimitiveTypeLayout(VectorLayout.validityVector(), dataVector);\n+      public TypeLayout newFixedWidthTypeLayout(BufferLayout dataVector) {\n+        return newPrimitiveTypeLayout(BufferLayout.validityVector(), dataVector);\n       }\n \n       @Override\n       public TypeLayout visit(Null type) {\n-        return new TypeLayout(Collections.<VectorLayout>emptyList());\n+        return new TypeLayout(Collections.<BufferLayout>emptyList());\n       }\n \n       @Override\n       public TypeLayout visit(Date type) {\n-        return newFixedWidthTypeLayout(VectorLayout.dataVector(64));\n+        switch (type.getUnit()) {\n+          case DAY:\n+            return newFixedWidthTypeLayout(BufferLayout.dataBuffer(32));\n+          case MILLISECOND:\n+            return newFixedWidthTypeLayout(BufferLayout.dataBuffer(64));\n+          default:\n+            throw new UnsupportedOperationException(\"Unknown unit \" + type.getUnit());\n+        }\n       }\n \n       @Override\n       public TypeLayout visit(Time type) {\n-        return newFixedWidthTypeLayout(VectorLayout.dataVector(type.getBitWidth()));\n+        return newFixedWidthTypeLayout(BufferLayout.dataBuffer(type.getBitWidth()));\n       }\n \n       @Override\n-      public TypeLayout visit(Interval type) { // TODO: check size\n+      public TypeLayout visit(Interval type) {\n         switch (type.getUnit()) {\n           case DAY_TIME:\n-            return newFixedWidthTypeLayout(VectorLayout.dataVector(64));\n+            return newFixedWidthTypeLayout(BufferLayout.dataBuffer(64));\n           case YEAR_MONTH:\n-            return newFixedWidthTypeLayout(VectorLayout.dataVector(64));\n+            return newFixedWidthTypeLayout(BufferLayout.dataBuffer(32));\n           default:\n             throw new UnsupportedOperationException(\"Unknown unit \" + type.getUnit());\n         }\n@@ -197,39 +201,37 @@ public TypeLayout visit(Interval type) { // TODO: check size\n     return layout;\n   }\n \n-  private final List<VectorLayout> vectors;\n+  private final List<BufferLayout> bufferLayouts;\n \n-  @JsonCreator\n-  public TypeLayout(@JsonProperty(\"vectors\") List<VectorLayout> vectors) {\n+  public TypeLayout(List<BufferLayout> bufferLayouts) {\n     super();\n-    this.vectors = Preconditions.checkNotNull(vectors);\n+    this.bufferLayouts = Preconditions.checkNotNull(bufferLayouts);\n   }\n \n-  public TypeLayout(VectorLayout... vectors) {\n-    this(asList(vectors));\n+  public TypeLayout(BufferLayout... bufferLayouts) {\n+    this(asList(bufferLayouts));\n   }\n \n \n-  public List<VectorLayout> getVectors() {\n-    return vectors;\n+  public List<BufferLayout> getBufferLayouts() {\n+    return bufferLayouts;\n   }\n \n-  @JsonIgnore\n-  public List<ArrowVectorType> getVectorTypes() {\n-    List<ArrowVectorType> types = new ArrayList<>(vectors.size());\n-    for (VectorLayout vector : vectors) {\n+  public List<BufferType> getBufferTypes() {\n+    List<BufferType> types = new ArrayList<>(bufferLayouts.size());\n+    for (BufferLayout vector : bufferLayouts) {\n       types.add(vector.getType());\n     }\n     return types;\n   }\n \n   public String toString() {\n-    return vectors.toString();\n+    return bufferLayouts.toString();\n   }\n \n   @Override\n   public int hashCode() {\n-    return vectors.hashCode();\n+    return bufferLayouts.hashCode();\n   }\n \n   @Override\n@@ -244,7 +246,7 @@ public boolean equals(Object obj) {\n       return false;\n     }\n     TypeLayout other = (TypeLayout) obj;\n-    return vectors.equals(other.vectors);\n+    return bufferLayouts.equals(other.bufferLayouts);\n   }\n \n }\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/VectorLoader.java b/java/vector/src/main/java/org/apache/arrow/vector/VectorLoader.java\nindex 2cd4099c6..c933d149f 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/VectorLoader.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/VectorLoader.java\n@@ -26,7 +26,6 @@\n \n import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n import org.apache.arrow.vector.ipc.message.ArrowRecordBatch;\n-import org.apache.arrow.vector.ipc.message.VectorLayout;\n import org.apache.arrow.vector.types.pojo.Field;\n \n import com.google.common.collect.Iterators;\n@@ -71,9 +70,9 @@ private void loadBuffers(FieldVector vector, Field field, Iterator<ArrowBuf> buf\n     checkArgument(nodes.hasNext(),\n         \"no more field nodes for for field \" + field + \" and vector \" + vector);\n     ArrowFieldNode fieldNode = nodes.next();\n-    List<VectorLayout> typeLayout = field.getTypeLayout().getVectors();\n-    List<ArrowBuf> ownBuffers = new ArrayList<>(typeLayout.size());\n-    for (int j = 0; j < typeLayout.size(); j++) {\n+    List<BufferLayout> bufferLayouts = TypeLayout.getTypeLayout(field.getType()).getBufferLayouts();\n+    List<ArrowBuf> ownBuffers = new ArrayList<>(bufferLayouts.size());\n+    for (int j = 0; j < bufferLayouts.size(); j++) {\n       ownBuffers.add(buffers.next());\n     }\n     try {\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/VectorUnloader.java b/java/vector/src/main/java/org/apache/arrow/vector/VectorUnloader.java\nindex 2b034894a..94981ef02 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/VectorUnloader.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/VectorUnloader.java\n@@ -22,9 +22,9 @@\n import java.util.List;\n \n import io.netty.buffer.ArrowBuf;\n+import org.apache.arrow.vector.BufferLayout.BufferType;\n import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n import org.apache.arrow.vector.ipc.message.ArrowRecordBatch;\n-import org.apache.arrow.vector.ipc.message.ArrowVectorType;\n \n public class VectorUnloader {\n \n@@ -54,7 +54,7 @@ public ArrowRecordBatch getRecordBatch() {\n   private void appendNodes(FieldVector vector, List<ArrowFieldNode> nodes, List<ArrowBuf> buffers) {\n     nodes.add(new ArrowFieldNode(vector.getValueCount(), includeNullCount ? vector.getNullCount() : -1));\n     List<ArrowBuf> fieldBuffers = vector.getFieldBuffers();\n-    List<ArrowVectorType> expectedBuffers = vector.getField().getTypeLayout().getVectorTypes();\n+    List<BufferType> expectedBuffers = TypeLayout.getTypeLayout(vector.getField().getType()).getBufferTypes();\n     if (fieldBuffers.size() != expectedBuffers.size()) {\n       throw new IllegalArgumentException(String.format(\n           \"wrong number of buffers for field %s in vector %s. found: %s\",\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileReader.java b/java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileReader.java\nindex f274b748e..d0a9b9e18 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileReader.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileReader.java\n@@ -23,7 +23,7 @@\n import static com.fasterxml.jackson.core.JsonToken.START_ARRAY;\n import static com.fasterxml.jackson.core.JsonToken.START_OBJECT;\n import static java.nio.charset.StandardCharsets.UTF_8;\n-import static org.apache.arrow.vector.ipc.message.ArrowVectorType.*;\n+import static org.apache.arrow.vector.BufferLayout.BufferType.*;\n \n import java.io.File;\n import java.io.IOException;\n@@ -42,7 +42,8 @@\n import org.apache.arrow.vector.dictionary.Dictionary;\n import org.apache.arrow.vector.dictionary.DictionaryProvider;\n import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n-import org.apache.arrow.vector.ipc.message.ArrowVectorType;\n+import org.apache.arrow.vector.BufferLayout.BufferType;\n+import org.apache.arrow.vector.TypeLayout;\n import org.apache.arrow.vector.types.Types;\n import org.apache.arrow.vector.types.pojo.Field;\n import org.apache.arrow.vector.types.pojo.Schema;\n@@ -375,7 +376,7 @@ protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException\n     };\n   }\n \n-  private ArrowBuf readIntoBuffer(BufferAllocator allocator, ArrowVectorType bufferType,\n+  private ArrowBuf readIntoBuffer(BufferAllocator allocator, BufferType bufferType,\n                                   Types.MinorType type, int count) throws IOException {\n     ArrowBuf buf;\n \n@@ -471,7 +472,8 @@ private ArrowBuf readIntoBuffer(BufferAllocator allocator, ArrowVectorType buffe\n   }\n \n   private void readFromJsonIntoVector(Field field, FieldVector vector) throws JsonParseException, IOException {\n-    List<ArrowVectorType> vectorTypes = field.getTypeLayout().getVectorTypes();\n+    TypeLayout typeLayout = TypeLayout.getTypeLayout(field.getType());\n+    List<BufferType> vectorTypes = typeLayout.getBufferTypes();\n     ArrowBuf[] vectorBuffers = new ArrowBuf[vectorTypes.size()];\n     /*\n      * The order of inner buffers is :\n@@ -503,15 +505,15 @@ private void readFromJsonIntoVector(Field field, FieldVector vector) throws Json\n       vector.setInitialCapacity(valueCount);\n \n       for (int v = 0; v < vectorTypes.size(); v++) {\n-        ArrowVectorType vectorType = vectorTypes.get(v);\n-        nextFieldIs(vectorType.getName());\n+        BufferType bufferType = vectorTypes.get(v);\n+        nextFieldIs(bufferType.getName());\n         int innerBufferValueCount = valueCount;\n-        if (vectorType.equals(OFFSET)) {\n+        if (bufferType.equals(OFFSET)) {\n           /* offset buffer has 1 additional value capacity */\n           innerBufferValueCount = valueCount + 1;\n         }\n \n-        vectorBuffers[v] = readIntoBuffer(allocator, vectorType, vector.getMinorType(), innerBufferValueCount);\n+        vectorBuffers[v] = readIntoBuffer(allocator, bufferType, vector.getMinorType(), innerBufferValueCount);\n       }\n \n       final int nullCount = BitVectorHelper.getNullCount(vectorBuffers[0], valueCount);\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileWriter.java b/java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileWriter.java\nindex 1c9e1d380..6eb76a7a1 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileWriter.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileWriter.java\n@@ -18,7 +18,7 @@\n \n package org.apache.arrow.vector.ipc;\n \n-import static org.apache.arrow.vector.ipc.message.ArrowVectorType.*;\n+import static org.apache.arrow.vector.BufferLayout.BufferType.*;\n \n import java.io.File;\n import java.io.IOException;\n@@ -33,7 +33,8 @@\n import org.apache.arrow.vector.*;\n import org.apache.arrow.vector.dictionary.Dictionary;\n import org.apache.arrow.vector.dictionary.DictionaryProvider;\n-import org.apache.arrow.vector.ipc.message.ArrowVectorType;\n+import org.apache.arrow.vector.BufferLayout.BufferType;\n+import org.apache.arrow.vector.TypeLayout;\n import org.apache.arrow.vector.types.Types;\n import org.apache.arrow.vector.types.pojo.Field;\n import org.apache.arrow.vector.types.pojo.Schema;\n@@ -152,7 +153,7 @@ private void writeBatch(VectorSchemaRoot recordBatch) throws IOException {\n   }\n \n   private void writeFromVectorIntoJson(Field field, FieldVector vector) throws IOException {\n-    List<ArrowVectorType> vectorTypes = field.getTypeLayout().getVectorTypes();\n+    List<BufferType> vectorTypes = TypeLayout.getTypeLayout(field.getType()).getBufferTypes();\n     List<ArrowBuf> vectorBuffers = vector.getFieldBuffers();\n     if (vectorTypes.size() != vectorBuffers.size()) {\n       throw new IllegalArgumentException(\"vector types and inner vector buffers are not the same size: \" + vectorTypes.size() + \" != \" + vectorBuffers.size());\n@@ -165,16 +166,16 @@ private void writeFromVectorIntoJson(Field field, FieldVector vector) throws IOE\n       final int scale = (vector instanceof DecimalVector) ?\n                             ((DecimalVector) vector).getScale() : 0;\n       for (int v = 0; v < vectorTypes.size(); v++) {\n-        ArrowVectorType vectorType = vectorTypes.get(v);\n+        BufferType bufferType = vectorTypes.get(v);\n         ArrowBuf vectorBuffer = vectorBuffers.get(v);\n-        generator.writeArrayFieldStart(vectorType.getName());\n-        final int bufferValueCount = (vectorType.equals(OFFSET)) ? valueCount + 1 : valueCount;\n+        generator.writeArrayFieldStart(bufferType.getName());\n+        final int bufferValueCount = (bufferType.equals(OFFSET)) ? valueCount + 1 : valueCount;\n         for (int i = 0; i < bufferValueCount; i++) {\n-          if (vectorType.equals(DATA) && (vector.getMinorType() == Types.MinorType.VARCHAR ||\n+          if (bufferType.equals(DATA) && (vector.getMinorType() == Types.MinorType.VARCHAR ||\n                   vector.getMinorType() == Types.MinorType.VARBINARY)) {\n-            writeValueToGenerator(vectorType, vectorBuffer, vectorBuffers.get(v-1), vector, i, scale);\n+            writeValueToGenerator(bufferType, vectorBuffer, vectorBuffers.get(v-1), vector, i, scale);\n           } else {\n-            writeValueToGenerator(vectorType, vectorBuffer, null, vector, i, scale);\n+            writeValueToGenerator(bufferType, vectorBuffer, null, vector, i, scale);\n           }\n         }\n         generator.writeEndArray();\n@@ -197,7 +198,7 @@ private void writeFromVectorIntoJson(Field field, FieldVector vector) throws IOE\n     generator.writeEndObject();\n   }\n \n-  private void writeValueToGenerator(ArrowVectorType bufferType, ArrowBuf buffer,\n+  private void writeValueToGenerator(BufferType bufferType, ArrowBuf buffer,\n                                      ArrowBuf offsetBuffer, FieldVector vector,\n                                      final int index, final int scale) throws IOException {\n     if (bufferType.equals(TYPE)) {\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/ipc/message/ArrowVectorType.java b/java/vector/src/main/java/org/apache/arrow/vector/ipc/message/ArrowVectorType.java\ndeleted file mode 100644\nindex 3342652be..000000000\n--- a/java/vector/src/main/java/org/apache/arrow/vector/ipc/message/ArrowVectorType.java\n+++ /dev/null\n@@ -1,101 +0,0 @@\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.arrow.vector.ipc.message;\n-\n-import java.util.Map;\n-\n-import org.apache.arrow.flatbuf.VectorType;\n-\n-import com.fasterxml.jackson.annotation.JsonCreator;\n-import com.fasterxml.jackson.annotation.JsonValue;\n-import com.google.common.collect.ImmutableMap;\n-import com.google.common.collect.ImmutableMap.Builder;\n-\n-public class ArrowVectorType {\n-\n-  public static final ArrowVectorType DATA = new ArrowVectorType(VectorType.DATA);\n-  public static final ArrowVectorType OFFSET = new ArrowVectorType(VectorType.OFFSET);\n-  public static final ArrowVectorType VALIDITY = new ArrowVectorType(VectorType.VALIDITY);\n-  public static final ArrowVectorType TYPE = new ArrowVectorType(VectorType.TYPE);\n-\n-  private static final Map<String, ArrowVectorType> typeByName;\n-\n-  static {\n-    ArrowVectorType[] types = {DATA, OFFSET, VALIDITY, TYPE};\n-    Builder<String, ArrowVectorType> builder = ImmutableMap.builder();\n-    for (ArrowVectorType type : types) {\n-      builder.put(type.getName(), type);\n-    }\n-    typeByName = builder.build();\n-  }\n-\n-  public static ArrowVectorType fromName(String name) {\n-    ArrowVectorType type = typeByName.get(name);\n-    if (type == null) {\n-      throw new IllegalArgumentException(\"Unknown type \" + name);\n-    }\n-    return type;\n-  }\n-\n-  private final short type;\n-\n-  public ArrowVectorType(short type) {\n-    this.type = type;\n-    // validate that the type is valid\n-    getName();\n-  }\n-\n-  @JsonCreator\n-  private ArrowVectorType(String name) {\n-    this.type = fromName(name).type;\n-  }\n-\n-  public short getType() {\n-    return type;\n-  }\n-\n-  @JsonValue\n-  public String getName() {\n-    try {\n-      return VectorType.name(type);\n-    } catch (ArrayIndexOutOfBoundsException e) {\n-      throw new IllegalArgumentException(\"Unknown type \" + type);\n-    }\n-  }\n-\n-  @Override\n-  public String toString() {\n-    return getName();\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    return type;\n-  }\n-\n-  @Override\n-  public boolean equals(Object obj) {\n-    if (obj instanceof ArrowVectorType) {\n-      ArrowVectorType other = (ArrowVectorType) obj;\n-      return type == other.type;\n-    }\n-    return false;\n-  }\n-\n-}\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/types/pojo/Field.java b/java/vector/src/main/java/org/apache/arrow/vector/types/pojo/Field.java\nindex 574612833..b1f036a34 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/types/pojo/Field.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/types/pojo/Field.java\n@@ -43,8 +43,7 @@\n import org.apache.arrow.flatbuf.Type;\n import org.apache.arrow.memory.BufferAllocator;\n import org.apache.arrow.vector.FieldVector;\n-import org.apache.arrow.vector.ipc.message.VectorLayout;\n-import org.apache.arrow.vector.ipc.message.TypeLayout;\n+import org.apache.arrow.vector.TypeLayout;\n import org.apache.arrow.vector.types.pojo.ArrowType.Int;\n \n public class Field {\n@@ -60,7 +59,6 @@ public static Field nullable(String name, ArrowType type) {\n   private final String name;\n   private final FieldType fieldType;\n   private final List<Field> children;\n-  private final TypeLayout typeLayout;\n \n   @JsonCreator\n   private Field(\n@@ -69,16 +67,14 @@ private Field(\n       @JsonProperty(\"type\") ArrowType type,\n       @JsonProperty(\"dictionary\") DictionaryEncoding dictionary,\n       @JsonProperty(\"children\") List<Field> children,\n-      @JsonProperty(\"typeLayout\") TypeLayout typeLayout,\n       @JsonProperty(\"metadata\") Map<String, String> metadata) {\n-    this(name, new FieldType(nullable, type, dictionary, metadata), children, typeLayout);\n+    this(name, new FieldType(nullable, type, dictionary, metadata), children);\n   }\n \n   private Field(String name, FieldType fieldType, List<Field> children, TypeLayout typeLayout) {\n     this.name = name;\n     this.fieldType = checkNotNull(fieldType);\n     this.children = children == null ? ImmutableList.<Field>of() : ImmutableList.copyOf(children);\n-    this.typeLayout = checkNotNull(typeLayout);\n   }\n \n   // deprecated, use FieldType or static constructor instead\n@@ -117,10 +113,6 @@ public static Field convertField(org.apache.arrow.flatbuf.Field field) {\n       }\n       dictionary = new DictionaryEncoding(dictionaryFB.id(), dictionaryFB.isOrdered(), indexType);\n     }\n-    ImmutableList.Builder<VectorLayout> layout = ImmutableList.builder();\n-    for (int i = 0; i < field.layoutLength(); ++i) {\n-      layout.add(new VectorLayout(field.layout(i)));\n-    }\n     ImmutableList.Builder<Field> childrenBuilder = ImmutableList.builder();\n     for (int i = 0; i < field.childrenLength(); i++) {\n       Field childField = convertField(field.children(i));\n@@ -135,7 +127,7 @@ public static Field convertField(org.apache.arrow.flatbuf.Field field) {\n       metadataBuilder.put(key == null ? \"\" : key, value == null ? \"\" : value);\n     }\n     Map<String, String> metadata = metadataBuilder.build();\n-    return new Field(name, nullable, type, dictionary, children, new TypeLayout(layout.build()), metadata);\n+    return new Field(name, nullable, type, dictionary, children, metadata);\n   }\n \n   /**\n@@ -153,19 +145,11 @@ private static Field mutateOriginalNameIfNeeded(org.apache.arrow.flatbuf.Field f\n           originalChildField.getType(),\n           originalChildField.getDictionary(),\n           originalChildField.getChildren(),\n-          originalChildField.getTypeLayout(),\n           originalChildField.getMetadata());\n     }\n     return originalChildField;\n   }\n \n-  public void validate() {\n-    TypeLayout expectedLayout = TypeLayout.getTypeLayout(getType());\n-    if (!expectedLayout.equals(typeLayout)) {\n-      throw new IllegalArgumentException(\"Deserialized field does not match expected vectors. expected: \" + expectedLayout + \" got \" + typeLayout);\n-    }\n-  }\n-\n   public int getField(FlatBufferBuilder builder) {\n     int nameOffset = name == null ? -1 : builder.createString(name);\n     int typeOffset = getType().getType(builder);\n@@ -184,12 +168,6 @@ public int getField(FlatBufferBuilder builder) {\n       childrenData[i] = children.get(i).getField(builder);\n     }\n     int childrenOffset = org.apache.arrow.flatbuf.Field.createChildrenVector(builder, childrenData);\n-    int[] buffersData = new int[typeLayout.getVectors().size()];\n-    for (int i = 0; i < buffersData.length; i++) {\n-      VectorLayout vectorLayout = typeLayout.getVectors().get(i);\n-      buffersData[i] = vectorLayout.writeTo(builder);\n-    }\n-    int layoutOffset = org.apache.arrow.flatbuf.Field.createLayoutVector(builder, buffersData);\n     int[] metadataOffsets = new int[getMetadata().size()];\n     Iterator<Entry<String, String>> metadataIterator = getMetadata().entrySet().iterator();\n     for (int i = 0; i < metadataOffsets.length; i++) {\n@@ -210,7 +188,6 @@ public int getField(FlatBufferBuilder builder) {\n     org.apache.arrow.flatbuf.Field.addTypeType(builder, getType().getTypeID().getFlatbufID());\n     org.apache.arrow.flatbuf.Field.addType(builder, typeOffset);\n     org.apache.arrow.flatbuf.Field.addChildren(builder, childrenOffset);\n-    org.apache.arrow.flatbuf.Field.addLayout(builder, layoutOffset);\n     org.apache.arrow.flatbuf.Field.addCustomMetadata(builder, metadataOffset);\n     if (dictionary != null) {\n       org.apache.arrow.flatbuf.Field.addDictionary(builder, dictionaryOffset);\n@@ -244,10 +221,6 @@ public DictionaryEncoding getDictionary() {\n     return children;\n   }\n \n-  public TypeLayout getTypeLayout() {\n-    return typeLayout;\n-  }\n-\n   @JsonInclude(Include.NON_EMPTY)\n   public Map<String, String> getMetadata() {\n     return fieldType.getMetadata();\ndiff --git a/java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java b/java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\nindex 1cff7fa88..1acce7e0b 100644\n--- a/java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n+++ b/java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n@@ -170,16 +170,16 @@ public void testSetLastSetUsage() throws Exception {\n       /* set lastset and arbitrary valuecount for list vector.\n        *\n        * NOTE: if we don't execute setLastSet() before setLastValueCount(), then\n-       * the latter will corrupt the offsetVector and thus the accessor will not\n-       * retrieve the correct values from underlying dataVector. Run the test\n+       * the latter will corrupt the offsetBuffer and thus the accessor will not\n+       * retrieve the correct values from underlying dataBuffer. Run the test\n        * by commenting out next line and we should see failures from 5th assert\n        * onwards. This is why doing setLastSet() is important before setValueCount()\n        * once the vector has been loaded.\n        *\n        * Another important thing to remember is the value of lastSet itself.\n        * Even though the listVector has elements till index 2 only, the lastSet should\n-       * be set as 3. This is because the offsetVector has valid offsets filled till index 3.\n-       * If we do setLastSet(2), the offsetVector at index 3 will contain incorrect value\n+       * be set as 3. This is because the offsetBuffer has valid offsets filled till index 3.\n+       * If we do setLastSet(2), the offsetBuffer at index 3 will contain incorrect value\n        * after execution of setValueCount().\n        *\n        * correct state of the listVector\n@@ -414,7 +414,7 @@ public void testSplitAndTransfer() throws Exception {\n \n           transferPair.splitAndTransfer(start, splitLength);\n \n-          /* get offsetVector of toVector */\n+          /* get offsetBuffer of toVector */\n           final ArrowBuf toOffsetBuffer = toVector.getOffsetBuffer();\n \n           /* get dataVector of toVector */\ndiff --git a/java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java b/java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java\nindex 336ae1c7a..601b2062f 100644\n--- a/java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java\n+++ b/java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java\n@@ -38,7 +38,6 @@\n import org.apache.arrow.memory.RootAllocator;\n \n import org.apache.arrow.vector.ipc.message.ArrowRecordBatch;\n-import org.apache.arrow.vector.ipc.message.TypeLayout;\n import org.apache.arrow.vector.types.Types.MinorType;\n import org.apache.arrow.vector.types.pojo.Schema;\n import org.apache.arrow.vector.types.pojo.ArrowType;\n@@ -711,11 +710,9 @@ public void testNullableFixedType3() {\n \n       vector.setValueCount(1024);\n       Field field = vector.getField();\n-      TypeLayout typeLayout = field.getTypeLayout();\n \n       List<ArrowBuf> buffers = vector.getFieldBuffers();\n \n-      assertEquals(2, typeLayout.getVectors().size());\n       assertEquals(2, buffers.size());\n \n       ArrowBuf validityVectorBuf = buffers.get(0);\ndiff --git a/java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowReaderWriter.java b/java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowReaderWriter.java\nindex 49e194b51..bf42fbb83 100644\n--- a/java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowReaderWriter.java\n+++ b/java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowReaderWriter.java\n@@ -105,7 +105,6 @@ public void test() throws IOException {\n          ArrowFileReader reader = new ArrowFileReader(channel, allocator)) {\n       Schema readSchema = reader.getVectorSchemaRoot().getSchema();\n       assertEquals(schema, readSchema);\n-      assertTrue(readSchema.getFields().get(0).getTypeLayout().getVectorTypes().toString(), readSchema.getFields().get(0).getTypeLayout().getVectors().size() > 0);\n       // TODO: dictionaries\n       List<ArrowBlock> recordBatches = reader.getRecordBlocks();\n       assertEquals(1, recordBatches.size());\ndiff --git a/java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowStreamPipe.java b/java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowStreamPipe.java\nindex bd1ec94c8..9ec9a078f 100644\n--- a/java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowStreamPipe.java\n+++ b/java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowStreamPipe.java\n@@ -124,9 +124,6 @@ public boolean loadNextBatch() throws IOException {\n     public void run() {\n       try {\n         assertEquals(schema, reader.getVectorSchemaRoot().getSchema());\n-        assertTrue(\n-            reader.getVectorSchemaRoot().getSchema().getFields().get(0).getTypeLayout().getVectorTypes().toString(),\n-            reader.getVectorSchemaRoot().getSchema().getFields().get(0).getTypeLayout().getVectors().size() > 0);\n         while (!done) {\n           assertTrue(reader.loadNextBatch() != done);\n         }\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-04T22:52:57.056+0000",
                    "updated": "2017-12-04T22:52:57.056+0000"
                }
            ],
            "maxResults": 26,
            "total": 26,
            "startAt": 0
        },
        "customfield_12311820": "0|i3mm2f:",
        "customfield_12314139": null
    }
}