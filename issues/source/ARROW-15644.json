{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13427737",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427737",
    "key": "ARROW-15644",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/5",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/trivial.svg",
            "name": "Trivial",
            "id": "5"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=viniciusroque",
            "name": "viniciusroque",
            "key": "viniciusroque",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Vinicius Souza Roque",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=viniciusroque",
            "name": "viniciusroque",
            "key": "viniciusroque",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Vinicius Souza Roque",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15644/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 16,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427737/worklog/724440",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12391:\nURL: https://github.com/apache/arrow/pull/12391#issuecomment-1034809710\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-10T11:30:08.225+0000",
                    "updated": "2022-02-10T11:30:08.225+0000",
                    "started": "2022-02-10T11:30:08.225+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "724440",
                    "issueId": "13427737"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427737/worklog/787690",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on code in PR #12391:\nURL: https://github.com/apache/arrow/pull/12391#discussion_r913250148\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -3034,4 +3034,53 @@ int32_t instr_utf8(const char* string, int32_t string_len, const char* substring\n   }\n   return 0;\n }\n+\n+FORCE_INLINE\n+int32_t find_in_set_utf8_utf8(int64_t context, const char* to_find, int32_t to_find_len,\n+                              const char* string_list, int32_t string_list_len) {\n+  // Return 0 if entry len <= 0\n+  if (to_find_len <= 0 || string_list_len <= 0) {\n\nReview Comment:\n   empty strings shouldn't be valid.\r\n   Also these lengths are not user provided but rather is the string value length passed by gandiva so it won't be negative\n\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -3034,4 +3034,53 @@ int32_t instr_utf8(const char* string, int32_t string_len, const char* substring\n   }\n   return 0;\n }\n+\n+FORCE_INLINE\n+int32_t find_in_set_utf8_utf8(int64_t context, const char* to_find, int32_t to_find_len,\n+                              const char* string_list, int32_t string_list_len) {\n+  // Return 0 if entry len <= 0\n+  if (to_find_len <= 0 || string_list_len <= 0) {\n\nReview Comment:\n   empty strings shouldn't be invalid.\r\n   Also these lengths are not user provided but rather is the string value length passed by gandiva so it won't be negative\n\n\n\n",
                    "created": "2022-07-04T20:05:32.354+0000",
                    "updated": "2022-07-04T20:05:32.354+0000",
                    "started": "2022-07-04T20:05:32.353+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787690",
                    "issueId": "13427737"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427737/worklog/787691",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on code in PR #12391:\nURL: https://github.com/apache/arrow/pull/12391#discussion_r913250359\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -3034,4 +3034,53 @@ int32_t instr_utf8(const char* string, int32_t string_len, const char* substring\n   }\n   return 0;\n }\n+\n+FORCE_INLINE\n+int32_t find_in_set_utf8_utf8(int64_t context, const char* to_find, int32_t to_find_len,\n+                              const char* string_list, int32_t string_list_len) {\n+  // Return 0 if entry len <= 0\n+  if (to_find_len <= 0 || string_list_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Invalid input values.\");\n+    return 0;\n+  }\n+\n+  // Return 0 if to search entry have commas\n+  if (is_substr_utf8_utf8(to_find, to_find_len, reinterpret_cast<const char*>(\",\"), 1)) {\n+    return 0;\n+  }\n+\n+  int32_t cur_pos_in_array = 0;\n+  int32_t cur_length = 0;\n+  bool matching = true;\n+\n+  int char_length = 0;\n+  for (int i = 0; i < string_list_len; i += char_length) {\n+    char_length = utf8_char_length(string_list[i]);\n\nReview Comment:\n   you don't need utf8 decoding here\n\n\n\n",
                    "created": "2022-07-04T20:06:12.482+0000",
                    "updated": "2022-07-04T20:06:12.482+0000",
                    "started": "2022-07-04T20:06:12.482+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787691",
                    "issueId": "13427737"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427737/worklog/787692",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on code in PR #12391:\nURL: https://github.com/apache/arrow/pull/12391#discussion_r913250359\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -3034,4 +3034,53 @@ int32_t instr_utf8(const char* string, int32_t string_len, const char* substring\n   }\n   return 0;\n }\n+\n+FORCE_INLINE\n+int32_t find_in_set_utf8_utf8(int64_t context, const char* to_find, int32_t to_find_len,\n+                              const char* string_list, int32_t string_list_len) {\n+  // Return 0 if entry len <= 0\n+  if (to_find_len <= 0 || string_list_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Invalid input values.\");\n+    return 0;\n+  }\n+\n+  // Return 0 if to search entry have commas\n+  if (is_substr_utf8_utf8(to_find, to_find_len, reinterpret_cast<const char*>(\",\"), 1)) {\n+    return 0;\n+  }\n+\n+  int32_t cur_pos_in_array = 0;\n+  int32_t cur_length = 0;\n+  bool matching = true;\n+\n+  int char_length = 0;\n+  for (int i = 0; i < string_list_len; i += char_length) {\n+    char_length = utf8_char_length(string_list[i]);\n\nReview Comment:\n   you don't need utf8 decoding here. just split by string and do memcmp\n\n\n\n",
                    "created": "2022-07-04T20:06:32.441+0000",
                    "updated": "2022-07-04T20:06:32.441+0000",
                    "started": "2022-07-04T20:06:32.441+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787692",
                    "issueId": "13427737"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427737/worklog/787865",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on code in PR #12391:\nURL: https://github.com/apache/arrow/pull/12391#discussion_r913845578\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -3034,4 +3034,53 @@ int32_t instr_utf8(const char* string, int32_t string_len, const char* substring\n   }\n   return 0;\n }\n+\n+FORCE_INLINE\n+int32_t find_in_set_utf8_utf8(int64_t context, const char* to_find, int32_t to_find_len,\n+                              const char* string_list, int32_t string_list_len) {\n+  // Return 0 if entry len <= 0\n+  if (to_find_len <= 0 || string_list_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Invalid input values.\");\n+    return 0;\n+  }\n+\n+  // Return 0 if to search entry have commas\n+  if (is_substr_utf8_utf8(to_find, to_find_len, reinterpret_cast<const char*>(\",\"), 1)) {\n+    return 0;\n+  }\n+\n+  int32_t cur_pos_in_array = 0;\n+  int32_t cur_length = 0;\n+  bool matching = true;\n+\n+  int char_length = 0;\n+  for (int i = 0; i < string_list_len; i += char_length) {\n+    char_length = utf8_char_length(string_list[i]);\n\nReview Comment:\n   @projjal I don't know if this is possible in this case, because using **strtok** it ends up **ignoring the commas**, and we need to count them for the correct result\r\n   e.g.: in this case: **\"A,B,,,,,,,C,,,,,\"** finding **\"C\"** the function need **return 9**, but **using split we have 3 as result**.\n\n\n\n",
                    "created": "2022-07-05T14:10:53.187+0000",
                    "updated": "2022-07-05T14:10:53.187+0000",
                    "started": "2022-07-05T14:10:53.187+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787865",
                    "issueId": "13427737"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427737/worklog/788311",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on code in PR #12391:\nURL: https://github.com/apache/arrow/pull/12391#discussion_r914988138\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -3034,4 +3034,53 @@ int32_t instr_utf8(const char* string, int32_t string_len, const char* substring\n   }\n   return 0;\n }\n+\n+FORCE_INLINE\n+int32_t find_in_set_utf8_utf8(int64_t context, const char* to_find, int32_t to_find_len,\n+                              const char* string_list, int32_t string_list_len) {\n+  // Return 0 if entry len <= 0\n+  if (to_find_len <= 0 || string_list_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Invalid input values.\");\n+    return 0;\n+  }\n+\n+  // Return 0 if to search entry have commas\n+  if (is_substr_utf8_utf8(to_find, to_find_len, reinterpret_cast<const char*>(\",\"), 1)) {\n+    return 0;\n+  }\n+\n+  int32_t cur_pos_in_array = 0;\n+  int32_t cur_length = 0;\n+  bool matching = true;\n+\n+  int char_length = 0;\n+  for (int i = 0; i < string_list_len; i += char_length) {\n+    char_length = utf8_char_length(string_list[i]);\n\nReview Comment:\n   no what i am saying is you don't need to care about utf8_char_length..just check char by char.\n\n\n\n",
                    "created": "2022-07-06T15:36:37.938+0000",
                    "updated": "2022-07-06T15:36:37.938+0000",
                    "started": "2022-07-06T15:36:37.938+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "788311",
                    "issueId": "13427737"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427737/worklog/790388",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on code in PR #12391:\nURL: https://github.com/apache/arrow/pull/12391#discussion_r919989846\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -3034,4 +3034,53 @@ int32_t instr_utf8(const char* string, int32_t string_len, const char* substring\n   }\n   return 0;\n }\n+\n+FORCE_INLINE\n+int32_t find_in_set_utf8_utf8(int64_t context, const char* to_find, int32_t to_find_len,\n+                              const char* string_list, int32_t string_list_len) {\n+  // Return 0 if entry len <= 0\n+  if (to_find_len <= 0 || string_list_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Invalid input values.\");\n+    return 0;\n+  }\n+\n+  // Return 0 if to search entry have commas\n+  if (is_substr_utf8_utf8(to_find, to_find_len, reinterpret_cast<const char*>(\",\"), 1)) {\n+    return 0;\n+  }\n+\n+  int32_t cur_pos_in_array = 0;\n+  int32_t cur_length = 0;\n+  bool matching = true;\n+\n+  int char_length = 0;\n+  for (int i = 0; i < string_list_len; i += char_length) {\n+    char_length = utf8_char_length(string_list[i]);\n\nReview Comment:\n   Oh, fine, now I get it. done!\n\n\n\n",
                    "created": "2022-07-13T11:56:25.347+0000",
                    "updated": "2022-07-13T11:56:25.347+0000",
                    "started": "2022-07-13T11:56:25.347+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790388",
                    "issueId": "13427737"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427737/worklog/793021",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on code in PR #12391:\nURL: https://github.com/apache/arrow/pull/12391#discussion_r925175950\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -3034,4 +3034,50 @@ int32_t instr_utf8(const char* string, int32_t string_len, const char* substring\n   }\n   return 0;\n }\n+\n+FORCE_INLINE\n+int32_t find_in_set_utf8_utf8(int64_t context, const char* to_find, int32_t to_find_len,\n+                              const char* string_list, int32_t string_list_len) {\n+  // Return 0 if entry len = 0\n+  if (to_find_len == 0 || string_list_len == 0) {\n\nReview Comment:\n   this is not correct..if there are empty strings then result can be positive no.\n\n\n\n",
                    "created": "2022-07-20T05:03:01.716+0000",
                    "updated": "2022-07-20T05:03:01.716+0000",
                    "started": "2022-07-20T05:03:01.715+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "793021",
                    "issueId": "13427737"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427737/worklog/793165",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on code in PR #12391:\nURL: https://github.com/apache/arrow/pull/12391#discussion_r925472022\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -3034,4 +3034,50 @@ int32_t instr_utf8(const char* string, int32_t string_len, const char* substring\n   }\n   return 0;\n }\n+\n+FORCE_INLINE\n+int32_t find_in_set_utf8_utf8(int64_t context, const char* to_find, int32_t to_find_len,\n+                              const char* string_list, int32_t string_list_len) {\n+  // Return 0 if entry len = 0\n+  if (to_find_len == 0 || string_list_len == 0) {\n\nReview Comment:\n   @projjal\r\n   I followed the Hive results, **should I return false validity**?\r\n   I found one error in my return...\r\n   If **find_len && list_len == 0** the **return is 1**.\n\n\n\n",
                    "created": "2022-07-20T11:03:49.912+0000",
                    "updated": "2022-07-20T11:03:49.912+0000",
                    "started": "2022-07-20T11:03:49.912+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "793165",
                    "issueId": "13427737"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427737/worklog/794172",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on code in PR #12391:\nURL: https://github.com/apache/arrow/pull/12391#discussion_r927535154\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops_test.cc:\n##########\n@@ -2702,4 +2702,26 @@ TEST(TestStringOps, TestInstr) {\n   result = instr_utf8(s1.c_str(), s1_len, s2.c_str(), s2_len);\n   EXPECT_EQ(result, 8);\n }\n+\n+TEST(TestStringOps, TestFindInSet) {\n+  gandiva::ExecutionContext ctx;\n+  auto ctx_ptr = reinterpret_cast<int64_t>(&ctx);\n+  int32_t result;\n+  result = find_in_set_utf8_utf8(ctx_ptr, \"EE\", 2, \",A,B,C,D,EE,F\", 13);\n+  EXPECT_EQ(result, 6);\n+  result = find_in_set_utf8_utf8(ctx_ptr, \"A\", 1, \"A,B,C,D,EE,F\", 12);\n+  EXPECT_EQ(result, 1);\n+  result = find_in_set_utf8_utf8(ctx_ptr, \"AAAB\", 4, \"A,B,C,D,EE,F\", 12);\n+  EXPECT_EQ(result, 0);\n+  result = find_in_set_utf8_utf8(ctx_ptr, \"E,E\", 3, \"A,B,C,D,EE,F\", 12);\n+  EXPECT_EQ(result, 0);\n+  result = find_in_set_utf8_utf8(ctx_ptr, \"C\", 1, \"A,B,,,,,,,C,,,,,\", 16);\n\nReview Comment:\n   Can you add following testcases\r\n   find_in_set(\"\", \"a,b,,c,d\") = 3\r\n   find_in_set(\"\", \",\") = 1\r\n   Also add a test case with multibyte charaters just in case.\n\n\n\n",
                    "created": "2022-07-22T10:51:15.845+0000",
                    "updated": "2022-07-22T10:51:15.845+0000",
                    "started": "2022-07-22T10:51:15.845+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "794172",
                    "issueId": "13427737"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427737/worklog/794255",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on code in PR #12391:\nURL: https://github.com/apache/arrow/pull/12391#discussion_r927731273\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops_test.cc:\n##########\n@@ -2702,4 +2702,26 @@ TEST(TestStringOps, TestInstr) {\n   result = instr_utf8(s1.c_str(), s1_len, s2.c_str(), s2_len);\n   EXPECT_EQ(result, 8);\n }\n+\n+TEST(TestStringOps, TestFindInSet) {\n+  gandiva::ExecutionContext ctx;\n+  auto ctx_ptr = reinterpret_cast<int64_t>(&ctx);\n+  int32_t result;\n+  result = find_in_set_utf8_utf8(ctx_ptr, \"EE\", 2, \",A,B,C,D,EE,F\", 13);\n+  EXPECT_EQ(result, 6);\n+  result = find_in_set_utf8_utf8(ctx_ptr, \"A\", 1, \"A,B,C,D,EE,F\", 12);\n+  EXPECT_EQ(result, 1);\n+  result = find_in_set_utf8_utf8(ctx_ptr, \"AAAB\", 4, \"A,B,C,D,EE,F\", 12);\n+  EXPECT_EQ(result, 0);\n+  result = find_in_set_utf8_utf8(ctx_ptr, \"E,E\", 3, \"A,B,C,D,EE,F\", 12);\n+  EXPECT_EQ(result, 0);\n+  result = find_in_set_utf8_utf8(ctx_ptr, \"C\", 1, \"A,B,,,,,,,C,,,,,\", 16);\n\nReview Comment:\n   Done, the requested tests has working fine without any changes in code\n\n\n\n",
                    "created": "2022-07-22T14:52:37.107+0000",
                    "updated": "2022-07-22T14:52:37.107+0000",
                    "started": "2022-07-22T14:52:37.107+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "794255",
                    "issueId": "13427737"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427737/worklog/797638",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on PR #12391:\nURL: https://github.com/apache/arrow/pull/12391#issuecomment-1204017582\n\n   @kou @pitrou Can you check and merge that PR? It is approved by Projjal and me\n\n\n",
                    "created": "2022-08-03T14:22:43.555+0000",
                    "updated": "2022-08-03T14:22:43.555+0000",
                    "started": "2022-08-03T14:22:43.554+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797638",
                    "issueId": "13427737"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427737/worklog/797660",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #12391:\nURL: https://github.com/apache/arrow/pull/12391#issuecomment-1204056562\n\n   Hmm... Arrow has a proper List type, so why take a comma-delimited string?\n\n\n",
                    "created": "2022-08-03T14:53:26.481+0000",
                    "updated": "2022-08-03T14:53:26.481+0000",
                    "started": "2022-08-03T14:53:26.481+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797660",
                    "issueId": "13427737"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427737/worklog/797664",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #12391:\nURL: https://github.com/apache/arrow/pull/12391#discussion_r936772777\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -3034,4 +3034,45 @@ int32_t instr_utf8(const char* string, int32_t string_len, const char* substring\n   }\n   return 0;\n }\n+\n+FORCE_INLINE\n+int32_t find_in_set_utf8_utf8(int64_t context, const char* to_find, int32_t to_find_len,\n+                              const char* string_list, int32_t string_list_len) {\n+  // Return 0 if to search entry have commas\n+  if (is_substr_utf8_utf8(to_find, to_find_len, reinterpret_cast<const char*>(\",\"), 1)) {\n+    return 0;\n+  }\n+\n+  int32_t cur_pos_in_array = 0;\n+  int32_t cur_length = 0;\n+  bool matching = true;\n+\n+  for (int i = 0; i < string_list_len; i++) {\n+    if (string_list[i] == ',') {\n+      cur_pos_in_array++;\n+      if (matching && cur_length == to_find_len) {\n+        return cur_pos_in_array;\n+      } else {\n+        matching = true;\n+        cur_length = 0;\n+      }\n+    } else {\n+      if (cur_length + 1 <= string_list_len) {\n\nReview Comment:\n   Why this condition? In which situation is it false?\n\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -3034,4 +3034,45 @@ int32_t instr_utf8(const char* string, int32_t string_len, const char* substring\n   }\n   return 0;\n }\n+\n+FORCE_INLINE\n+int32_t find_in_set_utf8_utf8(int64_t context, const char* to_find, int32_t to_find_len,\n+                              const char* string_list, int32_t string_list_len) {\n+  // Return 0 if to search entry have commas\n+  if (is_substr_utf8_utf8(to_find, to_find_len, reinterpret_cast<const char*>(\",\"), 1)) {\n\nReview Comment:\n   Since you are looking for a single unicode codepoint below 128, you can probably do this faster using `memchr`.\n\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -3034,4 +3034,45 @@ int32_t instr_utf8(const char* string, int32_t string_len, const char* substring\n   }\n   return 0;\n }\n+\n+FORCE_INLINE\n+int32_t find_in_set_utf8_utf8(int64_t context, const char* to_find, int32_t to_find_len,\n+                              const char* string_list, int32_t string_list_len) {\n+  // Return 0 if to search entry have commas\n+  if (is_substr_utf8_utf8(to_find, to_find_len, reinterpret_cast<const char*>(\",\"), 1)) {\n+    return 0;\n+  }\n+\n+  int32_t cur_pos_in_array = 0;\n+  int32_t cur_length = 0;\n+  bool matching = true;\n+\n+  for (int i = 0; i < string_list_len; i++) {\n+    if (string_list[i] == ',') {\n+      cur_pos_in_array++;\n+      if (matching && cur_length == to_find_len) {\n+        return cur_pos_in_array;\n+      } else {\n+        matching = true;\n+        cur_length = 0;\n+      }\n+    } else {\n+      if (cur_length + 1 <= string_list_len) {\n+        if (!matching || (memcmp(string_list + i, to_find + cur_length, 1))) {\n\nReview Comment:\n   Why call `memcmp` if you are only comparing a single byte?\n\n\n\n",
                    "created": "2022-08-03T15:03:01.268+0000",
                    "updated": "2022-08-03T15:03:01.268+0000",
                    "started": "2022-08-03T15:03:01.268+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797664",
                    "issueId": "13427737"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427737/worklog/797710",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on PR #12391:\nURL: https://github.com/apache/arrow/pull/12391#issuecomment-1204283993\n\n   > Hmm... Arrow has a proper List type, so why take a comma-delimited string?\r\n   \r\n   @pitrou there are two things:\r\n   - Currently, the Gandiva project does not accept complex types(we need to plan to add them in future)\r\n   - That function we got from the Apache Hive project and the signature is a comma-separated string: https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=27362046\r\n   \r\n   In the future, after adding the support for complex types we can add support for it using lists\n\n\n",
                    "created": "2022-08-03T17:47:35.777+0000",
                    "updated": "2022-08-03T17:47:35.777+0000",
                    "started": "2022-08-03T17:47:35.776+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797710",
                    "issueId": "13427737"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427737/worklog/807435",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque closed pull request #12391: ARROW-15644: [C++][Gandiva] Implement Find_In_Set Function\nURL: https://github.com/apache/arrow/pull/12391\n\n\n",
                    "created": "2022-09-09T14:24:42.237+0000",
                    "updated": "2022-09-09T14:24:42.237+0000",
                    "started": "2022-09-09T14:24:42.236+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "807435",
                    "issueId": "13427737"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3efa6ee1[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3573309e[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a271a0e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@267c3c14[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7043625c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2837b540[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a722d22[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5d293ee4[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3693e69f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@239bd8b8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@288bfad4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3c413f3f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "2022-02-10 11:25:04.0",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15644/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-02-10T11:25:04.000+0000",
        "updated": "2022-09-09T14:24:42.000+0000",
        "timeoriginalestimate": null,
        "description": "Returns the first occurrence of str in strList where strList is a comma-delimited string. Returns null if either argument is null. Returns 0 if the first argument contains any commas.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Implement Find_In_Set Function",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [],
            "maxResults": 0,
            "total": 0,
            "startAt": 0
        },
        "customfield_12311820": "0|z0zg7c:",
        "customfield_12314139": null
    }
}