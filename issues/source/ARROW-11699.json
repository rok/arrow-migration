{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13359637",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637",
    "key": "ARROW-11699",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351947",
                "id": "12351947",
                "description": "",
                "name": "10.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dplyr",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12645377",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12645377",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "outwardIssue": {
                    "id": "13476032",
                    "key": "ARROW-17362",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476032",
                    "fields": {
                        "summary": "[R] Implement dplyr::across() inside summarise()",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                            "id": "7",
                            "description": "The sub-task of the issue",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                            "name": "Sub-task",
                            "subtask": true,
                            "avatarId": 21146
                        }
                    }
                }
            },
            {
                "id": "12645518",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12645518",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "outwardIssue": {
                    "id": "13476405",
                    "key": "ARROW-17387",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476405",
                    "fields": {
                        "summary": "[R] Implement dplyr::across() inside filter()",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                            "id": "7",
                            "description": "The sub-task of the issue",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                            "name": "Sub-task",
                            "subtask": true,
                            "avatarId": 21146
                        }
                    }
                }
            },
            {
                "id": "12645376",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12645376",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "outwardIssue": {
                    "id": "13476034",
                    "key": "ARROW-17364",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476034",
                    "fields": {
                        "summary": "[R] Implement .names argument inside across()",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                            "id": "7",
                            "description": "The sub-task of the issue",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                            "name": "Sub-task",
                            "subtask": true,
                            "avatarId": 21146
                        }
                    }
                }
            },
            {
                "id": "12647566",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12647566",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13481161",
                    "key": "ARROW-17689",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13481161",
                    "fields": {
                        "summary": "[R] Implement dplyr::across() inside group_by()",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                            "id": "7",
                            "description": "The sub-task of the issue",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                            "name": "Sub-task",
                            "subtask": true,
                            "avatarId": 21146
                        }
                    }
                }
            },
            {
                "id": "12647564",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12647564",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13481266",
                    "key": "ARROW-17698",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13481266",
                    "fields": {
                        "summary": "[R] Implement use of `where()` inside `across()",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                            "id": "7",
                            "description": "The sub-task of the issue",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                            "name": "Sub-task",
                            "subtask": true,
                            "avatarId": 21146
                        }
                    }
                }
            },
            {
                "id": "12647350",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12647350",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13480984",
                    "key": "ARROW-17674",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480984",
                    "fields": {
                        "summary": "[R] Implement dplyr::across() inside arrange()",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12647585",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12647585",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13481515",
                    "key": "ARROW-17727",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13481515",
                    "fields": {
                        "summary": "[R] Implement dplyr::across() inside group_by()",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12647567",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12647567",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13481162",
                    "key": "ARROW-17690",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13481162",
                    "fields": {
                        "summary": "[R] Implement dplyr::across() inside distinct()",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                            "id": "7",
                            "description": "The sub-task of the issue",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                            "name": "Sub-task",
                            "subtask": true,
                            "avatarId": 21146
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
            "name": "thisisnic",
            "key": "thisisnic",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "Nicola Crane",
            "active": true,
            "timeZone": "Africa/Casablanca"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 26400,
            "total": 26400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 26400,
            "total": 26400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11699/votes",
            "votes": 4,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 44,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/797437",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic opened a new pull request, #13786:\nURL: https://github.com/apache/arrow/pull/13786\n\n   Currently a fairly minimal draft\n\n\n",
                    "created": "2022-08-02T22:57:45.334+0000",
                    "updated": "2022-08-02T22:57:45.334+0000",
                    "started": "2022-08-02T22:57:45.333+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797437",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/797438",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#issuecomment-1203292487\n\n   https://issues.apache.org/jira/browse/ARROW-11699\n\n\n",
                    "created": "2022-08-02T22:58:04.630+0000",
                    "updated": "2022-08-02T22:58:04.630+0000",
                    "started": "2022-08-02T22:58:04.630+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797438",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/797439",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#issuecomment-1203292495\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-08-02T22:58:06.529+0000",
                    "updated": "2022-08-02T22:58:06.529+0000",
                    "started": "2022-08-02T22:58:06.528+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797439",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/797447",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#discussion_r936124019\n\n\n##########\nr/tests/testthat/test-dplyr-mutate.R:\n##########\n@@ -279,16 +279,16 @@ test_that(\"dplyr::mutate's examples\", {\n   # Examples we don't support should succeed\n   # but warn that they're pulling data into R to do so\n \n-  # across and autosplicing: ARROW-11699\n   compare_dplyr_binding(\n     .input %>%\n       select(name, homeworld, species) %>%\n       mutate(across(!name, as.factor)) %>%\n       collect(),\n     starwars,\n-    warning = \"Expression across.*not supported in Arrow\"\n   )\n\nReview Comment:\n   This test now fails with the following error:\r\n   \r\n   ```\r\n   Error in `collect()`:\r\n   ! Invalid: ExecuteScalarExpression cannot Execute non-scalar expression dictionary_encode(homeworld, {null_encoding_behavior=MASK})\r\n   /home/nic2/arrow/cpp/src/arrow/compute/exec/project_node.cc:91  ExecuteScalarExpression(simplified_expr, target, plan()->exec_context())\r\n   /home/nic2/arrow/cpp/src/arrow/compute/exec/exec_plan.cc:559  iterator_.Next()\r\n   /home/nic2/arrow/cpp/src/arrow/record_batch.cc:337  ReadNext(&batch)\r\n   /home/nic2/arrow/cpp/src/arrow/record_batch.cc:351  ToRecordBatches()\r\n   Run `rlang::last_error()` to see where the error occurred.\r\n   ```\n\n\n\n",
                    "created": "2022-08-02T23:57:27.664+0000",
                    "updated": "2022-08-02T23:57:27.664+0000",
                    "started": "2022-08-02T23:57:27.663+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797447",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/797448",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#discussion_r936124019\n\n\n##########\nr/tests/testthat/test-dplyr-mutate.R:\n##########\n@@ -279,16 +279,16 @@ test_that(\"dplyr::mutate's examples\", {\n   # Examples we don't support should succeed\n   # but warn that they're pulling data into R to do so\n \n-  # across and autosplicing: ARROW-11699\n   compare_dplyr_binding(\n     .input %>%\n       select(name, homeworld, species) %>%\n       mutate(across(!name, as.factor)) %>%\n       collect(),\n     starwars,\n-    warning = \"Expression across.*not supported in Arrow\"\n   )\n\nReview Comment:\n   This test now fails with the following error:\r\n   \r\n   ```\r\n   Error in `collect()`:\r\n   ! Invalid: ExecuteScalarExpression cannot Execute non-scalar expression dictionary_encode(homeworld, {null_encoding_behavior=MASK})\r\n   /home/nic2/arrow/cpp/src/arrow/compute/exec/project_node.cc:91  ExecuteScalarExpression(simplified_expr, target, plan()->exec_context())\r\n   /home/nic2/arrow/cpp/src/arrow/compute/exec/exec_plan.cc:559  iterator_.Next()\r\n   /home/nic2/arrow/cpp/src/arrow/record_batch.cc:337  ReadNext(&batch)\r\n   /home/nic2/arrow/cpp/src/arrow/record_batch.cc:351  ToRecordBatches()\r\n   Run `rlang::last_error()` to see where the error occurred.\r\n   ```\r\n   TODO: investigate more, open JIRA, wrap test in expect_error with comment linking to JIRA\n\n\n\n",
                    "created": "2022-08-02T23:57:57.530+0000",
                    "updated": "2022-08-02T23:57:57.530+0000",
                    "started": "2022-08-02T23:57:57.529+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797448",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/797466",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on code in PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#discussion_r936158922\n\n\n##########\nr/tests/testthat/test-dplyr-mutate.R:\n##########\n@@ -279,16 +279,16 @@ test_that(\"dplyr::mutate's examples\", {\n   # Examples we don't support should succeed\n   # but warn that they're pulling data into R to do so\n \n-  # across and autosplicing: ARROW-11699\n   compare_dplyr_binding(\n     .input %>%\n       select(name, homeworld, species) %>%\n       mutate(across(!name, as.factor)) %>%\n       collect(),\n     starwars,\n-    warning = \"Expression across.*not supported in Arrow\"\n   )\n\nReview Comment:\n   There already is at least one issue for `as.factor` in Acero: ARROW-12632, and I think there was another. \r\n   \r\n   I'd change this test to use a different function that is supported.\n\n\n\n",
                    "created": "2022-08-03T01:32:54.985+0000",
                    "updated": "2022-08-03T01:32:54.985+0000",
                    "started": "2022-08-03T01:32:54.985+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797466",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/797468",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on code in PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#discussion_r936158922\n\n\n##########\nr/tests/testthat/test-dplyr-mutate.R:\n##########\n@@ -279,16 +279,16 @@ test_that(\"dplyr::mutate's examples\", {\n   # Examples we don't support should succeed\n   # but warn that they're pulling data into R to do so\n \n-  # across and autosplicing: ARROW-11699\n   compare_dplyr_binding(\n     .input %>%\n       select(name, homeworld, species) %>%\n       mutate(across(!name, as.factor)) %>%\n       collect(),\n     starwars,\n-    warning = \"Expression across.*not supported in Arrow\"\n   )\n\nReview Comment:\n   There already is at least one issue for `as.factor` in Acero: ARROW-12632, and I think there was another. \r\n   \r\n   I'd change this test to use a different function.\n\n\n\n",
                    "created": "2022-08-03T01:34:10.068+0000",
                    "updated": "2022-08-03T01:34:10.068+0000",
                    "started": "2022-08-03T01:34:10.068+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797468",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/797469",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on code in PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#discussion_r936160255\n\n\n##########\nr/tests/testthat/test-dplyr-mutate.R:\n##########\n@@ -279,16 +279,16 @@ test_that(\"dplyr::mutate's examples\", {\n   # Examples we don't support should succeed\n   # but warn that they're pulling data into R to do so\n \n-  # across and autosplicing: ARROW-11699\n   compare_dplyr_binding(\n     .input %>%\n       select(name, homeworld, species) %>%\n       mutate(across(!name, as.factor)) %>%\n       collect(),\n     starwars,\n-    warning = \"Expression across.*not supported in Arrow\"\n   )\n\nReview Comment:\n   Though we should probably make sure that `as.factor` isn't mapped to anything in the dplyr funcs for now, so that this fails in the right way rather than try to collect.\n\n\n\n",
                    "created": "2022-08-03T01:36:20.297+0000",
                    "updated": "2022-08-03T01:36:20.297+0000",
                    "started": "2022-08-03T01:36:20.296+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797469",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/797586",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#issuecomment-1203884371\n\n   Will come back to this once I'm back from holiday, but as a reminder to my future self, where I was up to:\r\n   * I have a minimal working example that runs successfully in `mutate()`\r\n   * I wanted to incorporate the `.names` argument from `across()` and so had refactor the column naming code out into its own function, to pass that into later\r\n   * I tried to implement `across()` in `summarise()` - this broke things with the `.groups` argument and I don't yet understand what/why, other than that `.groups` works differently with Datasets versus Tables - there may be some context in https://github.com/apache/arrow/issues/11184\r\n   * it's also worth considering whether it's worth just focussing on `across()` for `mutate()` as a first step, and extending to `summarize()` later\n\n\n",
                    "created": "2022-08-03T12:28:24.372+0000",
                    "updated": "2022-08-03T12:28:24.372+0000",
                    "started": "2022-08-03T12:28:24.371+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797586",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/799515",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#issuecomment-1209922101\n\n   I've opened https://issues.apache.org/jira/browse/ARROW-17362 as a follow-up to implement `across()` for `summarise()` too. It doesn't quite work as-is, and I don't want to overcomplicate this PR for now.\n\n\n",
                    "created": "2022-08-09T21:40:24.281+0000",
                    "updated": "2022-08-09T21:40:24.281+0000",
                    "started": "2022-08-09T21:40:24.280+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "799515",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/799639",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#discussion_r942167570\n\n\n##########\nr/tests/testthat/test-dplyr-mutate.R:\n##########\n@@ -279,16 +279,16 @@ test_that(\"dplyr::mutate's examples\", {\n   # Examples we don't support should succeed\n   # but warn that they're pulling data into R to do so\n \n-  # across and autosplicing: ARROW-11699\n   compare_dplyr_binding(\n     .input %>%\n       select(name, homeworld, species) %>%\n       mutate(across(!name, as.factor)) %>%\n       collect(),\n     starwars,\n-    warning = \"Expression across.*not supported in Arrow\"\n   )\n\nReview Comment:\n   I've opened [a ticket](https://issues.apache.org/jira/browse/ARROW-17371) and [associated PR](https://github.com/apache/arrow/pull/13836) to remove the existing mapping.\n\n\n\n",
                    "created": "2022-08-10T08:26:13.522+0000",
                    "updated": "2022-08-10T08:26:13.522+0000",
                    "started": "2022-08-10T08:26:13.521+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "799639",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/799640",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#discussion_r942167570\n\n\n##########\nr/tests/testthat/test-dplyr-mutate.R:\n##########\n@@ -279,16 +279,16 @@ test_that(\"dplyr::mutate's examples\", {\n   # Examples we don't support should succeed\n   # but warn that they're pulling data into R to do so\n \n-  # across and autosplicing: ARROW-11699\n   compare_dplyr_binding(\n     .input %>%\n       select(name, homeworld, species) %>%\n       mutate(across(!name, as.factor)) %>%\n       collect(),\n     starwars,\n-    warning = \"Expression across.*not supported in Arrow\"\n   )\n\nReview Comment:\n   I've changed the test, and then opened [a ticket](https://issues.apache.org/jira/browse/ARROW-17371) and [associated PR](https://github.com/apache/arrow/pull/13836) to remove the existing mapping.\n\n\n\n",
                    "created": "2022-08-10T08:26:43.549+0000",
                    "updated": "2022-08-10T08:26:43.549+0000",
                    "started": "2022-08-10T08:26:43.548+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "799640",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/800021",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on code in PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#discussion_r943592958\n\n\n##########\nr/R/dplyr-mutate.R:\n##########\n@@ -151,3 +153,95 @@ ensure_named_exprs <- function(exprs) {\n   names(exprs)[unnamed] <- map_chr(exprs[unnamed], format_expr)\n   exprs\n }\n+\n+# Take the input quos and unfold any instances of across()\n+# into individual quosures\n+unfold_across <- function(.data, quos_in) {\n+  quos_out <- list()\n+  # Check for any expressions starting with across\n+  for (quo_i in seq_along(quos_in)) {\n+    quo_in <- quos_in[quo_i]\n+    quo_expr <- quo_get_expr(quo_in[[1]])\n+\n+    if (is_call(quo_expr, \"across\")) {\n+      new_quos <- list()\n+      across_call <- match.call(dplyr::across, quo_expr)\n+\n+      if (!all(names(across_call[-1]) %in% c(\".cols\", \".fns\", \".names\"))) {\n+        abort(\"`...` argument to `across()` is deprecated in dplyr and not supported in Arrow\")\n+      }\n+\n+      # ARROW-17364: add support for .names argument\n+      if (!is.null(across_call[[\".names\"]])) {\n+        abort(\"`.names` argument to `across()` not yet supported in Arrow\")\n+      }\n+\n+      # use select() to get the column names so we can take advantage of tidyselect\n+      cols <- names(select(.data, !!across_call[[\".cols\"]]))\n+      funcs <- as.character(across_call[[\".fns\"]])\n+\n+      # calling across() with .fns = NULL returns all columns unchanged\n+      if (is_empty(funcs)) {\n+        return()\n+      }\n+\n+      if (funcs[[1]] == \"~\") {\n+        abort(\n+          paste(\n+            \"purrr-style lambda functions as `.fns` argument to `across()`\",\n+            \"not yet supported in Arrow\"\n+          )\n+        )\n+      }\n+\n+      # if only 1 function, we overwrite the old columns with the new values\n+      if (length(funcs) == 1) {\n+        # work out the quosures from the call\n+        col_syms <- syms(cols)\n+        new_quos <- map(col_syms, ~ quo(!!call2(funcs, .x)))\n+        new_quos <- set_names(new_quos, cols)\n+      } else {\n+        # remove `c()` and `list()` which have been used to specify functions\n+        extracted_funcs <- funcs[map_lgl(funcs, ~ !.x %in% c(\"c\", \"list\"))]\n+\n+        func_list <- ensure_named_funcs(extracted_funcs)\n+        new_quos <- quosures_from_func_list(func_list, cols)\n+      }\n+\n+      quos_out <- append(quos_out, new_quos)\n\nReview Comment:\n   I'm still working my head around this but I think that *somewhere* you need to `rlang::quo_set_env(quo_out, rlang::quo_get_env(quo_in))` to make sure that symbol references that are *not* columns are fetched from the calling environment. I'm struggling to come up with an example where that can happen so maybe this isn't relevant here, but it seems like somehow `rlang::quo_get_env(quo_in))` should be passed on to the output quosures? \n\n\n\n##########\nr/R/dplyr-mutate.R:\n##########\n@@ -151,3 +153,95 @@ ensure_named_exprs <- function(exprs) {\n   names(exprs)[unnamed] <- map_chr(exprs[unnamed], format_expr)\n   exprs\n }\n+\n+# Take the input quos and unfold any instances of across()\n+# into individual quosures\n+unfold_across <- function(.data, quos_in) {\n+  quos_out <- list()\n+  # Check for any expressions starting with across\n+  for (quo_i in seq_along(quos_in)) {\n+    quo_in <- quos_in[quo_i]\n+    quo_expr <- quo_get_expr(quo_in[[1]])\n+\n+    if (is_call(quo_expr, \"across\")) {\n+      new_quos <- list()\n+      across_call <- match.call(dplyr::across, quo_expr)\n+\n+      if (!all(names(across_call[-1]) %in% c(\".cols\", \".fns\", \".names\"))) {\n+        abort(\"`...` argument to `across()` is deprecated in dplyr and not supported in Arrow\")\n+      }\n+\n+      # ARROW-17364: add support for .names argument\n+      if (!is.null(across_call[[\".names\"]])) {\n+        abort(\"`.names` argument to `across()` not yet supported in Arrow\")\n+      }\n+\n+      # use select() to get the column names so we can take advantage of tidyselect\n+      cols <- names(select(.data, !!across_call[[\".cols\"]]))\n\nReview Comment:\n   ```suggestion\r\n         cols <- names(dplyr::select(.data, !!across_call[[\".cols\"]]))\r\n   ```\n\n\n\n##########\nr/R/dplyr-mutate.R:\n##########\n@@ -151,3 +153,95 @@ ensure_named_exprs <- function(exprs) {\n   names(exprs)[unnamed] <- map_chr(exprs[unnamed], format_expr)\n   exprs\n }\n+\n+# Take the input quos and unfold any instances of across()\n+# into individual quosures\n+unfold_across <- function(.data, quos_in) {\n+  quos_out <- list()\n+  # Check for any expressions starting with across\n+  for (quo_i in seq_along(quos_in)) {\n+    quo_in <- quos_in[quo_i]\n+    quo_expr <- quo_get_expr(quo_in[[1]])\n+\n+    if (is_call(quo_expr, \"across\")) {\n+      new_quos <- list()\n+      across_call <- match.call(dplyr::across, quo_expr)\n+\n+      if (!all(names(across_call[-1]) %in% c(\".cols\", \".fns\", \".names\"))) {\n+        abort(\"`...` argument to `across()` is deprecated in dplyr and not supported in Arrow\")\n+      }\n+\n+      # ARROW-17364: add support for .names argument\n+      if (!is.null(across_call[[\".names\"]])) {\n+        abort(\"`.names` argument to `across()` not yet supported in Arrow\")\n+      }\n+\n+      # use select() to get the column names so we can take advantage of tidyselect\n+      cols <- names(select(.data, !!across_call[[\".cols\"]]))\n+      funcs <- as.character(across_call[[\".fns\"]])\n+\n+      # calling across() with .fns = NULL returns all columns unchanged\n+      if (is_empty(funcs)) {\n+        return()\n+      }\n+\n+      if (funcs[[1]] == \"~\") {\n+        abort(\n+          paste(\n+            \"purrr-style lambda functions as `.fns` argument to `across()`\",\n+            \"not yet supported in Arrow\"\n+          )\n+        )\n+      }\n+\n+      # if only 1 function, we overwrite the old columns with the new values\n+      if (length(funcs) == 1) {\n+        # work out the quosures from the call\n+        col_syms <- syms(cols)\n+        new_quos <- map(col_syms, ~ quo(!!call2(funcs, .x)))\n+        new_quos <- set_names(new_quos, cols)\n+      } else {\n+        # remove `c()` and `list()` which have been used to specify functions\n+        extracted_funcs <- funcs[map_lgl(funcs, ~ !.x %in% c(\"c\", \"list\"))]\n+\n+        func_list <- ensure_named_funcs(extracted_funcs)\n+        new_quos <- quosures_from_func_list(func_list, cols)\n+      }\n+\n+      quos_out <- append(quos_out, new_quos)\n+    } else {\n+      quos_out <- append(quos_out, quo_in)\n+    }\n+  }\n+\n+  quos_out\n+}\n+\n+# if the function is unnamed (an empty character), use the index instead\n+ensure_named_funcs <- function(funcs) {\n+  func_list <- as.list(funcs)\n+  func_names <- names(funcs) %||% rep(\"\", length(funcs))\n+  func_indices <- seq_along(funcs)\n+  names(func_list) <- map2_chr(func_names, func_indices, max)\n+  func_list\n+}\n+\n+# given a named list of functions and column names, create a list of new quosures\n+quosures_from_func_list <- function(func_list, cols) {\n+  func_list_full <- rep(func_list, length(cols))\n+  cols_list_full <- rep(cols, each = length(func_list))\n+\n+  # get names of new quosures\n+  new_quo_names <- map2_chr(\n+    names(func_list_full), cols_list_full,\n+    ~ paste(.y, .x, sep = \"_\")\n+  )\n\nReview Comment:\n   Can you implement the `.names` argument here? There's almost certainly a cleaner way to do this but something like:\r\n   \r\n   ``` r\r\n   withr::with_environment(as.environment(list(.col = \"something\", .fn = \"something-else\")), glue::glue(\"{.col}_{.fn}\"))\r\n   #> something_something-else\r\n   ```\r\n   \r\n   <sup>Created on 2022-08-11 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup> \n\n\n\n##########\nr/tests/testthat/test-dplyr-mutate.R:\n##########\n@@ -589,3 +588,106 @@ test_that(\"mutate() and transmute() with namespaced functions\", {\n     tbl\n   )\n })\n+\n+test_that(\"Can use across() within mutate()\", {\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(c(dbl, dbl2), round)) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(c(dbl, dbl2), list(exp, sqrt))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  # across() arguments not in default order\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(.fns = round, c(dbl, dbl2))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  # ARROW-17364: .names argument not yet supported for across()\n+  expect_error(\n+    tbl %>%\n+      arrow_table() %>%\n+      mutate(across(c(dbl, dbl2), round, .names = \"{.col}.{.fn}\")) %>%\n+      collect(),\n+    regexp = \"`.names` argument to `across()` not yet supported in Arrow\",\n+    fixed = TRUE\n+  )\n+\n+  # ellipses (...) are a deprecated argument\n+  expect_error(\n+    tbl %>%\n+      arrow_table() %>%\n+      mutate(across(c(dbl, dbl2), round, digits = -1)) %>%\n+      collect(),\n+    regexp = \"`...` argument to `across()` is deprecated in dplyr and not supported in Arrow\",\n+    fixed = TRUE\n+  )\n+\n+  # alternative ways of specifying .fns - as a list\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(1:dbl2, list(round))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n\nReview Comment:\n   It seems like this will work but what about `across(1:dbl2, list(\"fun1\" = round, \"fun2\" = exp))`? Does putting something obnoxious like `across(1:dbl2, list(\"fun1\" = round(this_is_not_cool(something_else)), \"fun2\" = exp))` result in an interpretable error?\n\n\n\n##########\nr/R/dplyr-mutate.R:\n##########\n@@ -24,7 +24,9 @@ mutate.arrow_dplyr_query <- function(.data,\n                                      .before = NULL,\n                                      .after = NULL) {\n   call <- match.call()\n-  exprs <- ensure_named_exprs(quos(...))\n+\n+  expression_list <- unfold_across(.data, quos(...))\n+  exprs <- ensure_named_exprs(expression_list)\n\nReview Comment:\n   Should this also get copied to `filter()` (or maybe that's already another ticket?)\n\n\n\n##########\nr/tests/testthat/test-dplyr-mutate.R:\n##########\n@@ -589,3 +588,106 @@ test_that(\"mutate() and transmute() with namespaced functions\", {\n     tbl\n   )\n })\n+\n+test_that(\"Can use across() within mutate()\", {\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(c(dbl, dbl2), round)) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(c(dbl, dbl2), list(exp, sqrt))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  # across() arguments not in default order\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(.fns = round, c(dbl, dbl2))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  # ARROW-17364: .names argument not yet supported for across()\n+  expect_error(\n+    tbl %>%\n+      arrow_table() %>%\n+      mutate(across(c(dbl, dbl2), round, .names = \"{.col}.{.fn}\")) %>%\n+      collect(),\n+    regexp = \"`.names` argument to `across()` not yet supported in Arrow\",\n+    fixed = TRUE\n+  )\n+\n+  # ellipses (...) are a deprecated argument\n+  expect_error(\n+    tbl %>%\n+      arrow_table() %>%\n+      mutate(across(c(dbl, dbl2), round, digits = -1)) %>%\n+      collect(),\n+    regexp = \"`...` argument to `across()` is deprecated in dplyr and not supported in Arrow\",\n+    fixed = TRUE\n+  )\n+\n+  # alternative ways of specifying .fns - as a list\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(1:dbl2, list(round))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  # supply .fns as a one-item vector\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(1:dbl2, c(round))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  # ARROW-17366: purrr-style lmabda functions not yet supported\n\nReview Comment:\n   ```suggestion\r\n     # ARROW-17366: purrr-style lambda functions not yet supported\r\n   ```\n\n\n\n",
                    "created": "2022-08-11T15:20:46.932+0000",
                    "updated": "2022-08-11T15:20:46.932+0000",
                    "started": "2022-08-11T15:20:46.932+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "800021",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/800025",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#discussion_r943625393\n\n\n##########\nr/R/dplyr-mutate.R:\n##########\n@@ -24,7 +24,9 @@ mutate.arrow_dplyr_query <- function(.data,\n                                      .before = NULL,\n                                      .after = NULL) {\n   call <- match.call()\n-  exprs <- ensure_named_exprs(quos(...))\n+\n+  expression_list <- unfold_across(.data, quos(...))\n+  exprs <- ensure_named_exprs(expression_list)\n\nReview Comment:\n   Good spot, didn't see it could be used in `filter()`!  Opened a ticket now: [ARROW-17387](https://issues.apache.org/jira/browse/ARROW-17387)\n\n\n\n",
                    "created": "2022-08-11T15:30:12.658+0000",
                    "updated": "2022-08-11T15:30:12.658+0000",
                    "started": "2022-08-11T15:30:12.658+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "800025",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/800334",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#discussion_r944522607\n\n\n##########\nr/tests/testthat/test-dplyr-mutate.R:\n##########\n@@ -589,3 +588,106 @@ test_that(\"mutate() and transmute() with namespaced functions\", {\n     tbl\n   )\n })\n+\n+test_that(\"Can use across() within mutate()\", {\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(c(dbl, dbl2), round)) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(c(dbl, dbl2), list(exp, sqrt))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  # across() arguments not in default order\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(.fns = round, c(dbl, dbl2))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  # ARROW-17364: .names argument not yet supported for across()\n+  expect_error(\n+    tbl %>%\n+      arrow_table() %>%\n+      mutate(across(c(dbl, dbl2), round, .names = \"{.col}.{.fn}\")) %>%\n+      collect(),\n+    regexp = \"`.names` argument to `across()` not yet supported in Arrow\",\n+    fixed = TRUE\n+  )\n+\n+  # ellipses (...) are a deprecated argument\n+  expect_error(\n+    tbl %>%\n+      arrow_table() %>%\n+      mutate(across(c(dbl, dbl2), round, digits = -1)) %>%\n+      collect(),\n+    regexp = \"`...` argument to `across()` is deprecated in dplyr and not supported in Arrow\",\n+    fixed = TRUE\n+  )\n+\n+  # alternative ways of specifying .fns - as a list\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(1:dbl2, list(round))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n\nReview Comment:\n   Good catches there, have added in a couple of failing tests for those that I will make pass.\n\n\n\n",
                    "created": "2022-08-12T14:28:33.398+0000",
                    "updated": "2022-08-12T14:28:33.398+0000",
                    "started": "2022-08-12T14:28:33.398+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "800334",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/800569",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#discussion_r945649469\n\n\n##########\nr/tests/testthat/test-dplyr-mutate.R:\n##########\n@@ -589,3 +588,106 @@ test_that(\"mutate() and transmute() with namespaced functions\", {\n     tbl\n   )\n })\n+\n+test_that(\"Can use across() within mutate()\", {\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(c(dbl, dbl2), round)) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(c(dbl, dbl2), list(exp, sqrt))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  # across() arguments not in default order\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(.fns = round, c(dbl, dbl2))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  # ARROW-17364: .names argument not yet supported for across()\n+  expect_error(\n+    tbl %>%\n+      arrow_table() %>%\n+      mutate(across(c(dbl, dbl2), round, .names = \"{.col}.{.fn}\")) %>%\n+      collect(),\n+    regexp = \"`.names` argument to `across()` not yet supported in Arrow\",\n+    fixed = TRUE\n+  )\n+\n+  # ellipses (...) are a deprecated argument\n+  expect_error(\n+    tbl %>%\n+      arrow_table() %>%\n+      mutate(across(c(dbl, dbl2), round, digits = -1)) %>%\n+      collect(),\n+    regexp = \"`...` argument to `across()` is deprecated in dplyr and not supported in Arrow\",\n+    fixed = TRUE\n+  )\n+\n+  # alternative ways of specifying .fns - as a list\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(1:dbl2, list(round))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n\nReview Comment:\n   1. `across(1:dbl2, list(\"fun1\" = round, \"fun2\" = exp))`\r\n   Good catch!  I've now fixed it to properly check for the name from the list and not just the function name.\r\n   \r\n   2. ` across(1:dbl2, list(\"fun1\" = round(this_is_not_cool(something_else)), \"fun2\" = exp))`\r\n   This doesn't work in R either. We get the \"not supported in Arrow\" error, which then pushes it to R, which then gives the error it would have given anyway. I've added a test in for it, but it's a bit clunky and I'm not sure if we need it. What do you think? (It's the test which has `round(sqrt(dbl))` in it).\n\n\n\n",
                    "created": "2022-08-15T11:45:39.755+0000",
                    "updated": "2022-08-15T11:45:39.755+0000",
                    "started": "2022-08-15T11:45:39.754+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "800569",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/800572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#discussion_r945659781\n\n\n##########\nr/R/dplyr-mutate.R:\n##########\n@@ -151,3 +153,95 @@ ensure_named_exprs <- function(exprs) {\n   names(exprs)[unnamed] <- map_chr(exprs[unnamed], format_expr)\n   exprs\n }\n+\n+# Take the input quos and unfold any instances of across()\n+# into individual quosures\n+unfold_across <- function(.data, quos_in) {\n+  quos_out <- list()\n+  # Check for any expressions starting with across\n+  for (quo_i in seq_along(quos_in)) {\n+    quo_in <- quos_in[quo_i]\n+    quo_expr <- quo_get_expr(quo_in[[1]])\n+\n+    if (is_call(quo_expr, \"across\")) {\n+      new_quos <- list()\n+      across_call <- match.call(dplyr::across, quo_expr)\n+\n+      if (!all(names(across_call[-1]) %in% c(\".cols\", \".fns\", \".names\"))) {\n+        abort(\"`...` argument to `across()` is deprecated in dplyr and not supported in Arrow\")\n+      }\n+\n+      # ARROW-17364: add support for .names argument\n+      if (!is.null(across_call[[\".names\"]])) {\n+        abort(\"`.names` argument to `across()` not yet supported in Arrow\")\n+      }\n+\n+      # use select() to get the column names so we can take advantage of tidyselect\n+      cols <- names(select(.data, !!across_call[[\".cols\"]]))\n+      funcs <- as.character(across_call[[\".fns\"]])\n+\n+      # calling across() with .fns = NULL returns all columns unchanged\n+      if (is_empty(funcs)) {\n+        return()\n+      }\n+\n+      if (funcs[[1]] == \"~\") {\n+        abort(\n+          paste(\n+            \"purrr-style lambda functions as `.fns` argument to `across()`\",\n+            \"not yet supported in Arrow\"\n+          )\n+        )\n+      }\n+\n+      # if only 1 function, we overwrite the old columns with the new values\n+      if (length(funcs) == 1) {\n+        # work out the quosures from the call\n+        col_syms <- syms(cols)\n+        new_quos <- map(col_syms, ~ quo(!!call2(funcs, .x)))\n+        new_quos <- set_names(new_quos, cols)\n+      } else {\n+        # remove `c()` and `list()` which have been used to specify functions\n+        extracted_funcs <- funcs[map_lgl(funcs, ~ !.x %in% c(\"c\", \"list\"))]\n+\n+        func_list <- ensure_named_funcs(extracted_funcs)\n+        new_quos <- quosures_from_func_list(func_list, cols)\n+      }\n+\n+      quos_out <- append(quos_out, new_quos)\n\nReview Comment:\n   Agreed.\n\n\n\n",
                    "created": "2022-08-15T12:03:56.328+0000",
                    "updated": "2022-08-15T12:03:56.328+0000",
                    "started": "2022-08-15T12:03:56.328+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "800572",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/800573",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#discussion_r945659781\n\n\n##########\nr/R/dplyr-mutate.R:\n##########\n@@ -151,3 +153,95 @@ ensure_named_exprs <- function(exprs) {\n   names(exprs)[unnamed] <- map_chr(exprs[unnamed], format_expr)\n   exprs\n }\n+\n+# Take the input quos and unfold any instances of across()\n+# into individual quosures\n+unfold_across <- function(.data, quos_in) {\n+  quos_out <- list()\n+  # Check for any expressions starting with across\n+  for (quo_i in seq_along(quos_in)) {\n+    quo_in <- quos_in[quo_i]\n+    quo_expr <- quo_get_expr(quo_in[[1]])\n+\n+    if (is_call(quo_expr, \"across\")) {\n+      new_quos <- list()\n+      across_call <- match.call(dplyr::across, quo_expr)\n+\n+      if (!all(names(across_call[-1]) %in% c(\".cols\", \".fns\", \".names\"))) {\n+        abort(\"`...` argument to `across()` is deprecated in dplyr and not supported in Arrow\")\n+      }\n+\n+      # ARROW-17364: add support for .names argument\n+      if (!is.null(across_call[[\".names\"]])) {\n+        abort(\"`.names` argument to `across()` not yet supported in Arrow\")\n+      }\n+\n+      # use select() to get the column names so we can take advantage of tidyselect\n+      cols <- names(select(.data, !!across_call[[\".cols\"]]))\n+      funcs <- as.character(across_call[[\".fns\"]])\n+\n+      # calling across() with .fns = NULL returns all columns unchanged\n+      if (is_empty(funcs)) {\n+        return()\n+      }\n+\n+      if (funcs[[1]] == \"~\") {\n+        abort(\n+          paste(\n+            \"purrr-style lambda functions as `.fns` argument to `across()`\",\n+            \"not yet supported in Arrow\"\n+          )\n+        )\n+      }\n+\n+      # if only 1 function, we overwrite the old columns with the new values\n+      if (length(funcs) == 1) {\n+        # work out the quosures from the call\n+        col_syms <- syms(cols)\n+        new_quos <- map(col_syms, ~ quo(!!call2(funcs, .x)))\n+        new_quos <- set_names(new_quos, cols)\n+      } else {\n+        # remove `c()` and `list()` which have been used to specify functions\n+        extracted_funcs <- funcs[map_lgl(funcs, ~ !.x %in% c(\"c\", \"list\"))]\n+\n+        func_list <- ensure_named_funcs(extracted_funcs)\n+        new_quos <- quosures_from_func_list(func_list, cols)\n+      }\n+\n+      quos_out <- append(quos_out, new_quos)\n\nReview Comment:\n   Agreed, updated now.\n\n\n\n",
                    "created": "2022-08-15T12:04:21.412+0000",
                    "updated": "2022-08-15T12:04:21.412+0000",
                    "started": "2022-08-15T12:04:21.411+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "800573",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/800574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#discussion_r945660572\n\n\n##########\nr/R/dplyr-mutate.R:\n##########\n@@ -151,3 +153,95 @@ ensure_named_exprs <- function(exprs) {\n   names(exprs)[unnamed] <- map_chr(exprs[unnamed], format_expr)\n   exprs\n }\n+\n+# Take the input quos and unfold any instances of across()\n+# into individual quosures\n+unfold_across <- function(.data, quos_in) {\n+  quos_out <- list()\n+  # Check for any expressions starting with across\n+  for (quo_i in seq_along(quos_in)) {\n+    quo_in <- quos_in[quo_i]\n+    quo_expr <- quo_get_expr(quo_in[[1]])\n+\n+    if (is_call(quo_expr, \"across\")) {\n+      new_quos <- list()\n+      across_call <- match.call(dplyr::across, quo_expr)\n+\n+      if (!all(names(across_call[-1]) %in% c(\".cols\", \".fns\", \".names\"))) {\n+        abort(\"`...` argument to `across()` is deprecated in dplyr and not supported in Arrow\")\n+      }\n+\n+      # ARROW-17364: add support for .names argument\n+      if (!is.null(across_call[[\".names\"]])) {\n+        abort(\"`.names` argument to `across()` not yet supported in Arrow\")\n+      }\n+\n+      # use select() to get the column names so we can take advantage of tidyselect\n+      cols <- names(select(.data, !!across_call[[\".cols\"]]))\n+      funcs <- as.character(across_call[[\".fns\"]])\n+\n+      # calling across() with .fns = NULL returns all columns unchanged\n+      if (is_empty(funcs)) {\n+        return()\n+      }\n+\n+      if (funcs[[1]] == \"~\") {\n+        abort(\n+          paste(\n+            \"purrr-style lambda functions as `.fns` argument to `across()`\",\n+            \"not yet supported in Arrow\"\n+          )\n+        )\n+      }\n+\n+      # if only 1 function, we overwrite the old columns with the new values\n+      if (length(funcs) == 1) {\n+        # work out the quosures from the call\n+        col_syms <- syms(cols)\n+        new_quos <- map(col_syms, ~ quo(!!call2(funcs, .x)))\n+        new_quos <- set_names(new_quos, cols)\n+      } else {\n+        # remove `c()` and `list()` which have been used to specify functions\n+        extracted_funcs <- funcs[map_lgl(funcs, ~ !.x %in% c(\"c\", \"list\"))]\n+\n+        func_list <- ensure_named_funcs(extracted_funcs)\n+        new_quos <- quosures_from_func_list(func_list, cols)\n+      }\n+\n+      quos_out <- append(quos_out, new_quos)\n+    } else {\n+      quos_out <- append(quos_out, quo_in)\n+    }\n+  }\n+\n+  quos_out\n+}\n+\n+# if the function is unnamed (an empty character), use the index instead\n+ensure_named_funcs <- function(funcs) {\n+  func_list <- as.list(funcs)\n+  func_names <- names(funcs) %||% rep(\"\", length(funcs))\n+  func_indices <- seq_along(funcs)\n+  names(func_list) <- map2_chr(func_names, func_indices, max)\n+  func_list\n+}\n+\n+# given a named list of functions and column names, create a list of new quosures\n+quosures_from_func_list <- function(func_list, cols) {\n+  func_list_full <- rep(func_list, length(cols))\n+  cols_list_full <- rep(cols, each = length(func_list))\n+\n+  # get names of new quosures\n+  new_quo_names <- map2_chr(\n+    names(func_list_full), cols_list_full,\n+    ~ paste(.y, .x, sep = \"_\")\n+  )\n\nReview Comment:\n   I've deferred it to another ticket - [ARROW-17364](https://issues.apache.org/jira/browse/ARROW-17364)\n\n\n\n",
                    "created": "2022-08-15T12:05:21.473+0000",
                    "updated": "2022-08-15T12:05:21.473+0000",
                    "started": "2022-08-15T12:05:21.473+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "800574",
                    "issueId": "13359637"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/worklog/800599",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on code in PR #13786:\nURL: https://github.com/apache/arrow/pull/13786#discussion_r945704963\n\n\n##########\nr/tests/testthat/test-dplyr-mutate.R:\n##########\n@@ -589,3 +588,127 @@ test_that(\"mutate() and transmute() with namespaced functions\", {\n     tbl\n   )\n })\n+\n+test_that(\"Can use across() within mutate()\", {\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(c(dbl, dbl2), round)) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(c(dbl, dbl2), list(exp, sqrt))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(c(dbl, dbl2), list(\"fun1\" = round, \"fun2\" = sqrt))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  # this is valid is neither R nor Arrow\n+  expect_error(\n+    expect_warning(\n+      compare_dplyr_binding(\n+        .input %>%\n+          arrow_table() %>%\n+          mutate(across(c(dbl, dbl2), list(\"fun1\" = round(sqrt(dbl))))) %>%\n+          collect(),\n+        tbl,\n+        warning = TRUE\n+      )\n+    )\n+  )\n+\n+  # across() arguments not in default order\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(.fns = round, c(dbl, dbl2))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  # ARROW-17364: .names argument not yet supported for across()\n+  expect_error(\n+    tbl %>%\n+      arrow_table() %>%\n+      mutate(across(c(dbl, dbl2), round, .names = \"{.col}.{.fn}\")) %>%\n+      collect(),\n+    regexp = \"`.names` argument to `across()` not yet supported in Arrow\",\n+    fixed = TRUE\n+  )\n+\n+  # ellipses (...) are a deprecated argument\n+  expect_error(\n+    tbl %>%\n+      arrow_table() %>%\n+      mutate(across(c(dbl, dbl2), round, digits = -1)) %>%\n+      collect(),\n+    regexp = \"`...` argument to `across()` is deprecated in dplyr and not supported in Arrow\",\n+    fixed = TRUE\n+  )\n+\n+  # alternative ways of specifying .fns - as a list\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(1:dbl2, list(round))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  # supply .fns as a one-item vector\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(1:dbl2, c(round))) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  # ARROW-17366: purrr-style lambda functions not yet supported\n+  expect_error(\n+    compare_dplyr_binding(\n+      .input %>%\n+        mutate(across(1:dbl2, ~ round(.x, digits = -1))) %>%\n+        collect(),\n+      tbl\n+    ),\n+    regexp = \"purrr-style lambda functions as `.fns` argument to `across()` not yet supported in Arrow\",\n+    fixed = TRUE\n+  )\n+\n+  # .fns = NULL, the default\n+  compare_dplyr_binding(\n+    .input %>%\n+      mutate(across(1:dbl2, NULL)) %>%\n+      collect(),\n+    tbl\n+  )\n+\n+  expect_error(\n+    compare_dplyr_binding(\n+      .input %>%\n+        mutate(across(where(is.double))) %>%\n+        collect(),\n+      tbl\n+    ),\n+    \"Unsupported selection helper\"\n\nReview Comment:\n   Why is this unsupported? Do we have JIRA(s) for this? Seems like it should work.\n\n\n\n##########\nr/R/dplyr-mutate.R:\n##########\n@@ -151,3 +153,95 @@ ensure_named_exprs <- function(exprs) {\n   names(exprs)[unnamed] <- map_chr(exprs[unnamed], format_expr)\n   exprs\n }\n+\n+# Take the input quos and unfold any instances of across()\n+# into individual quosures\n+unfold_across <- function(.data, quos_in) {\n+  quos_out <- list()\n+  # Check for any expressions starting with across\n+  for (quo_i in seq_along(quos_in)) {\n\nReview Comment:\n   I don't see any tests where there is more than `mutate(across(...))`, i.e. no other quosures in this list. We should probably test the corners of how across interacts with other mutate expressions.\n\n\n\n##########\nr/R/dplyr-mutate.R:\n##########\n@@ -24,7 +24,9 @@ mutate.arrow_dplyr_query <- function(.data,\n                                      .before = NULL,\n                                      .after = NULL) {\n   call <- match.call()\n-  exprs <- ensure_named_exprs(quos(...))\n+\n+  expression_list <- unfold_across(.data, quos(...))\n\nReview Comment:\n   I know you've deferred this from filter and summarize, but is that necessary? Is it more involved than adding in this `unfold_across` in them? There's no other modifications to mutate() so it seems reasonable to guess that it would be that straightforward in the other functions too.\n\n\n\n##########\nr/R/dplyr-mutate.R:\n##########\n@@ -151,3 +153,95 @@ ensure_named_exprs <- function(exprs) {\n   names(exprs)[unnamed] <- map_chr(exprs[unnamed], format_expr)\n   exprs\n }\n+\n+# Take the input quos and unfold any instances of across()\n+# into individual quosures\n+unfold_across <- function(.data, quos_in) {\n\nReview Comment:\n   How does this compare/contrast to how dplyr does this? \n\n\n\n##########\nr/R/dplyr-mutate.R:\n##########\n@@ -151,3 +153,95 @@ ensure_named_exprs <- function(exprs) {\n   names(exprs)[unnamed] <- map_chr(exprs[unnamed], format_expr)\n   exprs\n }\n+\n+# Take the input quos and unfold any instances of across()\n+# into individual quosures\n+unfold_across <- function(.data, quos_in) {\n+  quos_out <- list()\n+  # Check for any expressions starting with across\n+  for (quo_i in seq_along(quos_in)) {\n+    quo_in <- quos_in[quo_i]\n+    quo_expr <- quo_get_expr(quo_in[[1]])\n+    quo_env <- quo_get_env(quo_in[[1]])\n+\n+    if (is_call(quo_expr, \"across\")) {\n+      new_quos <- list()\n+      across_call <- call_match(quo_expr, dplyr::across, defaults = TRUE)\n+\n+      if (!all(names(across_call[-1]) %in% c(\".cols\", \".fns\", \".names\"))) {\n+        abort(\"`...` argument to `across()` is deprecated in dplyr and not supported in Arrow\")\n+      }\n+\n+      # ARROW-17364: add support for .names argument\n+      if (!is.null(across_call[[\".names\"]])) {\n+        abort(\"`.names` argument to `across()` not yet supported in Arrow\")\n+      }\n+\n+      # use select() to get the columns so we can take advantage of tidyselect\n+      source_cols <- names(dplyr::select(.data, !!across_call[[\".cols\"]]))\n+      funcs <- across_call[[\".fns\"]]\n+\n+      # calling across() with .fns = NULL returns all columns unchanged\n+      if (is_empty(funcs)) {\n+        return()\n+      }\n+\n+      if (!is_list(funcs) && as.character(funcs)[[1]] == \"~\") {\n+        abort(\n+          paste(\n+            \"purrr-style lambda functions as `.fns` argument to `across()`\",\n\nReview Comment:\n   Why not? We already import `purrr::as_mapper`, is this more complicated than `funcs <- map(funcs, as_mapper)`?\n\n\n\n",
                    "created": "2022-08-15T13:45:32.334+0000",
                    "updated": "2022-08-15T13:45:32.334+0000",
                    "started": "2022-08-15T13:45:32.333+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "800599",
                    "issueId": "13359637"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 26400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@464d80c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6657f0aa[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a1024d7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@439b559f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@23cfb447[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2a2b7af8[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3186d5f6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@282859f4[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@769bbd3a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@716e5ab[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b8b9da[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6a35a7c0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 26400,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Sep 01 15:57:33 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-09-01T15:57:33.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11699/watchers",
            "watchCount": 5,
            "isWatching": false
        },
        "created": "2021-02-19T17:28:03.000+0000",
        "updated": "2022-09-14T13:56:16.000+0000",
        "timeoriginalestimate": null,
        "description": "It's not a generic, but because it seems only to be called inside of functions like `mutate()`, we can insert our own version of it into the NSE data mask",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 26400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Implement dplyr::across() inside mutate()",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/comment/17569183",
                    "id": "17569183",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "body": "This is something that there has been user interest in on Twitter: https://twitter.com/dseverski/status/1542237072798400514",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "created": "2022-07-20T21:56:45.690+0000",
                    "updated": "2022-08-03T00:06:00.835+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359637/comment/17599052",
                    "id": "17599052",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "body": "Issue resolved by pull request 13786\n[https://github.com/apache/arrow/pull/13786]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "created": "2022-09-01T15:57:33.474+0000",
                    "updated": "2022-09-01T15:57:33.474+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0nuo8:",
        "customfield_12314139": null
    }
}