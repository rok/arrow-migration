{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13137176",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176",
    "key": "ARROW-2116",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342901",
                "id": "12342901",
                "description": "",
                "name": "JS-0.4.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-02-11"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12526579",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12526579",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "outwardIssue": {
                    "id": "13137175",
                    "key": "ARROW-2115",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137175",
                    "fields": {
                        "summary": "[JS] Test arrow data production in integration test",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paul.e.taylor",
            "name": "paul.e.taylor",
            "key": "paul.e.taylor",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paul Taylor",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332552",
                "id": "12332552",
                "name": "JavaScript"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
            "name": "bhulette",
            "key": "bhulette",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Brian Hulette",
            "active": true,
            "timeZone": "America/Vancouver"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
            "name": "bhulette",
            "key": "bhulette",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Brian Hulette",
            "active": true,
            "timeZone": "America/Vancouver"
        },
        "aggregateprogress": {
            "progress": 41400,
            "total": 41400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 41400,
            "total": 41400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2116/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 70,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/101507",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt opened a new pull request #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035\n \n \n   https://issues.apache.org/jira/browse/ARROW-2116\r\n   \r\n   This PR represents a first pass at implementing the IPC writers for binary stream and file formats in JS.\r\n   \r\n   I've also added scripts to do the `json-to-arrow`, `file-to-stream`, and `stream-to-file` steps of the integration tests. These scripts rely on a new feature in Node 10 (the next LTS version), so please update. My attempts to use a library to remain backwards-compatible with Node 9 were unsuccessful.\r\n   \r\n   I've only done the APIs to serialize a preexisting Table to stream or file formats so far. We will want to refactor this soon to support end-to-end streaming.\r\n   \r\n   When I run the integration tests locally, the JS and Java libraries can consume the JS-produced files, but the C++ segfaults with no error message:\r\n   ```\r\n   JS producing, C++ consuming\r\n   ##########################################################\r\n   ==========================================================\r\n   Testing file /home/ptaylor/dev/arrow/integration/data/struct_example.json\r\n   ==========================================================\r\n   -- Creating binary inputs\r\n   -- Validating file\r\n   Command failed: /home/ptaylor/dev/arrow/cpp/build/debug/json-integration-test --integration --arrow=/tmp/tmpcxauxm_b/19673ecd1aa14854a0e7983ab8e14921_struct_example.json_to_arrow --json=/home/ptaylor/dev/arrow/integration/data/struct_example.json --mode=VALIDATE\r\n   With output:\r\n   --------------\r\n   \r\n   --------------\r\n   ```\r\n   \r\n   I'd appreciate if anybody can help me debug what's going wrong here.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-13T04:35:55.724+0000",
                    "updated": "2018-05-13T04:35:55.724+0000",
                    "started": "2018-05-13T04:35:55.724+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101507",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/101939",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#issuecomment-388995340\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=h1) Report\n   > Merging [#2035](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/19af8625daca479bfa32d1d733724d552efb04d6?src=pr&el=desc) will **not change** coverage.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2035/graphs/tree.svg?src=pr&token=LpTCFbqVT1&width=650&height=150)](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=tree)\n   \n   ```diff\n   @@           Coverage Diff           @@\n   ##           master    #2035   +/-   ##\n   =======================================\n     Coverage   86.28%   86.28%           \n   =======================================\n     Files          11       11           \n     Lines         773      773           \n   =======================================\n     Hits          667      667           \n     Misses        106      106\n   ```\n   \n   \n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=footer). Last update [19af862...ed85572](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-14T23:33:36.931+0000",
                    "updated": "2018-05-14T23:33:36.931+0000",
                    "started": "2018-05-14T23:33:36.930+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101939",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/101944",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#issuecomment-388995340\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=h1) Report\n   > Merging [#2035](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/19af8625daca479bfa32d1d733724d552efb04d6?src=pr&el=desc) will **increase** coverage by `1.15%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2035/graphs/tree.svg?src=pr&token=LpTCFbqVT1&width=650&height=150)](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2035      +/-   ##\n   ==========================================\n   + Coverage   86.28%   87.44%   +1.15%     \n   ==========================================\n     Files          11      189     +178     \n     Lines         773    29368   +28595     \n   ==========================================\n   + Hits          667    25681   +25014     \n   - Misses        106     3687    +3581\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/ipc/writer.cc](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvd3JpdGVyLmNj) | `93.19% <0%> (\u00f8)` | |\n   | [cpp/src/arrow/visitor\\_inline.h](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy92aXNpdG9yX2lubGluZS5o) | `93.33% <0%> (\u00f8)` | |\n   | [cpp/src/arrow/util/compression\\_brotli.cc](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2NvbXByZXNzaW9uX2Jyb3RsaS5jYw==) | `85.71% <0%> (\u00f8)` | |\n   | [cpp/src/arrow/test-common.h](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90ZXN0LWNvbW1vbi5o) | `100% <0%> (\u00f8)` | |\n   | [cpp/src/arrow/python/numpy\\_interop.h](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vbnVtcHlfaW50ZXJvcC5o) | `100% <0%> (\u00f8)` | |\n   | [cpp/src/arrow/pretty\\_print-test.cc](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9wcmV0dHlfcHJpbnQtdGVzdC5jYw==) | `100% <0%> (\u00f8)` | |\n   | [cpp/src/arrow/io/file.cc](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9maWxlLmNj) | `93.67% <0%> (\u00f8)` | |\n   | [cpp/src/arrow/io/io-hdfs-test.cc](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9pby1oZGZzLXRlc3QuY2M=) | `17.44% <0%> (\u00f8)` | |\n   | [cpp/src/arrow/ipc/dictionary.h](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvZGljdGlvbmFyeS5o) | `100% <0%> (\u00f8)` | |\n   | [cpp/src/arrow/python/init.cc](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vaW5pdC5jYw==) | `100% <0%> (\u00f8)` | |\n   | ... and [168 more](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=footer). Last update [19af862...ed85572](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-15T00:02:14.697+0000",
                    "updated": "2018-05-15T00:02:14.697+0000",
                    "started": "2018-05-15T00:02:14.696+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101944",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/102262",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#issuecomment-388995340\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=h1) Report\n   > Merging [#2035](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/75acaba67d7e2ead5ccc51e42396e916b44db3f9?src=pr&el=desc) will **decrease** coverage by `1.16%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2035/graphs/tree.svg?width=650&height=150&token=LpTCFbqVT1&src=pr)](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2035      +/-   ##\n   ==========================================\n   - Coverage   87.44%   86.28%   -1.17%     \n   ==========================================\n     Files         189       11     -178     \n     Lines       29368      773   -28595     \n   ==========================================\n   - Hits        25682      667   -25015     \n   + Misses       3686      106    -3580\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/io/hdfs-internal.cc](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9oZGZzLWludGVybmFsLmNj) | | |\n   | [cpp/src/arrow/io/file.cc](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9maWxlLmNj) | | |\n   | [cpp/src/plasma/client.cc](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50LmNj) | | |\n   | [cpp/src/arrow/python/pyarrow.cc](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vcHlhcnJvdy5jYw==) | | |\n   | [cpp/src/arrow/util/stl.h](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3N0bC5o) | | |\n   | [cpp/src/arrow/io/io-buffered-test.cc](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9pby1idWZmZXJlZC10ZXN0LmNj) | | |\n   | [cpp/src/arrow/util/rle-encoding-test.cc](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3JsZS1lbmNvZGluZy10ZXN0LmNj) | | |\n   | [cpp/src/arrow/util/bit-stream-utils.h](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2JpdC1zdHJlYW0tdXRpbHMuaA==) | | |\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | | |\n   | [cpp/src/arrow/util/bit-util.h](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2JpdC11dGlsLmg=) | | |\n   | ... and [168 more](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=footer). Last update [75acaba...f497f7a](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-15T19:51:46.696+0000",
                    "updated": "2018-05-15T19:51:46.696+0000",
                    "started": "2018-05-15T19:51:46.695+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "102262",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/102668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#issuecomment-388995340\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=h1) Report\n   > Merging [#2035](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/5bb3d85e82a9dbbc2b04ca37ff3819574df94f8a?src=pr&el=desc) will **increase** coverage by `<.01%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2035/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2035      +/-   ##\n   ==========================================\n   + Coverage   87.44%   87.44%   +<.01%     \n   ==========================================\n     Files         189      189              \n     Lines       29374    29374              \n   ==========================================\n   + Hits        25685    25686       +1     \n   + Misses       3689     3688       -1\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `99.43% <0%> (+0.56%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=footer). Last update [5bb3d85...b765b12](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-16T21:27:59.122+0000",
                    "updated": "2018-05-16T21:27:59.122+0000",
                    "started": "2018-05-16T21:27:59.121+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "102668",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/103149",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#issuecomment-388995340\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=h1) Report\n   > Merging [#2035](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/5bb3d85e82a9dbbc2b04ca37ff3819574df94f8a?src=pr&el=desc) will **decrease** coverage by `1.16%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2035/graphs/tree.svg?token=LpTCFbqVT1&src=pr&height=150&width=650)](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2035      +/-   ##\n   ==========================================\n   - Coverage   87.44%   86.27%   -1.17%     \n   ==========================================\n     Files         189      242      +53     \n     Lines       29374    41034   +11660     \n   ==========================================\n   + Hits        25685    35404    +9719     \n   - Misses       3689     5630    +1941\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/src/datatypes.rs](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-cnVzdC9zcmMvZGF0YXR5cGVzLnJz) | `71.83% <0%> (-1.34%)` | :arrow_down: |\n   | [rust/src/list\\_builder.rs](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbGlzdF9idWlsZGVyLnJz) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [rust/src/list.rs](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbGlzdC5ycw==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_types.py](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF90eXBlcy5weQ==) | `100% <0%> (\u00f8)` | |\n   | [python/pyarrow/util.py](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdXRpbC5weQ==) | `83.33% <0%> (\u00f8)` | |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | `67.82% <0%> (\u00f8)` | |\n   | [python/pyarrow/tests/test\\_schema.py](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9zY2hlbWEucHk=) | `100% <0%> (\u00f8)` | |\n   | [python/pyarrow/tests/test\\_feather.py](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9mZWF0aGVyLnB5) | `97.79% <0%> (\u00f8)` | |\n   | [python/pyarrow/public-api.pxi](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcHVibGljLWFwaS5weGk=) | `48.9% <0%> (\u00f8)` | |\n   | [python/pyarrow/tests/test\\_array.py](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9hcnJheS5weQ==) | `100% <0%> (\u00f8)` | |\n   | ... and [50 more](https://codecov.io/gh/apache/arrow/pull/2035/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=footer). Last update [5bb3d85...917c2fc](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-17T22:38:33.198+0000",
                    "updated": "2018-05-17T22:38:33.198+0000",
                    "started": "2018-05-17T22:38:33.198+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "103149",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/103550",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on a change in pull request #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#discussion_r189389592\n \n \n\n ##########\n File path: js/bin/file-to-stream.js\n ##########\n @@ -0,0 +1,37 @@\n+#! /usr/bin/env node\n+\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+const fs = require('fs');\n+const path = require('path');\n+\n+const encoding = 'binary';\n+const ext = process.env.ARROW_JS_DEBUG === 'src' ? '.ts' : '';\n+const { util: { PipeIterator } } = require(`../index${ext}`);\n+const { Table, serializeStream, fromReadableStream } = require(`../index${ext}`);\n+\n+(async () => {\n+    // Todo (ptaylor): implement `serializeStreamAsync` that accepts an\n+    // AsyncIterable<Buffer>, rather than aggregating into a Table first\n+    const in_ = process.argv.length < 3\n+        ? process.stdin : fs.createReadStream(path.resolve(process.argv[2]));\n+    const out = process.argv.length < 4\n+        ? process.stdout : fs.createWriteStream(path.resolve(process.argv[3]));\n+    new PipeIterator(serializeStream(await Table.fromAsync(fromReadableStream(in_))), encoding).pipe(out);\n \n Review comment:\n   Would it be possible to wrap this logic into a method on `Table`? Something like \r\n   ``` js\r\n   public serializeTo (out) {\r\n       new PipeIterator(serializeStream(this, 'binary')).pipe(out)\r\n   }\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-18T20:48:48.491+0000",
                    "updated": "2018-05-18T20:48:48.491+0000",
                    "started": "2018-05-18T20:48:48.491+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "103550",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/103553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on a change in pull request #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#discussion_r189391927\n \n \n\n ##########\n File path: js/bin/file-to-stream.js\n ##########\n @@ -0,0 +1,37 @@\n+#! /usr/bin/env node\n+\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+const fs = require('fs');\n+const path = require('path');\n+\n+const encoding = 'binary';\n+const ext = process.env.ARROW_JS_DEBUG === 'src' ? '.ts' : '';\n+const { util: { PipeIterator } } = require(`../index${ext}`);\n+const { Table, serializeStream, fromReadableStream } = require(`../index${ext}`);\n+\n+(async () => {\n+    // Todo (ptaylor): implement `serializeStreamAsync` that accepts an\n+    // AsyncIterable<Buffer>, rather than aggregating into a Table first\n+    const in_ = process.argv.length < 3\n+        ? process.stdin : fs.createReadStream(path.resolve(process.argv[2]));\n+    const out = process.argv.length < 4\n+        ? process.stdout : fs.createWriteStream(path.resolve(process.argv[3]));\n+    new PipeIterator(serializeStream(await Table.fromAsync(fromReadableStream(in_))), encoding).pipe(out);\n \n Review comment:\n   @TheNeuralBit yeah, that's a bit what the comment above is about.\r\n   \r\n   Ideally we don't have to aggregate the input into a table, instead just stream the `fromReadableStream()` values through a hypothetical `writeStreamAsync` method:\r\n   ```js\r\n   writeStreamAsync: (input: AsyncIterable<Schema | RecordBatch>) => AsyncIterable<Uint8Array>;\r\n   ```\r\n   \r\n   That said, the table should also have a `serialize()` method that returns a `PipeIterator` instead of a concatenated buffer, like we do with [`rowsToString()`](https://github.com/trxcllnt/arrow/blob/js-buffer-writer/js/src/table.ts#L189)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-18T20:59:53.452+0000",
                    "updated": "2018-05-18T20:59:53.452+0000",
                    "started": "2018-05-18T20:59:53.451+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "103553",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/103557",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on a change in pull request #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#discussion_r189393717\n \n \n\n ##########\n File path: js/bin/file-to-stream.js\n ##########\n @@ -0,0 +1,37 @@\n+#! /usr/bin/env node\n+\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+const fs = require('fs');\n+const path = require('path');\n+\n+const encoding = 'binary';\n+const ext = process.env.ARROW_JS_DEBUG === 'src' ? '.ts' : '';\n+const { util: { PipeIterator } } = require(`../index${ext}`);\n+const { Table, serializeStream, fromReadableStream } = require(`../index${ext}`);\n+\n+(async () => {\n+    // Todo (ptaylor): implement `serializeStreamAsync` that accepts an\n+    // AsyncIterable<Buffer>, rather than aggregating into a Table first\n+    const in_ = process.argv.length < 3\n+        ? process.stdin : fs.createReadStream(path.resolve(process.argv[2]));\n+    const out = process.argv.length < 4\n+        ? process.stdout : fs.createWriteStream(path.resolve(process.argv[3]));\n+    new PipeIterator(serializeStream(await Table.fromAsync(fromReadableStream(in_))), encoding).pipe(out);\n \n Review comment:\n   > That said, the table should also have a serialize() method that returns a PipeIterator instead of a concatenated buffer, like we do with rowsToString()\r\n   Yeah that's all I was getting at\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-18T21:08:26.156+0000",
                    "updated": "2018-05-18T21:08:26.156+0000",
                    "started": "2018-05-18T21:08:26.155+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "103557",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/103558",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on a change in pull request #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#discussion_r189393717\n \n \n\n ##########\n File path: js/bin/file-to-stream.js\n ##########\n @@ -0,0 +1,37 @@\n+#! /usr/bin/env node\n+\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+const fs = require('fs');\n+const path = require('path');\n+\n+const encoding = 'binary';\n+const ext = process.env.ARROW_JS_DEBUG === 'src' ? '.ts' : '';\n+const { util: { PipeIterator } } = require(`../index${ext}`);\n+const { Table, serializeStream, fromReadableStream } = require(`../index${ext}`);\n+\n+(async () => {\n+    // Todo (ptaylor): implement `serializeStreamAsync` that accepts an\n+    // AsyncIterable<Buffer>, rather than aggregating into a Table first\n+    const in_ = process.argv.length < 3\n+        ? process.stdin : fs.createReadStream(path.resolve(process.argv[2]));\n+    const out = process.argv.length < 4\n+        ? process.stdout : fs.createWriteStream(path.resolve(process.argv[3]));\n+    new PipeIterator(serializeStream(await Table.fromAsync(fromReadableStream(in_))), encoding).pipe(out);\n \n Review comment:\n   > That said, the table should also have a serialize() method that returns a PipeIterator instead of a concatenated buffer, like we do with rowsToString()\r\n   \r\n   Yeah that's all I was getting at\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-18T21:08:34.018+0000",
                    "updated": "2018-05-18T21:08:34.018+0000",
                    "started": "2018-05-18T21:08:34.018+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "103558",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/103717",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#issuecomment-388995340\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=h1) Report\n   > Merging [#2035](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/f319bcad7b3e5ed45b92f2489a6bb2e31ef44005?src=pr&el=desc) will **not change** coverage.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2035/graphs/tree.svg?src=pr&token=LpTCFbqVT1&width=650&height=150)](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=tree)\n   \n   ```diff\n   @@           Coverage Diff           @@\n   ##           master    #2035   +/-   ##\n   =======================================\n     Coverage   86.28%   86.28%           \n   =======================================\n     Files         242      242           \n     Lines       41042    41042           \n   =======================================\n     Hits        35413    35413           \n     Misses       5629     5629\n   ```\n   \n   \n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=footer). Last update [f319bca...261a864](https://codecov.io/gh/apache/arrow/pull/2035?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-20T01:34:48.028+0000",
                    "updated": "2018-05-20T01:34:48.028+0000",
                    "started": "2018-05-20T01:34:48.027+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "103717",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/104090",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on a change in pull request #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#discussion_r189623925\n \n \n\n ##########\n File path: js/test/integration/validate-tests.ts\n ##########\n @@ -119,6 +119,10 @@ describe(`Integration`, () => {\n         describe(path.join(dir, name), () => {\n             testReaderIntegration(json, arrowBuffer);\n             testTableFromBuffersIntegration(json, arrowBuffer);\n+            testTableToBuffersIntegration('json', 'file')(json, arrowBuffer);\n+            testTableToBuffersIntegration('binary', 'file')(json, arrowBuffer);\n+            testTableToBuffersIntegration('json', 'stream')(json, arrowBuffer);\n+            testTableToBuffersIntegration('binary', 'stream')(json, arrowBuffer);\n \n Review comment:\n   Are all of these different validations run when we run via `integration_test.py` as well?\r\n   \r\n   I think all of these are valuable to make sure we get coverage of the IPC reader and writer in the automated tests, but they're overkill for the actual integration tests. How would you feel about adding a flag to turn these on and off? Doesn't need to happen in this PR, we could just make a ticket to follow-up on this if you agree\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-21T15:26:16.636+0000",
                    "updated": "2018-05-21T15:26:16.636+0000",
                    "started": "2018-05-21T15:26:16.636+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "104090",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/104140",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on a change in pull request #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#discussion_r189658961\n \n \n\n ##########\n File path: js/test/integration/validate-tests.ts\n ##########\n @@ -119,6 +119,10 @@ describe(`Integration`, () => {\n         describe(path.join(dir, name), () => {\n             testReaderIntegration(json, arrowBuffer);\n             testTableFromBuffersIntegration(json, arrowBuffer);\n+            testTableToBuffersIntegration('json', 'file')(json, arrowBuffer);\n+            testTableToBuffersIntegration('binary', 'file')(json, arrowBuffer);\n+            testTableToBuffersIntegration('json', 'stream')(json, arrowBuffer);\n+            testTableToBuffersIntegration('binary', 'stream')(json, arrowBuffer);\n \n Review comment:\n   Yes, having them here means they're run by the `integration_test.py` as well. I did it for expediency testing locally, but I'll split them out into separate tests here in a few minutes.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-21T17:33:00.019+0000",
                    "updated": "2018-05-21T17:33:00.019+0000",
                    "started": "2018-05-21T17:33:00.017+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "104140",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/104175",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#issuecomment-390738762\n \n \n   I'll try to have a final look through this today so we can get it merged soon!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-21T18:19:51.714+0000",
                    "updated": "2018-05-21T18:19:51.714+0000",
                    "started": "2018-05-21T18:19:51.713+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "104175",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/104890",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#discussion_r190087215\n \n \n\n ##########\n File path: js/DEVELOP.md\n ##########\n @@ -101,193 +99,3 @@ Once generated, the flatbuffers format code needs to be adjusted for our TS and\n     ```\n 1. Add `/* tslint:disable:class-name */` to the top of `Schema.ts`\n 1. Execute `npm run lint` to fix all the linting errors\n-\n-## JavaScript (for Google Closure Compiler builds)\n \n Review comment:\n   Is this fixed now in upstream Flatbuffers?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-23T00:27:04.546+0000",
                    "updated": "2018-05-23T00:27:04.546+0000",
                    "started": "2018-05-23T00:27:04.545+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "104890",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/104891",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#discussion_r190088931\n \n \n\n ##########\n File path: js/src/ipc/reader/vector.ts\n ##########\n @@ -126,6 +126,6 @@ export abstract class TypeDataLoader extends TypeVisitor {\n     protected visitUnionType(type: DenseUnion | SparseUnion, { length, nullCount }: FieldMetadata = this.getFieldMetadata()) {\n         return type.mode === UnionMode.Sparse ?\n             new SparseUnionData(type as SparseUnion, length, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitFields(type.children), 0, nullCount) :\n-            new DenseUnionData(type as DenseUnion, length, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readTypeIds(type), this.visitFields(type.children), 0, nullCount);\n+            new DenseUnionData(type as DenseUnion, length, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitFields(type.children), 0, nullCount);\n \n Review comment:\n   Aside: now that we have 2 implementations of unions as described in spec (i.e. I think what is in JS is the same as C++ now), we should move along the discussion on the ML about the slippage vs. Java. Otherwise it's going to be a huge pain to get everything reconciled. cc @jacques-n @icexelloss \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-23T00:27:04.684+0000",
                    "updated": "2018-05-23T00:27:04.684+0000",
                    "started": "2018-05-23T00:27:04.684+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "104891",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/104892",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#discussion_r190088286\n \n \n\n ##########\n File path: js/src/ipc/metadata.ts\n ##########\n @@ -25,7 +25,12 @@ export class Footer {\n }\n \n export class FileBlock {\n-    constructor(public metaDataLength: number, public bodyLength: Long, public offset: Long) {}\n+    public offset: number;\n+    public bodyLength: number;\n+    constructor(public metaDataLength: number, bodyLength: Long | number, offset: Long | number) {\n+        this.offset = typeof offset === 'number' ? offset : offset.low;\n+        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n \n Review comment:\n   Are files over 2GB disallowed someplace?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-23T00:27:04.718+0000",
                    "updated": "2018-05-23T00:27:04.718+0000",
                    "started": "2018-05-23T00:27:04.718+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "104892",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/104893",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#discussion_r190092624\n \n \n\n ##########\n File path: js/src/vector/validity.ts\n ##########\n @@ -0,0 +1,75 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import { Data } from '../data';\n+import { View, Vector } from '../vector';\n+import { NestedView } from './nested';\n+import { DataType, IterableArrayLike } from '../type';\n+import { getBool, setBool, iterateBits } from '../util/bit';\n+\n+export class ValidityView<T extends DataType> implements View<T> {\n \n Review comment:\n   Not completely related, but just for my own knowledge, what does this library do if the null count is 0 and the validity buffer is length-0? In Java, it allocates a buffer of all set bits. In C++ it doesn't allocate anything\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-23T00:27:04.970+0000",
                    "updated": "2018-05-23T00:27:04.970+0000",
                    "started": "2018-05-23T00:27:04.969+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "104893",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/104894",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#discussion_r190089957\n \n \n\n ##########\n File path: js/src/ipc/writer/binary.ts\n ##########\n @@ -0,0 +1,705 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import { Table } from '../../table';\n+import { DenseUnionData } from '../../data';\n+import { RecordBatch } from '../../recordbatch';\n+import { VectorVisitor, TypeVisitor } from '../../visitor';\n+import { MAGIC, magicLength, magicAndPadding, PADDING } from '../magic';\n+import { align, getBool, packBools, iterateBits } from '../../util/bit';\n+import { Vector, UnionVector, DictionaryVector, NestedVector, ListVector } from '../../vector';\n+import { BufferMetadata, FieldMetadata, Footer, FileBlock, Message, RecordBatchMetadata, DictionaryBatch } from '../metadata';\n+import {\n+    Schema, Field, TypedArray, MetadataVersion,\n+    DataType,\n+    Dictionary,\n+    Null, Int, Float,\n+    Binary, Bool, Utf8, Decimal,\n+    Date_, Time, Timestamp, Interval,\n+    List, Struct, Union, FixedSizeBinary, FixedSizeList, Map_,\n+    FlatType, FlatListType, NestedType, UnionMode, SparseUnion, DenseUnion, SingleNestedType,\n+} from '../../type';\n+\n+export function* serializeStream(table: Table) {\n+    yield serializeMessage(table.schema).buffer;\n+    for (const [id, field] of table.schema.dictionaries) {\n+        const vec = table.getColumn(field.name) as DictionaryVector;\n+        if (vec && vec.dictionary) {\n+            yield serializeDictionaryBatch(vec.dictionary, id).buffer;\n+        }\n+    }\n+    for (const recordBatch of table.batches) {\n+        yield serializeRecordBatch(recordBatch).buffer;\n+    }\n+}\n+\n+export function* serializeFile(table: Table) {\n+\n+    const recordBatches = [];\n+    const dictionaryBatches = [];\n+\n+    // First yield the magic string (aligned)\n+    let buffer = new Uint8Array(align(magicLength, 8));\n+    let metadataLength, byteLength = buffer.byteLength;\n+    buffer.set(MAGIC, 0);\n+    yield buffer;\n+\n+    // Then yield the schema\n+    ({ metadataLength, buffer } = serializeMessage(table.schema));\n+    byteLength += buffer.byteLength;\n+    yield buffer;\n+\n+    for (const [id, field] of table.schema.dictionaries) {\n+        const vec = table.getColumn(field.name) as DictionaryVector;\n+        if (vec && vec.dictionary) {\n+            ({ metadataLength, buffer } = serializeDictionaryBatch(vec.dictionary, id));\n+            dictionaryBatches.push(new FileBlock(metadataLength, buffer.byteLength, byteLength));\n+            byteLength += buffer.byteLength;\n+            yield buffer;\n+        }\n+    }\n+    for (const recordBatch of table.batches) {\n+        ({ metadataLength, buffer } = serializeRecordBatch(recordBatch));\n+        recordBatches.push(new FileBlock(metadataLength, buffer.byteLength, byteLength));\n+        byteLength += buffer.byteLength;\n+        yield buffer;\n+    }\n+\n+    // Then yield the footer metadata (not aligned)\n+    ({ metadataLength, buffer } = serializeFooter(new Footer(dictionaryBatches, recordBatches, table.schema)));\n+    yield buffer;\n+    \n+    // Last, yield the footer length + terminating magic arrow string (aligned)\n+    buffer = new Uint8Array(magicAndPadding);\n+    new DataView(buffer.buffer).setInt32(0, metadataLength, platformIsLittleEndian);\n+    buffer.set(MAGIC, buffer.byteLength - magicLength);\n+    yield buffer;\n+}\n+\n+export function serializeRecordBatch(recordBatch: RecordBatch) {\n+    const { byteLength, fieldNodes, buffers, buffersMeta } = new RecordBatchSerializer().visitRecordBatch(recordBatch);\n+    const rbMeta = new RecordBatchMetadata(MetadataVersion.V4, recordBatch.length, fieldNodes, buffersMeta);\n+    const rbData = concatBuffersWithMetadata(byteLength, buffers, buffersMeta);\n+    return serializeMessage(rbMeta, rbData);\n+}\n+\n+export function serializeDictionaryBatch(dictionary: Vector, id: Long | number, isDelta: boolean = false) {\n+    const { byteLength, fieldNodes, buffers, buffersMeta } = new RecordBatchSerializer().visitRecordBatch(RecordBatch.from([dictionary]));\n+    const rbMeta = new RecordBatchMetadata(MetadataVersion.V4, dictionary.length, fieldNodes, buffersMeta);\n+    const dbMeta = new DictionaryBatch(MetadataVersion.V4, rbMeta, id, isDelta);\n+    const rbData = concatBuffersWithMetadata(byteLength, buffers, buffersMeta);\n+    return serializeMessage(dbMeta, rbData);\n+}\n+\n+export function serializeMessage(message: Message, data?: Uint8Array) {\n+    const b = new Builder();\n+    _Message.finishMessageBuffer(b, writeMessage(b, message));\n+    // Slice out the buffer that contains the message metadata\n+    const metadataBytes = b.asUint8Array();\n+    // Reserve 4 bytes for writing the message size at the front.\n+    // Metadata length includes the metadata byteLength + the 4\n+    // bytes for the length, and rounded up to the nearest 8 bytes.\n+    const metadataLength = align(PADDING + metadataBytes.byteLength, 8);\n+    // + the length of the optional data buffer at the end, padded\n+    const dataByteLength = data ? data.byteLength : 0;\n+    // ensure the entire message is aligned to an 8-byte boundary\n+    const messageBytes = new Uint8Array(align(metadataLength + dataByteLength, 8));\n+    // Write the metadata length into the first 4 bytes, but subtract the\n+    // bytes we use to hold the length itself.\n+    new DataView(messageBytes.buffer).setInt32(0, metadataLength - PADDING, platformIsLittleEndian);\n+    // Copy the metadata bytes into the message buffer\n+    messageBytes.set(metadataBytes, PADDING);\n+    // Copy the optional data buffer after the metadata bytes\n+    (data && dataByteLength > 0) && messageBytes.set(data, metadataLength);\n+    // if (messageBytes.byteLength % 8 !== 0) { debugger; }\n+    // Return the metadata length because we need to write it into each FileBlock also\n+    return { metadataLength, buffer: messageBytes };\n+}\n+\n+export function serializeFooter(footer: Footer) {\n+    const b = new Builder();\n+    _Footer.finishFooterBuffer(b, writeFooter(b, footer));\n+    // Slice out the buffer that contains the footer metadata\n+    const footerBytes = b.asUint8Array();\n+    const metadataLength = footerBytes.byteLength;\n+    return { metadataLength, buffer: footerBytes };\n+}\n+\n+export class RecordBatchSerializer extends VectorVisitor {\n+    public byteLength = 0;\n+    public buffers: TypedArray[] = [];\n+    public fieldNodes: FieldMetadata[] = [];\n+    public buffersMeta: BufferMetadata[] = [];\n+    public visitRecordBatch(recordBatch: RecordBatch) {\n+        this.buffers = [];\n+        this.byteLength = 0;\n+        this.fieldNodes = [];\n+        this.buffersMeta = [];\n+        for (let vector: Vector, index = -1, numCols = recordBatch.numCols; ++index < numCols;) {\n+            if (vector = recordBatch.getChildAt(index)!) {\n+                this.visit(vector);\n+            }\n+        }\n+        return this;\n+    }\n+    public visit<T extends DataType>(vector: Vector<T>) {\n+        if (!DataType.isDictionary(vector.type)) {\n+            const { data, length, nullCount } = vector;\n+            if (length > 2147483647) {\n+                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n+            }\n+            this.fieldNodes.push(new FieldMetadata(length, nullCount));\n+            this.addBuffer(nullCount <= 0\n \n Review comment:\n   Do negative null counts occur somehow in JS? We use `-1` in C++ to indicate that the null count has not been computed  (i.e. after an array slice has occurred)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-23T00:27:04.972+0000",
                    "updated": "2018-05-23T00:27:04.972+0000",
                    "started": "2018-05-23T00:27:04.972+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "104894",
                    "issueId": "13137176"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/worklog/104895",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2035: ARROW-2116: [JS] implement IPC writers\nURL: https://github.com/apache/arrow/pull/2035#discussion_r190089256\n \n \n\n ##########\n File path: js/src/ipc/writer/arrow.ts\n ##########\n @@ -0,0 +1,40 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import { Table } from '../../table';\n+import { serializeStream, serializeFile } from './binary';\n+\n+export function writeTableBinary(table: Table, stream = true) {\n+    return concatBuffers(stream ? serializeStream(table) : serializeFile(table));\n+}\n+\n+function concatBuffers(messages: Iterable<Uint8Array | Buffer>) {\n+\n+    let buffers = [], byteLength = 0;\n+\n+    for (const message of messages) {\n+        buffers.push(message);\n \n Review comment:\n   Just so I understand, `messages` is an async iterable, so that's why it must be accumulated here?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-23T00:27:04.990+0000",
                    "updated": "2018-05-23T00:27:04.990+0000",
                    "started": "2018-05-23T00:27:04.990+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "104895",
                    "issueId": "13137176"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 41400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@48936754[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@88e502d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@599e4a30[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@236b7616[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22970f53[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@9778d33[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@221399e7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5a308075[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4047e1f7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@756ce2d9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4b0e9132[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1563930e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 41400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed May 23 15:37:04 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-05-23T15:37:03.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2116/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-02-08T15:47:37.000+0000",
        "updated": "2020-09-23T04:49:44.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "11.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 41400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[JS] Implement IPC writer",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/comment/16357088",
                    "id": "16357088",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
                        "name": "bhulette",
                        "key": "bhulette",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Hulette",
                        "active": true,
                        "timeZone": "America/Vancouver"
                    },
                    "body": "[~paul.e.taylor] didn't you work on a JS writer?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
                        "name": "bhulette",
                        "key": "bhulette",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Hulette",
                        "active": true,
                        "timeZone": "America/Vancouver"
                    },
                    "created": "2018-02-08T15:49:02.123+0000",
                    "updated": "2018-02-08T15:49:02.123+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/comment/16376457",
                    "id": "16376457",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paul.e.taylor",
                        "name": "paul.e.taylor",
                        "key": "paul.e.taylor",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Paul Taylor",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "[~bhulette]\u00a0yes, I have a partial implementation in a branch locally.\u00a0I'm passing this\u00a0torch to a talented coworker this week, and we'll keep this issue updated.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paul.e.taylor",
                        "name": "paul.e.taylor",
                        "key": "paul.e.taylor",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Paul Taylor",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2018-02-26T07:08:02.428+0000",
                    "updated": "2018-02-26T07:08:02.428+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/comment/16377048",
                    "id": "16377048",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paul.e.taylor",
                        "name": "paul.e.taylor",
                        "key": "paul.e.taylor",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Paul Taylor",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "[~bhulette]\u00a0the branch is now up at\u00a0https://github.com/trxcllnt/arrow/tree/js-buffer-writer",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paul.e.taylor",
                        "name": "paul.e.taylor",
                        "key": "paul.e.taylor",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Paul Taylor",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2018-02-26T15:38:37.166+0000",
                    "updated": "2018-02-26T15:38:37.166+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137176/comment/16487491",
                    "id": "16487491",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
                        "name": "bhulette",
                        "key": "bhulette",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Hulette",
                        "active": true,
                        "timeZone": "America/Vancouver"
                    },
                    "body": "Issue resolved by pull request 2035\n[https://github.com/apache/arrow/pull/2035]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
                        "name": "bhulette",
                        "key": "bhulette",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Hulette",
                        "active": true,
                        "timeZone": "America/Vancouver"
                    },
                    "created": "2018-05-23T15:37:04.022+0000",
                    "updated": "2018-05-23T15:37:04.022+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|i3pycf:",
        "customfield_12314139": null
    }
}