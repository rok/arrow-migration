{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13372493",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493",
    "key": "ARROW-12392",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 10800,
            "total": 10800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10800,
            "total": 10800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12392/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 18,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/583770",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace opened a new pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061\n\n\n   This restores ARROW-11887.  The only difference is that I kept the async path out of RecordBatchReader.  I now know the file formats do not use RecordBatchReader for the read so there was no need to add it in there yet.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T20:09:48.445+0000",
                    "updated": "2021-04-15T20:09:48.445+0000",
                    "started": "2021-04-15T20:09:48.445+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583770",
                    "issueId": "13372493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/583771",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061#issuecomment-820700636\n\n\n   https://issues.apache.org/jira/browse/ARROW-12392\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T20:10:12.243+0000",
                    "updated": "2021-04-15T20:10:12.243+0000",
                    "started": "2021-04-15T20:10:12.243+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583771",
                    "issueId": "13372493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/583818",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061#issuecomment-820722486\n\n\n   Keeping in draft until #10064 is resolved or else it'll just reintroduce the R deadlock issue.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T20:51:38.882+0000",
                    "updated": "2021-04-15T20:51:38.882+0000",
                    "started": "2021-04-15T20:51:38.881+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583818",
                    "issueId": "13372493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/585170",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061#discussion_r615874727\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -1475,11 +1475,44 @@ static Result<AsyncGenerator<T>> MakeBackgroundGenerator(\n   return BackgroundGenerator<T>(std::move(iterator), io_executor, max_q, q_restart);\n }\n \n-/// \\see MakeGeneratorIterator\n-template <typename T>\n+template <typename GeneratorFactory,\n+          typename Generator = internal::call_traits::return_type<GeneratorFactory>,\n+          typename FT = typename Generator::result_type,\n+          typename T = typename FT::ValueType>\n class GeneratorIterator {\n  public:\n-  explicit GeneratorIterator(AsyncGenerator<T> source) : source_(std::move(source)) {}\n+  explicit GeneratorIterator(GeneratorFactory factory)\n+      : proxy_executor_(new internal::ProxyExecutor()) {\n+    source_ = factory(proxy_executor_.get());\n+  }\n+\n+  Result<T> Next() {\n+    return internal::SerialExecutor::RunInSerialExecutor<T>(\n+        [this](internal::Executor* executor) {\n+          proxy_executor_->target = executor;\n+          return source_();\n+        });\n+  }\n+\n+ private:\n+  AsyncGenerator<T> source_;\n+  std::unique_ptr<internal::ProxyExecutor> proxy_executor_;\n+};\n+\n+template <typename GeneratorFactory,\n+          typename Generator = internal::call_traits::return_type<GeneratorFactory>,\n+          typename FT = typename Generator::result_type,\n+          typename T = typename FT::ValueType>\n+Result<Iterator<T>> MakeGeneratorIterator(GeneratorFactory factory) {\n\nReview comment:\n       It would be nice to explain the purpose of this class and whether it's reentrant or not (well, the question is moot presumably because it's blocking). This essentially 1) lets you parameterize a generator on an executor (which is guaranteed to resolve to a SerialExecutor) and then 2) synchronously blocks on the generator via the SerialExecutor, effectively running all work on the main thread? \n\n##########\nFile path: cpp/src/arrow/util/async_generator_test.cc\n##########\n@@ -1102,6 +1105,46 @@ TEST(TestAsyncUtil, ReadaheadFailed) {\n   ASSERT_TRUE(IsIterationEnd(definitely_last));\n }\n \n+class GeneratorIteratorTestFixture : public GeneratorTestFixture {};\n+\n+TEST_P(GeneratorIteratorTestFixture, Basic) {\n+  ASSERT_OK_AND_ASSIGN(\n+      auto it, MakeGeneratorIterator(\n+                   [this](internal::Executor* executor) -> AsyncGenerator<TestInt> {\n+                     return MakeSource({1, 2, 3}, executor);\n+                   }));\n+\n+  ASSERT_OK_AND_ASSIGN(auto actual, it.ToVector());\n+  ASSERT_EQ(std::vector<TestInt>({1, 2, 3}), actual);\n+}\n+\n+TEST_P(GeneratorIteratorTestFixture, Error) {\n+  ASSERT_OK_AND_ASSIGN(\n+      auto it, MakeGeneratorIterator(\n+                   [this](internal::Executor* executor) -> AsyncGenerator<TestInt> {\n+                     return FailsAt(MakeSource({1, 2, 3}, executor), 1);\n+                   }));\n+\n+  ASSERT_RAISES(Invalid, it.ToVector());\n+}\n+\n+TEST_P(GeneratorIteratorTestFixture, Transferred) {\n+  ASSERT_OK_AND_ASSIGN(auto mock_io_executor, internal::ThreadPool::Make(1));\n+  ASSERT_OK_AND_ASSIGN(\n+      auto it,\n+      MakeGeneratorIterator([this, &mock_io_executor](internal::Executor* executor) {\n+        auto source = MakeSource({1, 2, 3}, executor);\n+        auto to_io = MakeTransferredGenerator(std::move(source), mock_io_executor.get());\n+        auto back = MakeTransferredGenerator(std::move(to_io), executor);\n+        return back;\n+      }));\n+  ASSERT_OK_AND_ASSIGN(auto actual, it.ToVector());\n\nReview comment:\n       Just to check my understanding, one call here (when IsSlow()) will synchronously sleep on the CPU executor, attempt to transfer to the I/O executor (which is a no-op as the future is already complete), then transfer back to the CPU executor (also a no-op)?\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.h\n##########\n@@ -152,6 +152,9 @@ class ARROW_DS_EXPORT ScanTask {\n   /// resulting from the Scan. Execution semantics are encapsulated in the\n   /// particular ScanTask implementation\n   virtual Result<RecordBatchIterator> Execute() = 0;\n\nReview comment:\n       (Note #10062 removes the ScanTask bindings from Python, leaving just CGlib.)\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.h\n##########\n@@ -152,6 +152,9 @@ class ARROW_DS_EXPORT ScanTask {\n   /// resulting from the Scan. Execution semantics are encapsulated in the\n   /// particular ScanTask implementation\n   virtual Result<RecordBatchIterator> Execute() = 0;\n\nReview comment:\n       So to make sure, SafeExecute/SafeVisit are just a way to safely integrate async readers while we still have SyncScanner?\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -1489,17 +1522,23 @@ class GeneratorIterator {\n \n /// \\brief Converts an AsyncGenerator<T> to an Iterator<T> by blocking until each future\n /// is finished\n+///\n+/// If this underlying generator transfers to the CPU pool then this blocking call will be\n+/// considered \"nested parallelism\" and is not safe to call from a CPU pool thread.\n+///\n+/// To avoid this you can use MakeGeneratorIterator\n template <typename T>\n-Result<Iterator<T>> MakeGeneratorIterator(AsyncGenerator<T> source) {\n-  return Iterator<T>(GeneratorIterator<T>(std::move(source)));\n+Result<Iterator<T>> MakeSimpleGeneratorIterator(AsyncGenerator<T> source) {\n+  return Iterator<T>(SimpleGeneratorIterator<T>(std::move(source)));\n }\n \n /// \\brief Adds readahead to an iterator using a background thread.\n ///\n /// Under the hood this is converting the iterator to a generator using\n /// MakeBackgroundGenerator, adding readahead to the converted generator with\n /// MakeReadaheadGenerator, and then converting back to an iterator using\n-/// MakeGeneratorIterator.\n+/// MakeSimpleGeneratorIterator (this is safe because we the generator never\n\nReview comment:\n       ```suggestion\r\n   /// MakeSimpleGeneratorIterator (this is safe because the generator never\r\n   ```\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -154,9 +180,26 @@ class CsvScanTask : public ScanTask {\n         source_(fragment->source()) {}\n \n   Result<RecordBatchIterator> Execute() override {\n-    ARROW_ASSIGN_OR_RAISE(auto reader,\n-                          OpenReader(source_, *format_, options(), options()->pool));\n-    return IteratorFromReader(std::move(reader));\n+    auto reader_fut = OpenReaderAsync(source_, *format_, options(),\n+                                      internal::GetCpuThreadPool(), options()->pool);\n+    auto reader_gen = GeneratorFromReader(std::move(reader_fut));\n+    return MakeSimpleGeneratorIterator(std::move(reader_gen));\n+  }\n+\n+  Future<RecordBatchVector> SafeExecute(internal::Executor* executor) override {\n+    auto reader_fut =\n+        OpenReaderAsync(source_, *format_, options(), executor, options()->pool);\n\nReview comment:\n       So `executor` here will be a SerialExecutor. Isn't that a behavior change? Previously, `StreamingReader::Make` would use the CPU thread pool. Now we're having it use the main thread.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T14:24:47.852+0000",
                    "updated": "2021-04-19T14:24:47.852+0000",
                    "started": "2021-04-19T14:24:47.851+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585170",
                    "issueId": "13372493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/585253",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061#discussion_r616021323\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -1475,11 +1475,44 @@ static Result<AsyncGenerator<T>> MakeBackgroundGenerator(\n   return BackgroundGenerator<T>(std::move(iterator), io_executor, max_q, q_restart);\n }\n \n-/// \\see MakeGeneratorIterator\n-template <typename T>\n+template <typename GeneratorFactory,\n+          typename Generator = internal::call_traits::return_type<GeneratorFactory>,\n+          typename FT = typename Generator::result_type,\n+          typename T = typename FT::ValueType>\n class GeneratorIterator {\n  public:\n-  explicit GeneratorIterator(AsyncGenerator<T> source) : source_(std::move(source)) {}\n+  explicit GeneratorIterator(GeneratorFactory factory)\n+      : proxy_executor_(new internal::ProxyExecutor()) {\n+    source_ = factory(proxy_executor_.get());\n+  }\n+\n+  Result<T> Next() {\n+    return internal::SerialExecutor::RunInSerialExecutor<T>(\n+        [this](internal::Executor* executor) {\n+          proxy_executor_->target = executor;\n+          return source_();\n+        });\n+  }\n+\n+ private:\n+  AsyncGenerator<T> source_;\n+  std::unique_ptr<internal::ProxyExecutor> proxy_executor_;\n+};\n+\n+template <typename GeneratorFactory,\n+          typename Generator = internal::call_traits::return_type<GeneratorFactory>,\n+          typename FT = typename Generator::result_type,\n+          typename T = typename FT::ValueType>\n+Result<Iterator<T>> MakeGeneratorIterator(GeneratorFactory factory) {\n\nReview comment:\n       Yikes, I'm glad you mentioned this.  It looks like I had rebased on top of ARROW-12412 because I had planned at using that here until it ended up failing.  I'm sorry I didn't catch this earlier.  The problem ends up being that readahead callbacks get completed between pulls when the proxy iterator has no valid value.  I've cut that code out now.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T16:59:07.237+0000",
                    "updated": "2021-04-19T16:59:07.237+0000",
                    "started": "2021-04-19T16:59:07.237+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585253",
                    "issueId": "13372493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/585256",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061#discussion_r616022528\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -1489,17 +1522,23 @@ class GeneratorIterator {\n \n /// \\brief Converts an AsyncGenerator<T> to an Iterator<T> by blocking until each future\n /// is finished\n+///\n+/// If this underlying generator transfers to the CPU pool then this blocking call will be\n+/// considered \"nested parallelism\" and is not safe to call from a CPU pool thread.\n+///\n+/// To avoid this you can use MakeGeneratorIterator\n template <typename T>\n-Result<Iterator<T>> MakeGeneratorIterator(AsyncGenerator<T> source) {\n-  return Iterator<T>(GeneratorIterator<T>(std::move(source)));\n+Result<Iterator<T>> MakeSimpleGeneratorIterator(AsyncGenerator<T> source) {\n+  return Iterator<T>(SimpleGeneratorIterator<T>(std::move(source)));\n }\n \n /// \\brief Adds readahead to an iterator using a background thread.\n ///\n /// Under the hood this is converting the iterator to a generator using\n /// MakeBackgroundGenerator, adding readahead to the converted generator with\n /// MakeReadaheadGenerator, and then converting back to an iterator using\n-/// MakeGeneratorIterator.\n+/// MakeSimpleGeneratorIterator (this is safe because we the generator never\n\nReview comment:\n       N/A, code removed.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T17:00:46.267+0000",
                    "updated": "2021-04-19T17:00:46.267+0000",
                    "started": "2021-04-19T17:00:46.267+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585256",
                    "issueId": "13372493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/585259",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061#discussion_r616023345\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator_test.cc\n##########\n@@ -1102,6 +1105,46 @@ TEST(TestAsyncUtil, ReadaheadFailed) {\n   ASSERT_TRUE(IsIterationEnd(definitely_last));\n }\n \n+class GeneratorIteratorTestFixture : public GeneratorTestFixture {};\n+\n+TEST_P(GeneratorIteratorTestFixture, Basic) {\n+  ASSERT_OK_AND_ASSIGN(\n+      auto it, MakeGeneratorIterator(\n+                   [this](internal::Executor* executor) -> AsyncGenerator<TestInt> {\n+                     return MakeSource({1, 2, 3}, executor);\n+                   }));\n+\n+  ASSERT_OK_AND_ASSIGN(auto actual, it.ToVector());\n+  ASSERT_EQ(std::vector<TestInt>({1, 2, 3}), actual);\n+}\n+\n+TEST_P(GeneratorIteratorTestFixture, Error) {\n+  ASSERT_OK_AND_ASSIGN(\n+      auto it, MakeGeneratorIterator(\n+                   [this](internal::Executor* executor) -> AsyncGenerator<TestInt> {\n+                     return FailsAt(MakeSource({1, 2, 3}, executor), 1);\n+                   }));\n+\n+  ASSERT_RAISES(Invalid, it.ToVector());\n+}\n+\n+TEST_P(GeneratorIteratorTestFixture, Transferred) {\n+  ASSERT_OK_AND_ASSIGN(auto mock_io_executor, internal::ThreadPool::Make(1));\n+  ASSERT_OK_AND_ASSIGN(\n+      auto it,\n+      MakeGeneratorIterator([this, &mock_io_executor](internal::Executor* executor) {\n+        auto source = MakeSource({1, 2, 3}, executor);\n+        auto to_io = MakeTransferredGenerator(std::move(source), mock_io_executor.get());\n+        auto back = MakeTransferredGenerator(std::move(to_io), executor);\n+        return back;\n+      }));\n+  ASSERT_OK_AND_ASSIGN(auto actual, it.ToVector());\n\nReview comment:\n       N/A, code removed.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T17:02:09.629+0000",
                    "updated": "2021-04-19T17:02:09.629+0000",
                    "started": "2021-04-19T17:02:09.629+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585259",
                    "issueId": "13372493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/585260",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061#discussion_r616025045\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.h\n##########\n@@ -152,6 +152,9 @@ class ARROW_DS_EXPORT ScanTask {\n   /// resulting from the Scan. Execution semantics are encapsulated in the\n   /// particular ScanTask implementation\n   virtual Result<RecordBatchIterator> Execute() = 0;\n\nReview comment:\n       Correct.  These methods can go away when `SyncScanner` goes away.  Removing the `ScanTask` bindings won't be enough (although I'm happy to hear they are removed) because `SyncScanner::ToTable` and the synchronous dataset write both rely on scanning being safe to call (ala nested deadlock) from a CPU executor thread.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T17:04:28.549+0000",
                    "updated": "2021-04-19T17:04:28.549+0000",
                    "started": "2021-04-19T17:04:28.549+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585260",
                    "issueId": "13372493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/585263",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061#discussion_r616025836\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -154,9 +180,26 @@ class CsvScanTask : public ScanTask {\n         source_(fragment->source()) {}\n \n   Result<RecordBatchIterator> Execute() override {\n-    ARROW_ASSIGN_OR_RAISE(auto reader,\n-                          OpenReader(source_, *format_, options(), options()->pool));\n-    return IteratorFromReader(std::move(reader));\n+    auto reader_fut = OpenReaderAsync(source_, *format_, options(),\n+                                      internal::GetCpuThreadPool(), options()->pool);\n+    auto reader_gen = GeneratorFromReader(std::move(reader_fut));\n+    return MakeSimpleGeneratorIterator(std::move(reader_gen));\n+  }\n+\n+  Future<RecordBatchVector> SafeExecute(internal::Executor* executor) override {\n+    auto reader_fut =\n+        OpenReaderAsync(source_, *format_, options(), executor, options()->pool);\n\nReview comment:\n       `SerialExecutor` assumes the current thread which may be from the CPU thread pool.  So, for example, `SyncScanner::ToTable` will continue to run `SafeExecute` on the CPU thread pool.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T17:05:39.938+0000",
                    "updated": "2021-04-19T17:05:39.938+0000",
                    "started": "2021-04-19T17:05:39.938+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585263",
                    "issueId": "13372493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/585270",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061#discussion_r616033594\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.h\n##########\n@@ -152,6 +152,9 @@ class ARROW_DS_EXPORT ScanTask {\n   /// resulting from the Scan. Execution semantics are encapsulated in the\n   /// particular ScanTask implementation\n   virtual Result<RecordBatchIterator> Execute() = 0;\n\nReview comment:\n       Also, this will probably only be needed for CSV.  With parquet & IPC you created the async version in parallel with the sync verison.  With CSV there is just one (async) code path.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T17:17:23.409+0000",
                    "updated": "2021-04-19T17:17:23.409+0000",
                    "started": "2021-04-19T17:17:23.409+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585270",
                    "issueId": "13372493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/585386",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061#discussion_r616200811\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -154,9 +180,26 @@ class CsvScanTask : public ScanTask {\n         source_(fragment->source()) {}\n \n   Result<RecordBatchIterator> Execute() override {\n-    ARROW_ASSIGN_OR_RAISE(auto reader,\n-                          OpenReader(source_, *format_, options(), options()->pool));\n-    return IteratorFromReader(std::move(reader));\n+    auto reader_fut = OpenReaderAsync(source_, *format_, options(),\n+                                      internal::GetCpuThreadPool(), options()->pool);\n+    auto reader_gen = GeneratorFromReader(std::move(reader_fut));\n+    return MakeSimpleGeneratorIterator(std::move(reader_gen));\n+  }\n+\n+  Future<RecordBatchVector> SafeExecute(internal::Executor* executor) override {\n+    auto reader_fut =\n+        OpenReaderAsync(source_, *format_, options(), executor, options()->pool);\n\nReview comment:\n       Ahh, I see now - before, while a cpu_executor was passed around in StreamingReader, it wasn't actually used. (MakeStreamingReader accepts an executor, but never uses it.) Now it is used, but it'll be a SerialExecutor, so we remain single-threaded as desired.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T21:49:26.122+0000",
                    "updated": "2021-04-19T21:49:26.122+0000",
                    "started": "2021-04-19T21:49:26.122+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585386",
                    "issueId": "13372493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/585395",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061#discussion_r616204782\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -480,20 +479,14 @@ Status FileSystemDataset::Write(const FileSystemDatasetWriteOptions& write_optio\n #endif\n \n   WriteState state(write_options);\n-  auto res = internal::RunSynchronously<arrow::detail::Empty>(\n-      [&](internal::Executor* cpu_executor) -> Future<> {\n-        return WriteInternal(*scanner->options(), state, std::move(scan_tasks),\n-                             cpu_executor);\n-      },\n-      scanner->options()->use_threads);\n-  RETURN_NOT_OK(res);\n+  RETURN_NOT_OK(WriteInternal(*scanner->options(), state, std::move(scan_tasks)));\n \n   auto task_group = scanner->options()->TaskGroup();\n   for (const auto& part_queue : state.queues) {\n     task_group->Append([&] { return part_queue.second->writer()->Finish(); });\n   }\n   return task_group->Finish();\n-}\n+}  // namespace dataset\n\nReview comment:\n       nit: was this intentional?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T22:06:56.918+0000",
                    "updated": "2021-04-19T22:06:56.918+0000",
                    "started": "2021-04-19T22:06:56.917+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585395",
                    "issueId": "13372493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/586804",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace edited a comment on pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061#issuecomment-820722486\n\n\n   ~~Keeping in draft until #10064 is resolved or else it'll just reintroduce the R deadlock issue.~~\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-21T18:56:43.865+0000",
                    "updated": "2021-04-21T18:56:43.865+0000",
                    "started": "2021-04-21T18:56:43.865+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "586804",
                    "issueId": "13372493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/586821",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061#discussion_r617814917\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -480,20 +479,14 @@ Status FileSystemDataset::Write(const FileSystemDatasetWriteOptions& write_optio\n #endif\n \n   WriteState state(write_options);\n-  auto res = internal::RunSynchronously<arrow::detail::Empty>(\n-      [&](internal::Executor* cpu_executor) -> Future<> {\n-        return WriteInternal(*scanner->options(), state, std::move(scan_tasks),\n-                             cpu_executor);\n-      },\n-      scanner->options()->use_threads);\n-  RETURN_NOT_OK(res);\n+  RETURN_NOT_OK(WriteInternal(*scanner->options(), state, std::move(scan_tasks)));\n \n   auto task_group = scanner->options()->TaskGroup();\n   for (const auto& part_queue : state.queues) {\n     task_group->Append([&] { return part_queue.second->writer()->Finish(); });\n   }\n   return task_group->Finish();\n-}\n+}  // namespace dataset\n\nReview comment:\n       Fixed.  It's frustrating that clang-format is smart enough to add these but not smart enough to remove them.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-21T19:19:56.837+0000",
                    "updated": "2021-04-21T19:19:56.837+0000",
                    "started": "2021-04-21T19:19:56.836+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "586821",
                    "issueId": "13372493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/586824",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061#issuecomment-824298422\n\n\n   Rebased and addressed remaining PR nit.  Perhaps best to wait until after the release has been finalized before merging this as it does affect the sync path.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-21T19:20:47.454+0000",
                    "updated": "2021-04-21T19:20:47.454+0000",
                    "started": "2021-04-21T19:20:47.453+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "586824",
                    "issueId": "13372493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/589608",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061#issuecomment-827406944\n\n\n   Rebase.  Appveyor failure appears unrelated.  Now that 4.0 is past the RC phase I'd appreciate merge or re-review.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-27T08:07:10.757+0000",
                    "updated": "2021-04-27T08:07:10.757+0000",
                    "started": "2021-04-27T08:07:10.756+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "589608",
                    "issueId": "13372493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/589609",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace edited a comment on pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061#issuecomment-827406944\n\n\n   Rebased.  Appveyor failure appears unrelated.  Now that 4.0 is past the RC phase I'd appreciate merge or re-review.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-27T08:07:26.447+0000",
                    "updated": "2021-04-27T08:07:26.447+0000",
                    "started": "2021-04-27T08:07:26.447+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "589609",
                    "issueId": "13372493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/worklog/589793",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm closed pull request #10061:\nURL: https://github.com/apache/arrow/pull/10061\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-27T15:01:29.241+0000",
                    "updated": "2021-04-27T15:01:29.241+0000",
                    "started": "2021-04-27T15:01:29.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "589793",
                    "issueId": "13372493"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@79756eb8[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@52f445ff[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37baed68[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@47919ddd[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f6470b3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@48d53cdb[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@28644904[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@63d046a0[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ffd5381[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4e2f8141[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4409dde9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@258d668e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10800,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Apr 27 15:01:15 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-04-27T15:01:15.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12392/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-04-14T21:02:58.000+0000",
        "updated": "2021-04-27T15:01:30.000+0000",
        "timeoriginalestimate": null,
        "description": "In order to support the AsyncScanner we need the asynchronous streaming CSV reader back (added in ARROW-11887 but reverted later).\u00a0 However, it will either need to be implemented as a mirror API (so the sync and async implementations are side-by-side) or the async-API must be wrapped with RunInSerialExecutor when called synchronously.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Restore asynchronous streaming CSV reader",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/comment/17321322",
                    "id": "17321322",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "[~apitrou] Do you have any opinions on where to draw the line with using RunInSerialExecutor?\u00a0 If we use it here then we will need to call RunInSerialExecutor every time we call ReadNext.\u00a0 On the other hand, if we don't use it here then we need to implement two code-paths.\r\n\r\nMy hunch (and preference) would be that the overhead is small enough we can use RunInSerialExecutor.\u00a0 This is already at the per-batch level and we are already making at an I/O call per batch and then paying the cost of the handoff from the background reader to the processing thread.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-04-14T21:10:07.480+0000",
                    "updated": "2021-04-14T21:10:07.480+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/comment/17322286",
                    "id": "17322286",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "You can try to use it and measure actual timings? Then we can decide from that :-)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-04-15T15:48:27.851+0000",
                    "updated": "2021-04-15T15:48:27.851+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/comment/17322469",
                    "id": "17322469",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Ok, from the RunInSerialExecutor benchmark it would seem there would not be noticeable overhead.\u00a0 I then did some testing on Taxi dataset and got 12.068s (RunInSerialExecutor) vs 12.046s (without RunInSerialExecutor) (averaged across 10 iterations) which is within the noise so I ended up not bothering with a mirror API.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-04-15T20:06:55.825+0000",
                    "updated": "2021-04-15T20:06:55.825+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372493/comment/17333324",
                    "id": "17333324",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 10061\n[https://github.com/apache/arrow/pull/10061]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-04-27T15:01:15.131+0000",
                    "updated": "2021-04-27T15:01:15.131+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0q0hc:",
        "customfield_12314139": null
    }
}