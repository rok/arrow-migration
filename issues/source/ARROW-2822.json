{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13170994",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994",
    "key": "ARROW-2822",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
            "name": "alendit",
            "key": "alendit",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dimitri Vorona",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 45600,
            "total": 45600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 45600,
            "total": 45600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2822/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 82,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122284",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r201999821\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -43,6 +44,33 @@ namespace arrow {\n \n using internal::AdaptiveIntBuilderBase;\n \n+namespace {\n+\n+Status TrimBuffer(const int64_t bytes_filled, ResizableBuffer* buffer) {\n+  if (buffer) {\n+    if (bytes_filled < buffer->size()) {\n+      // Trim buffer\n+      RETURN_NOT_OK(buffer->Resize(bytes_filled));\n+    }\n+    // zero the padding\n+    buffer->ZeroPadding();\n+  } else {\n+    DCHECK_EQ(bytes_filled, 0);\n+  }\n+  return Status::OK();\n+}\n+\n+}  // namespace\n+\n+ArrayBuilder::~ArrayBuilder() {\n+#ifndef NDEBUG\n+  if (ARROW_PREDICT_FALSE(!is_finished_)) {\n \n Review comment:\n   Yes, as mentioned in JIRA, it throws a lot of false positive. How about I set the warning level to ARROW_DEBUG, so it doesn't get printed by default, but still can be used to find problems, if the need arises?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T11:24:09.875+0000",
                    "updated": "2018-07-12T11:24:09.875+0000",
                    "started": "2018-07-12T11:24:09.875+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122284",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122293",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202000729\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -43,6 +44,33 @@ namespace arrow {\n \n using internal::AdaptiveIntBuilderBase;\n \n+namespace {\n+\n+Status TrimBuffer(const int64_t bytes_filled, ResizableBuffer* buffer) {\n+  if (buffer) {\n+    if (bytes_filled < buffer->size()) {\n+      // Trim buffer\n+      RETURN_NOT_OK(buffer->Resize(bytes_filled));\n+    }\n+    // zero the padding\n+    buffer->ZeroPadding();\n+  } else {\n+    DCHECK_EQ(bytes_filled, 0);\n+  }\n+  return Status::OK();\n+}\n+\n+}  // namespace\n+\n+ArrayBuilder::~ArrayBuilder() {\n+#ifndef NDEBUG\n+  if (ARROW_PREDICT_FALSE(!is_finished_)) {\n \n Review comment:\n   I don't think there should be a warning at this point at all. What could emit a warning are the various builder methods that allow to bypass the `Finish` call (for example `ArrayBuilder::null_bitmap`).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T11:28:06.023+0000",
                    "updated": "2018-07-12T11:28:06.023+0000",
                    "started": "2018-07-12T11:28:06.022+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122293",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122415",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202102738\n \n \n\n ##########\n File path: cpp/src/arrow/buffer.h\n ##########\n @@ -101,6 +101,14 @@ class ARROW_EXPORT Buffer {\n   Status Copy(const int64_t start, const int64_t nbytes,\n               std::shared_ptr<Buffer>* out) const;\n \n+  /// Zero bytes between padding, i.e. bytes between size_ and capacity_.\n \n Review comment:\n   \"in\" instead of \"between\" sounds fine\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T16:52:22.536+0000",
                    "updated": "2018-07-12T16:52:22.536+0000",
                    "started": "2018-07-12T16:52:22.536+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122415",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122416",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202103810\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -43,6 +44,33 @@ namespace arrow {\n \n using internal::AdaptiveIntBuilderBase;\n \n+namespace {\n+\n+Status TrimBuffer(const int64_t bytes_filled, ResizableBuffer* buffer) {\n+  if (buffer) {\n+    if (bytes_filled < buffer->size()) {\n+      // Trim buffer\n+      RETURN_NOT_OK(buffer->Resize(bytes_filled));\n+    }\n+    // zero the padding\n+    buffer->ZeroPadding();\n+  } else {\n+    DCHECK_EQ(bytes_filled, 0);\n+  }\n+  return Status::OK();\n+}\n+\n+}  // namespace\n+\n+ArrayBuilder::~ArrayBuilder() {\n+#ifndef NDEBUG\n+  if (ARROW_PREDICT_FALSE(!is_finished_)) {\n \n Review comment:\n   How about hiding this behind a flag like `ARROW_LOG_UNFINISHED_BUILDERS`. Having this output in debug builds always seems like too much to me\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T16:52:22.761+0000",
                    "updated": "2018-07-12T16:52:22.761+0000",
                    "started": "2018-07-12T16:52:22.761+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122416",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122417",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202104450\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -1017,6 +1039,16 @@ DictionaryBuilder<T>::DictionaryBuilder(const std::shared_ptr<DataType>& type,\n   }\n }\n \n+template <typename T>\n+DictionaryBuilder<T>::~DictionaryBuilder() {\n+#ifndef NDEBUG\n \n Review comment:\n   Ditto re: decision above\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T16:52:22.770+0000",
                    "updated": "2018-07-12T16:52:22.770+0000",
                    "started": "2018-07-12T16:52:22.769+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122417",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122418",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202104243\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -222,7 +254,12 @@ void ArrayBuilder::UnsafeSetNotNull(int64_t length) {\n // Null builder\n \n Status NullBuilder::FinishInternal(std::shared_ptr<ArrayData>* out) {\n-  *out = ArrayData::Make(null(), length_, {nullptr}, length_);\n+  if (null_count_) {\n+    RETURN_NOT_OK(TrimBuffer(BitUtil::BytesForBits(length_), null_bitmap_.get()));\n+  }\n+\n+  *out = ArrayData::Make(null(), length_, {null_bitmap_}, length_);\n \n Review comment:\n   What's the rationale for this change? All values in NullBuilder are null\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T16:52:22.845+0000",
                    "updated": "2018-07-12T16:52:22.845+0000",
                    "started": "2018-07-12T16:52:22.844+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122418",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122419",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202105027\n \n \n\n ##########\n File path: cpp/src/arrow/builder.h\n ##########\n @@ -129,14 +130,15 @@ class ARROW_EXPORT ArrayBuilder {\n \n   // Unsafe operations (don't check capacity/don't resize)\n \n-  // Append to null bitmap.\n+  // Append to null bitmap, update the length and set finished state to false\n   void UnsafeAppendToBitmap(bool is_valid) {\n     if (is_valid) {\n       BitUtil::SetBit(null_bitmap_data_, length_);\n     } else {\n       ++null_count_;\n     }\n     ++length_;\n+    is_finished_ = false;\n \n Review comment:\n   Seems like this should only be set when the builder is initialized\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T16:52:22.861+0000",
                    "updated": "2018-07-12T16:52:22.861+0000",
                    "started": "2018-07-12T16:52:22.861+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122419",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122420",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202104822\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -1149,15 +1181,20 @@ Status DictionaryBuilder<T>::Append(const Scalar& value) {\n \n   RETURN_NOT_OK(values_builder_.Append(index));\n \n+  is_finished_ = false;\n   return Status::OK();\n }\n \n template <typename T>\n Status DictionaryBuilder<T>::AppendNull() {\n+  is_finished_ = false;\n   return values_builder_.AppendNull();\n }\n \n-Status DictionaryBuilder<NullType>::AppendNull() { return values_builder_.AppendNull(); }\n+Status DictionaryBuilder<NullType>::AppendNull() {\n+  is_finished_ = false;\n \n Review comment:\n   Curious why this is needed\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T16:52:22.990+0000",
                    "updated": "2018-07-12T16:52:22.990+0000",
                    "started": "2018-07-12T16:52:22.989+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122420",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122421",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202104769\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -875,7 +897,7 @@ Status BooleanBuilder::AppendValues(const std::vector<bool>& values) {\n   internal::GenerateBitsUnrolled(raw_data_, length_, length,\n                                  [values, &i]() -> bool { return values[i++]; });\n \n-  // this updates length_\n+  // this updates length_ and sets unfinished\n \n Review comment:\n   Is setting unfinished here needed?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T16:52:22.993+0000",
                    "updated": "2018-07-12T16:52:22.993+0000",
                    "started": "2018-07-12T16:52:22.992+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122421",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122422",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202105421\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -199,6 +199,7 @@ class ReadableFile::ReadableFileImpl : public OSFile {\n     RETURN_NOT_OK(Read(nbytes, &bytes_read, buffer->mutable_data()));\n     if (bytes_read < nbytes) {\n       RETURN_NOT_OK(buffer->Resize(bytes_read));\n+      buffer->ZeroPadding();\n \n Review comment:\n   It seems error prone to have to remember to zero the padding. What would be the performance consequences (if any, realistically) of zeroing in Resize?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T16:52:23.012+0000",
                    "updated": "2018-07-12T16:52:23.012+0000",
                    "started": "2018-07-12T16:52:23.011+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122422",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122423",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202105736\n \n \n\n ##########\n File path: cpp/src/arrow/python/python_to_arrow.cc\n ##########\n @@ -279,10 +279,13 @@ class SequenceBuilder {\n     RETURN_NOT_OK(offsets_.Finish(&offsets_array));\n     const auto& offsets = checked_cast<const Int32Array&>(*offsets_array);\n \n+    std::shared_ptr<Array> nones_array;\n+    RETURN_NOT_OK(nones_.Finish(&nones_array));\n+    const auto& nones = checked_cast<const NullArray&>(*nones_array);\n \n Review comment:\n   the way that `NullBuilder` is being used in this module doesn't look right; probably related to the NullBuilder changes above cc @pcmoritz. It looks like a BooleanBuilder should be used instead\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T16:52:23.143+0000",
                    "updated": "2018-07-12T16:52:23.143+0000",
                    "started": "2018-07-12T16:52:23.141+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122423",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122426",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202108039\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -199,6 +199,7 @@ class ReadableFile::ReadableFileImpl : public OSFile {\n     RETURN_NOT_OK(Read(nbytes, &bytes_read, buffer->mutable_data()));\n     if (bytes_read < nbytes) {\n       RETURN_NOT_OK(buffer->Resize(bytes_read));\n+      buffer->ZeroPadding();\n \n Review comment:\n   Some things may be repeatedly resized if you don't know the exact size up front (e.g. in BinaryBuilder).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T16:59:42.549+0000",
                    "updated": "2018-07-12T16:59:42.549+0000",
                    "started": "2018-07-12T16:59:42.548+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122426",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122427",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202108343\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -199,6 +199,7 @@ class ReadableFile::ReadableFileImpl : public OSFile {\n     RETURN_NOT_OK(Read(nbytes, &bytes_read, buffer->mutable_data()));\n     if (bytes_read < nbytes) {\n       RETURN_NOT_OK(buffer->Resize(bytes_read));\n+      buffer->ZeroPadding();\n \n Review comment:\n   Right, in the event that you shrank the buffer in `BinaryBuilder` when `Finish` is called, you would want to zero the padding there, too\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T17:00:44.548+0000",
                    "updated": "2018-07-12T17:00:44.548+0000",
                    "started": "2018-07-12T17:00:44.548+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122427",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122428",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202108438\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -199,6 +199,7 @@ class ReadableFile::ReadableFileImpl : public OSFile {\n     RETURN_NOT_OK(Read(nbytes, &bytes_read, buffer->mutable_data()));\n     if (bytes_read < nbytes) {\n       RETURN_NOT_OK(buffer->Resize(bytes_read));\n+      buffer->ZeroPadding();\n \n Review comment:\n   I guess if you shrink the memory then the memory you padded before goes unused\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T17:01:05.336+0000",
                    "updated": "2018-07-12T17:01:05.336+0000",
                    "started": "2018-07-12T17:01:05.335+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122428",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122430",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202111462\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -199,6 +199,7 @@ class ReadableFile::ReadableFileImpl : public OSFile {\n     RETURN_NOT_OK(Read(nbytes, &bytes_read, buffer->mutable_data()));\n     if (bytes_read < nbytes) {\n       RETURN_NOT_OK(buffer->Resize(bytes_read));\n+      buffer->ZeroPadding();\n \n Review comment:\n   The worst case is when you Reserve a huge amount of memory and then gradually Resize it, as the new elements come in. You would expect these operations to be virtually free while in reality you are zeroing everything between size and capacity on every call.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T17:12:07.570+0000",
                    "updated": "2018-07-12T17:12:07.570+0000",
                    "started": "2018-07-12T17:12:07.569+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122430",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122431",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202111704\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -199,6 +199,7 @@ class ReadableFile::ReadableFileImpl : public OSFile {\n     RETURN_NOT_OK(Read(nbytes, &bytes_read, buffer->mutable_data()));\n     if (bytes_read < nbytes) {\n       RETURN_NOT_OK(buffer->Resize(bytes_read));\n+      buffer->ZeroPadding();\n \n Review comment:\n   Got it. OK, let's leave things as they are, then\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T17:13:05.093+0000",
                    "updated": "2018-07-12T17:13:05.093+0000",
                    "started": "2018-07-12T17:13:05.093+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122431",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122432",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202111750\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -43,6 +44,33 @@ namespace arrow {\n \n using internal::AdaptiveIntBuilderBase;\n \n+namespace {\n+\n+Status TrimBuffer(const int64_t bytes_filled, ResizableBuffer* buffer) {\n+  if (buffer) {\n+    if (bytes_filled < buffer->size()) {\n+      // Trim buffer\n+      RETURN_NOT_OK(buffer->Resize(bytes_filled));\n+    }\n+    // zero the padding\n+    buffer->ZeroPadding();\n+  } else {\n+    DCHECK_EQ(bytes_filled, 0);\n+  }\n+  return Status::OK();\n+}\n+\n+}  // namespace\n+\n+ArrayBuilder::~ArrayBuilder() {\n+#ifndef NDEBUG\n+  if (ARROW_PREDICT_FALSE(!is_finished_)) {\n \n Review comment:\n   You want to rework it and move the warning to `null_bitmap` and `data` methods. It seems to be doable, but I'd need some more time. \r\n   \r\n   We can still then move it behind a special compile flag.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T17:13:17.300+0000",
                    "updated": "2018-07-12T17:13:17.300+0000",
                    "started": "2018-07-12T17:13:17.300+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122432",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122433",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202111861\n \n \n\n ##########\n File path: cpp/src/arrow/buffer.h\n ##########\n @@ -101,6 +101,14 @@ class ARROW_EXPORT Buffer {\n   Status Copy(const int64_t start, const int64_t nbytes,\n               std::shared_ptr<Buffer>* out) const;\n \n+  /// Zero bytes between padding, i.e. bytes between size_ and capacity_.\n \n Review comment:\n   Yeah, comment editing fail, I'll fix it.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T17:13:42.194+0000",
                    "updated": "2018-07-12T17:13:42.194+0000",
                    "started": "2018-07-12T17:13:42.194+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122433",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122434",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202112294\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -222,7 +254,12 @@ void ArrayBuilder::UnsafeSetNotNull(int64_t length) {\n // Null builder\n \n Status NullBuilder::FinishInternal(std::shared_ptr<ArrayData>* out) {\n-  *out = ArrayData::Make(null(), length_, {nullptr}, length_);\n+  if (null_count_) {\n+    RETURN_NOT_OK(TrimBuffer(BitUtil::BytesForBits(length_), null_bitmap_.get()));\n+  }\n+\n+  *out = ArrayData::Make(null(), length_, {null_bitmap_}, length_);\n \n Review comment:\n   Oh, then I've misunderstood it's purpose. I thought it should be used as in `python_to_arrow.cc`. \r\n   \r\n   I'll revert it and add some unit cases, you could look at.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T17:15:11.029+0000",
                    "updated": "2018-07-12T17:15:11.029+0000",
                    "started": "2018-07-12T17:15:11.028+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122434",
                    "issueId": "13170994"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/worklog/122450",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2239: ARROW-2822: [C++] Zero padding bytes in PoolBuffer\nURL: https://github.com/apache/arrow/pull/2239#discussion_r202123878\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -875,7 +897,7 @@ Status BooleanBuilder::AppendValues(const std::vector<bool>& values) {\n   internal::GenerateBitsUnrolled(raw_data_, length_, length,\n                                  [values, &i]() -> bool { return values[i++]; });\n \n-  // this updates length_\n+  // this updates length_ and sets unfinished\n \n Review comment:\n   Since unfinished signals that there were values appended after the last `FinishInternal` call, I would say yes.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T17:52:04.717+0000",
                    "updated": "2018-07-12T17:52:04.717+0000",
                    "started": "2018-07-12T17:52:04.717+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122450",
                    "issueId": "13170994"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 45600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5334050d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@44eb2cb6[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@264f5aa8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3bdc4c4b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e961257[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5a69f928[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6af72d7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5fc8d85d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@61f26d59[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@744768f6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9038563[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1090ae2e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 45600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jul 19 18:38:17 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-07-19T18:38:17.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2822/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-07-09T22:25:56.000+0000",
        "updated": "2018-07-19T22:41:34.000+0000",
        "timeoriginalestimate": null,
        "description": "This is a possible proposed fix which would supersede some of the changes made in ARROW-2790 as elsewhere.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "12h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 45600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Zero padding bytes in PoolBuffer::Resize",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/comment/16537707",
                    "id": "16537707",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "cc [~alendit]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-09T22:26:24.117+0000",
                    "updated": "2018-07-09T22:26:24.117+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/comment/16538195",
                    "id": "16538195",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hi Wes,\r\n\r\n\u00a0\r\n\r\nyeah, this should work. We'd still have to make sure that Finish is called, since else the overprovisioned portion of the buffer will still be uninitialized, but a memset of avg 32 byte to the last cache line shouldn't be too bad, especially since the time is dominated by a realloc anyway.\r\n\r\nIt just came up to me: we (almost)\u00a0didn't have a padding problem with the buffer builders after all, since they always resize the data_ to a power of 2, so its a multiple of 64 for every case except rare ones like Type == UInt8 and capacity == kMinBuilderCapacity (which is 32 right now). Which explains why we weren't swamped in valgrind warnings.\r\n\r\nI would still say, that it's more of a happy coincidence, and we should just zero everything between size_ and capacity_. The AppendNull problem would still be there, too.\u00a0\r\n\r\n\u00a0\r\n\r\nCheers",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-07-10T07:42:58.397+0000",
                    "updated": "2018-07-10T09:07:34.708+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/comment/16538265",
                    "id": "16538265",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Ok, thinking further about it: we need to zero the padding in both Resize and Reserve. In case of Reserve it can be way more than the last cache line which needs to be zeroed, so we shouldn't do it by default. If we don't zero in Reserve, but in Resize it's even worse, since we will zero the \"tail\" over and over again.\r\n\r\nBottom line, my proposed solution: we add bool zero_padding flag to Resize which is false by default. Then we can search for the Buffer::Resize usages in the code, and decide where that flag makes sense. Off course, bool flag creep in C++ isn't nice, since you don't have kwargs, but 2 flags are still tolerable, IMHO.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-07-10T08:44:41.573+0000",
                    "updated": "2018-07-10T08:44:41.573+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/comment/16538294",
                    "id": "16538294",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "But we can then zero padding in AllocateBuffer by default, no need for a separate method for it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-07-10T09:06:14.003+0000",
                    "updated": "2018-07-10T09:06:14.003+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/comment/16538516",
                    "id": "16538516",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I ended up leaving Buffer::Resize unchanged and explicitly calling ZeroPadding where appropriate. We maybe need a note about preferring AllocateBuffer to make_shared+Resize.\r\n\r\nI also added the finish check we've talked about.\r\n\r\nThere is a place in glib where IMHO we should explicitly zero the padding, too, but since I'm not comfortable with that part of arrow, I'd like for someone to look at the change first:\r\n\r\n{{diff --git a/c_glib/arrow-glib/input-stream.cpp b/c_glib/arrow-glib/input-stream.cpp}}\r\n{{index 353d00a8..fa899fbe 100644}}\r\n{{--- a/c_glib/arrow-glib/input-stream.cpp}}\r\n{{+++ b/c_glib/arrow-glib/input-stream.cpp}}\r\n{{@@ -551,6 +551,7 @@ namespace garrow {}}\r\n{{ if (n_read_bytes < n_bytes) {}}\r\n{{ RETURN_NOT_OK(buffer->Resize(n_read_bytes));}}\r\n{{ }}}\r\n{{+ buffer->ZeroPadding();}}\r\n{{ *out = buffer;}}\r\n{{ return arrow::Status::OK();}}\r\n{{ }}}\r\n\r\nThe rest of the changes are in the PR.\r\n\r\nI just noticed that python raises some warnings about unfinished buffers, too. I can fix those, though no today.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-07-10T12:48:42.682+0000",
                    "updated": "2018-07-10T12:48:42.682+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/comment/16538782",
                    "id": "16538782",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Except for a couple of cases, most of the builder unfinished warnings are caused by destructor call on planned failures. Since we don't use exceptions, I don't see any way to distinguish this case. Since these warnings are only shown in debug build, it may be tolerable, though I find it annoying.\r\n\r\nDo you have any idea how we can solve it better?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-07-10T15:32:13.979+0000",
                    "updated": "2018-07-10T15:32:13.979+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170994/comment/16549670",
                    "id": "16549670",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2239\n[https://github.com/apache/arrow/pull/2239]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-19T18:38:17.752+0000",
                    "updated": "2018-07-19T18:38:17.752+0000"
                }
            ],
            "maxResults": 7,
            "total": 7,
            "startAt": 0
        },
        "customfield_12311820": "0|i3vp5j:",
        "customfield_12314139": null
    }
}