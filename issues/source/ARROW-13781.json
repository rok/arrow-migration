{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13397684",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684",
    "key": "ARROW-13781",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
            "name": "alenka",
            "key": "alenkaf",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Alenka Frim",
            "active": true,
            "timeZone": "Europe/Ljubljana"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12337837",
                "id": "12337837",
                "name": "Parquet"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Bkief",
            "name": "Bkief",
            "key": "bkief",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Brian Kiefer",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Bkief",
            "name": "Bkief",
            "key": "bkief",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Brian Kiefer",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 30000,
            "total": 30000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 30000,
            "total": 30000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13781/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 50,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/682515",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF opened a new pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724\n\n\n   This PR adds a new parameter to `write_table` to allow parquet encodings to be defined on a per column basis. The encodings currently supported are: PLAIN, BIT_PACKED, RLE, BYTE_STREAM_SPLIT, DELTA_BINARY_PACKED, DELTA_BYTE_ARRAY    .\r\n   \r\n   It is not possible to set PLAIN_DICTIONARY and RLE_DICTIONARY for fallback encoding (those options will already be used by default in the C++ Parquet library).\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-17T10:27:21.565+0000",
                    "updated": "2021-11-17T10:27:21.565+0000",
                    "started": "2021-11-17T10:27:21.565+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "682515",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/682516",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#issuecomment-971443026\n\n\n   https://issues.apache.org/jira/browse/ARROW-13781\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-17T10:29:36.963+0000",
                    "updated": "2021-11-17T10:29:36.963+0000",
                    "started": "2021-11-17T10:29:36.963+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "682516",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/682577",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#discussion_r751189769\n\n\n\n##########\nFile path: python/pyarrow/parquet.py\n##########\n@@ -560,6 +560,15 @@ def _sanitize_table(table, new_schema, flavor):\n     enabled, then dictionary is preferred.\n     The byte_stream_split encoding is valid only for floating-point data types\n     and should be combined with a compression codec.\n+col_encoding : dict, default None\n\nReview comment:\n       I was thinking we can maybe also use the full `column_encoding` ? (that's only a bit longer)\n\n##########\nFile path: python/pyarrow/tests/parquet/test_basic.py\n##########\n@@ -352,6 +352,37 @@ def test_byte_stream_split(use_legacy_dataset):\n                          use_legacy_dataset=use_legacy_dataset)\n \n \n+@parametrize_legacy_dataset\n+def test_col_encoding(use_legacy_dataset):\n+    arr_float = pa.array(list(map(float, range(100))))\n+    arr_int = pa.array(list(map(int, range(100))))\n+    mixed_table = pa.Table.from_arrays([arr_float, arr_int],\n+                                       names=['a', 'b'])\n+\n+    # Check NONE col_encoding.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding=None, use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"BYTE_STREAM_SPLIT\" for column 'a' and \"PLAIN\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding={'a': \"BYTE_STREAM_SPLIT\", 'b': \"PLAIN\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"RLE\" for column 'a' and \"BYTE_STREAM_SPLIT\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_byte_stream_split=['a'],\n+                     col_encoding={'a': \"RLE\", 'b': \"BYTE_STREAM_SPLIT\"},\n\nReview comment:\n       In this case we are overriding the `use_byte_stream_split`, I think? (since `col_encoding` is handled after `use_byte_stream_split`) In that case we should maybe raise an error that you can't set both at the same time?\n\n##########\nFile path: python/pyarrow/tests/parquet/test_basic.py\n##########\n@@ -352,6 +352,37 @@ def test_byte_stream_split(use_legacy_dataset):\n                          use_legacy_dataset=use_legacy_dataset)\n \n \n+@parametrize_legacy_dataset\n+def test_col_encoding(use_legacy_dataset):\n+    arr_float = pa.array(list(map(float, range(100))))\n+    arr_int = pa.array(list(map(int, range(100))))\n+    mixed_table = pa.Table.from_arrays([arr_float, arr_int],\n+                                       names=['a', 'b'])\n+\n+    # Check NONE col_encoding.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding=None, use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"BYTE_STREAM_SPLIT\" for column 'a' and \"PLAIN\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding={'a': \"BYTE_STREAM_SPLIT\", 'b': \"PLAIN\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"RLE\" for column 'a' and \"BYTE_STREAM_SPLIT\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_byte_stream_split=['a'],\n+                     col_encoding={'a': \"RLE\", 'b': \"BYTE_STREAM_SPLIT\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"DELTA_BINARY_PACKED\" col_encoding for column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_dictionary=['b'],\n+                     col_encoding={'b': \"DELTA_BINARY_PACKED\"},\n\nReview comment:\n       This specific case will also not actually have effect, right? Since `use_dictionary=['b']` will have priority over `col_encoding:{'b': ...}` ?\n\n##########\nFile path: python/pyarrow/_parquet.pyx\n##########\n@@ -879,6 +879,15 @@ cdef encoding_name_from_enum(ParquetEncoding encoding_):\n         ParquetEncoding_BYTE_STREAM_SPLIT: 'BYTE_STREAM_SPLIT',\n     }.get(encoding_, 'UNKNOWN')\n \n+cdef encoding_enum_from_name(str encoding_name):\n\nReview comment:\n       Small code style nit: can you leave two blank lines between functions/defintions? so one more above and below this object (you will see that the other definitions here do the same)\n\n##########\nFile path: python/pyarrow/tests/parquet/test_basic.py\n##########\n@@ -352,6 +352,37 @@ def test_byte_stream_split(use_legacy_dataset):\n                          use_legacy_dataset=use_legacy_dataset)\n \n \n+@parametrize_legacy_dataset\n+def test_col_encoding(use_legacy_dataset):\n+    arr_float = pa.array(list(map(float, range(100))))\n+    arr_int = pa.array(list(map(int, range(100))))\n+    mixed_table = pa.Table.from_arrays([arr_float, arr_int],\n+                                       names=['a', 'b'])\n+\n+    # Check NONE col_encoding.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding=None, use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"BYTE_STREAM_SPLIT\" for column 'a' and \"PLAIN\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding={'a': \"BYTE_STREAM_SPLIT\", 'b': \"PLAIN\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"RLE\" for column 'a' and \"BYTE_STREAM_SPLIT\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_byte_stream_split=['a'],\n+                     col_encoding={'a': \"RLE\", 'b': \"BYTE_STREAM_SPLIT\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"DELTA_BINARY_PACKED\" col_encoding for column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_dictionary=['b'],\n+                     col_encoding={'b': \"DELTA_BINARY_PACKED\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n\nReview comment:\n       Can you add tests for some failure cases (asserting they raise a proper error with `pytest.raises`, see the test above or below): 1) passing an unknown encoding in the dict, 2) passing an unknown column name in the dict, and 3) not passing\n\n##########\nFile path: python/pyarrow/parquet.py\n##########\n@@ -560,6 +560,15 @@ def _sanitize_table(table, new_schema, flavor):\n     enabled, then dictionary is preferred.\n     The byte_stream_split encoding is valid only for floating-point data types\n     and should be combined with a compression codec.\n+col_encoding : dict, default None\n+    Specify the encoding scheme on a per column basis.\n+    Valid values: {'PLAIN', 'BIT_PACKED', 'RLE', 'BYTE_STREAM_SPLIT',\n+    'DELTA_BINARY_PACKED', 'DELTA_BYTE_ARRAY'}\n+    Unsupported encodings: DELTA_LENGTH_BYTE_ARRAY, PLAIN_DICTIONARY and\n+    RLE_DICTIONARY. Last two options are already used by default.\n+    Certain encodings are only compatible with certain data types.\n+    Please refer to the encodings section of Reading and writing Parquet\n+    files <https://arrow.apache.org/docs/cpp/parquet.html#encodings>_.\n\nReview comment:\n       ```suggestion\r\n       files `<https://arrow.apache.org/docs/cpp/parquet.html#encodings>`__.\r\n   ```\r\n   \r\n   (Restructuredtext needs the backticks around it ..)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-17T12:35:19.202+0000",
                    "updated": "2021-11-17T12:35:19.202+0000",
                    "started": "2021-11-17T12:35:19.202+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "682577",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/682591",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#discussion_r751220285\n\n\n\n##########\nFile path: python/pyarrow/tests/parquet/test_basic.py\n##########\n@@ -352,6 +352,37 @@ def test_byte_stream_split(use_legacy_dataset):\n                          use_legacy_dataset=use_legacy_dataset)\n \n \n+@parametrize_legacy_dataset\n+def test_col_encoding(use_legacy_dataset):\n+    arr_float = pa.array(list(map(float, range(100))))\n+    arr_int = pa.array(list(map(int, range(100))))\n+    mixed_table = pa.Table.from_arrays([arr_float, arr_int],\n+                                       names=['a', 'b'])\n+\n+    # Check NONE col_encoding.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding=None, use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"BYTE_STREAM_SPLIT\" for column 'a' and \"PLAIN\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding={'a': \"BYTE_STREAM_SPLIT\", 'b': \"PLAIN\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"RLE\" for column 'a' and \"BYTE_STREAM_SPLIT\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_byte_stream_split=['a'],\n+                     col_encoding={'a': \"RLE\", 'b': \"BYTE_STREAM_SPLIT\"},\n\nReview comment:\n       I was working in a way to override, yes (because of the description in [ARROW-13781](https://issues.apache.org/jira/browse/ARROW-13781) but am fine with raising an error.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-17T13:04:33.801+0000",
                    "updated": "2021-11-17T13:04:33.801+0000",
                    "started": "2021-11-17T13:04:33.801+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "682591",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/683172",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#discussion_r752050016\n\n\n\n##########\nFile path: python/pyarrow/tests/parquet/test_basic.py\n##########\n@@ -352,6 +352,37 @@ def test_byte_stream_split(use_legacy_dataset):\n                          use_legacy_dataset=use_legacy_dataset)\n \n \n+@parametrize_legacy_dataset\n+def test_col_encoding(use_legacy_dataset):\n+    arr_float = pa.array(list(map(float, range(100))))\n+    arr_int = pa.array(list(map(int, range(100))))\n+    mixed_table = pa.Table.from_arrays([arr_float, arr_int],\n+                                       names=['a', 'b'])\n+\n+    # Check NONE col_encoding.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding=None, use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"BYTE_STREAM_SPLIT\" for column 'a' and \"PLAIN\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding={'a': \"BYTE_STREAM_SPLIT\", 'b': \"PLAIN\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"RLE\" for column 'a' and \"BYTE_STREAM_SPLIT\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_byte_stream_split=['a'],\n+                     col_encoding={'a': \"RLE\", 'b': \"BYTE_STREAM_SPLIT\"},\n\nReview comment:\n       I think the description in ARROW-13781 (\"supercede\") might be about that with this new keyword, the existing `use_btye_stream_split` keyword is no longer needed since you can achieve the same with `col_encoding`. And indeed specifying it through `col_encoding` will ignore what was passed to `use_byte_stream_split`. So for users there is no need to specify both, in which case I would explicitly disallow that (or at least raise a warning), to avoid confusion.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-18T09:25:19.204+0000",
                    "updated": "2021-11-18T09:25:19.204+0000",
                    "started": "2021-11-18T09:25:19.204+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "683172",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/683182",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#discussion_r752065211\n\n\n\n##########\nFile path: python/pyarrow/tests/parquet/test_basic.py\n##########\n@@ -352,6 +352,37 @@ def test_byte_stream_split(use_legacy_dataset):\n                          use_legacy_dataset=use_legacy_dataset)\n \n \n+@parametrize_legacy_dataset\n+def test_col_encoding(use_legacy_dataset):\n+    arr_float = pa.array(list(map(float, range(100))))\n+    arr_int = pa.array(list(map(int, range(100))))\n+    mixed_table = pa.Table.from_arrays([arr_float, arr_int],\n+                                       names=['a', 'b'])\n+\n+    # Check NONE col_encoding.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding=None, use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"BYTE_STREAM_SPLIT\" for column 'a' and \"PLAIN\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding={'a': \"BYTE_STREAM_SPLIT\", 'b': \"PLAIN\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"RLE\" for column 'a' and \"BYTE_STREAM_SPLIT\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_byte_stream_split=['a'],\n+                     col_encoding={'a': \"RLE\", 'b': \"BYTE_STREAM_SPLIT\"},\n\nReview comment:\n       Ok, I get it.\r\n   \r\n   I left `use_byte_stream_split` intact because you can set it to `True` and it is applied to all columns, which is handy. I will make a correction to connect `use_byte_stream_split` with `column_encoding` as we talked about.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-18T09:42:22.678+0000",
                    "updated": "2021-11-18T09:42:22.678+0000",
                    "started": "2021-11-18T09:42:22.677+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "683182",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/683252",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkief commented on a change in pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#discussion_r752172753\n\n\n\n##########\nFile path: python/pyarrow/tests/parquet/test_basic.py\n##########\n@@ -352,6 +352,37 @@ def test_byte_stream_split(use_legacy_dataset):\n                          use_legacy_dataset=use_legacy_dataset)\n \n \n+@parametrize_legacy_dataset\n+def test_col_encoding(use_legacy_dataset):\n+    arr_float = pa.array(list(map(float, range(100))))\n+    arr_int = pa.array(list(map(int, range(100))))\n+    mixed_table = pa.Table.from_arrays([arr_float, arr_int],\n+                                       names=['a', 'b'])\n+\n+    # Check NONE col_encoding.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding=None, use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"BYTE_STREAM_SPLIT\" for column 'a' and \"PLAIN\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding={'a': \"BYTE_STREAM_SPLIT\", 'b': \"PLAIN\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"RLE\" for column 'a' and \"BYTE_STREAM_SPLIT\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_byte_stream_split=['a'],\n+                     col_encoding={'a': \"RLE\", 'b': \"BYTE_STREAM_SPLIT\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"DELTA_BINARY_PACKED\" col_encoding for column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_dictionary=['b'],\n+                     col_encoding={'b': \"DELTA_BINARY_PACKED\"},\n\nReview comment:\n       Long term, should `use_byte_stream_split` be deprecated (or at least put on that path) and `use_dictionary` become a boolean just to set the default encoding?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-18T11:58:42.091+0000",
                    "updated": "2021-11-18T11:58:42.091+0000",
                    "started": "2021-11-18T11:58:42.091+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "683252",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/684564",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#discussion_r754050365\n\n\n\n##########\nFile path: python/pyarrow/tests/parquet/test_basic.py\n##########\n@@ -352,6 +352,37 @@ def test_byte_stream_split(use_legacy_dataset):\n                          use_legacy_dataset=use_legacy_dataset)\n \n \n+@parametrize_legacy_dataset\n+def test_col_encoding(use_legacy_dataset):\n+    arr_float = pa.array(list(map(float, range(100))))\n+    arr_int = pa.array(list(map(int, range(100))))\n+    mixed_table = pa.Table.from_arrays([arr_float, arr_int],\n+                                       names=['a', 'b'])\n+\n+    # Check NONE col_encoding.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding=None, use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"BYTE_STREAM_SPLIT\" for column 'a' and \"PLAIN\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding={'a': \"BYTE_STREAM_SPLIT\", 'b': \"PLAIN\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"RLE\" for column 'a' and \"BYTE_STREAM_SPLIT\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_byte_stream_split=['a'],\n+                     col_encoding={'a': \"RLE\", 'b': \"BYTE_STREAM_SPLIT\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"DELTA_BINARY_PACKED\" col_encoding for column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_dictionary=['b'],\n+                     col_encoding={'b': \"DELTA_BINARY_PACKED\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n\nReview comment:\n       Passing an unknown column name in the dict currently doesn't give an error (same in `use_byte_stream_split`). Not sure how to add this check in General writer properties - `_create_writer_properties()`. Also the item 3) not passing isn't clear to me. Do you mean if `column_encoding` isn't specified in the `write_table`?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T08:42:21.413+0000",
                    "updated": "2021-11-22T08:42:21.413+0000",
                    "started": "2021-11-22T08:42:21.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684564",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/684567",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#discussion_r754053017\n\n\n\n##########\nFile path: python/pyarrow/_parquet.pyx\n##########\n@@ -1284,6 +1294,14 @@ cdef shared_ptr[WriterProperties] _create_writer_properties(\n             props.encoding(tobytes(column),\n                            ParquetEncoding_BYTE_STREAM_SPLIT)\n \n+    # col_encoding\n+    # encoding map - encode individual columns\n+\n+    if col_encoding is not None:\n+        for column, _encoding in col_encoding.items():\n+            props.encoding(tobytes(column),\n+                           encoding_enum_from_name(_encoding))\n\nReview comment:\n       You can check here if `encoding_enum_from_name(_encoding)` gives `None`, and in that case raising a ValueError\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T08:45:59.057+0000",
                    "updated": "2021-11-22T08:45:59.057+0000",
                    "started": "2021-11-22T08:45:59.057+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684567",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/684569",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#discussion_r754054030\n\n\n\n##########\nFile path: python/pyarrow/tests/parquet/test_basic.py\n##########\n@@ -352,6 +352,37 @@ def test_byte_stream_split(use_legacy_dataset):\n                          use_legacy_dataset=use_legacy_dataset)\n \n \n+@parametrize_legacy_dataset\n+def test_col_encoding(use_legacy_dataset):\n+    arr_float = pa.array(list(map(float, range(100))))\n+    arr_int = pa.array(list(map(int, range(100))))\n+    mixed_table = pa.Table.from_arrays([arr_float, arr_int],\n+                                       names=['a', 'b'])\n+\n+    # Check NONE col_encoding.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding=None, use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"BYTE_STREAM_SPLIT\" for column 'a' and \"PLAIN\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding={'a': \"BYTE_STREAM_SPLIT\", 'b': \"PLAIN\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"RLE\" for column 'a' and \"BYTE_STREAM_SPLIT\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_byte_stream_split=['a'],\n+                     col_encoding={'a': \"RLE\", 'b': \"BYTE_STREAM_SPLIT\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"DELTA_BINARY_PACKED\" col_encoding for column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_dictionary=['b'],\n+                     col_encoding={'b': \"DELTA_BINARY_PACKED\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n\nReview comment:\n       > Passing an unknown column name in the dict currently doesn't give an error (same in use_byte_stream_split). Not sure how to add this check in General writer properties \r\n   \r\n   See the other comment I just added\r\n   \r\n   > Also the item 3) not passing isn't clear to me. Do you mean if column_encoding isn't specified in the write_table?\r\n   \r\n   Ah, I think I didn't finish my sentence there :) I suppose I meant \"not passing a dict\" (but eg a single string).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T08:47:27.526+0000",
                    "updated": "2021-11-22T08:47:27.526+0000",
                    "started": "2021-11-22T08:47:27.526+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684569",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/684575",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#discussion_r754061348\n\n\n\n##########\nFile path: python/pyarrow/_parquet.pyx\n##########\n@@ -1284,6 +1294,14 @@ cdef shared_ptr[WriterProperties] _create_writer_properties(\n             props.encoding(tobytes(column),\n                            ParquetEncoding_BYTE_STREAM_SPLIT)\n \n+    # col_encoding\n+    # encoding map - encode individual columns\n+\n+    if col_encoding is not None:\n+        for column, _encoding in col_encoding.items():\n+            props.encoding(tobytes(column),\n+                           encoding_enum_from_name(_encoding))\n\nReview comment:\n       Yes, that is meant for number 1) in https://github.com/apache/arrow/pull/11724#discussion_r751195257 right? My question is regarding unknown column name, that is number 2) =)\r\n   \r\n   If for example we have a table with columns `a` and `b` and you specify the encoding for unknown column `c` - it does nothing and I am not sure how to raise an error in this case.\r\n   \r\n   That is if I understood number 2) correctly.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T08:57:20.165+0000",
                    "updated": "2021-11-22T08:57:20.165+0000",
                    "started": "2021-11-22T08:57:20.165+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684575",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/684583",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#discussion_r754079247\n\n\n\n##########\nFile path: python/pyarrow/_parquet.pyx\n##########\n@@ -1284,6 +1294,14 @@ cdef shared_ptr[WriterProperties] _create_writer_properties(\n             props.encoding(tobytes(column),\n                            ParquetEncoding_BYTE_STREAM_SPLIT)\n \n+    # col_encoding\n+    # encoding map - encode individual columns\n+\n+    if col_encoding is not None:\n+        for column, _encoding in col_encoding.items():\n+            props.encoding(tobytes(column),\n+                           encoding_enum_from_name(_encoding))\n\nReview comment:\n       Ah, yes, sorry :) That was indeed for unknown encoding, not unknown column. If the underlying C++ code doesn't error for unknown columns, let's maybe leave that for now as is.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T09:20:18.469+0000",
                    "updated": "2021-11-22T09:20:18.469+0000",
                    "started": "2021-11-22T09:20:18.469+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684583",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/684584",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#discussion_r754083762\n\n\n\n##########\nFile path: python/pyarrow/tests/parquet/test_basic.py\n##########\n@@ -352,6 +352,37 @@ def test_byte_stream_split(use_legacy_dataset):\n                          use_legacy_dataset=use_legacy_dataset)\n \n \n+@parametrize_legacy_dataset\n+def test_col_encoding(use_legacy_dataset):\n+    arr_float = pa.array(list(map(float, range(100))))\n+    arr_int = pa.array(list(map(int, range(100))))\n+    mixed_table = pa.Table.from_arrays([arr_float, arr_int],\n+                                       names=['a', 'b'])\n+\n+    # Check NONE col_encoding.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding=None, use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"BYTE_STREAM_SPLIT\" for column 'a' and \"PLAIN\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding={'a': \"BYTE_STREAM_SPLIT\", 'b': \"PLAIN\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"RLE\" for column 'a' and \"BYTE_STREAM_SPLIT\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_byte_stream_split=['a'],\n+                     col_encoding={'a': \"RLE\", 'b': \"BYTE_STREAM_SPLIT\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"DELTA_BINARY_PACKED\" col_encoding for column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_dictionary=['b'],\n+                     col_encoding={'b': \"DELTA_BINARY_PACKED\"},\n\nReview comment:\n       Will add error for this case also.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T09:25:24.494+0000",
                    "updated": "2021-11-22T09:25:24.494+0000",
                    "started": "2021-11-22T09:25:24.493+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684584",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/684585",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#discussion_r754084660\n\n\n\n##########\nFile path: python/pyarrow/_parquet.pyx\n##########\n@@ -1284,6 +1294,14 @@ cdef shared_ptr[WriterProperties] _create_writer_properties(\n             props.encoding(tobytes(column),\n                            ParquetEncoding_BYTE_STREAM_SPLIT)\n \n+    # col_encoding\n+    # encoding map - encode individual columns\n+\n+    if col_encoding is not None:\n+        for column, _encoding in col_encoding.items():\n+            props.encoding(tobytes(column),\n+                           encoding_enum_from_name(_encoding))\n\nReview comment:\n       Ok, done.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T09:26:23.083+0000",
                    "updated": "2021-11-22T09:26:23.083+0000",
                    "started": "2021-11-22T09:26:23.083+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684585",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/684684",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#discussion_r754269611\n\n\n\n##########\nFile path: python/pyarrow/tests/parquet/test_basic.py\n##########\n@@ -352,6 +352,37 @@ def test_byte_stream_split(use_legacy_dataset):\n                          use_legacy_dataset=use_legacy_dataset)\n \n \n+@parametrize_legacy_dataset\n+def test_col_encoding(use_legacy_dataset):\n+    arr_float = pa.array(list(map(float, range(100))))\n+    arr_int = pa.array(list(map(int, range(100))))\n+    mixed_table = pa.Table.from_arrays([arr_float, arr_int],\n+                                       names=['a', 'b'])\n+\n+    # Check NONE col_encoding.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding=None, use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"BYTE_STREAM_SPLIT\" for column 'a' and \"PLAIN\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding={'a': \"BYTE_STREAM_SPLIT\", 'b': \"PLAIN\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"RLE\" for column 'a' and \"BYTE_STREAM_SPLIT\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_byte_stream_split=['a'],\n+                     col_encoding={'a': \"RLE\", 'b': \"BYTE_STREAM_SPLIT\"},\n\nReview comment:\n       > I left `use_byte_stream_split` intact because you can set it to `True` and it is applied to all columns, which is handy.\r\n   \r\n   This is maybe a useful feature to also add to `column_encoding`? Eg if you pass a single string, it is applied to all columns (using similar code as this is done for `use_byte_stream_split`), and otherwise a dict for per-column encoding.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T13:19:11.082+0000",
                    "updated": "2021-11-22T13:19:11.082+0000",
                    "started": "2021-11-22T13:19:11.082+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684684",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/684714",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#discussion_r754303166\n\n\n\n##########\nFile path: python/pyarrow/tests/parquet/test_basic.py\n##########\n@@ -352,6 +352,37 @@ def test_byte_stream_split(use_legacy_dataset):\n                          use_legacy_dataset=use_legacy_dataset)\n \n \n+@parametrize_legacy_dataset\n+def test_col_encoding(use_legacy_dataset):\n+    arr_float = pa.array(list(map(float, range(100))))\n+    arr_int = pa.array(list(map(int, range(100))))\n+    mixed_table = pa.Table.from_arrays([arr_float, arr_int],\n+                                       names=['a', 'b'])\n+\n+    # Check NONE col_encoding.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding=None, use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"BYTE_STREAM_SPLIT\" for column 'a' and \"PLAIN\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table, use_dictionary=False,\n+                     col_encoding={'a': \"BYTE_STREAM_SPLIT\", 'b': \"PLAIN\"},\n+                     use_legacy_dataset=use_legacy_dataset)\n+\n+    # Check \"RLE\" for column 'a' and \"BYTE_STREAM_SPLIT\" col_encoding for\n+    # column 'b'.\n+    _check_roundtrip(mixed_table, expected=mixed_table,\n+                     use_byte_stream_split=['a'],\n+                     col_encoding={'a': \"RLE\", 'b': \"BYTE_STREAM_SPLIT\"},\n\nReview comment:\n       Yes, makes sense. \r\n   I am getting a strange `IOError` so I will get back to it tomorrow + the feature mentioned.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T13:58:17.237+0000",
                    "updated": "2021-11-22T13:58:17.237+0000",
                    "started": "2021-11-22T13:58:17.237+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684714",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/685602",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#issuecomment-977497773\n\n\n   I think before we expose this we should make sure that Java (parquet-mr) can read \"DELTA_BINARY_PACKED, DELTA_BYTE_ARRAY .\" I don't think these are well tested (and emitted by default) but I could be misrembering.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-24T03:59:47.017+0000",
                    "updated": "2021-11-24T03:59:47.017+0000",
                    "started": "2021-11-24T03:59:47.017+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "685602",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/685738",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#issuecomment-977676073\n\n\n   I added all review suggestions, the tests are all set. I think this is ready for final review if we decide to expose it.\r\n   \r\n   @emkornfield @jorisvandenbossche where could I check and ask for help on the Java side regarding https://github.com/apache/arrow/pull/11724#issuecomment-977497773? \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-24T09:08:18.770+0000",
                    "updated": "2021-11-24T09:08:18.770+0000",
                    "started": "2021-11-24T09:08:18.770+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "685738",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/686365",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#discussion_r756803994\n\n\n\n##########\nFile path: python/pyarrow/_parquet.pyx\n##########\n@@ -1278,11 +1297,43 @@ cdef shared_ptr[WriterProperties] _create_writer_properties(\n \n     if isinstance(use_byte_stream_split, bool):\n         if use_byte_stream_split:\n-            props.encoding(ParquetEncoding_BYTE_STREAM_SPLIT)\n+            if column_encoding is not None:\n+                raise ValueError(\n+                    \"'column_encoding' is not None\")\n+            else:\n+                props.encoding(ParquetEncoding_BYTE_STREAM_SPLIT)\n     elif use_byte_stream_split is not None:\n         for column in use_byte_stream_split:\n-            props.encoding(tobytes(column),\n-                           ParquetEncoding_BYTE_STREAM_SPLIT)\n+            if column_encoding is None:\n+                column_encoding = {column: 'BYTE_STREAM_SPLIT'}\n+            elif column_encoding.get(column, None) is None:\n+                column_encoding[column]='BYTE_STREAM_SPLIT'\n+            else:\n+                raise ValueError(\n+                    \"Column {0} is already specified in 'column_encoding'\"\n+                    .format(column))\n\nReview comment:\n       Here as well, mention what the conflict is about?\n\n##########\nFile path: python/pyarrow/_parquet.pyx\n##########\n@@ -1278,11 +1297,43 @@ cdef shared_ptr[WriterProperties] _create_writer_properties(\n \n     if isinstance(use_byte_stream_split, bool):\n         if use_byte_stream_split:\n-            props.encoding(ParquetEncoding_BYTE_STREAM_SPLIT)\n+            if column_encoding is not None:\n+                raise ValueError(\n+                    \"'column_encoding' is not None\")\n+            else:\n+                props.encoding(ParquetEncoding_BYTE_STREAM_SPLIT)\n     elif use_byte_stream_split is not None:\n         for column in use_byte_stream_split:\n-            props.encoding(tobytes(column),\n-                           ParquetEncoding_BYTE_STREAM_SPLIT)\n+            if column_encoding is None:\n+                column_encoding = {column: 'BYTE_STREAM_SPLIT'}\n+            elif column_encoding.get(column, None) is None:\n+                column_encoding[column]='BYTE_STREAM_SPLIT'\n+            else:\n+                raise ValueError(\n+                    \"Column {0} is already specified in 'column_encoding'\"\n+                    .format(column))\n+\n+    # column_encoding\n+    # encoding map - encode individual columns\n+\n+    if column_encoding is not None:\n+        if isinstance(column_encoding, dict):\n+            for column, _encoding in column_encoding.items():\n+                if encoding_enum_from_name(_encoding) is None:\n+                    raise ValueError(\"Unsupported column encoding: {0}\"\n+                                     .format(_encoding))\n\nReview comment:\n       Why don't you do this check in `encoding_enum_from_name` instead of duplicating it in several places here?\n\n##########\nFile path: python/pyarrow/_parquet.pyx\n##########\n@@ -1278,11 +1297,43 @@ cdef shared_ptr[WriterProperties] _create_writer_properties(\n \n     if isinstance(use_byte_stream_split, bool):\n         if use_byte_stream_split:\n-            props.encoding(ParquetEncoding_BYTE_STREAM_SPLIT)\n+            if column_encoding is not None:\n+                raise ValueError(\n+                    \"'column_encoding' is not None\")\n\nReview comment:\n       This is a rather confusing error message. Perhaps explain the user what the conflicting options are?\n\n##########\nFile path: python/pyarrow/parquet.py\n##########\n@@ -560,6 +560,15 @@ def _sanitize_table(table, new_schema, flavor):\n     enabled, then dictionary is preferred.\n     The byte_stream_split encoding is valid only for floating-point data types\n     and should be combined with a compression codec.\n+column_encoding : string or dict, default None\n+    Specify the encoding scheme on a per column basis.\n+    Valid values: {'PLAIN', 'BIT_PACKED', 'RLE', 'BYTE_STREAM_SPLIT',\n+    'DELTA_BINARY_PACKED', 'DELTA_BYTE_ARRAY'}\n+    Unsupported encodings: DELTA_LENGTH_BYTE_ARRAY, PLAIN_DICTIONARY and\n+    RLE_DICTIONARY. Last two options are already used by default.\n\nReview comment:\n       It doesn't seem useful to list the unsupported encodings here; same for the \"Last two options\" comment, IMHO.\n\n##########\nFile path: python/pyarrow/parquet.py\n##########\n@@ -560,6 +560,15 @@ def _sanitize_table(table, new_schema, flavor):\n     enabled, then dictionary is preferred.\n     The byte_stream_split encoding is valid only for floating-point data types\n     and should be combined with a compression codec.\n+column_encoding : string or dict, default None\n+    Specify the encoding scheme on a per column basis.\n+    Valid values: {'PLAIN', 'BIT_PACKED', 'RLE', 'BYTE_STREAM_SPLIT',\n+    'DELTA_BINARY_PACKED', 'DELTA_BYTE_ARRAY'}\n+    Unsupported encodings: DELTA_LENGTH_BYTE_ARRAY, PLAIN_DICTIONARY and\n+    RLE_DICTIONARY. Last two options are already used by default.\n+    Certain encodings are only compatible with certain data types.\n+    Please refer to the encodings section of `Reading and writing Parquet\n+    files <https://arrow.apache.org/docs/cpp/parquet.html#encodings>`_.\n\nReview comment:\n       +1\n\n##########\nFile path: python/pyarrow/_parquet.pyx\n##########\n@@ -1278,11 +1297,43 @@ cdef shared_ptr[WriterProperties] _create_writer_properties(\n \n     if isinstance(use_byte_stream_split, bool):\n         if use_byte_stream_split:\n-            props.encoding(ParquetEncoding_BYTE_STREAM_SPLIT)\n+            if column_encoding is not None:\n+                raise ValueError(\n+                    \"'column_encoding' is not None\")\n+            else:\n+                props.encoding(ParquetEncoding_BYTE_STREAM_SPLIT)\n     elif use_byte_stream_split is not None:\n         for column in use_byte_stream_split:\n-            props.encoding(tobytes(column),\n-                           ParquetEncoding_BYTE_STREAM_SPLIT)\n+            if column_encoding is None:\n+                column_encoding = {column: 'BYTE_STREAM_SPLIT'}\n+            elif column_encoding.get(column, None) is None:\n+                column_encoding[column]='BYTE_STREAM_SPLIT'\n+            else:\n+                raise ValueError(\n+                    \"Column {0} is already specified in 'column_encoding'\"\n+                    .format(column))\n+\n+    # column_encoding\n+    # encoding map - encode individual columns\n+\n+    if column_encoding is not None:\n+        if isinstance(column_encoding, dict):\n+            for column, _encoding in column_encoding.items():\n+                if encoding_enum_from_name(_encoding) is None:\n+                    raise ValueError(\"Unsupported column encoding: {0}\"\n+                                     .format(_encoding))\n+                else:\n+                    props.encoding(tobytes(column),\n+                                   encoding_enum_from_name(_encoding))\n+        elif isinstance(column_encoding, str):\n+            if encoding_enum_from_name(column_encoding) is None:\n+                raise ValueError(\"Unsupported column encoding: {0}\"\n+                                 .format(column_encoding))\n+            else:\n+                props.encoding(encoding_enum_from_name(column_encoding))\n+        else:\n+            raise AttributeError(\n\nReview comment:\n       Should be `TypeError`\n\n##########\nFile path: python/pyarrow/_parquet.pyx\n##########\n@@ -1278,11 +1297,43 @@ cdef shared_ptr[WriterProperties] _create_writer_properties(\n \n     if isinstance(use_byte_stream_split, bool):\n         if use_byte_stream_split:\n-            props.encoding(ParquetEncoding_BYTE_STREAM_SPLIT)\n+            if column_encoding is not None:\n+                raise ValueError(\n+                    \"'column_encoding' is not None\")\n+            else:\n+                props.encoding(ParquetEncoding_BYTE_STREAM_SPLIT)\n     elif use_byte_stream_split is not None:\n         for column in use_byte_stream_split:\n-            props.encoding(tobytes(column),\n-                           ParquetEncoding_BYTE_STREAM_SPLIT)\n+            if column_encoding is None:\n+                column_encoding = {column: 'BYTE_STREAM_SPLIT'}\n+            elif column_encoding.get(column, None) is None:\n+                column_encoding[column]='BYTE_STREAM_SPLIT'\n\nReview comment:\n       Hmm, can you ensure the code is PEP8-compliant?\r\n   You should be able to do so with `archery lint --python`.\r\n   \r\n   (here, spaces should be added around `=`)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-25T11:31:01.483+0000",
                    "updated": "2021-11-25T11:31:01.483+0000",
                    "started": "2021-11-25T11:31:01.482+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "686365",
                    "issueId": "13397684"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/worklog/686433",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11724:\nURL: https://github.com/apache/arrow/pull/11724#discussion_r756863581\n\n\n\n##########\nFile path: python/pyarrow/_parquet.pyx\n##########\n@@ -1278,11 +1297,43 @@ cdef shared_ptr[WriterProperties] _create_writer_properties(\n \n     if isinstance(use_byte_stream_split, bool):\n         if use_byte_stream_split:\n-            props.encoding(ParquetEncoding_BYTE_STREAM_SPLIT)\n+            if column_encoding is not None:\n+                raise ValueError(\n+                    \"'column_encoding' is not None\")\n\nReview comment:\n       The reason behind all these conflicts is that `use_byte_stream_split` encoding is same as `BYTE_STREAM_SPLIT` column encoding option. To catch situations when both are specified, I added this checks.\r\n   \r\n   I could change the error msg to \"`use_byte_stream_split` can not be passed together with `column_encoding`\" or maybe remove `use_byte_stream_split` altogether?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-25T12:52:16.707+0000",
                    "updated": "2021-11-25T12:52:16.707+0000",
                    "started": "2021-11-25T12:52:16.707+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "686433",
                    "issueId": "13397684"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 30000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@173e7dc5[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b3e20ba[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6845c59f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@726403dd[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c317854[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@acadd0a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ce588f1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1ecd105b[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19b9380e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@45c784be[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25053ef7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@533cadc4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 30000,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Dec 23 13:26:53 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-12-23T13:26:53.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13781/watchers",
            "watchCount": 5,
            "isWatching": false
        },
        "created": "2021-08-27T02:58:35.000+0000",
        "updated": "2021-12-23T15:51:16.000+0000",
        "timeoriginalestimate": null,
        "description": "Add a new parameter to `write_table` to allow parquet encodings to be defined on a per column basis. This should supercede use_dictionary and use_byte_stream_split.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "8h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 30000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Allow per column encoding in parquet writer ",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/comment/17438836",
                    "id": "17438836",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Bkief",
                        "name": "Bkief",
                        "key": "bkief",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Kiefer",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~alenkaf]\u00a0- I have a first pass at the code changes available. It compiled but crashed at runtime, then other priorities pulled me away. I'll throw it up on Github tonight and link to it here",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Bkief",
                        "name": "Bkief",
                        "key": "bkief",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Kiefer",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-11-04T16:56:19.314+0000",
                    "updated": "2021-11-04T16:56:38.600+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/comment/17438843",
                    "id": "17438843",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "body": "[~Bkief]\u00a0that would be great, thanks!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "created": "2021-11-04T17:18:18.866+0000",
                    "updated": "2021-11-04T17:18:18.866+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/comment/17439709",
                    "id": "17439709",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Bkief",
                        "name": "Bkief",
                        "key": "bkief",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Kiefer",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~alenkaf] - The branch can be found here: [https://github.com/bkief/arrow/tree/ARROW-13781]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Bkief",
                        "name": "Bkief",
                        "key": "bkief",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Kiefer",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-11-06T16:31:28.446+0000",
                    "updated": "2021-11-06T16:32:00.773+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/comment/17440029",
                    "id": "17440029",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "body": "[~Bkief] thanks a bunch!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "created": "2021-11-07T15:43:28.336+0000",
                    "updated": "2021-11-07T15:43:28.336+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/comment/17444484",
                    "id": "17444484",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "body": "I am having some trouble with understanding the 'use_dictionary' vs 'col_encoding' of dictionary type \"RLE_DICTIONARY\" and \"PLAIN_DICTIONARY\". An C++ exception is triggered when using mentioned encodings. Thought it would help turning 'use_dictionary' to False but it doesn't.\r\n\r\nRunning this code on my working branch:\r\n{code:java}\r\nimport numpy as np\r\nimport pandas as pd\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\n\r\narr_float = pa.array(list(map(float, range(100))))\r\narr_int = pa.array(list(map(int, range(100))))\r\nmixed_table = pa.Table.from_arrays([arr_float, arr_int], names=['a', 'b'])\r\n\r\npq.write_table(mixed_table, '/users/alenkafrim/example_col_encoding_1.parquet', use_dictionary=False, col_encoding={'a': \"RLE_DICTIONARY\"}){code}\r\nterminates Python and gives this error:\u00a0\r\n{code:java}\r\nparquet::ParquetException: Can't use dictionary encoding as fallback encoding{code}\r\nDoes anybody have any idea what I could try?\r\n\r\nThe code with the failing test can be found on my branch:\r\nhttps://github.com/AlenkaF/arrow/tree/ARROW-13781",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "created": "2021-11-16T11:25:00.558+0000",
                    "updated": "2021-11-16T11:25:00.558+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/comment/17444510",
                    "id": "17444510",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "It's generally not good that C++ exceptions can get to Python code, but the reason it is raising an exception here is that the {{col_encoding}} configuration for Parquet is to specify which encoding to use _when not using dictionary encoding_. So that's the reason it is raising an exception if you pass a dictionary encoding option to {{col_encoding}}.\r\n\r\nShort term, I think the easiest solution for your PR is to explicitly check for this as well in the Python bindings, so avoiding that \"RLE_DICTIONARY\" gets passed to the C++ code setting this option, and this way avoiding to trigger the C++ exception (and instead raise a python exception).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-11-16T12:32:28.323+0000",
                    "updated": "2021-11-16T12:32:28.323+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/comment/17444568",
                    "id": "17444568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Bkief",
                        "name": "Bkief",
                        "key": "bkief",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Kiefer",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Correct me if I am wrong, but wasn't delta_binary_packed encoding to arrow v6.0.0? https://issues.apache.org/jira/browse/PARQUET-490 If so, PyArrow should support that also",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Bkief",
                        "name": "Bkief",
                        "key": "bkief",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Kiefer",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-11-16T14:26:13.942+0000",
                    "updated": "2021-11-16T14:26:13.942+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/comment/17444983",
                    "id": "17444983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "body": "I am not sure ... https://arrow.apache.org/docs/cpp/parquet.html#encodings",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "created": "2021-11-17T07:42:16.180+0000",
                    "updated": "2021-11-17T07:42:16.180+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/comment/17444995",
                    "id": "17444995",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "body": "[~apitrou] do you know, are the docs outdated for the Parquet encodings?\r\n\r\nhttps://issues.apache.org/jira/browse/PARQUET-490\r\n[https://arrow.apache.org/docs/cpp/parquet.html#encodings]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "created": "2021-11-17T08:02:25.541+0000",
                    "updated": "2021-11-17T08:02:25.541+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/comment/17445021",
                    "id": "17445021",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Yes, we forgot to update them for DELTA_BINARY_PACKED and did it later in PARQUET-492. Unfortunately, 6.0.0 came in-between.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-11-17T09:01:46.923+0000",
                    "updated": "2021-11-17T09:01:46.923+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/comment/17445022",
                    "id": "17445022",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "(this is also why we would need docs of git master, not only the latest release...)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-11-17T09:02:10.661+0000",
                    "updated": "2021-11-17T09:02:10.661+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/comment/17445049",
                    "id": "17445049",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "body": "Got it, thanks for all the help!\r\n\r\nWill add delta_binary_packed so PyArrow supports it also.\r\n\r\nI did have to remove PLAIN_DICTIONARY and RLE_DICTIONARY as those options are already used by default in the C++ Parquet library.\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "created": "2021-11-17T09:55:23.999+0000",
                    "updated": "2021-11-17T09:55:23.999+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397684/comment/17464565",
                    "id": "17464565",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Issue resolved by pull request 11724\n[https://github.com/apache/arrow/pull/11724]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-12-23T13:26:53.082+0000",
                    "updated": "2021-12-23T13:26:53.082+0000"
                }
            ],
            "maxResults": 13,
            "total": 13,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ubpc:",
        "customfield_12314139": null
    }
}