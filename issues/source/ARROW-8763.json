{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13304139",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304139",
    "key": "ARROW-8763",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12588170",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12588170",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13269731",
                    "key": "PARQUET-1698",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269731",
                    "fields": {
                        "summary": "[C++] Add reader option to pre-buffer entire serialized row group into memory",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8763/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 9,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304139/worklog/433147",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #7172:\nURL: https://github.com/apache/arrow/pull/7172#discussion_r425106193\n\n\n\n##########\nFile path: cpp/src/arrow/io/caching.cc\n##########\n@@ -171,7 +171,8 @@ Status ReadRangeCache::Cache(std::vector<ReadRange> ranges) {\n   }\n \n   impl_->AddEntries(std::move(entries));\n-  return Status::OK();\n+  // Prefetch immediately, regardless of executor availability, if possible\n+  return impl_->file->WillNeed(ranges);\n\nReview comment:\n       I don't think it's necessary here since ReadRangeCache is effectively  a userland implementation of what the kernel does with fadvise. Second, the ordering here makes this call useless, i.e. the previous ReadAsync already hinted the kernel that you're reading said ranges.\r\n   \r\n   What I would like to see (in a following patch) is that ReadRangeCache is hidden via a custom CachedRandomAccessFile wrapper where`WillNeed` calls this dispatch. This would simplify the Parquet code path with buffering, e.g. we could remove all PreBuffering branch and just create a custom CachedRandomAccessFile once. We'd make the reader _always_ call `file->WillNeed(ranges)` regardless of the file system type.\r\n   \r\n   @lidavidm, tell me what do you think, and I'll open a ticket.\n\n##########\nFile path: cpp/src/arrow/io/file.cc\n##########\n@@ -636,6 +665,9 @@ Result<std::shared_ptr<Buffer>> MemoryMappedFile::ReadAt(int64_t position,\n \n   ARROW_ASSIGN_OR_RAISE(\n       nbytes, internal::ValidateReadRange(position, nbytes, memory_map_->size()));\n+  // Arrange to page data in\n+  RETURN_NOT_OK(::arrow::internal::MemoryAdviseWillNeed(\n\nReview comment:\n       Callers that want this behaviour will call WillNeed pre-emptively irregardless of the RandomAccessFile sub-class. By doing it here, you're doing a syscall for every ReadAt defeating one of the purposes of using mmap.\n\n##########\nFile path: cpp/src/arrow/io/memory.cc\n##########\n@@ -321,6 +342,11 @@ Result<std::shared_ptr<Buffer>> BufferReader::DoReadAt(int64_t position, int64_t\n \n   ARROW_ASSIGN_OR_RAISE(nbytes, internal::ValidateReadRange(position, nbytes, size_));\n   DCHECK_GE(nbytes, 0);\n+\n\nReview comment:\n       Same comment regarding ReatAt with mmap file.\n\n##########\nFile path: cpp/src/arrow/util/io_util.cc\n##########\n@@ -1072,6 +1072,61 @@ Status MemoryMapRemap(void* addr, size_t old_size, size_t new_size, int fildes,\n #endif\n }\n \n+Status MemoryAdviseWillNeed(const std::vector<MemoryRegion>& regions) {\n+  const auto page_size = static_cast<size_t>(GetPageSize());\n+  DCHECK_GT(page_size, 0);\n+  const size_t page_mask = ~(page_size - 1);\n+  DCHECK_EQ(page_mask & page_size, page_size);\n+\n+  auto align_region = [=](const MemoryRegion& region) -> MemoryRegion {\n+    const auto addr = reinterpret_cast<uintptr_t>(region.addr);\n+    const auto aligned_addr = addr & page_mask;\n+    DCHECK_LT(addr - aligned_addr, page_size);\n+    return {reinterpret_cast<void*>(aligned_addr),\n+            region.size + static_cast<size_t>(addr - aligned_addr)};\n+  };\n+\n+#ifdef _WIN32\n+  // PrefetchVirtualMemory() is available on Windows 8 or later\n+  struct PrefetchEntry {  // Like WIN32_MEMORY_RANGE_ENTRY\n+    void* VirtualAddress;\n+    size_t NumberOfBytes;\n+\n+    PrefetchEntry(const MemoryRegion& region)  // NOLINT runtime/explicit\n+        : VirtualAddress(region.addr), NumberOfBytes(region.size) {}\n+  };\n+  using PrefetchVirtualMemoryFunc = BOOL (*)(HANDLE, ULONG_PTR, PrefetchEntry*, ULONG);\n+  static const auto prefetch_virtual_memory = reinterpret_cast<PrefetchVirtualMemoryFunc>(\n+      GetProcAddress(GetModuleHandleW(L\"kernel32.dll\"), \"PrefetchVirtualMemory\"));\n\nReview comment:\n       Back to your python roots with reflection :)\n\n##########\nFile path: cpp/src/arrow/io/file.cc\n##########\n@@ -262,6 +266,27 @@ class ReadableFile::ReadableFileImpl : public OSFile {\n     return std::move(buffer);\n   }\n \n+  Status WillNeed(const std::vector<ReadRange>& ranges) {\n+    RETURN_NOT_OK(CheckClosed());\n+    for (const auto& range : ranges) {\n+      RETURN_NOT_OK(internal::ValidateRange(range.offset, range.length));\n+#if defined(POSIX_FADV_WILLNEED)\n+      if (posix_fadvise(fd_, range.offset, range.length, POSIX_FADV_WILLNEED)) {\n+        return IOErrorFromErrno(errno, \"posix_fadvise failed\");\n+      }\n+#elif defined(F_RDADVISE)  // macOS, BSD?\n+      struct {\n+        off_t ra_offset;\n+        int ra_count;\n+      } radvisory{range.offset, static_cast<int>(range.length)};\n\nReview comment:\n       Check if length <= INT_MAX, oss-fuzz is always waiting in a dark corner.  You can error/noop for now, or do the right thing and slice & re-partition.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-14T14:05:23.221+0000",
                    "updated": "2020-05-14T14:05:23.221+0000",
                    "started": "2020-05-14T14:05:23.221+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433147",
                    "issueId": "13304139"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304139/worklog/433148",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7172:\nURL: https://github.com/apache/arrow/pull/7172#discussion_r425165237\n\n\n\n##########\nFile path: cpp/src/arrow/io/caching.cc\n##########\n@@ -171,7 +171,8 @@ Status ReadRangeCache::Cache(std::vector<ReadRange> ranges) {\n   }\n \n   impl_->AddEntries(std::move(entries));\n-  return Status::OK();\n+  // Prefetch immediately, regardless of executor availability, if possible\n+  return impl_->file->WillNeed(ranges);\n\nReview comment:\n       `ReadAsync` by default only queues the read for execution in a thread pool. It doesn't necessarily issue the read immediately. So this might still be useful, though perhaps only in uninteresting corner cases.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-14T14:08:02.472+0000",
                    "updated": "2020-05-14T14:08:02.472+0000",
                    "started": "2020-05-14T14:08:02.471+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433148",
                    "issueId": "13304139"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304139/worklog/433149",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7172:\nURL: https://github.com/apache/arrow/pull/7172#discussion_r425166680\n\n\n\n##########\nFile path: cpp/src/arrow/io/file.cc\n##########\n@@ -262,6 +266,27 @@ class ReadableFile::ReadableFileImpl : public OSFile {\n     return std::move(buffer);\n   }\n \n+  Status WillNeed(const std::vector<ReadRange>& ranges) {\n+    RETURN_NOT_OK(CheckClosed());\n+    for (const auto& range : ranges) {\n+      RETURN_NOT_OK(internal::ValidateRange(range.offset, range.length));\n+#if defined(POSIX_FADV_WILLNEED)\n+      if (posix_fadvise(fd_, range.offset, range.length, POSIX_FADV_WILLNEED)) {\n+        return IOErrorFromErrno(errno, \"posix_fadvise failed\");\n+      }\n+#elif defined(F_RDADVISE)  // macOS, BSD?\n+      struct {\n+        off_t ra_offset;\n+        int ra_count;\n+      } radvisory{range.offset, static_cast<int>(range.length)};\n\nReview comment:\n       Not really important: it's just an advisory anyway. At worse the kernel will readahead too little.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-14T14:10:07.512+0000",
                    "updated": "2020-05-14T14:10:07.512+0000",
                    "started": "2020-05-14T14:10:07.512+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433149",
                    "issueId": "13304139"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304139/worklog/433150",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7172:\nURL: https://github.com/apache/arrow/pull/7172#discussion_r425167956\n\n\n\n##########\nFile path: cpp/src/arrow/io/file.cc\n##########\n@@ -636,6 +665,9 @@ Result<std::shared_ptr<Buffer>> MemoryMappedFile::ReadAt(int64_t position,\n \n   ARROW_ASSIGN_OR_RAISE(\n       nbytes, internal::ValidateReadRange(position, nbytes, memory_map_->size()));\n+  // Arrange to page data in\n+  RETURN_NOT_OK(::arrow::internal::MemoryAdviseWillNeed(\n\nReview comment:\n       The problem is, who will call `WillNeed` preemptively and at which level?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-14T14:11:43.140+0000",
                    "updated": "2020-05-14T14:11:43.140+0000",
                    "started": "2020-05-14T14:11:43.140+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433150",
                    "issueId": "13304139"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304139/worklog/433854",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #7172:\nURL: https://github.com/apache/arrow/pull/7172#discussion_r425995665\n\n\n\n##########\nFile path: cpp/src/arrow/io/file.cc\n##########\n@@ -636,6 +665,9 @@ Result<std::shared_ptr<Buffer>> MemoryMappedFile::ReadAt(int64_t position,\n \n   ARROW_ASSIGN_OR_RAISE(\n       nbytes, internal::ValidateReadRange(position, nbytes, memory_map_->size()));\n+  // Arrange to page data in\n+  RETURN_NOT_OK(::arrow::internal::MemoryAdviseWillNeed(\n\nReview comment:\n       We have to change Parquet's reader PreBuffer to do so, and CSV/JSON reader.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-15T19:06:45.062+0000",
                    "updated": "2020-05-15T19:06:45.062+0000",
                    "started": "2020-05-15T19:06:45.062+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433854",
                    "issueId": "13304139"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304139/worklog/433857",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7172:\nURL: https://github.com/apache/arrow/pull/7172#discussion_r425997334\n\n\n\n##########\nFile path: cpp/src/arrow/io/file.cc\n##########\n@@ -636,6 +665,9 @@ Result<std::shared_ptr<Buffer>> MemoryMappedFile::ReadAt(int64_t position,\n \n   ARROW_ASSIGN_OR_RAISE(\n       nbytes, internal::ValidateReadRange(position, nbytes, memory_map_->size()));\n+  // Arrange to page data in\n+  RETURN_NOT_OK(::arrow::internal::MemoryAdviseWillNeed(\n\nReview comment:\n       I think it doesn't make sense to do so separately. If you're using `ReadRangeCache` you're requesting those areas to be available.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-15T19:10:27.477+0000",
                    "updated": "2020-05-15T19:10:27.477+0000",
                    "started": "2020-05-15T19:10:27.477+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433857",
                    "issueId": "13304139"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304139/worklog/433858",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7172:\nURL: https://github.com/apache/arrow/pull/7172#discussion_r425997507\n\n\n\n##########\nFile path: cpp/src/arrow/util/io_util.cc\n##########\n@@ -1072,6 +1072,61 @@ Status MemoryMapRemap(void* addr, size_t old_size, size_t new_size, int fildes,\n #endif\n }\n \n+Status MemoryAdviseWillNeed(const std::vector<MemoryRegion>& regions) {\n+  const auto page_size = static_cast<size_t>(GetPageSize());\n+  DCHECK_GT(page_size, 0);\n+  const size_t page_mask = ~(page_size - 1);\n+  DCHECK_EQ(page_mask & page_size, page_size);\n+\n+  auto align_region = [=](const MemoryRegion& region) -> MemoryRegion {\n+    const auto addr = reinterpret_cast<uintptr_t>(region.addr);\n+    const auto aligned_addr = addr & page_mask;\n+    DCHECK_LT(addr - aligned_addr, page_size);\n+    return {reinterpret_cast<void*>(aligned_addr),\n+            region.size + static_cast<size_t>(addr - aligned_addr)};\n+  };\n+\n+#ifdef _WIN32\n+  // PrefetchVirtualMemory() is available on Windows 8 or later\n+  struct PrefetchEntry {  // Like WIN32_MEMORY_RANGE_ENTRY\n+    void* VirtualAddress;\n+    size_t NumberOfBytes;\n+\n+    PrefetchEntry(const MemoryRegion& region)  // NOLINT runtime/explicit\n+        : VirtualAddress(region.addr), NumberOfBytes(region.size) {}\n+  };\n+  using PrefetchVirtualMemoryFunc = BOOL (*)(HANDLE, ULONG_PTR, PrefetchEntry*, ULONG);\n+  static const auto prefetch_virtual_memory = reinterpret_cast<PrefetchVirtualMemoryFunc>(\n+      GetProcAddress(GetModuleHandleW(L\"kernel32.dll\"), \"PrefetchVirtualMemory\"));\n\nReview comment:\n       Right. In a couple of years we can probably drop Windows 7 compatibility...\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-15T19:10:52.679+0000",
                    "updated": "2020-05-15T19:10:52.679+0000",
                    "started": "2020-05-15T19:10:52.679+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433858",
                    "issueId": "13304139"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304139/worklog/434587",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #7172:\nURL: https://github.com/apache/arrow/pull/7172#discussion_r426861442\n\n\n\n##########\nFile path: cpp/src/arrow/io/caching.cc\n##########\n@@ -171,7 +171,8 @@ Status ReadRangeCache::Cache(std::vector<ReadRange> ranges) {\n   }\n \n   impl_->AddEntries(std::move(entries));\n-  return Status::OK();\n+  // Prefetch immediately, regardless of executor availability, if possible\n+  return impl_->file->WillNeed(ranges);\n\nReview comment:\n       Hey, sorry for the delay. I think what Francois proposes with the file readers calling only `WillNeed` makes sense. That way consumers can mostly remain the same. However for (parallel) caching to work under this API, this means some file implementations will become stateful, which may be confusing/error-prone, so I think there's some more consideration warranted for the Parquet path.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-18T19:58:07.705+0000",
                    "updated": "2020-05-18T19:58:07.705+0000",
                    "started": "2020-05-18T19:58:07.704+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434587",
                    "issueId": "13304139"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304139/worklog/435952",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques closed pull request #7172:\nURL: https://github.com/apache/arrow/pull/7172\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-21T12:03:30.225+0000",
                    "updated": "2020-05-21T12:03:30.225+0000",
                    "started": "2020-05-21T12:03:30.225+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "435952",
                    "issueId": "13304139"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 5400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6e227f7b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4efb06be[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4562eae8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@53bada0c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@24549737[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2887afe2[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7ae025b0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7f0fea5a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f6227a3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6a0f7f12[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@11391a46[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@11646f01[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 5400,
        "customfield_12312520": null,
        "customfield_12312521": "Thu May 21 12:03:21 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-05-21T12:03:21.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8763/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2020-05-11T15:08:44.000+0000",
        "updated": "2020-05-21T12:03:31.000+0000",
        "timeoriginalestimate": null,
        "description": "We need to inform RandomAccessFile that we will need a given range or number of ranges.\r\nAlso call that method from MemoryMappedFile::Read and friends.\r\n\r\nAlso perhaps write specialized ReadAsync implementations?",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 5400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Create RandomAccessFile::WillNeed-like API",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304139/comment/17105561",
                    "id": "17105561",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "posix_madvise(): [https://pubs.opengroup.org/onlinepubs/9699919799/functions/posix_madvise.html]\r\n\r\nposix_fadvise(): [https://pubs.opengroup.org/onlinepubs/9699919799/functions/posix_fadvise.html]\r\n\r\nPrefetchVirtualMemory() : [https://docs.microsoft.com/en-gb/windows/win32/api/memoryapi/nf-memoryapi-prefetchvirtualmemory]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-05-12T16:11:02.201+0000",
                    "updated": "2020-05-12T16:11:02.201+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304139/comment/17106134",
                    "id": "17106134",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "PrefetchVirtualMemory in use at Mozilla: https://hg.mozilla.org/integration/autoland/rev/a716ff1b62ab#l1.13",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-05-13T09:13:06.163+0000",
                    "updated": "2020-05-13T09:13:06.163+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304139/comment/17106256",
                    "id": "17106256",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~lidavidm]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-05-13T12:26:21.407+0000",
                    "updated": "2020-05-13T12:26:21.407+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304139/comment/17113121",
                    "id": "17113121",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 7172\n[https://github.com/apache/arrow/pull/7172]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-05-21T12:03:21.871+0000",
                    "updated": "2020-05-21T12:03:21.871+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0elo8:",
        "customfield_12314139": null
    }
}