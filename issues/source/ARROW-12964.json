{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13382008",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008",
    "key": "ARROW-12964",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12616722",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12616722",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "outwardIssue": {
                    "id": "13341287",
                    "key": "ARROW-10640",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13341287",
                    "fields": {
                        "summary": "[C++] An \"if_else\" kernel to combine two arrays based on a mask",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
            "name": "thisisnic",
            "key": "thisisnic",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "Nicola Crane",
            "active": true,
            "timeZone": "Africa/Casablanca"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
            "name": "icook",
            "key": "icook",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
            },
            "displayName": "Ian Cook",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
            "name": "icook",
            "key": "icook",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
            },
            "displayName": "Ian Cook",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 34200,
            "total": 34200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 34200,
            "total": 34200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12964/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 57,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623087",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic opened a new pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T14:23:34.389+0000",
                    "updated": "2021-07-15T14:23:34.389+0000",
                    "started": "2021-07-15T14:23:34.389+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623087",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623088",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#issuecomment-880737529\n\n\n   https://issues.apache.org/jira/browse/ARROW-12964\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T14:23:58.157+0000",
                    "updated": "2021-07-15T14:23:58.157+0000",
                    "started": "2021-07-15T14:23:58.156+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623088",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623175",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#issuecomment-880871906\n\n\n   Ok, I've pushed a few changes. The biggest one is that I've removed the `assert_that` call (since it wasn't quite what we wanted) and am not relying on the kernel dispatch to tell us if we have incompatible types.\r\n   \r\n   We might want to have our own type checking, but it's not totally trivial with what we have now. We have some of the `is.*` methods after https://issues.apache.org/jira/browse/ARROW-12781, though for this what we really need is something like an extension of `typeof()` for expressions that return the type and then a function that compares those types + the R types and their arrow mappings to ensure that those are compatible. I think this is out of the scope for this PR (and might actually be deferrable until https://issues.apache.org/jira/browse/ARROW-13186 is done or possibly forever).\r\n   \r\n   We don't support `ifelse`'s autocasting abilities \u2014 I'm hesitant to even try since it's not a particularly stable or good behavior, though I wish there was a way we could message or warn explaining that / why we did that. \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T17:12:27.206+0000",
                    "updated": "2021-07-15T17:12:27.206+0000",
                    "started": "2021-07-15T17:12:27.205+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623175",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623205",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#discussion_r670704661\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -559,3 +559,24 @@ nse_funcs$wday <- function(x, label = FALSE, abbr = TRUE, week_start = getOption\n   Expression$create(\"day_of_week\", x, options = list(one_based_numbering = TRUE, week_start = week_start))\n \n }\n+\n+nse_funcs$if_else <- function(condition, true, false, missing = NULL){\n+  # We ought to assert that the types of the true and false conditions will result\n+  # in the same types. We can't compare the objects themselves directly because\n+  # they might be expressions (that will result in a type) or R objects that will\n+  # need to be compared to see if they are compatible with arrow types.\n+  # ARROW-13186 might make this easier with a more robust way.\n+  # TODO: do this ^^^\n+\n+  if (inherits(true, \"character\") || inherits(false, \"character\")) {\n+    stop(\"`true` and `false` character values not yet supported in Arrow\")\n\nReview comment:\n       Why?\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -945,3 +945,63 @@ test_that(\"abs()\", {\n     df\n   )\n })\n+\n+test_that(\"if_else and ifelse\", {\n+  df <- tibble(x = c(-127, -10, -1, -0 , 0, 1, 10, 127, NA))\n\nReview comment:\n       Is there a reason we only test with type numeric? Do we trust that all types are faithfully tested in C++?\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -945,3 +945,63 @@ test_that(\"abs()\", {\n     df\n   )\n })\n+\n+test_that(\"if_else and ifelse\", {\n+  df <- tibble(x = c(-127, -10, -1, -0 , 0, 1, 10, 127, NA))\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = if_else(x > 0, 1, 0)\n+      ) %>% collect(),\n+    df\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = if_else(x > 0, x, 0)\n+      ) %>% collect(),\n+    df\n+  )\n+\n+  expect_error(\n+    Table$create(df) %>%\n+      mutate(\n+        y = if_else(x > 0, 1, FALSE)\n+      ) %>% collect(),\n+    'NotImplemented: Function if_else has no kernel matching input types'\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = if_else(x > 0, 1, NA_real_)\n+      ) %>% collect(),\n+    df\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = ifelse(x > 0, 1, 0)\n+      ) %>% collect(),\n+    df\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = ifelse(x > 0, x, 0)\n+      ) %>% collect(),\n+    df\n+  )\n+\n+  skip(\"TODO: could? should? we support the autocasting in ifelse\")\n\nReview comment:\n       Every compute function should autopromote the same way right? How does this fail?\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -945,3 +945,63 @@ test_that(\"abs()\", {\n     df\n   )\n })\n+\n+test_that(\"if_else and ifelse\", {\n+  df <- tibble(x = c(-127, -10, -1, -0 , 0, 1, 10, 127, NA))\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = if_else(x > 0, 1, 0)\n+      ) %>% collect(),\n+    df\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = if_else(x > 0, x, 0)\n+      ) %>% collect(),\n+    df\n+  )\n+\n+  expect_error(\n+    Table$create(df) %>%\n+      mutate(\n+        y = if_else(x > 0, 1, FALSE)\n+      ) %>% collect(),\n+    'NotImplemented: Function if_else has no kernel matching input types'\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = if_else(x > 0, 1, NA_real_)\n+      ) %>% collect(),\n+    df\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = ifelse(x > 0, 1, 0)\n+      ) %>% collect(),\n+    df\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = ifelse(x > 0, x, 0)\n+      ) %>% collect(),\n+    df\n+  )\n+\n+  skip(\"TODO: could? should? we support the autocasting in ifelse\")\n\nReview comment:\n       Oh I see above. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T18:20:17.688+0000",
                    "updated": "2021-07-15T18:20:17.688+0000",
                    "started": "2021-07-15T18:20:17.687+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623205",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623207",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#discussion_r670705908\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -945,3 +945,63 @@ test_that(\"abs()\", {\n     df\n   )\n })\n+\n+test_that(\"if_else and ifelse\", {\n+  df <- tibble(x = c(-127, -10, -1, -0 , 0, 1, 10, 127, NA))\n\nReview comment:\n       Good point. I'll look and see if they are, if not I'll add some.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T18:22:03.977+0000",
                    "updated": "2021-07-15T18:22:03.977+0000",
                    "started": "2021-07-15T18:22:03.977+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623207",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623209",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#discussion_r670706539\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -559,3 +559,24 @@ nse_funcs$wday <- function(x, label = FALSE, abbr = TRUE, week_start = getOption\n   Expression$create(\"day_of_week\", x, options = list(one_based_numbering = TRUE, week_start = week_start))\n \n }\n+\n+nse_funcs$if_else <- function(condition, true, false, missing = NULL){\n+  # We ought to assert that the types of the true and false conditions will result\n+  # in the same types. We can't compare the objects themselves directly because\n+  # they might be expressions (that will result in a type) or R objects that will\n+  # need to be compared to see if they are compatible with arrow types.\n+  # ARROW-13186 might make this easier with a more robust way.\n+  # TODO: do this ^^^\n+\n+  if (inherits(true, \"character\") || inherits(false, \"character\")) {\n+    stop(\"`true` and `false` character values not yet supported in Arrow\")\n\nReview comment:\n       Hmm this might be left over from above, I'll take this out (or add why it needs to stay) when I rebase + fix conflicts as well\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T18:22:50.355+0000",
                    "updated": "2021-07-15T18:22:50.355+0000",
                    "started": "2021-07-15T18:22:50.355+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623209",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623259",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#discussion_r670764086\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -559,3 +559,24 @@ nse_funcs$wday <- function(x, label = FALSE, abbr = TRUE, week_start = getOption\n   Expression$create(\"day_of_week\", x, options = list(one_based_numbering = TRUE, week_start = week_start))\n \n }\n+\n+nse_funcs$if_else <- function(condition, true, false, missing = NULL){\n+  # We ought to assert that the types of the true and false conditions will result\n+  # in the same types. We can't compare the objects themselves directly because\n+  # they might be expressions (that will result in a type) or R objects that will\n+  # need to be compared to see if they are compatible with arrow types.\n+  # ARROW-13186 might make this easier with a more robust way.\n+  # TODO: do this ^^^\n+\n+  if (inherits(true, \"character\") || inherits(false, \"character\")) {\n+    stop(\"`true` and `false` character values not yet supported in Arrow\")\n\nReview comment:\n       _it turns out_ only a limited set of types are supported right now ARROW-12955 has a PR to add other types. I've added some comments + tests around this and linked to that ticket as well. The types that are currently supported are:  Boolean, Null, Numeric, Temporal\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -945,3 +945,63 @@ test_that(\"abs()\", {\n     df\n   )\n })\n+\n+test_that(\"if_else and ifelse\", {\n+  df <- tibble(x = c(-127, -10, -1, -0 , 0, 1, 10, 127, NA))\n\nReview comment:\n       Here are (some of) the c++ tests, which look pretty comprehensive for the types that are currently supported: https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/scalar_if_else_test.cc#L49-L94\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T19:55:12.619+0000",
                    "updated": "2021-07-15T19:55:12.619+0000",
                    "started": "2021-07-15T19:55:12.619+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623259",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623267",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#discussion_r670772307\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -559,3 +559,24 @@ nse_funcs$wday <- function(x, label = FALSE, abbr = TRUE, week_start = getOption\n   Expression$create(\"day_of_week\", x, options = list(one_based_numbering = TRUE, week_start = week_start))\n \n }\n+\n+nse_funcs$if_else <- function(condition, true, false, missing = NULL){\n+  # We ought to assert that the types of the true and false conditions will result\n+  # in the same types. We can't compare the objects themselves directly because\n+  # they might be expressions (that will result in a type) or R objects that will\n+  # need to be compared to see if they are compatible with arrow types.\n+  # ARROW-13186 might make this easier with a more robust way.\n+  # TODO: do this ^^^\n+\n+  if (inherits(true, \"character\") || inherits(false, \"character\")) {\n+    stop(\"`true` and `false` character values not yet supported in Arrow\")\n\nReview comment:\n       I've added a bit more testing for this. It's a bit hacky using `nse_funcs$is.character(...)`. I haven't dug too deeply into if we should allow `is.character(var)` like was rejected here: https://issues.apache.org/jira/browse/ARROW-12781?focusedCommentId=17344170&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17344170 but even if we should, that's probably a separate ticket.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T20:09:14.414+0000",
                    "updated": "2021-07-15T20:09:14.414+0000",
                    "started": "2021-07-15T20:09:14.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623267",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623594",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#discussion_r671258951\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -634,20 +634,53 @@ nse_funcs$wday <- function(x, label = FALSE, abbr = TRUE, week_start = getOption\n }\n \n nse_funcs$log <- function(x, base = exp(1)) {\n-  \n+\n   if (base == exp(1)) {\n     return(Expression$create(\"ln_checked\", x))\n   }\n-  \n+\n   if (base == 2) {\n     return(Expression$create(\"log2_checked\", x))\n   }\n-  \n+\n   if (base == 10) {\n     return(Expression$create(\"log10_checked\", x))\n-  } \n+  }\n   # ARROW-13345\n   stop(\"`base` values other than exp(1), 2 and 10 not supported in Arrow\", call. = FALSE)\n }\n \n nse_funcs$logb <- nse_funcs$log\n+\n+nse_funcs$if_else <- function(condition, true, false, missing = NULL){\n+  # We ought to assert that the types of the true and false conditions will result\n+  # in the same types. We can't compare the objects themselves directly because\n+  # they might be expressions (that will result in a type) or R objects that will\n+  # need to be compared to see if they are compatible with arrow types.\n+  # ARROW-13186 might make this easier with a more robust way.\n+  # TODO: do this ^^^\n+\n+  # if_else only supports boolean, numeric, or temporal types right now\n+  # TODO: remove when ARROW-12955 merges\n+  # If true/false are R types, we can use `is.*` directly\n\nReview comment:\n       @thisisnic may I push some commits to this PR that make the `is.*` functions compatible with R scalars so that this can be simplified? I've been meaning to do that in ARROW-13118 anyhow. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T13:34:55.311+0000",
                    "updated": "2021-07-16T13:34:55.311+0000",
                    "started": "2021-07-16T13:34:55.311+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623594",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623603",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#discussion_r671270359\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -634,20 +634,53 @@ nse_funcs$wday <- function(x, label = FALSE, abbr = TRUE, week_start = getOption\n }\n \n nse_funcs$log <- function(x, base = exp(1)) {\n-  \n+\n   if (base == exp(1)) {\n     return(Expression$create(\"ln_checked\", x))\n   }\n-  \n+\n   if (base == 2) {\n     return(Expression$create(\"log2_checked\", x))\n   }\n-  \n+\n   if (base == 10) {\n     return(Expression$create(\"log10_checked\", x))\n-  } \n+  }\n   # ARROW-13345\n   stop(\"`base` values other than exp(1), 2 and 10 not supported in Arrow\", call. = FALSE)\n }\n \n nse_funcs$logb <- nse_funcs$log\n+\n+nse_funcs$if_else <- function(condition, true, false, missing = NULL){\n+  # We ought to assert that the types of the true and false conditions will result\n+  # in the same types. We can't compare the objects themselves directly because\n+  # they might be expressions (that will result in a type) or R objects that will\n+  # need to be compared to see if they are compatible with arrow types.\n+  # ARROW-13186 might make this easier with a more robust way.\n+  # TODO: do this ^^^\n+\n+  # if_else only supports boolean, numeric, or temporal types right now\n+  # TODO: remove when ARROW-12955 merges\n+  # If true/false are R types, we can use `is.*` directly\n\nReview comment:\n       feel free, nic is off through monday so I took this over \u2014 simplifying it would be great though! \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T13:50:39.962+0000",
                    "updated": "2021-07-16T13:50:39.962+0000",
                    "started": "2021-07-16T13:50:39.962+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623603",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623642",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#discussion_r671309005\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -634,20 +634,53 @@ nse_funcs$wday <- function(x, label = FALSE, abbr = TRUE, week_start = getOption\n }\n \n nse_funcs$log <- function(x, base = exp(1)) {\n-  \n+\n   if (base == exp(1)) {\n     return(Expression$create(\"ln_checked\", x))\n   }\n-  \n+\n   if (base == 2) {\n     return(Expression$create(\"log2_checked\", x))\n   }\n-  \n+\n   if (base == 10) {\n     return(Expression$create(\"log10_checked\", x))\n-  } \n+  }\n   # ARROW-13345\n   stop(\"`base` values other than exp(1), 2 and 10 not supported in Arrow\", call. = FALSE)\n }\n \n nse_funcs$logb <- nse_funcs$log\n+\n+nse_funcs$if_else <- function(condition, true, false, missing = NULL){\n+  # We ought to assert that the types of the true and false conditions will result\n+  # in the same types. We can't compare the objects themselves directly because\n+  # they might be expressions (that will result in a type) or R objects that will\n+  # need to be compared to see if they are compatible with arrow types.\n+  # ARROW-13186 might make this easier with a more robust way.\n+  # TODO: do this ^^^\n+\n+  # if_else only supports boolean, numeric, or temporal types right now\n+  # TODO: remove when ARROW-12955 merges\n+  # If true/false are R types, we can use `is.*` directly\n+  invalid_r_types <- is.character(true) || is.character(false) || is.list(true) ||\n+    is.list(false) || is.factor(true) || is.factor(false)\n+  # However, if they are expressions, we need to use the functions from nse_funcs\n+  invalid_expression_types_true <- inherits(true, \"Expression\") && (\n+    nse_funcs$is.character(true) || nse_funcs$is.list(true) || nse_funcs$is.factor(true)\n+  )\n+  invalid_expression_types_false <- inherits(false, \"Expression\") && (\n+    nse_funcs$is.character(false) || nse_funcs$is.list(false) || nse_funcs$is.factor(false)\n+  )\n+  if (invalid_r_types | invalid_expression_types_true | invalid_expression_types_false) {\n+    stop(\"`true` and `false` character values not yet supported in Arrow\", call. = FALSE)\n+  }\n\nReview comment:\n       Why do this at all? Why not let the C++ library tell us (by whether it succeeds or not) what it supports? This seems brittle and I don't want to have to maintain duplicated validation code if we don't have to.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T14:41:34.509+0000",
                    "updated": "2021-07-16T14:41:34.509+0000",
                    "started": "2021-07-16T14:41:34.508+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623642",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623643",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#discussion_r671309529\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -1013,44 +1013,139 @@ test_that(\"log functions\", {\n   )\n \n })\n-  \n+\n test_that(\"trig functions\", {\n-  \n+\n   df <- tibble(x = c(seq(from = 0, to = 1, by = 0.1), NA))\n-  \n+\n   expect_dplyr_equal(\n     input %>%\n       mutate(y = sin(x)) %>%\n       collect(),\n     df\n   )\n-  \n+\n   expect_dplyr_equal(\n     input %>%\n       mutate(y = cos(x)) %>%\n       collect(),\n     df\n   )\n-  \n+\n   expect_dplyr_equal(\n     input %>%\n       mutate(y = tan(x)) %>%\n       collect(),\n     df\n   )\n-  \n+\n   expect_dplyr_equal(\n     input %>%\n       mutate(y = asin(x)) %>%\n       collect(),\n     df\n   )\n-  \n+\n   expect_dplyr_equal(\n     input %>%\n       mutate(y = acos(x)) %>%\n       collect(),\n     df\n   )\n \n-})\n\\ No newline at end of file\n+})\n+\n+test_that(\"if_else and ifelse\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = if_else(int > 5, 1, 0)\n+      ) %>% collect(),\n+    example_data\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = if_else(int > 5, int, 0L)\n+      ) %>% collect(),\n+    example_data\n+  )\n+\n+  expect_error(\n+    Table$create(example_data) %>%\n+      mutate(\n+        y = if_else(int > 5, 1, FALSE)\n+      ) %>% collect(),\n+    'NotImplemented: Function if_else has no kernel matching input types'\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = if_else(int > 5, 1, NA_real_)\n+      ) %>% collect(),\n+    example_data\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = ifelse(int > 5, 1, 0)\n+      ) %>% collect(),\n+    example_data\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = if_else(dbl > 5, TRUE, FALSE)\n+      ) %>% collect(),\n+    example_data\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = if_else(chr %in% letters[1:3], 1L, 3L)\n+      ) %>% collect(),\n+    example_data\n+  )\n+\n+  # TODO: this should not warn / pull into R, once ARROW-12955 merges\n\nReview comment:\n       This issue has merged, can you rebase and clean this up?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T14:42:14.511+0000",
                    "updated": "2021-07-16T14:42:14.511+0000",
                    "started": "2021-07-16T14:42:14.511+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623643",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623645",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#discussion_r671309968\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -634,20 +634,53 @@ nse_funcs$wday <- function(x, label = FALSE, abbr = TRUE, week_start = getOption\n }\n \n nse_funcs$log <- function(x, base = exp(1)) {\n-  \n+\n   if (base == exp(1)) {\n     return(Expression$create(\"ln_checked\", x))\n   }\n-  \n+\n   if (base == 2) {\n     return(Expression$create(\"log2_checked\", x))\n   }\n-  \n+\n   if (base == 10) {\n     return(Expression$create(\"log10_checked\", x))\n-  } \n+  }\n   # ARROW-13345\n   stop(\"`base` values other than exp(1), 2 and 10 not supported in Arrow\", call. = FALSE)\n }\n \n nse_funcs$logb <- nse_funcs$log\n+\n+nse_funcs$if_else <- function(condition, true, false, missing = NULL){\n+  # We ought to assert that the types of the true and false conditions will result\n+  # in the same types. We can't compare the objects themselves directly because\n+  # they might be expressions (that will result in a type) or R objects that will\n+  # need to be compared to see if they are compatible with arrow types.\n+  # ARROW-13186 might make this easier with a more robust way.\n+  # TODO: do this ^^^\n+\n+  # if_else only supports boolean, numeric, or temporal types right now\n+  # TODO: remove when ARROW-12955 merges\n+  # If true/false are R types, we can use `is.*` directly\n\nReview comment:\n       @ianmcook I question whether this is. checking is desirable at all here\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T14:42:51.112+0000",
                    "updated": "2021-07-16T14:42:51.112+0000",
                    "started": "2021-07-16T14:42:51.111+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623645",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623648",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#discussion_r671310863\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -1013,44 +1013,139 @@ test_that(\"log functions\", {\n   )\n \n })\n-  \n+\n test_that(\"trig functions\", {\n-  \n+\n   df <- tibble(x = c(seq(from = 0, to = 1, by = 0.1), NA))\n-  \n+\n   expect_dplyr_equal(\n     input %>%\n       mutate(y = sin(x)) %>%\n       collect(),\n     df\n   )\n-  \n+\n   expect_dplyr_equal(\n     input %>%\n       mutate(y = cos(x)) %>%\n       collect(),\n     df\n   )\n-  \n+\n   expect_dplyr_equal(\n     input %>%\n       mutate(y = tan(x)) %>%\n       collect(),\n     df\n   )\n-  \n+\n   expect_dplyr_equal(\n     input %>%\n       mutate(y = asin(x)) %>%\n       collect(),\n     df\n   )\n-  \n+\n   expect_dplyr_equal(\n     input %>%\n       mutate(y = acos(x)) %>%\n       collect(),\n     df\n   )\n \n-})\n\\ No newline at end of file\n+})\n+\n+test_that(\"if_else and ifelse\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = if_else(int > 5, 1, 0)\n+      ) %>% collect(),\n+    example_data\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = if_else(int > 5, int, 0L)\n+      ) %>% collect(),\n+    example_data\n+  )\n+\n+  expect_error(\n+    Table$create(example_data) %>%\n+      mutate(\n+        y = if_else(int > 5, 1, FALSE)\n+      ) %>% collect(),\n+    'NotImplemented: Function if_else has no kernel matching input types'\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = if_else(int > 5, 1, NA_real_)\n+      ) %>% collect(),\n+    example_data\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = ifelse(int > 5, 1, 0)\n+      ) %>% collect(),\n+    example_data\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = if_else(dbl > 5, TRUE, FALSE)\n+      ) %>% collect(),\n+    example_data\n+  )\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        y = if_else(chr %in% letters[1:3], 1L, 3L)\n+      ) %>% collect(),\n+    example_data\n+  )\n+\n+  # TODO: this should not warn / pull into R, once ARROW-12955 merges\n\nReview comment:\n       I'm doing that right now\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T14:43:51.463+0000",
                    "updated": "2021-07-16T14:43:51.463+0000",
                    "started": "2021-07-16T14:43:51.463+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623648",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623651",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#discussion_r671312280\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -634,20 +634,53 @@ nse_funcs$wday <- function(x, label = FALSE, abbr = TRUE, week_start = getOption\n }\n \n nse_funcs$log <- function(x, base = exp(1)) {\n-  \n+\n   if (base == exp(1)) {\n     return(Expression$create(\"ln_checked\", x))\n   }\n-  \n+\n   if (base == 2) {\n     return(Expression$create(\"log2_checked\", x))\n   }\n-  \n+\n   if (base == 10) {\n     return(Expression$create(\"log10_checked\", x))\n-  } \n+  }\n   # ARROW-13345\n   stop(\"`base` values other than exp(1), 2 and 10 not supported in Arrow\", call. = FALSE)\n }\n \n nse_funcs$logb <- nse_funcs$log\n+\n+nse_funcs$if_else <- function(condition, true, false, missing = NULL){\n+  # We ought to assert that the types of the true and false conditions will result\n+  # in the same types. We can't compare the objects themselves directly because\n+  # they might be expressions (that will result in a type) or R objects that will\n+  # need to be compared to see if they are compatible with arrow types.\n+  # ARROW-13186 might make this easier with a more robust way.\n+  # TODO: do this ^^^\n+\n+  # if_else only supports boolean, numeric, or temporal types right now\n+  # TODO: remove when ARROW-12955 merges\n+  # If true/false are R types, we can use `is.*` directly\n+  invalid_r_types <- is.character(true) || is.character(false) || is.list(true) ||\n+    is.list(false) || is.factor(true) || is.factor(false)\n+  # However, if they are expressions, we need to use the functions from nse_funcs\n+  invalid_expression_types_true <- inherits(true, \"Expression\") && (\n+    nse_funcs$is.character(true) || nse_funcs$is.list(true) || nse_funcs$is.factor(true)\n+  )\n+  invalid_expression_types_false <- inherits(false, \"Expression\") && (\n+    nse_funcs$is.character(false) || nse_funcs$is.list(false) || nse_funcs$is.factor(false)\n+  )\n+  if (invalid_r_types | invalid_expression_types_true | invalid_expression_types_false) {\n+    stop(\"`true` and `false` character values not yet supported in Arrow\", call. = FALSE)\n+  }\n\nReview comment:\n       Hopefully all of this will go away once I rebase (see below) though, one benefit to having this validation + error proactively than wait for the kernel dispatching to error is that if we do it here it will abandon ship and pull into R and work that way. If we let the kernel error we only get the error (and additionally no indication that doing something like `collect()` before this step would help with the situation)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T14:45:46.500+0000",
                    "updated": "2021-07-16T14:45:46.500+0000",
                    "started": "2021-07-16T14:45:46.500+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623651",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623666",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#discussion_r671334301\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -634,20 +634,53 @@ nse_funcs$wday <- function(x, label = FALSE, abbr = TRUE, week_start = getOption\n }\n \n nse_funcs$log <- function(x, base = exp(1)) {\n-  \n+\n   if (base == exp(1)) {\n     return(Expression$create(\"ln_checked\", x))\n   }\n-  \n+\n   if (base == 2) {\n     return(Expression$create(\"log2_checked\", x))\n   }\n-  \n+\n   if (base == 10) {\n     return(Expression$create(\"log10_checked\", x))\n-  } \n+  }\n   # ARROW-13345\n   stop(\"`base` values other than exp(1), 2 and 10 not supported in Arrow\", call. = FALSE)\n }\n \n nse_funcs$logb <- nse_funcs$log\n+\n+nse_funcs$if_else <- function(condition, true, false, missing = NULL){\n+  # We ought to assert that the types of the true and false conditions will result\n+  # in the same types. We can't compare the objects themselves directly because\n+  # they might be expressions (that will result in a type) or R objects that will\n+  # need to be compared to see if they are compatible with arrow types.\n+  # ARROW-13186 might make this easier with a more robust way.\n+  # TODO: do this ^^^\n+\n+  # if_else only supports boolean, numeric, or temporal types right now\n+  # TODO: remove when ARROW-12955 merges\n+  # If true/false are R types, we can use `is.*` directly\n+  invalid_r_types <- is.character(true) || is.character(false) || is.list(true) ||\n+    is.list(false) || is.factor(true) || is.factor(false)\n+  # However, if they are expressions, we need to use the functions from nse_funcs\n+  invalid_expression_types_true <- inherits(true, \"Expression\") && (\n+    nse_funcs$is.character(true) || nse_funcs$is.list(true) || nse_funcs$is.factor(true)\n+  )\n+  invalid_expression_types_false <- inherits(false, \"Expression\") && (\n+    nse_funcs$is.character(false) || nse_funcs$is.list(false) || nse_funcs$is.factor(false)\n+  )\n+  if (invalid_r_types | invalid_expression_types_true | invalid_expression_types_false) {\n+    stop(\"`true` and `false` character values not yet supported in Arrow\", call. = FALSE)\n+  }\n\nReview comment:\n       _turns out_ we're not quite there yet \u2014 the last (common) type that's not yet implemented still is factors/dictionaries. Currently they are auto decoded into strings \u2014 which is better than nothing, but not quite right. \r\n   \r\n   I can use the (fragile) `is.factor()` approach here to warn that though we are getting factors, we are returning strings (for now) or we could silently do the conversation with no checking. Or, I guess we could also disable factors entirely, but that seems extreme. I vote that we warn so that there's no confusion about the change in type, even if it is a bit fragile.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T15:15:35.237+0000",
                    "updated": "2021-07-16T15:15:35.237+0000",
                    "started": "2021-07-16T15:15:35.236+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623666",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623678",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#discussion_r671347175\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -634,20 +634,45 @@ nse_funcs$wday <- function(x, label = FALSE, abbr = TRUE, week_start = getOption\n }\n \n nse_funcs$log <- function(x, base = exp(1)) {\n-  \n+\n   if (base == exp(1)) {\n     return(Expression$create(\"ln_checked\", x))\n   }\n-  \n+\n   if (base == 2) {\n     return(Expression$create(\"log2_checked\", x))\n   }\n-  \n+\n   if (base == 10) {\n     return(Expression$create(\"log10_checked\", x))\n-  } \n+  }\n   # ARROW-13345\n   stop(\"`base` values other than exp(1), 2 and 10 not supported in Arrow\", call. = FALSE)\n }\n \n nse_funcs$logb <- nse_funcs$log\n+\n+nse_funcs$if_else <- function(condition, true, false, missing = NULL){\n+  if (!is.null(missing)) {\n+    arrow_not_supported(\"missing argument\")\n+  }\n+\n+  # TODO: if_else doesn't yet support factors/dictionaries this can be removed when\n+  # ARROW-13358 merges\n+  warn_r_types <- is.factor(true) || is.factor(false)\n+  # However, if they are expressions, we need to use the functions from nse_funcs\n+  warn_expression_types_true <- inherits(true, \"Expression\") &&  nse_funcs$is.factor(true)\n+  warn_expression_types_false <- inherits(false, \"Expression\") && nse_funcs$is.factor(false)\n+\n+  if (warn_r_types | warn_expression_types_true | warn_expression_types_false) {\n+    warning(\"Factors are currently converted to chracters in if_else and ifelse\", call. = FALSE)\n+  }\n\nReview comment:\n       I implemented the warning, but we can take this out if we think it would be better to not.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T15:34:12.588+0000",
                    "updated": "2021-07-16T15:34:12.588+0000",
                    "started": "2021-07-16T15:34:12.588+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623678",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623679",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#discussion_r671348517\n\n\n\n##########\nFile path: r/tests/testthat/helper-expectation.R\n##########\n@@ -91,7 +91,7 @@ expect_dplyr_equal <- function(expr,\n \n   if (isTRUE(warning)) {\n     # Special-case the simple warning:\n-    warning <- \"not supported in Arrow; pulling data into R\"\n+    warning <- \"not supported (in|by) Arrow; pulling data into R\"\n\nReview comment:\n       Oops, we might want to harmonise `arrow_not_supported` with it's \"not supported by Arrow\" with the \"not supported in Arrow\" phrasing used elsewhere (though I think we should do that in a separate ticket), but this regex works for now.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T15:36:07.102+0000",
                    "updated": "2021-07-16T15:36:07.102+0000",
                    "started": "2021-07-16T15:36:07.102+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623679",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623697",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#discussion_r671358648\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -634,20 +634,45 @@ nse_funcs$wday <- function(x, label = FALSE, abbr = TRUE, week_start = getOption\n }\n \n nse_funcs$log <- function(x, base = exp(1)) {\n-  \n+\n   if (base == exp(1)) {\n     return(Expression$create(\"ln_checked\", x))\n   }\n-  \n+\n   if (base == 2) {\n     return(Expression$create(\"log2_checked\", x))\n   }\n-  \n+\n   if (base == 10) {\n     return(Expression$create(\"log10_checked\", x))\n-  } \n+  }\n   # ARROW-13345\n   stop(\"`base` values other than exp(1), 2 and 10 not supported in Arrow\", call. = FALSE)\n }\n \n nse_funcs$logb <- nse_funcs$log\n+\n+nse_funcs$if_else <- function(condition, true, false, missing = NULL){\n+  if (!is.null(missing)) {\n+    arrow_not_supported(\"missing argument\")\n\nReview comment:\n       What is this argument? Do we plan to support it in the future (i.e. is there a JIRA, or should there be)?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T15:51:02.002+0000",
                    "updated": "2021-07-16T15:51:02.002+0000",
                    "started": "2021-07-16T15:51:02.002+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623697",
                    "issueId": "13382008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/worklog/623698",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10724:\nURL: https://github.com/apache/arrow/pull/10724#discussion_r671359140\n\n\n\n##########\nFile path: r/tests/testthat/helper-expectation.R\n##########\n@@ -91,7 +91,7 @@ expect_dplyr_equal <- function(expr,\n \n   if (isTRUE(warning)) {\n     # Special-case the simple warning:\n-    warning <- \"not supported in Arrow; pulling data into R\"\n+    warning <- \"not supported (in|by) Arrow; pulling data into R\"\n\nReview comment:\n       Please add a TODO note (and optionally make a JIRA)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T15:51:35.190+0000",
                    "updated": "2021-07-16T15:51:35.190+0000",
                    "started": "2021-07-16T15:51:35.190+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623698",
                    "issueId": "13382008"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 34200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2f64c7f1[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7856e9e1[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@280248a2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@67d4a5a2[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67365799[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@44842231[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e79255b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3c426683[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@691d640d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@c6d56b5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b89e99e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1450e612[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 34200,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Jul 17 18:13:42 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-07-17T18:13:42.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12964/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-06-03T22:02:33.000+0000",
        "updated": "2021-08-05T11:42:44.000+0000",
        "timeoriginalestimate": null,
        "description": "ARROW-10640 adds an {{if_else}} kernel to the C++ library. Add R bindings so users can call {{ifelse()}} or {{if_else()}} (the stricter dplyr variant) in dplyr verbs. I believe the C++ kernel requires the second and third arguments to have the same types, just like {{dplyr::if_else()}}.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "9.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 34200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Add bindings for ifelse() and if_else()",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382008/comment/17382639",
                    "id": "17382639",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 10724\n[https://github.com/apache/arrow/pull/10724]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-07-17T18:13:42.620+0000",
                    "updated": "2021-07-17T18:13:42.620+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0rn2w:",
        "customfield_12314139": null
    }
}