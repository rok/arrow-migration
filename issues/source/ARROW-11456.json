{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13355997",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355997",
    "key": "ARROW-11456",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apacman",
            "name": "apacman",
            "key": "apacman",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Pac A. He",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apacman",
            "name": "apacman",
            "key": "apacman",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Pac A. He",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11456/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7727cd6f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@61a1d1c1[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56a1ef9f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@39610353[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f9a496a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@402cc225[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@192810a8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2862f345[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@59e3e3a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2305e946[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7af100de[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@45363c1e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Feb 12 13:43:15 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11456/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2021-02-01T16:48:19.000+0000",
        "updated": "2021-02-12T13:44:09.000+0000",
        "timeoriginalestimate": null,
        "description": "When reading or writing a large parquet file, I have this error:\r\n\r\n{noformat}\r\n    df: Final = pd.read_parquet(input_file_uri, engine=\"pyarrow\")\r\n  File \"/opt/conda/envs/condaenv/lib/python3.8/site-packages/pandas/io/parquet.py\", line 459, in read_parquet\r\n    return impl.read(\r\n  File \"/opt/conda/envs/condaenv/lib/python3.8/site-packages/pandas/io/parquet.py\", line 221, in read\r\n    return self.api.parquet.read_table(\r\n  File \"/opt/conda/envs/condaenv/lib/python3.8/site-packages/pyarrow/parquet.py\", line 1638, in read_table\r\n    return dataset.read(columns=columns, use_threads=use_threads,\r\n  File \"/opt/conda/envs/condaenv/lib/python3.8/site-packages/pyarrow/parquet.py\", line 327, in read\r\n    return self.reader.read_all(column_indices=column_indices,\r\n  File \"pyarrow/_parquet.pyx\", line 1126, in pyarrow._parquet.ParquetReader.read_all\r\n  File \"pyarrow/error.pxi\", line 99, in pyarrow.lib.check_status\r\nOSError: Capacity error: BinaryBuilder cannot reserve space for more than 2147483646 child elements, got 2147483648\r\n{noformat}\r\nIsn't pyarrow supposed to support large parquets? It let me write this parquet file, but now it doesn't let me read it back. I don't understand why arrow uses [31-bit computing.|https://arrow.apache.org/docs/format/Columnar.html#array-lengths] It's not even 32-bit as sizes are non-negative.\r\n\r\nThis problem started after I added a string column with 2.5 billion unique rows. Each value was effectively a unique base64 encoded length 24 string. Below is code to reproduce the issue:\r\n\r\n{code:python}\r\nfrom base64 import urlsafe_b64encode\r\n\r\nimport numpy as np\r\nimport pandas as pd\r\nimport pyarrow as pa\r\nimport smart_open\r\n\r\ndef num_to_b64(num: int) -> str:\r\n    return urlsafe_b64encode(num.to_bytes(16, \"little\")).decode()\r\n\r\ndf = pd.Series(np.arange(2_500_000_000)).apply(num_to_b64).astype(\"string\").to_frame(\"s\")\r\n\r\nwith smart_open.open(\"s3://mybucket/mydata.parquet\", \"wb\") as output_file:\r\n    df.to_parquet(output_file, engine=\"pyarrow\", compression=\"gzip\", index=False)\r\n{code}\r\n\r\nThe dataframe is created correctly. When attempting to write it as a parquet file, the last line of the above code leads to the error:\r\n{noformat}\r\npyarrow.lib.ArrowCapacityError: BinaryBuilder cannot reserve space for more than 2147483646 child elements, got 2500000000\r\n{noformat}",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Parquet reader cannot read large strings",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": "pyarrow 3.0.0 / 2.0.0\r\npandas 1.1.5 / 1.2.1\r\nsmart_open 4.1.2\r\npython 3.8.6",
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355997/comment/17276462",
                    "id": "17276462",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "cc [~jorisvandenbossche]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-02-01T16:53:45.502+0000",
                    "updated": "2021-02-01T16:53:45.502+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355997/comment/17276480",
                    "id": "17276480",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~apacman] would you be able to provide a reproducible example? (eg some code that writes the parquet file)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-02-01T17:08:03.248+0000",
                    "updated": "2021-02-01T17:08:03.248+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355997/comment/17276501",
                    "id": "17276501",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apacman",
                        "name": "apacman",
                        "key": "apacman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Pac A. He",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~jorisvandenbossche] This is difficult in this case because the parquet is so large. What I can say is that this issue started *after I added a string column with 1.5 billion unique rows. Each value was effectively a unique base64 encoded length 22 string*. I hope this helps. If you still need code, I can write a function to generate it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apacman",
                        "name": "apacman",
                        "key": "apacman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Pac A. He",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-02-01T17:19:51.871+0000",
                    "updated": "2021-02-01T17:21:40.557+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355997/comment/17276517",
                    "id": "17276517",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Was the Parquet file generated with Arrow?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-02-01T17:34:09.723+0000",
                    "updated": "2021-02-01T17:34:09.723+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355997/comment/17276536",
                    "id": "17276536",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apacman",
                        "name": "apacman",
                        "key": "apacman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Pac A. He",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~apitrou] Yes, absolutely. I had used pandas 1.2.1 with pyarrow 2.0.0 to write it as:\r\n\r\n{{df.to_parquet(output_file, engine=\"pyarrow\", compression=\"gzip\", index=False)}}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apacman",
                        "name": "apacman",
                        "key": "apacman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Pac A. He",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-02-01T17:50:03.375+0000",
                    "updated": "2021-02-01T17:50:03.375+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355997/comment/17277234",
                    "id": "17277234",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apacman",
                        "name": "apacman",
                        "key": "apacman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Pac A. He",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "For what it's worth, {{fastparquet}} v0.5.0 had no trouble at all reading such files. That's a workaround for now, if only for Python, until this issue is resolved.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apacman",
                        "name": "apacman",
                        "key": "apacman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Pac A. He",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-02-02T16:10:12.530+0000",
                    "updated": "2021-02-02T16:12:38.777+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355997/comment/17277239",
                    "id": "17277239",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "bq.  If you still need code, I can write a function to generate it.\r\n\r\nThat would help, yes.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-02-02T16:14:16.071+0000",
                    "updated": "2021-02-02T16:14:16.071+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355997/comment/17278976",
                    "id": "17278976",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apacman",
                        "name": "apacman",
                        "key": "apacman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Pac A. He",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Unfortunately I have not been able to produce a reproducible result in a simple example despite multiple attempts and experiments. I read a dataframe with 10 string columns and 2 billion rows without issue. The issue reproduces only over my actual real-world data. Nevertheless, obviously the exception traceback and the error message could still be indicative of what's causing it. Having  31-bit limit makes no sense to me.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apacman",
                        "name": "apacman",
                        "key": "apacman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Pac A. He",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-02-04T17:07:41.552+0000",
                    "updated": "2021-02-04T17:09:14.624+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355997/comment/17279136",
                    "id": "17279136",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "The 31 bit limit you are referencing is not the 31 bit limit that is at play here and not really relevant.\u00a0 There is another 31 bit limit that has to do with how arrow stores strings.\u00a0 Parquet does not need to support random access of strings.\u00a0 The way it stores byte arrays & byte array lengths does not support random access.\u00a0 You could not fetch the ith string of a parquet encoded utf8 byte array.\r\n\r\nArrow does need to support this use case.\u00a0 It stores strings using two arrays.\u00a0 The first is an array of offsets.\u00a0 The second is an array of bytes.\u00a0 To fetch the ith string Arrow will look up offsets[i] and offsets[i+1] to determine the range that needs to be fetched from the array of bytes.\r\n\r\nThere are two string types in Arrow, \"string\" and \"large_string\".\u00a0 The \"string\" data type uses 4 byte signed integer offsets while the \"large_string\" data type uses 8 byte signed integer offsets.\u00a0 So it is not possible to create a \"string\" array with data containing more than 2 billion bytes.\r\n\r\nNow, this is not normally a problem.\u00a0 Arrow can fall back to a chunked array (which is why the 31 bit limit you reference isn't always such an issue).\r\n{code:java}\r\n>>> import pyarrow as pa\r\n>>> x = '0' * 1024\r\n>>> y = [x] * (1024 * 1024 * 2)\r\n>>> len(y)\r\n2097152 // # of strings\r\n>>> len(y) * 1024\r\n2147483648 // # of bytes\r\n>>> a = pa.array(y)\r\n>>> len(a.chunks)\r\n2\r\n>>> len(a.chunks[0])\r\n2097151\r\n>>> len(a.chunks[1])\r\n1\r\n{code}\r\nHowever, it does seem that, if there are 2 billion strings (as opposed to just 2 billion bytes), the chunked array fallback is not applying.\r\n{code:java}\r\n>>> x = '0' * 8\r\n>>> y = [x] * (1024 * 1024 * 1024 * 2)\r\n>>> len(y)\r\n2147483648\r\n>>> len(y) * 8\r\n17179869184\r\n>>> a = pa.array(y)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"pyarrow\\array.pxi\", line 296, in pyarrow.lib.array\r\n  File \"pyarrow\\array.pxi\", line 39, in pyarrow.lib._sequence_to_array\r\n  File \"pyarrow\\error.pxi\", line 122, in pyarrow.lib.pyarrow_internal_check_status\r\n  File \"pyarrow\\error.pxi\", line 109, in pyarrow.lib.check_status\r\npyarrow.lib.ArrowCapacityError: BinaryBuilder cannot reserve space for more than 2147483646 child elements, got 2147483648\r\n{code}\r\nThis \"should\" be representable using a chunked array with two chunks.\u00a0 It is possible this is the source of your issue.\u00a0 Or maybe when reading from parquet the \"fallback to chunked array\" logic simply doesn't apply.\u00a0 I don't know the parquet code well enough.\u00a0 That is one of the reasons it would be helpful to have a reproducible test.\r\n\r\nIt also might be easier to just write your parquet out to multiple files or multiple row groups.\u00a0 Both of these approaches should not only avoid this issue but also reduce the memory pressure when you are converting to pandas.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-02-04T20:25:55.890+0000",
                    "updated": "2021-02-04T20:26:17.049+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355997/comment/17279918",
                    "id": "17279918",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apacman",
                        "name": "apacman",
                        "key": "apacman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Pac A. He",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I see. I have now added code to reproduce the issue. Basically, when I attempt to write a parquet file from a pandas dataframe having 2.5 billion unique string rows in a column, I have the error. Due to the large size of the dataframe, it will be memory and time intensive to test.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apacman",
                        "name": "apacman",
                        "key": "apacman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Pac A. He",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-02-05T18:59:10.941+0000",
                    "updated": "2021-02-05T19:01:26.172+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355997/comment/17281854",
                    "id": "17281854",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Thanks for the reproducer [~apacman] . Unfortunately, even 48 GB RAM is not enough to run it.\r\n\r\nI tried to write another reproducer:\r\n{code:python}\r\nimport numpy as np\r\nimport pandas as pd\r\n\r\nimport pyarrow as pa\r\n\r\ndf = pd.Series([\"x\" * 2_500_000_000]).astype(\"string\").to_frame(\"s\")\r\n\r\nout = pa.BufferOutputStream()\r\ndf.to_parquet(out, engine=\"pyarrow\", compression=\"lz4\", index=False)\r\n{code}\r\n\r\nHowever, it fails a bit differently, so I'm not sure it's the same issue:\r\n{code}\r\nTraceback (most recent call last):\r\n  File \"../bug_11456.py\", line 15, in <module>\r\n    df.to_parquet(out, engine=\"pyarrow\", compression=\"lz4\", index=False)\r\n[...]\r\n  File \"/home/antoine/miniconda3/envs/pyarrow/lib/python3.7/site-packages/pandas/core/arrays/string_.py\", line 250, in __arrow_array__\r\n    return pa.array(values, type=type, from_pandas=True)\r\n  File \"pyarrow/array.pxi\", line 301, in pyarrow.lib.array\r\n    return _ndarray_to_array(values, mask, type, c_from_pandas, safe,\r\n  File \"pyarrow/array.pxi\", line 83, in pyarrow.lib._ndarray_to_array\r\n    check_status(NdarrayToArrow(pool, values, mask, from_pandas,\r\n  File \"pyarrow/error.pxi\", line 109, in pyarrow.lib.check_status\r\n    raise ArrowCapacityError(message)\r\npyarrow.lib.ArrowCapacityError: array cannot contain more than 2147483646 bytes, have 2500000000\r\n{code}\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-02-09T15:53:05.359+0000",
                    "updated": "2021-02-09T15:53:05.359+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355997/comment/17281869",
                    "id": "17281869",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apacman",
                        "name": "apacman",
                        "key": "apacman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Pac A. He",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "We have seen that there are one or more pyarrow limits at 2147483646 (about 2^31) bytes and rows for a column. As a user I request this limit be increased to be somewhat closer to 2^64, so the downstream packages, e.g. pandas, etc., work transparently. It is unreasonable to ask me to write partitioned parquets given that fastparquet has no trouble writing a large parquet, so it's definitely technically feasible.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apacman",
                        "name": "apacman",
                        "key": "apacman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Pac A. He",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-02-09T16:22:16.428+0000",
                    "updated": "2021-02-09T16:22:41.153+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355997/comment/17281909",
                    "id": "17281909",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Yeah, well, the first question is at which layer the error occurs. According to my reproducer, it may be during Pandas->Arrow conversion. But your reproducer is different...\r\n\r\nNote that you may be able to do the conversion manually and force a Arrow {{large_string}} type, though I'm not sure Pandas allows that. I'll let [~jorisvandenbossche] comment on this.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-02-09T17:34:20.514+0000",
                    "updated": "2021-02-09T17:34:20.514+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13355997/comment/17283697",
                    "id": "17283697",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "bq. Note that you may be able to do the conversion manually and force a Arrow large_string type, though I'm not sure Pandas allows that. \r\n\r\nYes, pandas allows that by specifying a pyarrow schema manually (instead of letting pyarrow infer that from the dataframe).\r\n\r\nFor the example above, that would look like:\r\n\r\n{code}\r\ndf.to_parquet(out, engine=\"pyarrow\", compression=\"lz4\", index=False, schema=pa.schema([(\"s\", pa.large_string())]))\r\n{code}\r\n\r\n\r\n[~apacman] does that help as a work-around?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-02-12T13:43:15.458+0000",
                    "updated": "2021-02-12T13:44:09.866+0000"
                }
            ],
            "maxResults": 14,
            "total": 14,
            "startAt": 0
        },
        "customfield_12311820": "0|z0n87s:",
        "customfield_12314139": null
    }
}