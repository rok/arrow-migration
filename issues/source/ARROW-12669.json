{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13377066",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066",
    "key": "ARROW-12669",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "name": "Critical",
            "id": "2"
        },
        "labels": [
            "Kernels",
            "kernel",
            "pull-request-available",
            "types"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12622683",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12622683",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "outwardIssue": {
                    "id": "13397634",
                    "key": "ARROW-13772",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397634",
                    "fields": {
                        "summary": "[R] Binding for median() and quantile() aggregation functions",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
                            "name": "Critical",
                            "id": "2"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
            "name": "aucahuasi",
            "key": "aucahuasi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
            },
            "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
            "name": "icook",
            "key": "icook",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
            },
            "displayName": "Ian Cook",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
            "name": "icook",
            "key": "icook",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
            },
            "displayName": "Ian Cook",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 57000,
            "total": 57000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 57000,
            "total": 57000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12669/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 95,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/650836",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi opened a new pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159\n\n\n   https://issues.apache.org/jira/browse/ARROW-12669\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-14T22:19:37.470+0000",
                    "updated": "2021-09-14T22:19:37.470+0000",
                    "started": "2021-09-14T22:19:37.470+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650836",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/650837",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#issuecomment-919553131\n\n\n   https://issues.apache.org/jira/browse/ARROW-12669\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-14T22:20:02.283+0000",
                    "updated": "2021-09-14T22:20:02.283+0000",
                    "started": "2021-09-14T22:20:02.283+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650837",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/650838",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#issuecomment-919553650\n\n\n   Tomorrow I'll work on the python and R bindings for this new function\r\n   cc @nealrichardson @edponce @ianmcook \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-14T22:21:10.422+0000",
                    "updated": "2021-09-14T22:21:10.422+0000",
                    "started": "2021-09-14T22:21:10.421+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650838",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/650904",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#issuecomment-919627068\n\n\n   Just a quick thought, why is this a vector kernel instead of a scalar one? (Though with one input it's maybe not a big difference.)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T01:31:47.479+0000",
                    "updated": "2021-09-15T01:31:47.479+0000",
                    "started": "2021-09-15T01:31:47.479+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650904",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/650905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#issuecomment-919629558\n\n\n   Oh wait nevermind, the index here is a parameter and not an options.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T01:39:41.511+0000",
                    "updated": "2021-09-15T01:39:41.511+0000",
                    "started": "2021-09-15T01:39:41.510+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650905",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/650908",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#discussion_r708773278\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_nested.cc\n##########\n@@ -169,6 +206,22 @@ void RegisterVectorNested(FunctionRegistry* registry) {\n   DCHECK_OK(registry->AddFunction(std::move(flatten)));\n \n   DCHECK_OK(registry->AddFunction(std::make_shared<ListParentIndicesFunction>()));\n+\n+  auto list_element = std::make_shared<VectorFunction>(\"list_element\", Arity::Binary(),\n+                                                       &list_element_doc);\n+  DCHECK_OK(list_element->AddKernel(\n+      {InputType::Array(Type::LIST), InputType::Scalar(Type::INT32)},\n+      OutputType(ListValuesType), ListElement<ListType, Int32Type>));\n+  DCHECK_OK(list_element->AddKernel(\n+      {InputType::Array(Type::LIST), InputType::Scalar(Type::INT64)},\n+      OutputType(ListValuesType), ListElement<ListType, Int64Type>));\n+  DCHECK_OK(list_element->AddKernel(\n+      {InputType::Array(Type::LARGE_LIST), InputType::Scalar(Type::INT32)},\n+      OutputType(ListValuesType), ListElement<LargeListType, Int32Type>));\n+  DCHECK_OK(list_element->AddKernel(\n+      {InputType::Array(Type::LARGE_LIST), InputType::Scalar(Type::INT64)},\n+      OutputType(ListValuesType), ListElement<LargeListType, Int64Type>));\n+  DCHECK_OK(registry->AddFunction(std::move(list_element)));\n\nReview comment:\n       What about fixed-size list?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_nested.cc\n##########\n@@ -157,6 +157,43 @@ class ListParentIndicesFunction : public MetaFunction {\n   }\n };\n \n+const FunctionDoc list_element_doc(\n+    \"Compute elements using of nested list values using an index\",\n+    (\"`lists` must have a list-like type.\\n\"\n+     \"For each value in each list of `lists`, the element at `index`\\n\"\n+     \"is emitted.\"),\n+    {\"lists\", \"index\"});\n+\n+template <typename Type, typename IndexType>\n+Status ListElement(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  using ListArrayType = typename TypeTraits<Type>::ArrayType;\n+  using IndexScalarType = typename TypeTraits<IndexType>::ScalarType;\n+  ListArrayType list_array(batch[0].array());\n+  const auto& index_scalar = batch[1].scalar_as<IndexScalarType>();\n+  auto index = index_scalar.value;\n+  ScalarVector scalars;\n+  for (int i = 0; i < list_array.length(); ++i) {\n+    if (list_array.IsNull(i)) {\n+      scalars.push_back(MakeNullScalar(list_array.value_type()));\n+      continue;\n+    }\n+    std::shared_ptr<arrow::Array> value_array = list_array.value_slice(i);\n+    auto len = value_array->length();\n+    if (ARROW_PREDICT_FALSE(index < 0 || index > len)) {\n+      return Status::Invalid(\"Index \", index, \" is out of bounds: should be in [0, \", len,\n\nReview comment:\n       I wonder if we might also want this to be able to just append a null as well.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_nested.cc\n##########\n@@ -157,6 +157,43 @@ class ListParentIndicesFunction : public MetaFunction {\n   }\n };\n \n+const FunctionDoc list_element_doc(\n+    \"Compute elements using of nested list values using an index\",\n+    (\"`lists` must have a list-like type.\\n\"\n+     \"For each value in each list of `lists`, the element at `index`\\n\"\n+     \"is emitted.\"),\n+    {\"lists\", \"index\"});\n+\n+template <typename Type, typename IndexType>\n+Status ListElement(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  using ListArrayType = typename TypeTraits<Type>::ArrayType;\n+  using IndexScalarType = typename TypeTraits<IndexType>::ScalarType;\n+  ListArrayType list_array(batch[0].array());\n+  const auto& index_scalar = batch[1].scalar_as<IndexScalarType>();\n+  auto index = index_scalar.value;\n+  ScalarVector scalars;\n\nReview comment:\n       nit: you could `scalars.reserve(list_array.length())`\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_nested.cc\n##########\n@@ -157,6 +157,43 @@ class ListParentIndicesFunction : public MetaFunction {\n   }\n };\n \n+const FunctionDoc list_element_doc(\n+    \"Compute elements using of nested list values using an index\",\n+    (\"`lists` must have a list-like type.\\n\"\n+     \"For each value in each list of `lists`, the element at `index`\\n\"\n+     \"is emitted.\"),\n+    {\"lists\", \"index\"});\n+\n+template <typename Type, typename IndexType>\n+Status ListElement(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  using ListArrayType = typename TypeTraits<Type>::ArrayType;\n+  using IndexScalarType = typename TypeTraits<IndexType>::ScalarType;\n+  ListArrayType list_array(batch[0].array());\n+  const auto& index_scalar = batch[1].scalar_as<IndexScalarType>();\n+  auto index = index_scalar.value;\n+  ScalarVector scalars;\n+  for (int i = 0; i < list_array.length(); ++i) {\n+    if (list_array.IsNull(i)) {\n+      scalars.push_back(MakeNullScalar(list_array.value_type()));\n+      continue;\n+    }\n+    std::shared_ptr<arrow::Array> value_array = list_array.value_slice(i);\n+    auto len = value_array->length();\n+    if (ARROW_PREDICT_FALSE(index < 0 || index > len)) {\n\nReview comment:\n       For index < 0 maybe you could hoist the check outside the loop\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_nested.cc\n##########\n@@ -157,6 +157,43 @@ class ListParentIndicesFunction : public MetaFunction {\n   }\n };\n \n+const FunctionDoc list_element_doc(\n+    \"Compute elements using of nested list values using an index\",\n+    (\"`lists` must have a list-like type.\\n\"\n+     \"For each value in each list of `lists`, the element at `index`\\n\"\n+     \"is emitted.\"),\n+    {\"lists\", \"index\"});\n+\n+template <typename Type, typename IndexType>\n+Status ListElement(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  using ListArrayType = typename TypeTraits<Type>::ArrayType;\n+  using IndexScalarType = typename TypeTraits<IndexType>::ScalarType;\n+  ListArrayType list_array(batch[0].array());\n+  const auto& index_scalar = batch[1].scalar_as<IndexScalarType>();\n+  auto index = index_scalar.value;\n+  ScalarVector scalars;\n+  for (int i = 0; i < list_array.length(); ++i) {\n+    if (list_array.IsNull(i)) {\n+      scalars.push_back(MakeNullScalar(list_array.value_type()));\n+      continue;\n+    }\n+    std::shared_ptr<arrow::Array> value_array = list_array.value_slice(i);\n+    auto len = value_array->length();\n+    if (ARROW_PREDICT_FALSE(index < 0 || index > len)) {\n+      return Status::Invalid(\"Index \", index, \" is out of bounds: should be in [0, \", len,\n+                             \"]\");\n+    }\n+    ARROW_ASSIGN_OR_RAISE(auto scalar, (value_array->GetScalar(index)));\n+    scalars.push_back(scalar);\n+  }\n+  std::unique_ptr<ArrayBuilder> builder;\n+  RETURN_NOT_OK(MakeBuilder(ctx->memory_pool(), list_array.value_type(), &builder));\n+  RETURN_NOT_OK(builder->AppendScalars(scalars));\n\nReview comment:\n       For what it's worth this isn't all that different from just having the builder and appending each scalar individually in the first place. Also, then, you can AppendNull instead of having to allocate a null scalar.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T01:43:56.152+0000",
                    "updated": "2021-09-15T01:43:56.152+0000",
                    "started": "2021-09-15T01:43:56.151+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650908",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/650910",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#discussion_r708775292\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_nested.cc\n##########\n@@ -169,6 +206,22 @@ void RegisterVectorNested(FunctionRegistry* registry) {\n   DCHECK_OK(registry->AddFunction(std::move(flatten)));\n \n   DCHECK_OK(registry->AddFunction(std::make_shared<ListParentIndicesFunction>()));\n+\n+  auto list_element = std::make_shared<VectorFunction>(\"list_element\", Arity::Binary(),\n+                                                       &list_element_doc);\n+  DCHECK_OK(list_element->AddKernel(\n+      {InputType::Array(Type::LIST), InputType::Scalar(Type::INT32)},\n+      OutputType(ListValuesType), ListElement<ListType, Int32Type>));\n+  DCHECK_OK(list_element->AddKernel(\n+      {InputType::Array(Type::LIST), InputType::Scalar(Type::INT64)},\n+      OutputType(ListValuesType), ListElement<ListType, Int64Type>));\n+  DCHECK_OK(list_element->AddKernel(\n+      {InputType::Array(Type::LARGE_LIST), InputType::Scalar(Type::INT32)},\n+      OutputType(ListValuesType), ListElement<LargeListType, Int32Type>));\n+  DCHECK_OK(list_element->AddKernel(\n+      {InputType::Array(Type::LARGE_LIST), InputType::Scalar(Type::INT64)},\n+      OutputType(ListValuesType), ListElement<LargeListType, Int64Type>));\n+  DCHECK_OK(registry->AddFunction(std::move(list_element)));\n\nReview comment:\n       Good catch, I'll work on that tomorrow. Thanks @lidavidm \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T01:47:01.079+0000",
                    "updated": "2021-09-15T01:47:01.079+0000",
                    "started": "2021-09-15T01:47:01.079+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650910",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/650911",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#discussion_r708775621\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_nested.cc\n##########\n@@ -157,6 +157,43 @@ class ListParentIndicesFunction : public MetaFunction {\n   }\n };\n \n+const FunctionDoc list_element_doc(\n+    \"Compute elements using of nested list values using an index\",\n+    (\"`lists` must have a list-like type.\\n\"\n+     \"For each value in each list of `lists`, the element at `index`\\n\"\n+     \"is emitted.\"),\n+    {\"lists\", \"index\"});\n+\n+template <typename Type, typename IndexType>\n+Status ListElement(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  using ListArrayType = typename TypeTraits<Type>::ArrayType;\n+  using IndexScalarType = typename TypeTraits<IndexType>::ScalarType;\n+  ListArrayType list_array(batch[0].array());\n+  const auto& index_scalar = batch[1].scalar_as<IndexScalarType>();\n+  auto index = index_scalar.value;\n+  ScalarVector scalars;\n\nReview comment:\n       Yes, is a good idea, at that moment I was not clear that the final output will have of the same length.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T01:48:04.976+0000",
                    "updated": "2021-09-15T01:48:04.976+0000",
                    "started": "2021-09-15T01:48:04.976+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650911",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/650912",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#discussion_r708775946\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_nested.cc\n##########\n@@ -157,6 +157,43 @@ class ListParentIndicesFunction : public MetaFunction {\n   }\n };\n \n+const FunctionDoc list_element_doc(\n+    \"Compute elements using of nested list values using an index\",\n+    (\"`lists` must have a list-like type.\\n\"\n+     \"For each value in each list of `lists`, the element at `index`\\n\"\n+     \"is emitted.\"),\n+    {\"lists\", \"index\"});\n+\n+template <typename Type, typename IndexType>\n+Status ListElement(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  using ListArrayType = typename TypeTraits<Type>::ArrayType;\n+  using IndexScalarType = typename TypeTraits<IndexType>::ScalarType;\n+  ListArrayType list_array(batch[0].array());\n+  const auto& index_scalar = batch[1].scalar_as<IndexScalarType>();\n+  auto index = index_scalar.value;\n+  ScalarVector scalars;\n+  for (int i = 0; i < list_array.length(); ++i) {\n+    if (list_array.IsNull(i)) {\n+      scalars.push_back(MakeNullScalar(list_array.value_type()));\n+      continue;\n+    }\n+    std::shared_ptr<arrow::Array> value_array = list_array.value_slice(i);\n+    auto len = value_array->length();\n+    if (ARROW_PREDICT_FALSE(index < 0 || index > len)) {\n+      return Status::Invalid(\"Index \", index, \" is out of bounds: should be in [0, \", len,\n\nReview comment:\n       @lidavidm There are some ideas about how to handle nulls [here](https://issues.apache.org/jira/browse/ARROW-12669?focusedCommentId=17415119&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17415119)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T01:49:08.640+0000",
                    "updated": "2021-09-15T01:49:08.640+0000",
                    "started": "2021-09-15T01:49:08.640+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650912",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/650913",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#discussion_r708776410\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_nested.cc\n##########\n@@ -157,6 +157,43 @@ class ListParentIndicesFunction : public MetaFunction {\n   }\n };\n \n+const FunctionDoc list_element_doc(\n+    \"Compute elements using of nested list values using an index\",\n+    (\"`lists` must have a list-like type.\\n\"\n+     \"For each value in each list of `lists`, the element at `index`\\n\"\n+     \"is emitted.\"),\n+    {\"lists\", \"index\"});\n+\n+template <typename Type, typename IndexType>\n+Status ListElement(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  using ListArrayType = typename TypeTraits<Type>::ArrayType;\n+  using IndexScalarType = typename TypeTraits<IndexType>::ScalarType;\n+  ListArrayType list_array(batch[0].array());\n+  const auto& index_scalar = batch[1].scalar_as<IndexScalarType>();\n+  auto index = index_scalar.value;\n+  ScalarVector scalars;\n+  for (int i = 0; i < list_array.length(); ++i) {\n+    if (list_array.IsNull(i)) {\n+      scalars.push_back(MakeNullScalar(list_array.value_type()));\n+      continue;\n+    }\n+    std::shared_ptr<arrow::Array> value_array = list_array.value_slice(i);\n+    auto len = value_array->length();\n+    if (ARROW_PREDICT_FALSE(index < 0 || index > len)) {\n+      return Status::Invalid(\"Index \", index, \" is out of bounds: should be in [0, \", len,\n+                             \"]\");\n+    }\n+    ARROW_ASSIGN_OR_RAISE(auto scalar, (value_array->GetScalar(index)));\n+    scalars.push_back(scalar);\n+  }\n+  std::unique_ptr<ArrayBuilder> builder;\n+  RETURN_NOT_OK(MakeBuilder(ctx->memory_pool(), list_array.value_type(), &builder));\n+  RETURN_NOT_OK(builder->AppendScalars(scalars));\n\nReview comment:\n       Thanks again!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T01:50:13.063+0000",
                    "updated": "2021-09-15T01:50:13.063+0000",
                    "started": "2021-09-15T01:50:13.062+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "650913",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/651095",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#issuecomment-920037331\n\n\n   > why is this a vector kernel instead of a scalar one?\r\n   \r\n   I think it has to be a scalar kernel if we want to be able to call it in a projection node, which is why we're doing this now--right?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T13:51:08.287+0000",
                    "updated": "2021-09-15T13:51:08.287+0000",
                    "started": "2021-09-15T13:51:08.286+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "651095",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/651100",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#issuecomment-920041100\n\n\n   > > why is this a vector kernel instead of a scalar one?\r\n   > \r\n   > I think it has to be a scalar kernel if we want to be able to call it in a projection node, which is why we're doing this now--right?\r\n   \r\n   Ah, right - plus expressions aren't evaluatable unless they're scalar: https://github.com/apache/arrow/blob/9cf2372b3dc99feadbac0c5e976e69c926883167/cpp/src/arrow/compute/exec/expression.cc#L503-L506\r\n   \r\n   I think most kernels like this pass the second argument via options, not as an argument. I was also debating whether to comment about this, but might as well: there's no need to generate kernels for different index types, especially if we just make the index an option instead of a parameter. (It'll also limit the number of special cases to account for in type coverage testing.)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T13:55:26.965+0000",
                    "updated": "2021-09-15T13:55:26.965+0000",
                    "started": "2021-09-15T13:55:26.965+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "651100",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/651107",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#issuecomment-920052092\n\n\n   > I think most kernels like this pass the second argument via options, not as an argument.\r\n   \r\n   Why can't this be a scalar kernel while still having `index` as a second argument? \r\n   Having the `index` as argument keeps the flexibility to be able to get a different index of each row (I don't know if this would be an important functionality though, but there are probably use cases)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T14:08:02.610+0000",
                    "updated": "2021-09-15T14:08:02.610+0000",
                    "started": "2021-09-15T14:08:02.610+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "651107",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/651120",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#discussion_r709249165\n\n\n\n##########\nFile path: docs/source/cpp/compute.rst\n##########\n@@ -1490,6 +1492,9 @@ Structural transforms\n   in the list array is appended to the output.  Nulls in the parent list array\n   are discarded.\n \n+* \\(3) For each value in the list child array, the value at index is appended\n+  to the output. Nulls in the parent list array are mapped into nulls.\n\nReview comment:\n       I think this is clearer. I think it is not necessary to explicitly say anything about nulls here.\r\n   ```suggestion\r\n   * \\(3) Output is an array of the same length as the input list array. The\r\n     output values are the values at the specified index of each child list.\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T14:32:22.990+0000",
                    "updated": "2021-09-15T14:32:22.990+0000",
                    "started": "2021-09-15T14:32:22.990+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "651120",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/651123",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#issuecomment-920078498\n\n\n   > > I think most kernels like this pass the second argument via options, not as an argument.\r\n   > \r\n   > Why can't this be a scalar kernel while still having `index` as a second argument?\r\n   > Having the `index` as argument keeps the flexibility to be able to get a different index of each row (I don't know if this would be an important functionality though, but there are probably use cases)\r\n   \r\n   Ah, you're right. So this should just be a scalar kernel, then.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T14:37:09.668+0000",
                    "updated": "2021-09-15T14:37:09.668+0000",
                    "started": "2021-09-15T14:37:09.668+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "651123",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/651125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#discussion_r709254519\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_nested.cc\n##########\n@@ -157,6 +157,43 @@ class ListParentIndicesFunction : public MetaFunction {\n   }\n };\n \n+const FunctionDoc list_element_doc(\n+    \"Compute elements using of nested list values using an index\",\n+    (\"`lists` must have a list-like type.\\n\"\n+     \"For each value in each list of `lists`, the element at `index`\\n\"\n+     \"is emitted.\"),\n+    {\"lists\", \"index\"});\n+\n+template <typename Type, typename IndexType>\n+Status ListElement(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  using ListArrayType = typename TypeTraits<Type>::ArrayType;\n+  using IndexScalarType = typename TypeTraits<IndexType>::ScalarType;\n+  ListArrayType list_array(batch[0].array());\n+  const auto& index_scalar = batch[1].scalar_as<IndexScalarType>();\n+  auto index = index_scalar.value;\n+  ScalarVector scalars;\n+  for (int i = 0; i < list_array.length(); ++i) {\n+    if (list_array.IsNull(i)) {\n+      scalars.push_back(MakeNullScalar(list_array.value_type()));\n+      continue;\n+    }\n+    std::shared_ptr<arrow::Array> value_array = list_array.value_slice(i);\n+    auto len = value_array->length();\n+    if (ARROW_PREDICT_FALSE(index < 0 || index > len)) {\n+      return Status::Invalid(\"Index \", index, \" is out of bounds: should be in [0, \", len,\n\nReview comment:\n       I do not think any of the behaviors proposed there are useful.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T14:37:48.246+0000",
                    "updated": "2021-09-15T14:37:48.246+0000",
                    "started": "2021-09-15T14:37:48.245+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "651125",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/651126",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#discussion_r709255776\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_nested.cc\n##########\n@@ -157,6 +157,43 @@ class ListParentIndicesFunction : public MetaFunction {\n   }\n };\n \n+const FunctionDoc list_element_doc(\n+    \"Compute elements using of nested list values using an index\",\n+    (\"`lists` must have a list-like type.\\n\"\n+     \"For each value in each list of `lists`, the element at `index`\\n\"\n+     \"is emitted.\"),\n+    {\"lists\", \"index\"});\n+\n+template <typename Type, typename IndexType>\n+Status ListElement(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  using ListArrayType = typename TypeTraits<Type>::ArrayType;\n+  using IndexScalarType = typename TypeTraits<IndexType>::ScalarType;\n+  ListArrayType list_array(batch[0].array());\n+  const auto& index_scalar = batch[1].scalar_as<IndexScalarType>();\n+  auto index = index_scalar.value;\n+  ScalarVector scalars;\n+  for (int i = 0; i < list_array.length(); ++i) {\n+    if (list_array.IsNull(i)) {\n+      scalars.push_back(MakeNullScalar(list_array.value_type()));\n+      continue;\n+    }\n+    std::shared_ptr<arrow::Array> value_array = list_array.value_slice(i);\n+    auto len = value_array->length();\n+    if (ARROW_PREDICT_FALSE(index < 0 || index > len)) {\n+      return Status::Invalid(\"Index \", index, \" is out of bounds: should be in [0, \", len,\n\nReview comment:\n       As Eduardo says, we should always return the same number of elements in the output as in the input (that keeps this as a scalar function) - but that said, we could offer different interpretations for top-level nulls: either return an error or return null; also here, if an index is out of bounds for a particular list, we could also return an error or return null. That said, I don't think any of these behaviors are useful enough to implement right this moment.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T14:39:00.637+0000",
                    "updated": "2021-09-15T14:39:00.637+0000",
                    "started": "2021-09-15T14:39:00.637+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "651126",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/651127",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#discussion_r709255877\n\n\n\n##########\nFile path: docs/source/cpp/compute.rst\n##########\n@@ -1490,6 +1492,9 @@ Structural transforms\n   in the list array is appended to the output.  Nulls in the parent list array\n   are discarded.\n \n+* \\(3) For each value in the list child array, the value at index is appended\n+  to the output. Nulls in the parent list array are mapped into nulls.\n\nReview comment:\n       The \"append\" language made it harder to recognize that this can be a scalar kernel.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T14:39:14.120+0000",
                    "updated": "2021-09-15T14:39:14.120+0000",
                    "started": "2021-09-15T14:39:14.120+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "651127",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/651179",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#discussion_r709320585\n\n\n\n##########\nFile path: docs/source/cpp/compute.rst\n##########\n@@ -1490,6 +1492,9 @@ Structural transforms\n   in the list array is appended to the output.  Nulls in the parent list array\n   are discarded.\n \n+* \\(3) For each value in the list child array, the value at index is appended\n+  to the output. Nulls in the parent list array are mapped into nulls.\n\nReview comment:\n       Thanks Ian! \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T15:48:35.564+0000",
                    "updated": "2021-09-15T15:48:35.564+0000",
                    "started": "2021-09-15T15:48:35.564+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "651179",
                    "issueId": "13377066"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/worklog/651436",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11159:\nURL: https://github.com/apache/arrow/pull/11159#discussion_r709696112\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_nested.cc\n##########\n@@ -157,6 +157,43 @@ class ListParentIndicesFunction : public MetaFunction {\n   }\n };\n \n+const FunctionDoc list_element_doc(\n+    \"Compute elements using of nested list values using an index\",\n+    (\"`lists` must have a list-like type.\\n\"\n+     \"For each value in each list of `lists`, the element at `index`\\n\"\n+     \"is emitted.\"),\n+    {\"lists\", \"index\"});\n+\n+template <typename Type, typename IndexType>\n+Status ListElement(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  using ListArrayType = typename TypeTraits<Type>::ArrayType;\n+  using IndexScalarType = typename TypeTraits<IndexType>::ScalarType;\n+  ListArrayType list_array(batch[0].array());\n+  const auto& index_scalar = batch[1].scalar_as<IndexScalarType>();\n+  auto index = index_scalar.value;\n+  ScalarVector scalars;\n+  for (int i = 0; i < list_array.length(); ++i) {\n+    if (list_array.IsNull(i)) {\n+      scalars.push_back(MakeNullScalar(list_array.value_type()));\n+      continue;\n+    }\n+    std::shared_ptr<arrow::Array> value_array = list_array.value_slice(i);\n+    auto len = value_array->length();\n+    if (ARROW_PREDICT_FALSE(index < 0 || index > len)) {\n+      return Status::Invalid(\"Index \", index, \" is out of bounds: should be in [0, \", len,\n\nReview comment:\n       Makes sense, thanks @lidavidm !\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-16T02:03:52.311+0000",
                    "updated": "2021-09-16T02:03:52.311+0000",
                    "started": "2021-09-16T02:03:52.311+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "651436",
                    "issueId": "13377066"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 57000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1cca479c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@709510ef[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@69fadc18[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3130aba0[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67e4577b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@545b061d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6bfe0a92[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5fa7d1e6[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a3d1ae6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@16da9c52[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@d6bbe81[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6ca2662b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 57000,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Sep 20 19:39:21 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-09-20T19:39:21.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12669/watchers",
            "watchCount": 6,
            "isWatching": false
        },
        "created": "2021-05-06T16:16:42.000+0000",
        "updated": "2021-09-20T19:39:32.000+0000",
        "timeoriginalestimate": null,
        "description": "It would be useful to have a compute function that takes a {{ListArray<list<type>>}} and an integer index {{n}} and returns an {{Array<type>}} containing the {{n}} th item from each list.\r\n\r\nThis would be useful in combination with existing functions that return list-type output, for example the string splitting functions.\r\n\r\nLet's please ensure that this also works on fixed size list.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "15h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 57000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Kernel to return Array of elements at index of list in ListArray",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/comment/17410100",
                    "id": "17410100",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "IIUC, the expected behavior in Numpy is:\r\n{code:python}\r\n>>> listarray = np.array([[1,2],[3,4],[5,6]])\r\narray([[1, 2],\r\n       [3, 4],\r\n       [5, 6]])\r\n>>> array = listarray[:,0]  # Get index 0 from all arrays\r\narray([1, 3, 5])\r\n>>> array = listarray[:,1]  # Get index 1 from all arrays\r\narray([2, 4, 6])\r\n{code}\r\n\r\nIt could be similar to the *values_slice* but at the *ListArray* level.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-09-05T04:46:19.848+0000",
                    "updated": "2021-09-05T05:08:08.018+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/comment/17414521",
                    "id": "17414521",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
                        "name": "aucahuasi",
                        "key": "aucahuasi",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
                        },
                        "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Should we crash if we have an out of bound index? cc [~icook]\u00a0 [~edponce]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
                        "name": "aucahuasi",
                        "key": "aucahuasi",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
                        },
                        "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-09-13T19:13:57.284+0000",
                    "updated": "2021-09-13T19:13:57.284+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/comment/17414569",
                    "id": "17414569",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "We should never crash, should we? ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-09-13T20:05:41.088+0000",
                    "updated": "2021-09-13T20:05:41.088+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/comment/17414570",
                    "id": "17414570",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "By convention, runtime errors trigger/return an error status. Status codes are listed in [status.h|https://github.com/apache/arrow/blob/master/cpp/src/arrow/status.h#L77-L97].\r\nFor this case, I suggest something along the lines of *return Status::Invalid(\"index out of bounds ...\")*.\r\n\r\nIf the question is about maybe returning an empty array when an invalid index is given, I will state that most programming languages will emit an index error for such cases. I would not recommend returning an empty array via a silent error.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-09-13T20:06:14.276+0000",
                    "updated": "2021-09-13T20:09:37.917+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/comment/17414647",
                    "id": "17414647",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
                        "name": "aucahuasi",
                        "key": "aucahuasi",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
                        },
                        "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I like the idea of returning Status::Invalid.\u00a0Thanks!\r\n\r\nMore questions:\r\n # What is the best name for this new function? Given that this function is under\u00a0[Structural transforms|https://arrow.apache.org/docs/cpp/compute.html#cpp-compute-vector-structural-transforms]\u00a0category, my suggestion is\u00a0*list_nth_indices*\r\n # If some item in each list is null: Do we need to have an option (*skip_null_values*) to handle this? For instance: **\r\n{code:java}\r\nlist_nth_indices with the array [[2,13],[4,null]] and the index 1\r\nReturns:\r\n- [13, null] if skip_null_values = False\r\n- [13] if skip_null_values = True{code}\r\n\r\n # If any list is null, do we need an option to handle the output? For instance using\u00a0*skip_null_lists*\u00a0\r\n\r\n{code:java}\r\nlist_nth_indices with the array [[2,13],null,[4,null]] and the index 1\r\nReturns:\r\n- [13, null, null] if skip_null_lists = False and skip_null_values = False\r\n- [13, null] if skip_null_lists = False and skip_null_values = True\r\n- [13, null] if skip_null_lists = True and skip_null_values = False\r\n- [13] if skip_null_lists = True and skip_null_values = True\u00a0{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
                        "name": "aucahuasi",
                        "key": "aucahuasi",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
                        },
                        "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-09-14T00:13:39.957+0000",
                    "updated": "2021-09-14T00:13:39.957+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/comment/17415119",
                    "id": "17415119",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "For the current requirement, the output array of `list_nth_indices` should be of the same length as the number of arrays.\r\n{code}\r\n>>> list_nth_indices([[2, 13], [4, null]], /*index=*/1)\r\n[13, null]\r\n>>> list_nth_indices([[2, 13], null, [4, null]], /*index=*/1)\r\n[13, null, null]\r\n{code}\r\nI think that if adding the `skip_nulls` option is not difficult to implement and its impact in performance is negligible then supporting it is not a bad idea since already other operations on *ListArray* skip nulls (e.g., *flatten*)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-09-14T19:31:21.119+0000",
                    "updated": "2021-09-14T19:35:11.108+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/comment/17415125",
                    "id": "17415125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "IMO we should always return an Array the same length as the ListArray. I don't see a use case where I would want the resulting array to be a different length. This should also simplify things because doesn't that make this kernel a scalar kernel?\r\n\r\nIf you want to drop nulls, there are ways to do that after the fact (see also ARROW-12596). ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-09-14T19:42:21.610+0000",
                    "updated": "2021-09-14T19:42:21.610+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/comment/17415137",
                    "id": "17415137",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Regarding nulls: I agree with Neal's assertion directly above.\r\n\r\nRegarding the name: I think *{{list_nth_indices}}* is confusing for several reasons. Can we name it *{{list_element}}*? I think we should avoid using \"nth\" in the name because it might cause users to believe this was related to {{std::nth_element}} or to the {{partition_nth_indices}} kernel.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-09-14T20:14:01.663+0000",
                    "updated": "2021-09-14T20:14:01.663+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/comment/17415197",
                    "id": "17415197",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
                        "name": "aucahuasi",
                        "key": "aucahuasi",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
                        },
                        "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Sounds good! I like better that name, thanks all!\r\n\r\nbtw the PR is here (still WIP)\u00a0https://github.com/apache/arrow/pull/11159",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
                        "name": "aucahuasi",
                        "key": "aucahuasi",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
                        },
                        "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-09-14T22:24:04.070+0000",
                    "updated": "2021-09-14T22:24:04.070+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/comment/17415532",
                    "id": "17415532",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Agreed with [~icook] that {{list_nth_indices}} is a confusing name (especially the \"indeces\", since you are not querying indices). {{list_element}} sounds good, a potentially even more explicit (but longer) name could be {{list_get_element}} (in pandas this corresponds to `Series.str.get(..)`, although for string values, not lists). \r\n\r\nSince we might want to have other variations like getting a slice of each list ({{list_slice}}?) or a sublist of each list based on indices ({{list_elements}}?), it's good to have a now that can consistently be extended like this. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-09-15T14:04:52.080+0000",
                    "updated": "2021-09-15T14:04:52.080+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/comment/17416195",
                    "id": "17416195",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
                        "name": "aucahuasi",
                        "key": "aucahuasi",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
                        },
                        "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Thanks! Another couple of questions:\r\n # Do we need this function can support\u00a0scalar inputs?\r\n # if so, can you provide some examples?\r\n\r\ncc [~icook]\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
                        "name": "aucahuasi",
                        "key": "aucahuasi",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
                        },
                        "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-09-16T15:49:49.410+0000",
                    "updated": "2021-09-16T15:49:49.410+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/comment/17416203",
                    "id": "17416203",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "A scalar kernel should support scalar inputs. I don't think it's a lot of work here, and it makes the testing uniform instead of having to special-case this function.\r\n\r\nThe behavior should follow from the array behavior. That is, given a (scalar) list and a (scalar) index, return the element at the index. Return null if the (scalar) list is null.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-09-16T15:56:38.872+0000",
                    "updated": "2021-09-16T15:56:38.872+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/comment/17416498",
                    "id": "17416498",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Yes, to confirm what David said, I expect for any scalar kernel to just work on a scalar input as well (this is basically the definition of a scalar kernel, in that the operation is done element-wise for each element independently, so naively you can see a scalar kernel as an operation on a scalar that you apply on each element of the array).\r\n\r\nAnd I think David gave a concrete example here: https://github.com/apache/arrow/pull/11159#discussion_r710237790",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-09-17T07:05:02.019+0000",
                    "updated": "2021-09-17T07:05:02.019+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/comment/17417746",
                    "id": "17417746",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
                        "name": "aucahuasi",
                        "key": "aucahuasi",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
                        },
                        "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Thanks all! Yes I've implemented the new scalar function to work with scalars and arrays as well.\r\n\r\nThe PR should be merged soon\u00a0(y)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
                        "name": "aucahuasi",
                        "key": "aucahuasi",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
                        },
                        "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-09-20T17:21:45.078+0000",
                    "updated": "2021-09-20T17:21:45.078+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377066/comment/17417794",
                    "id": "17417794",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 11159\n[https://github.com/apache/arrow/pull/11159]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-09-20T19:39:21.217+0000",
                    "updated": "2021-09-20T19:39:21.217+0000"
                }
            ],
            "maxResults": 15,
            "total": 15,
            "startAt": 0
        },
        "customfield_12311820": "0|z0qso0:",
        "customfield_12314139": null
    }
}