{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13216198",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198",
    "key": "ARROW-4595",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "aggregateprogress": {
            "progress": 10800,
            "total": 10800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10800,
            "total": 10800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4595/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/199656",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3671: ARROW-4595: [Rust] DataFrame API for discussion\nURL: https://github.com/apache/arrow/pull/3671\n \n \n   This PR adds a `DataFrame` trait styled loosely after Apache Spark. I would love to get feedback on this idea, especially from the point of view of people with experience of Pandas and other DataFrame implementations.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-16T23:37:00.459+0000",
                    "updated": "2019-02-16T23:37:00.459+0000",
                    "started": "2019-02-16T23:37:00.458+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199656",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/199665",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3671: ARROW-4595: [Rust] DataFrame API for discussion\nURL: https://github.com/apache/arrow/pull/3671#issuecomment-464401360\n \n \n   You might look at what we've done in https://github.com/ibis-project/ibis. The Spark DataFrame API falls short of fully capturing SQL semantics and so I personally would not model a deferred / expr-based dataframe-like library after it. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T00:02:17.329+0000",
                    "updated": "2019-02-17T00:02:17.329+0000",
                    "started": "2019-02-17T00:02:17.329+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199665",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/199666",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3671: ARROW-4595: [Rust] DataFrame API for discussion\nURL: https://github.com/apache/arrow/pull/3671#issuecomment-464401405\n \n \n   cc @kszucs @cpcloud \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T00:02:54.899+0000",
                    "updated": "2019-02-17T00:02:54.899+0000",
                    "started": "2019-02-17T00:02:54.898+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199666",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/199669",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3671: ARROW-4595: [Rust] DataFrame API for discussion\nURL: https://github.com/apache/arrow/pull/3671#issuecomment-464401360\n \n \n   You might look at what we've done in https://github.com/ibis-project/ibis. The Spark DataFrame API falls short of fully capturing SQL semantics and so I personally would not model a deferred / expr-based dataframe-like library after it. \r\n   \r\n   We detailed the mapping between SQL (including more esoteric things like correlated subqueries) in https://docs.ibis-project.org/sql.html\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T00:05:17.705+0000",
                    "updated": "2019-02-17T00:05:17.705+0000",
                    "started": "2019-02-17T00:05:17.704+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199669",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/199698",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #3671: ARROW-4595: [Rust] DataFrame API for discussion\nURL: https://github.com/apache/arrow/pull/3671#issuecomment-464408933\n \n \n   cc me\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T02:21:39.626+0000",
                    "updated": "2019-02-17T02:21:39.626+0000",
                    "started": "2019-02-17T02:21:39.625+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199698",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/199701",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on issue #3671: ARROW-4595: [Rust] DataFrame API for discussion\nURL: https://github.com/apache/arrow/pull/3671#issuecomment-464412448\n \n \n   Hi @andygrove, \r\n   \r\n   I've recently been playing around with a dataframe library at https://github.com/nevi-me/rust-dataframe. I started off with eager evaluation, and I had started researching how to transition to lazy evaluation to translate to logical plans. I've outlined why I started working on it, but one can think of it as a short-term experiment to see how a Rust user would use Arrow.\r\n   \r\n   I think our API might depend on whether we want a full-featured implementation (DataFusion being the primary user), or whether the API is mainly an alternative way to interact with the query backend, in which case we should/could keep it simple with just transforms.\r\n   For example, adding IO (write_csv,parquet) on the trait creates an expectation that whoever implements the trait should support those data formats.\r\n   \r\n   So if the DataFrame trait is meant for DataFusion use only, then that's fine, otherwise I'd think IO methods should not live in the trait.\r\n   \r\n   I think in general and the medium term; we might need to hash out what parts of DataFusion we can move into Arrow (might only be compute and scalar values?), and discuss what in your original roadmap will live where (e.g clustering, Kubernetes support).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T03:25:27.891+0000",
                    "updated": "2019-02-17T03:25:27.891+0000",
                    "started": "2019-02-17T03:25:27.890+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199701",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/199753",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #3671: ARROW-4595: [Rust] DataFrame API for discussion\nURL: https://github.com/apache/arrow/pull/3671#issuecomment-464451767\n \n \n   I'd prefer the adaptation of abstractions from ibis, especially because DataFusion and ibis are pretty similar. \r\n   In my mental representation `DataFrame` is an eager evaluated container (mostly because of pandas), whereas ibis calls it `Table` which IMO better aligns with the traditional SQL systems' multi-layer, lazy execution model.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T12:36:12.726+0000",
                    "updated": "2019-02-17T12:36:12.726+0000",
                    "started": "2019-02-17T12:36:12.725+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199753",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/199801",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on issue #3671: ARROW-4595: [Rust] DataFrame API for discussion\nURL: https://github.com/apache/arrow/pull/3671#issuecomment-464496501\n \n \n   Thanks for the feedback so far. I\u2019ve been looking at Ibis docs and it looks good. I will work on creating a trait and some sample code using this approach.\r\n   \r\n   @nevi-me I agree that this DataFrame/Table API should not have anything specific to csv, parquet, etc. It should be possible to call some context/provider method to load the initial Table and then call a context/provider to write a Table out. Something like this pseudo code:\r\n   \r\n   ```rust\r\n   let t = executionContext.parquet.read(\u201ctest.parquet);\r\n   let t2 = t.select(...).filter(....).limit(...);\r\n   executionContext.csv.write(\u201ctest.csv);\r\n   ```\r\n   \r\n   As for the longer term roadmap, those are good questions but I don\u2019t really have answers yet. For now I am focusing on getting the code to a point where we can at least run real-world queries using a single thread. The next step would be parallel execution with multiple threads. Distributed would come after that.\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T19:11:27.104+0000",
                    "updated": "2019-02-17T19:11:27.104+0000",
                    "started": "2019-02-17T19:11:27.104+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199801",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/199888",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #3671: ARROW-4595: [Rust] DataFrame API for discussion\nURL: https://github.com/apache/arrow/pull/3671#issuecomment-464518791\n \n \n   Please let me know if I can help, not with actual code writing, but with the semantics of ibis! I'm really interested in it :)\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T22:28:03.953+0000",
                    "updated": "2019-02-17T22:28:03.953+0000",
                    "started": "2019-02-17T22:28:03.952+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199888",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/210553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on issue #3671: ARROW-4595: [Rust] DataFrame API for discussion\nURL: https://github.com/apache/arrow/pull/3671#issuecomment-471193589\n \n \n   @kszucs I just force pushed ... please let me know how this is looking ... I plan to start implementing this for real in the next week or two\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-09T15:52:53.960+0000",
                    "updated": "2019-03-09T15:52:53.960+0000",
                    "started": "2019-03-09T15:52:53.959+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "210553",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/210690",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on issue #3671: ARROW-4595: [Rust] DataFrame API for discussion\nURL: https://github.com/apache/arrow/pull/3671#issuecomment-471328517\n \n \n   With these latest changes I can now get a `Table` from the context and perform projection and limit and get a logical plan that I can then execute.\r\n   \r\n   I think it would be good to review this current design and merge it once any feedback is addressed and then I can add new methods to the Table API as separate PRs.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-10T17:57:54.387+0000",
                    "updated": "2019-03-10T17:57:54.387+0000",
                    "started": "2019-03-10T17:57:54.386+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "210690",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/212135",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on issue #3671: ARROW-4595: [Rust] Implement Table API (a.k.a DataFrame)\nURL: https://github.com/apache/arrow/pull/3671#issuecomment-472231903\n \n \n   Hi @kszucs .. just a reminder that this is ready for review. Thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-13T00:23:51.400+0000",
                    "updated": "2019-03-13T00:23:51.400+0000",
                    "started": "2019-03-13T00:23:51.400+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "212135",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/218829",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on issue #3671: ARROW-4595: [Rust] Implement Table API (a.k.a DataFrame)\nURL: https://github.com/apache/arrow/pull/3671#issuecomment-476786065\n \n \n   @sunchao @paddyhoran @kszucs This PR has been open for a couple weeks now .. I have just rebased .. any objection to merging this one?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-26T18:25:23.399+0000",
                    "updated": "2019-03-26T18:25:23.399+0000",
                    "started": "2019-03-26T18:25:23.399+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "218829",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/219035",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on pull request #3671: ARROW-4595: [Rust] Implement Table API (a.k.a DataFrame)\nURL: https://github.com/apache/arrow/pull/3671#discussion_r269375201\n \n \n\n ##########\n File path: rust/datafusion/src/execution/context.rs\n ##########\n @@ -100,12 +102,30 @@ impl ExecutionContext {\n     }\n \n     /// Register a table so that it can be queried from SQL\n-    pub fn register_table(&mut self, name: &str, provider: Rc<Table>) {\n+    pub fn register_table(&mut self, name: &str, provider: Rc<TableProvider>) {\n         self.datasources\n             .borrow_mut()\n             .insert(name.to_string(), provider);\n     }\n \n+    /// Get a table by name\n+    pub fn table(&mut self, table_name: &str) -> Result<Arc<Table>> {\n+        match self.datasources.borrow().get(table_name) {\n+            Some(provider) => {\n+                Ok(Arc::new(TableImpl::new(Arc::new(LogicalPlan::TableScan {\n+                    schema_name: \"\".to_string(),\n \n Review comment:\n   It seems odd to always use an empty string, should `schema_name` be an `Option<String>`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T01:24:57.946+0000",
                    "updated": "2019-03-27T01:24:57.946+0000",
                    "started": "2019-03-27T01:24:57.945+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219035",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/219036",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on pull request #3671: ARROW-4595: [Rust] Implement Table API (a.k.a DataFrame)\nURL: https://github.com/apache/arrow/pull/3671#discussion_r269375301\n \n \n\n ##########\n File path: rust/datafusion/src/execution/context.rs\n ##########\n @@ -100,12 +102,30 @@ impl ExecutionContext {\n     }\n \n     /// Register a table so that it can be queried from SQL\n-    pub fn register_table(&mut self, name: &str, provider: Rc<Table>) {\n+    pub fn register_table(&mut self, name: &str, provider: Rc<TableProvider>) {\n         self.datasources\n             .borrow_mut()\n             .insert(name.to_string(), provider);\n     }\n \n+    /// Get a table by name\n+    pub fn table(&mut self, table_name: &str) -> Result<Arc<Table>> {\n+        match self.datasources.borrow().get(table_name) {\n+            Some(provider) => {\n+                Ok(Arc::new(TableImpl::new(Arc::new(LogicalPlan::TableScan {\n+                    schema_name: \"\".to_string(),\n+                    table_name: table_name.to_string(),\n+                    schema: provider.schema().clone(),\n+                    projection: None,\n+                }))))\n+            }\n+            _ => Err(ExecutionError::General(format!(\n \n Review comment:\n   Is there a test for this branch?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T01:24:57.996+0000",
                    "updated": "2019-03-27T01:24:57.996+0000",
                    "started": "2019-03-27T01:24:57.996+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219036",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/219037",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on pull request #3671: ARROW-4595: [Rust] Implement Table API (a.k.a DataFrame)\nURL: https://github.com/apache/arrow/pull/3671#discussion_r269375562\n \n \n\n ##########\n File path: rust/datafusion/src/execution/table_impl.rs\n ##########\n @@ -0,0 +1,101 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Implementation of Table API\n+\n+use std::sync::Arc;\n+\n+use crate::arrow::datatypes::{Field, Schema};\n+use crate::error::{ExecutionError, Result};\n+use crate::logicalplan::Expr::Literal;\n+use crate::logicalplan::ScalarValue;\n+use crate::logicalplan::{Expr, LogicalPlan};\n+use crate::table::*;\n+\n+/// Implementation of Table API\n+pub struct TableImpl {\n+    plan: Arc<LogicalPlan>,\n+}\n+\n+impl TableImpl {\n+    /// Create a new Table based on an existing logical plan\n+    pub fn new(plan: Arc<LogicalPlan>) -> Self {\n+        Self { plan }\n+    }\n+}\n+\n+impl Table for TableImpl {\n+    /// Apply a projection based on a list of column names\n+    fn select_columns(&self, columns: Vec<&str>) -> Result<Arc<Table>> {\n+        let schema = self.plan.schema();\n+        let mut projection_index: Vec<usize> = Vec::with_capacity(columns.len());\n+        let mut expr: Vec<Expr> = Vec::with_capacity(columns.len());\n+\n+        for column in columns {\n+            match schema.column_with_name(column) {\n+                Some((i, _)) => {\n+                    projection_index.push(i);\n+                    expr.push(Expr::Column(i));\n+                }\n+                _ => {\n+                    return Err(ExecutionError::InvalidColumn(format!(\n \n Review comment:\n   No test for this also.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T01:24:57.997+0000",
                    "updated": "2019-03-27T01:24:57.997+0000",
                    "started": "2019-03-27T01:24:57.996+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219037",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/219038",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on pull request #3671: ARROW-4595: [Rust] Implement Table API (a.k.a DataFrame)\nURL: https://github.com/apache/arrow/pull/3671#discussion_r269375611\n \n \n\n ##########\n File path: rust/datafusion/src/execution/table_impl.rs\n ##########\n @@ -0,0 +1,101 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Implementation of Table API\n+\n+use std::sync::Arc;\n+\n+use crate::arrow::datatypes::{Field, Schema};\n+use crate::error::{ExecutionError, Result};\n+use crate::logicalplan::Expr::Literal;\n+use crate::logicalplan::ScalarValue;\n+use crate::logicalplan::{Expr, LogicalPlan};\n+use crate::table::*;\n+\n+/// Implementation of Table API\n+pub struct TableImpl {\n+    plan: Arc<LogicalPlan>,\n+}\n+\n+impl TableImpl {\n+    /// Create a new Table based on an existing logical plan\n+    pub fn new(plan: Arc<LogicalPlan>) -> Self {\n+        Self { plan }\n+    }\n+}\n+\n+impl Table for TableImpl {\n+    /// Apply a projection based on a list of column names\n+    fn select_columns(&self, columns: Vec<&str>) -> Result<Arc<Table>> {\n+        let schema = self.plan.schema();\n+        let mut projection_index: Vec<usize> = Vec::with_capacity(columns.len());\n+        let mut expr: Vec<Expr> = Vec::with_capacity(columns.len());\n+\n+        for column in columns {\n+            match schema.column_with_name(column) {\n+                Some((i, _)) => {\n+                    projection_index.push(i);\n+                    expr.push(Expr::Column(i));\n+                }\n+                _ => {\n+                    return Err(ExecutionError::InvalidColumn(format!(\n+                        \"No column named '{}'\",\n+                        column\n+                    )));\n+                }\n+            }\n+        }\n+\n+        Ok(Arc::new(TableImpl::new(Arc::new(\n+            LogicalPlan::Projection {\n+                expr,\n+                input: self.plan.clone(),\n+                schema: projection(&schema, &projection_index)?,\n+            },\n+        ))))\n+    }\n+\n+    /// Limit the number of rows\n+    fn limit(&self, n: usize) -> Result<Arc<Table>> {\n+        Ok(Arc::new(TableImpl::new(Arc::new(LogicalPlan::Limit {\n+            expr: Literal(ScalarValue::UInt32(n as u32)),\n+            input: self.plan.clone(),\n+            schema: self.plan.schema().clone(),\n+        }))))\n+    }\n+\n+    /// Convert to logical plan\n+    fn to_logical_plan(&self) -> Arc<LogicalPlan> {\n+        self.plan.clone()\n+    }\n+}\n+\n+/// Create a new schema by applying a projection to this schema's fields\n+fn projection(schema: &Schema, projection: &Vec<usize>) -> Result<Arc<Schema>> {\n+    let mut fields: Vec<Field> = Vec::with_capacity(projection.len());\n+    for i in projection {\n+        if *i < schema.fields().len() {\n+            fields.push(schema.field(*i).clone());\n+        } else {\n+            return Err(ExecutionError::InvalidColumn(format!(\n+                \"Invalid column index {} in projection\",\n \n Review comment:\n   No test again.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T01:24:58.054+0000",
                    "updated": "2019-03-27T01:24:58.054+0000",
                    "started": "2019-03-27T01:24:58.053+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219038",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/219085",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on issue #3671: ARROW-4595: [Rust] Implement Table API (a.k.a DataFrame)\nURL: https://github.com/apache/arrow/pull/3671#issuecomment-476958298\n \n \n   Thanks @paddyhoran I will create a follow up PR with more tests.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T03:39:12.141+0000",
                    "updated": "2019-03-27T03:39:12.141+0000",
                    "started": "2019-03-27T03:39:12.140+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219085",
                    "issueId": "13216198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/worklog/219086",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3671: ARROW-4595: [Rust] Implement Table API (a.k.a DataFrame)\nURL: https://github.com/apache/arrow/pull/3671\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T03:40:08.059+0000",
                    "updated": "2019-03-27T03:40:08.059+0000",
                    "started": "2019-03-27T03:40:08.059+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219086",
                    "issueId": "13216198"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1245a4f9[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7096be4f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77c1761a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@32e0da6b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e022656[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@25b9b69b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@59b46590[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6db3df4f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@721c7439[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1af9098f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@609b77a5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1321855e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Mar 27 03:40:00 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-03-27T03:40:00.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4595/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-02-16T23:11:23.000+0000",
        "updated": "2019-03-27T03:40:08.000+0000",
        "timeoriginalestimate": null,
        "description": "We currently can build a logical plan from SQL. We should be able to build the same logical plan from a DataFrame style API as well.\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [DataFusion] Implement DataFrame style API",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216198/comment/16802415",
                    "id": "16802415",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Issue resolved by pull request 3671\n[https://github.com/apache/arrow/pull/3671]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2019-03-27T03:40:00.957+0000",
                    "updated": "2019-03-27T03:40:00.957+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|yi126w:",
        "customfield_12314139": null
    }
}