{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13291548",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548",
    "key": "ARROW-8112",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8112/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 20,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/402808",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615\n \n \n   There are still unmapped status codes, but these are the ones that correspond closely to a gRPC one. (OutOfMemory, for instance, doesn't quite line up with RESOURCE_EXHAUSTED since the latter is intended for some application-level resource like a disk quota, not an internal server error.)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-13T12:53:59.849+0000",
                    "updated": "2020-03-13T12:53:59.849+0000",
                    "started": "2020-03-13T12:53:59.848+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "402808",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/402812",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#issuecomment-598708753\n \n \n   https://issues.apache.org/jira/browse/ARROW-8112\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-13T13:02:52.307+0000",
                    "updated": "2020-03-13T13:02:52.307+0000",
                    "started": "2020-03-13T13:02:52.307+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "402812",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/402817",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on issue #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#issuecomment-598715576\n \n \n   Python is failing and would be fixed by #6614 \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-13T13:19:28.825+0000",
                    "updated": "2020-03-13T13:19:28.825+0000",
                    "started": "2020-03-13T13:19:28.825+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "402817",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/402919",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on issue #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#issuecomment-598762214\n \n \n   @pitrou I implemented the headers idea you suggested.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-13T15:00:14.382+0000",
                    "updated": "2020-03-13T15:00:14.382+0000",
                    "started": "2020-03-13T15:00:14.381+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "402919",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/402921",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#discussion_r392281705\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -45,12 +46,75 @@ namespace flight {\n namespace internal {\n \n const char* kGrpcAuthHeader = \"auth-token-bin\";\n+const char* kGrpcStatusCodeHeader = \"x-arrow-status\";\n+const char* kGrpcStatusMessageHeader = \"x-arrow-status-message-bin\";\n+const char* kGrpcStatusDetailHeader = \"x-arrow-status-detail-bin\";\n+\n+/// Try to extract a status from gRPC trailers. If not found, return\n+/// Status::OK.\n+Status FromGrpcContext(const grpc::ClientContext& ctx) {\n+  const std::multimap<grpc::string_ref, grpc::string_ref> trailers =\n+      ctx.GetServerTrailingMetadata();\n+  const auto code_val = trailers.find(kGrpcStatusCodeHeader);\n+  if (code_val == trailers.end()) {\n+    return Status::OK();\n+  }\n+\n+  // Bounce through std::string to get a proper null-terminated C string\n+  const grpc::string_ref code_ref = (*code_val).second;\n+  const auto code_int = std::atoi(std::string(code_ref.data(), code_ref.size()).c_str());\n+  StatusCode code = StatusCode::OK;\n+  switch (code_int) {\n \n Review comment:\n   Is this worth refactoring out into status.h?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-13T15:00:31.412+0000",
                    "updated": "2020-03-13T15:00:31.412+0000",
                    "started": "2020-03-13T15:00:31.412+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "402921",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/402923",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#discussion_r392282637\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -45,12 +46,75 @@ namespace flight {\n namespace internal {\n \n const char* kGrpcAuthHeader = \"auth-token-bin\";\n+const char* kGrpcStatusCodeHeader = \"x-arrow-status\";\n+const char* kGrpcStatusMessageHeader = \"x-arrow-status-message-bin\";\n+const char* kGrpcStatusDetailHeader = \"x-arrow-status-detail-bin\";\n+\n+/// Try to extract a status from gRPC trailers. If not found, return\n+/// Status::OK.\n+Status FromGrpcContext(const grpc::ClientContext& ctx) {\n+  const std::multimap<grpc::string_ref, grpc::string_ref> trailers =\n+      ctx.GetServerTrailingMetadata();\n+  const auto code_val = trailers.find(kGrpcStatusCodeHeader);\n+  if (code_val == trailers.end()) {\n+    return Status::OK();\n+  }\n+\n+  // Bounce through std::string to get a proper null-terminated C string\n+  const grpc::string_ref code_ref = (*code_val).second;\n+  const auto code_int = std::atoi(std::string(code_ref.data(), code_ref.size()).c_str());\n+  StatusCode code = StatusCode::OK;\n+  switch (code_int) {\n \n Review comment:\n   (this being the int<->statuscode mapping)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-13T15:02:02.377+0000",
                    "updated": "2020-03-13T15:02:02.377+0000",
                    "started": "2020-03-13T15:02:02.376+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "402923",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/403017",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on issue #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#issuecomment-598837686\n \n \n   This is segfaulting in Python tests, taking a look...\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-13T17:39:35.198+0000",
                    "updated": "2020-03-13T17:39:35.198+0000",
                    "started": "2020-03-13T17:39:35.198+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "403017",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/403890",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#discussion_r392958717\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -45,12 +46,75 @@ namespace flight {\n namespace internal {\n \n const char* kGrpcAuthHeader = \"auth-token-bin\";\n+const char* kGrpcStatusCodeHeader = \"x-arrow-status\";\n+const char* kGrpcStatusMessageHeader = \"x-arrow-status-message-bin\";\n+const char* kGrpcStatusDetailHeader = \"x-arrow-status-detail-bin\";\n+\n+/// Try to extract a status from gRPC trailers. If not found, return\n+/// Status::OK.\n+Status FromGrpcContext(const grpc::ClientContext& ctx) {\n+  const std::multimap<grpc::string_ref, grpc::string_ref> trailers =\n+      ctx.GetServerTrailingMetadata();\n+  const auto code_val = trailers.find(kGrpcStatusCodeHeader);\n+  if (code_val == trailers.end()) {\n+    return Status::OK();\n+  }\n+\n+  // Bounce through std::string to get a proper null-terminated C string\n+  const grpc::string_ref code_ref = (*code_val).second;\n+  const auto code_int = std::atoi(std::string(code_ref.data(), code_ref.size()).c_str());\n+  StatusCode code = StatusCode::OK;\n+  switch (code_int) {\n \n Review comment:\n   Hmm... perhaps as a helper function?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-16T11:50:10.814+0000",
                    "updated": "2020-03-16T11:50:10.814+0000",
                    "started": "2020-03-16T11:50:10.813+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "403890",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/403892",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#discussion_r392958838\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -45,12 +46,64 @@ namespace flight {\n namespace internal {\n \n const char* kGrpcAuthHeader = \"auth-token-bin\";\n+const char* kGrpcStatusCodeHeader = \"x-arrow-status\";\n+const char* kGrpcStatusMessageHeader = \"x-arrow-status-message-bin\";\n+const char* kGrpcStatusDetailHeader = \"x-arrow-status-detail-bin\";\n+\n+/// Try to extract a status from gRPC trailers. If not found, return\n+/// Status::OK.\n+Status FromGrpcContext(const grpc::ClientContext& ctx) {\n+  const std::multimap<grpc::string_ref, grpc::string_ref> trailers =\n+      ctx.GetServerTrailingMetadata();\n+  const auto code_val = trailers.find(kGrpcStatusCodeHeader);\n+  if (code_val == trailers.end()) {\n+    return Status::OK();\n+  }\n \n-Status FromGrpcStatus(const grpc::Status& grpc_status) {\n-  if (grpc_status.ok()) {\n+  // Bounce through std::string to get a proper null-terminated C string\n+  const grpc::string_ref code_ref = (*code_val).second;\n+  const auto code_int = std::atoi(std::string(code_ref.data(), code_ref.size()).c_str());\n+  StatusCode code = StatusCode::OK;\n+  switch (code_int) {\n+    case static_cast<int>(StatusCode::OutOfMemory):\n+    case static_cast<int>(StatusCode::KeyError):\n+    case static_cast<int>(StatusCode::TypeError):\n+    case static_cast<int>(StatusCode::Invalid):\n+    case static_cast<int>(StatusCode::IOError):\n+    case static_cast<int>(StatusCode::CapacityError):\n+    case static_cast<int>(StatusCode::IndexError):\n+    case static_cast<int>(StatusCode::UnknownError):\n+    case static_cast<int>(StatusCode::NotImplemented):\n+    case static_cast<int>(StatusCode::SerializationError):\n+    case static_cast<int>(StatusCode::RError):\n+    case static_cast<int>(StatusCode::CodeGenError):\n+    case static_cast<int>(StatusCode::ExpressionValidationError):\n+    case static_cast<int>(StatusCode::ExecutionError):\n+    case static_cast<int>(StatusCode::AlreadyExists): {\n+      code = static_cast<StatusCode>(code_int);\n+      break;\n+    }\n+    default:\n+      // Code is invalid\n+      return Status::OK();\n \n Review comment:\n   Shouldn't we return `Status::UnknownError` here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-16T11:50:10.817+0000",
                    "updated": "2020-03-16T11:50:10.817+0000",
                    "started": "2020-03-16T11:50:10.817+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "403892",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/403891",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#discussion_r392957432\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -45,12 +46,64 @@ namespace flight {\n namespace internal {\n \n const char* kGrpcAuthHeader = \"auth-token-bin\";\n+const char* kGrpcStatusCodeHeader = \"x-arrow-status\";\n+const char* kGrpcStatusMessageHeader = \"x-arrow-status-message-bin\";\n+const char* kGrpcStatusDetailHeader = \"x-arrow-status-detail-bin\";\n+\n+/// Try to extract a status from gRPC trailers. If not found, return\n+/// Status::OK.\n+Status FromGrpcContext(const grpc::ClientContext& ctx) {\n+  const std::multimap<grpc::string_ref, grpc::string_ref> trailers =\n \n Review comment:\n   `const&`, no? It's wasteful to make a copy.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-16T11:50:10.817+0000",
                    "updated": "2020-03-16T11:50:10.817+0000",
                    "started": "2020-03-16T11:50:10.817+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "403891",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/403893",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#discussion_r392960958\n \n \n\n ##########\n File path: cpp/src/arrow/flight/server.cc\n ##########\n @@ -248,6 +250,19 @@ class GrpcServerCallContext : public ServerCallContext {\n     for (const auto& instance : middleware_) {\n       instance->CallCompleted(status);\n     }\n+\n+    // Set custom headers to map the exact Arrow status for clients\n+    // who want it.\n+    if (ARROW_PREDICT_FALSE(!status.ok()) && context_) {\n \n Review comment:\n   Should there be a `ToGrpcStatus(const Status&, grpc::ServerContext* context = nullptr)` instead?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-16T11:50:10.911+0000",
                    "updated": "2020-03-16T11:50:10.911+0000",
                    "started": "2020-03-16T11:50:10.911+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "403893",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/403894",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#discussion_r392960053\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -45,12 +46,64 @@ namespace flight {\n namespace internal {\n \n const char* kGrpcAuthHeader = \"auth-token-bin\";\n+const char* kGrpcStatusCodeHeader = \"x-arrow-status\";\n+const char* kGrpcStatusMessageHeader = \"x-arrow-status-message-bin\";\n+const char* kGrpcStatusDetailHeader = \"x-arrow-status-detail-bin\";\n+\n+/// Try to extract a status from gRPC trailers. If not found, return\n+/// Status::OK.\n+Status FromGrpcContext(const grpc::ClientContext& ctx) {\n+  const std::multimap<grpc::string_ref, grpc::string_ref> trailers =\n+      ctx.GetServerTrailingMetadata();\n+  const auto code_val = trailers.find(kGrpcStatusCodeHeader);\n+  if (code_val == trailers.end()) {\n+    return Status::OK();\n+  }\n \n-Status FromGrpcStatus(const grpc::Status& grpc_status) {\n-  if (grpc_status.ok()) {\n+  // Bounce through std::string to get a proper null-terminated C string\n+  const grpc::string_ref code_ref = (*code_val).second;\n+  const auto code_int = std::atoi(std::string(code_ref.data(), code_ref.size()).c_str());\n+  StatusCode code = StatusCode::OK;\n+  switch (code_int) {\n+    case static_cast<int>(StatusCode::OutOfMemory):\n+    case static_cast<int>(StatusCode::KeyError):\n+    case static_cast<int>(StatusCode::TypeError):\n+    case static_cast<int>(StatusCode::Invalid):\n+    case static_cast<int>(StatusCode::IOError):\n+    case static_cast<int>(StatusCode::CapacityError):\n+    case static_cast<int>(StatusCode::IndexError):\n+    case static_cast<int>(StatusCode::UnknownError):\n+    case static_cast<int>(StatusCode::NotImplemented):\n+    case static_cast<int>(StatusCode::SerializationError):\n+    case static_cast<int>(StatusCode::RError):\n+    case static_cast<int>(StatusCode::CodeGenError):\n+    case static_cast<int>(StatusCode::ExpressionValidationError):\n+    case static_cast<int>(StatusCode::ExecutionError):\n+    case static_cast<int>(StatusCode::AlreadyExists): {\n+      code = static_cast<StatusCode>(code_int);\n+      break;\n+    }\n+    default:\n+      // Code is invalid\n+      return Status::OK();\n+  }\n+\n+  const auto message_val = trailers.find(kGrpcStatusMessageHeader);\n+  const grpc::string_ref message_ref = (*message_val).second;\n \n Review comment:\n   Shouldn't this be moved after the `if (message_val == trailers.end()) { ... }` clause?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-16T11:50:10.915+0000",
                    "updated": "2020-03-16T11:50:10.915+0000",
                    "started": "2020-03-16T11:50:10.914+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "403894",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/403895",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#discussion_r392959471\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -123,6 +176,25 @@ Status FromGrpcStatus(const grpc::Status& grpc_status) {\n   }\n }\n \n+Status FromGrpcStatus(const grpc::Status& grpc_status, grpc::ClientContext* ctx) {\n+  if (grpc_status.ok()) {\n+    return Status::OK();\n+  }\n+\n+  const Status& status = FromGrpcCode(grpc_status);\n \n Review comment:\n   I'm not sure `const Status&` is correct, since `FromGrpcCode` returns a copy. You must keep the returned instance alive as a value.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-16T11:50:10.915+0000",
                    "updated": "2020-03-16T11:50:10.915+0000",
                    "started": "2020-03-16T11:50:10.915+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "403895",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/403941",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#discussion_r393010007\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -45,12 +46,75 @@ namespace flight {\n namespace internal {\n \n const char* kGrpcAuthHeader = \"auth-token-bin\";\n+const char* kGrpcStatusCodeHeader = \"x-arrow-status\";\n+const char* kGrpcStatusMessageHeader = \"x-arrow-status-message-bin\";\n+const char* kGrpcStatusDetailHeader = \"x-arrow-status-detail-bin\";\n+\n+/// Try to extract a status from gRPC trailers. If not found, return\n+/// Status::OK.\n+Status FromGrpcContext(const grpc::ClientContext& ctx) {\n+  const std::multimap<grpc::string_ref, grpc::string_ref> trailers =\n+      ctx.GetServerTrailingMetadata();\n+  const auto code_val = trailers.find(kGrpcStatusCodeHeader);\n+  if (code_val == trailers.end()) {\n+    return Status::OK();\n+  }\n+\n+  // Bounce through std::string to get a proper null-terminated C string\n+  const grpc::string_ref code_ref = (*code_val).second;\n+  const auto code_int = std::atoi(std::string(code_ref.data(), code_ref.size()).c_str());\n+  StatusCode code = StatusCode::OK;\n+  switch (code_int) {\n \n Review comment:\n   I've made a helper function, but kept it internal, since there doesn't seem to be a need to serialize statuses outside of Flight.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-16T13:08:53.252+0000",
                    "updated": "2020-03-16T13:08:53.252+0000",
                    "started": "2020-03-16T13:08:53.252+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "403941",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/403942",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#discussion_r393010148\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -45,12 +46,64 @@ namespace flight {\n namespace internal {\n \n const char* kGrpcAuthHeader = \"auth-token-bin\";\n+const char* kGrpcStatusCodeHeader = \"x-arrow-status\";\n+const char* kGrpcStatusMessageHeader = \"x-arrow-status-message-bin\";\n+const char* kGrpcStatusDetailHeader = \"x-arrow-status-detail-bin\";\n+\n+/// Try to extract a status from gRPC trailers. If not found, return\n+/// Status::OK.\n+Status FromGrpcContext(const grpc::ClientContext& ctx) {\n+  const std::multimap<grpc::string_ref, grpc::string_ref> trailers =\n \n Review comment:\n   Made this const&, yes.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-16T13:09:08.080+0000",
                    "updated": "2020-03-16T13:09:08.080+0000",
                    "started": "2020-03-16T13:09:08.080+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "403942",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/403943",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#discussion_r393010360\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -45,12 +46,64 @@ namespace flight {\n namespace internal {\n \n const char* kGrpcAuthHeader = \"auth-token-bin\";\n+const char* kGrpcStatusCodeHeader = \"x-arrow-status\";\n+const char* kGrpcStatusMessageHeader = \"x-arrow-status-message-bin\";\n+const char* kGrpcStatusDetailHeader = \"x-arrow-status-detail-bin\";\n+\n+/// Try to extract a status from gRPC trailers. If not found, return\n+/// Status::OK.\n+Status FromGrpcContext(const grpc::ClientContext& ctx) {\n+  const std::multimap<grpc::string_ref, grpc::string_ref> trailers =\n+      ctx.GetServerTrailingMetadata();\n+  const auto code_val = trailers.find(kGrpcStatusCodeHeader);\n+  if (code_val == trailers.end()) {\n+    return Status::OK();\n+  }\n \n-Status FromGrpcStatus(const grpc::Status& grpc_status) {\n-  if (grpc_status.ok()) {\n+  // Bounce through std::string to get a proper null-terminated C string\n+  const grpc::string_ref code_ref = (*code_val).second;\n+  const auto code_int = std::atoi(std::string(code_ref.data(), code_ref.size()).c_str());\n+  StatusCode code = StatusCode::OK;\n+  switch (code_int) {\n+    case static_cast<int>(StatusCode::OutOfMemory):\n+    case static_cast<int>(StatusCode::KeyError):\n+    case static_cast<int>(StatusCode::TypeError):\n+    case static_cast<int>(StatusCode::Invalid):\n+    case static_cast<int>(StatusCode::IOError):\n+    case static_cast<int>(StatusCode::CapacityError):\n+    case static_cast<int>(StatusCode::IndexError):\n+    case static_cast<int>(StatusCode::UnknownError):\n+    case static_cast<int>(StatusCode::NotImplemented):\n+    case static_cast<int>(StatusCode::SerializationError):\n+    case static_cast<int>(StatusCode::RError):\n+    case static_cast<int>(StatusCode::CodeGenError):\n+    case static_cast<int>(StatusCode::ExpressionValidationError):\n+    case static_cast<int>(StatusCode::ExecutionError):\n+    case static_cast<int>(StatusCode::AlreadyExists): {\n+      code = static_cast<StatusCode>(code_int);\n+      break;\n+    }\n+    default:\n+      // Code is invalid\n+      return Status::OK();\n \n Review comment:\n   I've reworked the function to distinguish between its own error status and the status it's constructing.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-16T13:09:31.824+0000",
                    "updated": "2020-03-16T13:09:31.824+0000",
                    "started": "2020-03-16T13:09:31.824+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "403943",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/403944",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#discussion_r393010559\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -45,12 +46,64 @@ namespace flight {\n namespace internal {\n \n const char* kGrpcAuthHeader = \"auth-token-bin\";\n+const char* kGrpcStatusCodeHeader = \"x-arrow-status\";\n+const char* kGrpcStatusMessageHeader = \"x-arrow-status-message-bin\";\n+const char* kGrpcStatusDetailHeader = \"x-arrow-status-detail-bin\";\n+\n+/// Try to extract a status from gRPC trailers. If not found, return\n+/// Status::OK.\n+Status FromGrpcContext(const grpc::ClientContext& ctx) {\n+  const std::multimap<grpc::string_ref, grpc::string_ref> trailers =\n+      ctx.GetServerTrailingMetadata();\n+  const auto code_val = trailers.find(kGrpcStatusCodeHeader);\n+  if (code_val == trailers.end()) {\n+    return Status::OK();\n+  }\n \n-Status FromGrpcStatus(const grpc::Status& grpc_status) {\n-  if (grpc_status.ok()) {\n+  // Bounce through std::string to get a proper null-terminated C string\n+  const grpc::string_ref code_ref = (*code_val).second;\n+  const auto code_int = std::atoi(std::string(code_ref.data(), code_ref.size()).c_str());\n+  StatusCode code = StatusCode::OK;\n+  switch (code_int) {\n+    case static_cast<int>(StatusCode::OutOfMemory):\n+    case static_cast<int>(StatusCode::KeyError):\n+    case static_cast<int>(StatusCode::TypeError):\n+    case static_cast<int>(StatusCode::Invalid):\n+    case static_cast<int>(StatusCode::IOError):\n+    case static_cast<int>(StatusCode::CapacityError):\n+    case static_cast<int>(StatusCode::IndexError):\n+    case static_cast<int>(StatusCode::UnknownError):\n+    case static_cast<int>(StatusCode::NotImplemented):\n+    case static_cast<int>(StatusCode::SerializationError):\n+    case static_cast<int>(StatusCode::RError):\n+    case static_cast<int>(StatusCode::CodeGenError):\n+    case static_cast<int>(StatusCode::ExpressionValidationError):\n+    case static_cast<int>(StatusCode::ExecutionError):\n+    case static_cast<int>(StatusCode::AlreadyExists): {\n+      code = static_cast<StatusCode>(code_int);\n+      break;\n+    }\n+    default:\n+      // Code is invalid\n+      return Status::OK();\n+  }\n+\n+  const auto message_val = trailers.find(kGrpcStatusMessageHeader);\n+  const grpc::string_ref message_ref = (*message_val).second;\n \n Review comment:\n   Yes, good catch! Unluckily this mistake didn't fail any tests...\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-16T13:09:56.183+0000",
                    "updated": "2020-03-16T13:09:56.183+0000",
                    "started": "2020-03-16T13:09:56.182+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "403944",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/403945",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#discussion_r393010673\n \n \n\n ##########\n File path: cpp/src/arrow/flight/server.cc\n ##########\n @@ -248,6 +250,19 @@ class GrpcServerCallContext : public ServerCallContext {\n     for (const auto& instance : middleware_) {\n       instance->CallCompleted(status);\n     }\n+\n+    // Set custom headers to map the exact Arrow status for clients\n+    // who want it.\n+    if (ARROW_PREDICT_FALSE(!status.ok()) && context_) {\n \n Review comment:\n   Yes, I've reworked it to keep the logic internal to internal.cc now.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-16T13:10:08.495+0000",
                    "updated": "2020-03-16T13:10:08.495+0000",
                    "started": "2020-03-16T13:10:08.495+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "403945",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/404668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T12:41:20.774+0000",
                    "updated": "2020-03-17T12:41:20.774+0000",
                    "started": "2020-03-17T12:41:20.774+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404668",
                    "issueId": "13291548"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/worklog/404670",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #6615: ARROW-8112: [FlightRPC][C++] make sure status codes round-trip through gRPC\nURL: https://github.com/apache/arrow/pull/6615#issuecomment-600048910\n \n \n   Thank you @lidavidm !\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T12:41:43.712+0000",
                    "updated": "2020-03-17T12:41:43.712+0000",
                    "started": "2020-03-17T12:41:43.711+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404670",
                    "issueId": "13291548"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@461fe197[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3efe9ba2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7af6d06e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@301f6719[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6639611f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@41546dd9[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@d6da03d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@46813926[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b1d9970[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@9451b6f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@69c92e32[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@26ce6224[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Mar 17 12:41:20 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-03-17T12:41:20.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8112/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-03-13T12:50:34.000+0000",
        "updated": "2020-03-17T12:41:43.000+0000",
        "timeoriginalestimate": null,
        "description": "KeyError and AlreadyExists don't fully round-trip, instead becoming UNKNOWN. There are others, but we don't attempt to map all the Arrow status to a gRPC status, only the ones that closely correspond to a gRPC error.\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[FlightRPC][C++] Some status codes don't round-trip through gRPC",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/comment/17058703",
                    "id": "17058703",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Is it reasonably possible to pass the Status code on the side, e.g. as a custom HTTP header? Or is that impossible/too much work?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-03-13T12:52:48.800+0000",
                    "updated": "2020-03-13T12:52:48.800+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/comment/17058726",
                    "id": "17058726",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Yes, it's possible to pass custom headers [~apitrou]. But if we value \"it looks like plain gRPC\" we should try to map to and from gRPC codes IMO.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-03-13T13:29:58.140+0000",
                    "updated": "2020-03-13T13:29:58.140+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/comment/17058727",
                    "id": "17058727",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Well, we can do both: map as much as we can for third-party clients (as a best effort), but also pass a custom header for the Arrow C++ client to read from and faithfully reproduce the original error.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-03-13T13:30:58.926+0000",
                    "updated": "2020-03-13T13:30:58.926+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/comment/17058730",
                    "id": "17058730",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Sure, that makes sense. Let me open a separate issue so that we can track the cross-language work.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-03-13T13:33:08.178+0000",
                    "updated": "2020-03-13T13:33:08.178+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/comment/17058731",
                    "id": "17058731",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Oh, wait, no, that only makes sense in C++.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-03-13T13:33:47.785+0000",
                    "updated": "2020-03-13T13:33:47.785+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291548/comment/17060885",
                    "id": "17060885",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 6615\n[https://github.com/apache/arrow/pull/6615]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-03-17T12:41:20.379+0000",
                    "updated": "2020-03-17T12:41:20.379+0000"
                }
            ],
            "maxResults": 6,
            "total": 6,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ci34:",
        "customfield_12314139": null
    }
}