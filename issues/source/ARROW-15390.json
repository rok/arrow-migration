{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13423767",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767",
    "key": "ARROW-15390",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12631642",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12631642",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "outwardIssue": {
                    "id": "13377860",
                    "key": "ARROW-12735",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377860",
                    "fields": {
                        "summary": "[C++][Dev] Write gdb plugin",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
                            "id": "5",
                            "description": "General wishlist item.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Wish",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334506",
                "id": "12334506",
                "name": "Developer Tools"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332532",
                "id": "12332532",
                "name": "Documentation"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15390/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/worklog/713919",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12241:\nURL: https://github.com/apache/arrow/pull/12241#issuecomment-1020355728\n\n\n   https://issues.apache.org/jira/browse/ARROW-15390\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-24T17:29:17.258+0000",
                    "updated": "2022-01-24T17:29:17.258+0000",
                    "started": "2022-01-24T17:29:17.258+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "713919",
                    "issueId": "13423767"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/worklog/714176",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12241:\nURL: https://github.com/apache/arrow/pull/12241#discussion_r791331084\n\n\n\n##########\nFile path: docs/source/cpp/gdb.rst\n##########\n@@ -0,0 +1,167 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: console\n+\n+==========================\n+Debugging code using Arrow\n+==========================\n+\n+GDB extension for Arrow C++\n+===========================\n+\n+By default, when asked to print the value of a C++ object,\n+`GDB <https://www.sourceware.org/gdb/>`_ displays the contents of its\n+member variables.  However, for C++ objects this does not often yield\n+a very useful output, as C++ classes tend to hide their implementation details\n+behind methods and accessors.\n+\n+For example, here is how a :class:`arrow::Status` instance may be displayed\n+by GDB::\n+\n+   $3 = {\n+     <arrow::util::EqualityComparable<arrow::Status>> = {<No data fields>},\n+     <arrow::util::ToStringOstreamable<arrow::Status>> = {<No data fields>},\n+     members of arrow::Status:\n+     state_ = 0x0\n+   }\n+\n+and here is a :class:`arrow::Decimal128Scalar`::\n+\n+   $4 = (arrow::Decimal128Scalar) {\n+     <arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>> = {\n+       <arrow::internal::PrimitiveScalarBase> = {\n+         <arrow::Scalar> = {\n+           <arrow::util::EqualityComparable<arrow::Scalar>> = {<No data fields>},\n+           members of arrow::Scalar:\n+           _vptr.Scalar = 0x7ffff6870e78 <vtable for arrow::Decimal128Scalar+16>,\n+           type = std::shared_ptr<arrow::DataType> (use count 1, weak count 0) = {\n+             get() = 0x555555ce58a0\n+           },\n+           is_valid = true\n+         }, <No data fields>},\n+       members of arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>:\n+       value = {\n+         <arrow::BasicDecimal128> = {\n+           <arrow::GenericBasicDecimal<arrow::BasicDecimal128, 128, 2>> = {\n+             static kHighWordIndex = <optimized out>,\n+             static kBitWidth = 128,\n+             static kByteWidth = 16,\n+             static LittleEndianArray = <optimized out>,\n+             array_ = {\n+               _M_elems = {[0] = 1234567, [1] = 0}\n+             }\n+           },\n+           members of arrow::BasicDecimal128:\n+           static kMaxPrecision = 38,\n+           static kMaxScale = 38\n+         }, <No data fields>}\n+     }, <No data fields>}\n+\n+Fortunately, GDB also allows custom extensions to override the default printing\n+for specific types.  We provide a\n+`GDB extension <https://github.com/apache/arrow/blob/master/cpp/gdb_arrow.py>`_\n+written in Python that enables pretty-printing for common Arrow C++ classes,\n+so as to enable a more productive debugging experience.  For example,\n+here is how the aforementioned :class:`arrow::Status` instance will be\n+displayed::\n+\n+   $5 = arrow::Status::OK()\n+\n+and here is the same :class:`arrow::Decimal128Scalar` instance as above::\n+\n+   $6 = arrow::Decimal128Scalar of value 123.4567 [precision=10, scale=4]\n+\n+\n+Manual loading\n+--------------\n+\n+To enable the GDB extension for Arrow, you can simply\n+`download it <GDB extension>`_\n+somewhere on your computer and ``source`` it from the GDB prompt::\n+\n+   (gdb) source path/to/gdb_arrow.py\n+\n+You will have to ``source`` it on each new GDB session.  You might want to\n+make this implicit by adding the ``source`` invocation in a\n+`gdbinit <https://sourceware.org/gdb/onlinedocs/gdb/gdbinit-man.html>`_ file.\n+\n+\n+Automatic loading\n+-----------------\n+\n+GDB provides a facility to automatically load scripts or extensions for each\n+object file or library that is involved in a debugging session.  You will need\n+to:\n+\n+1. Find out what the *auto-load* location(s) is/are for your GDB install.\n+   This can be determined using ``show`` subcommands on the GDB prompt;\n+   the answer will depend on the operating system.\n+\n+   Here is an example on Ubuntu::\n+\n+      (gdb) show auto-load scripts-directory\n+      List of directories from which to load auto-loaded scripts is $debugdir:$datadir/auto-load.\n+      (gdb) show data-directory\n+      GDB's data directory is \"/usr/share/gdb\".\n+      (gdb) show debug-file-directory\n+      The directory where separate debug symbols are searched for is \"/usr/lib/debug\".\n+\n+   This tells you that the directories used for auto-loading are\n+   ``$debugdir`` and ``$datadir/auto-load``, which expand to\n+   ``/usr/lib/debug/`` and ``/usr/share/gdb/auto-load`` respectively.\n+\n+2. Find out the full path to the Arrow C++ DLL, *with all symlinks resolved*.\n+   For example, you might have installed Arrow 7.0 in ``/usr/local`` and the\n+   path to the Arrow C++ DLL could then be ``/usr/local/lib/libarrow.so.700.0.0``.\n+\n+3. Determine the actual auto-load script path.  It is computed by *a)* taking\n+   the path of the auto-load directory of your choice, *b)* appending the full\n+   path to the Arrow C++ DLL, *c)* appending ``-gdb.py`` at the tail.\n+\n+   In the example above, if we choose ``/usr/share/gdb/auto-load`` as auto-load\n+   directory, the full path to the auto-load script will have to be\n+   ``/usr/share/gdb/auto-load/usr/local/lib/libarrow.so.700.0.0-gdb.py``.\n+\n+4. Either copy or symlink the `GDB extension`_ to the file path determined\n+   in step 3 above.\n+\n+If everything went well, then as soon as GDB encounters the Arrow C++ DLL,\n+it will automatically load the Arrow GDB extension so as to pretty-print\n+Arrow C++ classes on the display prompt.\n+\n+\n+Supported classes\n+-----------------\n+\n+The Arrow GDB extension provides pretty-printing for the core Arrow C++ classes:\n+\n+* :class:`arrow::DataType` and subclasses\n+* :class:`arrow::Field`, :class:`arrow::Schema` and :class:`arrow::KeyValueMetadata`\n+* :class:`arrow::ArrayData`, :class:`arrow::Array` and subclasses\n+* :class:`arrow::Scalar` and subclasses\n+* :class:`arrow::ChunkedArray`, :class:`arrow::RecordBatch` and :class:`arrow::Table`\n+* :class:`arrow::Datum`\n+\n+Important utility classes are also covered:\n+\n+* :class:`arrow::Status` and :class:`arrow::Result`\n+* :class:`arrow::Buffer` and subclasses\n+* :class:`arrow::Decimal128`, :class:`arrow::Decimal256`\n+* :class:`arrow::util::string_view`, :class:`arrow::util::optional`,\n+  :class:`arrow::util::Variant`\n\nReview comment:\n       We don't have any links for `arrow::Result`, `arrow::util::string_view`, `arrow::util::optional`, or `arrow::util::Variant` (presumably because they aren't contained in some .rst file somewhere)\n\n##########\nFile path: docs/source/cpp/gdb.rst\n##########\n@@ -0,0 +1,167 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: console\n+\n+==========================\n+Debugging code using Arrow\n+==========================\n+\n+GDB extension for Arrow C++\n+===========================\n+\n+By default, when asked to print the value of a C++ object,\n+`GDB <https://www.sourceware.org/gdb/>`_ displays the contents of its\n+member variables.  However, for C++ objects this does not often yield\n+a very useful output, as C++ classes tend to hide their implementation details\n+behind methods and accessors.\n+\n+For example, here is how a :class:`arrow::Status` instance may be displayed\n+by GDB::\n+\n+   $3 = {\n+     <arrow::util::EqualityComparable<arrow::Status>> = {<No data fields>},\n+     <arrow::util::ToStringOstreamable<arrow::Status>> = {<No data fields>},\n+     members of arrow::Status:\n+     state_ = 0x0\n+   }\n+\n+and here is a :class:`arrow::Decimal128Scalar`::\n+\n+   $4 = (arrow::Decimal128Scalar) {\n+     <arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>> = {\n+       <arrow::internal::PrimitiveScalarBase> = {\n+         <arrow::Scalar> = {\n+           <arrow::util::EqualityComparable<arrow::Scalar>> = {<No data fields>},\n+           members of arrow::Scalar:\n+           _vptr.Scalar = 0x7ffff6870e78 <vtable for arrow::Decimal128Scalar+16>,\n+           type = std::shared_ptr<arrow::DataType> (use count 1, weak count 0) = {\n+             get() = 0x555555ce58a0\n+           },\n+           is_valid = true\n+         }, <No data fields>},\n+       members of arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>:\n+       value = {\n+         <arrow::BasicDecimal128> = {\n+           <arrow::GenericBasicDecimal<arrow::BasicDecimal128, 128, 2>> = {\n+             static kHighWordIndex = <optimized out>,\n+             static kBitWidth = 128,\n+             static kByteWidth = 16,\n+             static LittleEndianArray = <optimized out>,\n+             array_ = {\n+               _M_elems = {[0] = 1234567, [1] = 0}\n+             }\n+           },\n+           members of arrow::BasicDecimal128:\n+           static kMaxPrecision = 38,\n+           static kMaxScale = 38\n+         }, <No data fields>}\n+     }, <No data fields>}\n+\n+Fortunately, GDB also allows custom extensions to override the default printing\n+for specific types.  We provide a\n+`GDB extension <https://github.com/apache/arrow/blob/master/cpp/gdb_arrow.py>`_\n+written in Python that enables pretty-printing for common Arrow C++ classes,\n+so as to enable a more productive debugging experience.  For example,\n+here is how the aforementioned :class:`arrow::Status` instance will be\n+displayed::\n+\n+   $5 = arrow::Status::OK()\n+\n+and here is the same :class:`arrow::Decimal128Scalar` instance as above::\n+\n+   $6 = arrow::Decimal128Scalar of value 123.4567 [precision=10, scale=4]\n+\n+\n+Manual loading\n+--------------\n+\n+To enable the GDB extension for Arrow, you can simply\n+`download it <GDB extension>`_\n+somewhere on your computer and ``source`` it from the GDB prompt::\n+\n+   (gdb) source path/to/gdb_arrow.py\n+\n+You will have to ``source`` it on each new GDB session.  You might want to\n+make this implicit by adding the ``source`` invocation in a\n+`gdbinit <https://sourceware.org/gdb/onlinedocs/gdb/gdbinit-man.html>`_ file.\n+\n+\n+Automatic loading\n+-----------------\n+\n+GDB provides a facility to automatically load scripts or extensions for each\n+object file or library that is involved in a debugging session.  You will need\n+to:\n+\n+1. Find out what the *auto-load* location(s) is/are for your GDB install.\n\nReview comment:\n       ```suggestion\r\n   1. Find out what the *auto-load* locations are for your GDB install.\r\n   ```\r\n   We can probably stick with the plural here, even if there could possibly be multiple locations.  It's just a touch easier to read.\n\n##########\nFile path: docs/source/cpp/api/utilities.rst\n##########\n@@ -26,6 +26,10 @@ Decimal Numbers\n    :project: arrow_cpp\n    :members:\n \n+.. doxygenclass:: arrow::Decimal256\n+   :project: arrow_cpp\n\nReview comment:\n       Seems we are a little inconsistent on whether we specify [`:project:`](https://breathe.readthedocs.io/en/v2.0.0/directives.html#directives) or not.  `arrow_cpp` is the [default](https://github.com/apache/arrow/blob/master/docs/source/conf.py#L88) so this should be redundant.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-25T03:43:39.166+0000",
                    "updated": "2022-01-25T03:43:39.166+0000",
                    "started": "2022-01-25T03:43:39.166+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "714176",
                    "issueId": "13423767"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/worklog/714178",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12241:\nURL: https://github.com/apache/arrow/pull/12241#discussion_r791327061\n\n\n\n##########\nFile path: docs/source/cpp/gdb.rst\n##########\n@@ -0,0 +1,167 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: console\n+\n+==========================\n+Debugging code using Arrow\n+==========================\n+\n+GDB extension for Arrow C++\n+===========================\n+\n+By default, when asked to print the value of a C++ object,\n+`GDB <https://www.sourceware.org/gdb/>`_ displays the contents of its\n+member variables.  However, for C++ objects this does not often yield\n+a very useful output, as C++ classes tend to hide their implementation details\n+behind methods and accessors.\n+\n+For example, here is how a :class:`arrow::Status` instance may be displayed\n+by GDB::\n+\n+   $3 = {\n+     <arrow::util::EqualityComparable<arrow::Status>> = {<No data fields>},\n+     <arrow::util::ToStringOstreamable<arrow::Status>> = {<No data fields>},\n+     members of arrow::Status:\n+     state_ = 0x0\n+   }\n+\n+and here is a :class:`arrow::Decimal128Scalar`::\n+\n+   $4 = (arrow::Decimal128Scalar) {\n+     <arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>> = {\n+       <arrow::internal::PrimitiveScalarBase> = {\n+         <arrow::Scalar> = {\n+           <arrow::util::EqualityComparable<arrow::Scalar>> = {<No data fields>},\n+           members of arrow::Scalar:\n+           _vptr.Scalar = 0x7ffff6870e78 <vtable for arrow::Decimal128Scalar+16>,\n+           type = std::shared_ptr<arrow::DataType> (use count 1, weak count 0) = {\n+             get() = 0x555555ce58a0\n+           },\n+           is_valid = true\n+         }, <No data fields>},\n+       members of arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>:\n+       value = {\n+         <arrow::BasicDecimal128> = {\n+           <arrow::GenericBasicDecimal<arrow::BasicDecimal128, 128, 2>> = {\n+             static kHighWordIndex = <optimized out>,\n+             static kBitWidth = 128,\n+             static kByteWidth = 16,\n+             static LittleEndianArray = <optimized out>,\n+             array_ = {\n+               _M_elems = {[0] = 1234567, [1] = 0}\n+             }\n+           },\n+           members of arrow::BasicDecimal128:\n+           static kMaxPrecision = 38,\n+           static kMaxScale = 38\n+         }, <No data fields>}\n+     }, <No data fields>}\n+\n+Fortunately, GDB also allows custom extensions to override the default printing\n+for specific types.  We provide a\n+`GDB extension <https://github.com/apache/arrow/blob/master/cpp/gdb_arrow.py>`_\n+written in Python that enables pretty-printing for common Arrow C++ classes,\n+so as to enable a more productive debugging experience.  For example,\n+here is how the aforementioned :class:`arrow::Status` instance will be\n+displayed::\n+\n+   $5 = arrow::Status::OK()\n+\n+and here is the same :class:`arrow::Decimal128Scalar` instance as above::\n+\n+   $6 = arrow::Decimal128Scalar of value 123.4567 [precision=10, scale=4]\n+\n+\n+Manual loading\n+--------------\n+\n+To enable the GDB extension for Arrow, you can simply\n+`download it <GDB extension>`_\n+somewhere on your computer and ``source`` it from the GDB prompt::\n+\n+   (gdb) source path/to/gdb_arrow.py\n+\n+You will have to ``source`` it on each new GDB session.  You might want to\n+make this implicit by adding the ``source`` invocation in a\n+`gdbinit <https://sourceware.org/gdb/onlinedocs/gdb/gdbinit-man.html>`_ file.\n+\n+\n+Automatic loading\n+-----------------\n+\n+GDB provides a facility to automatically load scripts or extensions for each\n+object file or library that is involved in a debugging session.  You will need\n+to:\n+\n+1. Find out what the *auto-load* location(s) is/are for your GDB install.\n\nReview comment:\n       ```suggestion\r\n   1. Find out what the *auto-load* locations are for your GDB install.\r\n   ```\r\n   We can probably stick with the plural here, even if there could possibly be one location.  It's just a touch easier to read.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-25T03:51:34.525+0000",
                    "updated": "2022-01-25T03:51:34.525+0000",
                    "started": "2022-01-25T03:51:34.525+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "714178",
                    "issueId": "13423767"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/worklog/714649",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #12241:\nURL: https://github.com/apache/arrow/pull/12241#issuecomment-1021372441\n\n\n   > Do we want to mention anything around versioning? Should I always use the latest `gdb_arrow.py` regardless of my arrow version? Is there a minimum version of arrow I need so I can use `gdb_arrow.py`?\r\n   \r\n   That's a good question and I hesitated adding some notes about that.\r\n   Basically:\r\n   1. The GDB extension may evolve in the future (for example to display Array data, see https://issues.apache.org/jira/browse/ARROW-15389), so it's better in that regard to use the latest version\r\n   2. The GDB extension relies on Arrow internals, so ideally you should match the GDB extension version with the libarrow version, but in practice the internals of Arrow core classes hasn't really changed recently, so that probably won't matter soon\r\n   \r\n   All in all, I'd rather avoid saying something about this for now, because there's nothing definite we can say.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-25T16:27:56.257+0000",
                    "updated": "2022-01-25T16:27:56.257+0000",
                    "started": "2022-01-25T16:27:56.257+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "714649",
                    "issueId": "13423767"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/worklog/714741",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #12241:\nURL: https://github.com/apache/arrow/pull/12241#issuecomment-1021372441\n\n\n   > Do we want to mention anything around versioning? Should I always use the latest `gdb_arrow.py` regardless of my arrow version? Is there a minimum version of arrow I need so I can use `gdb_arrow.py`?\r\n   \r\n   That's a good question and I hesitated adding some notes about that.\r\n   Basically:\r\n   1. The GDB extension may evolve in the future (for example to display Array data, see https://issues.apache.org/jira/browse/ARROW-15389), so it's better in that regard to use the latest version\r\n   2. The GDB extension relies on Arrow internals, so ideally you should match the GDB extension version with the libarrow version, but in practice the internals of Arrow core classes hasn't really changed recently, so that probably won't matter soon\r\n   \r\n   All in all, I'd rather avoid saying something about this for now, because there's nothing definite we can say.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-25T16:43:45.633+0000",
                    "updated": "2022-01-25T16:43:45.633+0000",
                    "started": "2022-01-25T16:43:45.633+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "714741",
                    "issueId": "13423767"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/worklog/714856",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12241:\nURL: https://github.com/apache/arrow/pull/12241#discussion_r791331084\n\n\n\n##########\nFile path: docs/source/cpp/gdb.rst\n##########\n@@ -0,0 +1,167 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: console\n+\n+==========================\n+Debugging code using Arrow\n+==========================\n+\n+GDB extension for Arrow C++\n+===========================\n+\n+By default, when asked to print the value of a C++ object,\n+`GDB <https://www.sourceware.org/gdb/>`_ displays the contents of its\n+member variables.  However, for C++ objects this does not often yield\n+a very useful output, as C++ classes tend to hide their implementation details\n+behind methods and accessors.\n+\n+For example, here is how a :class:`arrow::Status` instance may be displayed\n+by GDB::\n+\n+   $3 = {\n+     <arrow::util::EqualityComparable<arrow::Status>> = {<No data fields>},\n+     <arrow::util::ToStringOstreamable<arrow::Status>> = {<No data fields>},\n+     members of arrow::Status:\n+     state_ = 0x0\n+   }\n+\n+and here is a :class:`arrow::Decimal128Scalar`::\n+\n+   $4 = (arrow::Decimal128Scalar) {\n+     <arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>> = {\n+       <arrow::internal::PrimitiveScalarBase> = {\n+         <arrow::Scalar> = {\n+           <arrow::util::EqualityComparable<arrow::Scalar>> = {<No data fields>},\n+           members of arrow::Scalar:\n+           _vptr.Scalar = 0x7ffff6870e78 <vtable for arrow::Decimal128Scalar+16>,\n+           type = std::shared_ptr<arrow::DataType> (use count 1, weak count 0) = {\n+             get() = 0x555555ce58a0\n+           },\n+           is_valid = true\n+         }, <No data fields>},\n+       members of arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>:\n+       value = {\n+         <arrow::BasicDecimal128> = {\n+           <arrow::GenericBasicDecimal<arrow::BasicDecimal128, 128, 2>> = {\n+             static kHighWordIndex = <optimized out>,\n+             static kBitWidth = 128,\n+             static kByteWidth = 16,\n+             static LittleEndianArray = <optimized out>,\n+             array_ = {\n+               _M_elems = {[0] = 1234567, [1] = 0}\n+             }\n+           },\n+           members of arrow::BasicDecimal128:\n+           static kMaxPrecision = 38,\n+           static kMaxScale = 38\n+         }, <No data fields>}\n+     }, <No data fields>}\n+\n+Fortunately, GDB also allows custom extensions to override the default printing\n+for specific types.  We provide a\n+`GDB extension <https://github.com/apache/arrow/blob/master/cpp/gdb_arrow.py>`_\n+written in Python that enables pretty-printing for common Arrow C++ classes,\n+so as to enable a more productive debugging experience.  For example,\n+here is how the aforementioned :class:`arrow::Status` instance will be\n+displayed::\n+\n+   $5 = arrow::Status::OK()\n+\n+and here is the same :class:`arrow::Decimal128Scalar` instance as above::\n+\n+   $6 = arrow::Decimal128Scalar of value 123.4567 [precision=10, scale=4]\n+\n+\n+Manual loading\n+--------------\n+\n+To enable the GDB extension for Arrow, you can simply\n+`download it <GDB extension>`_\n+somewhere on your computer and ``source`` it from the GDB prompt::\n+\n+   (gdb) source path/to/gdb_arrow.py\n+\n+You will have to ``source`` it on each new GDB session.  You might want to\n+make this implicit by adding the ``source`` invocation in a\n+`gdbinit <https://sourceware.org/gdb/onlinedocs/gdb/gdbinit-man.html>`_ file.\n+\n+\n+Automatic loading\n+-----------------\n+\n+GDB provides a facility to automatically load scripts or extensions for each\n+object file or library that is involved in a debugging session.  You will need\n+to:\n+\n+1. Find out what the *auto-load* location(s) is/are for your GDB install.\n+   This can be determined using ``show`` subcommands on the GDB prompt;\n+   the answer will depend on the operating system.\n+\n+   Here is an example on Ubuntu::\n+\n+      (gdb) show auto-load scripts-directory\n+      List of directories from which to load auto-loaded scripts is $debugdir:$datadir/auto-load.\n+      (gdb) show data-directory\n+      GDB's data directory is \"/usr/share/gdb\".\n+      (gdb) show debug-file-directory\n+      The directory where separate debug symbols are searched for is \"/usr/lib/debug\".\n+\n+   This tells you that the directories used for auto-loading are\n+   ``$debugdir`` and ``$datadir/auto-load``, which expand to\n+   ``/usr/lib/debug/`` and ``/usr/share/gdb/auto-load`` respectively.\n+\n+2. Find out the full path to the Arrow C++ DLL, *with all symlinks resolved*.\n+   For example, you might have installed Arrow 7.0 in ``/usr/local`` and the\n+   path to the Arrow C++ DLL could then be ``/usr/local/lib/libarrow.so.700.0.0``.\n+\n+3. Determine the actual auto-load script path.  It is computed by *a)* taking\n+   the path of the auto-load directory of your choice, *b)* appending the full\n+   path to the Arrow C++ DLL, *c)* appending ``-gdb.py`` at the tail.\n+\n+   In the example above, if we choose ``/usr/share/gdb/auto-load`` as auto-load\n+   directory, the full path to the auto-load script will have to be\n+   ``/usr/share/gdb/auto-load/usr/local/lib/libarrow.so.700.0.0-gdb.py``.\n+\n+4. Either copy or symlink the `GDB extension`_ to the file path determined\n+   in step 3 above.\n+\n+If everything went well, then as soon as GDB encounters the Arrow C++ DLL,\n+it will automatically load the Arrow GDB extension so as to pretty-print\n+Arrow C++ classes on the display prompt.\n+\n+\n+Supported classes\n+-----------------\n+\n+The Arrow GDB extension provides pretty-printing for the core Arrow C++ classes:\n+\n+* :class:`arrow::DataType` and subclasses\n+* :class:`arrow::Field`, :class:`arrow::Schema` and :class:`arrow::KeyValueMetadata`\n+* :class:`arrow::ArrayData`, :class:`arrow::Array` and subclasses\n+* :class:`arrow::Scalar` and subclasses\n+* :class:`arrow::ChunkedArray`, :class:`arrow::RecordBatch` and :class:`arrow::Table`\n+* :class:`arrow::Datum`\n+\n+Important utility classes are also covered:\n+\n+* :class:`arrow::Status` and :class:`arrow::Result`\n+* :class:`arrow::Buffer` and subclasses\n+* :class:`arrow::Decimal128`, :class:`arrow::Decimal256`\n+* :class:`arrow::util::string_view`, :class:`arrow::util::optional`,\n+  :class:`arrow::util::Variant`\n\nReview comment:\n       We don't have any links for `arrow::Result`, `arrow::util::string_view`, `arrow::util::optional`, or `arrow::util::Variant` (presumably because they aren't contained in some .rst file somewhere)\n\n##########\nFile path: docs/source/cpp/gdb.rst\n##########\n@@ -0,0 +1,167 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: console\n+\n+==========================\n+Debugging code using Arrow\n+==========================\n+\n+GDB extension for Arrow C++\n+===========================\n+\n+By default, when asked to print the value of a C++ object,\n+`GDB <https://www.sourceware.org/gdb/>`_ displays the contents of its\n+member variables.  However, for C++ objects this does not often yield\n+a very useful output, as C++ classes tend to hide their implementation details\n+behind methods and accessors.\n+\n+For example, here is how a :class:`arrow::Status` instance may be displayed\n+by GDB::\n+\n+   $3 = {\n+     <arrow::util::EqualityComparable<arrow::Status>> = {<No data fields>},\n+     <arrow::util::ToStringOstreamable<arrow::Status>> = {<No data fields>},\n+     members of arrow::Status:\n+     state_ = 0x0\n+   }\n+\n+and here is a :class:`arrow::Decimal128Scalar`::\n+\n+   $4 = (arrow::Decimal128Scalar) {\n+     <arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>> = {\n+       <arrow::internal::PrimitiveScalarBase> = {\n+         <arrow::Scalar> = {\n+           <arrow::util::EqualityComparable<arrow::Scalar>> = {<No data fields>},\n+           members of arrow::Scalar:\n+           _vptr.Scalar = 0x7ffff6870e78 <vtable for arrow::Decimal128Scalar+16>,\n+           type = std::shared_ptr<arrow::DataType> (use count 1, weak count 0) = {\n+             get() = 0x555555ce58a0\n+           },\n+           is_valid = true\n+         }, <No data fields>},\n+       members of arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>:\n+       value = {\n+         <arrow::BasicDecimal128> = {\n+           <arrow::GenericBasicDecimal<arrow::BasicDecimal128, 128, 2>> = {\n+             static kHighWordIndex = <optimized out>,\n+             static kBitWidth = 128,\n+             static kByteWidth = 16,\n+             static LittleEndianArray = <optimized out>,\n+             array_ = {\n+               _M_elems = {[0] = 1234567, [1] = 0}\n+             }\n+           },\n+           members of arrow::BasicDecimal128:\n+           static kMaxPrecision = 38,\n+           static kMaxScale = 38\n+         }, <No data fields>}\n+     }, <No data fields>}\n+\n+Fortunately, GDB also allows custom extensions to override the default printing\n+for specific types.  We provide a\n+`GDB extension <https://github.com/apache/arrow/blob/master/cpp/gdb_arrow.py>`_\n+written in Python that enables pretty-printing for common Arrow C++ classes,\n+so as to enable a more productive debugging experience.  For example,\n+here is how the aforementioned :class:`arrow::Status` instance will be\n+displayed::\n+\n+   $5 = arrow::Status::OK()\n+\n+and here is the same :class:`arrow::Decimal128Scalar` instance as above::\n+\n+   $6 = arrow::Decimal128Scalar of value 123.4567 [precision=10, scale=4]\n+\n+\n+Manual loading\n+--------------\n+\n+To enable the GDB extension for Arrow, you can simply\n+`download it <GDB extension>`_\n+somewhere on your computer and ``source`` it from the GDB prompt::\n+\n+   (gdb) source path/to/gdb_arrow.py\n+\n+You will have to ``source`` it on each new GDB session.  You might want to\n+make this implicit by adding the ``source`` invocation in a\n+`gdbinit <https://sourceware.org/gdb/onlinedocs/gdb/gdbinit-man.html>`_ file.\n+\n+\n+Automatic loading\n+-----------------\n+\n+GDB provides a facility to automatically load scripts or extensions for each\n+object file or library that is involved in a debugging session.  You will need\n+to:\n+\n+1. Find out what the *auto-load* location(s) is/are for your GDB install.\n\nReview comment:\n       ```suggestion\r\n   1. Find out what the *auto-load* locations are for your GDB install.\r\n   ```\r\n   We can probably stick with the plural here, even if there could possibly be multiple locations.  It's just a touch easier to read.\n\n##########\nFile path: docs/source/cpp/api/utilities.rst\n##########\n@@ -26,6 +26,10 @@ Decimal Numbers\n    :project: arrow_cpp\n    :members:\n \n+.. doxygenclass:: arrow::Decimal256\n+   :project: arrow_cpp\n\nReview comment:\n       Seems we are a little inconsistent on whether we specify [`:project:`](https://breathe.readthedocs.io/en/v2.0.0/directives.html#directives) or not.  `arrow_cpp` is the [default](https://github.com/apache/arrow/blob/master/docs/source/conf.py#L88) so this should be redundant.\n\n##########\nFile path: docs/source/cpp/gdb.rst\n##########\n@@ -0,0 +1,167 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: console\n+\n+==========================\n+Debugging code using Arrow\n+==========================\n+\n+GDB extension for Arrow C++\n+===========================\n+\n+By default, when asked to print the value of a C++ object,\n+`GDB <https://www.sourceware.org/gdb/>`_ displays the contents of its\n+member variables.  However, for C++ objects this does not often yield\n+a very useful output, as C++ classes tend to hide their implementation details\n+behind methods and accessors.\n+\n+For example, here is how a :class:`arrow::Status` instance may be displayed\n+by GDB::\n+\n+   $3 = {\n+     <arrow::util::EqualityComparable<arrow::Status>> = {<No data fields>},\n+     <arrow::util::ToStringOstreamable<arrow::Status>> = {<No data fields>},\n+     members of arrow::Status:\n+     state_ = 0x0\n+   }\n+\n+and here is a :class:`arrow::Decimal128Scalar`::\n+\n+   $4 = (arrow::Decimal128Scalar) {\n+     <arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>> = {\n+       <arrow::internal::PrimitiveScalarBase> = {\n+         <arrow::Scalar> = {\n+           <arrow::util::EqualityComparable<arrow::Scalar>> = {<No data fields>},\n+           members of arrow::Scalar:\n+           _vptr.Scalar = 0x7ffff6870e78 <vtable for arrow::Decimal128Scalar+16>,\n+           type = std::shared_ptr<arrow::DataType> (use count 1, weak count 0) = {\n+             get() = 0x555555ce58a0\n+           },\n+           is_valid = true\n+         }, <No data fields>},\n+       members of arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>:\n+       value = {\n+         <arrow::BasicDecimal128> = {\n+           <arrow::GenericBasicDecimal<arrow::BasicDecimal128, 128, 2>> = {\n+             static kHighWordIndex = <optimized out>,\n+             static kBitWidth = 128,\n+             static kByteWidth = 16,\n+             static LittleEndianArray = <optimized out>,\n+             array_ = {\n+               _M_elems = {[0] = 1234567, [1] = 0}\n+             }\n+           },\n+           members of arrow::BasicDecimal128:\n+           static kMaxPrecision = 38,\n+           static kMaxScale = 38\n+         }, <No data fields>}\n+     }, <No data fields>}\n+\n+Fortunately, GDB also allows custom extensions to override the default printing\n+for specific types.  We provide a\n+`GDB extension <https://github.com/apache/arrow/blob/master/cpp/gdb_arrow.py>`_\n+written in Python that enables pretty-printing for common Arrow C++ classes,\n+so as to enable a more productive debugging experience.  For example,\n+here is how the aforementioned :class:`arrow::Status` instance will be\n+displayed::\n+\n+   $5 = arrow::Status::OK()\n+\n+and here is the same :class:`arrow::Decimal128Scalar` instance as above::\n+\n+   $6 = arrow::Decimal128Scalar of value 123.4567 [precision=10, scale=4]\n+\n+\n+Manual loading\n+--------------\n+\n+To enable the GDB extension for Arrow, you can simply\n+`download it <GDB extension>`_\n+somewhere on your computer and ``source`` it from the GDB prompt::\n+\n+   (gdb) source path/to/gdb_arrow.py\n+\n+You will have to ``source`` it on each new GDB session.  You might want to\n+make this implicit by adding the ``source`` invocation in a\n+`gdbinit <https://sourceware.org/gdb/onlinedocs/gdb/gdbinit-man.html>`_ file.\n+\n+\n+Automatic loading\n+-----------------\n+\n+GDB provides a facility to automatically load scripts or extensions for each\n+object file or library that is involved in a debugging session.  You will need\n+to:\n+\n+1. Find out what the *auto-load* location(s) is/are for your GDB install.\n\nReview comment:\n       ```suggestion\r\n   1. Find out what the *auto-load* locations are for your GDB install.\r\n   ```\r\n   We can probably stick with the plural here, even if there could possibly be one location.  It's just a touch easier to read.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-25T16:52:53.836+0000",
                    "updated": "2022-01-25T16:52:53.836+0000",
                    "started": "2022-01-25T16:52:53.835+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "714856",
                    "issueId": "13423767"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/worklog/714948",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12241:\nURL: https://github.com/apache/arrow/pull/12241#issuecomment-1020355728\n\n\n   https://issues.apache.org/jira/browse/ARROW-15390\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-25T17:00:42.550+0000",
                    "updated": "2022-01-25T17:00:42.550+0000",
                    "started": "2022-01-25T17:00:42.549+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "714948",
                    "issueId": "13423767"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/worklog/715125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou edited a comment on pull request #12241:\nURL: https://github.com/apache/arrow/pull/12241#issuecomment-1021372441\n\n\n   > Do we want to mention anything around versioning? Should I always use the latest `gdb_arrow.py` regardless of my arrow version? Is there a minimum version of arrow I need so I can use `gdb_arrow.py`?\r\n   \r\n   That's a good question and I hesitated adding some notes about that.\r\n   Basically:\r\n   1. The GDB extension may evolve in the future (for example to display Array data, see https://issues.apache.org/jira/browse/ARROW-15389), so it's better in that regard to use the latest version\r\n   2. The GDB extension relies on Arrow internals, so ideally you should match the GDB extension version with the libarrow version, but in practice the internals of Arrow core classes haven't significantly changed recently, so that probably won't matter soon\r\n   \r\n   All in all, I'd rather avoid saying something about this for now, because there's nothing definite we can say.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-25T17:15:26.514+0000",
                    "updated": "2022-01-25T17:15:26.514+0000",
                    "started": "2022-01-25T17:15:26.513+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "715125",
                    "issueId": "13423767"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/worklog/715140",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12241:\nURL: https://github.com/apache/arrow/pull/12241#discussion_r791910697\n\n\n\n##########\nFile path: docs/source/cpp/api/utilities.rst\n##########\n@@ -26,6 +26,10 @@ Decimal Numbers\n    :project: arrow_cpp\n    :members:\n \n+.. doxygenclass:: arrow::Decimal256\n+   :project: arrow_cpp\n\nReview comment:\n       Hmm, yes, I can try to remove all instances from this file.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-25T17:16:20.243+0000",
                    "updated": "2022-01-25T17:16:20.243+0000",
                    "started": "2022-01-25T17:16:20.242+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "715140",
                    "issueId": "13423767"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/worklog/715179",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12241:\nURL: https://github.com/apache/arrow/pull/12241#discussion_r791984855\n\n\n\n##########\nFile path: docs/source/cpp/gdb.rst\n##########\n@@ -0,0 +1,167 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: console\n+\n+==========================\n+Debugging code using Arrow\n+==========================\n+\n+GDB extension for Arrow C++\n+===========================\n+\n+By default, when asked to print the value of a C++ object,\n+`GDB <https://www.sourceware.org/gdb/>`_ displays the contents of its\n+member variables.  However, for C++ objects this does not often yield\n+a very useful output, as C++ classes tend to hide their implementation details\n+behind methods and accessors.\n+\n+For example, here is how a :class:`arrow::Status` instance may be displayed\n+by GDB::\n+\n+   $3 = {\n+     <arrow::util::EqualityComparable<arrow::Status>> = {<No data fields>},\n+     <arrow::util::ToStringOstreamable<arrow::Status>> = {<No data fields>},\n+     members of arrow::Status:\n+     state_ = 0x0\n+   }\n+\n+and here is a :class:`arrow::Decimal128Scalar`::\n+\n+   $4 = (arrow::Decimal128Scalar) {\n+     <arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>> = {\n+       <arrow::internal::PrimitiveScalarBase> = {\n+         <arrow::Scalar> = {\n+           <arrow::util::EqualityComparable<arrow::Scalar>> = {<No data fields>},\n+           members of arrow::Scalar:\n+           _vptr.Scalar = 0x7ffff6870e78 <vtable for arrow::Decimal128Scalar+16>,\n+           type = std::shared_ptr<arrow::DataType> (use count 1, weak count 0) = {\n+             get() = 0x555555ce58a0\n+           },\n+           is_valid = true\n+         }, <No data fields>},\n+       members of arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>:\n+       value = {\n+         <arrow::BasicDecimal128> = {\n+           <arrow::GenericBasicDecimal<arrow::BasicDecimal128, 128, 2>> = {\n+             static kHighWordIndex = <optimized out>,\n+             static kBitWidth = 128,\n+             static kByteWidth = 16,\n+             static LittleEndianArray = <optimized out>,\n+             array_ = {\n+               _M_elems = {[0] = 1234567, [1] = 0}\n+             }\n+           },\n+           members of arrow::BasicDecimal128:\n+           static kMaxPrecision = 38,\n+           static kMaxScale = 38\n+         }, <No data fields>}\n+     }, <No data fields>}\n+\n+Fortunately, GDB also allows custom extensions to override the default printing\n+for specific types.  We provide a\n+`GDB extension <https://github.com/apache/arrow/blob/master/cpp/gdb_arrow.py>`_\n+written in Python that enables pretty-printing for common Arrow C++ classes,\n+so as to enable a more productive debugging experience.  For example,\n+here is how the aforementioned :class:`arrow::Status` instance will be\n+displayed::\n+\n+   $5 = arrow::Status::OK()\n+\n+and here is the same :class:`arrow::Decimal128Scalar` instance as above::\n+\n+   $6 = arrow::Decimal128Scalar of value 123.4567 [precision=10, scale=4]\n+\n+\n+Manual loading\n+--------------\n+\n+To enable the GDB extension for Arrow, you can simply\n+`download it <GDB extension>`_\n+somewhere on your computer and ``source`` it from the GDB prompt::\n+\n+   (gdb) source path/to/gdb_arrow.py\n+\n+You will have to ``source`` it on each new GDB session.  You might want to\n+make this implicit by adding the ``source`` invocation in a\n+`gdbinit <https://sourceware.org/gdb/onlinedocs/gdb/gdbinit-man.html>`_ file.\n+\n+\n+Automatic loading\n+-----------------\n+\n+GDB provides a facility to automatically load scripts or extensions for each\n+object file or library that is involved in a debugging session.  You will need\n+to:\n+\n+1. Find out what the *auto-load* location(s) is/are for your GDB install.\n+   This can be determined using ``show`` subcommands on the GDB prompt;\n+   the answer will depend on the operating system.\n+\n+   Here is an example on Ubuntu::\n+\n+      (gdb) show auto-load scripts-directory\n+      List of directories from which to load auto-loaded scripts is $debugdir:$datadir/auto-load.\n+      (gdb) show data-directory\n+      GDB's data directory is \"/usr/share/gdb\".\n+      (gdb) show debug-file-directory\n+      The directory where separate debug symbols are searched for is \"/usr/lib/debug\".\n+\n+   This tells you that the directories used for auto-loading are\n+   ``$debugdir`` and ``$datadir/auto-load``, which expand to\n+   ``/usr/lib/debug/`` and ``/usr/share/gdb/auto-load`` respectively.\n+\n+2. Find out the full path to the Arrow C++ DLL, *with all symlinks resolved*.\n+   For example, you might have installed Arrow 7.0 in ``/usr/local`` and the\n+   path to the Arrow C++ DLL could then be ``/usr/local/lib/libarrow.so.700.0.0``.\n+\n+3. Determine the actual auto-load script path.  It is computed by *a)* taking\n+   the path of the auto-load directory of your choice, *b)* appending the full\n+   path to the Arrow C++ DLL, *c)* appending ``-gdb.py`` at the tail.\n+\n+   In the example above, if we choose ``/usr/share/gdb/auto-load`` as auto-load\n+   directory, the full path to the auto-load script will have to be\n+   ``/usr/share/gdb/auto-load/usr/local/lib/libarrow.so.700.0.0-gdb.py``.\n+\n+4. Either copy or symlink the `GDB extension`_ to the file path determined\n+   in step 3 above.\n+\n+If everything went well, then as soon as GDB encounters the Arrow C++ DLL,\n+it will automatically load the Arrow GDB extension so as to pretty-print\n+Arrow C++ classes on the display prompt.\n+\n+\n+Supported classes\n+-----------------\n+\n+The Arrow GDB extension provides pretty-printing for the core Arrow C++ classes:\n+\n+* :class:`arrow::DataType` and subclasses\n+* :class:`arrow::Field`, :class:`arrow::Schema` and :class:`arrow::KeyValueMetadata`\n+* :class:`arrow::ArrayData`, :class:`arrow::Array` and subclasses\n+* :class:`arrow::Scalar` and subclasses\n+* :class:`arrow::ChunkedArray`, :class:`arrow::RecordBatch` and :class:`arrow::Table`\n+* :class:`arrow::Datum`\n+\n+Important utility classes are also covered:\n+\n+* :class:`arrow::Status` and :class:`arrow::Result`\n+* :class:`arrow::Buffer` and subclasses\n+* :class:`arrow::Decimal128`, :class:`arrow::Decimal256`\n+* :class:`arrow::util::string_view`, :class:`arrow::util::optional`,\n+  :class:`arrow::util::Variant`\n\nReview comment:\n       `arrow::Result` actually has a link, but the three others do not. I'm not sure it makes sense to expose, as they are mere backports from C++17 stdlib APIs.\n\n##########\nFile path: docs/source/cpp/gdb.rst\n##########\n@@ -0,0 +1,167 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: console\n+\n+==========================\n+Debugging code using Arrow\n+==========================\n+\n+GDB extension for Arrow C++\n+===========================\n+\n+By default, when asked to print the value of a C++ object,\n+`GDB <https://www.sourceware.org/gdb/>`_ displays the contents of its\n+member variables.  However, for C++ objects this does not often yield\n+a very useful output, as C++ classes tend to hide their implementation details\n+behind methods and accessors.\n+\n+For example, here is how a :class:`arrow::Status` instance may be displayed\n+by GDB::\n+\n+   $3 = {\n+     <arrow::util::EqualityComparable<arrow::Status>> = {<No data fields>},\n+     <arrow::util::ToStringOstreamable<arrow::Status>> = {<No data fields>},\n+     members of arrow::Status:\n+     state_ = 0x0\n+   }\n+\n+and here is a :class:`arrow::Decimal128Scalar`::\n+\n+   $4 = (arrow::Decimal128Scalar) {\n+     <arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>> = {\n+       <arrow::internal::PrimitiveScalarBase> = {\n+         <arrow::Scalar> = {\n+           <arrow::util::EqualityComparable<arrow::Scalar>> = {<No data fields>},\n+           members of arrow::Scalar:\n+           _vptr.Scalar = 0x7ffff6870e78 <vtable for arrow::Decimal128Scalar+16>,\n+           type = std::shared_ptr<arrow::DataType> (use count 1, weak count 0) = {\n+             get() = 0x555555ce58a0\n+           },\n+           is_valid = true\n+         }, <No data fields>},\n+       members of arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>:\n+       value = {\n+         <arrow::BasicDecimal128> = {\n+           <arrow::GenericBasicDecimal<arrow::BasicDecimal128, 128, 2>> = {\n+             static kHighWordIndex = <optimized out>,\n+             static kBitWidth = 128,\n+             static kByteWidth = 16,\n+             static LittleEndianArray = <optimized out>,\n+             array_ = {\n+               _M_elems = {[0] = 1234567, [1] = 0}\n+             }\n+           },\n+           members of arrow::BasicDecimal128:\n+           static kMaxPrecision = 38,\n+           static kMaxScale = 38\n+         }, <No data fields>}\n+     }, <No data fields>}\n+\n+Fortunately, GDB also allows custom extensions to override the default printing\n+for specific types.  We provide a\n+`GDB extension <https://github.com/apache/arrow/blob/master/cpp/gdb_arrow.py>`_\n+written in Python that enables pretty-printing for common Arrow C++ classes,\n+so as to enable a more productive debugging experience.  For example,\n+here is how the aforementioned :class:`arrow::Status` instance will be\n+displayed::\n+\n+   $5 = arrow::Status::OK()\n+\n+and here is the same :class:`arrow::Decimal128Scalar` instance as above::\n+\n+   $6 = arrow::Decimal128Scalar of value 123.4567 [precision=10, scale=4]\n+\n+\n+Manual loading\n+--------------\n+\n+To enable the GDB extension for Arrow, you can simply\n+`download it <GDB extension>`_\n+somewhere on your computer and ``source`` it from the GDB prompt::\n+\n+   (gdb) source path/to/gdb_arrow.py\n+\n+You will have to ``source`` it on each new GDB session.  You might want to\n+make this implicit by adding the ``source`` invocation in a\n+`gdbinit <https://sourceware.org/gdb/onlinedocs/gdb/gdbinit-man.html>`_ file.\n+\n+\n+Automatic loading\n+-----------------\n+\n+GDB provides a facility to automatically load scripts or extensions for each\n+object file or library that is involved in a debugging session.  You will need\n+to:\n+\n+1. Find out what the *auto-load* location(s) is/are for your GDB install.\n+   This can be determined using ``show`` subcommands on the GDB prompt;\n+   the answer will depend on the operating system.\n+\n+   Here is an example on Ubuntu::\n+\n+      (gdb) show auto-load scripts-directory\n+      List of directories from which to load auto-loaded scripts is $debugdir:$datadir/auto-load.\n+      (gdb) show data-directory\n+      GDB's data directory is \"/usr/share/gdb\".\n+      (gdb) show debug-file-directory\n+      The directory where separate debug symbols are searched for is \"/usr/lib/debug\".\n+\n+   This tells you that the directories used for auto-loading are\n+   ``$debugdir`` and ``$datadir/auto-load``, which expand to\n+   ``/usr/lib/debug/`` and ``/usr/share/gdb/auto-load`` respectively.\n+\n+2. Find out the full path to the Arrow C++ DLL, *with all symlinks resolved*.\n+   For example, you might have installed Arrow 7.0 in ``/usr/local`` and the\n+   path to the Arrow C++ DLL could then be ``/usr/local/lib/libarrow.so.700.0.0``.\n+\n+3. Determine the actual auto-load script path.  It is computed by *a)* taking\n+   the path of the auto-load directory of your choice, *b)* appending the full\n+   path to the Arrow C++ DLL, *c)* appending ``-gdb.py`` at the tail.\n+\n+   In the example above, if we choose ``/usr/share/gdb/auto-load`` as auto-load\n+   directory, the full path to the auto-load script will have to be\n+   ``/usr/share/gdb/auto-load/usr/local/lib/libarrow.so.700.0.0-gdb.py``.\n+\n+4. Either copy or symlink the `GDB extension`_ to the file path determined\n+   in step 3 above.\n+\n+If everything went well, then as soon as GDB encounters the Arrow C++ DLL,\n+it will automatically load the Arrow GDB extension so as to pretty-print\n+Arrow C++ classes on the display prompt.\n+\n+\n+Supported classes\n+-----------------\n+\n+The Arrow GDB extension provides pretty-printing for the core Arrow C++ classes:\n+\n+* :class:`arrow::DataType` and subclasses\n+* :class:`arrow::Field`, :class:`arrow::Schema` and :class:`arrow::KeyValueMetadata`\n+* :class:`arrow::ArrayData`, :class:`arrow::Array` and subclasses\n+* :class:`arrow::Scalar` and subclasses\n+* :class:`arrow::ChunkedArray`, :class:`arrow::RecordBatch` and :class:`arrow::Table`\n+* :class:`arrow::Datum`\n+\n+Important utility classes are also covered:\n+\n+* :class:`arrow::Status` and :class:`arrow::Result`\n+* :class:`arrow::Buffer` and subclasses\n+* :class:`arrow::Decimal128`, :class:`arrow::Decimal256`\n+* :class:`arrow::util::string_view`, :class:`arrow::util::optional`,\n+  :class:`arrow::util::Variant`\n\nReview comment:\n       `arrow::Result` actually has a link, but the three others do not. I'm not sure it makes sense to expose them, as they are mere backports from C++17 stdlib APIs.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-25T18:01:31.681+0000",
                    "updated": "2022-01-25T18:01:31.681+0000",
                    "started": "2022-01-25T18:01:31.681+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "715179",
                    "issueId": "13423767"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/worklog/715375",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12241:\nURL: https://github.com/apache/arrow/pull/12241#discussion_r792236288\n\n\n\n##########\nFile path: docs/source/cpp/gdb.rst\n##########\n@@ -0,0 +1,167 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: console\n+\n+==========================\n+Debugging code using Arrow\n+==========================\n+\n+GDB extension for Arrow C++\n+===========================\n+\n+By default, when asked to print the value of a C++ object,\n+`GDB <https://www.sourceware.org/gdb/>`_ displays the contents of its\n+member variables.  However, for C++ objects this does not often yield\n+a very useful output, as C++ classes tend to hide their implementation details\n+behind methods and accessors.\n+\n+For example, here is how a :class:`arrow::Status` instance may be displayed\n+by GDB::\n+\n+   $3 = {\n+     <arrow::util::EqualityComparable<arrow::Status>> = {<No data fields>},\n+     <arrow::util::ToStringOstreamable<arrow::Status>> = {<No data fields>},\n+     members of arrow::Status:\n+     state_ = 0x0\n+   }\n+\n+and here is a :class:`arrow::Decimal128Scalar`::\n+\n+   $4 = (arrow::Decimal128Scalar) {\n+     <arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>> = {\n+       <arrow::internal::PrimitiveScalarBase> = {\n+         <arrow::Scalar> = {\n+           <arrow::util::EqualityComparable<arrow::Scalar>> = {<No data fields>},\n+           members of arrow::Scalar:\n+           _vptr.Scalar = 0x7ffff6870e78 <vtable for arrow::Decimal128Scalar+16>,\n+           type = std::shared_ptr<arrow::DataType> (use count 1, weak count 0) = {\n+             get() = 0x555555ce58a0\n+           },\n+           is_valid = true\n+         }, <No data fields>},\n+       members of arrow::DecimalScalar<arrow::Decimal128Type, arrow::Decimal128>:\n+       value = {\n+         <arrow::BasicDecimal128> = {\n+           <arrow::GenericBasicDecimal<arrow::BasicDecimal128, 128, 2>> = {\n+             static kHighWordIndex = <optimized out>,\n+             static kBitWidth = 128,\n+             static kByteWidth = 16,\n+             static LittleEndianArray = <optimized out>,\n+             array_ = {\n+               _M_elems = {[0] = 1234567, [1] = 0}\n+             }\n+           },\n+           members of arrow::BasicDecimal128:\n+           static kMaxPrecision = 38,\n+           static kMaxScale = 38\n+         }, <No data fields>}\n+     }, <No data fields>}\n+\n+Fortunately, GDB also allows custom extensions to override the default printing\n+for specific types.  We provide a\n+`GDB extension <https://github.com/apache/arrow/blob/master/cpp/gdb_arrow.py>`_\n+written in Python that enables pretty-printing for common Arrow C++ classes,\n+so as to enable a more productive debugging experience.  For example,\n+here is how the aforementioned :class:`arrow::Status` instance will be\n+displayed::\n+\n+   $5 = arrow::Status::OK()\n+\n+and here is the same :class:`arrow::Decimal128Scalar` instance as above::\n+\n+   $6 = arrow::Decimal128Scalar of value 123.4567 [precision=10, scale=4]\n+\n+\n+Manual loading\n+--------------\n+\n+To enable the GDB extension for Arrow, you can simply\n+`download it <GDB extension>`_\n+somewhere on your computer and ``source`` it from the GDB prompt::\n+\n+   (gdb) source path/to/gdb_arrow.py\n+\n+You will have to ``source`` it on each new GDB session.  You might want to\n+make this implicit by adding the ``source`` invocation in a\n+`gdbinit <https://sourceware.org/gdb/onlinedocs/gdb/gdbinit-man.html>`_ file.\n+\n+\n+Automatic loading\n+-----------------\n+\n+GDB provides a facility to automatically load scripts or extensions for each\n+object file or library that is involved in a debugging session.  You will need\n+to:\n+\n+1. Find out what the *auto-load* location(s) is/are for your GDB install.\n+   This can be determined using ``show`` subcommands on the GDB prompt;\n+   the answer will depend on the operating system.\n+\n+   Here is an example on Ubuntu::\n+\n+      (gdb) show auto-load scripts-directory\n+      List of directories from which to load auto-loaded scripts is $debugdir:$datadir/auto-load.\n+      (gdb) show data-directory\n+      GDB's data directory is \"/usr/share/gdb\".\n+      (gdb) show debug-file-directory\n+      The directory where separate debug symbols are searched for is \"/usr/lib/debug\".\n+\n+   This tells you that the directories used for auto-loading are\n+   ``$debugdir`` and ``$datadir/auto-load``, which expand to\n+   ``/usr/lib/debug/`` and ``/usr/share/gdb/auto-load`` respectively.\n+\n+2. Find out the full path to the Arrow C++ DLL, *with all symlinks resolved*.\n+   For example, you might have installed Arrow 7.0 in ``/usr/local`` and the\n+   path to the Arrow C++ DLL could then be ``/usr/local/lib/libarrow.so.700.0.0``.\n+\n+3. Determine the actual auto-load script path.  It is computed by *a)* taking\n+   the path of the auto-load directory of your choice, *b)* appending the full\n+   path to the Arrow C++ DLL, *c)* appending ``-gdb.py`` at the tail.\n+\n+   In the example above, if we choose ``/usr/share/gdb/auto-load`` as auto-load\n+   directory, the full path to the auto-load script will have to be\n+   ``/usr/share/gdb/auto-load/usr/local/lib/libarrow.so.700.0.0-gdb.py``.\n+\n+4. Either copy or symlink the `GDB extension`_ to the file path determined\n+   in step 3 above.\n+\n+If everything went well, then as soon as GDB encounters the Arrow C++ DLL,\n+it will automatically load the Arrow GDB extension so as to pretty-print\n+Arrow C++ classes on the display prompt.\n+\n+\n+Supported classes\n+-----------------\n+\n+The Arrow GDB extension provides pretty-printing for the core Arrow C++ classes:\n+\n+* :class:`arrow::DataType` and subclasses\n+* :class:`arrow::Field`, :class:`arrow::Schema` and :class:`arrow::KeyValueMetadata`\n+* :class:`arrow::ArrayData`, :class:`arrow::Array` and subclasses\n+* :class:`arrow::Scalar` and subclasses\n+* :class:`arrow::ChunkedArray`, :class:`arrow::RecordBatch` and :class:`arrow::Table`\n+* :class:`arrow::Datum`\n+\n+Important utility classes are also covered:\n+\n+* :class:`arrow::Status` and :class:`arrow::Result`\n+* :class:`arrow::Buffer` and subclasses\n+* :class:`arrow::Decimal128`, :class:`arrow::Decimal256`\n+* :class:`arrow::util::string_view`, :class:`arrow::util::optional`,\n+  :class:`arrow::util::Variant`\n\nReview comment:\n       That seems fine.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-26T00:45:01.296+0000",
                    "updated": "2022-01-26T00:45:01.296+0000",
                    "started": "2022-01-26T00:45:01.296+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "715375",
                    "issueId": "13423767"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/worklog/715376",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #12241:\nURL: https://github.com/apache/arrow/pull/12241#issuecomment-1021746084\n\n\n   Ok.  I'm fine with leaving versioning out until we introduce some kind of backwards incompatible change.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-26T00:45:54.025+0000",
                    "updated": "2022-01-26T00:45:54.025+0000",
                    "started": "2022-01-26T00:45:54.024+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "715376",
                    "issueId": "13423767"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/worklog/716317",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #12241:\nURL: https://github.com/apache/arrow/pull/12241\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-27T10:03:15.708+0000",
                    "updated": "2022-01-27T10:03:15.708+0000",
                    "started": "2022-01-27T10:03:15.708+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "716317",
                    "issueId": "13423767"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/worklog/716327",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #12241:\nURL: https://github.com/apache/arrow/pull/12241#issuecomment-1023048342\n\n\n   Benchmark runs are scheduled for baseline = 5a51c6d2f83cdd47a006c02e624f08f992a0b761 and contender = f1dc9698dad0fbcb28c4041185bb8bc56e96aee1. f1dc9698dad0fbcb28c4041185bb8bc56e96aee1 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/154c75dd953d493fa23880beb8856c2d...c8a83c1dced9464db42609e9a02d7072/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ed5910699d44462d94c10508c26927ab...634ab813a85b4e248bff1ad06baa32ce/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/54ab52cd777248c0bba0f5adcdafe161...9d47623a31fc4bb48f6618b4f517b2c1/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-27T10:11:17.175+0000",
                    "updated": "2022-01-27T10:11:17.175+0000",
                    "started": "2022-01-27T10:11:17.175+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "716327",
                    "issueId": "13423767"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/worklog/716343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12241:\nURL: https://github.com/apache/arrow/pull/12241#issuecomment-1023048342\n\n\n   Benchmark runs are scheduled for baseline = 5a51c6d2f83cdd47a006c02e624f08f992a0b761 and contender = f1dc9698dad0fbcb28c4041185bb8bc56e96aee1. f1dc9698dad0fbcb28c4041185bb8bc56e96aee1 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/154c75dd953d493fa23880beb8856c2d...c8a83c1dced9464db42609e9a02d7072/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ed5910699d44462d94c10508c26927ab...634ab813a85b4e248bff1ad06baa32ce/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/54ab52cd777248c0bba0f5adcdafe161...9d47623a31fc4bb48f6618b4f517b2c1/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-27T10:41:08.584+0000",
                    "updated": "2022-01-27T10:41:08.584+0000",
                    "started": "2022-01-27T10:41:08.584+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "716343",
                    "issueId": "13423767"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/worklog/716423",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12241:\nURL: https://github.com/apache/arrow/pull/12241#issuecomment-1023048342\n\n\n   Benchmark runs are scheduled for baseline = 5a51c6d2f83cdd47a006c02e624f08f992a0b761 and contender = f1dc9698dad0fbcb28c4041185bb8bc56e96aee1. f1dc9698dad0fbcb28c4041185bb8bc56e96aee1 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/154c75dd953d493fa23880beb8856c2d...c8a83c1dced9464db42609e9a02d7072/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ed5910699d44462d94c10508c26927ab...634ab813a85b4e248bff1ad06baa32ce/)\n   [Finished :arrow_down:0.48% :arrow_up:0.04%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/54ab52cd777248c0bba0f5adcdafe161...9d47623a31fc4bb48f6618b4f517b2c1/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-27T14:01:30.403+0000",
                    "updated": "2022-01-27T14:01:30.403+0000",
                    "started": "2022-01-27T14:01:30.402+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "716423",
                    "issueId": "13423767"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/worklog/716988",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12241:\nURL: https://github.com/apache/arrow/pull/12241#issuecomment-1023048342\n\n\n   Benchmark runs are scheduled for baseline = 5a51c6d2f83cdd47a006c02e624f08f992a0b761 and contender = f1dc9698dad0fbcb28c4041185bb8bc56e96aee1. f1dc9698dad0fbcb28c4041185bb8bc56e96aee1 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/154c75dd953d493fa23880beb8856c2d...c8a83c1dced9464db42609e9a02d7072/)\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ed5910699d44462d94c10508c26927ab...634ab813a85b4e248bff1ad06baa32ce/)\n   [Finished :arrow_down:0.48% :arrow_up:0.04%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/54ab52cd777248c0bba0f5adcdafe161...9d47623a31fc4bb48f6618b4f517b2c1/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-28T11:11:47.984+0000",
                    "updated": "2022-01-28T11:11:47.984+0000",
                    "started": "2022-01-28T11:11:47.984+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "716988",
                    "issueId": "13423767"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@37710cc7[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1254ac63[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@30a9d37a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7a956b8[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@116f9cde[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@11e53d33[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6fa91e76[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@22f889ad[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4f1c7840[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@77a8c835[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@50553218[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@36867c5e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jan 27 10:03:47 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-27T10:03:05.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15390/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2022-01-20T14:53:58.000+0000",
        "updated": "2022-01-28T23:09:53.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Doc][C++] Write documentation about the GDB plugin",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/comment/17483027",
                    "id": "17483027",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 12241\n[https://github.com/apache/arrow/pull/12241]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-01-27T10:03:05.727+0000",
                    "updated": "2022-01-27T10:03:05.727+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767/comment/17483028",
                    "id": "17483028",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "[~kszucs] This could be nice to have in 7.0.0 if there's another RC.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-01-27T10:03:47.180+0000",
                    "updated": "2022-01-27T10:03:47.180+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0yrvk:",
        "customfield_12314139": null
    }
}