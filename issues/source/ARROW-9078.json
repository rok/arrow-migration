{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13310330",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330",
    "key": "ARROW-9078",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "parquet",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9078/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 21,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/480176",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-08T14:41:05.800+0000",
                    "updated": "2020-09-08T14:41:05.800+0000",
                    "started": "2020-09-08T14:41:05.800+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "480176",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/480177",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#discussion_r484974652\n\n\n\n##########\nFile path: cpp/src/arrow/extension_type.h\n##########\n@@ -80,6 +81,12 @@ class ARROW_EXPORT ExtensionType : public DataType {\n   /// \\return the serialized representation\n   virtual std::string Serialize() const = 0;\n \n+  static std::shared_ptr<Array> WrapArray(const std::shared_ptr<DataType>& ext_type,\n+                                          const std::shared_ptr<Array>& storage);\n+  static std::shared_ptr<ChunkedArray> WrapArray(\n+      const std::shared_ptr<DataType>& ext_type,\n+      const std::shared_ptr<ChunkedArray>& storage);\n\nReview comment:\n       @wesm Thoughts about this API?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-08T14:41:29.704+0000",
                    "updated": "2020-09-08T14:41:29.704+0000",
                    "started": "2020-09-08T14:41:29.704+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "480177",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/480193",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#issuecomment-688934268\n\n\n   https://issues.apache.org/jira/browse/ARROW-9078\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-08T14:57:15.170+0000",
                    "updated": "2020-09-08T14:57:15.170+0000",
                    "started": "2020-09-08T14:57:15.169+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "480193",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/480233",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#discussion_r485027960\n\n\n\n##########\nFile path: cpp/src/arrow/extension_type.h\n##########\n@@ -80,6 +81,12 @@ class ARROW_EXPORT ExtensionType : public DataType {\n   /// \\return the serialized representation\n   virtual std::string Serialize() const = 0;\n \n+  static std::shared_ptr<Array> WrapArray(const std::shared_ptr<DataType>& ext_type,\n+                                          const std::shared_ptr<Array>& storage);\n+  static std::shared_ptr<ChunkedArray> WrapArray(\n+      const std::shared_ptr<DataType>& ext_type,\n+      const std::shared_ptr<ChunkedArray>& storage);\n\nReview comment:\n       Seems OK to me. May want doxygen comments\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-08T15:55:06.856+0000",
                    "updated": "2020-09-08T15:55:06.856+0000",
                    "started": "2020-09-08T15:55:06.856+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "480233",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/480236",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#discussion_r485028923\n\n\n\n##########\nFile path: cpp/src/arrow/extension_type.h\n##########\n@@ -80,6 +81,12 @@ class ARROW_EXPORT ExtensionType : public DataType {\n   /// \\return the serialized representation\n   virtual std::string Serialize() const = 0;\n \n+  static std::shared_ptr<Array> WrapArray(const std::shared_ptr<DataType>& ext_type,\n+                                          const std::shared_ptr<Array>& storage);\n+  static std::shared_ptr<ChunkedArray> WrapArray(\n+      const std::shared_ptr<DataType>& ext_type,\n+      const std::shared_ptr<ChunkedArray>& storage);\n\nReview comment:\n       Right :-)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-08T15:56:28.960+0000",
                    "updated": "2020-09-08T15:56:28.960+0000",
                    "started": "2020-09-08T15:56:28.960+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "480236",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/481426",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#issuecomment-690250651\n\n\n   @emkornfield Would you like to take a quick look?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-10T12:33:14.983+0000",
                    "updated": "2020-09-10T12:33:14.983+0000",
                    "started": "2020-09-10T12:33:14.983+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "481426",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/481522",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#discussion_r486435150\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.cc\n##########\n@@ -682,48 +689,78 @@ Status GetOriginSchema(const std::shared_ptr<const KeyValueMetadata>& metadata,\n // Restore original Arrow field information that was serialized as Parquet metadata\n // but that is not necessarily present in the field reconstitued from Parquet data\n // (for example, Parquet timestamp types doesn't carry timezone information).\n-Status ApplyOriginalMetadata(std::shared_ptr<Field> field, const Field& origin_field,\n-                             std::shared_ptr<Field>* out) {\n+\n+Status ApplyOriginalStorageMetadata(const Field& origin_field, SchemaField* inferred) {\n   auto origin_type = origin_field.type();\n-  if (field->type()->id() == ::arrow::Type::TIMESTAMP) {\n+  auto inferred_type = inferred->field->type();\n+\n+  if (inferred_type->id() == ::arrow::Type::TIMESTAMP) {\n     // Restore time zone, if any\n-    const auto& ts_type = static_cast<const ::arrow::TimestampType&>(*field->type());\n+    const auto& ts_type = static_cast<const ::arrow::TimestampType&>(*inferred_type);\n     const auto& ts_origin_type = static_cast<const ::arrow::TimestampType&>(*origin_type);\n \n     // If the unit is the same and the data is tz-aware, then set the original\n     // time zone, since Parquet has no native storage for timezones\n     if (ts_type.unit() == ts_origin_type.unit() && ts_type.timezone() == \"UTC\" &&\n         ts_origin_type.timezone() != \"\") {\n-      field = field->WithType(origin_type);\n+      inferred->field = inferred->field->WithType(origin_type);\n     }\n   }\n+\n   if (origin_type->id() == ::arrow::Type::DICTIONARY &&\n-      field->type()->id() != ::arrow::Type::DICTIONARY &&\n-      IsDictionaryReadSupported(*field->type())) {\n+      inferred_type->id() != ::arrow::Type::DICTIONARY &&\n+      IsDictionaryReadSupported(*inferred_type)) {\n     const auto& dict_origin_type =\n         static_cast<const ::arrow::DictionaryType&>(*origin_type);\n-    field = field->WithType(\n-        ::arrow::dictionary(::arrow::int32(), field->type(), dict_origin_type.ordered()));\n+    inferred->field = inferred->field->WithType(\n+        ::arrow::dictionary(::arrow::int32(), inferred_type, dict_origin_type.ordered()));\n+  }\n+\n+  // Restore field metadata\n+  std::shared_ptr<const KeyValueMetadata> field_metadata = origin_field.metadata();\n+  if (field_metadata != nullptr) {\n+    if (inferred->field->metadata()) {\n+      // Prefer the metadata keys (like field_id) from the current metadata\n+      field_metadata = field_metadata->Merge(*inferred->field->metadata());\n+    }\n+    inferred->field = inferred->field->WithMetadata(field_metadata);\n   }\n \n   if (origin_type->id() == ::arrow::Type::EXTENSION) {\n     // Restore extension type, if the storage type is as read from Parquet\n     const auto& ex_type = checked_cast<const ::arrow::ExtensionType&>(*origin_type);\n-    if (ex_type.storage_type()->Equals(*field->type())) {\n-      field = field->WithType(origin_type);\n+    if (ex_type.storage_type()->Equals(*inferred_type)) {\n+      inferred->field = inferred->field->WithType(origin_type);\n     }\n   }\n \n-  // Restore field metadata\n-  std::shared_ptr<const KeyValueMetadata> field_metadata = origin_field.metadata();\n-  if (field_metadata != nullptr) {\n-    if (field->metadata()) {\n-      // Prefer the metadata keys (like field_id) from the current metadata\n-      field_metadata = field_metadata->Merge(*field->metadata());\n+  // TODO Should apply metadata recursively, but for that we need to move metadata\n+  // application inside NodeToSchemaField (ARROW-9943)\n+\n+  return Status::OK();\n+}\n+\n+Status ApplyOriginalMetadata(const Field& origin_field, SchemaField* inferred) {\n+  auto origin_type = origin_field.type();\n+  auto inferred_type = inferred->field->type();\n+\n+  if (origin_type->id() == ::arrow::Type::EXTENSION) {\n+    const auto& ex_type = checked_cast<const ::arrow::ExtensionType&>(*origin_type);\n+    auto origin_storage_field = origin_field.WithType(ex_type.storage_type());\n+\n+    // Apply metadata recursively to storage type\n\nReview comment:\n       this seems to conflict with the TODO above.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-10T15:28:42.841+0000",
                    "updated": "2020-09-10T15:28:42.841+0000",
                    "started": "2020-09-10T15:28:42.840+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "481522",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/481523",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#discussion_r486435699\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.cc\n##########\n@@ -682,48 +689,78 @@ Status GetOriginSchema(const std::shared_ptr<const KeyValueMetadata>& metadata,\n // Restore original Arrow field information that was serialized as Parquet metadata\n // but that is not necessarily present in the field reconstitued from Parquet data\n // (for example, Parquet timestamp types doesn't carry timezone information).\n-Status ApplyOriginalMetadata(std::shared_ptr<Field> field, const Field& origin_field,\n-                             std::shared_ptr<Field>* out) {\n+\n+Status ApplyOriginalStorageMetadata(const Field& origin_field, SchemaField* inferred) {\n   auto origin_type = origin_field.type();\n-  if (field->type()->id() == ::arrow::Type::TIMESTAMP) {\n+  auto inferred_type = inferred->field->type();\n+\n+  if (inferred_type->id() == ::arrow::Type::TIMESTAMP) {\n     // Restore time zone, if any\n-    const auto& ts_type = static_cast<const ::arrow::TimestampType&>(*field->type());\n+    const auto& ts_type = static_cast<const ::arrow::TimestampType&>(*inferred_type);\n     const auto& ts_origin_type = static_cast<const ::arrow::TimestampType&>(*origin_type);\n \n     // If the unit is the same and the data is tz-aware, then set the original\n     // time zone, since Parquet has no native storage for timezones\n     if (ts_type.unit() == ts_origin_type.unit() && ts_type.timezone() == \"UTC\" &&\n         ts_origin_type.timezone() != \"\") {\n-      field = field->WithType(origin_type);\n+      inferred->field = inferred->field->WithType(origin_type);\n     }\n   }\n+\n   if (origin_type->id() == ::arrow::Type::DICTIONARY &&\n-      field->type()->id() != ::arrow::Type::DICTIONARY &&\n-      IsDictionaryReadSupported(*field->type())) {\n+      inferred_type->id() != ::arrow::Type::DICTIONARY &&\n+      IsDictionaryReadSupported(*inferred_type)) {\n     const auto& dict_origin_type =\n         static_cast<const ::arrow::DictionaryType&>(*origin_type);\n-    field = field->WithType(\n-        ::arrow::dictionary(::arrow::int32(), field->type(), dict_origin_type.ordered()));\n+    inferred->field = inferred->field->WithType(\n+        ::arrow::dictionary(::arrow::int32(), inferred_type, dict_origin_type.ordered()));\n+  }\n+\n+  // Restore field metadata\n+  std::shared_ptr<const KeyValueMetadata> field_metadata = origin_field.metadata();\n+  if (field_metadata != nullptr) {\n+    if (inferred->field->metadata()) {\n+      // Prefer the metadata keys (like field_id) from the current metadata\n+      field_metadata = field_metadata->Merge(*inferred->field->metadata());\n+    }\n+    inferred->field = inferred->field->WithMetadata(field_metadata);\n   }\n \n   if (origin_type->id() == ::arrow::Type::EXTENSION) {\n     // Restore extension type, if the storage type is as read from Parquet\n     const auto& ex_type = checked_cast<const ::arrow::ExtensionType&>(*origin_type);\n-    if (ex_type.storage_type()->Equals(*field->type())) {\n-      field = field->WithType(origin_type);\n+    if (ex_type.storage_type()->Equals(*inferred_type)) {\n+      inferred->field = inferred->field->WithType(origin_type);\n     }\n   }\n \n-  // Restore field metadata\n-  std::shared_ptr<const KeyValueMetadata> field_metadata = origin_field.metadata();\n-  if (field_metadata != nullptr) {\n-    if (field->metadata()) {\n-      // Prefer the metadata keys (like field_id) from the current metadata\n-      field_metadata = field_metadata->Merge(*field->metadata());\n+  // TODO Should apply metadata recursively, but for that we need to move metadata\n+  // application inside NodeToSchemaField (ARROW-9943)\n+\n+  return Status::OK();\n+}\n+\n+Status ApplyOriginalMetadata(const Field& origin_field, SchemaField* inferred) {\n+  auto origin_type = origin_field.type();\n+  auto inferred_type = inferred->field->type();\n+\n+  if (origin_type->id() == ::arrow::Type::EXTENSION) {\n+    const auto& ex_type = checked_cast<const ::arrow::ExtensionType&>(*origin_type);\n+    auto origin_storage_field = origin_field.WithType(ex_type.storage_type());\n+\n+    // Apply metadata recursively to storage type\n+    RETURN_NOT_OK(ApplyOriginalStorageMetadata(*origin_storage_field, inferred));\n+    inferred->storage_field = inferred->field;\n+\n+    // Restore extension type, if the storage type is as read from Parquet\n\nReview comment:\n       isn't everything here read from Parquet (is this in contrast to user provided?)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-10T15:29:35.957+0000",
                    "updated": "2020-09-10T15:29:35.957+0000",
                    "started": "2020-09-10T15:29:35.957+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "481523",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/481527",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#discussion_r486437260\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/writer.cc\n##########\n@@ -63,6 +66,10 @@ using arrow::Status;\n using arrow::Table;\n using arrow::TimeUnit;\n \n+using ArrowTypeId = arrow::Type;\n\nReview comment:\n       nit: this actually makes the code less understandable to me and it seems like it only saves 1 character?  (not a big deal either way though).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-10T15:31:36.832+0000",
                    "updated": "2020-09-10T15:31:36.832+0000",
                    "started": "2020-09-10T15:31:36.832+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "481527",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/481529",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#issuecomment-690369288\n\n\n   A few minor doc comments otherwise looks ok to me.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-10T15:32:34.560+0000",
                    "updated": "2020-09-10T15:32:34.560+0000",
                    "started": "2020-09-10T15:32:34.560+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "481529",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/481543",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#issuecomment-690411317\n\n\n   > One gotcha I ran into while using a fixed size list type (nested within another list) that in this case the extension type wasn't preserved. But I suppose this is because the fixed size list is not yet preserved on parquet roundtrip (read back as normal list type), and to add back the extension type, the storage type needs to be the same. So in hindsight, this behaviour is as expected (as long as fixed size list is not yet supported).\r\n   \r\n   @jorisvandenbossche Reading fixed size lists is not yet supported.  One use-case that will likely not be supported in the short term is reading parquet files with FixedSizeLists that have null elements.  Do your use-cases with FixedSizeList allow for null lists?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-10T16:06:03.235+0000",
                    "updated": "2020-09-10T16:06:03.235+0000",
                    "started": "2020-09-10T16:06:03.235+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "481543",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/481545",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield edited a comment on pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#issuecomment-690411317\n\n\n   > One gotcha I ran into while using a fixed size list type (nested within another list) that in this case the extension type wasn't preserved. But I suppose this is because the fixed size list is not yet preserved on parquet roundtrip (read back as normal list type), and to add back the extension type, the storage type needs to be the same. So in hindsight, this behaviour is as expected (as long as fixed size list is not yet supported).\r\n   \r\n   @jorisvandenbossche Reading fixed size lists is not yet supported.  One use-case that will likely not be supported in the short term is reading parquet files with FixedSizeLists that have null elements.  Do your use-cases with FixedSizeList allow for null lists?  I would also add that writing FixedSizeLists with null elements only works under a very limited of circumstances today as it is.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-10T16:06:49.026+0000",
                    "updated": "2020-09-10T16:06:49.026+0000",
                    "started": "2020-09-10T16:06:49.025+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "481545",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/483809",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#issuecomment-691856933\n\n\n   @emkornfield for my *personal* use case (in context of https://github.com/geopandas/geo-arrow-spec/, see this notebooks with some proposed nested types: https://nbviewer.jupyter.org/gist/jorisvandenbossche/00e5c4a54f7b94375ccc6921c07825a0), the inner fixed size list would not allow nulls, only the most outer variable size list would be nullable. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-14T06:56:29.561+0000",
                    "updated": "2020-09-14T06:56:29.561+0000",
                    "started": "2020-09-14T06:56:29.560+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483809",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/483990",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#discussion_r487920623\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.cc\n##########\n@@ -682,48 +689,78 @@ Status GetOriginSchema(const std::shared_ptr<const KeyValueMetadata>& metadata,\n // Restore original Arrow field information that was serialized as Parquet metadata\n // but that is not necessarily present in the field reconstitued from Parquet data\n // (for example, Parquet timestamp types doesn't carry timezone information).\n-Status ApplyOriginalMetadata(std::shared_ptr<Field> field, const Field& origin_field,\n-                             std::shared_ptr<Field>* out) {\n+\n+Status ApplyOriginalStorageMetadata(const Field& origin_field, SchemaField* inferred) {\n   auto origin_type = origin_field.type();\n-  if (field->type()->id() == ::arrow::Type::TIMESTAMP) {\n+  auto inferred_type = inferred->field->type();\n+\n+  if (inferred_type->id() == ::arrow::Type::TIMESTAMP) {\n     // Restore time zone, if any\n-    const auto& ts_type = static_cast<const ::arrow::TimestampType&>(*field->type());\n+    const auto& ts_type = static_cast<const ::arrow::TimestampType&>(*inferred_type);\n     const auto& ts_origin_type = static_cast<const ::arrow::TimestampType&>(*origin_type);\n \n     // If the unit is the same and the data is tz-aware, then set the original\n     // time zone, since Parquet has no native storage for timezones\n     if (ts_type.unit() == ts_origin_type.unit() && ts_type.timezone() == \"UTC\" &&\n         ts_origin_type.timezone() != \"\") {\n-      field = field->WithType(origin_type);\n+      inferred->field = inferred->field->WithType(origin_type);\n     }\n   }\n+\n   if (origin_type->id() == ::arrow::Type::DICTIONARY &&\n-      field->type()->id() != ::arrow::Type::DICTIONARY &&\n-      IsDictionaryReadSupported(*field->type())) {\n+      inferred_type->id() != ::arrow::Type::DICTIONARY &&\n+      IsDictionaryReadSupported(*inferred_type)) {\n     const auto& dict_origin_type =\n         static_cast<const ::arrow::DictionaryType&>(*origin_type);\n-    field = field->WithType(\n-        ::arrow::dictionary(::arrow::int32(), field->type(), dict_origin_type.ordered()));\n+    inferred->field = inferred->field->WithType(\n+        ::arrow::dictionary(::arrow::int32(), inferred_type, dict_origin_type.ordered()));\n+  }\n+\n+  // Restore field metadata\n+  std::shared_ptr<const KeyValueMetadata> field_metadata = origin_field.metadata();\n+  if (field_metadata != nullptr) {\n+    if (inferred->field->metadata()) {\n+      // Prefer the metadata keys (like field_id) from the current metadata\n+      field_metadata = field_metadata->Merge(*inferred->field->metadata());\n+    }\n+    inferred->field = inferred->field->WithMetadata(field_metadata);\n   }\n \n   if (origin_type->id() == ::arrow::Type::EXTENSION) {\n     // Restore extension type, if the storage type is as read from Parquet\n     const auto& ex_type = checked_cast<const ::arrow::ExtensionType&>(*origin_type);\n-    if (ex_type.storage_type()->Equals(*field->type())) {\n-      field = field->WithType(origin_type);\n+    if (ex_type.storage_type()->Equals(*inferred_type)) {\n+      inferred->field = inferred->field->WithType(origin_type);\n     }\n   }\n \n-  // Restore field metadata\n-  std::shared_ptr<const KeyValueMetadata> field_metadata = origin_field.metadata();\n-  if (field_metadata != nullptr) {\n-    if (field->metadata()) {\n-      // Prefer the metadata keys (like field_id) from the current metadata\n-      field_metadata = field_metadata->Merge(*field->metadata());\n+  // TODO Should apply metadata recursively, but for that we need to move metadata\n+  // application inside NodeToSchemaField (ARROW-9943)\n+\n+  return Status::OK();\n+}\n+\n+Status ApplyOriginalMetadata(const Field& origin_field, SchemaField* inferred) {\n+  auto origin_type = origin_field.type();\n+  auto inferred_type = inferred->field->type();\n+\n+  if (origin_type->id() == ::arrow::Type::EXTENSION) {\n+    const auto& ex_type = checked_cast<const ::arrow::ExtensionType&>(*origin_type);\n+    auto origin_storage_field = origin_field.WithType(ex_type.storage_type());\n+\n+    // Apply metadata recursively to storage type\n+    RETURN_NOT_OK(ApplyOriginalStorageMetadata(*origin_storage_field, inferred));\n+    inferred->storage_field = inferred->field;\n+\n+    // Restore extension type, if the storage type is as read from Parquet\n\nReview comment:\n       Hmm... right. Would \"as inferred from Parquet\" be clearer?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-14T13:37:18.523+0000",
                    "updated": "2020-09-14T13:37:18.523+0000",
                    "started": "2020-09-14T13:37:18.522+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483990",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/483992",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#discussion_r487920888\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/writer.cc\n##########\n@@ -63,6 +66,10 @@ using arrow::Status;\n using arrow::Table;\n using arrow::TimeUnit;\n \n+using ArrowTypeId = arrow::Type;\n\nReview comment:\n       I can revert :-)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-14T13:37:33.664+0000",
                    "updated": "2020-09-14T13:37:33.664+0000",
                    "started": "2020-09-14T13:37:33.663+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483992",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/483996",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#discussion_r487921544\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/schema.cc\n##########\n@@ -682,48 +689,78 @@ Status GetOriginSchema(const std::shared_ptr<const KeyValueMetadata>& metadata,\n // Restore original Arrow field information that was serialized as Parquet metadata\n // but that is not necessarily present in the field reconstitued from Parquet data\n // (for example, Parquet timestamp types doesn't carry timezone information).\n-Status ApplyOriginalMetadata(std::shared_ptr<Field> field, const Field& origin_field,\n-                             std::shared_ptr<Field>* out) {\n+\n+Status ApplyOriginalStorageMetadata(const Field& origin_field, SchemaField* inferred) {\n   auto origin_type = origin_field.type();\n-  if (field->type()->id() == ::arrow::Type::TIMESTAMP) {\n+  auto inferred_type = inferred->field->type();\n+\n+  if (inferred_type->id() == ::arrow::Type::TIMESTAMP) {\n     // Restore time zone, if any\n-    const auto& ts_type = static_cast<const ::arrow::TimestampType&>(*field->type());\n+    const auto& ts_type = static_cast<const ::arrow::TimestampType&>(*inferred_type);\n     const auto& ts_origin_type = static_cast<const ::arrow::TimestampType&>(*origin_type);\n \n     // If the unit is the same and the data is tz-aware, then set the original\n     // time zone, since Parquet has no native storage for timezones\n     if (ts_type.unit() == ts_origin_type.unit() && ts_type.timezone() == \"UTC\" &&\n         ts_origin_type.timezone() != \"\") {\n-      field = field->WithType(origin_type);\n+      inferred->field = inferred->field->WithType(origin_type);\n     }\n   }\n+\n   if (origin_type->id() == ::arrow::Type::DICTIONARY &&\n-      field->type()->id() != ::arrow::Type::DICTIONARY &&\n-      IsDictionaryReadSupported(*field->type())) {\n+      inferred_type->id() != ::arrow::Type::DICTIONARY &&\n+      IsDictionaryReadSupported(*inferred_type)) {\n     const auto& dict_origin_type =\n         static_cast<const ::arrow::DictionaryType&>(*origin_type);\n-    field = field->WithType(\n-        ::arrow::dictionary(::arrow::int32(), field->type(), dict_origin_type.ordered()));\n+    inferred->field = inferred->field->WithType(\n+        ::arrow::dictionary(::arrow::int32(), inferred_type, dict_origin_type.ordered()));\n+  }\n+\n+  // Restore field metadata\n+  std::shared_ptr<const KeyValueMetadata> field_metadata = origin_field.metadata();\n+  if (field_metadata != nullptr) {\n+    if (inferred->field->metadata()) {\n+      // Prefer the metadata keys (like field_id) from the current metadata\n+      field_metadata = field_metadata->Merge(*inferred->field->metadata());\n+    }\n+    inferred->field = inferred->field->WithMetadata(field_metadata);\n   }\n \n   if (origin_type->id() == ::arrow::Type::EXTENSION) {\n     // Restore extension type, if the storage type is as read from Parquet\n     const auto& ex_type = checked_cast<const ::arrow::ExtensionType&>(*origin_type);\n-    if (ex_type.storage_type()->Equals(*field->type())) {\n-      field = field->WithType(origin_type);\n+    if (ex_type.storage_type()->Equals(*inferred_type)) {\n+      inferred->field = inferred->field->WithType(origin_type);\n     }\n   }\n \n-  // Restore field metadata\n-  std::shared_ptr<const KeyValueMetadata> field_metadata = origin_field.metadata();\n-  if (field_metadata != nullptr) {\n-    if (field->metadata()) {\n-      // Prefer the metadata keys (like field_id) from the current metadata\n-      field_metadata = field_metadata->Merge(*field->metadata());\n+  // TODO Should apply metadata recursively, but for that we need to move metadata\n+  // application inside NodeToSchemaField (ARROW-9943)\n+\n+  return Status::OK();\n+}\n+\n+Status ApplyOriginalMetadata(const Field& origin_field, SchemaField* inferred) {\n+  auto origin_type = origin_field.type();\n+  auto inferred_type = inferred->field->type();\n+\n+  if (origin_type->id() == ::arrow::Type::EXTENSION) {\n+    const auto& ex_type = checked_cast<const ::arrow::ExtensionType&>(*origin_type);\n+    auto origin_storage_field = origin_field.WithType(ex_type.storage_type());\n+\n+    // Apply metadata recursively to storage type\n\nReview comment:\n       I should make the TODO more precise then, it is about applying to children types.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-14T13:38:15.249+0000",
                    "updated": "2020-09-14T13:38:15.249+0000",
                    "started": "2020-09-14T13:38:15.248+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483996",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/488216",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#issuecomment-696686570\n\n\n   I rebased and addressed review comments.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-22T12:24:13.646+0000",
                    "updated": "2020-09-22T12:24:13.646+0000",
                    "started": "2020-09-22T12:24:13.646+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "488216",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/488438",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#issuecomment-696867693\n\n\n   Will merge.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-22T17:30:56.476+0000",
                    "updated": "2020-09-22T17:30:56.476+0000",
                    "started": "2020-09-22T17:30:56.475+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "488438",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/488439",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-22T17:31:19.630+0000",
                    "updated": "2020-09-22T17:31:19.630+0000",
                    "started": "2020-09-22T17:31:19.630+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "488439",
                    "issueId": "13310330"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/worklog/488878",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #8136:\nURL: https://github.com/apache/arrow/pull/8136#issuecomment-696686570\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-23T04:16:23.968+0000",
                    "updated": "2020-09-23T04:16:23.968+0000",
                    "started": "2020-09-23T04:16:23.967+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "488878",
                    "issueId": "13310330"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 12600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4036ba4b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@27631b04[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3cbfdf50[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3bb48f8[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2f2b57e6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@10bc4aff[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@52bb52e7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@b9e2cc0[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7effce32[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@ce698a0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@442cfb1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7ec01bd5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Sep 22 17:31:11 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-09-22T17:31:11.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9078/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2020-06-09T08:18:14.000+0000",
        "updated": "2020-09-23T04:33:23.000+0000",
        "timeoriginalestimate": null,
        "description": "A reproducer in Python:\r\n\r\n{code:python}\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\n\r\n\r\nclass MyStructType(pa.PyExtensionType): \r\n \r\n    def __init__(self): \r\n        pa.PyExtensionType.__init__(self, pa.struct([('left', pa.int64()), ('right', pa.int64())])) \r\n \r\n    def __reduce__(self): \r\n        return MyStructType, () \r\n\r\n\r\nstruct_array = pa.StructArray.from_arrays(\r\n    [\r\n        pa.array([0, 1], type=\"int64\", from_pandas=True),\r\n        pa.array([1, 2], type=\"int64\", from_pandas=True),\r\n    ],\r\n    names=[\"left\", \"right\"],\r\n)\r\n\r\n# works\r\ntable = pa.table({'a': struct_array})\r\npq.write_table(table, \"test_struct.parquet\")\r\n\r\n# doesn't work\r\nmystruct_array = pa.ExtensionArray.from_storage(MyStructType(), struct_array)\r\ntable = pa.table({'a': mystruct_array})\r\npq.write_table(table, \"test_struct.parquet\")\r\n{code}\r\n\r\nWriting the simple StructArray nowadays works (and reading it back in as well). \r\n\r\nBut when the struct array is the storage array of an ExtensionType, it fails with the following error:\r\n\r\n{code}\r\nArrowException: Unknown error: data type leaf_count != builder_leaf_count1 2\r\n{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Parquet writing of extension type with nested storage type fails",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/comment/17128989",
                    "id": "17128989",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "We run into this bug in pandas when trying to save a DataFrame with interval dtype columns to Parquet, since in the conversion from pandas \\-> arrow we use an ExtensionType backed by a struct for faithful rountrip (which works for pandas <-> arrow, but thus not yet for Parquet, xref https://github.com/pandas-dev/pandas/issues/34643)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-06-09T08:22:23.166+0000",
                    "updated": "2020-06-09T08:22:23.166+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/comment/17191829",
                    "id": "17191829",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Fixing the writing side is relatively easy, but the reading side looks like a can of worms.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-09-07T18:17:45.492+0000",
                    "updated": "2020-09-07T18:17:45.492+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/comment/17193792",
                    "id": "17193792",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Should this be considered a subtask of ARROW-1644?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-09-10T18:45:44.535+0000",
                    "updated": "2020-09-10T18:45:44.535+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310330/comment/17200260",
                    "id": "17200260",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 8136\n[https://github.com/apache/arrow/pull/8136]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-09-22T17:31:11.417+0000",
                    "updated": "2020-09-22T17:31:11.417+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0fnso:",
        "customfield_12314139": null
    }
}