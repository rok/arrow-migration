{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13314166",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314166",
    "key": "ARROW-9272",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "aggregateprogress": {
            "progress": 2400,
            "total": 2400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 2400,
            "total": 2400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9272/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 4,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314166/worklog/452672",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs opened a new pull request #7584:\nURL: https://github.com/apache/arrow/pull/7584\n\n\n   The original motivation for this patch was to reuse the same conversions path for both the scalars and arrays. \r\n   \r\n   In my recent patch the scalars are converted from a single element list to a single element array then copied out from it.\r\n   \r\n   On the long term we should convert them directly, perhaps with a more generic converter API, until that this patch aims to reduce code complexity without introducing any regressions.\r\n   \r\n   I checked the produced binary size:\r\n   \r\n   ```console\r\n   # BEFORE\r\n   -rwxr-xr-x   1 kszucs  staff   2926832 Jun 29 23:07 libarrow_python.100.0.0.dylib\r\n   \r\n   # AFTER\r\n   -rwxr-xr-x   1 kszucs  staff   2869136 Jun 29 23:06 libarrow_python.100.0.0.dylib\r\n   ```\r\n   \r\n   ```\r\n   convert_builtins.ConvertArrayToPyList.time_convert\r\n   ============ ========== =========\r\n       type       before     after     \r\n   ------------ ---------- ---------\r\n      int32      13.2\u00b10ms   13.2\u00b10m\r\n      uint32     13.4\u00b10ms   14.8\u00b10m\r\n      int64      16.4\u00b10ms   13.7\u00b10m\r\n      uint64     13.0\u00b10ms   17.4\u00b10m\r\n     float32     13.5\u00b10ms   16.0\u00b10m\r\n     float64     16.3\u00b10ms   14.7\u00b10m\r\n       bool      12.0\u00b10ms   12.0\u00b10m\r\n     decimal     61.1\u00b10ms   65.0\u00b10m\r\n      binary     19.1\u00b10ms   18.2\u00b10m\r\n     binary10    17.9\u00b10ms   17.4\u00b10m\r\n      ascii      26.0\u00b10ms   25.9\u00b10m\r\n     unicode     81.4\u00b10ms   111\u00b10m\r\n    int64 list   145\u00b10ms    152\u00b10m\r\n      struct     229\u00b10ms    212\u00b10m\r\n   ============ ========== =========\r\n   \r\n   convert_builtins.ConvertPyListToArray.time_convert\r\n   ==================== ========= ========\r\n           type          before     after\r\n   -------------------- --------- --------\r\n          int32          129\u00b10ms   135\u00b10m\r\n          uint32         139\u00b10ms   134\u00b10m\r\n          int64          132\u00b10ms   139\u00b10m\r\n          uint64         135\u00b10ms   132\u00b10m\r\n         float32         149\u00b10ms   131\u00b10m\r\n         float64         143\u00b10ms   141\u00b10m\r\n           bool          126\u00b10ms   130\u00b10m\r\n         decimal         139\u00b10ms   135\u00b10m\r\n          binary         145\u00b10ms   130\u00b10m\r\n         binary10        136\u00b10ms   130\u00b10m\r\n          ascii          145\u00b10ms   136\u00b10m\r\n         unicode         148\u00b10ms   149\u00b10m\r\n        int64 list       174\u00b10ms   176\u00b10m\r\n          struct         164\u00b10ms   177\u00b10m\r\n    struct from tuples   165\u00b10ms   169\u00b10m\r\n   ==================== ========= ========\r\n                                                      \r\n   convert_builtins.InferPyListToArray.time_infer\r\n   ============ ========= ========\r\n       type      before    after   \r\n   ------------ --------- --------\r\n      int64      157\u00b10ms   158\u00b10m\r\n     float64     155\u00b10ms   153\u00b10m\r\n       bool      155\u00b10ms   154\u00b10m\r\n     decimal     249\u00b10ms   233\u00b10m\r\n      binary     167\u00b10ms   162\u00b10m\r\n      ascii      181\u00b10ms   154\u00b10m\r\n     unicode     179\u00b10ms   171\u00b10m\r\n    int64 list   188\u00b10ms   192\u00b10m\r\n      struct     177\u00b10ms   181\u00b10m\r\n   ============ ========= ========\r\n   ```\r\n   \r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-29T22:27:25.831+0000",
                    "updated": "2020-06-29T22:27:25.831+0000",
                    "started": "2020-06-29T22:27:25.831+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "452672",
                    "issueId": "13314166"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314166/worklog/452673",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7584:\nURL: https://github.com/apache/arrow/pull/7584#issuecomment-651404016\n\n\n   https://issues.apache.org/jira/browse/ARROW-9272\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-29T22:32:03.399+0000",
                    "updated": "2020-06-29T22:32:03.399+0000",
                    "started": "2020-06-29T22:32:03.399+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "452673",
                    "issueId": "13314166"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314166/worklog/453185",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #7584:\nURL: https://github.com/apache/arrow/pull/7584#discussion_r448064117\n\n\n\n##########\nFile path: cpp/src/arrow/python/python_to_arrow.cc\n##########\n@@ -53,6 +53,335 @@ using internal::checked_pointer_cast;\n \n namespace py {\n \n+// ----------------------------------------------------------------------\n+// NullCoding\n+\n+enum class NullCoding : char { NONE_ONLY, PANDAS_SENTINELS };\n+\n+template <NullCoding kind>\n+struct NullChecker {};\n+\n+template <>\n+struct NullChecker<NullCoding::NONE_ONLY> {\n+  static inline bool Check(PyObject* obj) { return obj == Py_None; }\n+};\n+\n+template <>\n+struct NullChecker<NullCoding::PANDAS_SENTINELS> {\n+  static inline bool Check(PyObject* obj) { return internal::PandasObjectIsNull(obj); }\n+};\n+\n+// ----------------------------------------------------------------------\n+// ValueConverters\n+//\n+// Typed conversion logic for single python objects are encapsulated in\n+// ValueConverter structs using SFINAE for specialization.\n+//\n+// The FromPython medthod is responsible to convert the python object to the\n+// C++ value counterpart which can be directly appended to the ArrayBuilder or\n+// Scalar can be constructed from.\n+\n+template <typename Type, typename Enable = void>\n+struct ValueConverter {};\n+\n+template <>\n+struct ValueConverter<BooleanType> {\n+  static inline Result<bool> FromPython(PyObject* obj) {\n+    if (obj == Py_True) {\n+      return true;\n+    } else if (obj == Py_False) {\n+      return false;\n+    } else {\n+      return internal::InvalidValue(obj, \"tried to convert to boolean\");\n+    }\n+  }\n+};\n+\n+template <typename Type>\n+struct ValueConverter<Type, enable_if_integer<Type>> {\n+  using ValueType = typename Type::c_type;\n+\n+  static inline Result<ValueType> FromPython(PyObject* obj) {\n+    ValueType value;\n+    RETURN_NOT_OK(internal::CIntFromPython(obj, &value));\n+    return value;\n+  }\n+};\n+\n+template <>\n+struct ValueConverter<HalfFloatType> {\n+  using ValueType = typename HalfFloatType::c_type;\n+\n+  static inline Result<ValueType> FromPython(PyObject* obj) {\n+    ValueType value;\n+    RETURN_NOT_OK(PyFloat_AsHalf(obj, &value));\n+    return value;\n+  }\n+};\n+\n+template <>\n+struct ValueConverter<FloatType> {\n+  static inline Result<float> FromPython(PyObject* obj) {\n+    float value;\n+    if (internal::PyFloatScalar_Check(obj)) {\n+      value = static_cast<float>(PyFloat_AsDouble(obj));\n+      RETURN_IF_PYERROR();\n+    } else if (internal::PyIntScalar_Check(obj)) {\n+      RETURN_NOT_OK(internal::IntegerScalarToFloat32Safe(obj, &value));\n+    } else {\n+      return internal::InvalidValue(obj, \"tried to convert to float32\");\n+    }\n+    return value;\n+  }\n+};\n+\n+template <>\n+struct ValueConverter<DoubleType> {\n+  static inline Result<double> FromPython(PyObject* obj) {\n+    double value;\n+    if (PyFloat_Check(obj)) {\n+      value = PyFloat_AS_DOUBLE(obj);\n+    } else if (internal::PyFloatScalar_Check(obj)) {\n+      // Other kinds of float-y things\n+      value = PyFloat_AsDouble(obj);\n+      RETURN_IF_PYERROR();\n+    } else if (internal::PyIntScalar_Check(obj)) {\n+      RETURN_NOT_OK(internal::IntegerScalarToDoubleSafe(obj, &value));\n+    } else {\n+      return internal::InvalidValue(obj, \"tried to convert to double\");\n+    }\n+    return value;\n+  }\n+};\n+\n+template <>\n+struct ValueConverter<Date32Type> {\n+  static inline Result<int32_t> FromPython(PyObject* obj) {\n+    int32_t value;\n+    if (PyDate_Check(obj)) {\n+      auto pydate = reinterpret_cast<PyDateTime_Date*>(obj);\n+      value = static_cast<int32_t>(internal::PyDate_to_days(pydate));\n+    } else {\n+      RETURN_NOT_OK(\n+          internal::CIntFromPython(obj, &value, \"Integer too large for date32\"));\n+    }\n+    return value;\n+  }\n+};\n+\n+template <>\n+struct ValueConverter<Date64Type> {\n+  static inline Result<int64_t> FromPython(PyObject* obj) {\n+    int64_t value;\n+    if (PyDateTime_Check(obj)) {\n+      auto pydate = reinterpret_cast<PyDateTime_DateTime*>(obj);\n+      value = internal::PyDateTime_to_ms(pydate);\n+      // Truncate any intraday milliseconds\n+      value -= value % 86400000LL;\n+    } else if (PyDate_Check(obj)) {\n+      auto pydate = reinterpret_cast<PyDateTime_Date*>(obj);\n+      value = internal::PyDate_to_ms(pydate);\n+    } else {\n+      RETURN_NOT_OK(\n+          internal::CIntFromPython(obj, &value, \"Integer too large for date64\"));\n+    }\n+    return value;\n+  }\n+};\n+\n+template <>\n+struct ValueConverter<Time32Type> {\n+  static inline Result<int32_t> FromPython(PyObject* obj, TimeUnit::type unit) {\n+    int32_t value;\n+    if (PyTime_Check(obj)) {\n+      // datetime.time stores microsecond resolution\n+      switch (unit) {\n+        case TimeUnit::SECOND:\n+          value = static_cast<int32_t>(internal::PyTime_to_s(obj));\n+          break;\n+        case TimeUnit::MILLI:\n+          value = static_cast<int32_t>(internal::PyTime_to_ms(obj));\n+          break;\n+        default:\n+          return Status::UnknownError(\"Invalid time unit\");\n+      }\n+    } else {\n+      RETURN_NOT_OK(internal::CIntFromPython(obj, &value, \"Integer too large for int32\"));\n+    }\n+    return value;\n+  }\n+};\n+\n+template <>\n+struct ValueConverter<Time64Type> {\n+  static inline Result<int64_t> FromPython(PyObject* obj, TimeUnit::type unit) {\n+    int64_t value;\n+    if (PyTime_Check(obj)) {\n+      // datetime.time stores microsecond resolution\n+      switch (unit) {\n+        case TimeUnit::MICRO:\n+          value = internal::PyTime_to_us(obj);\n+          break;\n+        case TimeUnit::NANO:\n+          value = internal::PyTime_to_ns(obj);\n+          break;\n+        default:\n+          return Status::UnknownError(\"Invalid time unit\");\n+      }\n+    } else {\n+      RETURN_NOT_OK(internal::CIntFromPython(obj, &value, \"Integer too large for int64\"));\n+    }\n+    return value;\n+  }\n+};\n+\n+template <>\n+struct ValueConverter<TimestampType> {\n+  static inline Result<int64_t> FromPython(PyObject* obj, TimeUnit::type unit) {\n+    int64_t value;\n+    if (PyDateTime_Check(obj)) {\n+      auto dt = reinterpret_cast<PyDateTime_DateTime*>(obj);\n+      switch (unit) {\n+        case TimeUnit::SECOND:\n+          value = internal::PyDateTime_to_s(dt);\n+          break;\n+        case TimeUnit::MILLI:\n+          value = internal::PyDateTime_to_ms(dt);\n+          break;\n+        case TimeUnit::MICRO:\n+          value = internal::PyDateTime_to_us(dt);\n+          break;\n+        case TimeUnit::NANO:\n+          value = internal::PyDateTime_to_ns(dt);\n+          break;\n+        default:\n+          return Status::UnknownError(\"Invalid time unit\");\n+      }\n+    } else {\n+      RETURN_NOT_OK(internal::CIntFromPython(obj, &value));\n+    }\n+    return value;\n+  }\n+\n+  static inline Result<int64_t> FromNumpy(PyObject* obj, TimeUnit::type unit) {\n+    // validate that the numpy scalar has np.datetime64 dtype\n+    std::shared_ptr<DataType> type;\n+    RETURN_NOT_OK(NumPyDtypeToArrow(PyArray_DescrFromScalar(obj), &type));\n+    if (type->id() != TimestampType::type_id) {\n+      // TODO(kszucs): the message should highlight the received numpy dtype\n+      return Status::Invalid(\"Expected np.datetime64 but got: \", type->ToString());\n+    }\n+    // validate that the time units are matching\n+    if (unit != checked_cast<const TimestampType&>(*type).unit()) {\n+      return Status::NotImplemented(\n+          \"Cannot convert NumPy np.datetime64 objects with differing unit\");\n+    }\n+    // convert the numpy value\n+    return reinterpret_cast<PyDatetimeScalarObject*>(obj)->obval;\n+  }\n+};\n+\n+template <>\n+struct ValueConverter<DurationType> {\n+  static inline Result<int64_t> FromPython(PyObject* obj, TimeUnit::type unit) {\n+    int64_t value;\n+    if (PyDelta_Check(obj)) {\n+      auto dt = reinterpret_cast<PyDateTime_Delta*>(obj);\n+      switch (unit) {\n+        case TimeUnit::SECOND:\n+          value = internal::PyDelta_to_s(dt);\n+          break;\n+        case TimeUnit::MILLI:\n+          value = internal::PyDelta_to_ms(dt);\n+          break;\n+        case TimeUnit::MICRO:\n+          value = internal::PyDelta_to_us(dt);\n+          break;\n+        case TimeUnit::NANO:\n+          value = internal::PyDelta_to_ns(dt);\n+          break;\n+        default:\n+          return Status::UnknownError(\"Invalid time unit\");\n+      }\n+    } else {\n+      RETURN_NOT_OK(internal::CIntFromPython(obj, &value));\n+    }\n+    return value;\n+  }\n+\n+  static inline Result<int64_t> FromNumpy(PyObject* obj, TimeUnit::type unit) {\n+    // validate that the numpy scalar has np.timedelta64 dtype\n+    std::shared_ptr<DataType> type;\n+    RETURN_NOT_OK(NumPyDtypeToArrow(PyArray_DescrFromScalar(obj), &type));\n+    if (type->id() != DurationType::type_id) {\n+      // TODO(kszucs): the message should highlight the received numpy dtype\n+      return Status::Invalid(\"Expected np.timedelta64 but got: \", type->ToString());\n+    }\n+    // validate that the time units are matching\n+    if (unit != checked_cast<const DurationType&>(*type).unit()) {\n+      return Status::NotImplemented(\n+          \"Cannot convert NumPy np.timedelta64 objects with differing unit\");\n+    }\n+    // convert the numpy value\n+    return reinterpret_cast<PyTimedeltaScalarObject*>(obj)->obval;\n+  }\n+};\n+\n+template <typename Type>\n+struct ValueConverter<Type, enable_if_any_binary<Type>> {\n+  static inline Result<PyBytesView> FromPython(PyObject* obj) {\n+    PyBytesView view;\n+    RETURN_NOT_OK(view.FromString(obj));\n+    return std::move(view);\n+  }\n+};\n+\n+template <typename Type>\n+struct ValueConverter<Type, enable_if_string_like<Type>> {\n+  static inline Result<PyBytesView> FromPython(PyObject* obj) {\n+    // strict conversion, force output to be unicode / utf8 and validate that\n+    // any binary values are utf8\n+    bool is_utf8 = false;\n+    PyBytesView view;\n+\n+    RETURN_NOT_OK(view.FromString(obj, &is_utf8));\n+    if (!is_utf8) {\n+      return internal::InvalidValue(obj, \"was not a utf8 string\");\n+    }\n+    return std::move(view);\n+  }\n+\n+  static inline Result<PyBytesView> FromPython(PyObject* obj, bool& is_utf8) {\n\nReview comment:\n       Need `bool* is_utf8` here\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-01T01:22:23.785+0000",
                    "updated": "2020-07-01T01:22:23.785+0000",
                    "started": "2020-07-01T01:22:23.784+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "453185",
                    "issueId": "13314166"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314166/worklog/453196",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #7584:\nURL: https://github.com/apache/arrow/pull/7584\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-01T02:06:18.144+0000",
                    "updated": "2020-07-01T02:06:18.144+0000",
                    "started": "2020-07-01T02:06:18.144+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "453196",
                    "issueId": "13314166"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 2400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7b42284e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@597db561[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34154b25[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@f7267b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ff51c26[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@496bd15c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@57b9e737[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6ec4d745[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2997f297[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3ee137c8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26f9ef7c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6e4f7a19[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 2400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jul 01 02:11:38 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-07-01T02:11:38.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9272/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-06-29T22:25:57.000+0000",
        "updated": "2020-07-01T02:11:38.000+0000",
        "timeoriginalestimate": null,
        "description": "The original motivation for this patch was to reuse the same conversions path for both the scalars and arrays. \r\n\r\nIn my recent patch the scalars are converted from a single element list to a single element array then copied out from it.\r\n\r\nOn the long term we should convert them directly, perhaps with a more generic converter API, until that this patch aims to reduce code complexity without introducing any regressions.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 2400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Python] Reduce complexity in python to arrow conversion",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314166/comment/17149047",
                    "id": "17149047",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 7584\n[https://github.com/apache/arrow/pull/7584]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-07-01T02:11:38.374+0000",
                    "updated": "2020-07-01T02:11:38.374+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0gbe8:",
        "customfield_12314139": null
    }
}