{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13293411",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293411",
    "key": "ARROW-8190",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 2400,
            "total": 2400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 2400,
            "total": 2400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8190/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 4,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293411/worklog/452494",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request #7582:\nURL: https://github.com/apache/arrow/pull/7582\n\n\n   - Python is not covered as I'm not sure how best to expose these structs to Python.\r\n   - Java is not covered as it doesn't use IpcOption at all currently; I'd rather hold off and see how the metadata change is implemented before trying to bind it. (The legacy/modern metadata format doesn't come into play since Flight uses Protobuf and not an IPC message exactly per se.)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-29T17:09:31.321+0000",
                    "updated": "2020-06-29T17:09:31.321+0000",
                    "started": "2020-06-29T17:09:31.321+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "452494",
                    "issueId": "13293411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293411/worklog/452498",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7582:\nURL: https://github.com/apache/arrow/pull/7582#issuecomment-651251968\n\n\n   https://issues.apache.org/jira/browse/ARROW-8190\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-29T17:16:38.829+0000",
                    "updated": "2020-06-29T17:16:38.829+0000",
                    "started": "2020-06-29T17:16:38.829+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "452498",
                    "issueId": "13293411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293411/worklog/452995",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7582:\nURL: https://github.com/apache/arrow/pull/7582#discussion_r447665599\n\n\n\n##########\nFile path: cpp/src/arrow/flight/flight_test.cc\n##########\n@@ -1808,6 +1880,90 @@ TEST_F(TestMetadata, DoPutReadMetadata) {\n   ASSERT_OK(writer->Close());\n }\n \n+TEST_F(TestOptions, DoGetReadOptions) {\n+  // Call DoGet, but with a very low read nesting depth set to fail the call.\n+  Ticket ticket{\"\"};\n+  auto options = FlightCallOptions();\n+  options.read_options.max_recursion_depth = 1;\n+  std::unique_ptr<FlightStreamReader> stream;\n+  ASSERT_OK(client_->DoGet(options, ticket, &stream));\n+  FlightStreamChunk chunk;\n+  ASSERT_RAISES(Invalid, stream->Next(&chunk));\n+}\n+\n+TEST_F(TestOptions, DoPutWriteOptions) {\n+  // Call DoPut, but with a very low write nesting depth set to fail the call.\n+  std::unique_ptr<FlightStreamWriter> writer;\n+  std::unique_ptr<FlightMetadataReader> reader;\n+  BatchVector expected_batches;\n+  ASSERT_OK(ExampleNestedBatches(&expected_batches));\n+\n+  auto options = FlightCallOptions();\n+  options.write_options.max_recursion_depth = 1;\n+  ASSERT_OK(client_->DoPut(options, FlightDescriptor{}, expected_batches[0]->schema(),\n+                           &writer, &reader));\n+  for (const auto& batch : expected_batches) {\n+    ASSERT_RAISES(Invalid, writer->WriteRecordBatch(*batch));\n+  }\n+}\n+\n+TEST_F(TestOptions, DoExchangeReadOptions) {\n+  // Call DoExchange and write nested data, but read with a very low nesting depth set to\n+  // fail the call.\n+  auto options = FlightCallOptions();\n+  options.write_options.max_recursion_depth = 1;\n+  auto descr = FlightDescriptor::Command(\"\");\n+  std::unique_ptr<FlightStreamReader> reader;\n+  std::unique_ptr<FlightStreamWriter> writer;\n+  ASSERT_OK(client_->DoExchange(options, descr, &writer, &reader));\n+  BatchVector batches;\n+  ASSERT_OK(ExampleNestedBatches(&batches));\n+  ASSERT_OK(writer->Begin(batches[0]->schema()));\n+  for (const auto& batch : batches) {\n+    ASSERT_RAISES(Invalid, writer->WriteRecordBatch(*batch));\n+  }\n+  ASSERT_OK(writer->DoneWriting());\n+  ASSERT_OK(writer->Close());\n+}\n+\n+TEST_F(TestOptions, DoExchangeReadOptionsBegin) {\n+  // Call DoExchange and write nested data, but read with a very low nesting depth set to\n+  // fail the call. Here the options are set explicitly when we write data and not in the\n+  // call options.\n+  auto descr = FlightDescriptor::Command(\"\");\n+  std::unique_ptr<FlightStreamReader> reader;\n+  std::unique_ptr<FlightStreamWriter> writer;\n+  ASSERT_OK(client_->DoExchange(descr, &writer, &reader));\n+  BatchVector batches;\n+  ASSERT_OK(ExampleNestedBatches(&batches));\n+  auto options = ipc::IpcWriteOptions::Defaults();\n+  options.max_recursion_depth = 1;\n+  ASSERT_OK(writer->Begin(batches[0]->schema(), options));\n+  for (const auto& batch : batches) {\n+    ASSERT_RAISES(Invalid, writer->WriteRecordBatch(*batch));\n+  }\n+  ASSERT_OK(writer->DoneWriting());\n+  ASSERT_OK(writer->Close());\n+}\n+\n+TEST_F(TestOptions, DoExchangeWriteOptions) {\n+  // Call DoExchange and write nested data, but with a very low nesting depth set to fail\n+  // the call. (The low nesting depth is set on the server side.)\n+  auto options = FlightCallOptions();\n+  options.read_options.max_recursion_depth = 1;\n\nReview comment:\n       Why do you set the read options here? AFAICT, this test raises its error on the server side.\n\n##########\nFile path: cpp/src/arrow/flight/flight_test.cc\n##########\n@@ -1808,6 +1880,90 @@ TEST_F(TestMetadata, DoPutReadMetadata) {\n   ASSERT_OK(writer->Close());\n }\n \n+TEST_F(TestOptions, DoGetReadOptions) {\n+  // Call DoGet, but with a very low read nesting depth set to fail the call.\n+  Ticket ticket{\"\"};\n+  auto options = FlightCallOptions();\n+  options.read_options.max_recursion_depth = 1;\n+  std::unique_ptr<FlightStreamReader> stream;\n+  ASSERT_OK(client_->DoGet(options, ticket, &stream));\n+  FlightStreamChunk chunk;\n+  ASSERT_RAISES(Invalid, stream->Next(&chunk));\n+}\n+\n+TEST_F(TestOptions, DoPutWriteOptions) {\n+  // Call DoPut, but with a very low write nesting depth set to fail the call.\n+  std::unique_ptr<FlightStreamWriter> writer;\n+  std::unique_ptr<FlightMetadataReader> reader;\n+  BatchVector expected_batches;\n+  ASSERT_OK(ExampleNestedBatches(&expected_batches));\n+\n+  auto options = FlightCallOptions();\n+  options.write_options.max_recursion_depth = 1;\n+  ASSERT_OK(client_->DoPut(options, FlightDescriptor{}, expected_batches[0]->schema(),\n+                           &writer, &reader));\n+  for (const auto& batch : expected_batches) {\n+    ASSERT_RAISES(Invalid, writer->WriteRecordBatch(*batch));\n+  }\n+}\n+\n+TEST_F(TestOptions, DoExchangeReadOptions) {\n+  // Call DoExchange and write nested data, but read with a very low nesting depth set to\n\nReview comment:\n       Comment seems off, it's the write options that are being set (and it's the `WriteRecordBatch` call that fails).\r\n   \n\n##########\nFile path: cpp/src/arrow/flight/flight_test.cc\n##########\n@@ -1808,6 +1880,90 @@ TEST_F(TestMetadata, DoPutReadMetadata) {\n   ASSERT_OK(writer->Close());\n }\n \n+TEST_F(TestOptions, DoGetReadOptions) {\n+  // Call DoGet, but with a very low read nesting depth set to fail the call.\n+  Ticket ticket{\"\"};\n+  auto options = FlightCallOptions();\n+  options.read_options.max_recursion_depth = 1;\n+  std::unique_ptr<FlightStreamReader> stream;\n+  ASSERT_OK(client_->DoGet(options, ticket, &stream));\n+  FlightStreamChunk chunk;\n+  ASSERT_RAISES(Invalid, stream->Next(&chunk));\n+}\n+\n+TEST_F(TestOptions, DoPutWriteOptions) {\n+  // Call DoPut, but with a very low write nesting depth set to fail the call.\n+  std::unique_ptr<FlightStreamWriter> writer;\n+  std::unique_ptr<FlightMetadataReader> reader;\n+  BatchVector expected_batches;\n+  ASSERT_OK(ExampleNestedBatches(&expected_batches));\n+\n+  auto options = FlightCallOptions();\n+  options.write_options.max_recursion_depth = 1;\n+  ASSERT_OK(client_->DoPut(options, FlightDescriptor{}, expected_batches[0]->schema(),\n+                           &writer, &reader));\n+  for (const auto& batch : expected_batches) {\n+    ASSERT_RAISES(Invalid, writer->WriteRecordBatch(*batch));\n+  }\n+}\n+\n+TEST_F(TestOptions, DoExchangeReadOptions) {\n+  // Call DoExchange and write nested data, but read with a very low nesting depth set to\n+  // fail the call.\n+  auto options = FlightCallOptions();\n+  options.write_options.max_recursion_depth = 1;\n+  auto descr = FlightDescriptor::Command(\"\");\n+  std::unique_ptr<FlightStreamReader> reader;\n+  std::unique_ptr<FlightStreamWriter> writer;\n+  ASSERT_OK(client_->DoExchange(options, descr, &writer, &reader));\n+  BatchVector batches;\n+  ASSERT_OK(ExampleNestedBatches(&batches));\n+  ASSERT_OK(writer->Begin(batches[0]->schema()));\n+  for (const auto& batch : batches) {\n+    ASSERT_RAISES(Invalid, writer->WriteRecordBatch(*batch));\n+  }\n+  ASSERT_OK(writer->DoneWriting());\n+  ASSERT_OK(writer->Close());\n+}\n+\n+TEST_F(TestOptions, DoExchangeReadOptionsBegin) {\n+  // Call DoExchange and write nested data, but read with a very low nesting depth set to\n\nReview comment:\n       Comment seems off, it's the write options that are being set (and it's the `WriteRecordBatch` call that fails).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-30T13:09:44.683+0000",
                    "updated": "2020-06-30T13:09:44.683+0000",
                    "started": "2020-06-30T13:09:44.683+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "452995",
                    "issueId": "13293411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293411/worklog/453020",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #7582:\nURL: https://github.com/apache/arrow/pull/7582#issuecomment-651813343\n\n\n   Thanks for the review! I've fixed the comment/test names.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-30T14:05:31.849+0000",
                    "updated": "2020-06-30T14:05:31.849+0000",
                    "started": "2020-06-30T14:05:31.849+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "453020",
                    "issueId": "13293411"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 2400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6b859b06[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@45ce94ed[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@70208ed9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@41f805cc[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@688cb008[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@ca6057c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@78041477[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7953b8de[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74524b0c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@48e32d1f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@109c2fd8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@74ede05d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 2400,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jun 30 16:12:26 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-06-30T16:12:26.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8190/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-03-24T00:29:19.000+0000",
        "updated": "2020-06-30T16:12:26.000+0000",
        "timeoriginalestimate": null,
        "description": "Follow up work to ARROW-7979",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 2400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Flight] Allow setting IpcWriteOptions and IpcReadOptions in Flight IPC message reader and writer classes",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293411/comment/17148802",
                    "id": "17148802",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 7582\n[https://github.com/apache/arrow/pull/7582]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-06-30T16:12:26.947+0000",
                    "updated": "2020-06-30T16:12:26.947+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ctko:",
        "customfield_12314139": null
    }
}