{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13248962",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962",
    "key": "ARROW-6141",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yuanzhou",
            "name": "yuanzhou",
            "key": "yuanzhou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Yuan Zhou",
            "active": true,
            "timeZone": "Asia/Hong_Kong"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6141/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 27,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/296393",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#discussion_r314794698\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -412,7 +412,7 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n \n   bool closed() const { return !file_->is_open(); }\n \n-  Status Open(const std::string& path, FileMode::type mode) {\n+  Status Open(const std::string& path, FileMode::type mode, const off_t offset) {\n \n Review comment:\n   I'd add a check that the offset is a multiple of PAGE_SIZE.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-16T16:25:59.792+0000",
                    "updated": "2019-08-16T16:25:59.792+0000",
                    "started": "2019-08-16T16:25:59.791+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296393",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/296394",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#discussion_r314794388\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.h\n ##########\n @@ -183,10 +183,12 @@ class ARROW_EXPORT MemoryMappedFile : public ReadWriteFileInterface {\n \n   /// Create new file with indicated size, return in read/write mode\n   static Status Create(const std::string& path, int64_t size,\n-                       std::shared_ptr<MemoryMappedFile>* out);\n+                       std::shared_ptr<MemoryMappedFile>* out,\n \n Review comment:\n   Store the offset in a property for debugging/reference purpose.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-16T16:25:59.912+0000",
                    "updated": "2019-08-16T16:25:59.912+0000",
                    "started": "2019-08-16T16:25:59.911+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296394",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/296417",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#discussion_r314801598\n \n \n\n ##########\n File path: cpp/src/arrow/io/test-common.cc\n ##########\n @@ -115,8 +115,9 @@ void MemoryMapFixture::CreateFile(const std::string& path, int64_t size) {\n }\n \n Status MemoryMapFixture::InitMemoryMap(int64_t size, const std::string& path,\n-                                       std::shared_ptr<MemoryMappedFile>* mmap) {\n-  RETURN_NOT_OK(MemoryMappedFile::Create(path, size, mmap));\n+                                       std::shared_ptr<MemoryMappedFile>* mmap,\n+\t\t\t\t       const off_t offset) {\n \n Review comment:\n   I think you need to run clang-format\r\n   ```suggestion\r\n   \t\t\t\t           const off_t offset) {\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-16T16:48:10.870+0000",
                    "updated": "2019-08-16T16:48:10.870+0000",
                    "started": "2019-08-16T16:48:10.870+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296417",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/296418",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#discussion_r314802445\n \n \n\n ##########\n File path: cpp/src/arrow/io/test-common.h\n ##########\n @@ -47,7 +47,8 @@ class ARROW_EXPORT MemoryMapFixture {\n   void CreateFile(const std::string& path, int64_t size);\n \n   Status InitMemoryMap(int64_t size, const std::string& path,\n-                       std::shared_ptr<MemoryMappedFile>* mmap);\n+                       std::shared_ptr<MemoryMappedFile>* mmap,\n+\t\t       const off_t offset = 0);\n \n Review comment:\n   Code style quibble: adding an optional parameter after the output parameter, which should be last. Could you add this as an overload (for example `Status InitMemoryMap(int64_t offset, int64_t size, const std::string& path, std::shared_ptr<MemoryMappedFile>* mmap)`)? \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-16T16:48:10.872+0000",
                    "updated": "2019-08-16T16:48:10.872+0000",
                    "started": "2019-08-16T16:48:10.871+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296418",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/297216",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#discussion_r315273918\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.h\n ##########\n @@ -183,10 +183,12 @@ class ARROW_EXPORT MemoryMappedFile : public ReadWriteFileInterface {\n \n   /// Create new file with indicated size, return in read/write mode\n   static Status Create(const std::string& path, int64_t size,\n-                       std::shared_ptr<MemoryMappedFile>* out);\n+                       std::shared_ptr<MemoryMappedFile>* out,\n+\t\t       const off_t offset = 0);\n \n   static Status Open(const std::string& path, FileMode::type mode,\n-                     std::shared_ptr<MemoryMappedFile>* out);\n+                     std::shared_ptr<MemoryMappedFile>* out,\n+\t\t     const off_t offset = 0);\n \n Review comment:\n   I think it's better to use `int64_t` for the `off_t` is a platform-specific type. \r\n   \r\n   I also agree with Ben about adding an overload `Open(path, mode, offset, &mmap)`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-19T15:31:20.157+0000",
                    "updated": "2019-08-19T15:31:20.157+0000",
                    "started": "2019-08-19T15:31:20.157+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297216",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/297217",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#discussion_r315274463\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.h\n ##########\n @@ -183,10 +183,12 @@ class ARROW_EXPORT MemoryMappedFile : public ReadWriteFileInterface {\n \n   /// Create new file with indicated size, return in read/write mode\n   static Status Create(const std::string& path, int64_t size,\n-                       std::shared_ptr<MemoryMappedFile>* out);\n+                       std::shared_ptr<MemoryMappedFile>* out,\n+\t\t       const off_t offset = 0);\n \n Review comment:\n   Adding `offset` to this function is a little bit odd. Is there an immediate use case for this (I would think that mapping a portion of a pre-existing file would be the main thing)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-19T15:31:20.160+0000",
                    "updated": "2019-08-19T15:31:20.160+0000",
                    "started": "2019-08-19T15:31:20.160+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297217",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/297910",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#discussion_r315716450\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -510,13 +511,19 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n \n  private:\n   // Initialize the mmap and set size, capacity and the data pointers\n-  Status InitMMap(int64_t initial_size, bool resize_file = false) {\n+  Status InitMMap(int64_t initial_size, bool resize_file = false,\n+                  const int64_t offset = 0) {\n     if (resize_file) {\n       RETURN_NOT_OK(internal::FileTruncate(file_->fd(), initial_size));\n     }\n+    if (offset) {\n+      if (offset % sysconf(_SC_PAGESIZE) != 0) {\n \n Review comment:\n   To be pedantic, `sysconf` might return -1 on some esoteric platforms and is very likely not going to work on windows?\r\n   \r\n   ```\r\n   static long page_size = sysconf(_SC_PAGESIZE);\r\n   if (page_size > 0 offset > 0 && offset % page_size != 0) {\r\n     return Status::Invalid(\"Offset must be a multiple of the page size\");\r\n   }\r\n   ```\r\n   \r\n   If this gets too hairy, you can just drop my recommendation and let mmap returns a failure.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T14:19:10.472+0000",
                    "updated": "2019-08-20T14:19:10.472+0000",
                    "started": "2019-08-20T14:19:10.472+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297910",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/297911",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#discussion_r315716450\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -510,13 +511,19 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n \n  private:\n   // Initialize the mmap and set size, capacity and the data pointers\n-  Status InitMMap(int64_t initial_size, bool resize_file = false) {\n+  Status InitMMap(int64_t initial_size, bool resize_file = false,\n+                  const int64_t offset = 0) {\n     if (resize_file) {\n       RETURN_NOT_OK(internal::FileTruncate(file_->fd(), initial_size));\n     }\n+    if (offset) {\n+      if (offset % sysconf(_SC_PAGESIZE) != 0) {\n \n Review comment:\n   To be pedantic, `sysconf` might return -1 on some esoteric platforms and is very likely not going to work on windows?\r\n   \r\n   ```\r\n   static long page_size = sysconf(_SC_PAGESIZE);\r\n   if (page_size > 0 && offset > 0 && offset % page_size != 0) {\r\n     return Status::Invalid(\"Offset must be a multiple of the page size\");\r\n   }\r\n   ```\r\n   \r\n   If this gets too hairy, you can just drop my recommendation and let mmap returns a failure.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T14:19:38.125+0000",
                    "updated": "2019-08-20T14:19:38.125+0000",
                    "started": "2019-08-20T14:19:38.124+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297911",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/300979",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhouyuan commented on pull request #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#discussion_r317430347\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -510,13 +511,19 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n \n  private:\n   // Initialize the mmap and set size, capacity and the data pointers\n-  Status InitMMap(int64_t initial_size, bool resize_file = false) {\n+  Status InitMMap(int64_t initial_size, bool resize_file = false,\n+                  const int64_t offset = 0) {\n     if (resize_file) {\n       RETURN_NOT_OK(internal::FileTruncate(file_->fd(), initial_size));\n     }\n+    if (offset) {\n+      if (offset % sysconf(_SC_PAGESIZE) != 0) {\n \n Review comment:\n   @fsaintjacques  Many thanks for the inputs! Indeed it seems heavy to implement the correct getpagesize under WIN32 and different platforms. I think it maybe better to let mmap() return the IOError if offset is not aligned. \r\n   https://github.com/apache/arrow/blob/master/cpp/src/plasma/thirdparty/dlmalloc.c#L1565-L1608\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-26T02:07:09.803+0000",
                    "updated": "2019-08-26T02:07:09.803+0000",
                    "started": "2019-08-26T02:07:09.801+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "300979",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/301892",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhouyuan commented on pull request #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#discussion_r318027087\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.h\n ##########\n @@ -183,10 +183,12 @@ class ARROW_EXPORT MemoryMappedFile : public ReadWriteFileInterface {\n \n   /// Create new file with indicated size, return in read/write mode\n   static Status Create(const std::string& path, int64_t size,\n-                       std::shared_ptr<MemoryMappedFile>* out);\n+                       std::shared_ptr<MemoryMappedFile>* out,\n+\t\t       const off_t offset = 0);\n \n   static Status Open(const std::string& path, FileMode::type mode,\n-                     std::shared_ptr<MemoryMappedFile>* out);\n+                     std::shared_ptr<MemoryMappedFile>* out,\n+\t\t     const off_t offset = 0);\n \n Review comment:\n   Hi @wesm  we may need to add another param `length` here, with this user could memory map a portion of the file just like the semantics of `mmap()`. \r\n   \r\n   - MemoryMappedFile::Open(path, mode, &mmap)\r\n   - MemoryMappedFile::Open(path, mode, length, offset, &mmap)\r\n   \r\n   In the 2nd case, since only part of the file is mmaped, I think we may need to make `MemoryMappedFile::GetSize() ` return `length` instead of the `size_` of the corresponding file. \r\n   Does this looks like the right approach to you?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T11:24:59.791+0000",
                    "updated": "2019-08-27T11:24:59.791+0000",
                    "started": "2019-08-27T11:24:59.791+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "301892",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/302130",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#issuecomment-525362044\n \n \n   @zhouyuan Is there a reason this PR allows passing an offset and not a length? Intuitively, if you want to map a file region, you should be able to pass both.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T15:45:51.564+0000",
                    "updated": "2019-08-27T15:45:51.564+0000",
                    "started": "2019-08-27T15:45:51.564+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302130",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/302468",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhouyuan commented on issue #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#issuecomment-525529615\n \n \n   > @zhouyuan Is there a reason this PR allows passing an offset and not a length? Intuitively, if you want to map a file region, you should be able to pass both.\r\n   \r\n   @pitrou thanks for the look, yes I was trying to add the missing the `length` param. https://github.com/apache/arrow/pull/5101#discussion_r318027087\r\n   This would allow us to have the same semantics of `mmap()`.  There're also some changes needed on some APIs like `GetSize()` - but I'm not sure if this is a correct approach. I'll push the code out for review first \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-28T00:05:23.628+0000",
                    "updated": "2019-08-28T00:05:23.628+0000",
                    "started": "2019-08-28T00:05:23.627+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302468",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/302529",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhouyuan commented on issue #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#issuecomment-525529615\n \n \n   > @zhouyuan Is there a reason this PR allows passing an offset and not a length? Intuitively, if you want to map a file region, you should be able to pass both.\r\n   \r\n   @pitrou thanks for the look, yes I was trying to add the missing the `length` param. https://github.com/apache/arrow/pull/5101#discussion_r318027087\r\n   This would allow us to have the same semantics of `mmap()`.  There're also some changes needed on some APIs like `Resize()` - but I'm not sure if this is a correct approach. I'll push the code out for review first \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-28T05:05:40.633+0000",
                    "updated": "2019-08-28T05:05:40.633+0000",
                    "started": "2019-08-28T05:05:40.632+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302529",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/302775",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#discussion_r318529686\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -412,7 +412,8 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n \n   bool closed() const { return !file_->is_open(); }\n \n-  Status Open(const std::string& path, FileMode::type mode) {\n+  Status Open(const std::string& path, FileMode::type mode, const int64_t length = 0,\n \n Review comment:\n   I would make `-1` the default length, so that we can tell if the user asked for 0-length region.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-28T11:41:23.595+0000",
                    "updated": "2019-08-28T11:41:23.595+0000",
                    "started": "2019-08-28T11:41:23.595+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302775",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/302776",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#discussion_r318530363\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -510,16 +519,25 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n \n  private:\n   // Initialize the mmap and set size, capacity and the data pointers\n-  Status InitMMap(int64_t initial_size, bool resize_file = false) {\n+  Status InitMMap(int64_t initial_size, bool resize_file = false,\n+                  const int64_t length = 0, const int64_t offset = 0) {\n     if (resize_file) {\n       RETURN_NOT_OK(internal::FileTruncate(file_->fd(), initial_size));\n     }\n     DCHECK(data_ == nullptr && mutable_data_ == nullptr);\n-    void* result = mmap(nullptr, static_cast<size_t>(initial_size), prot_flags_,\n-                        map_mode_, file_->fd(), 0);\n+\n+    size_t mmap_length = static_cast<size_t>(initial_size);\n+    if (length > 0 && length < initial_size) {\n \n Review comment:\n   If `length` has an invalid value (e.g. greater than the file size), we should return an error instead of silently creating a smaller map, IMHO.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-28T11:41:23.751+0000",
                    "updated": "2019-08-28T11:41:23.751+0000",
                    "started": "2019-08-28T11:41:23.751+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302776",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/302777",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#discussion_r318530783\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -484,6 +491,8 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n \n   int64_t size() const { return size_; }\n \n Review comment:\n   Is it still useful to expose this? Perhaps `size()` should simply return `map_len_`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-28T11:41:23.833+0000",
                    "updated": "2019-08-28T11:41:23.833+0000",
                    "started": "2019-08-28T11:41:23.833+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302777",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/302778",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#discussion_r318532726\n \n \n\n ##########\n File path: cpp/src/arrow/io/file_test.cc\n ##########\n @@ -635,6 +635,41 @@ TEST_F(TestMemoryMappedFile, ZeroSizeFlie) {\n   ASSERT_EQ(0, size);\n }\n \n+TEST_F(TestMemoryMappedFile, MapPartFile) {\n+  const int64_t buffer_size = 1024;\n+  const int64_t unalign_offset = 1024;\n+  const int64_t offset = 65536;\n+  std::vector<uint8_t> buffer(buffer_size);\n+\n+  random_bytes(1024, 0, buffer.data());\n+\n+  const int reps = 128;\n+\n+  std::string path = \"io-memory-map-offset\";\n+  std::shared_ptr<MemoryMappedFile> result;\n+\n+  // file size = 128k\n+  CreateFile(path, reps * buffer_size);\n+\n+  // map failed with unaligned offset\n+  ASSERT_RAISES(IOError, MemoryMappedFile::Open(path, FileMode::READWRITE, 4096,\n+                                                unalign_offset, &result));\n+\n+  // map file region <64k-68k>\n+  ASSERT_OK(MemoryMappedFile::Open(path, FileMode::READWRITE, 4096, offset, &result));\n+\n+  std::shared_ptr<Buffer> out_buffer;\n+  ASSERT_OK(result->Write(buffer.data(), buffer_size));\n+  ASSERT_OK(result->ReadAt(0, buffer_size, &out_buffer));\n+  ASSERT_EQ(0, memcmp(out_buffer->data(), buffer.data(), buffer_size));\n+\n+  // Resize is not supported\n+  ASSERT_RAISES(IOError, result->Resize(4096));\n+\n+  // Write beyond memory mapped length\n+  ASSERT_RAISES(Invalid, result->WriteAt(4096, buffer.data(), buffer_size));\n \n Review comment:\n   Should you check `GetSize()` and `Seek()` as well?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-28T11:41:23.836+0000",
                    "updated": "2019-08-28T11:41:23.836+0000",
                    "started": "2019-08-28T11:41:23.836+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302778",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/302779",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#discussion_r318532497\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.h\n ##########\n @@ -185,9 +185,14 @@ class ARROW_EXPORT MemoryMappedFile : public ReadWriteFileInterface {\n   static Status Create(const std::string& path, int64_t size,\n                        std::shared_ptr<MemoryMappedFile>* out);\n \n+  // mmap() with whole file\n   static Status Open(const std::string& path, FileMode::type mode,\n                      std::shared_ptr<MemoryMappedFile>* out);\n \n+  // mmap() with a region of file, the offset must be a multiple of the page size\n+  static Status Open(const std::string& path, FileMode::type mode, const int64_t length,\n+                     const int64_t offset, std::shared_ptr<MemoryMappedFile>* out);\n \n Review comment:\n   I would favor `(offset, length)` rather than `(length, offset)` in the signature.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-28T11:41:23.857+0000",
                    "updated": "2019-08-28T11:41:23.857+0000",
                    "started": "2019-08-28T11:41:23.856+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302779",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/303392",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhouyuan commented on pull request #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#discussion_r318906929\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -510,16 +519,25 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n \n  private:\n   // Initialize the mmap and set size, capacity and the data pointers\n-  Status InitMMap(int64_t initial_size, bool resize_file = false) {\n+  Status InitMMap(int64_t initial_size, bool resize_file = false,\n+                  const int64_t length = 0, const int64_t offset = 0) {\n     if (resize_file) {\n       RETURN_NOT_OK(internal::FileTruncate(file_->fd(), initial_size));\n     }\n     DCHECK(data_ == nullptr && mutable_data_ == nullptr);\n-    void* result = mmap(nullptr, static_cast<size_t>(initial_size), prot_flags_,\n-                        map_mode_, file_->fd(), 0);\n+\n+    size_t mmap_length = static_cast<size_t>(initial_size);\n+    if (length > 0 && length < initial_size) {\n \n Review comment:\n   done\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-29T06:40:09.235+0000",
                    "updated": "2019-08-29T06:40:09.235+0000",
                    "started": "2019-08-29T06:40:09.235+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "303392",
                    "issueId": "13248962"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/worklog/303394",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhouyuan commented on pull request #5101: ARROW-6141: [C++] Enable memory-mapping a file region\nURL: https://github.com/apache/arrow/pull/5101#discussion_r318907767\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -484,6 +491,8 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n \n   int64_t size() const { return size_; }\n \n Review comment:\n   @pitrou thanks for the careful review, I'm uncertain on this - is it possible some workload only memory map a file region, but still want to check the whole file size?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-29T06:43:07.002+0000",
                    "updated": "2019-08-29T06:43:07.002+0000",
                    "started": "2019-08-29T06:43:07.001+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "303394",
                    "issueId": "13248962"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@38c17220[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@310dd689[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3cfd4457[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@631b64df[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2312c64a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5fcf2489[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9c60cdb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3143bca0[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4d60c54[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@221b9b2b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b02fb67[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3788e21b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Sep 02 15:45:15 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-09-02T15:45:15.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6141/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-08-05T20:42:37.000+0000",
        "updated": "2019-09-02T15:46:51.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently {{MemoryMappedFile}} only allows for the entire file to be mapped. ",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Enable memory-mapping a file region that is offset from the beginning of the file",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248962/comment/16920939",
                    "id": "16920939",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 5101\n[https://github.com/apache/arrow/pull/5101]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-09-02T15:45:15.531+0000",
                    "updated": "2019-09-02T15:45:15.531+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z05cjc:",
        "customfield_12314139": null
    }
}