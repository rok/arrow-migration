{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13295849",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849",
    "key": "ARROW-8318",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12584716",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12584716",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "inwardIssue": {
                    "id": "13290899",
                    "key": "ARROW-8065",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290899",
                    "fields": {
                        "summary": "[C++][Dataset] Untangle Dataset, Fragment and ScanOptions",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8318/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429093",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques opened a new pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073\n\n\n   * Simplified FileSystemDataset to hold a FragmentVector. Each\r\n     Fragment must be a FileFragment and is checked at\r\n     `FileSystemDataset::Make`.  Fragments are not required to use the same\r\n     backing filesystem nor the same format.\r\n   \r\n   * Removed `FileSystemDataset::format` and\r\n     `FileSystemDataset::partitions`.\r\n   \r\n   * Since FileInfo is not required by neither FileSystemDataset and\r\n     FileSystemDatasetFactory, it is no possible to create a dataset\r\n     without any IO involved.\r\n   \r\n   * Re-introduced the natural behavior of creating FileFragment with their\r\n     full partition expressions instead of removing the ancestors common\r\n     partitions.\r\n   \r\n   * Added `Expression::IsSatisfiableWith` method.\r\n   \r\n   * Added missing compression cmake options to archery.\r\n   \r\n   * Ensure FileSource holds a shared_ptr<FileSystem> pointer.\r\n     This is required to refactor FileSystemDataset to support Buffer\r\n     FileSource and heterogeneous FileSystems.\r\n   \r\n   * Rename `type` to `id`, following other classes.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T15:41:14.310+0000",
                    "updated": "2020-04-30T15:41:14.310+0000",
                    "started": "2020-04-30T15:41:14.310+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429093",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429101",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#issuecomment-621937629\n\n\n   https://issues.apache.org/jira/browse/ARROW-8318\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T15:46:58.964+0000",
                    "updated": "2020-04-30T15:46:58.964+0000",
                    "started": "2020-04-30T15:46:58.963+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429101",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429108",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#issuecomment-621940060\n\n\n   >  Fragments are not required to use the same\r\n   backing filesystem nor the same format.\r\n   \r\n   Shouldn't we require that? That seems the goal of UnionDataset to combine datasets with different formats\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T15:51:21.444+0000",
                    "updated": "2020-04-30T15:51:21.444+0000",
                    "started": "2020-04-30T15:51:21.444+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429108",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429123",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#issuecomment-621966208\n\n\n   > > Fragments are not required to use the same\r\n   > > backing filesystem nor the same format.\r\n   > \r\n   > Shouldn't we require that? That seems the goal of UnionDataset to combine datasets with different formats\r\n   \r\n   Maybe, this is still enforced if you use the Factory, but you can create a FileSystemDataset with fragments from different file format.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T16:37:12.589+0000",
                    "updated": "2020-04-30T16:37:12.589+0000",
                    "started": "2020-04-30T16:37:12.589+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429123",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429124",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques edited a comment on pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#issuecomment-621966208\n\n\n   > Shouldn't we require that? That seems the goal of UnionDataset to combine datasets with different formats\r\n   \r\n   Maybe, this is still enforced if you use the Factory, but you can create a FileSystemDataset with fragments from different file format.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T16:37:26.888+0000",
                    "updated": "2020-04-30T16:37:26.888+0000",
                    "started": "2020-04-30T16:37:26.888+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429124",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429201",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#discussion_r418193373\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -83,131 +83,67 @@ Result<ScanTaskIterator> FileFragment::Scan(std::shared_ptr<ScanOptions> options\n \n FileSystemDataset::FileSystemDataset(std::shared_ptr<Schema> schema,\n                                      std::shared_ptr<Expression> root_partition,\n-                                     std::shared_ptr<FileFormat> format,\n-                                     std::shared_ptr<fs::FileSystem> filesystem,\n-                                     fs::PathForest forest,\n-                                     ExpressionVector file_partitions)\n+                                     std::vector<std::shared_ptr<FileFragment>> fragments)\n     : Dataset(std::move(schema), std::move(root_partition)),\n-      format_(std::move(format)),\n-      filesystem_(std::move(filesystem)),\n-      forest_(std::move(forest)),\n-      partitions_(std::move(file_partitions)) {\n-  DCHECK_EQ(static_cast<size_t>(forest_.size()), partitions_.size());\n-}\n-\n-Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Make(\n-    std::shared_ptr<Schema> schema, std::shared_ptr<Expression> root_partition,\n-    std::shared_ptr<FileFormat> format, std::shared_ptr<fs::FileSystem> filesystem,\n-    std::vector<fs::FileInfo> infos) {\n-  ExpressionVector partitions(infos.size(), scalar(true));\n-  return Make(std::move(schema), std::move(root_partition), std::move(format),\n-              std::move(filesystem), std::move(infos), std::move(partitions));\n-}\n+      fragments_(std::move(fragments)) {}\n \n Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Make(\n     std::shared_ptr<Schema> schema, std::shared_ptr<Expression> root_partition,\n-    std::shared_ptr<FileFormat> format, std::shared_ptr<fs::FileSystem> filesystem,\n-    std::vector<fs::FileInfo> infos, ExpressionVector partitions) {\n-  ARROW_ASSIGN_OR_RAISE(auto forest, fs::PathForest::Make(std::move(infos), &partitions));\n-  return Make(std::move(schema), std::move(root_partition), std::move(format),\n-              std::move(filesystem), std::move(forest), std::move(partitions));\n-}\n+    FragmentVector fragments) {\n+  std::vector<std::shared_ptr<FileFragment>> file_fragments;\n+  for (const auto& fragment : fragments) {\n+    auto file_fragment = internal::checked_pointer_cast<FileFragment>(fragment);\n\nReview comment:\n       This will crash/UB if any is not a FileFragment; we should check fragment->type_name()\n\n##########\nFile path: cpp/src/arrow/dataset/discovery.h\n##########\n@@ -220,16 +220,20 @@ class ARROW_DS_EXPORT FileSystemDatasetFactory : public DatasetFactory {\n   Result<std::shared_ptr<Dataset>> Finish(FinishOptions options) override;\n \n  protected:\n-  FileSystemDatasetFactory(std::shared_ptr<fs::FileSystem> filesystem,\n-                           fs::PathForest forest, std::shared_ptr<FileFormat> format,\n+  FileSystemDatasetFactory(std::vector<std::string> paths,\n+                           std::shared_ptr<fs::FileSystem> filesystem,\n+                           std::shared_ptr<FileFormat> format,\n                            FileSystemFactoryOptions options);\n \n   Result<std::shared_ptr<Schema>> PartitionSchema();\n \n+  std::vector<std::string> paths_;\n   std::shared_ptr<fs::FileSystem> fs_;\n-  fs::PathForest forest_;\n   std::shared_ptr<FileFormat> format_;\n   FileSystemFactoryOptions options_;\n+\n+ private:\n+  util::optional<util::string_view> BaselessPath(util::string_view path);\n\nReview comment:\n       ```suggestion\r\n     util::optional<util::string_view> RemovePartitionBaseDir(util::string_view path);\r\n   ```\n\n##########\nFile path: cpp/src/arrow/dataset/discovery.cc\n##########\n@@ -246,32 +235,25 @@ Result<std::shared_ptr<Dataset>> FileSystemDatasetFactory::Finish(FinishOptions\n     }\n   }\n \n-  ExpressionVector partitions(forest_.size(), scalar(true));\n   std::shared_ptr<Partitioning> partitioning = options_.partitioning.partitioning();\n   if (partitioning == nullptr) {\n     auto factory = options_.partitioning.factory();\n     ARROW_ASSIGN_OR_RAISE(partitioning, factory->Finish(schema));\n   }\n \n-  // apply partitioning to forest to derive partitions\n-  auto apply_partitioning = [&](fs::PathForest::Ref ref) {\n-    if (auto relative = fs::internal::RemoveAncestor(options_.partition_base_dir,\n-                                                     ref.info().path())) {\n-      auto segments = fs::internal::SplitAbstractPath(relative->to_string());\n-\n-      if (segments.size() > 0) {\n-        auto segment_index = static_cast<int>(segments.size()) - 1;\n-        auto maybe_partition = partitioning->Parse(segments.back(), segment_index);\n-\n-        partitions[ref.i] = std::move(maybe_partition).ValueOr(scalar(true));\n-      }\n+  FragmentVector fragments;\n+  for (const auto& path : paths_) {\n+    std::shared_ptr<Expression> partition = scalar(true);\n+    if (auto relative = BaselessPath(path)) {\n+      std::string path_string{*relative};\n+      partition = partitioning->Parse(path_string).ValueOr(scalar(true));\n\nReview comment:\n       ```suggestion\r\n         partition = partitioning->Parse(relative->to_string()).ValueOr(scalar(true));\r\n   ```\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -83,131 +83,67 @@ Result<ScanTaskIterator> FileFragment::Scan(std::shared_ptr<ScanOptions> options\n \n FileSystemDataset::FileSystemDataset(std::shared_ptr<Schema> schema,\n                                      std::shared_ptr<Expression> root_partition,\n-                                     std::shared_ptr<FileFormat> format,\n-                                     std::shared_ptr<fs::FileSystem> filesystem,\n-                                     fs::PathForest forest,\n-                                     ExpressionVector file_partitions)\n+                                     std::vector<std::shared_ptr<FileFragment>> fragments)\n     : Dataset(std::move(schema), std::move(root_partition)),\n-      format_(std::move(format)),\n-      filesystem_(std::move(filesystem)),\n-      forest_(std::move(forest)),\n-      partitions_(std::move(file_partitions)) {\n-  DCHECK_EQ(static_cast<size_t>(forest_.size()), partitions_.size());\n-}\n-\n-Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Make(\n-    std::shared_ptr<Schema> schema, std::shared_ptr<Expression> root_partition,\n-    std::shared_ptr<FileFormat> format, std::shared_ptr<fs::FileSystem> filesystem,\n-    std::vector<fs::FileInfo> infos) {\n-  ExpressionVector partitions(infos.size(), scalar(true));\n-  return Make(std::move(schema), std::move(root_partition), std::move(format),\n-              std::move(filesystem), std::move(infos), std::move(partitions));\n-}\n+      fragments_(std::move(fragments)) {}\n \n Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Make(\n     std::shared_ptr<Schema> schema, std::shared_ptr<Expression> root_partition,\n-    std::shared_ptr<FileFormat> format, std::shared_ptr<fs::FileSystem> filesystem,\n-    std::vector<fs::FileInfo> infos, ExpressionVector partitions) {\n-  ARROW_ASSIGN_OR_RAISE(auto forest, fs::PathForest::Make(std::move(infos), &partitions));\n-  return Make(std::move(schema), std::move(root_partition), std::move(format),\n-              std::move(filesystem), std::move(forest), std::move(partitions));\n-}\n+    FragmentVector fragments) {\n+  std::vector<std::shared_ptr<FileFragment>> file_fragments;\n+  for (const auto& fragment : fragments) {\n+    auto file_fragment = internal::checked_pointer_cast<FileFragment>(fragment);\n\nReview comment:\n       I'd object more to the fragile type erasure of the `fragments` parameter but we'll be following up on this for https://issues.apache.org/jira/browse/ARROW-8163\n\n##########\nFile path: cpp/src/arrow/dataset/filter.h\n##########\n@@ -188,6 +188,10 @@ class ARROW_DS_EXPORT Expression {\n   /// This is a shortcut to check if the expression is neither null nor false.\n   bool IsSatisfiable() const { return !IsNull() && !Equals(false); }\n \n+  bool IsSatisfiableWith(const std::shared_ptr<Expression> other) const {\n\nReview comment:\n       ```suggestion\r\n     bool IsSatisfiableWith(const std::shared_ptr<Expression>& other) const {\r\n   ```\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -83,131 +83,67 @@ Result<ScanTaskIterator> FileFragment::Scan(std::shared_ptr<ScanOptions> options\n \n FileSystemDataset::FileSystemDataset(std::shared_ptr<Schema> schema,\n                                      std::shared_ptr<Expression> root_partition,\n-                                     std::shared_ptr<FileFormat> format,\n-                                     std::shared_ptr<fs::FileSystem> filesystem,\n-                                     fs::PathForest forest,\n-                                     ExpressionVector file_partitions)\n+                                     std::vector<std::shared_ptr<FileFragment>> fragments)\n     : Dataset(std::move(schema), std::move(root_partition)),\n-      format_(std::move(format)),\n-      filesystem_(std::move(filesystem)),\n-      forest_(std::move(forest)),\n-      partitions_(std::move(file_partitions)) {\n-  DCHECK_EQ(static_cast<size_t>(forest_.size()), partitions_.size());\n-}\n-\n-Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Make(\n-    std::shared_ptr<Schema> schema, std::shared_ptr<Expression> root_partition,\n-    std::shared_ptr<FileFormat> format, std::shared_ptr<fs::FileSystem> filesystem,\n-    std::vector<fs::FileInfo> infos) {\n-  ExpressionVector partitions(infos.size(), scalar(true));\n-  return Make(std::move(schema), std::move(root_partition), std::move(format),\n-              std::move(filesystem), std::move(infos), std::move(partitions));\n-}\n+      fragments_(std::move(fragments)) {}\n \n Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Make(\n     std::shared_ptr<Schema> schema, std::shared_ptr<Expression> root_partition,\n-    std::shared_ptr<FileFormat> format, std::shared_ptr<fs::FileSystem> filesystem,\n-    std::vector<fs::FileInfo> infos, ExpressionVector partitions) {\n-  ARROW_ASSIGN_OR_RAISE(auto forest, fs::PathForest::Make(std::move(infos), &partitions));\n-  return Make(std::move(schema), std::move(root_partition), std::move(format),\n-              std::move(filesystem), std::move(forest), std::move(partitions));\n-}\n+    FragmentVector fragments) {\n+  std::vector<std::shared_ptr<FileFragment>> file_fragments;\n+  for (const auto& fragment : fragments) {\n+    auto file_fragment = internal::checked_pointer_cast<FileFragment>(fragment);\n+    file_fragments.push_back(std::move(file_fragment));\n+  }\n \n-Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Make(\n-    std::shared_ptr<Schema> schema, std::shared_ptr<Expression> root_partition,\n-    std::shared_ptr<FileFormat> format, std::shared_ptr<fs::FileSystem> filesystem,\n-    fs::PathForest forest, ExpressionVector partitions) {\n   return std::shared_ptr<FileSystemDataset>(new FileSystemDataset(\n-      std::move(schema), std::move(root_partition), std::move(format),\n-      std::move(filesystem), std::move(forest), std::move(partitions)));\n+      std::move(schema), std::move(root_partition), std::move(file_fragments)));\n }\n \n Result<std::shared_ptr<Dataset>> FileSystemDataset::ReplaceSchema(\n     std::shared_ptr<Schema> schema) const {\n   RETURN_NOT_OK(CheckProjectable(*schema_, *schema));\n   return std::shared_ptr<Dataset>(\n-      new FileSystemDataset(std::move(schema), partition_expression_, format_,\n-                            filesystem_, forest_, partitions_));\n+      new FileSystemDataset(std::move(schema), partition_expression_, fragments_));\n }\n \n std::vector<std::string> FileSystemDataset::files() const {\n   std::vector<std::string> files;\n \n-  DCHECK_OK(forest_.Visit([&](fs::PathForest::Ref ref) {\n-    if (ref.info().IsFile()) {\n-      files.push_back(ref.info().path());\n-    }\n-    return Status::OK();\n-  }));\n+  for (const auto& fragment : fragments_) {\n+    files.push_back(fragment->source().path());\n+  }\n \n   return files;\n }\n \n std::string FileSystemDataset::ToString() const {\n   std::string repr = \"FileSystemDataset:\";\n \n-  if (forest_.size() == 0) {\n+  if (fragments_.empty()) {\n     return repr + \" []\";\n   }\n \n-  DCHECK_OK(forest_.Visit([&](fs::PathForest::Ref ref) {\n-    repr += \"\\n\" + ref.info().path();\n+  for (const auto& fragment : fragments_) {\n+    repr += \"\\n\" + fragment->source().path();\n \n-    if (!partitions_[ref.i]->Equals(true)) {\n-      repr += \": \" + partitions_[ref.i]->ToString();\n+    const auto& partition = fragment->partition_expression();\n+    if (!partition->Equals(true)) {\n+      repr += \": \" + partition->ToString();\n     }\n-\n-    return Status::OK();\n-  }));\n+  }\n \n   return repr;\n }\n \n-std::shared_ptr<Expression> FoldingAnd(const std::shared_ptr<Expression>& l,\n-                                       const std::shared_ptr<Expression>& r) {\n-  if (l->Equals(true)) return r;\n-  if (r->Equals(true)) return l;\n-  return and_(l, r);\n-}\n-\n FragmentIterator FileSystemDataset::GetFragmentsImpl(\n     std::shared_ptr<Expression> predicate) {\n   FragmentVector fragments;\n \n-  ExpressionVector fragment_partitions(forest_.size());\n-\n-  auto collect_fragments = [&](fs::PathForest::Ref ref) -> fs::PathForest::MaybePrune {\n-    auto partition = partitions_[ref.i];\n-\n-    // if available, copy parent's filter and projector\n-    // (which are appropriately simplified and loaded with default values)\n-    if (auto parent = ref.parent()) {\n-      fragment_partitions[ref.i] = FoldingAnd(fragment_partitions[parent.i], partition);\n-    } else {\n-      fragment_partitions[ref.i] = FoldingAnd(partition_expression_, partition);\n+  for (const auto& fragment : fragments_) {\n\nReview comment:\n       Follow up for sub tree pruning https://issues.apache.org/jira/browse/ARROW-8658\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -290,21 +292,23 @@ cdef class FileSystemDataset(Dataset):\n                     \"got {2})\".format(name, class_.__name__, type(arg))\n                 )\n \n-        for info in filesystem.get_file_info(paths_or_selector):\n-            c_file_infos.push_back(info.unwrap())\n+        infos = filesystem.get_file_info(paths_or_selector)\n \n         if partitions is None:\n-            partitions = [\n-                ScalarExpression(True) for _ in range(c_file_infos.size())]\n-        for expr in partitions:\n-            c_partitions.push_back(expr.unwrap())\n+            partitions = [ScalarExpression(True) for _ in range(len(infos))]\n\nReview comment:\n       ```suggestion\r\n               partitions = [ScalarExpression(True)] * len(infos)\r\n   ```\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -221,42 +157,34 @@ Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Write(\n     filesystem = std::make_shared<fs::LocalFileSystem>();\n   }\n \n-  std::vector<fs::FileInfo> files(plan.paths.size());\n-  ExpressionVector partition_expressions(plan.paths.size(), scalar(true));\n   auto task_group = scan_context->TaskGroup();\n-\n   auto partition_base_dir = fs::internal::EnsureTrailingSlash(plan.partition_base_dir);\n   auto extension = \".\" + plan.format->type_name();\n \n+  FragmentVector fragments;\n   for (size_t i = 0; i < plan.paths.size(); ++i) {\n     const auto& op = plan.fragment_or_partition_expressions[i];\n-    if (util::holds_alternative<std::shared_ptr<Expression>>(op)) {\n-      files[i].set_type(fs::FileType::Directory);\n-      files[i].set_path(partition_base_dir + plan.paths[i]);\n+    if (util::holds_alternative<std::shared_ptr<Fragment>>(op)) {\n\nReview comment:\n       since we're no longer doing anything with directories, these should be removed from `WritePlan::fragment_or_partition_expression`\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T19:07:26.027+0000",
                    "updated": "2020-04-30T19:07:26.027+0000",
                    "started": "2020-04-30T19:07:26.027+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429201",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429242",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#issuecomment-622092322\n\n\n   Due to R failure (that I didn't catch because my installation was broken and using and old version of arrow), I'll revert the FileSystemDataset::format and make sure they're homogeneous.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T20:28:56.358+0000",
                    "updated": "2020-04-30T20:28:56.358+0000",
                    "started": "2020-04-30T20:28:56.357+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429242",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429379",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#issuecomment-622265852\n\n\n   From a user perspective, I find that also an added convenience. In Python, the `FileSystemDataset.format` attribute let you check the format of your dataset (instead of needing to check `next(dataset.get_fragments()).format`, which is not impossible of course, but I was using the format attribute in my dask branch). \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T06:17:23.833+0000",
                    "updated": "2020-05-01T06:17:23.833+0000",
                    "started": "2020-05-01T06:17:23.832+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429379",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429431",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#issuecomment-622333391\n\n\n   > * Simplified FileSystemDataset to hold a FragmentVector. Each Fragment must be a FileFragment and is checked at `FileSystemDataset::Make`.  Fragments are not required to use the same backing filesystem nor the same format.\r\n   \r\n   This makes me wonder, why do we need FileSystemDataset and/or UnionDataset at all? Because all of the filesystem and format specific logic is implemented by the discovery objects? \r\n   \r\n   It implies that we could define dataset as a vector of arbitrary fragments.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T10:25:27.917+0000",
                    "updated": "2020-05-01T10:25:27.917+0000",
                    "started": "2020-05-01T10:25:27.917+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429431",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429432",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs edited a comment on pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#issuecomment-622333391\n\n\n   > * Simplified FileSystemDataset to hold a FragmentVector. Each Fragment must be a FileFragment and is checked at `FileSystemDataset::Make`.  Fragments are not required to use the same backing filesystem nor the same format.\r\n   \r\n   This makes me wonder, why do we need FileSystemDataset and/or UnionDataset at all? Because all of the filesystem and format specific logic is implemented by the discovery objects? \r\n   \r\n   It implies that we could define dataset as a vector of arbitrary fragments (BTW this was my conclusion after my python dataset prototype, but convinced myself that a generic dataset would prevent us implementing further optimizations).\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T10:29:17.362+0000",
                    "updated": "2020-05-01T10:29:17.362+0000",
                    "started": "2020-05-01T10:29:17.362+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429432",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429433",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs edited a comment on pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#issuecomment-622333391\n\n\n   > Fragments are not required to use the same backing filesystem nor the same format.\r\n   \r\n   This makes me wonder, why do we need FileSystemDataset and/or UnionDataset at all? Because all of the filesystem and format specific logic is implemented by the discovery objects? \r\n   \r\n   It implies that we could define dataset as a vector of arbitrary fragments.\r\n   \r\n   > BTW this was my conclusion after my python dataset prototype, but convinced myself that a generic dataset would prevent us implementing further optimizations.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T10:29:40.778+0000",
                    "updated": "2020-05-01T10:29:40.778+0000",
                    "started": "2020-05-01T10:29:40.778+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429433",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429441",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#issuecomment-622354887\n\n\n   Do we need FileSystemDataset, maybe not. Is it still useful, IMO yes. \r\n   \r\n   As mentioned above, I personally find it convenient to know that my dataset has a single format / filesystem, and be able to easily check this format. \r\n   Now of course, it might be that this convenience is not worth it given the added complexity to the code. Or that such convenience could also be given by the wrapper languages (eg in Python we could still have a Dataset subclass for single formats)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T11:37:55.220+0000",
                    "updated": "2020-05-01T11:37:55.220+0000",
                    "started": "2020-05-01T11:37:55.220+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429441",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429456",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#issuecomment-622364855\n\n\n   WRT convenient single format or single file system datasets, it would be straightforward (and possibly more useful) to provide accessories for subsets, Dataset.subsets(by_format=True): { format: subset ... } Or similar. IMHO the convenience added does not justify a whole class, at least in C++. As you noted even if we remove it in C++ it could still be a convenience subclass in Python\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T12:17:18.584+0000",
                    "updated": "2020-05-01T12:17:18.584+0000",
                    "started": "2020-05-01T12:17:18.584+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429456",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429479",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#issuecomment-622388571\n\n\n   The ParquetFileSystemDataset will hold a `parquet::Metadata` for example.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T13:29:59.128+0000",
                    "updated": "2020-05-01T13:29:59.128+0000",
                    "started": "2020-05-01T13:29:59.128+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429479",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429488",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#discussion_r418554202\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -83,131 +83,67 @@ Result<ScanTaskIterator> FileFragment::Scan(std::shared_ptr<ScanOptions> options\n \n FileSystemDataset::FileSystemDataset(std::shared_ptr<Schema> schema,\n                                      std::shared_ptr<Expression> root_partition,\n-                                     std::shared_ptr<FileFormat> format,\n-                                     std::shared_ptr<fs::FileSystem> filesystem,\n-                                     fs::PathForest forest,\n-                                     ExpressionVector file_partitions)\n+                                     std::vector<std::shared_ptr<FileFragment>> fragments)\n     : Dataset(std::move(schema), std::move(root_partition)),\n-      format_(std::move(format)),\n-      filesystem_(std::move(filesystem)),\n-      forest_(std::move(forest)),\n-      partitions_(std::move(file_partitions)) {\n-  DCHECK_EQ(static_cast<size_t>(forest_.size()), partitions_.size());\n-}\n-\n-Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Make(\n-    std::shared_ptr<Schema> schema, std::shared_ptr<Expression> root_partition,\n-    std::shared_ptr<FileFormat> format, std::shared_ptr<fs::FileSystem> filesystem,\n-    std::vector<fs::FileInfo> infos) {\n-  ExpressionVector partitions(infos.size(), scalar(true));\n-  return Make(std::move(schema), std::move(root_partition), std::move(format),\n-              std::move(filesystem), std::move(infos), std::move(partitions));\n-}\n+      fragments_(std::move(fragments)) {}\n \n Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Make(\n     std::shared_ptr<Schema> schema, std::shared_ptr<Expression> root_partition,\n-    std::shared_ptr<FileFormat> format, std::shared_ptr<fs::FileSystem> filesystem,\n-    std::vector<fs::FileInfo> infos, ExpressionVector partitions) {\n-  ARROW_ASSIGN_OR_RAISE(auto forest, fs::PathForest::Make(std::move(infos), &partitions));\n-  return Make(std::move(schema), std::move(root_partition), std::move(format),\n-              std::move(filesystem), std::move(forest), std::move(partitions));\n-}\n+    FragmentVector fragments) {\n+  std::vector<std::shared_ptr<FileFragment>> file_fragments;\n+  for (const auto& fragment : fragments) {\n+    auto file_fragment = internal::checked_pointer_cast<FileFragment>(fragment);\n\nReview comment:\n       derp, I actually forgot to check.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T14:02:54.250+0000",
                    "updated": "2020-05-01T14:02:54.250+0000",
                    "started": "2020-05-01T14:02:54.250+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429488",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429493",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#discussion_r418556583\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -221,42 +157,34 @@ Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Write(\n     filesystem = std::make_shared<fs::LocalFileSystem>();\n   }\n \n-  std::vector<fs::FileInfo> files(plan.paths.size());\n-  ExpressionVector partition_expressions(plan.paths.size(), scalar(true));\n   auto task_group = scan_context->TaskGroup();\n-\n   auto partition_base_dir = fs::internal::EnsureTrailingSlash(plan.partition_base_dir);\n   auto extension = \".\" + plan.format->type_name();\n \n+  FragmentVector fragments;\n   for (size_t i = 0; i < plan.paths.size(); ++i) {\n     const auto& op = plan.fragment_or_partition_expressions[i];\n-    if (util::holds_alternative<std::shared_ptr<Expression>>(op)) {\n-      files[i].set_type(fs::FileType::Directory);\n-      files[i].set_path(partition_base_dir + plan.paths[i]);\n+    if (util::holds_alternative<std::shared_ptr<Fragment>>(op)) {\n\nReview comment:\n       This will be done part of ARROW-8382.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T14:08:39.915+0000",
                    "updated": "2020-05-01T14:08:39.915+0000",
                    "started": "2020-05-01T14:08:39.915+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429493",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429494",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#discussion_r418556583\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -221,42 +157,34 @@ Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Write(\n     filesystem = std::make_shared<fs::LocalFileSystem>();\n   }\n \n-  std::vector<fs::FileInfo> files(plan.paths.size());\n-  ExpressionVector partition_expressions(plan.paths.size(), scalar(true));\n   auto task_group = scan_context->TaskGroup();\n-\n   auto partition_base_dir = fs::internal::EnsureTrailingSlash(plan.partition_base_dir);\n   auto extension = \".\" + plan.format->type_name();\n \n+  FragmentVector fragments;\n   for (size_t i = 0; i < plan.paths.size(); ++i) {\n     const auto& op = plan.fragment_or_partition_expressions[i];\n-    if (util::holds_alternative<std::shared_ptr<Expression>>(op)) {\n-      files[i].set_type(fs::FileType::Directory);\n-      files[i].set_path(partition_base_dir + plan.paths[i]);\n+    if (util::holds_alternative<std::shared_ptr<Fragment>>(op)) {\n\nReview comment:\n       This will be part of ARROW-8382.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T14:08:52.857+0000",
                    "updated": "2020-05-01T14:08:52.857+0000",
                    "started": "2020-05-01T14:08:52.857+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429494",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429500",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#discussion_r418564299\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -83,131 +83,67 @@ Result<ScanTaskIterator> FileFragment::Scan(std::shared_ptr<ScanOptions> options\n \n FileSystemDataset::FileSystemDataset(std::shared_ptr<Schema> schema,\n                                      std::shared_ptr<Expression> root_partition,\n-                                     std::shared_ptr<FileFormat> format,\n-                                     std::shared_ptr<fs::FileSystem> filesystem,\n-                                     fs::PathForest forest,\n-                                     ExpressionVector file_partitions)\n+                                     std::vector<std::shared_ptr<FileFragment>> fragments)\n     : Dataset(std::move(schema), std::move(root_partition)),\n-      format_(std::move(format)),\n-      filesystem_(std::move(filesystem)),\n-      forest_(std::move(forest)),\n-      partitions_(std::move(file_partitions)) {\n-  DCHECK_EQ(static_cast<size_t>(forest_.size()), partitions_.size());\n-}\n-\n-Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Make(\n-    std::shared_ptr<Schema> schema, std::shared_ptr<Expression> root_partition,\n-    std::shared_ptr<FileFormat> format, std::shared_ptr<fs::FileSystem> filesystem,\n-    std::vector<fs::FileInfo> infos) {\n-  ExpressionVector partitions(infos.size(), scalar(true));\n-  return Make(std::move(schema), std::move(root_partition), std::move(format),\n-              std::move(filesystem), std::move(infos), std::move(partitions));\n-}\n+      fragments_(std::move(fragments)) {}\n \n Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Make(\n     std::shared_ptr<Schema> schema, std::shared_ptr<Expression> root_partition,\n-    std::shared_ptr<FileFormat> format, std::shared_ptr<fs::FileSystem> filesystem,\n-    std::vector<fs::FileInfo> infos, ExpressionVector partitions) {\n-  ARROW_ASSIGN_OR_RAISE(auto forest, fs::PathForest::Make(std::move(infos), &partitions));\n-  return Make(std::move(schema), std::move(root_partition), std::move(format),\n-              std::move(filesystem), std::move(forest), std::move(partitions));\n-}\n+    FragmentVector fragments) {\n+  std::vector<std::shared_ptr<FileFragment>> file_fragments;\n+  for (const auto& fragment : fragments) {\n+    auto file_fragment = internal::checked_pointer_cast<FileFragment>(fragment);\n\nReview comment:\n       Resolved by changing the to vector<FileFragment> and moving the checks at callsite.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T14:26:30.463+0000",
                    "updated": "2020-05-01T14:26:30.463+0000",
                    "started": "2020-05-01T14:26:30.463+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429500",
                    "issueId": "13295849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/worklog/429503",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #7073:\nURL: https://github.com/apache/arrow/pull/7073#issuecomment-622410968\n\n\n   I'd like elaborate a bit more on the generic dataset class regardless what kind of wrappers do we provide. \r\n   - Do you plan to unify the filesystem classes into a single one which can contain any kind of fragments (including InMemoryFragment)?\r\n   - Will the UnionDataset still be required?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T14:30:20.611+0000",
                    "updated": "2020-05-01T14:30:20.611+0000",
                    "started": "2020-05-01T14:30:20.611+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429503",
                    "issueId": "13295849"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1edd27d5[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7efdce32[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3c138dd2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2c8f583c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@46918e61[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@32a5eee3[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@12788878[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@44606cb3[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ec810d8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@13072514[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@456a4444[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2a8adae[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Sun May 03 13:00:31 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-05-03T13:00:31.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8318/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2020-04-02T17:45:04.000+0000",
        "updated": "2020-05-03T13:00:31.000+0000",
        "timeoriginalestimate": null,
        "description": "Fragments are created on the fly when invoking a Scan. This means that a lot of the auxilliary/ancilliary data must be stored by the specialised Dataset, e.g. the FileSystemDataset must hold the path and partition expression. With the venue of more complex Fragment, e.g. ParquetFileFragment, more data must be stored. ",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset] Dataset should instantiate Fragment",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295849/comment/17098422",
                    "id": "17098422",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 7073\n[https://github.com/apache/arrow/pull/7073]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-05-03T13:00:31.265+0000",
                    "updated": "2020-05-03T13:00:31.265+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0d7yg:",
        "customfield_12314139": null
    }
}