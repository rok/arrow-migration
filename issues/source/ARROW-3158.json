{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13182511",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13182511",
    "key": "ARROW-3158",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343066",
                "id": "12343066",
                "description": "",
                "name": "0.11.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-10-08"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12542258",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12542258",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "inwardIssue": {
                    "id": "13170457",
                    "key": "ARROW-2799",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170457",
                    "fields": {
                        "summary": "[Python] Add safe option to Table.from_pandas to avoid unsafe casts",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "aggregateprogress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3158/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 6,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13182511/worklog/140368",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs opened a new pull request #2503: ARROW-3158: [C++] Handle float truncation during casting\nURL: https://github.com/apache/arrow/pull/2503\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-02T00:53:47.213+0000",
                    "updated": "2018-09-02T00:53:47.213+0000",
                    "started": "2018-09-02T00:53:47.212+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "140368",
                    "issueId": "13182511"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13182511/worklog/140382",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2503: ARROW-3158: [C++] Handle float truncation during casting\nURL: https://github.com/apache/arrow/pull/2503#discussion_r214532794\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.h\n ##########\n @@ -35,10 +35,23 @@ class DataType;\n namespace compute {\n \n struct ARROW_EXPORT CastOptions {\n-  CastOptions() : allow_int_overflow(false), allow_time_truncate(false) {}\n+  CastOptions()\n+      : allow_int_overflow(false),\n+        allow_time_truncate(false),\n+        allow_float_truncate(true) {}\n \n Review comment:\n   This will be set to False by default via https://github.com/apache/arrow/pull/2504\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-02T08:26:59.078+0000",
                    "updated": "2018-09-02T08:26:59.078+0000",
                    "started": "2018-09-02T08:26:59.077+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "140382",
                    "issueId": "13182511"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13182511/worklog/140383",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2503: ARROW-3158: [C++] Handle float truncation during casting\nURL: https://github.com/apache/arrow/pull/2503#discussion_r214532794\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.h\n ##########\n @@ -35,10 +35,23 @@ class DataType;\n namespace compute {\n \n struct ARROW_EXPORT CastOptions {\n-  CastOptions() : allow_int_overflow(false), allow_time_truncate(false) {}\n+  CastOptions()\n+      : allow_int_overflow(false),\n+        allow_time_truncate(false),\n+        allow_float_truncate(true) {}\n \n Review comment:\n   True is required to keep the current behavior in the python tests.\r\n   This will be set to False by default via https://github.com/apache/arrow/pull/2504\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-02T08:27:55.728+0000",
                    "updated": "2018-09-02T08:27:55.728+0000",
                    "started": "2018-09-02T08:27:55.728+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "140383",
                    "issueId": "13182511"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13182511/worklog/140787",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy closed pull request #2503: ARROW-3158: [C++] Handle float truncation during casting\nURL: https://github.com/apache/arrow/pull/2503\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/compute/compute-test.cc b/cpp/src/arrow/compute/compute-test.cc\nindex 8bf7d1de24..a1dfdefef9 100644\n--- a/cpp/src/arrow/compute/compute-test.cc\n+++ b/cpp/src/arrow/compute/compute-test.cc\n@@ -184,12 +184,6 @@ TEST_F(TestCast, ToIntUpcast) {\n   vector<int16_t> e3 = {0, 100, 200, 255, 0};\n   CheckCase<UInt8Type, uint8_t, Int16Type, int16_t>(uint8(), v3, is_valid, int16(), e3,\n                                                     options);\n-\n-  // floating point to integer\n-  vector<double> v4 = {1.5, 0, 0.5, -1.5, 5.5};\n-  vector<int32_t> e4 = {1, 0, 0, -1, 5};\n-  CheckCase<DoubleType, double, Int32Type, int32_t>(float64(), v4, is_valid, int32(), e4,\n-                                                    options);\n }\n \n TEST_F(TestCast, OverflowInNullSlot) {\n@@ -218,32 +212,32 @@ TEST_F(TestCast, ToIntDowncastSafe) {\n   vector<bool> is_valid = {true, false, true, true, true};\n \n   // int16 to uint8, no overflow/underrun\n-  vector<int16_t> v5 = {0, 100, 200, 1, 2};\n-  vector<uint8_t> e5 = {0, 100, 200, 1, 2};\n-  CheckCase<Int16Type, int16_t, UInt8Type, uint8_t>(int16(), v5, is_valid, uint8(), e5,\n+  vector<int16_t> v1 = {0, 100, 200, 1, 2};\n+  vector<uint8_t> e1 = {0, 100, 200, 1, 2};\n+  CheckCase<Int16Type, int16_t, UInt8Type, uint8_t>(int16(), v1, is_valid, uint8(), e1,\n                                                     options);\n \n   // int16 to uint8, with overflow\n-  vector<int16_t> v6 = {0, 100, 256, 0, 0};\n-  CheckFails<Int16Type>(int16(), v6, is_valid, uint8(), options);\n+  vector<int16_t> v2 = {0, 100, 256, 0, 0};\n+  CheckFails<Int16Type>(int16(), v2, is_valid, uint8(), options);\n \n   // underflow\n-  vector<int16_t> v7 = {0, 100, -1, 0, 0};\n-  CheckFails<Int16Type>(int16(), v7, is_valid, uint8(), options);\n+  vector<int16_t> v3 = {0, 100, -1, 0, 0};\n+  CheckFails<Int16Type>(int16(), v3, is_valid, uint8(), options);\n \n   // int32 to int16, no overflow\n-  vector<int32_t> v8 = {0, 1000, 2000, 1, 2};\n-  vector<int16_t> e8 = {0, 1000, 2000, 1, 2};\n-  CheckCase<Int32Type, int32_t, Int16Type, int16_t>(int32(), v8, is_valid, int16(), e8,\n+  vector<int32_t> v4 = {0, 1000, 2000, 1, 2};\n+  vector<int16_t> e4 = {0, 1000, 2000, 1, 2};\n+  CheckCase<Int32Type, int32_t, Int16Type, int16_t>(int32(), v4, is_valid, int16(), e4,\n                                                     options);\n \n   // int32 to int16, overflow\n-  vector<int32_t> v9 = {0, 1000, 2000, 70000, 0};\n-  CheckFails<Int32Type>(int32(), v9, is_valid, int16(), options);\n+  vector<int32_t> v5 = {0, 1000, 2000, 70000, 0};\n+  CheckFails<Int32Type>(int32(), v5, is_valid, int16(), options);\n \n   // underflow\n-  vector<int32_t> v10 = {0, 1000, 2000, -70000, 0};\n-  CheckFails<Int32Type>(int32(), v9, is_valid, int16(), options);\n+  vector<int32_t> v6 = {0, 1000, 2000, -70000, 0};\n+  CheckFails<Int32Type>(int32(), v6, is_valid, int16(), options);\n }\n \n TEST_F(TestCast, ToIntDowncastUnsafe) {\n@@ -253,41 +247,75 @@ TEST_F(TestCast, ToIntDowncastUnsafe) {\n   vector<bool> is_valid = {true, false, true, true, true};\n \n   // int16 to uint8, no overflow/underrun\n-  vector<int16_t> v5 = {0, 100, 200, 1, 2};\n-  vector<uint8_t> e5 = {0, 100, 200, 1, 2};\n-  CheckCase<Int16Type, int16_t, UInt8Type, uint8_t>(int16(), v5, is_valid, uint8(), e5,\n+  vector<int16_t> v1 = {0, 100, 200, 1, 2};\n+  vector<uint8_t> e1 = {0, 100, 200, 1, 2};\n+  CheckCase<Int16Type, int16_t, UInt8Type, uint8_t>(int16(), v1, is_valid, uint8(), e1,\n                                                     options);\n \n   // int16 to uint8, with overflow\n-  vector<int16_t> v6 = {0, 100, 256, 0, 0};\n-  vector<uint8_t> e6 = {0, 100, 0, 0, 0};\n-  CheckCase<Int16Type, int16_t, UInt8Type, uint8_t>(int16(), v6, is_valid, uint8(), e6,\n+  vector<int16_t> v2 = {0, 100, 256, 0, 0};\n+  vector<uint8_t> e2 = {0, 100, 0, 0, 0};\n+  CheckCase<Int16Type, int16_t, UInt8Type, uint8_t>(int16(), v2, is_valid, uint8(), e2,\n                                                     options);\n \n   // underflow\n-  vector<int16_t> v7 = {0, 100, -1, 0, 0};\n-  vector<uint8_t> e7 = {0, 100, 255, 0, 0};\n-  CheckCase<Int16Type, int16_t, UInt8Type, uint8_t>(int16(), v7, is_valid, uint8(), e7,\n+  vector<int16_t> v3 = {0, 100, -1, 0, 0};\n+  vector<uint8_t> e3 = {0, 100, 255, 0, 0};\n+  CheckCase<Int16Type, int16_t, UInt8Type, uint8_t>(int16(), v3, is_valid, uint8(), e3,\n                                                     options);\n \n   // int32 to int16, no overflow\n-  vector<int32_t> v8 = {0, 1000, 2000, 1, 2};\n-  vector<int16_t> e8 = {0, 1000, 2000, 1, 2};\n-  CheckCase<Int32Type, int32_t, Int16Type, int16_t>(int32(), v8, is_valid, int16(), e8,\n+  vector<int32_t> v4 = {0, 1000, 2000, 1, 2};\n+  vector<int16_t> e4 = {0, 1000, 2000, 1, 2};\n+  CheckCase<Int32Type, int32_t, Int16Type, int16_t>(int32(), v4, is_valid, int16(), e4,\n                                                     options);\n \n   // int32 to int16, overflow\n   // TODO(wesm): do we want to allow this? we could set to null\n-  vector<int32_t> v9 = {0, 1000, 2000, 70000, 0};\n-  vector<int16_t> e9 = {0, 1000, 2000, 4464, 0};\n-  CheckCase<Int32Type, int32_t, Int16Type, int16_t>(int32(), v9, is_valid, int16(), e9,\n+  vector<int32_t> v5 = {0, 1000, 2000, 70000, 0};\n+  vector<int16_t> e5 = {0, 1000, 2000, 4464, 0};\n+  CheckCase<Int32Type, int32_t, Int16Type, int16_t>(int32(), v5, is_valid, int16(), e5,\n                                                     options);\n \n   // underflow\n   // TODO(wesm): do we want to allow this? we could set overflow to null\n-  vector<int32_t> v10 = {0, 1000, 2000, -70000, 0};\n-  vector<int16_t> e10 = {0, 1000, 2000, -4464, 0};\n-  CheckCase<Int32Type, int32_t, Int16Type, int16_t>(int32(), v10, is_valid, int16(), e10,\n+  vector<int32_t> v6 = {0, 1000, 2000, -70000, 0};\n+  vector<int16_t> e6 = {0, 1000, 2000, -4464, 0};\n+  CheckCase<Int32Type, int32_t, Int16Type, int16_t>(int32(), v6, is_valid, int16(), e6,\n+                                                    options);\n+}\n+\n+TEST_F(TestCast, FloatingPointToInt) {\n+  auto options = CastOptions::Safe();\n+\n+  vector<bool> is_valid = {true, false, true, true, true};\n+  vector<bool> all_valid = {true, true, true, true, true};\n+\n+  // float32 point to integer\n+  vector<float> v1 = {1.5, 0, 0.5, -1.5, 5.5};\n+  vector<int32_t> e1 = {1, 0, 0, -1, 5};\n+  CheckCase<FloatType, float, Int32Type, int32_t>(float32(), v1, is_valid, int32(), e1,\n+                                                  options);\n+  CheckCase<FloatType, float, Int32Type, int32_t>(float32(), v1, all_valid, int32(), e1,\n+                                                  options);\n+\n+  // float64 point to integer\n+  vector<double> v2 = {1.0, 0, 0.0, -1.0, 5.0};\n+  vector<int32_t> e2 = {1, 0, 0, -1, 5};\n+  CheckCase<DoubleType, double, Int32Type, int32_t>(float64(), v2, is_valid, int32(), e2,\n+                                                    options);\n+  CheckCase<DoubleType, double, Int32Type, int32_t>(float64(), v2, all_valid, int32(), e2,\n+                                                    options);\n+\n+  vector<double> v3 = {1.5, 0, 0.5, -1.5, 5.5};\n+  vector<int32_t> e3 = {1, 0, 0, -1, 5};\n+  CheckFails<DoubleType>(float64(), v3, is_valid, int32(), options);\n+  CheckFails<DoubleType>(float64(), v3, all_valid, int32(), options);\n+\n+  options.allow_float_truncate = true;\n+  CheckCase<DoubleType, double, Int32Type, int32_t>(float64(), v3, is_valid, int32(), e3,\n+                                                    options);\n+  CheckCase<DoubleType, double, Int32Type, int32_t>(float64(), v3, all_valid, int32(), e3,\n                                                     options);\n }\n \n@@ -982,18 +1010,14 @@ TEST_F(TestCast, ListToList) {\n   ASSERT_OK(\n       ListArray::FromArrays(*offsets, *float64_plain_array, pool_, &float64_list_array));\n \n-  this->CheckPass(*int32_list_array, *int64_list_array, int64_list_array->type(),\n-                  options);\n-  this->CheckPass(*int32_list_array, *float64_list_array, float64_list_array->type(),\n-                  options);\n-  this->CheckPass(*int64_list_array, *int32_list_array, int32_list_array->type(),\n-                  options);\n-  this->CheckPass(*int64_list_array, *float64_list_array, float64_list_array->type(),\n-                  options);\n-  this->CheckPass(*float64_list_array, *int32_list_array, int32_list_array->type(),\n-                  options);\n-  this->CheckPass(*float64_list_array, *int64_list_array, int64_list_array->type(),\n-                  options);\n+  CheckPass(*int32_list_array, *int64_list_array, int64_list_array->type(), options);\n+  CheckPass(*int32_list_array, *float64_list_array, float64_list_array->type(), options);\n+  CheckPass(*int64_list_array, *int32_list_array, int32_list_array->type(), options);\n+  CheckPass(*int64_list_array, *float64_list_array, float64_list_array->type(), options);\n+\n+  options.allow_float_truncate = true;\n+  CheckPass(*float64_list_array, *int32_list_array, int32_list_array->type(), options);\n+  CheckPass(*float64_list_array, *int64_list_array, int64_list_array->type(), options);\n }\n \n // ----------------------------------------------------------------------\ndiff --git a/cpp/src/arrow/compute/kernels/cast.cc b/cpp/src/arrow/compute/kernels/cast.cc\nindex 1101ce708a..2a0479d68b 100644\n--- a/cpp/src/arrow/compute/kernels/cast.cc\n+++ b/cpp/src/arrow/compute/kernels/cast.cc\n@@ -193,6 +193,23 @@ struct is_integer_downcast<\n         (sizeof(O_T) < sizeof(I_T))));\n };\n \n+template <typename O, typename I, typename Enable = void>\n+struct is_float_downcast {\n+  static constexpr bool value = false;\n+};\n+\n+template <typename O, typename I>\n+struct is_float_downcast<\n+    O, I,\n+    typename std::enable_if<std::is_base_of<Number, O>::value &&\n+                            std::is_base_of<FloatingPoint, I>::value>::type> {\n+  using O_T = typename O::c_type;\n+  using I_T = typename I::c_type;\n+\n+  // Smaller output size\n+  static constexpr bool value = !std::is_same<O, I>::value && (sizeof(O_T) < sizeof(I_T));\n+};\n+\n template <typename O, typename I>\n struct CastFunctor<O, I,\n                    typename std::enable_if<std::is_same<BooleanType, O>::value &&\n@@ -252,9 +269,54 @@ struct CastFunctor<O, I,\n   }\n };\n \n+template <typename O, typename I>\n+struct CastFunctor<O, I, typename std::enable_if<is_float_downcast<O, I>::value>::type> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    using in_type = typename I::c_type;\n+    using out_type = typename O::c_type;\n+\n+    auto in_offset = input.offset;\n+    const in_type* in_data = GetValues<in_type>(input, 1);\n+    auto out_data = GetMutableValues<out_type>(output, 1);\n+\n+    if (options.allow_float_truncate) {\n+      // unsafe cast\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        *out_data++ = static_cast<out_type>(*in_data++);\n+      }\n+    } else {\n+      // safe cast\n+      if (input.null_count != 0) {\n+        internal::BitmapReader is_valid_reader(input.buffers[0]->data(), in_offset,\n+                                               input.length);\n+        for (int64_t i = 0; i < input.length; ++i) {\n+          auto out_value = static_cast<out_type>(*in_data);\n+          if (ARROW_PREDICT_FALSE(out_value != *in_data)) {\n+            ctx->SetStatus(Status::Invalid(\"Floating point value truncated\"));\n+          }\n+          *out_data++ = out_value;\n+          in_data++;\n+          is_valid_reader.Next();\n+        }\n+      } else {\n+        for (int64_t i = 0; i < input.length; ++i) {\n+          auto out_value = static_cast<out_type>(*in_data);\n+          if (ARROW_PREDICT_FALSE(out_value != *in_data)) {\n+            ctx->SetStatus(Status::Invalid(\"Floating point value truncated\"));\n+          }\n+          *out_data++ = out_value;\n+          in_data++;\n+        }\n+      }\n+    }\n+  }\n+};\n+\n template <typename O, typename I>\n struct CastFunctor<O, I,\n                    typename std::enable_if<is_numeric_cast<O, I>::value &&\n+                                           !is_float_downcast<O, I>::value &&\n                                            !is_integer_downcast<O, I>::value>::type> {\n   void operator()(FunctionContext* ctx, const CastOptions& options,\n                   const ArrayData& input, ArrayData* output) {\ndiff --git a/cpp/src/arrow/compute/kernels/cast.h b/cpp/src/arrow/compute/kernels/cast.h\nindex b75bb7b6c1..8392c188df 100644\n--- a/cpp/src/arrow/compute/kernels/cast.h\n+++ b/cpp/src/arrow/compute/kernels/cast.h\n@@ -35,10 +35,23 @@ class DataType;\n namespace compute {\n \n struct ARROW_EXPORT CastOptions {\n-  CastOptions() : allow_int_overflow(false), allow_time_truncate(false) {}\n+  CastOptions()\n+      : allow_int_overflow(false),\n+        allow_time_truncate(false),\n+        allow_float_truncate(true) {}\n+\n+  explicit CastOptions(bool safe)\n+      : allow_int_overflow(!safe),\n+        allow_time_truncate(!safe),\n+        allow_float_truncate(!safe) {}\n+\n+  static CastOptions Safe() { return CastOptions(true); }\n+\n+  static CastOptions Unsafe() { return CastOptions(false); }\n \n   bool allow_int_overflow;\n   bool allow_time_truncate;\n+  bool allow_float_truncate;\n };\n \n /// \\since 0.7.0\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-04T07:43:55.739+0000",
                    "updated": "2018-09-04T07:43:55.739+0000",
                    "started": "2018-09-04T07:43:55.738+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "140787",
                    "issueId": "13182511"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13182511/worklog/140803",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #2503: ARROW-3158: [C++] Handle float truncation during casting\nURL: https://github.com/apache/arrow/pull/2503#issuecomment-418291153\n \n \n   Thanks Uwe!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-04T08:51:19.323+0000",
                    "updated": "2018-09-04T08:51:19.323+0000",
                    "started": "2018-09-04T08:51:19.322+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "140803",
                    "issueId": "13182511"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13182511/worklog/140982",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2503: ARROW-3158: [C++] Handle float truncation during casting\nURL: https://github.com/apache/arrow/pull/2503#discussion_r215003013\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.h\n ##########\n @@ -35,10 +35,23 @@ class DataType;\n namespace compute {\n \n struct ARROW_EXPORT CastOptions {\n-  CastOptions() : allow_int_overflow(false), allow_time_truncate(false) {}\n+  CastOptions()\n+      : allow_int_overflow(false),\n+        allow_time_truncate(false),\n+        allow_float_truncate(true) {}\n+\n+  explicit CastOptions(bool safe)\n \n Review comment:\n   Perhaps annotate these methods as internal / experimental. I'm not sure what will be the best way longer-term to manage these flags\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-04T17:34:58.931+0000",
                    "updated": "2018-09-04T17:34:58.931+0000",
                    "started": "2018-09-04T17:34:58.907+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "140982",
                    "issueId": "13182511"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 3600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@707b2dfc[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@795c37a2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9221d7a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@115bdadb[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@45d20d67[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1b911895[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2410f50[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4d8390c1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@186f0523[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@b29f30b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19856b1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@504ccbdb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Sep 04 07:43:50 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-09-04T07:43:50.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3158/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-09-02T00:45:34.000+0000",
        "updated": "2018-09-04T17:34:58.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Handle float truncation during casting",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13182511/comment/16602698",
                    "id": "16602698",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 2503\n[https://github.com/apache/arrow/pull/2503]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-09-04T07:43:50.706+0000",
                    "updated": "2018-09-04T07:43:50.706+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3xnm7:",
        "customfield_12314139": null
    }
}