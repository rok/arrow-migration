{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13252759",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759",
    "key": "ARROW-6340",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12568474",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12568474",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "outwardIssue": {
                    "id": "13250886",
                    "key": "ARROW-6242",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250886",
                    "fields": {
                        "summary": "[C++] Implements basic Dataset/Scanner/ScannerBuilder",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6340/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 38,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/315786",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454\n \n \n   I'm getting this: \r\n   \r\n   ```\r\n   ** testing if installed package can be loaded from temporary location\r\n   Error: package or namespace load failed for \u2018arrow\u2019 in dyn.load(file, DLLpath = DLLpath, ...):\r\n    unable to load shared object '/Library/Frameworks/R.framework/Versions/3.6/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so':\r\n     dlopen(/Library/Frameworks/R.framework/Versions/3.6/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so, 6): Symbol not found: __ZTVN5arrow7dataset18SimpleDataFragmentE\r\n     Referenced from: /Library/Frameworks/R.framework/Versions/3.6/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so\r\n     Expected in: flat namespace\r\n    in /Library/Frameworks/R.framework/Versions/3.6/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so\r\n   Error: loading failed\r\n   Execution halted\r\n   ERROR: loading failed\r\n   * removing \u2018/Library/Frameworks/R.framework/Versions/3.6/Resources/library/arrow\u2019\r\n   * restoring previous \u2018/Library/Frameworks/R.framework/Versions/3.6/Resources/library/arrow\u2019\r\n   ```\r\n   \r\n   and: \r\n   \r\n   \r\n   ```\r\n   $ c++filt __ZTVN5arrow7dataset18SimpleDataFragmentE\r\n   vtable for arrow::dataset::SimpleDataFragment\r\n   ```\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-20T16:42:19.453+0000",
                    "updated": "2019-09-20T16:42:19.453+0000",
                    "started": "2019-09-20T16:42:19.453+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315786",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/315787",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#issuecomment-533627872\n \n \n   libarrow_dataset is a separate shared library. I might suggest holding off on too much binding development until the Dataset library matures a bit more\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-20T16:43:27.754+0000",
                    "updated": "2019-09-20T16:43:27.754+0000",
                    "started": "2019-09-20T16:43:27.753+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315787",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/315788",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on issue #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#issuecomment-533629794\n \n \n   Thanks @wesm for the quick heads up. I'll wait then. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-20T16:49:29.043+0000",
                    "updated": "2019-09-20T16:49:29.043+0000",
                    "started": "2019-09-20T16:49:29.042+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315788",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/335223",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#issuecomment-547166524\n \n \n   This is unblocked now. With #5747 the link error is resolved and the R package installs and runs. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-28T22:08:00.957+0000",
                    "updated": "2019-10-28T22:08:00.957+0000",
                    "started": "2019-10-28T22:08:00.956+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "335223",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/338454",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#discussion_r342324156\n \n \n\n ##########\n File path: r/R/filesystem.R\n ##########\n @@ -233,7 +233,11 @@ FileSystem <- R6Class(\"FileSystem\", inherit = Object,\n #' @export\n LocalFileSystem <- R6Class(\"LocalFileSystem\", inherit = FileSystem)\n LocalFileSystem$create <- function() {\n-  shared_ptr(LocalFileSystem, fs___LocalFileSystem__create())\n+  out <- shared_ptr(LocalFileSystem, fs___LocalFileSystem__create())\n+  # HACK: For some reason, the filesystem APIs use raw pointers, not shared_ptr\n+  # so we have to preserve them in some more global scope to use them as expected\n+  options(arrow.localfs = out)\n \n Review comment:\n   Do you think you should add a global singleton mechanism for such things as this? \r\n   \r\n   @fsaintjacques @bkietz @pitrou if you think that any APIs should use shared_ptr<FileSystem> instead of raw pointers it might be better to make such a change sooner rather than later =)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-05T02:10:24.430+0000",
                    "updated": "2019-11-05T02:10:24.430+0000",
                    "started": "2019-11-05T02:10:24.430+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "338454",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/339722",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#discussion_r343456654\n \n \n\n ##########\n File path: r/src/dataset.cpp\n ##########\n @@ -0,0 +1,161 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"./arrow_types.h\"\n+\n+#if defined(ARROW_R_WITH_ARROW)\n+\n+// // [[arrow::export]]\n+// std::shared_ptr<arrow::dataset::ScanTaskIterator> dataset___DataFragment__Scan(const\n+// std::shared_ptr<arrow::dataset::DataFragment>& fragment, const\n+// std::shared_ptr<arrow::dataset::ScanContext>& scan_context) {\n+//   std::shared_ptr<arrow::dataset::ScanTaskIterator> iterator;\n+//   fragment->Scan(scan_context, iterator.get());\n+//   return iterator;\n+// }\n+\n+// [[arrow::export]]\n+bool dataset___DataFragment__splittable(\n \n Review comment:\n   Ditto DataFragment.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-07T03:14:42.418+0000",
                    "updated": "2019-11-07T03:14:42.418+0000",
                    "started": "2019-11-07T03:14:42.417+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "339722",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/339723",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#discussion_r343432089\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/api.h\n ##########\n @@ -22,5 +22,6 @@\n #include \"arrow/dataset/file_base.h\"\n #include \"arrow/dataset/file_csv.h\"\n #include \"arrow/dataset/file_feather.h\"\n+#include \"arrow/dataset/file_parquet.h\"\n \n Review comment:\n   You can't add this since building parquet is conditional. You need to have `#ifdef` guards somewhere (likely in the rcpp bindings hidding in a `.cc` implementation).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-07T03:14:42.489+0000",
                    "updated": "2019-11-07T03:14:42.489+0000",
                    "started": "2019-11-07T03:14:42.489+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "339723",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/339724",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#discussion_r343447434\n \n \n\n ##########\n File path: r/R/expression.R\n ##########\n @@ -15,22 +15,102 @@\n # specific language governing permissions and limitations\n # under the License.\n \n+#' @include arrowExports.R\n #' @export\n Ops.Array <- function(e1, e2) {\n-  structure(list(fun = .Generic, args = list(e1, e2)), class = \"Expression\")\n+  structure(list(fun = .Generic, args = list(e1, e2)), class = \"array_expression\")\n }\n \n #' @export\n Ops.ChunkedArray <- Ops.Array\n \n #' @export\n-Ops.Expression <- Ops.Array\n+Ops.array_expression <- Ops.Array\n \n #' @export\n-as.vector.Expression <- function(x, ...) {\n+as.vector.array_expression <- function(x, ...) {\n   x$args <- lapply(x$args, as.vector)\n   do.call(x$fun, x$args)\n }\n \n #' @export\n-print.Expression <- function(x, ...) print(as.vector(x))\n+print.array_expression <- function(x, ...) print(as.vector(x))\n+\n+###########\n+\n+#' @export\n+Expression <- R6Class(\"Expression\", inherit = Object,\n+  public = list(\n+    ToString = function() dataset___expr__ToString(self)\n+  )\n+)\n+\n+#' @export\n+FieldExpression <- R6Class(\"FieldExpression\", inherit = Expression)\n+FieldExpression$create <- function(name) {\n+  assert_is(name, \"character\")\n+  assert_that(length(name) == 1)\n+  shared_ptr(FieldExpression, dataset___expr__field_ref(name))\n+}\n+\n+#' @export\n+ScalarExpression <- R6Class(\"ScalarExpression\", inherit = Expression)\n+ScalarExpression$create <- function(x) {\n+  shared_ptr(ScalarExpression, dataset___expr__scalar(x))\n+}\n+\n+#' @export\n+ComparisonExpression <- R6Class(\"ComparisonExpression\", inherit = Expression)\n+ComparisonExpression$create <- function(FUN, e1, e2) {\n \n Review comment:\n   Usually the terminology is operator/OP instead of FUN.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-07T03:14:42.640+0000",
                    "updated": "2019-11-07T03:14:42.640+0000",
                    "started": "2019-11-07T03:14:42.639+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "339724",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/339725",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#discussion_r343457512\n \n \n\n ##########\n File path: r/R/dataset.R\n ##########\n @@ -0,0 +1,191 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' Open a multi-file dataset\n+#'\n+#' @param path String path to a directory containing the data files\n+#' @param schema [Schema] for the dataset. If `NULL` (the default), the schema\n+#' will be inferred from the files\n+#' @param partition One of\n+#'   * A `Schema`, in which case the file paths relative to `path` will be\n+#'    parsed, and path segments will be matched with the schema fields. For\n+#'    example, `schema(year = int16(), month = int8())` would create partitions\n+#'    for file paths like \"2019/01/file.parquet\", \"2019/02/file.parquet\", etc.\n+#'   * A `HivePartitionScheme`, as returned by [hive_partition()]\n+#'   * `NULL`, the default, for no partitioning\n+#' @param ... additional arguments passed to `DataSourceDiscovery$create()`\n+#' @return A [Dataset] R6 object. Use `dplyr` methods on it to query the data,\n+#' or call `$NewScan()` to construct a query directly.\n+#' @export\n+#' @include arrow-package.R\n+open_dataset <- function (path, schema = NULL, partition = NULL, ...) {\n+  dsd <- DataSourceDiscovery$create(path, ...)\n+  if (is.null(schema)) {\n+    schema <- dsd$Inspect()\n+  }\n+  if (!is.null(partition)) {\n+    if (inherits(partition, \"Schema\")) {\n+      partition <- SchemaPartitionScheme$create(partition)\n+    }\n+    assert_is(partition, \"PartitionScheme\")\n+    dsd$SetPartitionScheme(partition)\n+  }\n+  Dataset$create(list(dsd$Finish()), schema)\n+}\n+\n+#' @export\n+Dataset <- R6Class(\"Dataset\", inherit = Object,\n+  public = list(\n+    NewScan = function() unique_ptr(ScannerBuilder, dataset___Dataset__NewScan(self))\n+  ),\n+  active = list(\n+    schema = function() shared_ptr(Schema, dataset___Dataset__schema(self))\n+  )\n+)\n+Dataset$create <- function(sources, schema) {\n+  assert_is_list_of(sources, \"DataSource\")\n+  assert_is(schema, \"Schema\")\n+  shared_ptr(Dataset, dataset___Dataset__create(sources, schema))\n+}\n+\n+#' @export\n+names.Dataset <- function(x) names(x$schema)\n+\n+#' @export\n+DataSource <- R6Class(\"DataSource\", inherit = Object)\n+\n+#' @export\n+DataSourceDiscovery <- R6Class(\"DataSourceDiscovery\", inherit = Object,\n+  public = list(\n+    Finish = function() shared_ptr(DataSource, dataset___DSDiscovery__Finish(self)),\n+    SetPartitionScheme = function(part) {\n+      assert_is(part, \"PartitionScheme\")\n+      dataset___DSDiscovery__SetPartitionScheme(self, part)\n+      self\n+    },\n+    Inspect = function() shared_ptr(Schema, dataset___DSDiscovery__Inspect(self))\n+  )\n+)\n+DataSourceDiscovery$create <- function(path,\n+                                       filesystem = c(\"auto\", \"local\"),\n+                                       format = c(\"parquet\"),\n+                                       allow_non_existent = FALSE,\n+                                       recursive = TRUE,\n+                                       ...) {\n+  if (!inherits(filesystem, \"FileSystem\")) {\n+    filesystem <- match.arg(filesystem)\n+    if (filesystem == \"auto\") {\n+      # When there are other FileSystems supported, detect e.g. S3 from path\n+      filesystem <- \"local\"\n+    }\n+    filesystem <- list(\n+      local = LocalFileSystem\n+      # We'll register other file systems here\n+    )[[filesystem]]$create(...)\n+  }\n+  selector <- Selector$create(\n+    path,\n+    allow_non_existent = allow_non_existent,\n+    recursive = recursive\n+  )\n+  # This may also require different initializers\n+  FileSystemDataSourceDiscovery$create(filesystem, selector, format)\n+}\n+\n+#' @export\n+FileSystemDataSourceDiscovery <- R6Class(\"FileSystemDataSourceDiscovery\", inherit = DataSourceDiscovery)\n+FileSystemDataSourceDiscovery$create <- function(filesystem, selector, format = \"parquet\") {\n+  assert_is(filesystem, \"FileSystem\")\n+  assert_is(selector, \"Selector\")\n+  format <- match.arg(format) # Only parquet for now\n+  shared_ptr(FileSystemDataSourceDiscovery, dataset___FSDSDiscovery__Make(filesystem, selector))\n+}\n+\n+#' @export\n+ScannerBuilder <- R6Class(\"ScannerBuilder\", inherit = Object,\n+  public = list(\n+    Project = function(cols) {\n+      assert_is(cols, \"character\")\n+      dataset___ScannerBuilder__Project(self, cols)\n+      self\n+    },\n+    Filter = function(expr) {\n+      assert_is(expr, \"Expression\")\n+      dataset___ScannerBuilder__Filter(self, expr)\n+      self\n+    },\n+    UseThreads = function(threads = option_use_threads()) {\n+      dataset___ScannerBuilder__UseThreads(self, threads)\n+      self\n+    },\n+    Finish = function() unique_ptr(Scanner, dataset___ScannerBuilder__Finish(self))\n+  ),\n+  active = list(\n+    schema = function() shared_ptr(Schema, dataset___ScannerBuilder__schema(self))\n+  )\n+)\n+\n+#' @export\n+names.ScannerBuilder <- function(x) names(x$schema)\n+\n+#' @export\n+Scanner <- R6Class(\"Scanner\", inherit = Object,\n+  public = list(\n+    ToTable = function() shared_ptr(Table, dataset___Scanner__ToTable(self))\n+  )\n+)\n+\n+PartitionScheme <- R6Class(\"PartitionScheme\", inherit = Object)\n+SchemaPartitionScheme <- R6Class(\"SchemaPartitionScheme\", inherit = PartitionScheme)\n+SchemaPartitionScheme$create <- function(schema) {\n+  shared_ptr(SchemaPartitionScheme, dataset___SchemaPartitionScheme(schema))\n+}\n+\n+HivePartitionScheme <- R6Class(\"HivePartitionScheme\", inherit = PartitionScheme)\n+HivePartitionScheme$create <- function(schema) {\n+  shared_ptr(HivePartitionScheme, dataset___HivePartitionScheme(schema))\n+}\n+\n+#' Construct a Hive partition scheme\n+#'\n+#' Hive partitioning embeds field names and values in path segments, such as\n+#' \"/year=2019/month=2/data.parquet\". A `HivePartitionScheme` is used to parse\n+#' that in Dataset creation.\n+#'\n+#' Because fields are named in the path segments, order of fields passed to\n+#' `hive_partition()` does not matter.\n+#' @param ... named list of [data types][data-type], passed to [schema()]\n+#' @return A `HivePartitionScheme`\n+#' @examples\n+#' \\donttest{\n+#' hive_partition(year = int16(), month = int8())\n+#' }\n+hive_partition <- function(...) {\n+  schm <- schema(...)\n+  HivePartitionScheme$create(schm)\n+}\n+\n+ScanOptions <- R6Class(\"ScanOptions\", inherit = Object)\n+ScanContext <- R6Class(\"ScanContext\", inherit = Object)\n+DataFragment <- R6Class(\"DataFragment\", inherit = Object,\n \n Review comment:\n   I don't think you need anything related to DataFragment yet. I'd remove it for now.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-07T03:14:42.681+0000",
                    "updated": "2019-11-07T03:14:42.681+0000",
                    "started": "2019-11-07T03:14:42.680+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "339725",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/339726",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#discussion_r343459506\n \n \n\n ##########\n File path: r/tests/testthat/test-expression.R\n ##########\n @@ -18,25 +18,44 @@\n context(\"Expressions\")\n \n test_that(\"Can create an expression\", {\n-  expect_is(Array$create(1:5) + 4, \"Expression\")\n+  expect_is(Array$create(1:5) + 4, \"array_expression\")\n })\n \n test_that(\"Recursive expression generation\", {\n   a <- Array$create(1:5)\n-  expect_is(a == 4 | a == 3, \"Expression\")\n+  expect_is(a == 4 | a == 3, \"array_expression\")\n })\n \n-test_that(\"as.vector(expression)\", {\n+test_that(\"as.vector(rexpression)\", {\n   a <- Array$create(1:5)\n   expect_equal(as.vector(a + 4), 5:9)\n   expect_equal(as.vector(a == 4 | a == 3), c(FALSE, FALSE, TRUE, TRUE, FALSE))\n })\n \n-test_that(\"Expression print method\", {\n+test_that(\"array_expression print method\", {\n   a <- Array$create(1:5)\n   expect_output(\n     print(a == 4 | a == 3),\n     capture.output(print(c(FALSE, FALSE, TRUE, TRUE, FALSE))),\n     fixed = TRUE\n   )\n })\n+\n+test_that(\"C++ expressions\", {\n+  f <- FieldExpression$create(\"f\")\n \n Review comment:\n   `field_expr(\"f\")` seems more readable.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-07T03:14:42.684+0000",
                    "updated": "2019-11-07T03:14:42.684+0000",
                    "started": "2019-11-07T03:14:42.684+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "339726",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/339727",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#discussion_r343459640\n \n \n\n ##########\n File path: r/src/arrow_types.h\n ##########\n @@ -90,6 +90,24 @@ class ConstReferenceSmartPtrInputParameter {\n   const T* ptr;\n };\n \n+template <typename T>\n+class ConstReferenceVectorSmartPtrInputParameter {\n \n Review comment:\n   Was this auto generated?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-07T03:14:42.751+0000",
                    "updated": "2019-11-07T03:14:42.751+0000",
                    "started": "2019-11-07T03:14:42.751+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "339727",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/339728",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#discussion_r343449716\n \n \n\n ##########\n File path: r/R/filesystem.R\n ##########\n @@ -233,7 +233,11 @@ FileSystem <- R6Class(\"FileSystem\", inherit = Object,\n #' @export\n LocalFileSystem <- R6Class(\"LocalFileSystem\", inherit = FileSystem)\n LocalFileSystem$create <- function() {\n-  shared_ptr(LocalFileSystem, fs___LocalFileSystem__create())\n+  out <- shared_ptr(LocalFileSystem, fs___LocalFileSystem__create())\n+  # HACK: For some reason, the filesystem APIs use raw pointers, not shared_ptr\n+  # so we have to preserve them in some more global scope to use them as expected\n+  options(arrow.localfs = out)\n \n Review comment:\n   The raw pointer is used heavily in the inner working of filesyste API, notably each `fs::FileStat` holds a reference (via Filesystem*). \r\n   \r\n   We can refactor FileSystemDataSource constructor/builder to receives an owning pointer instead of a bare one. In such case, we would limit the lifetime leaking issue of internal objects, assuming that the FileStats never leaks outside of the class and remove this awkward requirement on callers (especially language bindings).\r\n   \r\n   @nealrichardson do you feel confortable making this change, i.e. in FileSystemDataSource, change `fs_` type to `std::shared_ptr<FileSystem>` and bubble up all compile error or shall we open the ticket?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-07T03:14:42.770+0000",
                    "updated": "2019-11-07T03:14:42.770+0000",
                    "started": "2019-11-07T03:14:42.770+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "339728",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/339729",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#discussion_r343459983\n \n \n\n ##########\n File path: r/R/dataset.R\n ##########\n @@ -0,0 +1,191 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' Open a multi-file dataset\n+#'\n+#' @param path String path to a directory containing the data files\n+#' @param schema [Schema] for the dataset. If `NULL` (the default), the schema\n+#' will be inferred from the files\n+#' @param partition One of\n+#'   * A `Schema`, in which case the file paths relative to `path` will be\n+#'    parsed, and path segments will be matched with the schema fields. For\n+#'    example, `schema(year = int16(), month = int8())` would create partitions\n+#'    for file paths like \"2019/01/file.parquet\", \"2019/02/file.parquet\", etc.\n+#'   * A `HivePartitionScheme`, as returned by [hive_partition()]\n+#'   * `NULL`, the default, for no partitioning\n+#' @param ... additional arguments passed to `DataSourceDiscovery$create()`\n+#' @return A [Dataset] R6 object. Use `dplyr` methods on it to query the data,\n+#' or call `$NewScan()` to construct a query directly.\n+#' @export\n+#' @include arrow-package.R\n+open_dataset <- function (path, schema = NULL, partition = NULL, ...) {\n \n Review comment:\n   `open_file_dataset` maybe?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-07T03:14:42.805+0000",
                    "updated": "2019-11-07T03:14:42.805+0000",
                    "started": "2019-11-07T03:14:42.805+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "339729",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/339920",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#discussion_r343624610\n \n \n\n ##########\n File path: r/R/filesystem.R\n ##########\n @@ -233,7 +233,11 @@ FileSystem <- R6Class(\"FileSystem\", inherit = Object,\n #' @export\n LocalFileSystem <- R6Class(\"LocalFileSystem\", inherit = FileSystem)\n LocalFileSystem$create <- function() {\n-  shared_ptr(LocalFileSystem, fs___LocalFileSystem__create())\n+  out <- shared_ptr(LocalFileSystem, fs___LocalFileSystem__create())\n+  # HACK: For some reason, the filesystem APIs use raw pointers, not shared_ptr\n+  # so we have to preserve them in some more global scope to use them as expected\n+  options(arrow.localfs = out)\n \n Review comment:\n   We could have an R6 class that wraps around an external pointer holding a raw pointer, instead of what we usually do, i.e. an R6 class that wraps around an external pointer holding a shared pointer. \r\n   \r\n   Then we need to know if the external pointer owns it. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-07T12:28:49.144+0000",
                    "updated": "2019-11-07T12:28:49.144+0000",
                    "started": "2019-11-07T12:28:49.143+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "339920",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/339921",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#discussion_r343624935\n \n \n\n ##########\n File path: r/src/arrow_types.h\n ##########\n @@ -90,6 +90,24 @@ class ConstReferenceSmartPtrInputParameter {\n   const T* ptr;\n };\n \n+template <typename T>\n+class ConstReferenceVectorSmartPtrInputParameter {\n \n Review comment:\n   No, why ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-07T12:29:40.346+0000",
                    "updated": "2019-11-07T12:29:40.346+0000",
                    "started": "2019-11-07T12:29:40.343+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "339921",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/339923",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#discussion_r343626304\n \n \n\n ##########\n File path: r/tests/testthat/test-expression.R\n ##########\n @@ -18,25 +18,44 @@\n context(\"Expressions\")\n \n test_that(\"Can create an expression\", {\n-  expect_is(Array$create(1:5) + 4, \"Expression\")\n+  expect_is(Array$create(1:5) + 4, \"array_expression\")\n })\n \n test_that(\"Recursive expression generation\", {\n   a <- Array$create(1:5)\n-  expect_is(a == 4 | a == 3, \"Expression\")\n+  expect_is(a == 4 | a == 3, \"array_expression\")\n })\n \n-test_that(\"as.vector(expression)\", {\n+test_that(\"as.vector(rexpression)\", {\n   a <- Array$create(1:5)\n   expect_equal(as.vector(a + 4), 5:9)\n   expect_equal(as.vector(a == 4 | a == 3), c(FALSE, FALSE, TRUE, TRUE, FALSE))\n })\n \n-test_that(\"Expression print method\", {\n+test_that(\"array_expression print method\", {\n   a <- Array$create(1:5)\n   expect_output(\n     print(a == 4 | a == 3),\n     capture.output(print(c(FALSE, FALSE, TRUE, TRUE, FALSE))),\n     fixed = TRUE\n   )\n })\n+\n+test_that(\"C++ expressions\", {\n+  f <- FieldExpression$create(\"f\")\n \n Review comment:\n   `<class>$create()` is what we settled on, but sometimes we have snake case underscore factory functions. No strong view on this, but at least `<class>$create()` is easily recognized as a constructor call. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-07T12:32:57.709+0000",
                    "updated": "2019-11-07T12:32:57.709+0000",
                    "started": "2019-11-07T12:32:57.709+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "339923",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/340050",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#discussion_r343767497\n \n \n\n ##########\n File path: r/R/dataset.R\n ##########\n @@ -0,0 +1,191 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' Open a multi-file dataset\n+#'\n+#' @param path String path to a directory containing the data files\n+#' @param schema [Schema] for the dataset. If `NULL` (the default), the schema\n+#' will be inferred from the files\n+#' @param partition One of\n+#'   * A `Schema`, in which case the file paths relative to `path` will be\n+#'    parsed, and path segments will be matched with the schema fields. For\n+#'    example, `schema(year = int16(), month = int8())` would create partitions\n+#'    for file paths like \"2019/01/file.parquet\", \"2019/02/file.parquet\", etc.\n+#'   * A `HivePartitionScheme`, as returned by [hive_partition()]\n+#'   * `NULL`, the default, for no partitioning\n+#' @param ... additional arguments passed to `DataSourceDiscovery$create()`\n+#' @return A [Dataset] R6 object. Use `dplyr` methods on it to query the data,\n+#' or call `$NewScan()` to construct a query directly.\n+#' @export\n+#' @include arrow-package.R\n+open_dataset <- function (path, schema = NULL, partition = NULL, ...) {\n+  dsd <- DataSourceDiscovery$create(path, ...)\n+  if (is.null(schema)) {\n+    schema <- dsd$Inspect()\n+  }\n+  if (!is.null(partition)) {\n+    if (inherits(partition, \"Schema\")) {\n+      partition <- SchemaPartitionScheme$create(partition)\n+    }\n+    assert_is(partition, \"PartitionScheme\")\n+    dsd$SetPartitionScheme(partition)\n+  }\n+  Dataset$create(list(dsd$Finish()), schema)\n+}\n+\n+#' @export\n+Dataset <- R6Class(\"Dataset\", inherit = Object,\n+  public = list(\n+    NewScan = function() unique_ptr(ScannerBuilder, dataset___Dataset__NewScan(self))\n+  ),\n+  active = list(\n+    schema = function() shared_ptr(Schema, dataset___Dataset__schema(self))\n+  )\n+)\n+Dataset$create <- function(sources, schema) {\n+  assert_is_list_of(sources, \"DataSource\")\n+  assert_is(schema, \"Schema\")\n+  shared_ptr(Dataset, dataset___Dataset__create(sources, schema))\n+}\n+\n+#' @export\n+names.Dataset <- function(x) names(x$schema)\n+\n+#' @export\n+DataSource <- R6Class(\"DataSource\", inherit = Object)\n+\n+#' @export\n+DataSourceDiscovery <- R6Class(\"DataSourceDiscovery\", inherit = Object,\n+  public = list(\n+    Finish = function() shared_ptr(DataSource, dataset___DSDiscovery__Finish(self)),\n+    SetPartitionScheme = function(part) {\n+      assert_is(part, \"PartitionScheme\")\n+      dataset___DSDiscovery__SetPartitionScheme(self, part)\n+      self\n+    },\n+    Inspect = function() shared_ptr(Schema, dataset___DSDiscovery__Inspect(self))\n+  )\n+)\n+DataSourceDiscovery$create <- function(path,\n+                                       filesystem = c(\"auto\", \"local\"),\n+                                       format = c(\"parquet\"),\n+                                       allow_non_existent = FALSE,\n+                                       recursive = TRUE,\n+                                       ...) {\n+  if (!inherits(filesystem, \"FileSystem\")) {\n+    filesystem <- match.arg(filesystem)\n+    if (filesystem == \"auto\") {\n+      # When there are other FileSystems supported, detect e.g. S3 from path\n+      filesystem <- \"local\"\n+    }\n+    filesystem <- list(\n+      local = LocalFileSystem\n+      # We'll register other file systems here\n+    )[[filesystem]]$create(...)\n+  }\n+  selector <- Selector$create(\n+    path,\n+    allow_non_existent = allow_non_existent,\n+    recursive = recursive\n+  )\n+  # This may also require different initializers\n+  FileSystemDataSourceDiscovery$create(filesystem, selector, format)\n+}\n+\n+#' @export\n+FileSystemDataSourceDiscovery <- R6Class(\"FileSystemDataSourceDiscovery\", inherit = DataSourceDiscovery)\n+FileSystemDataSourceDiscovery$create <- function(filesystem, selector, format = \"parquet\") {\n+  assert_is(filesystem, \"FileSystem\")\n+  assert_is(selector, \"Selector\")\n+  format <- match.arg(format) # Only parquet for now\n+  shared_ptr(FileSystemDataSourceDiscovery, dataset___FSDSDiscovery__Make(filesystem, selector))\n+}\n+\n+#' @export\n+ScannerBuilder <- R6Class(\"ScannerBuilder\", inherit = Object,\n+  public = list(\n+    Project = function(cols) {\n+      assert_is(cols, \"character\")\n+      dataset___ScannerBuilder__Project(self, cols)\n+      self\n+    },\n+    Filter = function(expr) {\n+      assert_is(expr, \"Expression\")\n+      dataset___ScannerBuilder__Filter(self, expr)\n+      self\n+    },\n+    UseThreads = function(threads = option_use_threads()) {\n+      dataset___ScannerBuilder__UseThreads(self, threads)\n+      self\n+    },\n+    Finish = function() unique_ptr(Scanner, dataset___ScannerBuilder__Finish(self))\n+  ),\n+  active = list(\n+    schema = function() shared_ptr(Schema, dataset___ScannerBuilder__schema(self))\n+  )\n+)\n+\n+#' @export\n+names.ScannerBuilder <- function(x) names(x$schema)\n+\n+#' @export\n+Scanner <- R6Class(\"Scanner\", inherit = Object,\n+  public = list(\n+    ToTable = function() shared_ptr(Table, dataset___Scanner__ToTable(self))\n+  )\n+)\n+\n+PartitionScheme <- R6Class(\"PartitionScheme\", inherit = Object)\n+SchemaPartitionScheme <- R6Class(\"SchemaPartitionScheme\", inherit = PartitionScheme)\n+SchemaPartitionScheme$create <- function(schema) {\n+  shared_ptr(SchemaPartitionScheme, dataset___SchemaPartitionScheme(schema))\n+}\n+\n+HivePartitionScheme <- R6Class(\"HivePartitionScheme\", inherit = PartitionScheme)\n+HivePartitionScheme$create <- function(schema) {\n+  shared_ptr(HivePartitionScheme, dataset___HivePartitionScheme(schema))\n+}\n+\n+#' Construct a Hive partition scheme\n+#'\n+#' Hive partitioning embeds field names and values in path segments, such as\n+#' \"/year=2019/month=2/data.parquet\". A `HivePartitionScheme` is used to parse\n+#' that in Dataset creation.\n+#'\n+#' Because fields are named in the path segments, order of fields passed to\n+#' `hive_partition()` does not matter.\n+#' @param ... named list of [data types][data-type], passed to [schema()]\n+#' @return A `HivePartitionScheme`\n+#' @examples\n+#' \\donttest{\n+#' hive_partition(year = int16(), month = int8())\n+#' }\n+hive_partition <- function(...) {\n+  schm <- schema(...)\n+  HivePartitionScheme$create(schm)\n+}\n+\n+ScanOptions <- R6Class(\"ScanOptions\", inherit = Object)\n+ScanContext <- R6Class(\"ScanContext\", inherit = Object)\n+DataFragment <- R6Class(\"DataFragment\", inherit = Object,\n \n Review comment:\n   Fair enough. This was part of Romain's start on the bindings; I didn't end up using it. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-07T17:37:00.556+0000",
                    "updated": "2019-11-07T17:37:00.556+0000",
                    "started": "2019-11-07T17:37:00.555+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "340050",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/340051",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#discussion_r343766751\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/api.h\n ##########\n @@ -22,5 +22,6 @@\n #include \"arrow/dataset/file_base.h\"\n #include \"arrow/dataset/file_csv.h\"\n #include \"arrow/dataset/file_feather.h\"\n+#include \"arrow/dataset/file_parquet.h\"\n \n Review comment:\n   I'd expect the `#ifdef` to be here since the other file format headers are included here. Why not?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-07T17:37:00.618+0000",
                    "updated": "2019-11-07T17:37:00.618+0000",
                    "started": "2019-11-07T17:37:00.618+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "340051",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/340052",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#discussion_r343770118\n \n \n\n ##########\n File path: r/R/filesystem.R\n ##########\n @@ -233,7 +233,11 @@ FileSystem <- R6Class(\"FileSystem\", inherit = Object,\n #' @export\n LocalFileSystem <- R6Class(\"LocalFileSystem\", inherit = FileSystem)\n LocalFileSystem$create <- function() {\n-  shared_ptr(LocalFileSystem, fs___LocalFileSystem__create())\n+  out <- shared_ptr(LocalFileSystem, fs___LocalFileSystem__create())\n+  # HACK: For some reason, the filesystem APIs use raw pointers, not shared_ptr\n+  # so we have to preserve them in some more global scope to use them as expected\n+  options(arrow.localfs = out)\n \n Review comment:\n   @fsaintjacques you mean change the signature here https://github.com/apache/arrow/blob/master/cpp/src/arrow/dataset/file_base.h#L188\r\n   \r\n   and then fix everything that breaks? Or start somewhere else?\r\n   \r\n   I can try, and if I fail can make a followup jira.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-07T17:37:00.686+0000",
                    "updated": "2019-11-07T17:37:00.686+0000",
                    "started": "2019-11-07T17:37:00.686+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "340052",
                    "issueId": "13252759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/worklog/340053",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #5454: ARROW-6340 [R] Implements low-level bindings to Dataset classes\nURL: https://github.com/apache/arrow/pull/5454#discussion_r343781845\n \n \n\n ##########\n File path: r/tests/testthat/test-expression.R\n ##########\n @@ -18,25 +18,44 @@\n context(\"Expressions\")\n \n test_that(\"Can create an expression\", {\n-  expect_is(Array$create(1:5) + 4, \"Expression\")\n+  expect_is(Array$create(1:5) + 4, \"array_expression\")\n })\n \n test_that(\"Recursive expression generation\", {\n   a <- Array$create(1:5)\n-  expect_is(a == 4 | a == 3, \"Expression\")\n+  expect_is(a == 4 | a == 3, \"array_expression\")\n })\n \n-test_that(\"as.vector(expression)\", {\n+test_that(\"as.vector(rexpression)\", {\n   a <- Array$create(1:5)\n   expect_equal(as.vector(a + 4), 5:9)\n   expect_equal(as.vector(a == 4 | a == 3), c(FALSE, FALSE, TRUE, TRUE, FALSE))\n })\n \n-test_that(\"Expression print method\", {\n+test_that(\"array_expression print method\", {\n   a <- Array$create(1:5)\n   expect_output(\n     print(a == 4 | a == 3),\n     capture.output(print(c(FALSE, FALSE, TRUE, TRUE, FALSE))),\n     fixed = TRUE\n   )\n })\n+\n+test_that(\"C++ expressions\", {\n+  f <- FieldExpression$create(\"f\")\n \n Review comment:\n   I don't expect humans to make field expressions directly, so that's why there's no convenience constructor.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-07T17:37:00.750+0000",
                    "updated": "2019-11-07T17:37:00.750+0000",
                    "started": "2019-11-07T17:37:00.749+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "340053",
                    "issueId": "13252759"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 21600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@16ec4bcc[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1951a3f2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a3715a4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4e6d6323[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1fe6228b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3d796d0b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f01c535[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7a50d18d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@548c4636[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@226b7899[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7392398c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@f3242ca[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 21600,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Nov 08 19:23:08 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-11-08T19:23:08.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6340/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-08-23T21:17:06.000+0000",
        "updated": "2020-04-10T15:32:49.000+0000",
        "timeoriginalestimate": null,
        "description": "The following classes should be accessible from R:\r\n * class DataSource\r\n * class DataSourceDiscovery\r\n * class Dataset\r\n * class ScanContext, ScanOptions, ScanTask\r\n * class ScannerBuilder\r\n * class Scanner\r\n\r\nThe end result is reading a directory of parquet files as a single stream. One should be able to re-implement\u00a0[https://github.com/apache/arrow/pull/5720]\u00a0in R.\u00a0\r\n\r\nSee also\u00a0[https://github.com/apache/arrow/pull/5675/files]\u00a0for another end-to-end example in C++.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 21600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Implements low-level bindings to Dataset classes",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252759/comment/16970532",
                    "id": "16970532",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 5454\n[https://github.com/apache/arrow/pull/5454]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-11-08T19:23:08.273+0000",
                    "updated": "2019-11-08T19:23:08.273+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z05zts:",
        "customfield_12314139": null
    }
}