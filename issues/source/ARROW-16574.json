{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13444901",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901",
    "key": "ARROW-16574",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "1.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16574/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 14,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901/worklog/775309",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace opened a new pull request, #13245:\nURL: https://github.com/apache/arrow/pull/13245\n\n   When reading multiple batches at the same time it was possible for concurrent attempts to increment `ReadStats` counters.\n\n\n",
                    "created": "2022-05-27T01:50:48.736+0000",
                    "updated": "2022-05-27T01:50:48.736+0000",
                    "started": "2022-05-27T01:50:48.736+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "775309",
                    "issueId": "13444901"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901/worklog/775310",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13245:\nURL: https://github.com/apache/arrow/pull/13245#issuecomment-1139204191\n\n   https://issues.apache.org/jira/browse/ARROW-16574\n\n\n",
                    "created": "2022-05-27T01:51:06.585+0000",
                    "updated": "2022-05-27T01:51:06.585+0000",
                    "started": "2022-05-27T01:51:06.584+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "775310",
                    "issueId": "13444901"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901/worklog/775773",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on code in PR #13245:\nURL: https://github.com/apache/arrow/pull/13245#discussion_r884444944\n\n\n##########\ncpp/src/arrow/ipc/reader.cc:\n##########\n@@ -1121,6 +1121,29 @@ class ARROW_EXPORT SelectiveIpcFileRecordBatchGenerator {\n   int index_;\n };\n \n+struct AtomicReadStats {\n+  std::atomic<int64_t> num_messages{0};\n+  std::atomic<int64_t> num_record_batches{0};\n+  std::atomic<int64_t> num_dictionary_batches{0};\n+  std::atomic<int64_t> num_dictionary_deltas{0};\n+  std::atomic<int64_t> num_replaced_dictionaries{0};\n+\n+  /// \\brief Capture a copy of the current counters\n+  ///\n+  /// It's possible to get inconsistent values.  For example, if\n+  /// this method is called in the middle of a read you might have\n+  /// a case where num_messages != num_record_batches + num_dictionary_batches\n+  ReadStats poll() const {\n+    ReadStats stats;\n+    stats.num_messages = num_messages.load();\n\nReview Comment:\n   Nit: also use `memory_order_relaxed`?\n\n\n\n##########\ncpp/src/arrow/ipc/reader.cc:\n##########\n@@ -1121,6 +1121,29 @@ class ARROW_EXPORT SelectiveIpcFileRecordBatchGenerator {\n   int index_;\n };\n \n+struct AtomicReadStats {\n\nReview Comment:\n   Can we move this struct inside `RecordBatchFileReaderImpl`?\n\n\n\n##########\ncpp/src/arrow/ipc/reader.cc:\n##########\n@@ -1121,6 +1121,29 @@ class ARROW_EXPORT SelectiveIpcFileRecordBatchGenerator {\n   int index_;\n };\n \n+struct AtomicReadStats {\n+  std::atomic<int64_t> num_messages{0};\n+  std::atomic<int64_t> num_record_batches{0};\n+  std::atomic<int64_t> num_dictionary_batches{0};\n+  std::atomic<int64_t> num_dictionary_deltas{0};\n+  std::atomic<int64_t> num_replaced_dictionaries{0};\n+\n+  /// \\brief Capture a copy of the current counters\n+  ///\n+  /// It's possible to get inconsistent values.  For example, if\n+  /// this method is called in the middle of a read you might have\n+  /// a case where num_messages != num_record_batches + num_dictionary_batches\n+  ReadStats poll() const {\n+    ReadStats stats;\n+    stats.num_messages = num_messages.load();\n\nReview Comment:\n   Nit: also use `memory_order_relaxed`?\n\n\n\n",
                    "created": "2022-05-30T06:01:27.904+0000",
                    "updated": "2022-05-30T06:01:27.904+0000",
                    "started": "2022-05-30T06:01:27.903+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "775773",
                    "issueId": "13444901"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901/worklog/775976",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13245:\nURL: https://github.com/apache/arrow/pull/13245#discussion_r884962825\n\n\n##########\ncpp/src/arrow/ipc/reader.cc:\n##########\n@@ -1121,6 +1121,29 @@ class ARROW_EXPORT SelectiveIpcFileRecordBatchGenerator {\n   int index_;\n };\n \n+struct AtomicReadStats {\n+  std::atomic<int64_t> num_messages{0};\n+  std::atomic<int64_t> num_record_batches{0};\n+  std::atomic<int64_t> num_dictionary_batches{0};\n+  std::atomic<int64_t> num_dictionary_deltas{0};\n+  std::atomic<int64_t> num_replaced_dictionaries{0};\n+\n+  /// \\brief Capture a copy of the current counters\n+  ///\n+  /// It's possible to get inconsistent values.  For example, if\n+  /// this method is called in the middle of a read you might have\n+  /// a case where num_messages != num_record_batches + num_dictionary_batches\n\nReview Comment:\n   This sounds a bit undesirable. Would it be too expensive to use a mutex instead?\n\n\n\n",
                    "created": "2022-05-30T16:05:52.964+0000",
                    "updated": "2022-05-30T16:05:52.964+0000",
                    "started": "2022-05-30T16:05:52.963+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "775976",
                    "issueId": "13444901"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901/worklog/776028",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13245:\nURL: https://github.com/apache/arrow/pull/13245#discussion_r885060427\n\n\n##########\ncpp/src/arrow/ipc/reader.cc:\n##########\n@@ -1121,6 +1121,29 @@ class ARROW_EXPORT SelectiveIpcFileRecordBatchGenerator {\n   int index_;\n };\n \n+struct AtomicReadStats {\n+  std::atomic<int64_t> num_messages{0};\n+  std::atomic<int64_t> num_record_batches{0};\n+  std::atomic<int64_t> num_dictionary_batches{0};\n+  std::atomic<int64_t> num_dictionary_deltas{0};\n+  std::atomic<int64_t> num_replaced_dictionaries{0};\n+\n+  /// \\brief Capture a copy of the current counters\n+  ///\n+  /// It's possible to get inconsistent values.  For example, if\n+  /// this method is called in the middle of a read you might have\n+  /// a case where num_messages != num_record_batches + num_dictionary_batches\n\nReview Comment:\n   Does it make a difference that this is not new behavior?  We increment `num_messages` as soon as we figure out there is a new message.  We don't increment `num_record_batches` until we have confirmed that the new message is, in fact, a record batch.  This happens in an entirely different method altogether.\r\n   \r\n   I can move things around to fix this but I also think this is mainly an internal counter used for unit tests and so I'm not very motivated to do so.  Mainly I made this comment because I was trying to figure out if this was an invariant we already maintained (we didn't) that I needed to keep consistent with the new approach.\n\n\n\n",
                    "created": "2022-05-30T20:11:01.130+0000",
                    "updated": "2022-05-30T20:11:01.130+0000",
                    "started": "2022-05-30T20:11:01.130+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "776028",
                    "issueId": "13444901"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901/worklog/776113",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13245:\nURL: https://github.com/apache/arrow/pull/13245#discussion_r885296407\n\n\n##########\ncpp/src/arrow/ipc/reader.cc:\n##########\n@@ -1121,6 +1121,29 @@ class ARROW_EXPORT SelectiveIpcFileRecordBatchGenerator {\n   int index_;\n };\n \n+struct AtomicReadStats {\n+  std::atomic<int64_t> num_messages{0};\n+  std::atomic<int64_t> num_record_batches{0};\n+  std::atomic<int64_t> num_dictionary_batches{0};\n+  std::atomic<int64_t> num_dictionary_deltas{0};\n+  std::atomic<int64_t> num_replaced_dictionaries{0};\n+\n+  /// \\brief Capture a copy of the current counters\n+  ///\n+  /// It's possible to get inconsistent values.  For example, if\n+  /// this method is called in the middle of a read you might have\n+  /// a case where num_messages != num_record_batches + num_dictionary_batches\n\nReview Comment:\n   You're right, it is not new behaviour so we may not want to fix this anyway. OTOH, using a mutex instead of atomics should be an easy changes, a potential perf problem sounds like the only reasonable reason not to do it.\n\n\n\n",
                    "created": "2022-05-31T07:32:18.970+0000",
                    "updated": "2022-05-31T07:32:18.970+0000",
                    "started": "2022-05-31T07:32:18.970+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "776113",
                    "issueId": "13444901"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901/worklog/776261",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13245:\nURL: https://github.com/apache/arrow/pull/13245#discussion_r885540943\n\n\n##########\ncpp/src/arrow/ipc/reader.cc:\n##########\n@@ -1121,6 +1121,29 @@ class ARROW_EXPORT SelectiveIpcFileRecordBatchGenerator {\n   int index_;\n };\n \n+struct AtomicReadStats {\n+  std::atomic<int64_t> num_messages{0};\n+  std::atomic<int64_t> num_record_batches{0};\n+  std::atomic<int64_t> num_dictionary_batches{0};\n+  std::atomic<int64_t> num_dictionary_deltas{0};\n+  std::atomic<int64_t> num_replaced_dictionaries{0};\n+\n+  /// \\brief Capture a copy of the current counters\n+  ///\n+  /// It's possible to get inconsistent values.  For example, if\n+  /// this method is called in the middle of a read you might have\n+  /// a case where num_messages != num_record_batches + num_dictionary_batches\n\nReview Comment:\n   In my limited understanding, since the values all likely reside in the same cache line, there's likely false sharing anyways right? So we may as well use the mutex.\n\n\n\n",
                    "created": "2022-05-31T11:51:31.191+0000",
                    "updated": "2022-05-31T11:51:31.191+0000",
                    "started": "2022-05-31T11:51:31.191+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "776261",
                    "issueId": "13444901"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901/worklog/776616",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13245:\nURL: https://github.com/apache/arrow/pull/13245#discussion_r886238647\n\n\n##########\ncpp/src/arrow/ipc/reader.cc:\n##########\n@@ -1121,6 +1121,29 @@ class ARROW_EXPORT SelectiveIpcFileRecordBatchGenerator {\n   int index_;\n };\n \n+struct AtomicReadStats {\n\nReview Comment:\n   Done.\n\n\n\n##########\ncpp/src/arrow/ipc/reader.cc:\n##########\n@@ -1121,6 +1121,29 @@ class ARROW_EXPORT SelectiveIpcFileRecordBatchGenerator {\n   int index_;\n };\n \n+struct AtomicReadStats {\n+  std::atomic<int64_t> num_messages{0};\n+  std::atomic<int64_t> num_record_batches{0};\n+  std::atomic<int64_t> num_dictionary_batches{0};\n+  std::atomic<int64_t> num_dictionary_deltas{0};\n+  std::atomic<int64_t> num_replaced_dictionaries{0};\n+\n+  /// \\brief Capture a copy of the current counters\n+  ///\n+  /// It's possible to get inconsistent values.  For example, if\n+  /// this method is called in the middle of a read you might have\n+  /// a case where num_messages != num_record_batches + num_dictionary_batches\n+  ReadStats poll() const {\n+    ReadStats stats;\n+    stats.num_messages = num_messages.load();\n\nReview Comment:\n   Done.\n\n\n\n",
                    "created": "2022-06-01T00:58:31.404+0000",
                    "updated": "2022-06-01T00:58:31.404+0000",
                    "started": "2022-06-01T00:58:31.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "776616",
                    "issueId": "13444901"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901/worklog/776619",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13245:\nURL: https://github.com/apache/arrow/pull/13245#discussion_r886245878\n\n\n##########\ncpp/src/arrow/ipc/reader.cc:\n##########\n@@ -1121,6 +1121,29 @@ class ARROW_EXPORT SelectiveIpcFileRecordBatchGenerator {\n   int index_;\n };\n \n+struct AtomicReadStats {\n+  std::atomic<int64_t> num_messages{0};\n+  std::atomic<int64_t> num_record_batches{0};\n+  std::atomic<int64_t> num_dictionary_batches{0};\n+  std::atomic<int64_t> num_dictionary_deltas{0};\n+  std::atomic<int64_t> num_replaced_dictionaries{0};\n+\n+  /// \\brief Capture a copy of the current counters\n+  ///\n+  /// It's possible to get inconsistent values.  For example, if\n+  /// this method is called in the middle of a read you might have\n+  /// a case where num_messages != num_record_batches + num_dictionary_batches\n\nReview Comment:\n   Looking at this further I'm more convinced this isn't needed.  For example, when reading rows, the number of messages will be incremented but the number of record batches will not.  So this isn't a very reliable invariant anyways.\r\n   \r\n   I went ahead and removed the comment itself to avoid confusion in the future.\r\n   \r\n   I'm still open to using a mutex instead of an atomic if we want to.  I only chose atomics for simplicity and not for performance.\r\n   \r\n   There does appear to be a slight impact to performance for very simple IPC reads from buffers which is unfortunate:\r\n   \r\n   Before:\r\n   ```\r\n   ReadBuffer/num_cols:1/is_partial:0/real_time_mean         2372 ns         2372 ns          100 bytes_per_second=411.778G/s\r\n   ```\r\n   After:\r\n   ```\r\n   ReadBuffer/num_cols:1/is_partial:0/real_time_mean         2525 ns         2525 ns          100 bytes_per_second=386.79G/s\r\n   ```\n\n\n\n",
                    "created": "2022-06-01T01:20:49.366+0000",
                    "updated": "2022-06-01T01:20:49.366+0000",
                    "started": "2022-06-01T01:20:49.366+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "776619",
                    "issueId": "13444901"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901/worklog/776635",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on code in PR #13245:\nURL: https://github.com/apache/arrow/pull/13245#discussion_r886278338\n\n\n##########\ncpp/src/arrow/ipc/reader.cc:\n##########\n@@ -1121,6 +1121,29 @@ class ARROW_EXPORT SelectiveIpcFileRecordBatchGenerator {\n   int index_;\n };\n \n+struct AtomicReadStats {\n+  std::atomic<int64_t> num_messages{0};\n+  std::atomic<int64_t> num_record_batches{0};\n+  std::atomic<int64_t> num_dictionary_batches{0};\n+  std::atomic<int64_t> num_dictionary_deltas{0};\n+  std::atomic<int64_t> num_replaced_dictionaries{0};\n+\n+  /// \\brief Capture a copy of the current counters\n+  ///\n+  /// It's possible to get inconsistent values.  For example, if\n+  /// this method is called in the middle of a read you might have\n+  /// a case where num_messages != num_record_batches + num_dictionary_batches\n\nReview Comment:\n   > There does appear to be a slight impact to performance for very simple IPC reads from buffers which is unfortunate:\r\n   \r\n   Don't be obsessed to microbenchmark :-)\n\n\n\n",
                    "created": "2022-06-01T02:58:03.041+0000",
                    "updated": "2022-06-01T02:58:03.041+0000",
                    "started": "2022-06-01T02:58:03.041+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "776635",
                    "issueId": "13444901"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901/worklog/776639",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on PR #13245:\nURL: https://github.com/apache/arrow/pull/13245#issuecomment-1143069477\n\n   CI failures appear unrelated (although this is the first time I've seen [this Travis error](https://app.travis-ci.com/github/apache/arrow/jobs/571998348)).\n\n\n",
                    "created": "2022-06-01T03:08:50.636+0000",
                    "updated": "2022-06-01T03:08:50.636+0000",
                    "started": "2022-06-01T03:08:50.635+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "776639",
                    "issueId": "13444901"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901/worklog/776677",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on code in PR #13245:\nURL: https://github.com/apache/arrow/pull/13245#discussion_r886347121\n\n\n##########\ncpp/src/arrow/ipc/reader.cc:\n##########\n@@ -1121,6 +1121,29 @@ class ARROW_EXPORT SelectiveIpcFileRecordBatchGenerator {\n   int index_;\n };\n \n+struct AtomicReadStats {\n+  std::atomic<int64_t> num_messages{0};\n+  std::atomic<int64_t> num_record_batches{0};\n+  std::atomic<int64_t> num_dictionary_batches{0};\n+  std::atomic<int64_t> num_dictionary_deltas{0};\n+  std::atomic<int64_t> num_replaced_dictionaries{0};\n+\n+  /// \\brief Capture a copy of the current counters\n+  ///\n+  /// It's possible to get inconsistent values.  For example, if\n+  /// this method is called in the middle of a read you might have\n+  /// a case where num_messages != num_record_batches + num_dictionary_batches\n\nReview Comment:\n   > In my limited understanding, since the values all likely reside in the same cache line, there's likely false sharing anyways right? So we may as well use the mutex.\r\n   \r\n   Tested the effect of incrementing two different variables in same cache line concurrently.\r\n   No obvious penalty for normal variables, I think most of the time the two varible are in each cpu's store buffer, most load/store never reaches the L1 cache.\r\n   Big penalty for atomic fetch add, memory access is prefixed with `lock` operand and have to reach L1, results in heavy cache line contentions. It's much better if forcing the two variables in different cache line.\r\n   \r\n   Benchmark result available in the source code.\r\n   https://gist.github.com/cyb70289/c9500d7f962a6f1d9b594ace9a9a358a\r\n   \r\n   AFAIK, false sharing may cause trouble if global data is mutated by cpus in different numa nodes.\n\n\n\n",
                    "created": "2022-06-01T06:06:03.063+0000",
                    "updated": "2022-06-01T06:06:03.063+0000",
                    "started": "2022-06-01T06:06:03.062+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "776677",
                    "issueId": "13444901"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901/worklog/777181",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13245:\nURL: https://github.com/apache/arrow/pull/13245#discussion_r887322632\n\n\n##########\ncpp/src/arrow/ipc/reader.cc:\n##########\n@@ -1121,6 +1121,29 @@ class ARROW_EXPORT SelectiveIpcFileRecordBatchGenerator {\n   int index_;\n };\n \n+struct AtomicReadStats {\n+  std::atomic<int64_t> num_messages{0};\n+  std::atomic<int64_t> num_record_batches{0};\n+  std::atomic<int64_t> num_dictionary_batches{0};\n+  std::atomic<int64_t> num_dictionary_deltas{0};\n+  std::atomic<int64_t> num_replaced_dictionaries{0};\n+\n+  /// \\brief Capture a copy of the current counters\n+  ///\n+  /// It's possible to get inconsistent values.  For example, if\n+  /// this method is called in the middle of a read you might have\n+  /// a case where num_messages != num_record_batches + num_dictionary_batches\n\nReview Comment:\n   Thanks for the share.  We could maybe solve this particular problem with thread local stat counters that get accumulated when the stats are asked for but I agree with your earlier comment that we don't want to obsess over this too much until it becomes a problem for someone.\n\n\n\n",
                    "created": "2022-06-01T21:36:44.463+0000",
                    "updated": "2022-06-01T21:36:44.463+0000",
                    "started": "2022-06-01T21:36:44.463+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "777181",
                    "issueId": "13444901"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901/worklog/777234",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 merged PR #13245:\nURL: https://github.com/apache/arrow/pull/13245\n\n\n",
                    "created": "2022-06-02T01:24:18.619+0000",
                    "updated": "2022-06-02T01:24:18.619+0000",
                    "started": "2022-06-02T01:24:18.619+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "777234",
                    "issueId": "13444901"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 8400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5534a401[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6041b988[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@41af0371[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2c4f6f35[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6809596c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4c1e58d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3dccdaef[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6a2d3ca4[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@48cdcab4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@432ba3ad[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@18eb1285[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1b20d520[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 8400,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jun 02 01:24:22 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-06-02T01:24:22.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16574/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2022-05-13T19:23:46.000+0000",
        "updated": "2022-06-02T01:24:22.000+0000",
        "timeoriginalestimate": null,
        "description": "https://github.com/ursacomputing/crossbow/runs/6416775759?check_suite_focus=true\r\n\r\nAttaching the log in case the CI job expires.  Relevant portion:\r\n\r\n{noformat}\r\n2022-05-13T03:37:00.5908939Z [----------] 1 test from PreBuffering\r\n2022-05-13T03:37:00.5909275Z [ RUN      ] PreBuffering.MixedAccess\r\n2022-05-13T03:37:00.5909562Z ==================\r\n2022-05-13T03:37:00.5909980Z WARNING: ThreadSanitizer: data race (pid=17726)\r\n2022-05-13T03:37:00.5910339Z   Write of size 8 at 0x7b5400000d90 by thread T3:\r\n2022-05-13T03:37:00.5911076Z     #0 arrow::ipc::RecordBatchFileReaderImpl::ReadMessageFromBlock(arrow::ipc::internal::FileBlock const&, std::function<arrow::Status (void const*, arrow::io::RandomAccessFile*)> const&) /arrow/cpp/src/arrow/ipc/reader.cc:1389:5 (libarrow.so.900+0x3cb999a)\r\n2022-05-13T03:37:00.5911981Z     #1 arrow::ipc::RecordBatchFileReaderImpl::ReadDictionaries() /arrow/cpp/src/arrow/ipc/reader.cc:1397:7 (libarrow.so.900+0x3cb9d5a)\r\n2022-05-13T03:37:00.5912951Z     #2 arrow::ipc::RecordBatchFileReaderImpl::EnsureDictionaryReadStarted()::'lambda'()::operator()() const /arrow/cpp/src/arrow/ipc/reader.cc:1449:20 (libarrow.so.900+0x3cbcde2)\r\n2022-05-13T03:37:00.5915049Z     #3 std::enable_if<((!(std::is_void<arrow::Status>::value)) && (!(is_future<arrow::Status>::value))) && ((!(arrow::Future<arrow::internal::Empty>::is_empty)) || (std::is_same<arrow::Status, arrow::Status>::value)), void>::type arrow::detail::ContinueFuture::operator()<arrow::ipc::RecordBatchFileReaderImpl::EnsureDictionaryReadStarted()::'lambda'(), arrow::Status, arrow::Future<arrow::internal::Empty> >(arrow::Future<arrow::internal::Empty>, arrow::ipc::RecordBatchFileReaderImpl::EnsureDictionaryReadStarted()::'lambda'()&&) const /arrow/cpp/src/arrow/util/future.h:148:23 (libarrow.so.900+0x3cbcd14)\r\n2022-05-13T03:37:00.5917399Z     #4 void arrow::detail::ContinueFuture::IgnoringArgsIf<arrow::ipc::RecordBatchFileReaderImpl::EnsureDictionaryReadStarted()::'lambda'(), arrow::Future<arrow::internal::Empty>, arrow::internal::Empty const&>(std::integral_constant<bool, true>, arrow::Future<arrow::internal::Empty>&&, arrow::ipc::RecordBatchFileReaderImpl::EnsureDictionaryReadStarted()::'lambda'()&&, arrow::internal::Empty const&) const /arrow/cpp/src/arrow/util/future.h:186:5 (libarrow.so.900+0x3cbcb46)\r\n...\r\n\r\n2022-05-13T03:37:00.6038343Z   Previous write of size 8 at 0x7b5400000d90 by main thread:\r\n2022-05-13T03:37:00.6039259Z     #0 arrow::ipc::RecordBatchFileReaderImpl::DoPreBufferMetadata(std::vector<int, std::allocator<int> > const&)::'lambda'()::operator()() const /arrow/cpp/src/arrow/ipc/reader.cc:1348:13 (libarrow.so.900+0x3cbdb0c)\r\n2022-05-13T03:37:00.6042008Z     #1 std::enable_if<((!(std::is_void<arrow::Result<std::shared_ptr<arrow::ipc::Message> > >::value)) && (!(is_future<arrow::Result<std::shared_ptr<arrow::ipc::Message> > >::value))) && ((!(arrow::Future<std::shared_ptr<arrow::ipc::Message> >::is_empty)) || (std::is_same<arrow::Result<std::shared_ptr<arrow::ipc::Message> >, arrow::Status>::value)), void>::type arrow::detail::ContinueFuture::operator()<arrow::ipc::RecordBatchFileReaderImpl::DoPreBufferMetadata(std::vector<int, std::allocator<int> > const&)::'lambda'(), arrow::Result<std::shared_ptr<arrow::ipc::Message> >, arrow::Future<std::shared_ptr<arrow::ipc::Message> > >(arrow::Future<std::shared_ptr<arrow::ipc::Message> >, arrow::ipc::RecordBatchFileReaderImpl::DoPreBufferMetadata(std::vector<int, std::allocator<int> > const&)::'lambda'()&&) const /arrow/cpp/src/arrow/util/future.h:148:23 (libarrow.so.900+0x3cbd9d7)\r\n2022-05-13T03:37:00.6045037Z     #2 void arrow::detail::ContinueFuture::IgnoringArgsIf<arrow::ipc::RecordBatchFileReaderImpl::DoPreBufferMetadata(std::vector<int, std::allocator<int> > const&)::'lambda'(), arrow::Future<std::shared_ptr<arrow::ipc::Message> >, arrow::internal::Empty const&>(std::integral_constant<bool, true>, arrow::Future<std::shared_ptr<arrow::ipc::Message> >&&, arrow::ipc::RecordBatchFileReaderImpl::DoPreBufferMetadata(std::vector<int, std::allocator<int> > const&)::'lambda'()&&, arrow::internal::Empty const&) const /arrow/cpp/src/arrow/util/future.h:186:5 (libarrow.so.900+0x3cbd806)\r\n2022-05-13T03:37:00.6047374Z     #3 arrow::Future<arrow::internal::Empty>::ThenOnComplete<arrow::ipc::RecordBatchFileReaderImpl::DoPreBufferMetadata(std::vector<int, std::allocator<int> > const&)::'lambda'(), arrow::Future<arrow::internal::Empty>::PassthruOnFailure<arrow::ipc::RecordBatchFileReaderImpl::DoPreBufferMetadata(std::vector<int, std::allocator<int> > const&)::'lambda'()> >::operator()(arrow::Result<arrow::internal::Empty> const&) && /arrow/cpp/src/arrow/util/future.h:599:25 (libarrow.so.900+0x3cbd628)\r\n2022-05-13T03:37:00.6049740Z     #4 arrow::Future<arrow::internal::Empty>::WrapResultyOnComplete::Callback<arrow::Future<arrow::internal::Empty>::ThenOnComplete<arrow::ipc::RecordBatchFileReaderImpl::DoPreBufferMetadata(std::vector<int, std::allocator<int> > const&)::'lambda'(), arrow::Future<arrow::internal::Empty>::PassthruOnFailure<arrow::ipc::RecordBatchFileReaderImpl::DoPreBufferMetadata(std::vector<int, std::allocator<int> > const&)::'lambda'()> > >::operator()(arrow::FutureImpl const&) && /arrow/cpp/src/arrow/util/future.h:496:9 (libarrow.so.900+0x3cbd53d)\r\n2022-05-13T03:37:00.6052338Z     #5 arrow::internal::FnOnce<void (arrow::FutureImpl const&)>::FnImpl<arrow::Future<arrow::internal::Empty>::WrapResultyOnComplete::Callback<arrow::Future<arrow::internal::Empty>::ThenOnComplete<arrow::ipc::RecordBatchFileReaderImpl::DoPreBufferMetadata(std::vector<int, std::allocator<int> > const&)::'lambda'(), arrow::Future<arrow::internal::Empty>::PassthruOnFailure<arrow::ipc::RecordBatchFileReaderImpl::DoPreBufferMetadata(std::vector<int, std::allocator<int> > const&)::'lambda'()> > > >::invoke(arrow::FutureImpl const&) /arrow/cpp/src/arrow/util/functional.h:152:42 (libarrow.so.900+0x3cbd4c4)\r\n...\r\n{noformat}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 8400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/attachment/13043634",
                "id": "13043634",
                "filename": "tsan-failure.log",
                "author": {
                    "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                    "name": "westonpace",
                    "key": "westonpace",
                    "avatarUrls": {
                        "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                        "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                        "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                        "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                    },
                    "displayName": "Weston Pace",
                    "active": true,
                    "timeZone": "America/Los_Angeles"
                },
                "created": "2022-05-13T19:22:39.488+0000",
                "size": 684458,
                "mimeType": "text/x-log",
                "content": "https://issues.apache.org/jira/secure/attachment/13043634/tsan-failure.log"
            }
        ],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] TSAN failure in arrow-ipc-read-write-test",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901/comment/17537443",
                    "id": "17537443",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "[~westonpace] Do you intend to try and fix this?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-05-16T10:02:29.397+0000",
                    "updated": "2022-05-16T10:02:29.397+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901/comment/17537686",
                    "id": "17537686",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I hope to get to it this week but if someone else wants to take a look at it I certainly don't mind :) ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-05-16T17:37:05.362+0000",
                    "updated": "2022-05-16T17:37:05.362+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444901/comment/17545222",
                    "id": "17545222",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=yibocai",
                        "name": "yibocai",
                        "key": "yibo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yibo&avatarId=47542",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yibo&avatarId=47542",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yibo&avatarId=47542",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yibo&avatarId=47542"
                        },
                        "displayName": "Yibo Cai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 13245\n[https://github.com/apache/arrow/pull/13245]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=yibocai",
                        "name": "yibocai",
                        "key": "yibo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yibo&avatarId=47542",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yibo&avatarId=47542",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yibo&avatarId=47542",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yibo&avatarId=47542"
                        },
                        "displayName": "Yibo Cai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-06-02T01:24:22.291+0000",
                    "updated": "2022-06-02T01:24:22.291+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z12cr4:",
        "customfield_12314139": null
    }
}