{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13151095",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095",
    "key": "ARROW-2428",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12570619",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12570619",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "outwardIssue": {
                    "id": "13234380",
                    "key": "ARROW-5379",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13234380",
                    "fields": {
                        "summary": "[Python] support pandas' nullable Integer type in from_pandas",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12578198",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12578198",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13279321",
                    "key": "ARROW-7569",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13279321",
                    "fields": {
                        "summary": "[Python] Add API to map Arrow types to pandas ExtensionDtypes for to_pandas conversions",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12560263",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12560263",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13231858",
                    "key": "ARROW-5271",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13231858",
                    "fields": {
                        "summary": "[Python] Interface for converting pandas ExtensionArray / other custom array objects to pyarrow Array",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12562990",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12562990",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "outwardIssue": {
                    "id": "13064305",
                    "key": "ARROW-840",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13064305",
                    "fields": {
                        "summary": "[Python] Provide Python API for creating user-defined data types that can survive Arrow IPC",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "aggregateprogress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2428/votes",
            "votes": 2,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 12,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/worklog/318960",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #5512: ARROW-2428: [Python] Support pandas ExtensionArray in Table.to_pandas conversion\nURL: https://github.com/apache/arrow/pull/5512\n \n \n   Prototype for https://issues.apache.org/jira/browse/ARROW-2428\r\n   \r\n   This included the a squashed version of https://github.com/apache/arrow/pull/5162 as the first commit, as this builds further upon that PR (it can also be reviewed together at once in this PR).\r\n   \r\n   What does this PR do? \r\n   \r\n   - Based on the pandas_metadata (stored when creating a Table from a pandas DataFrame), we infer which columns originally had a pandas extension dtype, and support a custom conversion (based on a `__from_arrow__` method defined on the pandas extension dtype)\r\n   - The user can also specify explicitly with the `extension_column` keyword which columns should be converted to an extension dtype\r\n   \r\n   This only covers [use case 1 discussed in the issue](https://issues.apache.org/jira/browse/ARROW-2428?focusedCommentId=16914231&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-16914231): automatic roundtrip for pandas DataFrames that have extension dtypes. \r\n   So it eg does not yet provide a way to do this if the arrow.Table has no pandas metadata (did not originate from a pandas DataFrame)\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-26T13:26:53.118+0000",
                    "updated": "2019-09-26T13:26:53.118+0000",
                    "started": "2019-09-26T13:26:53.118+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "318960",
                    "issueId": "13151095"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/worklog/320262",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5512: ARROW-2428: [Python] Support pandas ExtensionArray in Table.to_pandas conversion\nURL: https://github.com/apache/arrow/pull/5512#issuecomment-536329768\n \n \n   https://issues.apache.org/jira/browse/ARROW-2428\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-29T18:46:12.962+0000",
                    "updated": "2019-09-29T18:46:12.962+0000",
                    "started": "2019-09-29T18:46:12.961+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "320262",
                    "issueId": "13151095"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/worklog/323001",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5512: ARROW-2428: [Python] Support pandas ExtensionArray in Table.to_pandas conversion\nURL: https://github.com/apache/arrow/pull/5512#discussion_r331280696\n \n \n\n ##########\n File path: python/pyarrow/tests/test_pandas.py\n ##########\n @@ -3158,6 +3158,79 @@ def test_array_protocol():\n         assert result.equals(expected2)\n \n \n+# ----------------------------------------------------------------------\n+# Pandas ExtensionArray support\n+\n+\n+def _Int64Dtype__from_arrow__(self, array):\n+    # for test only deal with single chunk for now\n+    # TODO: do we require handling of chunked arrays in the protocol?\n+    arr = array.chunk(0)\n+    buflist = arr.buffers()\n+    data = np.frombuffer(buflist[-1], dtype=arr.type.to_pandas_dtype())[\n+        arr.offset:arr.offset + len(arr)]\n+    bitmask = buflist[0]\n+    if bitmask is not None:\n+        mask = pa.BooleanArray.from_buffers(\n+            pa.bool_(), len(arr), [None, bitmask])\n+        mask = np.asarray(mask)\n+    else:\n+        mask = np.ones(len(arr), dtype=bool)\n+    int_arr = pd.arrays.IntegerArray(data.copy(), ~mask, copy=False)\n+    return int_arr\n+\n+\n+def test_convert_to_extension_array():\n+    if LooseVersion(pd.__version__) < \"0.26.0.dev\":\n+        pytest.skip(\"Conversion from IntegerArray to arrow not yet supported\")\n+\n+    import pandas.core.internals as _int\n+\n+    # table converted from dataframe with extension types (so pandas_metadata\n+    # has this information)\n+    df = pd.DataFrame(\n+        {'a': [1, 2, 3], 'b': pd.array([2, 3, 4], dtype='Int64'),\n+         'c': [4, 5, 6]})\n+    table = pa.table(df)\n+\n+    # Int64Dtype has no __arrow_array__ -> use normal conversion\n+    result = table.to_pandas()\n+    assert len(result._data.blocks) == 1\n+    assert isinstance(result._data.blocks[0], _int.IntBlock)\n+\n+    # raise error is explicitly asking for unsupported conversion\n+    with pytest.raises(ValueError):\n+        table.to_pandas(extension_columns=['b'])\n+\n+    try:\n+        # patch pandas Int64Dtype to have the protocol method\n+        pd.Int64Dtype.__from_arrow__ = _Int64Dtype__from_arrow__\n \n Review comment:\n   Aside: is there a monkey-patch context manager somewhere? \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T22:31:18.874+0000",
                    "updated": "2019-10-03T22:31:18.874+0000",
                    "started": "2019-10-03T22:31:18.873+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "323001",
                    "issueId": "13151095"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/worklog/323002",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5512: ARROW-2428: [Python] Support pandas ExtensionArray in Table.to_pandas conversion\nURL: https://github.com/apache/arrow/pull/5512#discussion_r331278535\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -665,6 +666,17 @@ def _reconstruct_block(item):\n     elif 'object' in item:\n         block = _int.make_block(builtin_pickle.loads(block_arr),\n                                 placement=placement, klass=_int.ObjectBlock)\n+    elif 'py_array' in item:\n+        # create ExtensionBlock\n+        arr = item['py_array']\n+        assert len(placement) == 1\n+        name = columns[placement[0]]\n+        pandas_dtype = extension_columns[name]\n+        if not hasattr(pandas_dtype, '__from_arrow__'):\n+            raise ValueError(\"This column does not support\")\n \n Review comment:\n   Incomplete?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T22:31:18.969+0000",
                    "updated": "2019-10-03T22:31:18.969+0000",
                    "started": "2019-10-03T22:31:18.968+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "323002",
                    "issueId": "13151095"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/worklog/323005",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5512: ARROW-2428: [Python] Support pandas ExtensionArray in Table.to_pandas conversion\nURL: https://github.com/apache/arrow/pull/5512#issuecomment-538154441\n \n \n   I also don't know whether exposing the `extension_columns` parameter publicly makes sense. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T22:32:21.474+0000",
                    "updated": "2019-10-03T22:32:21.474+0000",
                    "started": "2019-10-03T22:32:21.474+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "323005",
                    "issueId": "13151095"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/worklog/323251",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #5512: ARROW-2428: [Python] Support pandas ExtensionArray in Table.to_pandas conversion\nURL: https://github.com/apache/arrow/pull/5512#discussion_r331366794\n \n \n\n ##########\n File path: python/pyarrow/tests/test_pandas.py\n ##########\n @@ -3158,6 +3158,79 @@ def test_array_protocol():\n         assert result.equals(expected2)\n \n \n+# ----------------------------------------------------------------------\n+# Pandas ExtensionArray support\n+\n+\n+def _Int64Dtype__from_arrow__(self, array):\n+    # for test only deal with single chunk for now\n+    # TODO: do we require handling of chunked arrays in the protocol?\n+    arr = array.chunk(0)\n+    buflist = arr.buffers()\n+    data = np.frombuffer(buflist[-1], dtype=arr.type.to_pandas_dtype())[\n+        arr.offset:arr.offset + len(arr)]\n+    bitmask = buflist[0]\n+    if bitmask is not None:\n+        mask = pa.BooleanArray.from_buffers(\n+            pa.bool_(), len(arr), [None, bitmask])\n+        mask = np.asarray(mask)\n+    else:\n+        mask = np.ones(len(arr), dtype=bool)\n+    int_arr = pd.arrays.IntegerArray(data.copy(), ~mask, copy=False)\n+    return int_arr\n+\n+\n+def test_convert_to_extension_array():\n+    if LooseVersion(pd.__version__) < \"0.26.0.dev\":\n+        pytest.skip(\"Conversion from IntegerArray to arrow not yet supported\")\n+\n+    import pandas.core.internals as _int\n+\n+    # table converted from dataframe with extension types (so pandas_metadata\n+    # has this information)\n+    df = pd.DataFrame(\n+        {'a': [1, 2, 3], 'b': pd.array([2, 3, 4], dtype='Int64'),\n+         'c': [4, 5, 6]})\n+    table = pa.table(df)\n+\n+    # Int64Dtype has no __arrow_array__ -> use normal conversion\n+    result = table.to_pandas()\n+    assert len(result._data.blocks) == 1\n+    assert isinstance(result._data.blocks[0], _int.IntBlock)\n+\n+    # raise error is explicitly asking for unsupported conversion\n+    with pytest.raises(ValueError):\n+        table.to_pandas(extension_columns=['b'])\n+\n+    try:\n+        # patch pandas Int64Dtype to have the protocol method\n+        pd.Int64Dtype.__from_arrow__ = _Int64Dtype__from_arrow__\n \n Review comment:\n   pytest has a `monkeypatch` fixture that we can use. This would look like\r\n   \r\n   ```\r\n   def test_convert_to_extension_array(monkeypatch):\r\n       ...\r\n       monkeypatch.setattr(pd.Int64Dtype, \"__from_arrow__\", _Int64Dtype__from_arrow__, raising=False)\r\n       ....\r\n   ```\r\n   \r\n   without the need for the try/except to ensure clean-up\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-04T07:13:45.604+0000",
                    "updated": "2019-10-04T07:13:45.604+0000",
                    "started": "2019-10-04T07:13:45.604+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "323251",
                    "issueId": "13151095"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/worklog/323254",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #5512: ARROW-2428: [Python] Support pandas ExtensionArray in Table.to_pandas conversion\nURL: https://github.com/apache/arrow/pull/5512#issuecomment-538278507\n \n \n   > I also don't know whether exposing the extension_columns parameter publicly makes sense.\r\n   \r\n   Yes, I agree, I am also not yet fully clear about that part of the API. For now, it was mainly for being able to test this a bit more.\r\n   \r\n   Currently, I provide an \"automatic detection\" based on the stored pandas_metadata (which enables automatic roundtrip). \r\n   \r\n   But, I think we need other mechanisms as well:\r\n   - arrow extension types need to be able to specify a custom pandas dtype to convert to as well (one option is that they can point to a pandas ExtensionDtype object, and then use the same `ExtensionDtype.__from_arrow__` logic). \r\n   - It would be nice to have some way to override all this logic. For example, consider the use case where you have a parquet file (or arrow memory in general) that does not originate from pandas (and thus has no pandas metadata), and you want to ensure that all integer columns are converted to the pandas nullable integer type instead of the default numpy int64 dtype. One option could be to specify (somehow somewhere) a type map like `{pa.int64(): pd.IntegerDtype}` (but how would that work with parametrized types?)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-04T07:24:49.237+0000",
                    "updated": "2019-10-04T07:24:49.237+0000",
                    "started": "2019-10-04T07:24:49.237+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "323254",
                    "issueId": "13151095"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/worklog/325339",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5512: ARROW-2428: [Python] Support pandas ExtensionArray in Table.to_pandas conversion\nURL: https://github.com/apache/arrow/pull/5512#issuecomment-539714568\n \n \n   Seems like a little more work is needed here, at least some docstrings. Let me know when you want me to take another look\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-08T21:36:18.356+0000",
                    "updated": "2019-10-08T21:36:18.356+0000",
                    "started": "2019-10-08T21:36:18.355+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "325339",
                    "issueId": "13151095"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/worklog/325341",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #5512: ARROW-2428: [Python] Support pandas ExtensionArray in Table.to_pandas conversion\nURL: https://github.com/apache/arrow/pull/5512#issuecomment-539715844\n \n \n   I think https://github.com/apache/arrow/pull/5162 could already be merged (based on your comment there https://github.com/apache/arrow/pull/5162#issuecomment-538056824)? Then I will update this PR after that.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-08T21:40:18.534+0000",
                    "updated": "2019-10-08T21:40:18.534+0000",
                    "started": "2019-10-08T21:40:18.533+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "325341",
                    "issueId": "13151095"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/worklog/336171",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #5512: ARROW-2428: [Python] Support pandas ExtensionArray in Table.to_pandas conversion\nURL: https://github.com/apache/arrow/pull/5512#issuecomment-547895755\n \n \n   OK, this should be ready for review now.\r\n   \r\n   I added now support for 2 of the cases of https://issues.apache.org/jira/browse/ARROW-2428:\r\n   \r\n   - If there is `pandas_metadata`, we will check which columns originated from pandas extension dtypes\r\n   - If you defined a pyarrow.ExtensionType, we check if the `ExtensionType.to_pandas_dtype` method returns a pandas extension dtype\r\n   \r\n   In both cases, the actual conversion of the pyarrow array to the pandas ExtensionArray is dispatched to the pandas `ExtensionDtype.__from_arrow__` method, which is a method on the pandas extension dtype that knows how to convert a arrow array into an extension array of its dtype.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-30T13:13:34.249+0000",
                    "updated": "2019-10-30T13:13:34.249+0000",
                    "started": "2019-10-30T13:13:34.249+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "336171",
                    "issueId": "13151095"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/worklog/336210",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #5512: ARROW-2428: [Python] Support pandas ExtensionArray in Table.to_pandas conversion\nURL: https://github.com/apache/arrow/pull/5512#issuecomment-547939379\n \n \n   I did some performance profiling to see the impact of this change, as checking dtypes can be quite expensive, and given that for dataframes with basic numpy types this will be only overhead without any benefit.\r\n   \r\n   For a relatively normal sized dataframe (100_000 rows x 100 columns) of only floats, this gives a small overhead (from 26ms to 29ms for `Table.to_pandas()`). \r\n   But since this check scales linearly with the number of columns, for a \"wide\" dataframe (100 rows x 1000 columns) there is a big slowdown: 10ms to 22ms. \r\n   See https://gist.github.com/jorisvandenbossche/d36bceb82fd2dda38ee419ba51dff5ed\r\n   \r\n   Now, the most expensive part (~90% of the overhead) of the code I added, is the `pandas_dtype(..)` function (a function from pandas that converts a string to either an (registered) ExtensionDtype or either a numpy dtype). Since we only need this in case it would return an ExtensionDtype, we could avoid calling this function if we know in advance we have a string representation of a numpy dtype. And since numpy supports a limited set of numpy dtypes, we could hardcode those \"known\" strings to avoid calling `pandas_dtype`. For the case above of simple floats dataframe, this would remove most of the overhead. \r\n   -> since it is an easy way to avoid overhead, will implement this.\r\n   \r\n   Another (additional) option could also be to add a keyword to `to_pandas` to disable the extension type checks, so a user that wants the best performance and knows it only has basic types can disable this.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-30T14:41:49.572+0000",
                    "updated": "2019-10-30T14:41:49.572+0000",
                    "started": "2019-10-30T14:41:49.572+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "336210",
                    "issueId": "13151095"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/worklog/338458",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5512: ARROW-2428: [Python] Support pandas ExtensionArray in Table.to_pandas conversion\nURL: https://github.com/apache/arrow/pull/5512\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-05T02:16:35.020+0000",
                    "updated": "2019-11-05T02:16:35.020+0000",
                    "started": "2019-11-05T02:16:35.018+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "338458",
                    "issueId": "13151095"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 7200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7c3f9f8a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74b3d2f4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7510ffa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6d9f5996[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4c99d943[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5b8633f6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5427d9a3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@43636958[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@41b2f3b6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2b4171f5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@41c15fff[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@19b0d736[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Nov 05 02:16:37 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-11-05T02:16:37.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2428/watchers",
            "watchCount": 9,
            "isWatching": false
        },
        "created": "2018-04-09T15:41:59.000+0000",
        "updated": "2020-01-14T11:04:46.000+0000",
        "timeoriginalestimate": null,
        "description": "With the next release of Pandas, it will be possible to define custom column types that back a {{pandas.Series}}. Thus we will not be able to cover all possible column types in the {{to_pandas}}\u00a0conversion by default as we won't be aware of all extension arrays.\r\n\r\nTo enable users to create {{ExtensionArray}} instances from Arrow columns in the {{to_pandas}}\u00a0conversion, we should provide a hook in the {{to_pandas}} call where they can overload the default conversion routines with the ones that produce their {{ExtensionArray}} instances.\r\n\r\nThis should avoid additional copies in the case where we would nowadays first convert the Arrow column into a default Pandas column (probably of object type) and the user would afterwards convert it to a more efficient {{ExtensionArray}}. This hook here will be especially useful when you build {{ExtensionArrays}} where the storage is backed by Arrow.\r\n\r\nThe meta-issue that tracks the implementation inside of Pandas is: https://github.com/pandas-dev/pandas/issues/19696",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python]\u00a0Add API to map Arrow types (including extension types) to pandas ExtensionArray instances for to_pandas conversions",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/comment/16473253",
                    "id": "16473253",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexhagerman",
                        "name": "alexhagerman",
                        "key": "alexhagerman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Alex Hagerman",
                        "active": true,
                        "timeZone": "America/Indiana/Indianapolis"
                    },
                    "body": "[~xhochy] I was reading through the meta issue and trying to understand what we have to make sure to pass. Do you think this has settled enough to begin work? It appears pandas will expect a class defining the type, which I'm guessing the objects in the arrow column will be instances of that user type? Do we expect arrow columns to meet all the requirements of ExtensionArray?\r\n\r\n\u00a0\r\n\r\nI was specifically looking at this to understand what options have to be passed and what the ExtensionArray requires.\r\n\r\nhttps://github.com/pandas-dev/pandas/pull/19174/files#diff-e448fe09dbe8aed468d89a4c90e65cff",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexhagerman",
                        "name": "alexhagerman",
                        "key": "alexhagerman",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Alex Hagerman",
                        "active": true,
                        "timeZone": "America/Indiana/Indianapolis"
                    },
                    "created": "2018-05-12T19:26:49.148+0000",
                    "updated": "2018-05-12T19:26:49.148+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/comment/16473529",
                    "id": "16473529",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "We had a stab at this at the AHL hackathon and came to the conclusion that we should wait for the Pandas 0.23 release. The interface still needs to a settle a bit more and it is not as easy as initially expected as we use (deep) internal APIs from Pandas to make the conversion from Arrow Tables to DataFrames fast. Thus I have removed the {{beginner}} label. Someone knowing the internals of Pandas very well might solve this easily but others first need to understand the mechanics of Pandas' BlockManager.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-05-13T15:47:20.490+0000",
                    "updated": "2018-05-13T15:47:20.490+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/comment/16834100",
                    "id": "16834100",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~xhochy] did you have already a specific hook in mind or tried something specific at the AHL hackathon?\r\n\r\nOne way might be to allow the user to specify the target dtypes in {{to_pandas}} (on an optional per column basis). If an ExtensionDtype instance is passed there, arrow could delegate converting the arrow array to a pandas ExtensionArray to the ExtensionDtype/Array class itself. \r\n\r\nSimilarly, if we start storing the name of the ExtensionDtype in the pandas metadata, we could also automatically re-create the dtype from that name (without the need for the user to pass it explicitly, for the default).\r\n\r\nSee also the discussion in https://github.com/pandas-dev/pandas/issues/20612",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2019-05-06T18:32:48.159+0000",
                    "updated": "2019-05-06T18:32:48.159+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/comment/16861462",
                    "id": "16861462",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I just updated the title to reflect the updated scope of handling general Arrow-to-ExtensionArray mappings, including the new C++ ExtensionType facility",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-06-11T20:22:34.007+0000",
                    "updated": "2019-06-11T20:22:34.007+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/comment/16914231",
                    "id": "16914231",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "I am working on the actual ability to create ExtensionBlocks in the conversion to pandas (ARROW-6321, [https://github.com/apache/arrow/pull/5162]), but to complete that work, we also need to solve this issue about how we can know / the user can indicate which columns to convert to what type.\r\n\r\nBelow I put some (long) thoughts (you can also read it / comment on [google docs|https://docs.google.com/document/d/1pr9PuBfXTdlUoAgyh9zPIKDJZalDLI6GuxqblMynMM8/edit#heading=h.dl5issk8bkd6]) about possibilities of how the API could look like to convert back to pandas ExtensionArrays. Some feedback / ideas on the API is very welcome!\r\n\r\n*Conversion arrow -> pandas*\r\n\r\nDifferent use cases and options:\r\n\r\n*Case 1: basic roundtrip of pandas ExtensionArrays (without involvement of arrow ExtensionTypes).* For example, for pandas' nullable integer or for fletcher's arays, they map to native arrow arrays (they don't need an Arrow ExtensionType). It would be nice that DataFrames holding such pandas ExtensionArrays could roundtrip out of the box:\r\n - When converting a DataFrame with such arrays to arrow, we save the pandas dtype in the metadata (a string representation of it). So we could use this information to know that certain columns need to be converted back to ExtensionArrays.\r\n The question is then: how does Arrow know in which extension array to convert it? We could look for a constructor classmethod on the pandas dtype (like {{PandasDtype.__constructor_from_arrow__}}), call that and put the returned pandas ExtensionArray in the block structure pyarrow creates. This would be kind of the inverse of {{__arrow_array__}}. Some pseudo-code to illustrate:\r\n\r\n{code:python}\r\n# the dtype name stored in the pandas metadata\r\npd_dtype_name = 'Int64'  # or 'fletcher[string]'\r\npd_dtype = pd.api.types.pandas_dtype(pd_dtype_name)\r\nif hasattr(pd_dtype, '__constructor_from_arrow__'):\r\n    # indicate to ConvertTableToPandas to use ExtensionBlock for this column\r\n    ...\r\n    arr = ... # the pyarrow Array for this column\r\n    ext_arr = pd_dtype.__constructor_from_arrow__(arr)\r\n    block = _pd_int.make_block(ext_arr, placement=placement,\r\n                               klass=_pd_int.ExtensionBlock)\r\n{code}\r\nThis will only work when the pandas dtype is registered on the pandas side (so that the string name is recognized by pandas to re-create the dtype object).\r\n\r\n*Case 2: conversion for Arrow ExtensionType.* In case you defined an Arrow ExtensionType in Python, it would be nice to be able to register a default conversion to pandas. It could be this extension type that knows how to convert itself to pandas (which could either be a plain numpy array or a pandas ExtensionArray).\r\n - We can add a method to the {{pyarrow.ExtensionType}} that converts an array of its type to a pandas-compatible array. This method can then be overridden by implementors of a ExtensionType.\r\n - Alternatively, next to defining the {{pyarrow.ExtensionType}}, the user could register a function to be used for that type (to extend the default arrow type -> pandas type mapping).\r\n\r\nThe method on the {{pyarrow.ExtensionType}} would be similar to the {{__constructor_from_arrow__}} method on the {{pandas.ExtensionDtype}}. So we could also choose to let this live on the pandas dtype, and then the {{pyarrow.ExtensionType}} only needs to be mapped to a pandas dtype (but this means that the {{pyarrow.ExtensionType}} can only be converted to a pandas extension type).\r\n\r\n*Case 3: override the default conversions.* There is a default mapping of pyarrow types to pandas types in the conversion. This mapping could be \"extended\" for ExtensionTypes (see above). But sometimes it will also be useful to override the default mapping. For example, fletcher wants to have a way to say to pyarrow: convert all your arrays to fletcher ExtensionArrays instead of the default numpy types.\r\n - The user could register functions that extend or overrule the default arrow type -> pandas type mapping. Or it could register pandas dtypes per arrow type, and then (similar to above) that pandas dtype can know how to convert itself.\r\n - Alternatively, the {{Table.to_pandas}} method could also gain a {{dtype}} keyword where you can specify the target dtype on a column basis.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2019-08-23T12:49:28.040+0000",
                    "updated": "2019-08-23T12:55:16.101+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/comment/16923418",
                    "id": "16923418",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Hi Joris, overall I agree with the approach here. It's a little unfortunate that Pandas doesn't have a general column/table metadata mechanism...\r\n\r\nI agree that we want both a default hook for ExtensionType->Pandas conversions, and a way to override conversions on an individual basis. I think adding a new argument to {{to_pandas}} is easier than maintaining yet another function registry. Similarly, adding a conversion method on {{ExtensionType}} (or maybe that should be a future {{ExtensionArray}} class?) would be preferable to maintaining a registry. \r\n\r\nIf we have something like {{pa.ExtensionType.\\_\\_pandas_array\\_\\_}}, should we also have {{pa.ExtensionType.\\_\\_pandas_dtype\\_\\_}}?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-09-05T13:05:23.961+0000",
                    "updated": "2019-09-05T13:05:23.961+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/comment/16923472",
                    "id": "16923472",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "It seems like the pandas glue can be part of the Python-side ExtensionType implementation, so a new registry is not needed (nor adding parameters to to_pandas, etc.). Is that right?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-09-05T14:19:16.232+0000",
                    "updated": "2019-09-05T14:19:16.232+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/comment/16924221",
                    "id": "16924221",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "It sounds like a new registry isn't needed, but adding parameters to to_pandas would be useful for customizing conversions of built-in types; Joris notes Fletcher would want to use that.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-09-06T12:48:16.999+0000",
                    "updated": "2019-09-06T12:48:16.999+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/comment/16924959",
                    "id": "16924959",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "> It seems like the pandas glue can be part of the Python-side ExtensionType implementation,\r\n\r\nYes, it might also need to interact with the pandas extension type, otherwise it would only solve part of the problem. I think it would be nice if it is also possible to create a pandas ExtensionArray without having a pyarrow ExtensionType (the \"case 1\" described above). Eg to roundtrip pandas' nullable integer type, or a future string dtype (which both don't need an arrow ExtensionType).\r\n\r\nIf we would want to support that, one option could be to go for a {{PandasExtensionDtype.\\_\\_constructor_from_arrow\\_\\_}} that knows how to create an ExtensionArray from an arrow array, and then a {{pyarrow.ExtensionType.\\_\\_pandas_dtype\\_\\_}} that points to the pandas extension dtype to use for this pyarrow ExtensionType",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2019-09-07T17:54:07.335+0000",
                    "updated": "2019-09-07T17:55:13.424+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/comment/16943671",
                    "id": "16943671",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "More thoughts on this?\r\n\r\nI implemented a POC for case 1 described above in https://github.com/apache/arrow/pull/5512\r\n\r\nThis allows to roundtrip pandas ExtensionArrays, assuming the the pandas.ExtensionDtype implements a {{\\_\\_from_arrow\\_\\_}} to convert an Arrow array into a pandas ExtensionArray of that dtype (so it can be put in the resulting DataFrame as an extension array).\r\n\r\nIt doesn't yet handle to other cases described above, though.\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2019-10-03T15:27:15.443+0000",
                    "updated": "2019-10-03T15:27:15.443+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095/comment/16967162",
                    "id": "16967162",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 5512\n[https://github.com/apache/arrow/pull/5512]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-11-05T02:16:37.763+0000",
                    "updated": "2019-11-05T02:16:37.763+0000"
                }
            ],
            "maxResults": 11,
            "total": 11,
            "startAt": 0
        },
        "customfield_12311820": "0|i3sblj:",
        "customfield_12314139": null
    }
}