{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13158731",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158731",
    "key": "ARROW-2574",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333244",
                "id": "12333244",
                "name": "Continuous Integration"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2574/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 6,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158731/worklog/102265",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #2050: [WIP] ARROW-2574: [Python] Add Cython and Python code coverage\nURL: https://github.com/apache/arrow/pull/2050\n \n \n   After spending a non-trivial time wrestling with Cython and our build system, we're now able to generate and upload Python and Cython coverage results as part of a Travis-CI run (in addition to C++ coverage).\r\n   \r\n   TODO:\r\n   * [ ] try to enable tracing `nogil` sections in Cython code\r\n   * [ ] reenable stuff I disabled in the Travis-CI setup\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-15T19:55:59.108+0000",
                    "updated": "2018-05-15T19:55:59.108+0000",
                    "started": "2018-05-15T19:55:59.108+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "102265",
                    "issueId": "13158731"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158731/worklog/102266",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #2050: [WIP] ARROW-2574: [Python] Add Cython and Python code coverage\nURL: https://github.com/apache/arrow/pull/2050#issuecomment-389293262\n \n \n   Here is an example coverage report: https://codecov.io/gh/pitrou/arrow/list/5bd7b0e261b2b72b2b0c14d0ceb80de03e1e3c06/\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-15T19:56:12.450+0000",
                    "updated": "2018-05-15T19:56:12.450+0000",
                    "started": "2018-05-15T19:56:12.450+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "102266",
                    "issueId": "13158731"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158731/worklog/102286",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2050: [WIP] ARROW-2574: [Python] Add Cython and Python code coverage\nURL: https://github.com/apache/arrow/pull/2050#issuecomment-389315719\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2050?src=pr&el=h1) Report\n   > Merging [#2050](https://codecov.io/gh/apache/arrow/pull/2050?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/48eee79189ca287ed58f3ae7833eaea011cdf5f8?src=pr&el=desc) will **decrease** coverage by `1.64%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2050/graphs/tree.svg?width=650&height=150&token=LpTCFbqVT1&src=pr)](https://codecov.io/gh/apache/arrow/pull/2050?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2050      +/-   ##\n   ==========================================\n   - Coverage   87.44%   85.79%   -1.65%     \n   ==========================================\n     Files         189      229      +40     \n     Lines       29368    40091   +10723     \n   ==========================================\n   + Hits        25682    34398    +8716     \n   - Misses       3686     5693    +2007\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2050?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/memory\\_pool-test.cc](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9tZW1vcnlfcG9vbC10ZXN0LmNj) | `96.55% <0%> (-3.45%)` | :arrow_down: |\n   | [cpp/src/arrow/python/helpers.h](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vaGVscGVycy5o) | `88.88% <0%> (-1.12%)` | :arrow_down: |\n   | [cpp/src/arrow/io/io-file-test.cc](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9pby1maWxlLXRlc3QuY2M=) | `91.76% <0%> (-0.92%)` | :arrow_down: |\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `98.87% <0%> (-0.57%)` | :arrow_down: |\n   | [cpp/src/arrow/python/builtin\\_convert.cc](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vYnVpbHRpbl9jb252ZXJ0LmNj) | `91.31% <0%> (-0.5%)` | :arrow_down: |\n   | [cpp/src/arrow/python/python\\_to\\_arrow.cc](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vcHl0aG9uX3RvX2Fycm93LmNj) | `88.14% <0%> (-0.07%)` | :arrow_down: |\n   | [cpp/src/arrow/python/common.h](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vY29tbW9uLmg=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [rust/src/memory\\_pool.rs](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbWVtb3J5X3Bvb2wucnM=) | | |\n   | [rust/src/list\\_builder.rs](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbGlzdF9idWlsZGVyLnJz) | | |\n   | [rust/src/array.rs](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYXJyYXkucnM=) | | |\n   | ... and [62 more](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2050?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2050?src=pr&el=footer). Last update [48eee79...5bd7b0e](https://codecov.io/gh/apache/arrow/pull/2050?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-15T21:14:35.637+0000",
                    "updated": "2018-05-15T21:14:35.637+0000",
                    "started": "2018-05-15T21:14:35.637+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "102286",
                    "issueId": "13158731"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158731/worklog/102918",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2050: ARROW-2574: [Python] Add Cython and Python code coverage\nURL: https://github.com/apache/arrow/pull/2050#issuecomment-389315719\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2050?src=pr&el=h1) Report\n   > Merging [#2050](https://codecov.io/gh/apache/arrow/pull/2050?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/5bb3d85e82a9dbbc2b04ca37ff3819574df94f8a?src=pr&el=desc) will **decrease** coverage by `1.17%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2050/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/2050?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2050      +/-   ##\n   ==========================================\n   - Coverage   87.44%   86.26%   -1.18%     \n   ==========================================\n     Files         189      241      +52     \n     Lines       29374    40924   +11550     \n   ==========================================\n   + Hits        25685    35303    +9618     \n   - Misses       3689     5621    +1932\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2050?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/error.pxi](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvZXJyb3IucHhp) | `59.09% <0%> (\u00f8)` | |\n   | [python/pyarrow/includes/common.pxd](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaW5jbHVkZXMvY29tbW9uLnB4ZA==) | `75% <0%> (\u00f8)` | |\n   | [python/pyarrow/tests/test\\_schema.py](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9zY2hlbWEucHk=) | `100% <0%> (\u00f8)` | |\n   | [python/pyarrow/tests/test\\_convert\\_pandas.py](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9jb252ZXJ0X3BhbmRhcy5weQ==) | `94.78% <0%> (\u00f8)` | |\n   | [python/pyarrow/types.py](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdHlwZXMucHk=) | `98.79% <0%> (\u00f8)` | |\n   | [python/pyarrow/tests/test\\_cython.py](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9jeXRob24ucHk=) | `96.96% <0%> (\u00f8)` | |\n   | [python/pyarrow/scalar.pxi](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvc2NhbGFyLnB4aQ==) | `62.18% <0%> (\u00f8)` | |\n   | [python/pyarrow/tests/test\\_builder.py](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9idWlsZGVyLnB5) | `100% <0%> (\u00f8)` | |\n   | [python/pyarrow/pandas\\_compat.py](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcGFuZGFzX2NvbXBhdC5weQ==) | `97.82% <0%> (\u00f8)` | |\n   | [python/pyarrow/public-api.pxi](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcHVibGljLWFwaS5weGk=) | `48.9% <0%> (\u00f8)` | |\n   | ... and [43 more](https://codecov.io/gh/apache/arrow/pull/2050/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2050?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2050?src=pr&el=footer). Last update [5bb3d85...4553185](https://codecov.io/gh/apache/arrow/pull/2050?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-17T14:20:30.621+0000",
                    "updated": "2018-05-17T14:20:30.621+0000",
                    "started": "2018-05-17T14:20:30.621+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "102918",
                    "issueId": "13158731"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158731/worklog/102920",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #2050: ARROW-2574: [Python] Add Cython and Python code coverage\nURL: https://github.com/apache/arrow/pull/2050#issuecomment-389883882\n \n \n   Ok, I'm going to merge now. Of course, this work has one disadvantage : our build and CI system becomes a bit more complex and therefore a bit more brittle.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-17T14:21:27.973+0000",
                    "updated": "2018-05-17T14:21:27.973+0000",
                    "started": "2018-05-17T14:21:27.973+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "102920",
                    "issueId": "13158731"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158731/worklog/102921",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #2050: ARROW-2574: [Python] Add Cython and Python code coverage\nURL: https://github.com/apache/arrow/pull/2050\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/ci/travis_env_common.sh b/ci/travis_env_common.sh\nindex a4ae5bd271..568070e043 100755\n--- a/ci/travis_env_common.sh\n+++ b/ci/travis_env_common.sh\n@@ -31,6 +31,7 @@ export ARROW_RUST_DIR=${TRAVIS_BUILD_DIR}/rust\n \n if [ $ARROW_TRAVIS_COVERAGE == \"1\" ]; then\n     export ARROW_CPP_COVERAGE_FILE=${TRAVIS_BUILD_DIR}/coverage.info\n+    export ARROW_PYTHON_COVERAGE_FILE=${TRAVIS_BUILD_DIR}/.coverage\n fi\n \n export CPP_BUILD_DIR=$TRAVIS_BUILD_DIR/cpp-build\ndiff --git a/ci/travis_script_cpp.sh b/ci/travis_script_cpp.sh\nindex 02e58cd72c..eedca98b5c 100755\n--- a/ci/travis_script_cpp.sh\n+++ b/ci/travis_script_cpp.sh\n@@ -28,7 +28,7 @@ ctest -j2 --output-on-failure -L unittest\n popd\n \n # Capture C++ coverage info (we wipe the build dir in travis_script_python.sh)\n-if [ $ARROW_TRAVIS_COVERAGE == \"1\" ]; then\n+if [ \"$ARROW_TRAVIS_COVERAGE\" == \"1\" ]; then\n     pushd $TRAVIS_BUILD_DIR\n     lcov --quiet --directory . --capture --no-external --output-file $ARROW_CPP_COVERAGE_FILE\n     popd\ndiff --git a/ci/travis_script_python.sh b/ci/travis_script_python.sh\nindex aaca3fdba6..3c0ea6d7c8 100755\n--- a/ci/travis_script_python.sh\n+++ b/ci/travis_script_python.sh\n@@ -85,25 +85,31 @@ popd\n # python-test isn't run by travis_script_cpp.sh, exercise it here\n $ARROW_CPP_BUILD_DIR/$ARROW_BUILD_TYPE/python-test\n \n-# Other stuff pip install\n pushd $ARROW_PYTHON_DIR\n \n+# Other stuff pip install\n+pip install -q -r requirements.txt\n if [ \"$PYTHON_VERSION\" == \"2.7\" ]; then\n   pip install -q futures\n fi\n+if [ \"$ARROW_TRAVIS_COVERAGE\" == \"1\" ]; then\n+    export PYARROW_GENERATE_COVERAGE=1\n+    pip install -q coverage\n+fi\n \n export PYARROW_BUILD_TYPE=$ARROW_BUILD_TYPE\n+export PYARROW_WITH_PARQUET=1\n+export PYARROW_WITH_PLASMA=1\n+export PYARROW_WITH_ORC=1\n \n-pip install -q -r requirements.txt\n-python setup.py build_ext -q --with-parquet --with-plasma --with-orc\\\n-       install -q --single-version-externally-managed --record=record.text\n-popd\n+python setup.py build_ext -q --inplace\n \n+# Basic sanity checks\n python -c \"import pyarrow.parquet\"\n python -c \"import pyarrow.plasma\"\n python -c \"import pyarrow.orc\"\n \n-if [ $ARROW_TRAVIS_VALGRIND == \"1\" ]; then\n+if [ \"$ARROW_TRAVIS_VALGRIND\" == \"1\" ]; then\n   export PLASMA_VALGRIND=1\n fi\n \n@@ -115,20 +121,35 @@ if [ $TRAVIS_OS_NAME == \"linux\" ]; then\n     sudo bash -c \"echo 20000 > /proc/sys/vm/nr_hugepages\"\n fi\n \n-PYARROW_PATH=$CONDA_PREFIX/lib/python$PYTHON_VERSION/site-packages/pyarrow\n-python -m pytest -r sxX --durations=15 $PYARROW_PATH --parquet\n+# Need to run tests from the source tree for Cython coverage and conftest.py\n+if [ \"$ARROW_TRAVIS_COVERAGE\" == \"1\" ]; then\n+    # Output Python coverage data in a persistent place\n+    export COVERAGE_FILE=$ARROW_PYTHON_COVERAGE_FILE\n+    coverage run --append -m pytest -r sxX --durations=15 --parquet pyarrow/tests\n+else\n+    python -m pytest -r sxX --durations=15 --parquet pyarrow/tests\n+fi\n \n-# Capture C++ coverage info and combine with previous coverage file\n-if [ $ARROW_TRAVIS_COVERAGE == \"1\" ]; then\n+if [ \"$ARROW_TRAVIS_COVERAGE\" == \"1\" ]; then\n+    # Check Cython coverage was correctly captured in $COVERAGE_FILE\n+    coverage report -i --include=\"*/lib.pyx\"\n+    coverage report -i --include=\"*/memory.pxi\"\n+    coverage report -i --include=\"*/_parquet.pyx\"\n+    # Generate XML file for CodeCov\n+    coverage xml -i -o $TRAVIS_BUILD_DIR/coverage.xml\n+    # Capture C++ coverage info and combine with previous coverage file\n     pushd $TRAVIS_BUILD_DIR\n     lcov --quiet --directory . --capture --no-external --output-file coverage-python-tests.info\n     lcov --add-tracefile coverage-python-tests.info \\\n         --add-tracefile $ARROW_CPP_COVERAGE_FILE \\\n         --output-file $ARROW_CPP_COVERAGE_FILE\n     rm coverage-python-tests.info\n-    popd\n+    popd   # $TRAVIS_BUILD_DIR\n fi\n \n+popd  # $ARROW_PYTHON_DIR\n+\n+\n if [ \"$ARROW_TRAVIS_PYTHON_DOCS\" == \"1\" ] && [ \"$PYTHON_VERSION\" == \"3.6\" ]; then\n   # Build documentation once\n   conda install -y -q \\\n@@ -138,9 +159,12 @@ if [ \"$ARROW_TRAVIS_PYTHON_DOCS\" == \"1\" ] && [ \"$PYTHON_VERSION\" == \"3.6\" ]; the\n         sphinx \\\n         sphinx_bootstrap_theme\n \n-  pushd $ARROW_PYTHON_DIR/doc\n+  pushd $ARROW_PYTHON_DIR\n+  # For autodoc, make sure PyArrow is installed\n+  python setup.py install -q --single-version-externally-managed --record=record.text\n+  cd doc\n   sphinx-build -q -b html -d _build/doctrees -W source _build/html\n-  popd\n+  popd  # $ARROW_PYTHON_DIR\n fi\n \n if [ \"$ARROW_TRAVIS_PYTHON_BENCHMARKS\" == \"1\" ] && [ \"$PYTHON_VERSION\" == \"3.6\" ]; then\n@@ -152,12 +176,16 @@ if [ \"$ARROW_TRAVIS_PYTHON_BENCHMARKS\" == \"1\" ] && [ \"$PYTHON_VERSION\" == \"3.6\"\n   source activate pyarrow_asv\n   pip install -q git+https://github.com/pitrou/asv.git@customize_commands\n \n-  pushd $TRAVIS_BUILD_DIR/python\n+  export PYARROW_WITH_PARQUET=0\n+  export PYARROW_WITH_PLASMA=1\n+  export PYARROW_WITH_ORC=0\n+\n+  pushd $ARROW_PYTHON_DIR\n   # Workaround for https://github.com/airspeed-velocity/asv/issues/631\n   git fetch --depth=100 origin master:master\n   # Generate machine information (mandatory)\n   asv machine --yes\n   # Run benchmarks on the changeset being tested\n   asv run --no-pull --show-stderr --quick HEAD^!\n-  popd\n+  popd  # $ARROW_PYTHON_DIR\n fi\ndiff --git a/ci/travis_upload_cpp_coverage.sh b/ci/travis_upload_cpp_coverage.sh\nindex 20b7e1bdd0..2b11c5eb85 100755\n--- a/ci/travis_upload_cpp_coverage.sh\n+++ b/ci/travis_upload_cpp_coverage.sh\n@@ -23,7 +23,7 @@ source $TRAVIS_BUILD_DIR/ci/travis_env_common.sh\n \n pushd $TRAVIS_BUILD_DIR\n \n-# Display summary\n+# Display C++ coverage summary\n lcov --list $ARROW_CPP_COVERAGE_FILE\n # Upload report to CodeCov\n bash <(curl -s https://codecov.io/bash) || echo \"Codecov did not collect coverage reports\"\ndiff --git a/cpp/CMakeLists.txt b/cpp/CMakeLists.txt\nindex 0051c733a2..521e6850b6 100644\n--- a/cpp/CMakeLists.txt\n+++ b/cpp/CMakeLists.txt\n@@ -227,6 +227,10 @@ if(\"${CMAKE_SOURCE_DIR}\" STREQUAL \"${CMAKE_CURRENT_SOURCE_DIR}\")\n     \"Build with GRPC\"\n     OFF)\n \n+  option(ARROW_GENERATE_COVERAGE\n+    \"Build with C++ code coverage enabled\"\n+    OFF)\n+\n   option(ARROW_VERBOSE_THIRDPARTY_BUILD\n     \"If off, output from ExternalProjects will be logged to files rather than shown\"\n     OFF)\ndiff --git a/cpp/cmake_modules/SetupCxxFlags.cmake b/cpp/cmake_modules/SetupCxxFlags.cmake\nindex 6387cfcea8..6803127ff8 100644\n--- a/cpp/cmake_modules/SetupCxxFlags.cmake\n+++ b/cpp/cmake_modules/SetupCxxFlags.cmake\n@@ -172,6 +172,11 @@ if (\"${COMPILER_FAMILY}\" STREQUAL \"msvc\")\n   set(CXX_COMMON_FLAGS \"${CXX_COMMON_FLAGS} /wd4800\")\n endif()\n \n+# Avoid clang error when an unknown warning flag is passed\n+if (\"${COMPILER_FAMILY}\" STREQUAL \"clang\")\n+  set(CXX_COMMON_FLAGS \"${CXX_COMMON_FLAGS} -Wno-unknown-warning-option\")\n+endif()\n+\n # if build warning flags is set, add to CXX_COMMON_FLAGS\n if (BUILD_WARNING_FLAGS)\n   # Use BUILD_WARNING_FLAGS with BUILD_WARNING_LEVEL=everything to disable\ndiff --git a/cpp/cmake_modules/UseCython.cmake b/cpp/cmake_modules/UseCython.cmake\nindex a1cfac6e99..6e6718a503 100644\n--- a/cpp/cmake_modules/UseCython.cmake\n+++ b/cpp/cmake_modules/UseCython.cmake\n@@ -68,10 +68,11 @@ mark_as_advanced( CYTHON_ANNOTATE CYTHON_NO_DOCSTRINGS CYTHON_FLAGS)\n \n find_package( PythonLibsNew REQUIRED )\n \n-set( CYTHON_CXX_EXTENSION \"cxx\" )\n+# (using another C++ extension breaks coverage)\n+set( CYTHON_CXX_EXTENSION \"cpp\" )\n set( CYTHON_C_EXTENSION \"c\" )\n \n-# Create a *.c or *.cxx file from a *.pyx file.\n+# Create a *.c or *.cpp file from a *.pyx file.\n # Input the generated file basename.  The generate files will put into the variable\n # placed in the \"generated_files\" argument. Finally all the *.py and *.pyx files.\n function( compile_pyx _name pyx_target_name generated_files pyx_file)\n@@ -93,6 +94,8 @@ function( compile_pyx _name pyx_target_name generated_files pyx_file)\n   endif()\n   get_source_file_property( pyx_location ${pyx_file} LOCATION )\n \n+  set ( output_file \"${_name}.${extension}\" )\n+\n   # Set additional flags.\n   if( CYTHON_ANNOTATE )\n     set( annotate_arg \"--annotate\" )\n@@ -113,11 +116,11 @@ function( compile_pyx _name pyx_target_name generated_files pyx_file)\n   get_source_file_property( property_is_public ${pyx_file} CYTHON_PUBLIC )\n   get_source_file_property( property_is_api ${pyx_file} CYTHON_API )\n   if( ${property_is_api} )\n-      set( _generated_files \"${_name}.${extension}\" \"${_name}.h\" \"${name}_api.h\")\n+      set( _generated_files \"${output_file}\" \"${_name}.h\" \"${name}_api.h\")\n   elseif( ${property_is_public} )\n-      set( _generated_files \"${_name}.${extension}\" \"${_name}.h\")\n+      set( _generated_files \"${output_file}\" \"${_name}.h\")\n   else()\n-      set( _generated_files \"${_name}.${extension}\")\n+      set( _generated_files \"${output_file}\")\n   endif()\n   set_source_files_properties( ${_generated_files} PROPERTIES GENERATED TRUE )\n \n@@ -131,12 +134,15 @@ function( compile_pyx _name pyx_target_name generated_files pyx_file)\n \n   # Add the command to run the compiler.\n   add_custom_target(${pyx_target_name}\n-    COMMAND ${PYTHON_EXECUTABLE} -m cython ${cxx_arg} ${include_directory_arg}\n+    COMMAND ${PYTHON_EXECUTABLE} -m cython ${cxx_arg}\n     ${annotate_arg} ${no_docstrings_arg} ${cython_debug_arg}\n     ${CYTHON_FLAGS}\n-    --output-file \"${_name}.${extension}\" ${pyx_location}\n+    # Necessary for Cython code coverage\n+    --working ${CMAKE_CURRENT_SOURCE_DIR}\n+    --output-file \"${CMAKE_CURRENT_BINARY_DIR}/${output_file}\"\n+    \"${CMAKE_CURRENT_SOURCE_DIR}/${pyx_file}\"\n     DEPENDS ${pyx_location}\n-    # do not specify byproducts for now since they don't work with the older\n+    # Do not specify byproducts for now since they don't work with the older\n     # version of cmake available in the apt repositories.\n     #BYPRODUCTS ${_generated_files}\n     COMMENT ${comment}\ndiff --git a/python/.coveragerc b/python/.coveragerc\nnew file mode 100644\nindex 0000000000..f5dc6e37c3\n--- /dev/null\n+++ b/python/.coveragerc\n@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+[run]\n+plugins = Cython.Coverage\ndiff --git a/python/.gitignore b/python/.gitignore\nindex 6a63e5a2a7..0633bb424f 100644\n--- a/python/.gitignore\n+++ b/python/.gitignore\n@@ -29,10 +29,11 @@ build\n dist\n # Egg metadata\n *.egg-info\n-# coverage\n+# Coverage\n .coverage\n coverage.xml\n-# cache\n+htmlcov\n+# Cache\n .cache\n \n # benchmark working dir\n@@ -43,4 +44,4 @@ pyarrow/_table_api.h\n manylinux1/arrow\n \n # plasma store\n-pyarrow/plasma_store\n\\ No newline at end of file\n+pyarrow/plasma_store\ndiff --git a/python/CMakeLists.txt b/python/CMakeLists.txt\nindex 99194c2733..01b7b54c9e 100644\n--- a/python/CMakeLists.txt\n+++ b/python/CMakeLists.txt\n@@ -79,6 +79,9 @@ if(\"${CMAKE_SOURCE_DIR}\" STREQUAL \"${CMAKE_CURRENT_SOURCE_DIR}\")\n   option(PYARROW_BUNDLE_BOOST\n     \"Bundle the Boost libraries when we bundle Arrow C++\"\n     OFF)\n+  option(PYARROW_GENERATE_COVERAGE\n+    \"Build with Cython code coverage enabled\"\n+    OFF)\n   set(PYARROW_CXXFLAGS \"\" CACHE STRING\n     \"Compiler flags to append when compiling Arrow\")\n endif()\n@@ -106,7 +109,7 @@ if (NOT MSVC)\n   set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-omit-frame-pointer\")\n \n   # Suppress Cython warnings\n-  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-unused-variable\")\n+  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-unused-variable -Wno-maybe-uninitialized\")\n else()\n   # MSVC version of -Wno-return-type-c-linkage\n   set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /wd4190\")\n@@ -420,6 +423,10 @@ endif()\n # Setup and build Cython modules\n ############################################################\n \n+if (PYARROW_GENERATE_COVERAGE)\n+  set(CYTHON_FLAGS \"${CYTHON_FLAGS}\" \"-Xlinetrace=True\")\n+endif()\n+\n foreach(module ${CYTHON_EXTENSIONS})\n     string(REPLACE \".\" \";\" directories ${module})\n     list(GET directories -1 module_name)\n@@ -460,5 +467,12 @@ foreach(module ${CYTHON_EXTENSIONS})\n         INSTALL_RPATH ${module_install_rpath})\n     endif()\n \n+    if (PYARROW_GENERATE_COVERAGE)\n+      set_target_properties(${module_name} PROPERTIES\n+        COMPILE_DEFINITIONS \"CYTHON_TRACE=1;CYTHON_TRACE_NOGIL=1\")\n+    endif()\n+\n     target_link_libraries(${module_name} ${LINK_LIBS})\n+\n+    # Generated files will be moved to the right directory by setup.py.\n endforeach(module)\ndiff --git a/python/setup.py b/python/setup.py\nindex 2e0d982595..7a8118b1fb 100644\n--- a/python/setup.py\n+++ b/python/setup.py\n@@ -102,6 +102,7 @@ def run(self):\n                      ('with-static-boost', None, 'link boost statically'),\n                      ('with-plasma', None, 'build the Plasma extension'),\n                      ('with-orc', None, 'build the ORC extension'),\n+                     ('generate-coverage', None, 'enable Cython code coverage'),\n                      ('bundle-boost', None,\n                       'bundle the (shared) Boost libraries'),\n                      ('bundle-arrow-cpp', None,\n@@ -135,6 +136,8 @@ def initialize_options(self):\n             os.environ.get('PYARROW_WITH_PLASMA', '0'))\n         self.with_orc = strtobool(\n             os.environ.get('PYARROW_WITH_ORC', '0'))\n+        self.generate_coverage = strtobool(\n+            os.environ.get('PYARROW_GENERATE_COVERAGE', '0'))\n         self.bundle_arrow_cpp = strtobool(\n             os.environ.get('PYARROW_BUNDLE_ARROW_CPP', '0'))\n         self.bundle_boost = strtobool(\n@@ -197,6 +200,9 @@ def _run_cmake(self):\n                 cmake_options.append('-DPYARROW_CXXFLAGS={0}'\n                                      .format(self.cmake_cxxflags))\n \n+            if self.generate_coverage:\n+                cmake_options.append('-DPYARROW_GENERATE_COVERAGE=on')\n+\n             if self.bundle_arrow_cpp:\n                 cmake_options.append('-DPYARROW_BUNDLE_ARROW_CPP=ON')\n                 # ARROW-1090: work around CMake rough edges\n@@ -303,13 +309,30 @@ def _run_cmake(self):\n                     raise RuntimeError('pyarrow C-extension failed to build:',\n                                        os.path.abspath(built_path))\n \n+                cpp_generated_path = self.get_ext_generated_cpp_source(name)\n+                if not os.path.exists(cpp_generated_path):\n+                    raise RuntimeError('expected to find generated C++ file '\n+                                       'in {0!r}'.format(cpp_generated_path))\n+\n+                # The destination path to move the generated C++ source to\n+                # (for Cython source coverage)\n+                cpp_path = pjoin(build_lib, self._get_build_dir(),\n+                                 os.path.basename(cpp_generated_path))\n+                if os.path.exists(cpp_path):\n+                    os.remove(cpp_path)\n+\n+                # The destination path to move the built C extension to\n                 ext_path = pjoin(build_lib, self._get_cmake_ext_path(name))\n                 if os.path.exists(ext_path):\n                     os.remove(ext_path)\n                 self.mkpath(os.path.dirname(ext_path))\n+\n+                print('Moving generated C++ source', cpp_generated_path,\n+                      'to build path', cpp_path)\n+                shutil.move(cpp_generated_path, cpp_path)\n                 print('Moving built C-extension', built_path,\n                       'to build path', ext_path)\n-                shutil.move(self.get_ext_built(name), ext_path)\n+                shutil.move(built_path, ext_path)\n                 self._found_names.append(name)\n \n                 if os.path.exists(self.get_ext_built_api_header(name)):\n@@ -321,7 +344,7 @@ def _run_cmake(self):\n                 build_py = self.get_finalized_command('build_py')\n                 source = os.path.join(self.build_type, \"plasma_store\")\n                 target = os.path.join(build_lib,\n-                                      build_py.get_package_dir('pyarrow'),\n+                                      self._get_build_dir(),\n                                       \"plasma_store\")\n                 shutil.move(source, target)\n \n@@ -334,19 +357,25 @@ def _failure_permitted(self, name):\n             return True\n         return False\n \n-    def _get_inplace_dir(self):\n-        pass\n-\n-    def _get_cmake_ext_path(self, name):\n+    def _get_build_dir(self):\n         # Get the package directory from build_py\n         build_py = self.get_finalized_command('build_py')\n-        package_dir = build_py.get_package_dir('pyarrow')\n+        return build_py.get_package_dir('pyarrow')\n+\n+    def _get_cmake_ext_path(self, name):\n         # This is the name of the arrow C-extension\n         suffix = sysconfig.get_config_var('EXT_SUFFIX')\n         if suffix is None:\n             suffix = sysconfig.get_config_var('SO')\n         filename = name + suffix\n-        return pjoin(package_dir, filename)\n+        return pjoin(self._get_build_dir(), filename)\n+\n+    def get_ext_generated_cpp_source(self, name):\n+        if sys.platform == 'win32':\n+            head, tail = os.path.split(name)\n+            return pjoin(head, tail + \".cpp\")\n+        else:\n+            return pjoin(name + \".cpp\")\n \n     def get_ext_built_api_header(self, name):\n         if sys.platform == 'win32':\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-17T14:22:05.667+0000",
                    "updated": "2018-05-17T14:22:05.667+0000",
                    "started": "2018-05-17T14:22:05.667+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "102921",
                    "issueId": "13158731"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 3600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@c7d0725[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@119ee229[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3c5972e8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5ab050e0[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c081ad9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@cf61d4f[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7bcfe00b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@232098c2[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7fa290ad[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4302e673[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@474989a0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6088ef03[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu May 17 14:22:04 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-05-17T14:22:04.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2574/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-05-11T13:45:03.000+0000",
        "updated": "2018-05-17T14:22:05.000+0000",
        "timeoriginalestimate": null,
        "description": "Now that our Travis-CI setup is able to collect and publish C++ and Rust coverage, we should do the same for Python and Cython modules in pyarrow.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[CI] Collect and publish Python coverage",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158731/comment/16472183",
                    "id": "16472183",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Code coverage with Cython is currently hard to get to work. I stumbled on the following issues. Some have workarounds, one at least is currently blocking:\r\n * [https://github.com/cython/cython/issues/2264]\r\n * [https://github.com/cython/cython/issues/1508]\r\n * [https://github.com/cython/cython/issues/2265]\r\n * [https://github.com/cython/cython/issues/2267]\r\n * [https://github.com/cython/cython/issues/2266]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-05-11T16:10:49.998+0000",
                    "updated": "2018-05-11T16:10:49.998+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158731/comment/16479125",
                    "id": "16479125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 2050\n[https://github.com/apache/arrow/pull/2050]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-05-17T14:22:04.210+0000",
                    "updated": "2018-05-17T14:22:04.210+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|i3tm1r:",
        "customfield_12314139": null
    }
}