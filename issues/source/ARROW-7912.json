{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13286851",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286851",
    "key": "ARROW-7912",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328932",
                "id": "12328932",
                "name": "Format"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7912/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 3,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286851/worklog/390796",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #6040: ARROW-7912: [Format] C data interface\nURL: https://github.com/apache/arrow/pull/6040#issuecomment-589753483\n \n \n   As [the vote has closed and this was approved](https://lists.apache.org/thread.html/r42ea34fb567dfda9409cb500d4d8a941133c6ae9465041c38264c7d9%40%3Cdev.arrow.apache.org%3E), I will merge now.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-21T17:29:32.938+0000",
                    "updated": "2020-02-21T17:29:32.938+0000",
                    "started": "2020-02-21T17:29:32.937+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "390796",
                    "issueId": "13286851"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286851/worklog/390799",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6040: ARROW-7912: [Format] C data interface\nURL: https://github.com/apache/arrow/pull/6040\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-21T17:32:30.102+0000",
                    "updated": "2020-02-21T17:32:30.102+0000",
                    "started": "2020-02-21T17:32:30.101+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "390799",
                    "issueId": "13286851"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286851/worklog/390959",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on pull request #6040: ARROW-7912: [Format] C data interface\nURL: https://github.com/apache/arrow/pull/6040#discussion_r382840857\n \n \n\n ##########\n File path: docs/source/format/CDataInterface.rst\n ##########\n @@ -0,0 +1,925 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+==========================\n+The Arrow C data interface\n+==========================\n+\n+Rationale\n+=========\n+\n+Apache Arrow is designed to be a universal in-memory format for the representation\n+of tabular (\"columnar\") data. However, some projects may face a difficult\n+choice between either depending on a fast-evolving project such as the\n+Arrow C++ library, or having to reimplement adapters for data interchange,\n+which may require significant, redundant development effort.\n+\n+The Arrow C data interface defines a very small, stable set of C definitions\n+that can be easily *copied* in any project's source code and used for columnar\n+data interchange in the Arrow format.  For non-C/C++ languages and runtimes,\n+it should be almost as easy to translate the C definitions into the\n+corresponding C FFI declarations.\n+\n+Applications and libraries can therefore work with Arrow memory without\n+necessarily using Arrow libraries or reinventing the wheel. Developers can\n+choose between tight integration\n+with the Arrow *software project* (benefitting from the growing array of\n+facilities exposed by e.g. the C++ or Java implementations of Apache Arrow,\n+but with the cost of a dependency) or minimal integration with the Arrow\n+*format* only.\n+\n+Goals\n+-----\n+\n+* Expose an ABI-stable interface.\n+* Make it easy for third-party projects to implement support for (including partial\n+  support where sufficient), with little initial investment.\n+* Allow zero-copy sharing of Arrow data between independent runtimes\n+  and components running in the same process.\n+* Match the Arrow array concepts closely to avoid the development of\n+  yet another marshalling layer.\n+* Avoid the need for one-to-one adaptation layers such as the limited\n+  JPype-based bridge between Java and Python.\n+* Enable integration without an explicit dependency (either at compile-time\n+  or runtime) on the Arrow software project.\n+\n+Ideally, the Arrow C data interface can become a low-level *lingua franca*\n+for sharing columnar data at runtime and establish Arrow as the universal\n+building block in the columnar processing ecosystem.\n+\n+Non-goals\n+---------\n+\n+* Expose a C API mimicking operations available in higher-level runtimes\n+  (such as C++, Java...).\n+* Data sharing between distinct processes or storage persistence.\n+\n+\n+Comparison with the Arrow IPC format\n+------------------------------------\n+\n+Pros of the C data interface vs. the IPC format:\n+\n+* No dependency on Flatbuffers.\n+* No buffer reassembly (data is already exposed in logical Arrow format).\n+* Zero-copy by design.\n+* Easy to reimplement from scratch.\n+* Minimal C definition that can be easily copied into other codebases.\n+* Resource lifetime management through a custom release callback.\n+\n+Pros of the IPC format vs. the data interface:\n+\n+* Works across processes and machines.\n+* Allows data storage and persistence.\n+* Being a streamable format, the IPC format has room for composing more features\n+  (such as integrity checks, compression...).\n+* Does not require explicit C data access.\n+\n+Data type description -- format strings\n+=======================================\n+\n+A data type is described using a format string.  The format string only\n+encodes information about the top-level type; for nested type, child types\n+are described separately.  Also, metadata is encoded in a separate string.\n+\n+The format strings are designed to be easily parsable, even from a language\n+such as C.  The most common primitive formats have one-character format\n+strings:\n+\n++-----------------+--------------------------+------------+\n+| Format string   | Arrow data type          | Notes      |\n++=================+==========================+============+\n+| ``n``           | null                     |            |\n++-----------------+--------------------------+------------+\n+| ``b``           | boolean                  |            |\n++-----------------+--------------------------+------------+\n+| ``c``           | int8                     |            |\n++-----------------+--------------------------+------------+\n+| ``C``           | uint8                    |            |\n++-----------------+--------------------------+------------+\n+| ``s``           | int16                    |            |\n++-----------------+--------------------------+------------+\n+| ``S``           | uint16                   |            |\n++-----------------+--------------------------+------------+\n+| ``i``           | int32                    |            |\n++-----------------+--------------------------+------------+\n+| ``I``           | uint32                   |            |\n++-----------------+--------------------------+------------+\n+| ``l``           | int64                    |            |\n++-----------------+--------------------------+------------+\n+| ``L``           | uint64                   |            |\n++-----------------+--------------------------+------------+\n+| ``e``           | float16                  |            |\n++-----------------+--------------------------+------------+\n+| ``f``           | float32                  |            |\n++-----------------+--------------------------+------------+\n+| ``g``           | float64                  |            |\n++-----------------+--------------------------+------------+\n+\n++-----------------+---------------------------------------+------------+\n+| Format string   | Arrow data type                       | Notes      |\n++=================+=======================================+============+\n+| ``z``           | binary                                |            |\n++-----------------+---------------------------------------+------------+\n+| ``Z``           | large binary                          |            |\n++-----------------+---------------------------------------+------------+\n+| ``u``           | utf-8 string                          |            |\n++-----------------+---------------------------------------+------------+\n+| ``U``           | large utf-8 string                    |            |\n++-----------------+---------------------------------------+------------+\n+| ``d:19,10``     | decimal128 [precision 19, scale 10]   |            |\n++-----------------+---------------------------------------+------------+\n+| ``w:42``        | fixed-width binary [42 bytes]         |            |\n++-----------------+---------------------------------------+------------+\n+\n+Temporal types have multi-character format strings starting with ``t``:\n+\n++-----------------+---------------------------------------------------+------------+\n+| Format string   | Arrow data type                                   | Notes      |\n++=================+===================================================+============+\n+| ``tdD``         | date32 [days]                                     |            |\n++-----------------+---------------------------------------------------+------------+\n+| ``tdm``         | date64 [milliseconds]                             |            |\n++-----------------+---------------------------------------------------+------------+\n+| ``tts``         | time32 [seconds]                                  |            |\n++-----------------+---------------------------------------------------+------------+\n+| ``ttm``         | time32 [milliseconds]                             |            |\n++-----------------+---------------------------------------------------+------------+\n+| ``ttu``         | time64 [microseconds]                             |            |\n++-----------------+---------------------------------------------------+------------+\n+| ``ttn``         | time64 [nanoseconds]                              |            |\n++-----------------+---------------------------------------------------+------------+\n+| ``tss:...``     | timestamp [seconds] with timezone \"...\"           | \\(1)       |\n++-----------------+---------------------------------------------------+------------+\n+| ``tsm:...``     | timestamp [milliseconds] with timezone \"...\"      | \\(1)       |\n++-----------------+---------------------------------------------------+------------+\n+| ``tsu:...``     | timestamp [microseconds] with timezone \"...\"      | \\(1)       |\n++-----------------+---------------------------------------------------+------------+\n+| ``tsn:...``     | timestamp [nanoseconds] with timezone \"...\"       | \\(1)       |\n++-----------------+---------------------------------------------------+------------+\n+| ``tDs``         | duration [seconds]                                |            |\n++-----------------+---------------------------------------------------+------------+\n+| ``tDm``         | duration [milliseconds]                           |            |\n++-----------------+---------------------------------------------------+------------+\n+| ``tDu``         | duration [microseconds]                           |            |\n++-----------------+---------------------------------------------------+------------+\n+| ``tDn``         | duration [nanoseconds]                            |            |\n++-----------------+---------------------------------------------------+------------+\n+| ``tiM``         | interval [months]                                 |            |\n++-----------------+---------------------------------------------------+------------+\n+| ``tiD``         | interval [days, time]                             |            |\n++-----------------+---------------------------------------------------+------------+\n+\n+Dictionary-encoded types do not have a specific format string.  Instead, the\n+format string of the base array represents the dictionary index type, and the\n+value type can be read from the dependent dictionary array (see below\n+\"Dictionary-encoded arrays\").\n+\n+Nested types have multiple-character format strings starting with ``+``.  The\n+names and types of child fields are read from the child arrays.\n+\n++------------------------+---------------------------------------------------+------------+\n+| Format string          | Arrow data type                                   | Notes      |\n++========================+===================================================+============+\n+| ``+l``                 | list                                              |            |\n++------------------------+---------------------------------------------------+------------+\n+| ``+L``                 | large list                                        |            |\n++------------------------+---------------------------------------------------+------------+\n+| ``+w:123``             | fixed-sized list [123 items]                      |            |\n++------------------------+---------------------------------------------------+------------+\n+| ``+s``                 | struct                                            |            |\n++------------------------+---------------------------------------------------+------------+\n+| ``+m``                 | map                                               | \\(2)       |\n++------------------------+---------------------------------------------------+------------+\n+| ``+ud:I,J,...``        | dense union with type ids I,J...                  |            |\n++------------------------+---------------------------------------------------+------------+\n+| ``+us:I,J,...``        | sparse union with type ids I,J...                 |            |\n++------------------------+---------------------------------------------------+------------+\n+\n+Notes:\n+\n+(1)\n+   The timezone string is appended as-is after the colon character ``:``, without\n+   any quotes.  If the timezone is empty, the colon ``:`` must still be included.\n+\n+(2)\n+   As specified in the Arrow columnar format, the map type has a single child type\n+   named ``entries``, itself a 2-child struct type of ``(key, value)``.\n+\n+Examples\n+--------\n+\n+* A dictionary-encoded ``decimal128(precision = 12, scale = 5)`` array\n+  with ``int16`` indices has format string ``s``, and its dependent dictionary\n+  array has format string ``d:12,5``.\n+* A ``list<uint64>`` array has format string ``+l``, and its single child\n+  has format string ``L``.\n+* A ``struct<ints: int32, floats: float32>`` has format string ``+s``; its two\n+  children have names ``ints`` and ``floats``, and format strings ``i`` and\n+  ``f`` respectively.\n+* A ``map<string, float64>`` array has format string ``+m``; its single child\n+  has name ``entries`` and format string ``+s``; its two grandchildren have names\n+  ``key`` and ``value``, and format strings ``u`` and ``g`` respectively.\n+* A ``sparse_union<ints: int32, floats: float32>`` with type ids ``4, 5``\n+  has format string ``+us:4,5``; its two children have names ``ints`` and\n+  ``floats``, and format strings ``i`` and ``f`` respectively.\n+\n+\n+Structure definitions\n+=====================\n+\n+The following free-standing definitions are enough to support the Arrow\n+C data interface in your project.  Like the rest of the Arrow project, they\n+are available under the Apache License 2.0.\n+\n+.. code-block:: c\n+\n+   #define ARROW_FLAG_DICTIONARY_ORDERED 1\n+   #define ARROW_FLAG_NULLABLE 2\n+   #define ARROW_FLAG_MAP_KEYS_SORTED 4\n+\n+   struct ArrowSchema {\n+     // Array type description\n+     const char* format;\n+     const char* name;\n+     const char* metadata;\n+     int64_t flags;\n+     int64_t n_children;\n+     struct ArrowSchema** children;\n+     struct ArrowSchema* dictionary;\n+\n+     // Release callback\n+     void (*release)(struct ArrowSchema*);\n+     // Opaque producer-specific data\n+     void* private_data;\n+   };\n+\n+   struct ArrowArray {\n+     // Array data description\n+     int64_t length;\n+     int64_t null_count;\n+     int64_t offset;\n+     int64_t n_buffers;\n+     int64_t n_children;\n+     const void** buffers;\n+     struct ArrowArray** children;\n+     struct ArrowArray* dictionary;\n+\n+     // Release callback\n+     void (*release)(struct ArrowArray*);\n+     // Opaque producer-specific data\n+     void* private_data;\n+   };\n+\n+The ArrowSchema structure\n+-------------------------\n+\n+The ``ArrowSchema`` structure describes the type and metadata of an exported\n+array or record batch.  It has the following fields:\n+\n+.. c:member:: const char* ArrowSchema.format\n+\n+   Mandatory.  A null-terminated, UTF8-encoded string describing\n+   the data type.  If the data type is nested, child types are not\n+   encoded here but in the :c:member:`ArrowSchema.children` structures.\n+\n+   Consumers MAY decide not to support all data types, but they\n+   should document this limitation.\n+\n+.. c:member:: const char* ArrowSchema.name\n+\n+   Optional.  A null-terminated, UTF8-encoded string of the field\n+   or array name.  This is mainly used to reconstruct child fields\n+   of nested types.\n+\n+   Producers MAY decide not to provide this information, and consumers\n+   MAY decide to ignore it.  If omitted, MAY be NULL or an empty string.\n+\n+.. c:member:: const char* ArrowSchema.metadata\n+\n+   Optional.  A binary string describing the type's metadata.\n+   If the data type is nested, child types are not encoded here but\n+   in the :c:member:`ArrowSchema.children` structures.\n+\n+   This string is not null-terminated but follows a specific format::\n+\n+      int32: number of key/value pairs (noted N below)\n+      int32: byte length of key 0\n+      key 0 (not null-terminated)\n+      int32: byte length of value 0\n+      value 0 (not null-terminated)\n+      ...\n+      int32: byte length of key N - 1\n+      key N - 1 (not null-terminated)\n+      int32: byte length of value N - 1\n+      value N - 1 (not null-terminated)\n+\n+   Integers are stored in native endianness.  For example, the metadata\n+   ``[('key1', 'value1')]`` is encoded as::\n \n Review comment:\n   Thank you. I just started a BE support :)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-21T22:42:27.349+0000",
                    "updated": "2020-02-21T22:42:27.349+0000",
                    "started": "2020-02-21T22:42:27.348+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "390959",
                    "issueId": "13286851"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 1800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@79c8d1d9[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@43a5cf12[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@45ad5291[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@281dd869[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22dca026[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7842aaac[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@575446ef[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@114c02fc[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56565d63[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3b2c8acf[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ebad07b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3f1070b2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 1800,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Feb 21 17:32:31 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-02-21T17:32:31.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7912/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-02-21T17:25:00.000+0000",
        "updated": "2020-02-21T22:42:27.000+0000",
        "timeoriginalestimate": null,
        "description": "Apache Arrow is designed to be a universal in-memory format for the representation\r\nof tabular (\"columnar\") data. However, some projects may face a difficult\r\nchoice between either depending on a fast-evolving project such as the\r\nArrow C++ library, or having to reimplement adapters for data interchange,\r\nwhich may require significant, redundant development effort.\r\n\r\nThe Arrow C data interface defines a very small, stable set of C definitions\r\nthat can be easily *copied* in any project's source code and used for columnar\r\ndata interchange in the Arrow format.  For non-C/C++ languages and runtimes,\r\nit should be almost as easy to translate the C definitions into the\r\ncorresponding C FFI declarations.\r\n\r\nApplications and libraries can therefore work with Arrow memory without\r\nnecessarily using Arrow libraries or reinventing the wheel. Developers can\r\nchoose between tight integration\r\nwith the Arrow *software project* (benefitting from the growing array of\r\nfacilities exposed by e.g. the C++ or Java implementations of Apache Arrow,\r\nbut with the cost of a dependency) or minimal integration with the Arrow\r\n*format* only.\r\n\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "0.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 1800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Format] C data interface",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286851/comment/17042060",
                    "id": "17042060",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 6040\n[https://github.com/apache/arrow/pull/6040]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-02-21T17:32:31.546+0000",
                    "updated": "2020-02-21T17:32:31.546+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0brfc:",
        "customfield_12314139": null
    }
}