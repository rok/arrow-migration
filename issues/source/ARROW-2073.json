{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13135463",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13135463",
    "key": "ARROW-2073",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2073/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1ac7e4a0[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3a360031[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b3eecf6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@61034e28[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c27bb09[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@dc4d3fb[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1181c7e9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6a08a9ff[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5bc6a844[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7036f3cc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f17dcac[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@407fc7e0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Feb 08 12:23:39 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-02-08T12:23:39.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2073/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-02-01T15:37:57.000+0000",
        "updated": "2018-02-08T12:23:39.000+0000",
        "timeoriginalestimate": null,
        "description": "Following ARROW-1705, we should support calling {{pa.array}} with a sequence of tuples, presuming a struct type is passed for the {{type}} parameter.\r\n\r\nWe also probably want to disallow mixed inputs, e.g. a sequence of both dicts and tuples. The user should use only one idiom at a time.",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Create StructArray from sequence of tuples given a known data type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13135463/comment/16355755",
                    "id": "16355755",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou opened a new pull request #1572: ARROW-2073: [Python] Create struct array from sequence of tuples\nURL: https://github.com/apache/arrow/pull/1572\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-07T17:22:24.495+0000",
                    "updated": "2018-02-07T17:22:24.495+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13135463/comment/16355817",
                    "id": "16355817",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1572: ARROW-2073: [Python] Create struct array from sequence of tuples\nURL: https://github.com/apache/arrow/pull/1572#issuecomment-363855180\n \n \n   AppVeyor build at https://ci.appveyor.com/project/pitrou/arrow/build/1.0.45\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-07T17:59:20.420+0000",
                    "updated": "2018-02-07T17:59:20.420+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13135463/comment/16355919",
                    "id": "16355919",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on a change in pull request #1572: ARROW-2073: [Python] Create struct array from sequence of tuples\nURL: https://github.com/apache/arrow/pull/1572#discussion_r166726751\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_builtin.py\n ##########\n @@ -531,6 +531,45 @@ def test_struct_from_dicts():\n     assert arr.to_pylist() == expected\n \n \n+def test_struct_from_tuples():\n+    ty = pa.struct([pa.field('a', pa.int32()),\n+                    pa.field('b', pa.string()),\n+                    pa.field('c', pa.bool_())])\n+\n+    data = [(5, 'foo', True),\n+            (6, 'bar', False)]\n+    expected = [{'a': 5, 'b': 'foo', 'c': True},\n+                {'a': 6, 'b': 'bar', 'c': False}]\n+    arr = pa.array(data, type=ty)\n+    assert arr.to_pylist() == expected\n+\n+    # With omitted values\n+    data = [(5, 'foo', None),\n+            None,\n+            (6, None, False)]\n+    expected = [{'a': 5, 'b': 'foo', 'c': None},\n+                None,\n+                {'a': 6, 'b': None, 'c': False}]\n+    arr = pa.array(data, type=ty)\n+    assert arr.to_pylist() == expected\n+\n+    # Invalid tuple size\n+    for tup in [(5, 'foo'), (), ('5', 'foo', True, None)]:\n+        with pytest.raises(ValueError, match=\"(?i)tuple size\"):\n+            pa.array([tup], type=ty)\n+\n+\n+def test_struct_from_mixed_sequence():\n+    # It is forgotten to mix dicts and tuples when initializing a struct array\n \n Review comment:\n   Typo: s/forgotten/forbidden/\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-07T19:22:31.615+0000",
                    "updated": "2018-02-07T19:22:31.615+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13135463/comment/16356016",
                    "id": "16356016",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1572: ARROW-2073: [Python] Create struct array from sequence of tuples\nURL: https://github.com/apache/arrow/pull/1572#issuecomment-363898967\n \n \n   Ok, I fixed the typo.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-07T20:25:17.397+0000",
                    "updated": "2018-02-07T20:25:17.397+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13135463/comment/16356878",
                    "id": "16356878",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy closed pull request #1572: ARROW-2073: [Python] Create struct array from sequence of tuples\nURL: https://github.com/apache/arrow/pull/1572\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/python/builtin_convert.cc b/cpp/src/arrow/python/builtin_convert.cc\nindex 1e431c29f..f0e5449b6 100644\n--- a/cpp/src/arrow/python/builtin_convert.cc\n+++ b/cpp/src/arrow/python/builtin_convert.cc\n@@ -771,18 +771,21 @@ class StructConverter : public TypedConverterVisitor<StructBuilder, StructConver\n   // Append a non-missing item\n   Status AppendItem(PyObject* obj) {\n     RETURN_NOT_OK(typed_builder_->Append());\n-    if (!PyDict_Check(obj)) {\n-      return Status::TypeError(\"dict value expected for struct type\");\n+    // Note heterogenous sequences are not allowed\n+    if (ARROW_PREDICT_FALSE(source_kind_ == UNKNOWN)) {\n+      if (PyDict_Check(obj)) {\n+        source_kind_ = DICTS;\n+      } else if (PyTuple_Check(obj)) {\n+        source_kind_ = TUPLES;\n+      }\n     }\n-    // NOTE we're ignoring any extraneous dict items\n-    for (int i = 0; i < num_fields_; i++) {\n-      PyObject* nameobj = PyList_GET_ITEM(field_name_list_.obj(), i);\n-      PyObject* valueobj = PyDict_GetItem(obj, nameobj);  // borrowed\n-      RETURN_IF_PYERROR();\n-      RETURN_NOT_OK(value_converters_[i]->AppendSingle(valueobj ? valueobj : Py_None));\n+    if (PyDict_Check(obj) && source_kind_ == DICTS) {\n+      return AppendDictItem(obj);\n+    } else if (PyTuple_Check(obj) && source_kind_ == TUPLES) {\n+      return AppendTupleItem(obj);\n+    } else {\n+      return Status::TypeError(\"Expected sequence of dicts or tuples for struct type\");\n     }\n-\n-    return Status::OK();\n   }\n \n   // Append a missing item\n@@ -797,9 +800,33 @@ class StructConverter : public TypedConverterVisitor<StructBuilder, StructConver\n   }\n \n  protected:\n+  Status AppendDictItem(PyObject* obj) {\n+    // NOTE we're ignoring any extraneous dict items\n+    for (int i = 0; i < num_fields_; i++) {\n+      PyObject* nameobj = PyList_GET_ITEM(field_name_list_.obj(), i);\n+      PyObject* valueobj = PyDict_GetItem(obj, nameobj);  // borrowed\n+      RETURN_IF_PYERROR();\n+      RETURN_NOT_OK(value_converters_[i]->AppendSingle(valueobj ? valueobj : Py_None));\n+    }\n+    return Status::OK();\n+  }\n+\n+  Status AppendTupleItem(PyObject* obj) {\n+    if (PyTuple_GET_SIZE(obj) != num_fields_) {\n+      return Status::Invalid(\"Tuple size must be equal to number of struct fields\");\n+    }\n+    for (int i = 0; i < num_fields_; i++) {\n+      PyObject* valueobj = PyTuple_GET_ITEM(obj, i);\n+      RETURN_NOT_OK(value_converters_[i]->AppendSingle(valueobj));\n+    }\n+    return Status::OK();\n+  }\n+\n   std::vector<std::unique_ptr<SeqConverter>> value_converters_;\n   OwnedRef field_name_list_;\n   int num_fields_;\n+  // Whether we're converting from a sequence of dicts or tuples\n+  enum { UNKNOWN, DICTS, TUPLES } source_kind_ = UNKNOWN;\n };\n \n class DecimalConverter\ndiff --git a/python/benchmarks/convert_builtins.py b/python/benchmarks/convert_builtins.py\nindex 92b2b850f..a4dc9f262 100644\n--- a/python/benchmarks/convert_builtins.py\n+++ b/python/benchmarks/convert_builtins.py\n@@ -144,11 +144,21 @@ def generate_int_list_list(self, n, min_size, max_size,\n             partial(self.generate_int_list, none_prob=none_prob),\n             n, min_size, max_size, none_prob)\n \n+    def generate_tuple_list(self, n, none_prob=DEFAULT_NONE_PROB):\n+        \"\"\"\n+        Generate a list of tuples with random values.\n+        Each tuple has the form `(int value, float value, bool value)`\n+        \"\"\"\n+        dicts = self.generate_dict_list(n, none_prob=none_prob)\n+        tuples = [(d.get('u'), d.get('v'), d.get('w'))\n+                  if d is not None else None\n+                  for d in dicts]\n+        assert len(tuples) == n\n+        return tuples\n \n     def generate_dict_list(self, n, none_prob=DEFAULT_NONE_PROB):\n         \"\"\"\n-        Generate a list of dicts with a random size between *min_size* and\n-        *max_size*.\n+        Generate a list of dicts with random values.\n         Each dict has the form `{'u': int value, 'v': float value, 'w': bool value}`\n         \"\"\"\n         ints = self.generate_int_list(n, none_prob=none_prob)\n@@ -179,12 +189,14 @@ def get_type_and_builtins(self, n, type_name):\n         \"\"\"\n         size = None\n \n-        if type_name in ('bool', 'ascii', 'unicode', 'int64 list', 'struct'):\n+        if type_name in ('bool', 'ascii', 'unicode', 'int64 list'):\n             kind = type_name\n         elif type_name.startswith(('int', 'uint')):\n             kind = 'int'\n         elif type_name.startswith('float'):\n             kind = 'float'\n+        elif type_name.startswith('struct'):\n+            kind = 'struct'\n         elif type_name == 'binary':\n             kind = 'varying binary'\n         elif type_name.startswith('binary'):\n@@ -226,6 +238,7 @@ def get_type_and_builtins(self, n, type_name):\n             'int64 list': partial(self.generate_int_list_list,\n                                   min_size=0, max_size=20),\n             'struct': self.generate_dict_list,\n+            'struct from tuples': self.generate_tuple_list,\n         }\n         data = factories[kind](n)\n         return ty, data\n@@ -239,7 +252,7 @@ class ConvertPyListToArray(object):\n     types = ('int32', 'uint32', 'int64', 'uint64',\n              'float32', 'float64', 'bool',\n              'binary', 'binary10', 'ascii', 'unicode',\n-             'int64 list', 'struct')\n+             'int64 list', 'struct', 'struct from tuples')\n \n     param_names = ['type']\n     params = [types]\ndiff --git a/python/pyarrow/tests/test_convert_builtin.py b/python/pyarrow/tests/test_convert_builtin.py\nindex ce54f23eb..5cd4a52a2 100644\n--- a/python/pyarrow/tests/test_convert_builtin.py\n+++ b/python/pyarrow/tests/test_convert_builtin.py\n@@ -531,6 +531,45 @@ def test_struct_from_dicts():\n     assert arr.to_pylist() == expected\n \n \n+def test_struct_from_tuples():\n+    ty = pa.struct([pa.field('a', pa.int32()),\n+                    pa.field('b', pa.string()),\n+                    pa.field('c', pa.bool_())])\n+\n+    data = [(5, 'foo', True),\n+            (6, 'bar', False)]\n+    expected = [{'a': 5, 'b': 'foo', 'c': True},\n+                {'a': 6, 'b': 'bar', 'c': False}]\n+    arr = pa.array(data, type=ty)\n+    assert arr.to_pylist() == expected\n+\n+    # With omitted values\n+    data = [(5, 'foo', None),\n+            None,\n+            (6, None, False)]\n+    expected = [{'a': 5, 'b': 'foo', 'c': None},\n+                None,\n+                {'a': 6, 'b': None, 'c': False}]\n+    arr = pa.array(data, type=ty)\n+    assert arr.to_pylist() == expected\n+\n+    # Invalid tuple size\n+    for tup in [(5, 'foo'), (), ('5', 'foo', True, None)]:\n+        with pytest.raises(ValueError, match=\"(?i)tuple size\"):\n+            pa.array([tup], type=ty)\n+\n+\n+def test_struct_from_mixed_sequence():\n+    # It is forbidden to mix dicts and tuples when initializing a struct array\n+    ty = pa.struct([pa.field('a', pa.int32()),\n+                    pa.field('b', pa.string()),\n+                    pa.field('c', pa.bool_())])\n+    data = [(5, 'foo', True),\n+            {'a': 6, 'b': 'bar', 'c': False}]\n+    with pytest.raises(TypeError):\n+        pa.array(data, type=ty)\n+\n+\n def test_structarray_from_arrays_coerce():\n     # ARROW-1706\n     ints = [None, 2, 3]\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T12:22:34.499+0000",
                    "updated": "2018-02-08T12:22:34.499+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13135463/comment/16356880",
                    "id": "16356880",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 1572\n[https://github.com/apache/arrow/pull/1572]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-02-08T12:23:39.053+0000",
                    "updated": "2018-02-08T12:23:39.053+0000"
                }
            ],
            "maxResults": 6,
            "total": 6,
            "startAt": 0
        },
        "customfield_12311820": "0|i3pnsn:",
        "customfield_12314139": null
    }
}