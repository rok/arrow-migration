{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13316110",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316110",
    "key": "ARROW-9402",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348647",
                "id": "12348647",
                "name": "1.0.1",
                "archived": false,
                "released": true,
                "releaseDate": "2020-08-21"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9402/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 12,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316110/worklog/459787",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #7784:\nURL: https://github.com/apache/arrow/pull/7784\n\n\n   Vendor relevant code from the portable-snippets library (~ public domain):\r\n   https://github.com/nemequ/portable-snippets/tree/master/safe-math\r\n   \r\n   Also fix some bugs in checked arithmetic (null values had their value slots checked as well),\r\n   add compute scaffolding for stateful binary scalar functions.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-16T11:49:20.480+0000",
                    "updated": "2020-07-16T11:49:20.480+0000",
                    "started": "2020-07-16T11:49:20.479+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "459787",
                    "issueId": "13316110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316110/worklog/459792",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7784:\nURL: https://github.com/apache/arrow/pull/7784#issuecomment-659371394\n\n\n   https://issues.apache.org/jira/browse/ARROW-9402\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-16T12:14:28.561+0000",
                    "updated": "2020-07-16T12:14:28.561+0000",
                    "started": "2020-07-16T12:14:28.560+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "459792",
                    "issueId": "13316110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316110/worklog/459862",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #7784:\nURL: https://github.com/apache/arrow/pull/7784#issuecomment-659504776\n\n\n   I think I finally squashed the horrid Windows preprocessor macro issues (Windows headers define OPTIONAL, but you can't undef it blindly because other subsequent includes may require it...).\r\n   AppVeyor build: https://ci.appveyor.com/project/pitrou/arrow/builds/34135787\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-16T15:55:19.784+0000",
                    "updated": "2020-07-16T15:55:19.784+0000",
                    "started": "2020-07-16T15:55:19.784+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "459862",
                    "issueId": "13316110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316110/worklog/459863",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #7784:\nURL: https://github.com/apache/arrow/pull/7784#issuecomment-659505609\n\n\n   @wesm You'll probably want to take a look at the codegen changes when you have some time.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-16T15:56:43.143+0000",
                    "updated": "2020-07-16T15:56:43.143+0000",
                    "started": "2020-07-16T15:56:43.143+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "459863",
                    "issueId": "13316110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316110/worklog/466894",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #7784:\nURL: https://github.com/apache/arrow/pull/7784#issuecomment-669322223\n\n\n   Rebased. @wesm could you perhaps review this?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-05T17:21:32.132+0000",
                    "updated": "2020-08-05T17:21:32.132+0000",
                    "started": "2020-08-05T17:21:32.132+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "466894",
                    "issueId": "13316110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316110/worklog/466895",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #7784:\nURL: https://github.com/apache/arrow/pull/7784#issuecomment-669322336\n\n\n   Or perhaps @bkietz .\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-05T17:21:45.217+0000",
                    "updated": "2020-08-05T17:21:45.217+0000",
                    "started": "2020-08-05T17:21:45.217+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "466895",
                    "issueId": "13316110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316110/worklog/467347",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7784:\nURL: https://github.com/apache/arrow/pull/7784#discussion_r465889920\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/test_util.cc\n##########\n@@ -33,68 +33,109 @@ namespace compute {\n \n namespace {\n \n-void CheckScalarUnaryNonRecursive(const std::string& func_name,\n-                                  const std::shared_ptr<Array>& input,\n-                                  const std::shared_ptr<Array>& expected,\n-                                  const FunctionOptions* options) {\n-  ASSERT_OK_AND_ASSIGN(Datum out, CallFunction(func_name, {input}, options));\n+template <typename T>\n+std::vector<Datum> GetDatums(const std::vector<T>& inputs) {\n+  std::vector<Datum> datums;\n+  for (const auto& input : inputs) {\n+    datums.emplace_back(input);\n+  }\n+  return datums;\n+}\n+\n+void CheckScalarNonRecursive(const std::string& func_name,\n+                             const std::vector<std::shared_ptr<Array>>& inputs,\n+                             const std::shared_ptr<Array>& expected,\n+                             const FunctionOptions* options) {\n+  ASSERT_OK_AND_ASSIGN(Datum out, CallFunction(func_name, GetDatums(inputs), options));\n   std::shared_ptr<Array> actual = std::move(out).make_array();\n   ASSERT_OK(actual->ValidateFull());\n   AssertArraysEqual(*expected, *actual, /*verbose=*/true);\n }\n \n-}  // namespace\n+template <typename... SliceArgs>\n+std::vector<std::shared_ptr<Array>> SliceAll(\n+    const std::vector<std::shared_ptr<Array>>& inputs, SliceArgs... slice_args) {\n+  std::vector<std::shared_ptr<Array>> sliced;\n+  for (const auto& input : inputs) {\n+    sliced.push_back(input->Slice(slice_args...));\n+  }\n+  return sliced;\n+}\n \n-void CheckScalarUnary(std::string func_name, std::shared_ptr<Array> input,\n-                      std::shared_ptr<Array> expected, const FunctionOptions* options) {\n-  CheckScalarUnaryNonRecursive(func_name, input, expected, options);\n+std::vector<std::shared_ptr<Scalar>> GetScalars(\n+    const std::vector<std::shared_ptr<Array>>& inputs, int64_t index) {\n+  std::vector<std::shared_ptr<Scalar>> scalars;\n\nReview comment:\n       ```suggestion\r\n   ScalarVector GetScalars(\r\n       const ArrayVector& inputs, int64_t index) {\r\n     ScalarVector scalars;\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic_test.cc\n##########\n@@ -53,35 +69,84 @@ class TestBinaryArithmetic : public TestBase {\n \n   void SetUp() { options_.check_overflow = false; }\n \n+  std::shared_ptr<Scalar> MakeNullScalar() {\n+    return arrow::MakeNullScalar(type_singleton());\n+  }\n+\n+  std::shared_ptr<Scalar> MakeScalar(CType value) {\n+    return *arrow::MakeScalar(type_singleton(), value);\n+  }\n+\n   // (Scalar, Scalar)\n   void AssertBinop(BinaryFunction func, CType lhs, CType rhs, CType expected) {\n-    ASSERT_OK_AND_ASSIGN(auto left, MakeScalar(type_singleton(), lhs));\n-    ASSERT_OK_AND_ASSIGN(auto right, MakeScalar(type_singleton(), rhs));\n-    ASSERT_OK_AND_ASSIGN(auto exp, MakeScalar(type_singleton(), expected));\n+    auto left = MakeScalar(lhs);\n+    auto right = MakeScalar(rhs);\n+    auto exp = MakeScalar(expected);\n \n     ASSERT_OK_AND_ASSIGN(auto actual, func(left, right, options_, nullptr));\n-    AssertScalarsEqual(*exp, *actual.scalar(), true);\n+    AssertScalarsEqual(*exp, *actual.scalar(), /*verbose=*/true);\n   }\n \n   // (Scalar, Array)\n   void AssertBinop(BinaryFunction func, CType lhs, const std::string& rhs,\n                    const std::string& expected) {\n-    ASSERT_OK_AND_ASSIGN(auto left, MakeScalar(type_singleton(), lhs));\n+    auto left = MakeScalar(lhs);\n+    AssertBinop(func, left, rhs, expected);\n+  }\n+\n+  // (Scalar, Array)\n+  void AssertBinop(BinaryFunction func, const std::shared_ptr<Scalar>& left,\n+                   const std::string& rhs, const std::string& expected) {\n     auto right = ArrayFromJSON(type_singleton(), rhs);\n     auto exp = ArrayFromJSON(type_singleton(), expected);\n \n     ASSERT_OK_AND_ASSIGN(auto actual, func(left, right, options_, nullptr));\n     ValidateAndAssertApproxEqual(actual.make_array(), expected);\n   }\n \n+  // (Array, Scalar)\n+  void AssertBinop(BinaryFunction func, const std::string& lhs, CType rhs,\n+                   const std::string& expected) {\n+    auto right = MakeScalar(rhs);\n+    AssertBinop(func, lhs, right, expected);\n+  }\n+\n+  // (Array, Scalar)\n+  void AssertBinop(BinaryFunction func, const std::string& lhs,\n+                   const std::shared_ptr<Scalar>& right, const std::string& expected) {\n+    auto left = ArrayFromJSON(type_singleton(), lhs);\n+    auto exp = ArrayFromJSON(type_singleton(), expected);\n+\n+    ASSERT_OK_AND_ASSIGN(auto actual, func(left, right, options_, nullptr));\n+    ValidateAndAssertApproxEqual(actual.make_array(), expected);\n+  }\n+\n   // (Array, Array)\n   void AssertBinop(BinaryFunction func, const std::string& lhs, const std::string& rhs,\n                    const std::string& expected) {\n     auto left = ArrayFromJSON(type_singleton(), lhs);\n     auto right = ArrayFromJSON(type_singleton(), rhs);\n \n+    AssertBinop(func, ArrayFromJSON(type_singleton(), lhs),\n+                ArrayFromJSON(type_singleton(), rhs), expected);\n\nReview comment:\n       ```suggestion\r\n       AssertBinop(func, left, right, expected);\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/kernels/test_util.h\n##########\n@@ -103,6 +103,16 @@ void CheckScalarUnary(std::string func_name, std::shared_ptr<Scalar> input,\n                       std::shared_ptr<Scalar> expected,\n                       const FunctionOptions* options = nullptr);\n \n+void CheckScalarBinary(std::string func_name, std::shared_ptr<Scalar> left_input,\n\nReview comment:\n       :+1:\n\n##########\nFile path: cpp/src/parquet/arrow/reader_internal.cc\n##########\n@@ -55,6 +55,8 @@\n #include \"parquet/schema.h\"\n #include \"parquet/statistics.h\"\n #include \"parquet/types.h\"\n+// Required after \"arrow/util/int_util_internal.h\" (for OPTIONAL)\n\nReview comment:\n       ```suggestion\r\n   \r\n   // Required after \"arrow/util/int_util_internal.h\" (for OPTIONAL)\r\n   ```\r\n   I'm not sure if clang-format will always recognize this comment as breaking this #include out of the above block. I suppose it's alphabetically always going to be lower in the sort, though\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic.cc\n##########\n@@ -72,35 +77,19 @@ struct Add {\n };\n \n struct AddChecked {\n-#if __has_builtin(__builtin_add_overflow)\n-  template <typename T>\n-  static enable_if_integer<T> Call(KernelContext* ctx, T left, T right) {\n+  template <typename T, typename Arg0, typename Arg1>\n+  enable_if_integer<T> Call(KernelContext* ctx, Arg0 left, Arg1 right) {\n+    static_assert(std::is_same<T, Arg0>::value && std::is_same<T, Arg1>::value, \"\");\n     T result;\n-    if (ARROW_PREDICT_FALSE(__builtin_add_overflow(left, right, &result))) {\n+    if (ARROW_PREDICT_FALSE(AddWithOverflow(left, right, &result))) {\n       ctx->SetStatus(Status::Invalid(\"overflow\"));\n     }\n     return result;\n   }\n-#else\n-  template <typename T>\n-  static enable_if_unsigned_integer<T> Call(KernelContext* ctx, T left, T right) {\n-    if (ARROW_PREDICT_FALSE(arrow::internal::HasPositiveAdditionOverflow(left, right))) {\n-      ctx->SetStatus(Status::Invalid(\"overflow\"));\n-    }\n-    return left + right;\n-  }\n-\n-  template <typename T>\n-  static enable_if_signed_integer<T> Call(KernelContext* ctx, T left, T right) {\n-    if (ARROW_PREDICT_FALSE(arrow::internal::HasSignedAdditionOverflow(left, right))) {\n-      ctx->SetStatus(Status::Invalid(\"overflow\"));\n-    }\n-    return left + right;\n-  }\n-#endif\n \n-  template <typename T>\n-  static constexpr enable_if_floating_point<T> Call(KernelContext*, T left, T right) {\n+  template <typename T, typename Arg0, typename Arg1>\n+  enable_if_floating_point<T> Call(KernelContext*, Arg0 left, Arg1 right) {\n+    static_assert(std::is_same<T, Arg0>::value && std::is_same<T, Arg1>::value, \"\");\n\nReview comment:\n       What happens if we remove those template arguments?\r\n   ```suggestion\r\n     template <typename T>\r\n     enable_if_floating_point<T> Call(KernelContext*, T left, T right) {\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/kernels/test_util.cc\n##########\n@@ -33,68 +33,109 @@ namespace compute {\n \n namespace {\n \n-void CheckScalarUnaryNonRecursive(const std::string& func_name,\n-                                  const std::shared_ptr<Array>& input,\n-                                  const std::shared_ptr<Array>& expected,\n-                                  const FunctionOptions* options) {\n-  ASSERT_OK_AND_ASSIGN(Datum out, CallFunction(func_name, {input}, options));\n+template <typename T>\n+std::vector<Datum> GetDatums(const std::vector<T>& inputs) {\n+  std::vector<Datum> datums;\n+  for (const auto& input : inputs) {\n+    datums.emplace_back(input);\n+  }\n+  return datums;\n+}\n+\n+void CheckScalarNonRecursive(const std::string& func_name,\n+                             const std::vector<std::shared_ptr<Array>>& inputs,\n+                             const std::shared_ptr<Array>& expected,\n+                             const FunctionOptions* options) {\n+  ASSERT_OK_AND_ASSIGN(Datum out, CallFunction(func_name, GetDatums(inputs), options));\n   std::shared_ptr<Array> actual = std::move(out).make_array();\n   ASSERT_OK(actual->ValidateFull());\n   AssertArraysEqual(*expected, *actual, /*verbose=*/true);\n }\n \n-}  // namespace\n+template <typename... SliceArgs>\n+std::vector<std::shared_ptr<Array>> SliceAll(\n+    const std::vector<std::shared_ptr<Array>>& inputs, SliceArgs... slice_args) {\n+  std::vector<std::shared_ptr<Array>> sliced;\n\nReview comment:\n       Nit: use readability typedefs\r\n   ```suggestion\r\n   ArrayVector SliceAll(\r\n       const ArrayVector& inputs, SliceArgs... slice_args) {\r\n     ArrayVector sliced;\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-06T15:04:54.868+0000",
                    "updated": "2020-08-06T15:04:54.868+0000",
                    "started": "2020-08-06T15:04:54.868+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "467347",
                    "issueId": "13316110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316110/worklog/468541",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7784:\nURL: https://github.com/apache/arrow/pull/7784#discussion_r467867983\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic.cc\n##########\n@@ -72,35 +77,19 @@ struct Add {\n };\n \n struct AddChecked {\n-#if __has_builtin(__builtin_add_overflow)\n-  template <typename T>\n-  static enable_if_integer<T> Call(KernelContext* ctx, T left, T right) {\n+  template <typename T, typename Arg0, typename Arg1>\n+  enable_if_integer<T> Call(KernelContext* ctx, Arg0 left, Arg1 right) {\n+    static_assert(std::is_same<T, Arg0>::value && std::is_same<T, Arg1>::value, \"\");\n     T result;\n-    if (ARROW_PREDICT_FALSE(__builtin_add_overflow(left, right, &result))) {\n+    if (ARROW_PREDICT_FALSE(AddWithOverflow(left, right, &result))) {\n       ctx->SetStatus(Status::Invalid(\"overflow\"));\n     }\n     return result;\n   }\n-#else\n-  template <typename T>\n-  static enable_if_unsigned_integer<T> Call(KernelContext* ctx, T left, T right) {\n-    if (ARROW_PREDICT_FALSE(arrow::internal::HasPositiveAdditionOverflow(left, right))) {\n-      ctx->SetStatus(Status::Invalid(\"overflow\"));\n-    }\n-    return left + right;\n-  }\n-\n-  template <typename T>\n-  static enable_if_signed_integer<T> Call(KernelContext* ctx, T left, T right) {\n-    if (ARROW_PREDICT_FALSE(arrow::internal::HasSignedAdditionOverflow(left, right))) {\n-      ctx->SetStatus(Status::Invalid(\"overflow\"));\n-    }\n-    return left + right;\n-  }\n-#endif\n \n-  template <typename T>\n-  static constexpr enable_if_floating_point<T> Call(KernelContext*, T left, T right) {\n+  template <typename T, typename Arg0, typename Arg1>\n+  enable_if_floating_point<T> Call(KernelContext*, Arg0 left, Arg1 right) {\n+    static_assert(std::is_same<T, Arg0>::value && std::is_same<T, Arg1>::value, \"\");\n\nReview comment:\n       It doesn't compile, because `Call` is invoked with explicit template arguments by the kernel execution machinery.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-10T12:27:06.140+0000",
                    "updated": "2020-08-10T12:27:06.140+0000",
                    "started": "2020-08-10T12:27:06.140+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "468541",
                    "issueId": "13316110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316110/worklog/468543",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7784:\nURL: https://github.com/apache/arrow/pull/7784#discussion_r467869720\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/test_util.cc\n##########\n@@ -33,68 +33,109 @@ namespace compute {\n \n namespace {\n \n-void CheckScalarUnaryNonRecursive(const std::string& func_name,\n-                                  const std::shared_ptr<Array>& input,\n-                                  const std::shared_ptr<Array>& expected,\n-                                  const FunctionOptions* options) {\n-  ASSERT_OK_AND_ASSIGN(Datum out, CallFunction(func_name, {input}, options));\n+template <typename T>\n+std::vector<Datum> GetDatums(const std::vector<T>& inputs) {\n+  std::vector<Datum> datums;\n+  for (const auto& input : inputs) {\n+    datums.emplace_back(input);\n+  }\n+  return datums;\n+}\n+\n+void CheckScalarNonRecursive(const std::string& func_name,\n+                             const std::vector<std::shared_ptr<Array>>& inputs,\n+                             const std::shared_ptr<Array>& expected,\n+                             const FunctionOptions* options) {\n+  ASSERT_OK_AND_ASSIGN(Datum out, CallFunction(func_name, GetDatums(inputs), options));\n   std::shared_ptr<Array> actual = std::move(out).make_array();\n   ASSERT_OK(actual->ValidateFull());\n   AssertArraysEqual(*expected, *actual, /*verbose=*/true);\n }\n \n-}  // namespace\n+template <typename... SliceArgs>\n+std::vector<std::shared_ptr<Array>> SliceAll(\n+    const std::vector<std::shared_ptr<Array>>& inputs, SliceArgs... slice_args) {\n+  std::vector<std::shared_ptr<Array>> sliced;\n\nReview comment:\n       Good idea, thank you.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-10T12:30:37.207+0000",
                    "updated": "2020-08-10T12:30:37.207+0000",
                    "started": "2020-08-10T12:30:37.207+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "468543",
                    "issueId": "13316110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316110/worklog/468544",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7784:\nURL: https://github.com/apache/arrow/pull/7784#discussion_r467870651\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic_test.cc\n##########\n@@ -53,35 +69,84 @@ class TestBinaryArithmetic : public TestBase {\n \n   void SetUp() { options_.check_overflow = false; }\n \n+  std::shared_ptr<Scalar> MakeNullScalar() {\n+    return arrow::MakeNullScalar(type_singleton());\n+  }\n+\n+  std::shared_ptr<Scalar> MakeScalar(CType value) {\n+    return *arrow::MakeScalar(type_singleton(), value);\n+  }\n+\n   // (Scalar, Scalar)\n   void AssertBinop(BinaryFunction func, CType lhs, CType rhs, CType expected) {\n-    ASSERT_OK_AND_ASSIGN(auto left, MakeScalar(type_singleton(), lhs));\n-    ASSERT_OK_AND_ASSIGN(auto right, MakeScalar(type_singleton(), rhs));\n-    ASSERT_OK_AND_ASSIGN(auto exp, MakeScalar(type_singleton(), expected));\n+    auto left = MakeScalar(lhs);\n+    auto right = MakeScalar(rhs);\n+    auto exp = MakeScalar(expected);\n \n     ASSERT_OK_AND_ASSIGN(auto actual, func(left, right, options_, nullptr));\n-    AssertScalarsEqual(*exp, *actual.scalar(), true);\n+    AssertScalarsEqual(*exp, *actual.scalar(), /*verbose=*/true);\n   }\n \n   // (Scalar, Array)\n   void AssertBinop(BinaryFunction func, CType lhs, const std::string& rhs,\n                    const std::string& expected) {\n-    ASSERT_OK_AND_ASSIGN(auto left, MakeScalar(type_singleton(), lhs));\n+    auto left = MakeScalar(lhs);\n+    AssertBinop(func, left, rhs, expected);\n+  }\n+\n+  // (Scalar, Array)\n+  void AssertBinop(BinaryFunction func, const std::shared_ptr<Scalar>& left,\n+                   const std::string& rhs, const std::string& expected) {\n     auto right = ArrayFromJSON(type_singleton(), rhs);\n     auto exp = ArrayFromJSON(type_singleton(), expected);\n \n     ASSERT_OK_AND_ASSIGN(auto actual, func(left, right, options_, nullptr));\n     ValidateAndAssertApproxEqual(actual.make_array(), expected);\n   }\n \n+  // (Array, Scalar)\n+  void AssertBinop(BinaryFunction func, const std::string& lhs, CType rhs,\n+                   const std::string& expected) {\n+    auto right = MakeScalar(rhs);\n+    AssertBinop(func, lhs, right, expected);\n+  }\n+\n+  // (Array, Scalar)\n+  void AssertBinop(BinaryFunction func, const std::string& lhs,\n+                   const std::shared_ptr<Scalar>& right, const std::string& expected) {\n+    auto left = ArrayFromJSON(type_singleton(), lhs);\n+    auto exp = ArrayFromJSON(type_singleton(), expected);\n+\n+    ASSERT_OK_AND_ASSIGN(auto actual, func(left, right, options_, nullptr));\n+    ValidateAndAssertApproxEqual(actual.make_array(), expected);\n+  }\n+\n   // (Array, Array)\n   void AssertBinop(BinaryFunction func, const std::string& lhs, const std::string& rhs,\n                    const std::string& expected) {\n     auto left = ArrayFromJSON(type_singleton(), lhs);\n     auto right = ArrayFromJSON(type_singleton(), rhs);\n \n+    AssertBinop(func, ArrayFromJSON(type_singleton(), lhs),\n+                ArrayFromJSON(type_singleton(), rhs), expected);\n\nReview comment:\n       Indeed :-)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-10T12:32:31.546+0000",
                    "updated": "2020-08-10T12:32:31.546+0000",
                    "started": "2020-08-10T12:32:31.546+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "468544",
                    "issueId": "13316110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316110/worklog/468580",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #7784:\nURL: https://github.com/apache/arrow/pull/7784#issuecomment-671356665\n\n\n   I believe I addressed your comments @bkietz , so I'm going to merge now.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-10T13:33:15.777+0000",
                    "updated": "2020-08-10T13:33:15.777+0000",
                    "started": "2020-08-10T13:33:15.777+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "468580",
                    "issueId": "13316110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316110/worklog/468581",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #7784:\nURL: https://github.com/apache/arrow/pull/7784\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-10T13:33:49.037+0000",
                    "updated": "2020-08-10T13:33:49.037+0000",
                    "started": "2020-08-10T13:33:49.037+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "468581",
                    "issueId": "13316110"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 7200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@303cc8c8[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3f4db202[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@db317ff[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5fbc69e9[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@13938363[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@37def653[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@224713b8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1e88d538[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@110fd511[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@51a3c50d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4be3c652[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@131aeb03[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7200,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Aug 10 14:16:50 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-08-10T13:33:37.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9402/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-07-10T09:30:10.000+0000",
        "updated": "2020-08-17T13:10:28.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add portable wrappers for __builtin_add_overflow and friends",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316110/comment/17155298",
                    "id": "17155298",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Those are already invoked in scalar arithmetic kernels if present.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-07-10T09:30:35.440+0000",
                    "updated": "2020-07-10T09:30:35.440+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316110/comment/17174331",
                    "id": "17174331",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 7784\n[https://github.com/apache/arrow/pull/7784]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-08-10T13:33:37.630+0000",
                    "updated": "2020-08-10T13:33:37.630+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316110/comment/17174332",
                    "id": "17174332",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "[~kszucs] I added this to 1.0.1, as the PR contains useful bug fixes.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-08-10T13:34:06.435+0000",
                    "updated": "2020-08-10T13:34:06.435+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316110/comment/17174351",
                    "id": "17174351",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Sounds reasonable to me.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2020-08-10T14:16:50.944+0000",
                    "updated": "2020-08-10T14:16:50.944+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0gn7c:",
        "customfield_12314139": null
    }
}