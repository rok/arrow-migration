{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13178282",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178282",
    "key": "ARROW-3038",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sbinet",
            "name": "sbinet",
            "key": "sbinet",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sbinet&avatarId=36072",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sbinet&avatarId=36072",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sbinet&avatarId=36072",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sbinet&avatarId=36072"
            },
            "displayName": "Sebastien Binet",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333772",
                "id": "12333772",
                "name": "Go"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sbinet",
            "name": "sbinet",
            "key": "sbinet",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sbinet&avatarId=36072",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sbinet&avatarId=36072",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sbinet&avatarId=36072",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sbinet&avatarId=36072"
            },
            "displayName": "Sebastien Binet",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sbinet",
            "name": "sbinet",
            "key": "sbinet",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sbinet&avatarId=36072",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sbinet&avatarId=36072",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sbinet&avatarId=36072",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sbinet&avatarId=36072"
            },
            "displayName": "Sebastien Binet",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3038/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 6,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178282/worklog/160606",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet opened a new pull request #2871: ARROW-3038: [Go] implement String array\nURL: https://github.com/apache/arrow/pull/2871\n \n \n   needs #2870 \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-30T13:01:32.115+0000",
                    "updated": "2018-10-30T13:01:32.115+0000",
                    "started": "2018-10-30T13:01:32.114+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160606",
                    "issueId": "13178282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178282/worklog/160609",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on issue #2871: ARROW-3038: [Go] implement String array\nURL: https://github.com/apache/arrow/pull/2871#issuecomment-434292261\n \n \n   PTAL @stuartcarnie \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-30T13:03:10.239+0000",
                    "updated": "2018-10-30T13:03:10.239+0000",
                    "started": "2018-10-30T13:03:10.238+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160609",
                    "issueId": "13178282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178282/worklog/160619",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2871: ARROW-3038: [Go] implement String array\nURL: https://github.com/apache/arrow/pull/2871#issuecomment-434300174\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2871?src=pr&el=h1) Report\n   > Merging [#2871](https://codecov.io/gh/apache/arrow/pull/2871?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/b5fafd81f48578c92e8118700457e82224aab13d?src=pr&el=desc) will **decrease** coverage by `22.25%`.\n   > The diff coverage is `66.86%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2871/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2871?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #2871       +/-   ##\n   ===========================================\n   - Coverage   87.55%   65.29%   -22.26%     \n   ===========================================\n     Files         411       55      -356     \n     Lines       63818     3135    -60683     \n   ===========================================\n   - Hits        55874     2047    -53827     \n   + Misses       7870     1008     -6862     \n   - Partials       74       80        +6\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2871?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/array/struct.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvc3RydWN0Lmdv) | `72.64% <0%> (-10.16%)` | :arrow_down: |\n   | [go/arrow/array/boolean.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYm9vbGVhbi5nbw==) | `42.3% <0%> (-42.31%)` | :arrow_down: |\n   | [go/arrow/array/builder.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVpbGRlci5nbw==) | `62.6% <0%> (+0.61%)` | :arrow_up: |\n   | [go/arrow/array/numeric.gen.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVtZXJpYy5nZW4uZ28=) | `45.77% <0%> (-39.68%)` | :arrow_down: |\n   | [go/arrow/array/binarybuilder.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYmluYXJ5YnVpbGRlci5nbw==) | `79.51% <0%> (+5.44%)` | :arrow_up: |\n   | [go/arrow/array/data.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvZGF0YS5nbw==) | `84.31% <0%> (-3.45%)` | :arrow_down: |\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/datatype\\_nested.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbmVzdGVkLmdv) | `94.73% <100%> (+0.29%)` | :arrow_up: |\n   | [go/arrow/array/array.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYXJyYXkuZ28=) | `96.42% <100%> (+0.06%)` | :arrow_up: |\n   | [go/arrow/array/record.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvcmVjb3JkLmdv) | `100% <100%> (\u00f8)` | |\n   | ... and [371 more](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2871?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2871?src=pr&el=footer). Last update [b5fafd8...54ec238](https://codecov.io/gh/apache/arrow/pull/2871?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-30T13:27:55.899+0000",
                    "updated": "2018-10-30T13:27:55.899+0000",
                    "started": "2018-10-30T13:27:55.898+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160619",
                    "issueId": "13178282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178282/worklog/160624",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2871: ARROW-3038: [Go] implement String array\nURL: https://github.com/apache/arrow/pull/2871#issuecomment-434300174\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2871?src=pr&el=h1) Report\n   > Merging [#2871](https://codecov.io/gh/apache/arrow/pull/2871?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/b5fafd81f48578c92e8118700457e82224aab13d?src=pr&el=desc) will **decrease** coverage by `0.2%`.\n   > The diff coverage is `66.86%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2871/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2871?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2871      +/-   ##\n   ==========================================\n   - Coverage   87.55%   87.35%   -0.21%     \n   ==========================================\n     Files         411      415       +4     \n     Lines       63818    64461     +643     \n   ==========================================\n   + Hits        55874    56308     +434     \n   - Misses       7870     8073     +203     \n   - Partials       74       80       +6\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2871?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/array/struct.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvc3RydWN0Lmdv) | `72.64% <0%> (-10.16%)` | :arrow_down: |\n   | [go/arrow/array/boolean.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYm9vbGVhbi5nbw==) | `42.3% <0%> (-42.31%)` | :arrow_down: |\n   | [go/arrow/array/builder.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVpbGRlci5nbw==) | `62.6% <0%> (+0.61%)` | :arrow_up: |\n   | [go/arrow/array/numeric.gen.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVtZXJpYy5nZW4uZ28=) | `45.77% <0%> (-39.68%)` | :arrow_down: |\n   | [go/arrow/array/binarybuilder.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYmluYXJ5YnVpbGRlci5nbw==) | `79.51% <0%> (+5.44%)` | :arrow_up: |\n   | [go/arrow/array/data.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvZGF0YS5nbw==) | `84.31% <0%> (-3.45%)` | :arrow_down: |\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/datatype\\_nested.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbmVzdGVkLmdv) | `94.73% <100%> (+0.29%)` | :arrow_up: |\n   | [go/arrow/array/array.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYXJyYXkuZ28=) | `96.42% <100%> (+0.06%)` | :arrow_up: |\n   | [go/arrow/array/record.go](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvcmVjb3JkLmdv) | `100% <100%> (\u00f8)` | |\n   | ... and [12 more](https://codecov.io/gh/apache/arrow/pull/2871/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2871?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2871?src=pr&el=footer). Last update [b5fafd8...54ec238](https://codecov.io/gh/apache/arrow/pull/2871?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-30T13:41:34.634+0000",
                    "updated": "2018-10-30T13:41:34.634+0000",
                    "started": "2018-10-30T13:41:34.633+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160624",
                    "issueId": "13178282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178282/worklog/161327",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2871: ARROW-3038: [Go] implement String array\nURL: https://github.com/apache/arrow/pull/2871#discussion_r229876880\n \n \n\n ##########\n File path: go/README.md\n ##########\n @@ -131,7 +131,7 @@ them internally in the [ifql][] execution engine and storage layers of [InfluxDB\n - [x] 32 and 64 bit floats\n - [x] Packed LSB booleans\n - [x] Variable-length binary\n-- [ ] String (valid UTF-8)\n+- [x] String (valid UTF-8)\n - [ ] Half-float (16-bit)\n - [x] Null (no physical storage)\n \n Review comment:\n   Can you move this TODO list to JIRA?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-31T21:38:01.380+0000",
                    "updated": "2018-10-31T21:38:01.380+0000",
                    "started": "2018-10-31T21:38:01.380+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "161327",
                    "issueId": "13178282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178282/worklog/161328",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2871: ARROW-3038: [Go] implement String array\nURL: https://github.com/apache/arrow/pull/2871\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/go/README.md b/go/README.md\nindex 9b801f7c7e..230caee0a4 100644\n--- a/go/README.md\n+++ b/go/README.md\n@@ -131,7 +131,7 @@ them internally in the [ifql][] execution engine and storage layers of [InfluxDB\n - [x] 32 and 64 bit floats\n - [x] Packed LSB booleans\n - [x] Variable-length binary\n-- [ ] String (valid UTF-8)\n+- [x] String (valid UTF-8)\n - [ ] Half-float (16-bit)\n - [x] Null (no physical storage)\n \n@@ -156,17 +156,15 @@ them internally in the [ifql][] execution engine and storage layers of [InfluxDB\n ### Type metadata\n \n - [x] Data types (implemented arrays)\n-- [ ] Field\n-- [ ] Schema\n+- [x] Field\n+- [x] Schema\n   \n \n ### I/O \n \n-Serialization is planned for a future iteration.\n-\n - [ ] Flat buffers for serializing metadata\n-- [ ] Record Batch\n-- [ ] Table\n+- [x] Record Batch\n+- [x] Table\n \n \n \ndiff --git a/go/arrow/array/array.go b/go/arrow/array/array.go\nindex 44c35a480a..d1dd31d2c2 100644\n--- a/go/arrow/array/array.go\n+++ b/go/arrow/array/array.go\n@@ -177,7 +177,7 @@ func init() {\n \t\tarrow.HALF_FLOAT:        unsupportedArrayType,\n \t\tarrow.FLOAT32:           func(data *Data) Interface { return NewFloat32Data(data) },\n \t\tarrow.FLOAT64:           func(data *Data) Interface { return NewFloat64Data(data) },\n-\t\tarrow.STRING:            unsupportedArrayType,\n+\t\tarrow.STRING:            func(data *Data) Interface { return NewStringData(data) },\n \t\tarrow.BINARY:            func(data *Data) Interface { return NewBinaryData(data) },\n \t\tarrow.FIXED_SIZE_BINARY: unsupportedArrayType,\n \t\tarrow.DATE32:            unsupportedArrayType,\ndiff --git a/go/arrow/array/binarybuilder.go b/go/arrow/array/binarybuilder.go\nindex d32d8d1e56..c28f968e5e 100644\n--- a/go/arrow/array/binarybuilder.go\n+++ b/go/arrow/array/binarybuilder.go\n@@ -151,6 +151,12 @@ func (b *BinaryBuilder) Resize(n int) {\n \tb.builder.resize(n, b.init)\n }\n \n+// NewArray creates a Binary array from the memory buffers used by the builder and resets the BinaryBuilder\n+// so it can be used to build a new array.\n+func (b *BinaryBuilder) NewArray() Interface {\n+\treturn b.NewBinaryArray()\n+}\n+\n // NewBinaryArray creates a Binary array from the memory buffers used by the builder and resets the BinaryBuilder\n // so it can be used to build a new array.\n func (b *BinaryBuilder) NewBinaryArray() (a *Binary) {\n@@ -182,3 +188,7 @@ func (b *BinaryBuilder) appendNextOffset() {\n \t// TODO(sgc): check binaryArrayMaximumCapacity?\n \tb.offsets.AppendValue(int32(numBytes))\n }\n+\n+var (\n+\t_ Builder = (*BinaryBuilder)(nil)\n+)\ndiff --git a/go/arrow/array/builder.go b/go/arrow/array/builder.go\nindex 2e237f4516..0b32d03f93 100644\n--- a/go/arrow/array/builder.go\n+++ b/go/arrow/array/builder.go\n@@ -220,7 +220,9 @@ func newBuilder(mem memory.Allocator, dtype arrow.DataType) Builder {\n \tcase arrow.FLOAT64:\n \t\treturn NewFloat64Builder(mem)\n \tcase arrow.STRING:\n+\t\treturn NewStringBuilder(mem)\n \tcase arrow.BINARY:\n+\t\treturn NewBinaryBuilder(mem, arrow.BinaryTypes.Binary)\n \tcase arrow.FIXED_SIZE_BINARY:\n \tcase arrow.DATE32:\n \tcase arrow.DATE64:\ndiff --git a/go/arrow/array/string.go b/go/arrow/array/string.go\nnew file mode 100644\nindex 0000000000..cd0fd434a9\n--- /dev/null\n+++ b/go/arrow/array/string.go\n@@ -0,0 +1,178 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package array\n+\n+import (\n+\t\"fmt\"\n+\t\"math\"\n+\t\"strings\"\n+\t\"unsafe\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/memory\"\n+)\n+\n+const (\n+\tstringArrayMaximumCapacity = math.MaxInt32\n+)\n+\n+// A type which represents an immutable sequence of variable-length UTF-8 strings.\n+type String struct {\n+\tarray\n+\toffsets []int32\n+\tvalues  string\n+}\n+\n+// NewStringData constructs a new String array from data.\n+func NewStringData(data *Data) *String {\n+\ta := &String{}\n+\ta.refCount = 1\n+\ta.setData(data)\n+\treturn a\n+}\n+\n+// Value returns the slice at index i. This value should not be mutated.\n+func (a *String) Value(i int) string { return a.values[a.offsets[i]:a.offsets[i+1]] }\n+\n+func (a *String) String() string {\n+\to := new(strings.Builder)\n+\to.WriteString(\"[\")\n+\tfor i := 0; i < a.Len(); i++ {\n+\t\tif i > 0 {\n+\t\t\to.WriteString(\" \")\n+\t\t}\n+\t\tswitch {\n+\t\tcase a.IsNull(i):\n+\t\t\to.WriteString(\"(null)\")\n+\t\tdefault:\n+\t\t\tfmt.Fprintf(o, \"%q\", a.Value(i))\n+\t\t}\n+\t}\n+\to.WriteString(\"]\")\n+\treturn o.String()\n+}\n+\n+func (a *String) setData(data *Data) {\n+\tif len(data.buffers) != 3 {\n+\t\tpanic(\"arrow/array: len(data.buffers) != 3\")\n+\t}\n+\n+\ta.array.setData(data)\n+\n+\tif vdata := data.buffers[2]; vdata != nil {\n+\t\tb := vdata.Bytes()\n+\t\ta.values = *(*string)(unsafe.Pointer(&b))\n+\t}\n+\n+\tif offsets := data.buffers[1]; offsets != nil {\n+\t\ta.offsets = arrow.Int32Traits.CastFromBytes(offsets.Bytes())\n+\t}\n+}\n+\n+// A StringBuilder is used to build a String array using the Append methods.\n+type StringBuilder struct {\n+\tbuilder *BinaryBuilder\n+}\n+\n+func NewStringBuilder(mem memory.Allocator) *StringBuilder {\n+\tb := &StringBuilder{\n+\t\tbuilder: NewBinaryBuilder(mem, arrow.BinaryTypes.String),\n+\t}\n+\treturn b\n+}\n+\n+// Release decreases the reference count by 1.\n+// When the reference count goes to zero, the memory is freed.\n+// Release may be called simultaneously from multiple goroutines.\n+func (b *StringBuilder) Release() {\n+\tb.builder.Release()\n+}\n+\n+// Retain increases the reference count by 1.\n+// Retain may be called simultaneously from multiple goroutines.\n+func (b *StringBuilder) Retain() {\n+\tb.builder.Retain()\n+}\n+\n+//\n+// Len returns the number of elements in the array builder.\n+func (b *StringBuilder) Len() int { return b.builder.Len() }\n+\n+// Cap returns the total number of elements that can be stored without allocating additional memory.\n+func (b *StringBuilder) Cap() int { return b.builder.Cap() }\n+\n+// NullN returns the number of null values in the array builder.\n+func (b *StringBuilder) NullN() int { return b.builder.NullN() }\n+\n+func (b *StringBuilder) Append(v string) {\n+\tb.builder.Append([]byte(v))\n+}\n+\n+func (b *StringBuilder) AppendNull() {\n+\tb.builder.AppendNull()\n+}\n+\n+// AppendValues will append the values in the v slice. The valid slice determines which values\n+// in v are valid (not null). The valid slice must either be empty or be equal in length to v. If empty,\n+// all values in v are appended and considered valid.\n+func (b *StringBuilder) AppendValues(v []string, valid []bool) {\n+\tb.builder.AppendStringValues(v, valid)\n+}\n+\n+func (b *StringBuilder) Value(i int) string {\n+\treturn string(b.builder.Value(i))\n+}\n+\n+func (b *StringBuilder) init(capacity int) {\n+\tb.builder.init(capacity)\n+}\n+\n+func (b *StringBuilder) resize(newBits int, init func(int)) {\n+\tb.builder.resize(newBits, init)\n+}\n+\n+// Reserve ensures there is enough space for appending n elements\n+// by checking the capacity and calling Resize if necessary.\n+func (b *StringBuilder) Reserve(n int) {\n+\tb.builder.Reserve(n)\n+}\n+\n+// Resize adjusts the space allocated by b to n elements. If n is greater than b.Cap(),\n+// additional memory will be allocated. If n is smaller, the allocated memory may reduced.\n+func (b *StringBuilder) Resize(n int) {\n+\tb.builder.Resize(n)\n+}\n+\n+// NewArray creates a String array from the memory buffers used by the builder and resets the StringBuilder\n+// so it can be used to build a new array.\n+func (b *StringBuilder) NewArray() Interface {\n+\treturn b.NewStringArray()\n+}\n+\n+// NewStringArray creates a String array from the memory buffers used by the builder and resets the StringBuilder\n+// so it can be used to build a new array.\n+func (b *StringBuilder) NewStringArray() (a *String) {\n+\tdata := b.builder.newData()\n+\ta = NewStringData(data)\n+\tdata.Release()\n+\treturn\n+}\n+\n+var (\n+\t_ Interface = (*String)(nil)\n+\t_ Builder   = (*StringBuilder)(nil)\n+)\ndiff --git a/go/arrow/array/string_test.go b/go/arrow/array/string_test.go\nnew file mode 100644\nindex 0000000000..799277c6e9\n--- /dev/null\n+++ b/go/arrow/array/string_test.go\n@@ -0,0 +1,97 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package array_test\n+\n+import (\n+\t\"testing\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"github.com/apache/arrow/go/arrow/memory\"\n+)\n+\n+func TestStringArray(t *testing.T) {\n+\tmem := memory.NewCheckedAllocator(memory.NewGoAllocator())\n+\tdefer mem.AssertSize(t, 0)\n+\n+\tvar (\n+\t\twant   = []string{\"hello\", \"\u4e16\u754c\", \"\", \"bye\"}\n+\t\tvalids = []bool{true, true, false, true}\n+\t)\n+\n+\tsb := array.NewStringBuilder(mem)\n+\tdefer sb.Release()\n+\n+\tsb.Retain()\n+\tsb.Release()\n+\n+\tsb.AppendValues(want[:2], nil)\n+\n+\tsb.AppendNull()\n+\tsb.Append(want[3])\n+\n+\tif got, want := sb.Len(), len(want); got != want {\n+\t\tt.Fatalf(\"invalid len: got=%d, want=%d\", got, want)\n+\t}\n+\n+\tif got, want := sb.NullN(), 1; got != want {\n+\t\tt.Fatalf(\"invalid nulls: got=%d, want=%d\", got, want)\n+\t}\n+\n+\tarr := sb.NewStringArray()\n+\tdefer arr.Release()\n+\n+\tarr.Retain()\n+\tarr.Release()\n+\n+\tif got, want := arr.Len(), len(want); got != want {\n+\t\tt.Fatalf(\"invalid len: got=%d, want=%d\", got, want)\n+\t}\n+\n+\tif got, want := arr.NullN(), 1; got != want {\n+\t\tt.Fatalf(\"invalid nulls: got=%d, want=%d\", got, want)\n+\t}\n+\n+\tfor i := range want {\n+\t\tif arr.IsNull(i) != !valids[i] {\n+\t\t\tt.Fatalf(\"arr[%d]-validity: got=%v want=%v\", i, !arr.IsNull(i), valids[i])\n+\t\t}\n+\t\tswitch {\n+\t\tcase arr.IsNull(i):\n+\t\tdefault:\n+\t\t\tgot := arr.Value(i)\n+\t\t\tif got != want[i] {\n+\t\t\t\tt.Fatalf(\"arr[%d]: got=%q, want=%q\", i, got, want[i])\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tsub := array.MakeFromData(arr.Data())\n+\tdefer sub.Release()\n+\n+\tif sub.DataType().ID() != arrow.STRING {\n+\t\tt.Fatalf(\"invalid type: got=%q, want=string\", sub.DataType().Name())\n+\t}\n+\n+\tif _, ok := sub.(*array.String); !ok {\n+\t\tt.Fatalf(\"could not type-assert to array.String\")\n+\t}\n+\n+\tif got, want := arr.String(), `[\"hello\" \"\u4e16\u754c\" (null) \"bye\"]`; got != want {\n+\t\tt.Fatalf(\"got=%q, want=%q\", got, want)\n+\t}\n+}\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-31T21:38:49.103+0000",
                    "updated": "2018-10-31T21:38:49.103+0000",
                    "started": "2018-10-31T21:38:49.102+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "161328",
                    "issueId": "13178282"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 3600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@ea0e3ed[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4d414af[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6fe97eab[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4bbc6e95[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b89c5d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1a4b95fa[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e73ac3e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1613a5a3[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@540b9948[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@12a92276[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@31187e41[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3a2dfb7c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3600,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Oct 31 21:38:35 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-10-31T21:38:35.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3038/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-08-10T13:48:26.000+0000",
        "updated": "2018-10-31T21:38:49.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Go] add support for StringArray",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178282/comment/16670798",
                    "id": "16670798",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2871\n[https://github.com/apache/arrow/pull/2871]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-10-31T21:38:35.812+0000",
                    "updated": "2018-10-31T21:38:35.812+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3wxlj:",
        "customfield_12314139": null
    }
}