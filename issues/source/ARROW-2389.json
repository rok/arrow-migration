{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13149981",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13149981",
    "key": "ARROW-2389",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 1200,
            "total": 1200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 1200,
            "total": 1200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2389/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 2,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13149981/worklog/97908",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #1991: ARROW-2389: [C++] Add CapacityError\nURL: https://github.com/apache/arrow/pull/1991\n \n \n   This error signals an attempt to exceed capacity of a buffer or container. I initially thought I'd call this `OverflowError` but `CapacityError` makes it clearer that it's not about overflow on arithmetic operations, iMHO.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-03T14:35:12.314+0000",
                    "updated": "2018-05-03T14:35:12.314+0000",
                    "started": "2018-05-03T14:35:12.313+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "97908",
                    "issueId": "13149981"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13149981/worklog/98985",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #1991: ARROW-2389: [C++] Add CapacityError\nURL: https://github.com/apache/arrow/pull/1991\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/builder.cc b/cpp/src/arrow/builder.cc\nindex 39363fd2e8..6be35fe435 100644\n--- a/cpp/src/arrow/builder.cc\n+++ b/cpp/src/arrow/builder.cc\n@@ -1307,7 +1307,7 @@ Status ListBuilder::AppendNextOffset() {\n     std::stringstream ss;\n     ss << \"ListArray cannot contain more then INT32_MAX - 1 child elements,\"\n        << \" have \" << num_values;\n-    return Status::Invalid(ss.str());\n+    return Status::CapacityError(ss.str());\n   }\n   return offsets_builder_.Append(static_cast<int32_t>(num_values));\n }\n@@ -1386,7 +1386,8 @@ Status BinaryBuilder::Resize(int64_t capacity) {\n Status BinaryBuilder::ReserveData(int64_t elements) {\n   if (value_data_length() + elements > value_data_capacity()) {\n     if (value_data_length() + elements > kBinaryMemoryLimit) {\n-      return Status::Invalid(\"Cannot reserve capacity larger than 2^31 - 1 for binary\");\n+      return Status::CapacityError(\n+          \"Cannot reserve capacity larger than 2^31 - 1 for binary\");\n     }\n     RETURN_NOT_OK(value_data_builder_.Reserve(elements));\n   }\n@@ -1399,7 +1400,7 @@ Status BinaryBuilder::AppendNextOffset() {\n     std::stringstream ss;\n     ss << \"BinaryArray cannot contain more than \" << kBinaryMemoryLimit << \" bytes, have \"\n        << num_bytes;\n-    return Status::Invalid(ss.str());\n+    return Status::CapacityError(ss.str());\n   }\n   return offsets_builder_.Append(static_cast<int32_t>(num_bytes));\n }\ndiff --git a/cpp/src/arrow/ipc/writer.cc b/cpp/src/arrow/ipc/writer.cc\nindex 84830e665c..71a33d8017 100644\n--- a/cpp/src/arrow/ipc/writer.cc\n+++ b/cpp/src/arrow/ipc/writer.cc\n@@ -115,7 +115,7 @@ class RecordBatchSerializer : public ArrayVisitor {\n     }\n \n     if (!allow_64bit_ && arr.length() > std::numeric_limits<int32_t>::max()) {\n-      return Status::Invalid(\"Cannot write arrays larger than 2^31 - 1 in length\");\n+      return Status::CapacityError(\"Cannot write arrays larger than 2^31 - 1 in length\");\n     }\n \n     // push back all common elements\ndiff --git a/cpp/src/arrow/python/common.cc b/cpp/src/arrow/python/common.cc\nindex a565d003fe..7b400e0ecc 100644\n--- a/cpp/src/arrow/python/common.cc\n+++ b/cpp/src/arrow/python/common.cc\n@@ -83,41 +83,40 @@ PyBuffer::~PyBuffer() {\n // ----------------------------------------------------------------------\n // Python exception -> Status\n \n-Status CheckPyError(StatusCode code) {\n-  if (PyErr_Occurred()) {\n-    PyObject* exc_type = nullptr;\n-    PyObject* exc_value = nullptr;\n-    PyObject* traceback = nullptr;\n-\n-    PyErr_Fetch(&exc_type, &exc_value, &traceback);\n-    PyErr_NormalizeException(&exc_type, &exc_value, &traceback);\n-\n-    OwnedRef exc_type_ref(exc_type);\n-    OwnedRef exc_value_ref(exc_value);\n-    OwnedRef traceback_ref(traceback);\n-\n-    std::string message;\n-    RETURN_NOT_OK(internal::PyObject_StdStringStr(exc_value, &message));\n-\n-    if (code == StatusCode::UnknownError) {\n-      // Try to match the Python exception type with an appropriate Status code\n-      if (PyErr_GivenExceptionMatches(exc_type, PyExc_MemoryError)) {\n-        code = StatusCode::OutOfMemory;\n-      } else if (PyErr_GivenExceptionMatches(exc_type, PyExc_KeyError)) {\n-        code = StatusCode::KeyError;\n-      } else if (PyErr_GivenExceptionMatches(exc_type, PyExc_TypeError)) {\n-        code = StatusCode::TypeError;\n-      } else if (PyErr_GivenExceptionMatches(exc_type, PyExc_ValueError)) {\n-        code = StatusCode::Invalid;\n-      } else if (PyErr_GivenExceptionMatches(exc_type, PyExc_EnvironmentError)) {\n-        code = StatusCode::IOError;\n-      } else if (PyErr_GivenExceptionMatches(exc_type, PyExc_NotImplementedError)) {\n-        code = StatusCode::NotImplemented;\n-      }\n+Status ConvertPyError(StatusCode code) {\n+  PyObject* exc_type = nullptr;\n+  PyObject* exc_value = nullptr;\n+  PyObject* traceback = nullptr;\n+\n+  PyErr_Fetch(&exc_type, &exc_value, &traceback);\n+  PyErr_NormalizeException(&exc_type, &exc_value, &traceback);\n+\n+  DCHECK_NE(exc_type, nullptr);\n+\n+  OwnedRef exc_type_ref(exc_type);\n+  OwnedRef exc_value_ref(exc_value);\n+  OwnedRef traceback_ref(traceback);\n+\n+  std::string message;\n+  RETURN_NOT_OK(internal::PyObject_StdStringStr(exc_value, &message));\n+\n+  if (code == StatusCode::UnknownError) {\n+    // Try to match the Python exception type with an appropriate Status code\n+    if (PyErr_GivenExceptionMatches(exc_type, PyExc_MemoryError)) {\n+      code = StatusCode::OutOfMemory;\n+    } else if (PyErr_GivenExceptionMatches(exc_type, PyExc_KeyError)) {\n+      code = StatusCode::KeyError;\n+    } else if (PyErr_GivenExceptionMatches(exc_type, PyExc_TypeError)) {\n+      code = StatusCode::TypeError;\n+    } else if (PyErr_GivenExceptionMatches(exc_type, PyExc_ValueError)) {\n+      code = StatusCode::Invalid;\n+    } else if (PyErr_GivenExceptionMatches(exc_type, PyExc_EnvironmentError)) {\n+      code = StatusCode::IOError;\n+    } else if (PyErr_GivenExceptionMatches(exc_type, PyExc_NotImplementedError)) {\n+      code = StatusCode::NotImplemented;\n     }\n-    return Status(code, message);\n   }\n-  return Status::OK();\n+  return Status(code, message);\n }\n \n Status PassPyError() {\ndiff --git a/cpp/src/arrow/python/common.h b/cpp/src/arrow/python/common.h\nindex a61d067e44..6eecd598eb 100644\n--- a/cpp/src/arrow/python/common.h\n+++ b/cpp/src/arrow/python/common.h\n@@ -35,8 +35,17 @@ class MemoryPool;\n \n namespace py {\n \n-// TODO: inline the successful case\n-ARROW_EXPORT Status CheckPyError(StatusCode code = StatusCode::UnknownError);\n+ARROW_EXPORT Status ConvertPyError(StatusCode code = StatusCode::UnknownError);\n+\n+// Catch a pending Python exception and return the corresponding Status.\n+// If no exception is pending, Status::OK() is returned.\n+inline Status CheckPyError(StatusCode code = StatusCode::UnknownError) {\n+  if (ARROW_PREDICT_TRUE(!PyErr_Occurred())) {\n+    return Status::OK();\n+  } else {\n+    return ConvertPyError(code);\n+  }\n+}\n \n ARROW_EXPORT Status PassPyError();\n \ndiff --git a/cpp/src/arrow/python/helpers.cc b/cpp/src/arrow/python/helpers.cc\nindex b96d5fff04..862157e4ed 100644\n--- a/cpp/src/arrow/python/helpers.cc\n+++ b/cpp/src/arrow/python/helpers.cc\n@@ -165,7 +165,7 @@ Status BuilderAppend(BinaryBuilder* builder, PyObject* obj, bool* is_full) {\n       *is_full = true;\n       return Status::OK();\n     } else {\n-      return Status::Invalid(\"Maximum array size reached (2GB)\");\n+      return Status::CapacityError(\"Maximum array size reached (2GB)\");\n     }\n   }\n   RETURN_NOT_OK(builder->Append(view.bytes, length));\n@@ -194,7 +194,7 @@ Status BuilderAppend(FixedSizeBinaryBuilder* builder, PyObject* obj, bool* is_fu\n       *is_full = true;\n       return Status::OK();\n     } else {\n-      return Status::Invalid(\"Maximum array size reached (2GB)\");\n+      return Status::CapacityError(\"Maximum array size reached (2GB)\");\n     }\n   }\n   RETURN_NOT_OK(builder->Append(view.bytes));\n@@ -216,7 +216,7 @@ Status BuilderAppend(StringBuilder* builder, PyObject* obj, bool check_valid,\n       *is_full = true;\n       return Status::OK();\n     } else {\n-      return Status::Invalid(\"Maximum array size reached (2GB)\");\n+      return Status::CapacityError(\"Maximum array size reached (2GB)\");\n     }\n   }\n   RETURN_NOT_OK(builder->Append(view.bytes, length));\ndiff --git a/cpp/src/arrow/python/numpy_to_arrow.cc b/cpp/src/arrow/python/numpy_to_arrow.cc\nindex 793c318b4c..e160e90f3a 100644\n--- a/cpp/src/arrow/python/numpy_to_arrow.cc\n+++ b/cpp/src/arrow/python/numpy_to_arrow.cc\n@@ -1310,7 +1310,7 @@ inline Status NumPyConverter::ConvertTypedLists<NPY_OBJECT, BinaryType>(\n       RETURN_NOT_OK(\n           AppendObjectBinaries(numpy_array, nullptr, 0, value_builder, &offset));\n       if (offset < PyArray_SIZE(numpy_array)) {\n-        return Status::Invalid(\"Array cell value exceeded 2GB\");\n+        return Status::CapacityError(\"Array cell value exceeded 2GB\");\n       }\n       return Status::OK();\n     } else if (PyList_Check(object)) {\n@@ -1367,7 +1367,7 @@ inline Status NumPyConverter::ConvertTypedLists<NPY_OBJECT, StringType>(\n       RETURN_NOT_OK(AppendObjectStrings(numpy_array, nullptr, 0, check_valid,\n                                         value_builder, &offset, &have_bytes));\n       if (offset < PyArray_SIZE(numpy_array)) {\n-        return Status::Invalid(\"Array cell value exceeded 2GB\");\n+        return Status::CapacityError(\"Array cell value exceeded 2GB\");\n       }\n       return Status::OK();\n     } else if (PyList_Check(object)) {\n@@ -1514,7 +1514,7 @@ Status AppendUTF32(const char* data, int itemsize, int byteorder,\n \n   const int32_t length = static_cast<int32_t>(PyBytes_GET_SIZE(utf8_obj.obj()));\n   if (builder->value_data_length() + length > kBinaryMemoryLimit) {\n-    return Status::Invalid(\"Encoded string length exceeds maximum size (2GB)\");\n+    return Status::CapacityError(\"Encoded string length exceeds maximum size (2GB)\");\n   }\n   return builder->Append(PyBytes_AS_STRING(utf8_obj.obj()), length);\n }\ndiff --git a/cpp/src/arrow/status.h b/cpp/src/arrow/status.h\nindex 8b82e2ab73..0e7f0149a0 100644\n--- a/cpp/src/arrow/status.h\n+++ b/cpp/src/arrow/status.h\n@@ -74,6 +74,7 @@ enum class StatusCode : char {\n   TypeError = 3,\n   Invalid = 4,\n   IOError = 5,\n+  CapacityError = 6,\n   UnknownError = 9,\n   NotImplemented = 10,\n   SerializationError = 11,\n@@ -129,6 +130,10 @@ class ARROW_EXPORT Status {\n     return Status(StatusCode::Invalid, msg);\n   }\n \n+  static Status CapacityError(const std::string& msg) {\n+    return Status(StatusCode::CapacityError, msg);\n+  }\n+\n   static Status IOError(const std::string& msg) {\n     return Status(StatusCode::IOError, msg);\n   }\n@@ -160,6 +165,7 @@ class ARROW_EXPORT Status {\n   bool IsKeyError() const { return code() == StatusCode::KeyError; }\n   bool IsInvalid() const { return code() == StatusCode::Invalid; }\n   bool IsIOError() const { return code() == StatusCode::IOError; }\n+  bool IsCapacityError() const { return code() == StatusCode::CapacityError; }\n   bool IsTypeError() const { return code() == StatusCode::TypeError; }\n   bool IsUnknownError() const { return code() == StatusCode::UnknownError; }\n   bool IsNotImplemented() const { return code() == StatusCode::NotImplemented; }\ndiff --git a/python/pyarrow/error.pxi b/python/pyarrow/error.pxi\nindex dfdfcd73af..abd5a187db 100644\n--- a/python/pyarrow/error.pxi\n+++ b/python/pyarrow/error.pxi\n@@ -48,6 +48,10 @@ class ArrowNotImplementedError(NotImplementedError, ArrowException):\n     pass\n \n \n+class ArrowCapacityError(ArrowException):\n+    pass\n+\n+\n class PlasmaObjectExists(ArrowException):\n     pass\n \n@@ -85,6 +89,8 @@ cdef int check_status(const CStatus& status) nogil except -1:\n             raise ArrowNotImplementedError(message)\n         elif status.IsTypeError():\n             raise ArrowTypeError(message)\n+        elif status.IsCapacityError():\n+            raise ArrowCapacityError(message)\n         elif status.IsPlasmaObjectExists():\n             raise PlasmaObjectExists(message)\n         elif status.IsPlasmaObjectNonexistent():\ndiff --git a/python/pyarrow/includes/common.pxd b/python/pyarrow/includes/common.pxd\nindex 16eae92e37..23617b6d2f 100644\n--- a/python/pyarrow/includes/common.pxd\n+++ b/python/pyarrow/includes/common.pxd\n@@ -56,6 +56,7 @@ cdef extern from \"arrow/api.h\" namespace \"arrow\" nogil:\n         c_bool IsKeyError()\n         c_bool IsNotImplemented()\n         c_bool IsTypeError()\n+        c_bool IsCapacityError()\n         c_bool IsSerializationError()\n         c_bool IsPythonError()\n         c_bool IsPlasmaObjectExists()\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-07T11:37:44.975+0000",
                    "updated": "2018-05-07T11:37:44.975+0000",
                    "started": "2018-05-07T11:37:44.974+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "98985",
                    "issueId": "13149981"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
            "id": "5",
            "description": "General wishlist item.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Wish",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 1200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@57be7837[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6730cf26[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ab012ed[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2b18ad62[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@562b805d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@65f5ffc7[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2f18aeee[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@410575d2[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4b262cc7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1e7f9a3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6be248af[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1a30be4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 1200,
        "customfield_12312520": null,
        "customfield_12312521": "Mon May 07 11:37:42 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-05-07T11:37:42.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2389/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-04-04T12:28:02.000+0000",
        "updated": "2018-05-07T11:37:51.000+0000",
        "timeoriginalestimate": null,
        "description": "It may be useful to have a {{StatusCode::OverflowError}} return code, to signal that something overflowed allowed limits (e.g. the 2GB limit for string or binary values).",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 1200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add StatusCode::OverflowError",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13149981/comment/16462472",
                    "id": "16462472",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Another thought: have a {{CapacityError}} for when a size limit has been reached, and a {{OverflowError}} for arithmetic overflow.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-05-03T13:53:33.207+0000",
                    "updated": "2018-05-03T13:53:33.207+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13149981/comment/16465808",
                    "id": "16465808",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 1991\n[https://github.com/apache/arrow/pull/1991]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-05-07T11:37:42.932+0000",
                    "updated": "2018-05-07T11:37:42.932+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|i3s4r3:",
        "customfield_12314139": null
    }
}