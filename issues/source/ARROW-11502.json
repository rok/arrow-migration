{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13356891",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891",
    "key": "ARROW-11502",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/2",
            "id": "2",
            "description": "The problem described is an issue which will never be fixed.",
            "name": "Won't Fix"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yqGu",
            "name": "yqGu",
            "key": "yqgu",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yqgu&avatarId=45453",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yqgu&avatarId=45453",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yqgu&avatarId=45453",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yqgu&avatarId=45453"
            },
            "displayName": "Yuqi Gu",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yqGu",
            "name": "yqGu",
            "key": "yqgu",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yqgu&avatarId=45453",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yqgu&avatarId=45453",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yqgu&avatarId=45453",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yqgu&avatarId=45453"
            },
            "displayName": "Yuqi Gu",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yqGu",
            "name": "yqGu",
            "key": "yqgu",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yqgu&avatarId=45453",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yqgu&avatarId=45453",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yqgu&avatarId=45453",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yqgu&avatarId=45453"
            },
            "displayName": "Yuqi Gu",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11502/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 24,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/548012",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi opened a new pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424\n\n\n   Improve ByteStreamSplitDecode performance for float_1k/4k/32k/64k:\r\n   1k:  21.6536G/s -> 27.7227G/s\r\n   4K:  22.1561G/s -> 28.2019G/s\r\n   32k: 21.9854G/s -> 25.8939G/s\r\n   64k: 22.0192G/s -> 26.1399G/s\r\n   No obvious performance difference for Double_1k/4k/32k/64k.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T02:32:05.784+0000",
                    "updated": "2021-02-05T02:32:05.784+0000",
                    "started": "2021-02-05T02:32:05.784+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548012",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/548013",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#issuecomment-773741408\n\n\n   https://issues.apache.org/jira/browse/ARROW-11502\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T02:34:42.007+0000",
                    "updated": "2021-02-05T02:34:42.007+0000",
                    "started": "2021-02-05T02:34:42.006+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548013",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/548021",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#discussion_r570700464\n\n\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -25,23 +25,44 @@\n \n #ifdef ARROW_HAVE_SSE4_2\n // Enable the SIMD for ByteStreamSplit Encoder/Decoder\n-#define ARROW_HAVE_SIMD_SPLIT\n+#define ARROW_HAVE_SIMD_DECODE_SPLIT\n+#define ARROW_HAVE_SIMD_ENCODE_SPLIT\n #endif  // ARROW_HAVE_SSE4_2\n \n+#ifdef ARROW_HAVE_NEON\n+#define ARROW_HAVE_SIMD_DECODE_SPLIT\n+#endif  // ARROW_HAVE_NEON\n+\n namespace arrow {\n namespace util {\n namespace internal {\n \n-#if defined(ARROW_HAVE_SSE4_2)\n+#if defined(ARROW_HAVE_NEON)\n+#define DATA_TYPE_128BIT uint8x16_t\n+#define LDR_SIMD_128BIT vld1q_u8\n+#define STR_SIMD_128BIT vst1q_u8\n+#define REINT_CAST_TYPE uint8_t\n+#define SHUFFLE_LO_128BIT vzip1q_u8\n+#define SHUFFLE_HI_128BIT vzip2q_u8\n+#elif defined(ARROW_HAVE_SSE4_2)\n\nReview comment:\n       An SIMD wrapper lib looks better than doing this ourselves. And I think there are other SSE4 codes in Arrow have similar NEON implementation.\r\n   @pitrou @jianxind \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T03:43:13.997+0000",
                    "updated": "2021-02-05T03:43:13.997+0000",
                    "started": "2021-02-05T03:43:13.996+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548021",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/548273",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi opened a new pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424\n\n\n   Improve ByteStreamSplitDecode performance for float_1k/4k/32k/64k:\r\n   1k:  21.6536G/s -> 27.7227G/s\r\n   4K:  22.1561G/s -> 28.2019G/s\r\n   32k: 21.9854G/s -> 25.8939G/s\r\n   64k: 22.0192G/s -> 26.1399G/s\r\n   No obvious performance difference for Double_1k/4k/32k/64k.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T10:04:37.060+0000",
                    "updated": "2021-02-05T10:04:37.060+0000",
                    "started": "2021-02-05T10:04:37.060+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548273",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/548385",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#discussion_r570700464\n\n\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -25,23 +25,44 @@\n \n #ifdef ARROW_HAVE_SSE4_2\n // Enable the SIMD for ByteStreamSplit Encoder/Decoder\n-#define ARROW_HAVE_SIMD_SPLIT\n+#define ARROW_HAVE_SIMD_DECODE_SPLIT\n+#define ARROW_HAVE_SIMD_ENCODE_SPLIT\n #endif  // ARROW_HAVE_SSE4_2\n \n+#ifdef ARROW_HAVE_NEON\n+#define ARROW_HAVE_SIMD_DECODE_SPLIT\n+#endif  // ARROW_HAVE_NEON\n+\n namespace arrow {\n namespace util {\n namespace internal {\n \n-#if defined(ARROW_HAVE_SSE4_2)\n+#if defined(ARROW_HAVE_NEON)\n+#define DATA_TYPE_128BIT uint8x16_t\n+#define LDR_SIMD_128BIT vld1q_u8\n+#define STR_SIMD_128BIT vst1q_u8\n+#define REINT_CAST_TYPE uint8_t\n+#define SHUFFLE_LO_128BIT vzip1q_u8\n+#define SHUFFLE_HI_128BIT vzip2q_u8\n+#elif defined(ARROW_HAVE_SSE4_2)\n\nReview comment:\n       An SIMD wrapper lib looks better than doing this ourselves. And I think there are other SSE4 codes in Arrow have similar NEON implementation.\r\n   @pitrou @jianxind \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T10:15:58.474+0000",
                    "updated": "2021-02-05T10:15:58.474+0000",
                    "started": "2021-02-05T10:15:58.473+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548385",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/548578",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#issuecomment-773741408\n\n\n   https://issues.apache.org/jira/browse/ARROW-11502\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T10:36:19.712+0000",
                    "updated": "2021-02-05T10:36:19.712+0000",
                    "started": "2021-02-05T10:36:19.712+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548578",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/549441",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#discussion_r571882888\n\n\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -25,23 +25,44 @@\n \n #ifdef ARROW_HAVE_SSE4_2\n // Enable the SIMD for ByteStreamSplit Encoder/Decoder\n-#define ARROW_HAVE_SIMD_SPLIT\n+#define ARROW_HAVE_SIMD_DECODE_SPLIT\n+#define ARROW_HAVE_SIMD_ENCODE_SPLIT\n #endif  // ARROW_HAVE_SSE4_2\n \n+#ifdef ARROW_HAVE_NEON\n+#define ARROW_HAVE_SIMD_DECODE_SPLIT\n+#endif  // ARROW_HAVE_NEON\n+\n namespace arrow {\n namespace util {\n namespace internal {\n \n-#if defined(ARROW_HAVE_SSE4_2)\n+#if defined(ARROW_HAVE_NEON)\n+#define DATA_TYPE_128BIT uint8x16_t\n+#define LDR_SIMD_128BIT vld1q_u8\n+#define STR_SIMD_128BIT vst1q_u8\n+#define REINT_CAST_TYPE uint8_t\n+#define SHUFFLE_LO_128BIT vzip1q_u8\n+#define SHUFFLE_HI_128BIT vzip2q_u8\n+#elif defined(ARROW_HAVE_SSE4_2)\n\nReview comment:\n       I agree that we should discuss adopting an SIMD library. There are several of them.\r\n   https://github.com/agenium-scale/nsimd\r\n   https://github.com/aff3ct/MIPP\r\n   https://xsimd.readthedocs.io/en/latest/\r\n   https://github.com/p12tic/libsimdpp\r\n   \r\n   Do you want to start the discussion on the mailing-list @cyb70289 ?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-08T09:12:28.687+0000",
                    "updated": "2021-02-08T09:12:28.687+0000",
                    "started": "2021-02-08T09:12:28.687+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "549441",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/550069",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#discussion_r572636379\n\n\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -25,23 +25,44 @@\n \n #ifdef ARROW_HAVE_SSE4_2\n // Enable the SIMD for ByteStreamSplit Encoder/Decoder\n-#define ARROW_HAVE_SIMD_SPLIT\n+#define ARROW_HAVE_SIMD_DECODE_SPLIT\n+#define ARROW_HAVE_SIMD_ENCODE_SPLIT\n #endif  // ARROW_HAVE_SSE4_2\n \n+#ifdef ARROW_HAVE_NEON\n+#define ARROW_HAVE_SIMD_DECODE_SPLIT\n+#endif  // ARROW_HAVE_NEON\n+\n namespace arrow {\n namespace util {\n namespace internal {\n \n-#if defined(ARROW_HAVE_SSE4_2)\n+#if defined(ARROW_HAVE_NEON)\n+#define DATA_TYPE_128BIT uint8x16_t\n+#define LDR_SIMD_128BIT vld1q_u8\n+#define STR_SIMD_128BIT vst1q_u8\n+#define REINT_CAST_TYPE uint8_t\n+#define SHUFFLE_LO_128BIT vzip1q_u8\n+#define SHUFFLE_HI_128BIT vzip2q_u8\n+#elif defined(ARROW_HAVE_SSE4_2)\n\nReview comment:\n       I've sent a mail to dev mailing-list for discussion.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-09T06:59:49.562+0000",
                    "updated": "2021-02-09T06:59:49.562+0000",
                    "started": "2021-02-09T06:59:49.562+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "550069",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/556155",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi commented on pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#issuecomment-783847603\n\n\n   From discussion on dev mailing-list,  the soft consensus among us is that adopting [xsimd](https://github.com/xtensor-stack/xsimd) as the SIMD wrapper library for Arrow. \r\n   \r\n   I'm going to contribute the missing functions to xsimd first.\r\n   So convert to draft.   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T03:18:07.277+0000",
                    "updated": "2021-02-23T03:18:07.277+0000",
                    "started": "2021-02-23T03:18:07.277+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556155",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/556245",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#issuecomment-784039191\n\n\n   Thank you @guyuqi !\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T09:39:35.246+0000",
                    "updated": "2021-02-23T09:39:35.246+0000",
                    "started": "2021-02-23T09:39:35.246+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556245",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/556392",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#issuecomment-784280522\n\n\n   I opened https://issues.apache.org/jira/browse/ARROW-11744 to track xsimd vendoring.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T15:24:39.765+0000",
                    "updated": "2021-02-23T15:24:39.765+0000",
                    "started": "2021-02-23T15:24:39.765+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556392",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/595096",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi commented on pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#issuecomment-839531643\n\n\n   Refactor Decoding-Bytestream implementation with XSIMD\r\n   Improve ByteStreamSplitDecode performance by leveraging simd library:xsimd.\r\n   \r\n   The tests of Byte-streaming-decode(parquet-internals-test)are passed on x86/Arm64:\r\n   ```\r\n   [----------] 4 tests from TestByteStreamSplitEncoding/0, where TypeParam = parquet::PhysicalType<(parquet::Type::type)4>\r\n   [ RUN      ] TestByteStreamSplitEncoding/0.BasicRoundTrip\r\n   [       OK ] TestByteStreamSplitEncoding/0.BasicRoundTrip (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/0.RoundTripSingleElement\r\n   [       OK ] TestByteStreamSplitEncoding/0.RoundTripSingleElement (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/0.CheckOnlyDecode\r\n   [       OK ] TestByteStreamSplitEncoding/0.CheckOnlyDecode (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/0.CheckOnlyEncode\r\n   [       OK ] TestByteStreamSplitEncoding/0.CheckOnlyEncode (0 ms)\r\n   [----------] 4 tests from TestByteStreamSplitEncoding/0 (0 ms total)\r\n   \r\n   [----------] 4 tests from TestByteStreamSplitEncoding/1, where TypeParam = parquet::PhysicalType<(parquet::Type::type)5>\r\n   [ RUN      ] TestByteStreamSplitEncoding/1.BasicRoundTrip\r\n   [       OK ] TestByteStreamSplitEncoding/1.BasicRoundTrip (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/1.RoundTripSingleElement\r\n   [       OK ] TestByteStreamSplitEncoding/1.RoundTripSingleElement (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/1.CheckOnlyDecode\r\n   [       OK ] TestByteStreamSplitEncoding/1.CheckOnlyDecode (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/1.CheckOnlyEncode\r\n   [       OK ] TestByteStreamSplitEncoding/1.CheckOnlyEncode (0 ms)\r\n   [----------] 4 tests from TestByteStreamSplitEncoding/1 (0 ms total)\r\n   \r\n   [----------] 1 test from ByteStreamSplitEncodeDecode\r\n   [ RUN      ] ByteStreamSplitEncodeDecode.InvalidDataTypes\r\n   [       OK ] ByteStreamSplitEncodeDecode.InvalidDataTypes (0 ms)\r\n   [----------] 1 test from ByteStreamSplitEncodeDecode (0 ms total)\r\n   ```\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T07:25:25.120+0000",
                    "updated": "2021-05-12T07:25:25.120+0000",
                    "started": "2021-05-12T07:25:25.120+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595096",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/595098",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi edited a comment on pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#issuecomment-839531643\n\n\n   Refactor Decoding-Bytestream implementation with XSIMD\r\n   Improve ByteStreamSplitDecode performance by leveraging simd library:xsimd.\r\n   \r\n   The tests of Byte-streaming-decode are passed on x86/Arm64:\r\n   ```\r\n   [----------] 4 tests from TestByteStreamSplitEncoding/0, where TypeParam = parquet::PhysicalType<(parquet::Type::type)4>\r\n   [ RUN      ] TestByteStreamSplitEncoding/0.BasicRoundTrip\r\n   [       OK ] TestByteStreamSplitEncoding/0.BasicRoundTrip (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/0.RoundTripSingleElement\r\n   [       OK ] TestByteStreamSplitEncoding/0.RoundTripSingleElement (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/0.CheckOnlyDecode\r\n   [       OK ] TestByteStreamSplitEncoding/0.CheckOnlyDecode (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/0.CheckOnlyEncode\r\n   [       OK ] TestByteStreamSplitEncoding/0.CheckOnlyEncode (0 ms)\r\n   [----------] 4 tests from TestByteStreamSplitEncoding/0 (0 ms total)\r\n   \r\n   [----------] 4 tests from TestByteStreamSplitEncoding/1, where TypeParam = parquet::PhysicalType<(parquet::Type::type)5>\r\n   [ RUN      ] TestByteStreamSplitEncoding/1.BasicRoundTrip\r\n   [       OK ] TestByteStreamSplitEncoding/1.BasicRoundTrip (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/1.RoundTripSingleElement\r\n   [       OK ] TestByteStreamSplitEncoding/1.RoundTripSingleElement (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/1.CheckOnlyDecode\r\n   [       OK ] TestByteStreamSplitEncoding/1.CheckOnlyDecode (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/1.CheckOnlyEncode\r\n   [       OK ] TestByteStreamSplitEncoding/1.CheckOnlyEncode (0 ms)\r\n   [----------] 4 tests from TestByteStreamSplitEncoding/1 (0 ms total)\r\n   \r\n   [----------] 1 test from ByteStreamSplitEncodeDecode\r\n   [ RUN      ] ByteStreamSplitEncodeDecode.InvalidDataTypes\r\n   [       OK ] ByteStreamSplitEncodeDecode.InvalidDataTypes (0 ms)\r\n   [----------] 1 test from ByteStreamSplitEncodeDecode (0 ms total)\r\n   ```\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T07:26:07.150+0000",
                    "updated": "2021-05-12T07:26:07.150+0000",
                    "started": "2021-05-12T07:26:07.150+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595098",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/595101",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi edited a comment on pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#issuecomment-839531643\n\n\n   The shuffle implementation was merged in xsimd [PR#434](https://github.com/xtensor-stack/xsimd/pull/434)\r\n   \r\n   Commit-3: Refactor Decoding-Bytestream implementation with XSIMD\r\n   Improve ByteStreamSplitDecode performance by leveraging simd library:xsimd.\r\n   \r\n   The tests of Byte-streaming-decode are passed on x86/Arm64:\r\n   ```\r\n   [----------] 4 tests from TestByteStreamSplitEncoding/0, where TypeParam = parquet::PhysicalType<(parquet::Type::type)4>\r\n   [ RUN      ] TestByteStreamSplitEncoding/0.BasicRoundTrip\r\n   [       OK ] TestByteStreamSplitEncoding/0.BasicRoundTrip (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/0.RoundTripSingleElement\r\n   [       OK ] TestByteStreamSplitEncoding/0.RoundTripSingleElement (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/0.CheckOnlyDecode\r\n   [       OK ] TestByteStreamSplitEncoding/0.CheckOnlyDecode (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/0.CheckOnlyEncode\r\n   [       OK ] TestByteStreamSplitEncoding/0.CheckOnlyEncode (0 ms)\r\n   [----------] 4 tests from TestByteStreamSplitEncoding/0 (0 ms total)\r\n   \r\n   [----------] 4 tests from TestByteStreamSplitEncoding/1, where TypeParam = parquet::PhysicalType<(parquet::Type::type)5>\r\n   [ RUN      ] TestByteStreamSplitEncoding/1.BasicRoundTrip\r\n   [       OK ] TestByteStreamSplitEncoding/1.BasicRoundTrip (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/1.RoundTripSingleElement\r\n   [       OK ] TestByteStreamSplitEncoding/1.RoundTripSingleElement (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/1.CheckOnlyDecode\r\n   [       OK ] TestByteStreamSplitEncoding/1.CheckOnlyDecode (0 ms)\r\n   [ RUN      ] TestByteStreamSplitEncoding/1.CheckOnlyEncode\r\n   [       OK ] TestByteStreamSplitEncoding/1.CheckOnlyEncode (0 ms)\r\n   [----------] 4 tests from TestByteStreamSplitEncoding/1 (0 ms total)\r\n   \r\n   [----------] 1 test from ByteStreamSplitEncodeDecode\r\n   [ RUN      ] ByteStreamSplitEncodeDecode.InvalidDataTypes\r\n   [       OK ] ByteStreamSplitEncodeDecode.InvalidDataTypes (0 ms)\r\n   [----------] 1 test from ByteStreamSplitEncodeDecode (0 ms total)\r\n   ```\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T07:30:26.215+0000",
                    "updated": "2021-05-12T07:30:26.215+0000",
                    "started": "2021-05-12T07:30:26.215+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595101",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/595446",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#discussion_r631192243\n\n\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -23,25 +23,33 @@\n #include <stdint.h>\n #include <algorithm>\n \n+#if defined(ARROW_HAVE_NEON) || defined(ARROW_HAVE_SSE4_2)\n+#include <xsimd/xsimd.hpp>\n+// Enable the SIMD for ByteStreamSplit Decoder\n+#define ARROW_HAVE_SIMD_DECODE_SPLIT\n+#endif\n+\n #ifdef ARROW_HAVE_SSE4_2\n-// Enable the SIMD for ByteStreamSplit Encoder/Decoder\n-#define ARROW_HAVE_SIMD_SPLIT\n+// Enable the SIMD for ByteStreamSplit Encoder\n+#define ARROW_HAVE_SIMD_ENCODE_SPLIT\n #endif  // ARROW_HAVE_SSE4_2\n \n namespace arrow {\n namespace util {\n namespace internal {\n \n-#if defined(ARROW_HAVE_SSE4_2)\n+#ifdef ARROW_HAVE_SIMD_DECODE_SPLIT\n template <typename T>\n-void ByteStreamSplitDecodeSse2(const uint8_t* data, int64_t num_values, int64_t stride,\n-                               T* out) {\n+void ByteStreamSplitDecode128bit(const uint8_t* data, int64_t num_values, int64_t stride,\n\nReview comment:\n       Nit: call this `ByteStreamSplitDecodeSIMD128`?\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -23,25 +23,33 @@\n #include <stdint.h>\n #include <algorithm>\n \n+#if defined(ARROW_HAVE_NEON) || defined(ARROW_HAVE_SSE4_2)\n+#include <xsimd/xsimd.hpp>\n+// Enable the SIMD for ByteStreamSplit Decoder\n+#define ARROW_HAVE_SIMD_DECODE_SPLIT\n+#endif\n+\n #ifdef ARROW_HAVE_SSE4_2\n\nReview comment:\n       Why isn't NEON enabled here?\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -63,30 +71,34 @@ void ByteStreamSplitDecodeSse2(const uint8_t* data, int64_t num_values, int64_t\n   // Stage 1: AAAA BBBB CCCC DDDD\n   // Stage 2: ACAC ACAC BDBD BDBD\n   // Stage 3: ABCD ABCD ABCD ABCD\n-  __m128i stage[kNumStreamsLog2 + 1U][kNumStreams];\n+  simd_batch stage[kNumStreamsLog2 + 1U][kNumStreams];\n   constexpr size_t kNumStreamsHalf = kNumStreams / 2U;\n \n   for (int64_t i = 0; i < num_blocks; ++i) {\n     for (size_t j = 0; j < kNumStreams; ++j) {\n-      stage[0][j] = _mm_loadu_si128(\n-          reinterpret_cast<const __m128i*>(&data[i * sizeof(__m128i) + j * stride]));\n+      stage[0][j] = simd_batch(\n+          reinterpret_cast<const int8_t*>(&data[i * dTypeSize128bits + j * stride]),\n+          xsimd::unaligned_mode());\n     }\n     for (size_t step = 0; step < kNumStreamsLog2; ++step) {\n       for (size_t j = 0; j < kNumStreamsHalf; ++j) {\n         stage[step + 1U][j * 2] =\n-            _mm_unpacklo_epi8(stage[step][j], stage[step][kNumStreamsHalf + j]);\n+            xsimd::zip_lo(stage[step][j], stage[step][kNumStreamsHalf + j]);\n         stage[step + 1U][j * 2 + 1U] =\n-            _mm_unpackhi_epi8(stage[step][j], stage[step][kNumStreamsHalf + j]);\n+            xsimd::zip_hi(stage[step][j], stage[step][kNumStreamsHalf + j]);\n       }\n     }\n     for (size_t j = 0; j < kNumStreams; ++j) {\n-      _mm_storeu_si128(reinterpret_cast<__m128i*>(\n-                           &output_data[(i * kNumStreams + j) * sizeof(__m128i)]),\n-                       stage[kNumStreamsLog2][j]);\n+      xsimd::store_simd<int8_t, int8_t>(\n\nReview comment:\n       I don't think you need to pass the template parameters explicitly?\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -23,25 +23,33 @@\n #include <stdint.h>\n #include <algorithm>\n \n+#if defined(ARROW_HAVE_NEON) || defined(ARROW_HAVE_SSE4_2)\n+#include <xsimd/xsimd.hpp>\n+// Enable the SIMD for ByteStreamSplit Decoder\n+#define ARROW_HAVE_SIMD_DECODE_SPLIT\n+#endif\n+\n #ifdef ARROW_HAVE_SSE4_2\n-// Enable the SIMD for ByteStreamSplit Encoder/Decoder\n-#define ARROW_HAVE_SIMD_SPLIT\n+// Enable the SIMD for ByteStreamSplit Encoder\n+#define ARROW_HAVE_SIMD_ENCODE_SPLIT\n #endif  // ARROW_HAVE_SSE4_2\n \n namespace arrow {\n namespace util {\n namespace internal {\n \n-#if defined(ARROW_HAVE_SSE4_2)\n+#ifdef ARROW_HAVE_SIMD_DECODE_SPLIT\n template <typename T>\n-void ByteStreamSplitDecodeSse2(const uint8_t* data, int64_t num_values, int64_t stride,\n-                               T* out) {\n+void ByteStreamSplitDecode128bit(const uint8_t* data, int64_t num_values, int64_t stride,\n+                                 T* out) {\n+  using simd_batch = xsimd::batch<int8_t, 16>;\n+  constexpr size_t dTypeSize128bits = sizeof(int8_t) * 16;\n\nReview comment:\n       Can you call this `kBatchSize`?\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -63,30 +71,34 @@ void ByteStreamSplitDecodeSse2(const uint8_t* data, int64_t num_values, int64_t\n   // Stage 1: AAAA BBBB CCCC DDDD\n   // Stage 2: ACAC ACAC BDBD BDBD\n   // Stage 3: ABCD ABCD ABCD ABCD\n-  __m128i stage[kNumStreamsLog2 + 1U][kNumStreams];\n+  simd_batch stage[kNumStreamsLog2 + 1U][kNumStreams];\n   constexpr size_t kNumStreamsHalf = kNumStreams / 2U;\n \n   for (int64_t i = 0; i < num_blocks; ++i) {\n     for (size_t j = 0; j < kNumStreams; ++j) {\n-      stage[0][j] = _mm_loadu_si128(\n-          reinterpret_cast<const __m128i*>(&data[i * sizeof(__m128i) + j * stride]));\n+      stage[0][j] = simd_batch(\n+          reinterpret_cast<const int8_t*>(&data[i * dTypeSize128bits + j * stride]),\n+          xsimd::unaligned_mode());\n     }\n     for (size_t step = 0; step < kNumStreamsLog2; ++step) {\n       for (size_t j = 0; j < kNumStreamsHalf; ++j) {\n         stage[step + 1U][j * 2] =\n-            _mm_unpacklo_epi8(stage[step][j], stage[step][kNumStreamsHalf + j]);\n+            xsimd::zip_lo(stage[step][j], stage[step][kNumStreamsHalf + j]);\n         stage[step + 1U][j * 2 + 1U] =\n-            _mm_unpackhi_epi8(stage[step][j], stage[step][kNumStreamsHalf + j]);\n+            xsimd::zip_hi(stage[step][j], stage[step][kNumStreamsHalf + j]);\n       }\n     }\n     for (size_t j = 0; j < kNumStreams; ++j) {\n-      _mm_storeu_si128(reinterpret_cast<__m128i*>(\n-                           &output_data[(i * kNumStreams + j) * sizeof(__m128i)]),\n-                       stage[kNumStreamsLog2][j]);\n+      xsimd::store_simd<int8_t, int8_t>(\n+          reinterpret_cast<int8_t*>(\n+              &output_data[(i * kNumStreams + j) * dTypeSize128bits]),\n+          stage[kNumStreamsLog2][j], xsimd::unaligned_mode());\n     }\n   }\n }\n+#endif  // ARROW_HAVE_SIMD_DECODE_SPLIT\n \n+#if defined(ARROW_HAVE_SSE4_2)\n template <typename T>\n void ByteStreamSplitEncodeSse2(const uint8_t* raw_values, const size_t num_values,\n\nReview comment:\n       Can you please convert this to use xsimd as well?\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -63,30 +71,34 @@ void ByteStreamSplitDecodeSse2(const uint8_t* data, int64_t num_values, int64_t\n   // Stage 1: AAAA BBBB CCCC DDDD\n   // Stage 2: ACAC ACAC BDBD BDBD\n   // Stage 3: ABCD ABCD ABCD ABCD\n-  __m128i stage[kNumStreamsLog2 + 1U][kNumStreams];\n+  simd_batch stage[kNumStreamsLog2 + 1U][kNumStreams];\n   constexpr size_t kNumStreamsHalf = kNumStreams / 2U;\n \n   for (int64_t i = 0; i < num_blocks; ++i) {\n     for (size_t j = 0; j < kNumStreams; ++j) {\n-      stage[0][j] = _mm_loadu_si128(\n-          reinterpret_cast<const __m128i*>(&data[i * sizeof(__m128i) + j * stride]));\n+      stage[0][j] = simd_batch(\n+          reinterpret_cast<const int8_t*>(&data[i * dTypeSize128bits + j * stride]),\n+          xsimd::unaligned_mode());\n     }\n     for (size_t step = 0; step < kNumStreamsLog2; ++step) {\n       for (size_t j = 0; j < kNumStreamsHalf; ++j) {\n         stage[step + 1U][j * 2] =\n-            _mm_unpacklo_epi8(stage[step][j], stage[step][kNumStreamsHalf + j]);\n+            xsimd::zip_lo(stage[step][j], stage[step][kNumStreamsHalf + j]);\n         stage[step + 1U][j * 2 + 1U] =\n-            _mm_unpackhi_epi8(stage[step][j], stage[step][kNumStreamsHalf + j]);\n+            xsimd::zip_hi(stage[step][j], stage[step][kNumStreamsHalf + j]);\n       }\n     }\n     for (size_t j = 0; j < kNumStreams; ++j) {\n-      _mm_storeu_si128(reinterpret_cast<__m128i*>(\n-                           &output_data[(i * kNumStreams + j) * sizeof(__m128i)]),\n-                       stage[kNumStreamsLog2][j]);\n+      xsimd::store_simd<int8_t, int8_t>(\n+          reinterpret_cast<int8_t*>(\n+              &output_data[(i * kNumStreams + j) * dTypeSize128bits]),\n+          stage[kNumStreamsLog2][j], xsimd::unaligned_mode());\n     }\n   }\n }\n+#endif  // ARROW_HAVE_SIMD_DECODE_SPLIT\n \n+#if defined(ARROW_HAVE_SSE4_2)\n\nReview comment:\n       Why not `ARROW_HAVE_SIMD_ENCODE_SPLIT`?\n\n##########\nFile path: cpp/src/parquet/encoding_benchmark.cc\n##########\n@@ -371,17 +371,22 @@ BENCHMARK(BM_ByteStreamSplitDecode_Double_Scalar)->Range(MIN_RANGE, MAX_RANGE);\n BENCHMARK(BM_ByteStreamSplitEncode_Float_Scalar)->Range(MIN_RANGE, MAX_RANGE);\n BENCHMARK(BM_ByteStreamSplitEncode_Double_Scalar)->Range(MIN_RANGE, MAX_RANGE);\n \n-#if defined(ARROW_HAVE_SSE4_2)\n-static void BM_ByteStreamSplitDecode_Float_Sse2(benchmark::State& state) {\n+#if defined(ARROW_HAVE_SSE4_2) || defined(ARROW_HAVE_NEON)\n+static void BM_ByteStreamSplitDecode_Float_128bit(benchmark::State& state) {\n\nReview comment:\n       Perhaps \"SIMD128\" rather than \"128bit\".\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -545,21 +557,23 @@ void ByteStreamSplitEncodeAvx512(const uint8_t* raw_values, const size_t num_val\n }\n #endif  // ARROW_HAVE_AVX512\n \n-#if defined(ARROW_HAVE_SIMD_SPLIT)\n+#if defined(ARROW_HAVE_SIMD_DECODE_SPLIT)\n template <typename T>\n void inline ByteStreamSplitDecodeSimd(const uint8_t* data, int64_t num_values,\n                                       int64_t stride, T* out) {\n #if defined(ARROW_HAVE_AVX512)\n   return ByteStreamSplitDecodeAvx512(data, num_values, stride, out);\n #elif defined(ARROW_HAVE_AVX2)\n   return ByteStreamSplitDecodeAvx2(data, num_values, stride, out);\n-#elif defined(ARROW_HAVE_SSE4_2)\n-  return ByteStreamSplitDecodeSse2(data, num_values, stride, out);\n+#elif defined(ARROW_HAVE_SSE4_2) || defined(ARROW_HAVE_NEON)\n\nReview comment:\n       Why not `ARROW_HAVE_SIMD_ENCODE_SPLIT`?\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -545,21 +557,23 @@ void ByteStreamSplitEncodeAvx512(const uint8_t* raw_values, const size_t num_val\n }\n #endif  // ARROW_HAVE_AVX512\n \n-#if defined(ARROW_HAVE_SIMD_SPLIT)\n+#if defined(ARROW_HAVE_SIMD_DECODE_SPLIT)\n template <typename T>\n void inline ByteStreamSplitDecodeSimd(const uint8_t* data, int64_t num_values,\n                                       int64_t stride, T* out) {\n #if defined(ARROW_HAVE_AVX512)\n   return ByteStreamSplitDecodeAvx512(data, num_values, stride, out);\n #elif defined(ARROW_HAVE_AVX2)\n   return ByteStreamSplitDecodeAvx2(data, num_values, stride, out);\n\nReview comment:\n       Can the AVX versions also be converted to use xsimd?\r\n   \n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -63,30 +71,34 @@ void ByteStreamSplitDecodeSse2(const uint8_t* data, int64_t num_values, int64_t\n   // Stage 1: AAAA BBBB CCCC DDDD\n   // Stage 2: ACAC ACAC BDBD BDBD\n   // Stage 3: ABCD ABCD ABCD ABCD\n-  __m128i stage[kNumStreamsLog2 + 1U][kNumStreams];\n+  simd_batch stage[kNumStreamsLog2 + 1U][kNumStreams];\n   constexpr size_t kNumStreamsHalf = kNumStreams / 2U;\n \n   for (int64_t i = 0; i < num_blocks; ++i) {\n     for (size_t j = 0; j < kNumStreams; ++j) {\n-      stage[0][j] = _mm_loadu_si128(\n-          reinterpret_cast<const __m128i*>(&data[i * sizeof(__m128i) + j * stride]));\n+      stage[0][j] = simd_batch(\n+          reinterpret_cast<const int8_t*>(&data[i * dTypeSize128bits + j * stride]),\n+          xsimd::unaligned_mode());\n     }\n     for (size_t step = 0; step < kNumStreamsLog2; ++step) {\n       for (size_t j = 0; j < kNumStreamsHalf; ++j) {\n         stage[step + 1U][j * 2] =\n-            _mm_unpacklo_epi8(stage[step][j], stage[step][kNumStreamsHalf + j]);\n+            xsimd::zip_lo(stage[step][j], stage[step][kNumStreamsHalf + j]);\n         stage[step + 1U][j * 2 + 1U] =\n-            _mm_unpackhi_epi8(stage[step][j], stage[step][kNumStreamsHalf + j]);\n+            xsimd::zip_hi(stage[step][j], stage[step][kNumStreamsHalf + j]);\n       }\n     }\n     for (size_t j = 0; j < kNumStreams; ++j) {\n-      _mm_storeu_si128(reinterpret_cast<__m128i*>(\n-                           &output_data[(i * kNumStreams + j) * sizeof(__m128i)]),\n-                       stage[kNumStreamsLog2][j]);\n+      xsimd::store_simd<int8_t, int8_t>(\n+          reinterpret_cast<int8_t*>(\n\nReview comment:\n       Is the `reinterpret_cast` still needed here?\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -63,30 +71,34 @@ void ByteStreamSplitDecodeSse2(const uint8_t* data, int64_t num_values, int64_t\n   // Stage 1: AAAA BBBB CCCC DDDD\n   // Stage 2: ACAC ACAC BDBD BDBD\n   // Stage 3: ABCD ABCD ABCD ABCD\n-  __m128i stage[kNumStreamsLog2 + 1U][kNumStreams];\n+  simd_batch stage[kNumStreamsLog2 + 1U][kNumStreams];\n   constexpr size_t kNumStreamsHalf = kNumStreams / 2U;\n \n   for (int64_t i = 0; i < num_blocks; ++i) {\n     for (size_t j = 0; j < kNumStreams; ++j) {\n-      stage[0][j] = _mm_loadu_si128(\n-          reinterpret_cast<const __m128i*>(&data[i * sizeof(__m128i) + j * stride]));\n+      stage[0][j] = simd_batch(\n+          reinterpret_cast<const int8_t*>(&data[i * dTypeSize128bits + j * stride]),\n\nReview comment:\n       Is the `reinterpret_cast` still needed here?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T16:16:28.108+0000",
                    "updated": "2021-05-12T16:16:28.108+0000",
                    "started": "2021-05-12T16:16:28.108+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595446",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/595776",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi commented on a change in pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#discussion_r631512360\n\n\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -23,25 +23,33 @@\n #include <stdint.h>\n #include <algorithm>\n \n+#if defined(ARROW_HAVE_NEON) || defined(ARROW_HAVE_SSE4_2)\n+#include <xsimd/xsimd.hpp>\n+// Enable the SIMD for ByteStreamSplit Decoder\n+#define ARROW_HAVE_SIMD_DECODE_SPLIT\n+#endif\n+\n #ifdef ARROW_HAVE_SSE4_2\n\nReview comment:\n       Hi pitrou, thanks for your comments.\r\n   \r\n   I splited `ARROW_HAVE_SIMD_SPLIT` into `ARROW_HAVE_SIMD_DECODE_SPLIT` and `ARROW_HAVE_SIMD_ENCODE_SPLIT` which are used for `ByteStreamSplitDecode` and `ByteStreamSplitEncode` respectively.\r\n   This PR is for ByteStreamSplitDecode, so not enabling `Encode ` here for Neon.\r\n   \r\n   How about to enable `Encode` and convert `ByteStreamSplitEncode` to xsimd in another PR and Jira? \r\n   Or, do you prefer putting everything in this single PR? \r\n   Thanks. :) \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T01:56:43.457+0000",
                    "updated": "2021-05-13T01:56:43.457+0000",
                    "started": "2021-05-13T01:56:43.456+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595776",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/595897",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi commented on a change in pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#discussion_r631587854\n\n\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -23,25 +23,33 @@\n #include <stdint.h>\n #include <algorithm>\n \n+#if defined(ARROW_HAVE_NEON) || defined(ARROW_HAVE_SSE4_2)\n+#include <xsimd/xsimd.hpp>\n+// Enable the SIMD for ByteStreamSplit Decoder\n+#define ARROW_HAVE_SIMD_DECODE_SPLIT\n+#endif\n+\n #ifdef ARROW_HAVE_SSE4_2\n-// Enable the SIMD for ByteStreamSplit Encoder/Decoder\n-#define ARROW_HAVE_SIMD_SPLIT\n+// Enable the SIMD for ByteStreamSplit Encoder\n+#define ARROW_HAVE_SIMD_ENCODE_SPLIT\n #endif  // ARROW_HAVE_SSE4_2\n \n namespace arrow {\n namespace util {\n namespace internal {\n \n-#if defined(ARROW_HAVE_SSE4_2)\n+#ifdef ARROW_HAVE_SIMD_DECODE_SPLIT\n template <typename T>\n-void ByteStreamSplitDecodeSse2(const uint8_t* data, int64_t num_values, int64_t stride,\n-                               T* out) {\n+void ByteStreamSplitDecode128bit(const uint8_t* data, int64_t num_values, int64_t stride,\n\nReview comment:\n       Agreed, updated\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -23,25 +23,33 @@\n #include <stdint.h>\n #include <algorithm>\n \n+#if defined(ARROW_HAVE_NEON) || defined(ARROW_HAVE_SSE4_2)\n+#include <xsimd/xsimd.hpp>\n+// Enable the SIMD for ByteStreamSplit Decoder\n+#define ARROW_HAVE_SIMD_DECODE_SPLIT\n+#endif\n+\n #ifdef ARROW_HAVE_SSE4_2\n-// Enable the SIMD for ByteStreamSplit Encoder/Decoder\n-#define ARROW_HAVE_SIMD_SPLIT\n+// Enable the SIMD for ByteStreamSplit Encoder\n+#define ARROW_HAVE_SIMD_ENCODE_SPLIT\n #endif  // ARROW_HAVE_SSE4_2\n \n namespace arrow {\n namespace util {\n namespace internal {\n \n-#if defined(ARROW_HAVE_SSE4_2)\n+#ifdef ARROW_HAVE_SIMD_DECODE_SPLIT\n template <typename T>\n-void ByteStreamSplitDecodeSse2(const uint8_t* data, int64_t num_values, int64_t stride,\n-                               T* out) {\n+void ByteStreamSplitDecode128bit(const uint8_t* data, int64_t num_values, int64_t stride,\n+                                 T* out) {\n+  using simd_batch = xsimd::batch<int8_t, 16>;\n+  constexpr size_t dTypeSize128bits = sizeof(int8_t) * 16;\n\nReview comment:\n       Updated, thanks.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T06:05:42.435+0000",
                    "updated": "2021-05-13T06:05:42.435+0000",
                    "started": "2021-05-13T06:05:42.435+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595897",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/595898",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi commented on a change in pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#discussion_r631588095\n\n\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -63,30 +71,34 @@ void ByteStreamSplitDecodeSse2(const uint8_t* data, int64_t num_values, int64_t\n   // Stage 1: AAAA BBBB CCCC DDDD\n   // Stage 2: ACAC ACAC BDBD BDBD\n   // Stage 3: ABCD ABCD ABCD ABCD\n-  __m128i stage[kNumStreamsLog2 + 1U][kNumStreams];\n+  simd_batch stage[kNumStreamsLog2 + 1U][kNumStreams];\n   constexpr size_t kNumStreamsHalf = kNumStreams / 2U;\n \n   for (int64_t i = 0; i < num_blocks; ++i) {\n     for (size_t j = 0; j < kNumStreams; ++j) {\n-      stage[0][j] = _mm_loadu_si128(\n-          reinterpret_cast<const __m128i*>(&data[i * sizeof(__m128i) + j * stride]));\n+      stage[0][j] = simd_batch(\n+          reinterpret_cast<const int8_t*>(&data[i * dTypeSize128bits + j * stride]),\n+          xsimd::unaligned_mode());\n     }\n     for (size_t step = 0; step < kNumStreamsLog2; ++step) {\n       for (size_t j = 0; j < kNumStreamsHalf; ++j) {\n         stage[step + 1U][j * 2] =\n-            _mm_unpacklo_epi8(stage[step][j], stage[step][kNumStreamsHalf + j]);\n+            xsimd::zip_lo(stage[step][j], stage[step][kNumStreamsHalf + j]);\n         stage[step + 1U][j * 2 + 1U] =\n-            _mm_unpackhi_epi8(stage[step][j], stage[step][kNumStreamsHalf + j]);\n+            xsimd::zip_hi(stage[step][j], stage[step][kNumStreamsHalf + j]);\n       }\n     }\n     for (size_t j = 0; j < kNumStreams; ++j) {\n-      _mm_storeu_si128(reinterpret_cast<__m128i*>(\n-                           &output_data[(i * kNumStreams + j) * sizeof(__m128i)]),\n-                       stage[kNumStreamsLog2][j]);\n+      xsimd::store_simd<int8_t, int8_t>(\n+          reinterpret_cast<int8_t*>(\n\nReview comment:\n       Yes\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T06:06:18.121+0000",
                    "updated": "2021-05-13T06:06:18.121+0000",
                    "started": "2021-05-13T06:06:18.121+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595898",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/595899",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi commented on a change in pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#discussion_r631588095\n\n\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -63,30 +71,34 @@ void ByteStreamSplitDecodeSse2(const uint8_t* data, int64_t num_values, int64_t\n   // Stage 1: AAAA BBBB CCCC DDDD\n   // Stage 2: ACAC ACAC BDBD BDBD\n   // Stage 3: ABCD ABCD ABCD ABCD\n-  __m128i stage[kNumStreamsLog2 + 1U][kNumStreams];\n+  simd_batch stage[kNumStreamsLog2 + 1U][kNumStreams];\n   constexpr size_t kNumStreamsHalf = kNumStreams / 2U;\n \n   for (int64_t i = 0; i < num_blocks; ++i) {\n     for (size_t j = 0; j < kNumStreams; ++j) {\n-      stage[0][j] = _mm_loadu_si128(\n-          reinterpret_cast<const __m128i*>(&data[i * sizeof(__m128i) + j * stride]));\n+      stage[0][j] = simd_batch(\n+          reinterpret_cast<const int8_t*>(&data[i * dTypeSize128bits + j * stride]),\n+          xsimd::unaligned_mode());\n     }\n     for (size_t step = 0; step < kNumStreamsLog2; ++step) {\n       for (size_t j = 0; j < kNumStreamsHalf; ++j) {\n         stage[step + 1U][j * 2] =\n-            _mm_unpacklo_epi8(stage[step][j], stage[step][kNumStreamsHalf + j]);\n+            xsimd::zip_lo(stage[step][j], stage[step][kNumStreamsHalf + j]);\n         stage[step + 1U][j * 2 + 1U] =\n-            _mm_unpackhi_epi8(stage[step][j], stage[step][kNumStreamsHalf + j]);\n+            xsimd::zip_hi(stage[step][j], stage[step][kNumStreamsHalf + j]);\n       }\n     }\n     for (size_t j = 0; j < kNumStreams; ++j) {\n-      _mm_storeu_si128(reinterpret_cast<__m128i*>(\n-                           &output_data[(i * kNumStreams + j) * sizeof(__m128i)]),\n-                       stage[kNumStreamsLog2][j]);\n+      xsimd::store_simd<int8_t, int8_t>(\n+          reinterpret_cast<int8_t*>(\n\nReview comment:\n       Declared `simd_batch<uint8_t, 16>` and no need `reinterpret_cast` here.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T06:07:52.960+0000",
                    "updated": "2021-05-13T06:07:52.960+0000",
                    "started": "2021-05-13T06:07:52.960+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595899",
                    "issueId": "13356891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356891/worklog/595900",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guyuqi commented on a change in pull request #9424:\nURL: https://github.com/apache/arrow/pull/9424#discussion_r631588738\n\n\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -63,30 +71,34 @@ void ByteStreamSplitDecodeSse2(const uint8_t* data, int64_t num_values, int64_t\n   // Stage 1: AAAA BBBB CCCC DDDD\n   // Stage 2: ACAC ACAC BDBD BDBD\n   // Stage 3: ABCD ABCD ABCD ABCD\n-  __m128i stage[kNumStreamsLog2 + 1U][kNumStreams];\n+  simd_batch stage[kNumStreamsLog2 + 1U][kNumStreams];\n   constexpr size_t kNumStreamsHalf = kNumStreams / 2U;\n \n   for (int64_t i = 0; i < num_blocks; ++i) {\n     for (size_t j = 0; j < kNumStreams; ++j) {\n-      stage[0][j] = _mm_loadu_si128(\n-          reinterpret_cast<const __m128i*>(&data[i * sizeof(__m128i) + j * stride]));\n+      stage[0][j] = simd_batch(\n+          reinterpret_cast<const int8_t*>(&data[i * dTypeSize128bits + j * stride]),\n+          xsimd::unaligned_mode());\n     }\n     for (size_t step = 0; step < kNumStreamsLog2; ++step) {\n       for (size_t j = 0; j < kNumStreamsHalf; ++j) {\n         stage[step + 1U][j * 2] =\n-            _mm_unpacklo_epi8(stage[step][j], stage[step][kNumStreamsHalf + j]);\n+            xsimd::zip_lo(stage[step][j], stage[step][kNumStreamsHalf + j]);\n         stage[step + 1U][j * 2 + 1U] =\n-            _mm_unpackhi_epi8(stage[step][j], stage[step][kNumStreamsHalf + j]);\n+            xsimd::zip_hi(stage[step][j], stage[step][kNumStreamsHalf + j]);\n       }\n     }\n     for (size_t j = 0; j < kNumStreams; ++j) {\n-      _mm_storeu_si128(reinterpret_cast<__m128i*>(\n-                           &output_data[(i * kNumStreams + j) * sizeof(__m128i)]),\n-                       stage[kNumStreamsLog2][j]);\n+      xsimd::store_simd<int8_t, int8_t>(\n\nReview comment:\n       It makes sense, thanks.\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -63,30 +71,34 @@ void ByteStreamSplitDecodeSse2(const uint8_t* data, int64_t num_values, int64_t\n   // Stage 1: AAAA BBBB CCCC DDDD\n   // Stage 2: ACAC ACAC BDBD BDBD\n   // Stage 3: ABCD ABCD ABCD ABCD\n-  __m128i stage[kNumStreamsLog2 + 1U][kNumStreams];\n+  simd_batch stage[kNumStreamsLog2 + 1U][kNumStreams];\n   constexpr size_t kNumStreamsHalf = kNumStreams / 2U;\n \n   for (int64_t i = 0; i < num_blocks; ++i) {\n     for (size_t j = 0; j < kNumStreams; ++j) {\n-      stage[0][j] = _mm_loadu_si128(\n-          reinterpret_cast<const __m128i*>(&data[i * sizeof(__m128i) + j * stride]));\n+      stage[0][j] = simd_batch(\n+          reinterpret_cast<const int8_t*>(&data[i * dTypeSize128bits + j * stride]),\n+          xsimd::unaligned_mode());\n     }\n     for (size_t step = 0; step < kNumStreamsLog2; ++step) {\n       for (size_t j = 0; j < kNumStreamsHalf; ++j) {\n         stage[step + 1U][j * 2] =\n-            _mm_unpacklo_epi8(stage[step][j], stage[step][kNumStreamsHalf + j]);\n+            xsimd::zip_lo(stage[step][j], stage[step][kNumStreamsHalf + j]);\n         stage[step + 1U][j * 2 + 1U] =\n-            _mm_unpackhi_epi8(stage[step][j], stage[step][kNumStreamsHalf + j]);\n+            xsimd::zip_hi(stage[step][j], stage[step][kNumStreamsHalf + j]);\n       }\n     }\n     for (size_t j = 0; j < kNumStreams; ++j) {\n-      _mm_storeu_si128(reinterpret_cast<__m128i*>(\n-                           &output_data[(i * kNumStreams + j) * sizeof(__m128i)]),\n-                       stage[kNumStreamsLog2][j]);\n+      xsimd::store_simd<int8_t, int8_t>(\n+          reinterpret_cast<int8_t*>(\n+              &output_data[(i * kNumStreams + j) * dTypeSize128bits]),\n+          stage[kNumStreamsLog2][j], xsimd::unaligned_mode());\n     }\n   }\n }\n+#endif  // ARROW_HAVE_SIMD_DECODE_SPLIT\n \n+#if defined(ARROW_HAVE_SSE4_2)\n\nReview comment:\n       Updated.\n\n##########\nFile path: cpp/src/arrow/util/byte_stream_split.h\n##########\n@@ -545,21 +557,23 @@ void ByteStreamSplitEncodeAvx512(const uint8_t* raw_values, const size_t num_val\n }\n #endif  // ARROW_HAVE_AVX512\n \n-#if defined(ARROW_HAVE_SIMD_SPLIT)\n+#if defined(ARROW_HAVE_SIMD_DECODE_SPLIT)\n template <typename T>\n void inline ByteStreamSplitDecodeSimd(const uint8_t* data, int64_t num_values,\n                                       int64_t stride, T* out) {\n #if defined(ARROW_HAVE_AVX512)\n   return ByteStreamSplitDecodeAvx512(data, num_values, stride, out);\n #elif defined(ARROW_HAVE_AVX2)\n   return ByteStreamSplitDecodeAvx2(data, num_values, stride, out);\n-#elif defined(ARROW_HAVE_SSE4_2)\n-  return ByteStreamSplitDecodeSse2(data, num_values, stride, out);\n+#elif defined(ARROW_HAVE_SSE4_2) || defined(ARROW_HAVE_NEON)\n\nReview comment:\n       This branch is included in `#if defined(ARROW_HAVE_SIMD_DECODE_SPLIT)`.\r\n   IMO, it seems we shoud separated them by ARCH Macro.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T06:08:36.348+0000",
                    "updated": "2021-05-13T06:08:36.348+0000",
                    "started": "2021-05-13T06:08:36.348+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595900",
                    "issueId": "13356891"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 14400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@55fdbf7c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@40d206eb[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7bef3db[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@570b4899[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@23f3afc5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1921ae5e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@69f1a68a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@64b374ad[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a806279[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4ec76429[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2a665e8d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@550f5170[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 14400,
        "customfield_12312520": null,
        "customfield_12312521": "2021-02-05 02:26:17.0",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-07-18T02:10:20.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11502/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2021-02-05T02:26:17.000+0000",
        "updated": "2022-07-18T02:10:20.000+0000",
        "timeoriginalestimate": null,
        "description": "Leverage the Arm64 Neon extension to improve ByteStreamSplitDecode performance.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 14400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Optimize Arrow ByteStreamSplitDecode with Neon",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [],
            "maxResults": 0,
            "total": 0,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ndqg:",
        "customfield_12314139": null
    }
}