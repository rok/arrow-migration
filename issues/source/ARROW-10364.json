{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13336574",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336574",
    "key": "ARROW-10364",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335702",
                "id": "12335702",
                "name": "Archery"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334506",
                "id": "12334506",
                "name": "Developer Tools"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10364/votes",
            "votes": 0,
            "hasVoted": false
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/6",
            "id": "6",
            "description": "A new unit, integration or system test.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/issuetypes/requirement.png",
            "name": "Test",
            "subtask": false
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4aaf302a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@368e8852[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@40a0dd40[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2ae011e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6e0064c1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7149da89[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3745433d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4511123a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@285a4035[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@17f85a25[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ab9bf4c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4774ece3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Mar 30 09:45:13 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-03-30T09:45:13.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10364/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-10-21T20:29:46.000+0000",
        "updated": "2021-03-30T09:45:36.000+0000",
        "timeoriginalestimate": null,
        "description": "https://github.com/apache/arrow/runs/1276765550?check_suite_focus=true\r\n\r\n{noformat}\r\n=================================== FAILURES ===================================\r\n_____________________________ test_release_basics ______________________________\r\n\r\nfake_jira = <test_release.FakeJira object at 0x7fac73641630>\r\n\r\n    def test_release_basics(fake_jira):\r\n>       r = Release.from_jira(\"1.0.0\", jira=fake_jira)\r\n\r\narchery/tests/test_release.py:202: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\narchery/release.py:281: in from_jira\r\n    version = jira.project_version(version, project='ARROW')\r\narchery/release.py:93: in project_version\r\n    return versions[versions.index(version_string)]\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:203: in wrapper\r\n    return operator(self, other)\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:573: in __eq__\r\n    return self.compare(other) == 0\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:493: in compare\r\n    other = cls.parse(other)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncls = <class 'archery.release.Version'>, version = '1.0.0'\r\n\r\n        @classmethod\r\n        def parse(cls, version):\r\n            \"\"\"\r\n            Parse version string to a VersionInfo instance.\r\n    \r\n            :param version: version string\r\n            :return: a :class:`VersionInfo` instance\r\n            :raises: :class:`ValueError`\r\n            :rtype: :class:`VersionInfo`\r\n    \r\n            .. versionchanged:: 2.11.0\r\n               Changed method from static to classmethod to\r\n               allow subclasses.\r\n    \r\n            >>> semver.VersionInfo.parse('3.4.5-pre.2+build.4')\r\n            VersionInfo(major=3, minor=4, patch=5, \\\r\n    prerelease='pre.2', build='build.4')\r\n            \"\"\"\r\n            match = cls._REGEX.match(ensure_str(version))\r\n            if match is None:\r\n                raise ValueError(\"%s is not valid SemVer string\" % version)\r\n    \r\n            version_parts = match.groupdict()\r\n    \r\n            version_parts[\"major\"] = int(version_parts[\"major\"])\r\n            version_parts[\"minor\"] = int(version_parts[\"minor\"])\r\n            version_parts[\"patch\"] = int(version_parts[\"patch\"])\r\n    \r\n>           return cls(**version_parts)\r\nE           TypeError: __init__() got an unexpected keyword argument 'major'\r\n\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:734: TypeError\r\n________________________ test_previous_and_next_release ________________________\r\n\r\nfake_jira = <test_release.FakeJira object at 0x7fac7372d668>\r\n\r\n    def test_previous_and_next_release(fake_jira):\r\n>       r = Release.from_jira(\"3.0.0\", jira=fake_jira)\r\n\r\narchery/tests/test_release.py:229: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\narchery/release.py:281: in from_jira\r\n    version = jira.project_version(version, project='ARROW')\r\narchery/release.py:93: in project_version\r\n    return versions[versions.index(version_string)]\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:203: in wrapper\r\n    return operator(self, other)\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:573: in __eq__\r\n    return self.compare(other) == 0\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:493: in compare\r\n    other = cls.parse(other)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncls = <class 'archery.release.Version'>, version = '3.0.0'\r\n\r\n        @classmethod\r\n        def parse(cls, version):\r\n            \"\"\"\r\n            Parse version string to a VersionInfo instance.\r\n    \r\n            :param version: version string\r\n            :return: a :class:`VersionInfo` instance\r\n            :raises: :class:`ValueError`\r\n            :rtype: :class:`VersionInfo`\r\n    \r\n            .. versionchanged:: 2.11.0\r\n               Changed method from static to classmethod to\r\n               allow subclasses.\r\n    \r\n            >>> semver.VersionInfo.parse('3.4.5-pre.2+build.4')\r\n            VersionInfo(major=3, minor=4, patch=5, \\\r\n    prerelease='pre.2', build='build.4')\r\n            \"\"\"\r\n            match = cls._REGEX.match(ensure_str(version))\r\n            if match is None:\r\n                raise ValueError(\"%s is not valid SemVer string\" % version)\r\n    \r\n            version_parts = match.groupdict()\r\n    \r\n            version_parts[\"major\"] = int(version_parts[\"major\"])\r\n            version_parts[\"minor\"] = int(version_parts[\"minor\"])\r\n            version_parts[\"patch\"] = int(version_parts[\"patch\"])\r\n    \r\n>           return cls(**version_parts)\r\nE           TypeError: __init__() got an unexpected keyword argument 'major'\r\n\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:734: TypeError\r\n_____________________________ test_release_issues ______________________________\r\n\r\nfake_jira = <test_release.FakeJira object at 0x7fac73896588>\r\n\r\n    def test_release_issues(fake_jira):\r\n        # major release issues\r\n>       r = Release.from_jira(\"1.0.0\", jira=fake_jira)\r\n\r\narchery/tests/test_release.py:272: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\narchery/release.py:281: in from_jira\r\n    version = jira.project_version(version, project='ARROW')\r\narchery/release.py:93: in project_version\r\n    return versions[versions.index(version_string)]\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:203: in wrapper\r\n    return operator(self, other)\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:573: in __eq__\r\n    return self.compare(other) == 0\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:493: in compare\r\n    other = cls.parse(other)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncls = <class 'archery.release.Version'>, version = '1.0.0'\r\n\r\n        @classmethod\r\n        def parse(cls, version):\r\n            \"\"\"\r\n            Parse version string to a VersionInfo instance.\r\n    \r\n            :param version: version string\r\n            :return: a :class:`VersionInfo` instance\r\n            :raises: :class:`ValueError`\r\n            :rtype: :class:`VersionInfo`\r\n    \r\n            .. versionchanged:: 2.11.0\r\n               Changed method from static to classmethod to\r\n               allow subclasses.\r\n    \r\n            >>> semver.VersionInfo.parse('3.4.5-pre.2+build.4')\r\n            VersionInfo(major=3, minor=4, patch=5, \\\r\n    prerelease='pre.2', build='build.4')\r\n            \"\"\"\r\n            match = cls._REGEX.match(ensure_str(version))\r\n            if match is None:\r\n                raise ValueError(\"%s is not valid SemVer string\" % version)\r\n    \r\n            version_parts = match.groupdict()\r\n    \r\n            version_parts[\"major\"] = int(version_parts[\"major\"])\r\n            version_parts[\"minor\"] = int(version_parts[\"minor\"])\r\n            version_parts[\"patch\"] = int(version_parts[\"patch\"])\r\n    \r\n>           return cls(**version_parts)\r\nE           TypeError: __init__() got an unexpected keyword argument 'major'\r\n\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:734: TypeError\r\n_______________________ test_release_commits[1.0.0-771] ________________________\r\n\r\nfake_jira = <test_release.FakeJira object at 0x7fac73856e10>, version = '1.0.0'\r\nncommits = 771\r\n\r\n    @pytest.mark.parametrize(('version', 'ncommits'), [\r\n        (\"1.0.0\", 771),\r\n        (\"0.17.1\", 27),\r\n        (\"0.17.0\", 569),\r\n        (\"0.15.1\", 41)\r\n    ])\r\n    def test_release_commits(fake_jira, version, ncommits):\r\n>       r = Release.from_jira(version, jira=fake_jira)\r\n\r\narchery/tests/test_release.py:313: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\narchery/release.py:281: in from_jira\r\n    version = jira.project_version(version, project='ARROW')\r\narchery/release.py:93: in project_version\r\n    return versions[versions.index(version_string)]\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:203: in wrapper\r\n    return operator(self, other)\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:573: in __eq__\r\n    return self.compare(other) == 0\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:493: in compare\r\n    other = cls.parse(other)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncls = <class 'archery.release.Version'>, version = '1.0.0'\r\n\r\n        @classmethod\r\n        def parse(cls, version):\r\n            \"\"\"\r\n            Parse version string to a VersionInfo instance.\r\n    \r\n            :param version: version string\r\n            :return: a :class:`VersionInfo` instance\r\n            :raises: :class:`ValueError`\r\n            :rtype: :class:`VersionInfo`\r\n    \r\n            .. versionchanged:: 2.11.0\r\n               Changed method from static to classmethod to\r\n               allow subclasses.\r\n    \r\n            >>> semver.VersionInfo.parse('3.4.5-pre.2+build.4')\r\n            VersionInfo(major=3, minor=4, patch=5, \\\r\n    prerelease='pre.2', build='build.4')\r\n            \"\"\"\r\n            match = cls._REGEX.match(ensure_str(version))\r\n            if match is None:\r\n                raise ValueError(\"%s is not valid SemVer string\" % version)\r\n    \r\n            version_parts = match.groupdict()\r\n    \r\n            version_parts[\"major\"] = int(version_parts[\"major\"])\r\n            version_parts[\"minor\"] = int(version_parts[\"minor\"])\r\n            version_parts[\"patch\"] = int(version_parts[\"patch\"])\r\n    \r\n>           return cls(**version_parts)\r\nE           TypeError: __init__() got an unexpected keyword argument 'major'\r\n\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:734: TypeError\r\n_______________________ test_release_commits[0.17.1-27] ________________________\r\n\r\nfake_jira = <test_release.FakeJira object at 0x7fac739019e8>, version = '0.17.1'\r\nncommits = 27\r\n\r\n    @pytest.mark.parametrize(('version', 'ncommits'), [\r\n        (\"1.0.0\", 771),\r\n        (\"0.17.1\", 27),\r\n        (\"0.17.0\", 569),\r\n        (\"0.15.1\", 41)\r\n    ])\r\n    def test_release_commits(fake_jira, version, ncommits):\r\n>       r = Release.from_jira(version, jira=fake_jira)\r\n\r\narchery/tests/test_release.py:313: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\narchery/release.py:281: in from_jira\r\n    version = jira.project_version(version, project='ARROW')\r\narchery/release.py:93: in project_version\r\n    return versions[versions.index(version_string)]\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:203: in wrapper\r\n    return operator(self, other)\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:573: in __eq__\r\n    return self.compare(other) == 0\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:493: in compare\r\n    other = cls.parse(other)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncls = <class 'archery.release.Version'>, version = '0.17.1'\r\n\r\n        @classmethod\r\n        def parse(cls, version):\r\n            \"\"\"\r\n            Parse version string to a VersionInfo instance.\r\n    \r\n            :param version: version string\r\n            :return: a :class:`VersionInfo` instance\r\n            :raises: :class:`ValueError`\r\n            :rtype: :class:`VersionInfo`\r\n    \r\n            .. versionchanged:: 2.11.0\r\n               Changed method from static to classmethod to\r\n               allow subclasses.\r\n    \r\n            >>> semver.VersionInfo.parse('3.4.5-pre.2+build.4')\r\n            VersionInfo(major=3, minor=4, patch=5, \\\r\n    prerelease='pre.2', build='build.4')\r\n            \"\"\"\r\n            match = cls._REGEX.match(ensure_str(version))\r\n            if match is None:\r\n                raise ValueError(\"%s is not valid SemVer string\" % version)\r\n    \r\n            version_parts = match.groupdict()\r\n    \r\n            version_parts[\"major\"] = int(version_parts[\"major\"])\r\n            version_parts[\"minor\"] = int(version_parts[\"minor\"])\r\n            version_parts[\"patch\"] = int(version_parts[\"patch\"])\r\n    \r\n>           return cls(**version_parts)\r\nE           TypeError: __init__() got an unexpected keyword argument 'major'\r\n\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:734: TypeError\r\n_______________________ test_release_commits[0.17.0-569] _______________________\r\n\r\nfake_jira = <test_release.FakeJira object at 0x7fac73823198>, version = '0.17.0'\r\nncommits = 569\r\n\r\n    @pytest.mark.parametrize(('version', 'ncommits'), [\r\n        (\"1.0.0\", 771),\r\n        (\"0.17.1\", 27),\r\n        (\"0.17.0\", 569),\r\n        (\"0.15.1\", 41)\r\n    ])\r\n    def test_release_commits(fake_jira, version, ncommits):\r\n>       r = Release.from_jira(version, jira=fake_jira)\r\n\r\narchery/tests/test_release.py:313: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\narchery/release.py:281: in from_jira\r\n    version = jira.project_version(version, project='ARROW')\r\narchery/release.py:93: in project_version\r\n    return versions[versions.index(version_string)]\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:203: in wrapper\r\n    return operator(self, other)\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:573: in __eq__\r\n    return self.compare(other) == 0\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:493: in compare\r\n    other = cls.parse(other)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncls = <class 'archery.release.Version'>, version = '0.17.0'\r\n\r\n        @classmethod\r\n        def parse(cls, version):\r\n            \"\"\"\r\n            Parse version string to a VersionInfo instance.\r\n    \r\n            :param version: version string\r\n            :return: a :class:`VersionInfo` instance\r\n            :raises: :class:`ValueError`\r\n            :rtype: :class:`VersionInfo`\r\n    \r\n            .. versionchanged:: 2.11.0\r\n               Changed method from static to classmethod to\r\n               allow subclasses.\r\n    \r\n            >>> semver.VersionInfo.parse('3.4.5-pre.2+build.4')\r\n            VersionInfo(major=3, minor=4, patch=5, \\\r\n    prerelease='pre.2', build='build.4')\r\n            \"\"\"\r\n            match = cls._REGEX.match(ensure_str(version))\r\n            if match is None:\r\n                raise ValueError(\"%s is not valid SemVer string\" % version)\r\n    \r\n            version_parts = match.groupdict()\r\n    \r\n            version_parts[\"major\"] = int(version_parts[\"major\"])\r\n            version_parts[\"minor\"] = int(version_parts[\"minor\"])\r\n            version_parts[\"patch\"] = int(version_parts[\"patch\"])\r\n    \r\n>           return cls(**version_parts)\r\nE           TypeError: __init__() got an unexpected keyword argument 'major'\r\n\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:734: TypeError\r\n_______________________ test_release_commits[0.15.1-41] ________________________\r\n\r\nfake_jira = <test_release.FakeJira object at 0x7fac73942470>, version = '0.15.1'\r\nncommits = 41\r\n\r\n    @pytest.mark.parametrize(('version', 'ncommits'), [\r\n        (\"1.0.0\", 771),\r\n        (\"0.17.1\", 27),\r\n        (\"0.17.0\", 569),\r\n        (\"0.15.1\", 41)\r\n    ])\r\n    def test_release_commits(fake_jira, version, ncommits):\r\n>       r = Release.from_jira(version, jira=fake_jira)\r\n\r\narchery/tests/test_release.py:313: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\narchery/release.py:281: in from_jira\r\n    version = jira.project_version(version, project='ARROW')\r\narchery/release.py:93: in project_version\r\n    return versions[versions.index(version_string)]\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:203: in wrapper\r\n    return operator(self, other)\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:573: in __eq__\r\n    return self.compare(other) == 0\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:493: in compare\r\n    other = cls.parse(other)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncls = <class 'archery.release.Version'>, version = '0.15.1'\r\n\r\n        @classmethod\r\n        def parse(cls, version):\r\n            \"\"\"\r\n            Parse version string to a VersionInfo instance.\r\n    \r\n            :param version: version string\r\n            :return: a :class:`VersionInfo` instance\r\n            :raises: :class:`ValueError`\r\n            :rtype: :class:`VersionInfo`\r\n    \r\n            .. versionchanged:: 2.11.0\r\n               Changed method from static to classmethod to\r\n               allow subclasses.\r\n    \r\n            >>> semver.VersionInfo.parse('3.4.5-pre.2+build.4')\r\n            VersionInfo(major=3, minor=4, patch=5, \\\r\n    prerelease='pre.2', build='build.4')\r\n            \"\"\"\r\n            match = cls._REGEX.match(ensure_str(version))\r\n            if match is None:\r\n                raise ValueError(\"%s is not valid SemVer string\" % version)\r\n    \r\n            version_parts = match.groupdict()\r\n    \r\n            version_parts[\"major\"] = int(version_parts[\"major\"])\r\n            version_parts[\"minor\"] = int(version_parts[\"minor\"])\r\n            version_parts[\"patch\"] = int(version_parts[\"patch\"])\r\n    \r\n>           return cls(**version_parts)\r\nE           TypeError: __init__() got an unexpected keyword argument 'major'\r\n\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:734: TypeError\r\n_______________________ test_maintenance_patch_selection _______________________\r\n\r\nfake_jira = <test_release.FakeJira object at 0x7fac73620128>\r\n\r\n    def test_maintenance_patch_selection(fake_jira):\r\n>       r = Release.from_jira(\"0.17.1\", jira=fake_jira)\r\n\r\narchery/tests/test_release.py:322: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\narchery/release.py:281: in from_jira\r\n    version = jira.project_version(version, project='ARROW')\r\narchery/release.py:93: in project_version\r\n    return versions[versions.index(version_string)]\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:203: in wrapper\r\n    return operator(self, other)\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:573: in __eq__\r\n    return self.compare(other) == 0\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:493: in compare\r\n    other = cls.parse(other)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ncls = <class 'archery.release.Version'>, version = '0.17.1'\r\n\r\n        @classmethod\r\n        def parse(cls, version):\r\n            \"\"\"\r\n            Parse version string to a VersionInfo instance.\r\n    \r\n            :param version: version string\r\n            :return: a :class:`VersionInfo` instance\r\n            :raises: :class:`ValueError`\r\n            :rtype: :class:`VersionInfo`\r\n    \r\n            .. versionchanged:: 2.11.0\r\n               Changed method from static to classmethod to\r\n               allow subclasses.\r\n    \r\n            >>> semver.VersionInfo.parse('3.4.5-pre.2+build.4')\r\n            VersionInfo(major=3, minor=4, patch=5, \\\r\n    prerelease='pre.2', build='build.4')\r\n            \"\"\"\r\n            match = cls._REGEX.match(ensure_str(version))\r\n            if match is None:\r\n                raise ValueError(\"%s is not valid SemVer string\" % version)\r\n    \r\n            version_parts = match.groupdict()\r\n    \r\n            version_parts[\"major\"] = int(version_parts[\"major\"])\r\n            version_parts[\"minor\"] = int(version_parts[\"minor\"])\r\n            version_parts[\"patch\"] = int(version_parts[\"patch\"])\r\n    \r\n>           return cls(**version_parts)\r\nE           TypeError: __init__() got an unexpected keyword argument 'major'\r\n\r\n/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/semver.py:734: TypeError\r\n=============================== warnings summary ===============================\r\n../../../../../../../opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/jwt/utils.py:8\r\n  /opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/jwt/utils.py:8: CryptographyDeprecationWarning: Python 3.5 support will be dropped in the next release ofcryptography. Please upgrade your Python.\r\n    from cryptography.hazmat.primitives.asymmetric.utils import (\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/warnings.html\r\n=========================== short test summary info ============================\r\nFAILED archery/tests/test_release.py::test_release_basics - TypeError: __init...\r\nFAILED archery/tests/test_release.py::test_previous_and_next_release - TypeEr...\r\nFAILED archery/tests/test_release.py::test_release_issues - TypeError: __init...\r\nFAILED archery/tests/test_release.py::test_release_commits[1.0.0-771] - TypeE...\r\nFAILED archery/tests/test_release.py::test_release_commits[0.17.1-27] - TypeE...\r\nFAILED archery/tests/test_release.py::test_release_commits[0.17.0-569] - Type...\r\nFAILED archery/tests/test_release.py::test_release_commits[0.15.1-41] - TypeE...\r\nFAILED archery/tests/test_release.py::test_maintenance_patch_selection - Type...\r\n=================== 8 failed, 34 passed, 1 warning in 23.52s ===================\r\nError: Process completed with exit code 1.\r\n{noformat}",
        "customfield_10010": null,
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Dev][Archery] Test is failed with semver 2.13.0",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "customfield_12311820": "0|z0jwao:",
        "customfield_12314139": null
    }
}