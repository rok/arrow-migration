{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13323605",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605",
    "key": "ARROW-9803",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12620101",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12620101",
                "type": {
                    "id": "12310361",
                    "name": "Blocked",
                    "inward": "Blocked",
                    "outward": "Blocked",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310361"
                },
                "outwardIssue": {
                    "id": "13321981",
                    "key": "ARROW-9690",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321981",
                    "fields": {
                        "summary": "[Go] tests failing on s390x ",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vivkong",
            "name": "vivkong",
            "key": "vivkong",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Vivian Kong",
            "active": true,
            "timeZone": "America/Toronto"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333772",
                "id": "12333772",
                "name": "Go"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vivkong",
            "name": "vivkong",
            "key": "vivkong",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Vivian Kong",
            "active": true,
            "timeZone": "America/Toronto"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vivkong",
            "name": "vivkong",
            "key": "vivkong",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Vivian Kong",
            "active": true,
            "timeZone": "America/Toronto"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9803/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/472602",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vivkong opened a new pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011\n\n\n   The initial support will allow the unit tests to pass on s390x.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T19:33:28.187+0000",
                    "updated": "2020-08-19T19:33:28.187+0000",
                    "started": "2020-08-19T19:33:28.187+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472602",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/472604",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011#issuecomment-676625517\n\n\n   https://issues.apache.org/jira/browse/ARROW-9803\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T19:46:52.839+0000",
                    "updated": "2020-08-19T19:46:52.839+0000",
                    "started": "2020-08-19T19:46:52.839+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472604",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/472633",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011#issuecomment-676697902\n\n\n   How about adding a CI job for s390x + Go on Travis CI as the first step like https://github.com/apache/arrow/pull/7938 ?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T21:00:13.740+0000",
                    "updated": "2020-08-19T21:00:13.740+0000",
                    "started": "2020-08-19T21:00:13.740+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472633",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/472680",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011#discussion_r473424122\n\n\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       Is this a compile time check?  Will it cause a branch at runtime?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T23:18:29.327+0000",
                    "updated": "2020-08-19T23:18:29.327+0000",
                    "started": "2020-08-19T23:18:29.327+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472680",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/472796",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011#issuecomment-677453542\n\n\n   cc @kiszk \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-20T08:21:05.133+0000",
                    "updated": "2020-08-20T08:21:05.133+0000",
                    "started": "2020-08-20T08:21:05.132+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472796",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/472807",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011#discussion_r473781339\n\n\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       Good point.\r\n   \r\n   Can we use `const` at the package level? For example,\r\n   ```\r\n   package ...\r\n   \r\n   const BigEndian = runtime.GOARCH == \"s390x\"\r\n   \r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-20T08:53:13.040+0000",
                    "updated": "2020-08-20T08:53:13.040+0000",
                    "started": "2020-08-20T08:53:13.039+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472807",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/472808",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011#discussion_r473781339\n\n\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       Good point.\r\n   \r\n   Can we use `const` at the package level to evaluate this once? For example,\r\n   ```\r\n   package ...\r\n   \r\n   const BigEndian = runtime.GOARCH == \"s390x\"\r\n   \r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-20T08:53:26.146+0000",
                    "updated": "2020-08-20T08:53:26.146+0000",
                    "started": "2020-08-20T08:53:26.146+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472808",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/472852",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011#discussion_r473904805\n\n\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n+\t\tbinary.BigEndian.PutUint64(b[:8], uint64(v.LowBits()))\n\nReview comment:\n       Can we use [this convention](https://github.com/apache/arrow/blob/master/cpp/src/arrow/util/basic_decimal.cc#L145-L154) across languages? In other words, `LowBits()` always keeps lower 64-bits regardless of endian. `HighBits()` keeps higher 64-bits.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-20T11:38:29.154+0000",
                    "updated": "2020-08-20T11:38:29.154+0000",
                    "started": "2020-08-20T11:38:29.153+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472852",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/472866",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vivkong commented on pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011#issuecomment-677622070\n\n\n   > How about adding a CI job for s390x + Go on Travis CI as the first step like #7938 ?\r\n   \r\n   I can definitely look into adding that.  Will contact @kiszk.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-20T12:16:36.786+0000",
                    "updated": "2020-08-20T12:16:36.786+0000",
                    "started": "2020-08-20T12:16:36.786+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472866",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/472867",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vivkong commented on a change in pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011#discussion_r473925904\n\n\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n+\t\tbinary.BigEndian.PutUint64(b[:8], uint64(v.LowBits()))\n\nReview comment:\n       Thanks for the review.  I'll fix this.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-20T12:17:34.346+0000",
                    "updated": "2020-08-20T12:17:34.346+0000",
                    "started": "2020-08-20T12:17:34.346+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472867",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/474312",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vivkong commented on a change in pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011#discussion_r476454888\n\n\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       `runtime.GOARCH` is \"recorded at compile time and made available by constants or functions in this package, but they do not influence the execution of the run-time system\" - according to https://golang.org/pkg/runtime/\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-25T13:38:23.084+0000",
                    "updated": "2020-08-25T13:38:23.084+0000",
                    "started": "2020-08-25T13:38:23.084+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "474312",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/474389",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011#discussion_r476565438\n\n\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       I found this an issue discussing [DCE](https://github.com/golang/go/issues/21424) in Go.  Skimming the thread it seems that using build tags if feasible might be a better way to support multiple architectures.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-25T16:07:05.619+0000",
                    "updated": "2020-08-25T16:07:05.619+0000",
                    "started": "2020-08-25T16:07:05.619+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "474389",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/482076",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mundaym commented on a change in pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011#discussion_r487033507\n\n\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       A simple 'endian' (or another name) package containing some files like this might help reduce the if statement spam, and address @emkornfield's concerns (though the compiler is pretty good at removing those branches):\r\n   \r\n   big.go:\r\n   ```go\r\n   // +build s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.BigEndian\r\n   ```\r\n   little.go:\r\n   ```go\r\n   // +build !s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.LittleEndian\r\n   ```\r\n   \r\n   Then you can just use `endian.Native.*` functions instead of having if statements. Plus support for other big endian platforms becomes easy.\r\n   \r\n   (Note that even though Native is a variable the methods called on it will still be resolved at compile time because the type is constant).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-11T13:09:48.265+0000",
                    "updated": "2020-09-11T13:09:48.265+0000",
                    "started": "2020-09-11T13:09:48.265+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482076",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/482077",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mundaym commented on a change in pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011#discussion_r487034442\n\n\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       This package would also be a good place for a `IsBigEndian` constant.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-11T13:11:26.348+0000",
                    "updated": "2020-09-11T13:11:26.348+0000",
                    "started": "2020-09-11T13:11:26.348+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482077",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/482790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mundaym commented on a change in pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011#discussion_r487033507\n\n\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       A simple 'endian' (or another name) package containing some files like this might help reduce the if statement spam, and address @emkornfield's concerns (though the compiler is pretty good at removing those branches):\r\n   \r\n   big.go:\r\n   ```go\r\n   // +build s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.BigEndian\r\n   ```\r\n   little.go:\r\n   ```go\r\n   // +build !s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.LittleEndian\r\n   ```\r\n   \r\n   Then you can just use `endian.Native.*` functions instead of having if statements. Plus support for other big endian platforms becomes easy.\r\n   \r\n   (Note that even though Native is a variable the methods called on it will still be resolved at compile time because the type is constant).\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       This package would also be a good place for a `IsBigEndian` constant.\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       A simple 'endian' (or another name) package containing some files like this might help reduce the if statement spam, and address @emkornfield's concerns (though the compiler is pretty good at removing those branches):\r\n   \r\n   big.go:\r\n   ```go\r\n   // +build s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.BigEndian\r\n   ```\r\n   little.go:\r\n   ```go\r\n   // +build !s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.LittleEndian\r\n   ```\r\n   \r\n   Then you can just use `endian.Native.*` functions instead of having if statements. Plus support for other big endian platforms becomes easy.\r\n   \r\n   (Note that even though Native is a variable the methods called on it will still be resolved at compile time because the type is constant).\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       This package would also be a good place for a `IsBigEndian` constant.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T20:22:14.123+0000",
                    "updated": "2020-09-12T20:22:14.123+0000",
                    "started": "2020-09-12T20:22:14.123+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482790",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/483198",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mundaym commented on a change in pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011#discussion_r487033507\n\n\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       A simple 'endian' (or another name) package containing some files like this might help reduce the if statement spam, and address @emkornfield's concerns (though the compiler is pretty good at removing those branches):\r\n   \r\n   big.go:\r\n   ```go\r\n   // +build s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.BigEndian\r\n   ```\r\n   little.go:\r\n   ```go\r\n   // +build !s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.LittleEndian\r\n   ```\r\n   \r\n   Then you can just use `endian.Native.*` functions instead of having if statements. Plus support for other big endian platforms becomes easy.\r\n   \r\n   (Note that even though Native is a variable the methods called on it will still be resolved at compile time because the type is constant).\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       This package would also be a good place for a `IsBigEndian` constant.\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       A simple 'endian' (or another name) package containing some files like this might help reduce the if statement spam, and address @emkornfield's concerns (though the compiler is pretty good at removing those branches):\r\n   \r\n   big.go:\r\n   ```go\r\n   // +build s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.BigEndian\r\n   ```\r\n   little.go:\r\n   ```go\r\n   // +build !s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.LittleEndian\r\n   ```\r\n   \r\n   Then you can just use `endian.Native.*` functions instead of having if statements. Plus support for other big endian platforms becomes easy.\r\n   \r\n   (Note that even though Native is a variable the methods called on it will still be resolved at compile time because the type is constant).\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       This package would also be a good place for a `IsBigEndian` constant.\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       A simple 'endian' (or another name) package containing some files like this might help reduce the if statement spam, and address @emkornfield's concerns (though the compiler is pretty good at removing those branches):\r\n   \r\n   big.go:\r\n   ```go\r\n   // +build s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.BigEndian\r\n   ```\r\n   little.go:\r\n   ```go\r\n   // +build !s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.LittleEndian\r\n   ```\r\n   \r\n   Then you can just use `endian.Native.*` functions instead of having if statements. Plus support for other big endian platforms becomes easy.\r\n   \r\n   (Note that even though Native is a variable the methods called on it will still be resolved at compile time because the type is constant).\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       This package would also be a good place for a `IsBigEndian` constant.\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       A simple 'endian' (or another name) package containing some files like this might help reduce the if statement spam, and address @emkornfield's concerns (though the compiler is pretty good at removing those branches):\r\n   \r\n   big.go:\r\n   ```go\r\n   // +build s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.BigEndian\r\n   ```\r\n   little.go:\r\n   ```go\r\n   // +build !s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.LittleEndian\r\n   ```\r\n   \r\n   Then you can just use `endian.Native.*` functions instead of having if statements. Plus support for other big endian platforms becomes easy.\r\n   \r\n   (Note that even though Native is a variable the methods called on it will still be resolved at compile time because the type is constant).\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       This package would also be a good place for a `IsBigEndian` constant.\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       A simple 'endian' (or another name) package containing some files like this might help reduce the if statement spam, and address @emkornfield's concerns (though the compiler is pretty good at removing those branches):\r\n   \r\n   big.go:\r\n   ```go\r\n   // +build s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.BigEndian\r\n   ```\r\n   little.go:\r\n   ```go\r\n   // +build !s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.LittleEndian\r\n   ```\r\n   \r\n   Then you can just use `endian.Native.*` functions instead of having if statements. Plus support for other big endian platforms becomes easy.\r\n   \r\n   (Note that even though Native is a variable the methods called on it will still be resolved at compile time because the type is constant).\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       This package would also be a good place for a `IsBigEndian` constant.\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       A simple 'endian' (or another name) package containing some files like this might help reduce the if statement spam, and address @emkornfield's concerns (though the compiler is pretty good at removing those branches):\r\n   \r\n   big.go:\r\n   ```go\r\n   // +build s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.BigEndian\r\n   ```\r\n   little.go:\r\n   ```go\r\n   // +build !s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.LittleEndian\r\n   ```\r\n   \r\n   Then you can just use `endian.Native.*` functions instead of having if statements. Plus support for other big endian platforms becomes easy.\r\n   \r\n   (Note that even though Native is a variable the methods called on it will still be resolved at compile time because the type is constant).\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       This package would also be a good place for a `IsBigEndian` constant.\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       A simple 'endian' (or another name) package containing some files like this might help reduce the if statement spam, and address @emkornfield's concerns (though the compiler is pretty good at removing those branches):\r\n   \r\n   big.go:\r\n   ```go\r\n   // +build s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.BigEndian\r\n   ```\r\n   little.go:\r\n   ```go\r\n   // +build !s390x\r\n   \r\n   package endian\r\n   import \"encoding/binary\"\r\n   var Native = binary.LittleEndian\r\n   ```\r\n   \r\n   Then you can just use `endian.Native.*` functions instead of having if statements. Plus support for other big endian platforms becomes easy.\r\n   \r\n   (Note that even though Native is a variable the methods called on it will still be resolved at compile time because the type is constant).\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       This package would also be a good place for a `IsBigEndian` constant.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T21:31:52.823+0000",
                    "updated": "2020-09-12T21:31:52.823+0000",
                    "started": "2020-09-12T21:31:52.823+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483198",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/484079",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vivkong commented on a change in pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011#discussion_r488042158\n\n\n\n##########\nFile path: go/arrow/type_traits_decimal128.go\n##########\n@@ -39,8 +40,13 @@ func (decimal128Traits) BytesRequired(n int) int { return Decimal128SizeBytes *\n \n // PutValue\n func (decimal128Traits) PutValue(b []byte, v decimal128.Num) {\n-\tbinary.LittleEndian.PutUint64(b[:8], uint64(v.LowBits()))\n-\tbinary.LittleEndian.PutUint64(b[8:], uint64(v.HighBits()))\n+\tif runtime.GOARCH == \"s390x\" {\n\nReview comment:\n       Thanks @mundaym I'll update the commit\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-14T15:53:25.213+0000",
                    "updated": "2020-09-14T15:53:25.213+0000",
                    "started": "2020-09-14T15:53:25.213+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "484079",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/510317",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vivkong commented on pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011#issuecomment-725525017\n\n\n   Hello @emkornfield, wondering if this can be considered for merging?  I've updated the PR to use a constant to check for endianess.  Thanks. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-11T16:33:28.669+0000",
                    "updated": "2020-11-11T16:33:28.669+0000",
                    "started": "2020-11-11T16:33:28.669+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "510317",
                    "issueId": "13323605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/worklog/510451",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou closed pull request #8011:\nURL: https://github.com/apache/arrow/pull/8011\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-11T20:56:52.370+0000",
                    "updated": "2020-11-11T20:56:52.370+0000",
                    "started": "2020-11-11T20:56:52.370+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "510451",
                    "issueId": "13323605"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@362f5b53[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55cc254[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@14363a0e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@771b04be[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3973151f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1960de51[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3ca37139[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@13b2bce7[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@32c88863[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2d455a3d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a48dc15[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@c9b1c3f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Nov 11 20:57:05 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-11-11T20:57:05.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9803/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-08-19T19:29:09.000+0000",
        "updated": "2021-07-28T04:39:30.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently the unit tests in go/arrow are failing on s390x.\u00a0 I'd like to add initial support for s390x which allow the tests to pass.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Go] Add initial support for s390x",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323605/comment/17230216",
                    "id": "17230216",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 8011\n[https://github.com/apache/arrow/pull/8011]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2020-11-11T20:57:05.916+0000",
                    "updated": "2020-11-11T20:57:05.916+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0hxb4:",
        "customfield_12314139": null
    }
}