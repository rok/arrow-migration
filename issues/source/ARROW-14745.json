{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13412373",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373",
    "key": "ARROW-14745",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/1",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/blocker.svg",
            "name": "Blocker",
            "id": "1"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
            "name": "jonkeane",
            "key": "jonkeane",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Jonathan Keane",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
            "name": "jonkeane",
            "key": "jonkeane",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Jonathan Keane",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
            "name": "jonkeane",
            "key": "jonkeane",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Jonathan Keane",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 36600,
            "total": 36600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 36600,
            "total": 36600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14745/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 61,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/682988",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-972249065\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-17T23:13:46.200+0000",
                    "updated": "2021-11-17T23:13:46.200+0000",
                    "started": "2021-11-17T23:13:46.200+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "682988",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/685341",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-976697765\n\n\n   To my reading, the duckdb package is correctly calling `arrow:::ImportRecordBatchReader()` with a pointer (casted to `uintptr_t` casted to `double`) to a `struct ArrowArrayStream` as defined in the C API. This gets passed to `arrow_dplyr_query()`, which seems to work for at least a dinky example and error properly if you try to `collect()` twice. Once I do some more experimenting with streams I'll investigate this particular failure in more detail.\r\n   \r\n   ``` r\r\n   drv <- duckdb::duckdb()\r\n   con <- DBI::dbConnect(drv)\r\n   \r\n   res <- DBI::dbSendQuery(con, \"SELECT 'Hello, world!' as col1\", arrow = TRUE)\r\n   record_batch_reader <- duckdb::duckdb_fetch_record_batch(res)\r\n   \r\n   query <- arrow:::arrow_dplyr_query(record_batch_reader)\r\n   dplyr::collect(query)\r\n   #> # A tibble: 1 \u00d7 1\r\n   #>   col1         \r\n   #>   <chr>        \r\n   #> 1 Hello, world!\r\n   dplyr::collect(query)\r\n   #> Error: IOError: Query Stream is closed\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/c/bridge.cc:1759  StatusFromCError(stream_.get_next(&stream_, &c_array))\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.h:222  ReadNext(&batch)\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/util/iterator.h:428  it_.Next()\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/compute/exec/exec_plan.cc:417  iterator_.Next()\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.cc:318  ReadNext(&batch)\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.cc:329  ReadAll(&batches)\r\n   \r\n   DBI::dbDisconnect(con, shutdown = TRUE)\r\n   ```\r\n   \r\n   <sup>Created on 2021-11-23 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-23T15:17:18.099+0000",
                    "updated": "2021-11-23T15:17:18.099+0000",
                    "started": "2021-11-23T15:17:18.099+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "685341",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/685343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot edited a comment on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-976697765\n\n\n   To my reading, the duckdb package is correctly calling `arrow:::ImportRecordBatchReader()` with a pointer (casted to `uintptr_t` casted to `double`) to a `struct ArrowArrayStream` as defined in the C API (happens here: https://github.com/duckdb/duckdb/blob/master/tools/rpkg/src/statement.cpp#L615-L632 ). This gets passed to `arrow_dplyr_query()`, which seems to work for at least a dinky example and error properly if you try to `collect()` twice. Once I do some more experimenting with streams I'll investigate this particular failure in more detail.\r\n   \r\n   ``` r\r\n   drv <- duckdb::duckdb()\r\n   con <- DBI::dbConnect(drv)\r\n   \r\n   res <- DBI::dbSendQuery(con, \"SELECT 'Hello, world!' as col1\", arrow = TRUE)\r\n   record_batch_reader <- duckdb::duckdb_fetch_record_batch(res)\r\n   \r\n   query <- arrow:::arrow_dplyr_query(record_batch_reader)\r\n   dplyr::collect(query)\r\n   #> # A tibble: 1 \u00d7 1\r\n   #>   col1         \r\n   #>   <chr>        \r\n   #> 1 Hello, world!\r\n   dplyr::collect(query)\r\n   #> Error: IOError: Query Stream is closed\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/c/bridge.cc:1759  StatusFromCError(stream_.get_next(&stream_, &c_array))\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.h:222  ReadNext(&batch)\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/util/iterator.h:428  it_.Next()\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/compute/exec/exec_plan.cc:417  iterator_.Next()\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.cc:318  ReadNext(&batch)\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.cc:329  ReadAll(&batches)\r\n   \r\n   DBI::dbDisconnect(con, shutdown = TRUE)\r\n   ```\r\n   \r\n   <sup>Created on 2021-11-23 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-23T15:17:44.637+0000",
                    "updated": "2021-11-23T15:17:44.637+0000",
                    "started": "2021-11-23T15:17:44.637+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "685343",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/688782",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-983829354\n\n\n   Any chance you've been able to dig more on this?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-01T16:48:17.532+0000",
                    "updated": "2021-12-01T16:48:17.532+0000",
                    "started": "2021-12-01T16:48:17.531+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "688782",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/689254",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-984602422\n\n\n   Nothing new yet, just listing the various ways this can fail.\r\n   \r\n   First, intermittent success!\r\n   \r\n   <details>\r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   library(dplyr, warn.conflicts = FALSE)\r\n   \r\n   example_data <- tibble::tibble(\r\n     int = c(1:3, NA_integer_, 5:10),\r\n     dbl = c(1:8, NA, 10) + .1,\r\n     dbl2 = rep(5, 10),\r\n     lgl = sample(c(TRUE, FALSE, NA), 10, replace = TRUE),\r\n     false = logical(10),\r\n     chr = letters[c(1:5, NA, 7:10)],\r\n     fct = factor(letters[c(1:4, NA, NA, 7:10)])\r\n   )\r\n   \r\n   tf <- tempfile()\r\n   new_ds <- rbind(\r\n     cbind(example_data, part = 1),\r\n     cbind(example_data, part = 2),\r\n     cbind(example_data, part = 3),\r\n     cbind(example_data, part = 4)\r\n   ) %>%\r\n     mutate(row_order = 1:n())\r\n   \r\n   write_dataset(new_ds, tf, partitioning = \"part\")\r\n   \r\n   ds <- open_dataset(tf)\r\n   \r\n   waldo::compare(\r\n     ds %>%\r\n       to_duckdb() %>%\r\n       # factors don't roundtrip https://github.com/duckdb/duckdb/issues/1879\r\n       select(-fct) %>%\r\n       to_arrow() %>%\r\n       filter(int > 5 & part > 1) %>%\r\n       collect() %>%\r\n       arrange(row_order) %>%\r\n       tibble::as_tibble(),\r\n     ds %>%\r\n       select(-fct) %>%\r\n       filter(int > 5 & part > 1) %>%\r\n       collect() %>%\r\n       arrange(row_order) %>%\r\n       tibble::as_tibble()\r\n   )\r\n   #> \u2713 No differences\r\n   ```\r\n   \r\n   <sup>Created on 2021-12-02 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>\r\n   \r\n   </details>\r\n   \r\n   Second, filter mismatch:\r\n   \r\n   <details>\r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   library(dplyr, warn.conflicts = FALSE)\r\n   \r\n   example_data <- tibble::tibble(\r\n     int = c(1:3, NA_integer_, 5:10),\r\n     dbl = c(1:8, NA, 10) + .1,\r\n     dbl2 = rep(5, 10),\r\n     lgl = sample(c(TRUE, FALSE, NA), 10, replace = TRUE),\r\n     false = logical(10),\r\n     chr = letters[c(1:5, NA, 7:10)],\r\n     fct = factor(letters[c(1:4, NA, NA, 7:10)])\r\n   )\r\n   \r\n   tf <- tempfile()\r\n   new_ds <- rbind(\r\n     cbind(example_data, part = 1),\r\n     cbind(example_data, part = 2),\r\n     cbind(example_data, part = 3),\r\n     cbind(example_data, part = 4)\r\n   ) %>%\r\n     mutate(row_order = 1:n())\r\n   \r\n   write_dataset(new_ds, tf, partitioning = \"part\")\r\n   \r\n   ds <- open_dataset(tf)\r\n   \r\n   waldo::compare(\r\n     ds %>%\r\n       to_duckdb() %>%\r\n       # factors don't roundtrip https://github.com/duckdb/duckdb/issues/1879\r\n       select(-fct) %>%\r\n       to_arrow() %>%\r\n       filter(int > 5 & part > 1) %>%\r\n       collect() %>%\r\n       arrange(row_order) %>%\r\n       tibble::as_tibble(),\r\n     ds %>%\r\n       select(-fct) %>%\r\n       filter(int > 5 & part > 1) %>%\r\n       collect() %>%\r\n       arrange(row_order) %>%\r\n       tibble::as_tibble()\r\n   )\r\n   #> old vs new\r\n   #>             int  dbl   lgl  chr row_order part\r\n   #> - old[1, ]    7  7.1  TRUE    g         0    3\r\n   #> + new[1, ]    6  6.1  TRUE <NA>        16    2\r\n   #> - old[2, ]    8  8.1    NA    h         0    3\r\n   #> + new[2, ]    7  7.1  TRUE    g        17    2\r\n   #> - old[3, ]    9   NA    NA    i         0    3\r\n   #> + new[3, ]    8  8.1    NA    h        18    2\r\n   #> - old[4, ]   10 10.1 FALSE    j         0    3\r\n   #> + new[4, ]    9   NA    NA    i        19    2\r\n   #> - old[5, ]    6  6.1  TRUE <NA>         4    3\r\n   #> + new[5, ]   10 10.1 FALSE    j        20    2\r\n   #> - old[6, ]    6  6.1  TRUE <NA>        16    2\r\n   #> + new[6, ]    6  6.1  TRUE <NA>        26    3\r\n   #> - old[7, ]    7  7.1  TRUE    g        17    2\r\n   #> + new[7, ]    7  7.1  TRUE    g        27    3\r\n   #> - old[8, ]    8  8.1    NA    h        18    2\r\n   #> + new[8, ]    8  8.1    NA    h        28    3\r\n   #> - old[9, ]    9   NA    NA    i        19    2\r\n   #> + new[9, ]    9   NA    NA    i        29    3\r\n   #> - old[10, ]  10 10.1 FALSE    j        20    2\r\n   #> + new[10, ]  10 10.1 FALSE    j        30    3\r\n   #>   old[11, ]   6  6.1  TRUE <NA>        36    4\r\n   #>   old[12, ]   7  7.1  TRUE    g        37    4\r\n   #>   old[13, ]   8  8.1    NA    h        38    4\r\n   #> \r\n   #> `old$int[1:8]`: 7 8 9 10  6 6 7 8\r\n   #> `new$int[1:8]`: 6 7 8  9 10 6 7 8\r\n   #> \r\n   #> `old$dbl[1:8]`: 7 8 NA 10  6 6 7 8\r\n   #> `new$dbl[1:8]`: 6 7  8 NA 10 6 7 8\r\n   #> \r\n   #> `old$lgl[1:8]`: TRUE <NA> <NA> FALSE TRUE  TRUE TRUE <NA>\r\n   #> `new$lgl[1:8]`: TRUE TRUE <NA> <NA>  FALSE TRUE TRUE <NA>\r\n   #> \r\n   #> `old$chr[1:8]`: \"g\" \"h\" \"i\" \"j\" NA  NA \"g\" \"h\"\r\n   #> `new$chr[1:8]`: NA  \"g\" \"h\" \"i\" \"j\" NA \"g\" \"h\"\r\n   #> \r\n   #> `old$row_order[1:13]`:  0  0  0  0  4 16 17 18 19 20 and 3 more...\r\n   #> `new$row_order[1:13]`: 16 17 18 19 20 26 27 28 29 30           ...\r\n   #> \r\n   #> `old$part[1:13]`: 3 3 3 3 3 2 2 2 2 2 and 3 more...\r\n   #> `new$part[1:13]`: 2 2 2 2 2 3 3 3 3 3           ...\r\n   ```\r\n   \r\n   <sup>Created on 2021-12-02 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>\r\n   \r\n   </details>\r\n   \r\n   Third, `Query Stream is closed`:\r\n   \r\n   <details>\r\n   \r\n   ```\r\n   Error: IOError: Query Stream is closed\r\n   /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/c/bridge.cc:1759  StatusFromCError(stream_.get_next(&stream_, &c_array))\r\n   /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.h:222  ReadNext(&batch)\r\n   /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/util/iterator.h:428  it_.Next()\r\n   /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/compute/exec/exec_plan.cc:417  iterator_.Next()\r\n   /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.cc:326  ReadNext(&batch)\r\n   /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.cc:337  ReadAll(&batches) \r\n   ```\r\n   \r\n   </details>\r\n   \r\n   Fourth, segfault (only has happened once).\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-02T12:55:25.501+0000",
                    "updated": "2021-12-02T12:55:25.501+0000",
                    "started": "2021-12-02T12:55:25.501+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689254",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/689302",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-984643010\n\n\n   ...and I can't get this to fail invoking the C API from the R end of things:\r\n   \r\n   <details>\r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   library(dplyr, warn.conflicts = FALSE)\r\n   \r\n   example_data <- tibble::tibble(\r\n     int = c(1:3, NA_integer_, 5:10),\r\n     dbl = c(1:8, NA, 10) + .1,\r\n     dbl2 = rep(5, 10),\r\n     lgl = sample(c(TRUE, FALSE, NA), 10, replace = TRUE),\r\n     false = logical(10),\r\n     chr = letters[c(1:5, NA, 7:10)],\r\n     fct = factor(letters[c(1:4, NA, NA, 7:10)])\r\n   )\r\n   \r\n   tf <- tempfile()\r\n   new_ds <- rbind(\r\n     cbind(example_data, part = 1),\r\n     cbind(example_data, part = 2),\r\n     cbind(example_data, part = 3),\r\n     cbind(example_data, part = 4)\r\n   ) %>%\r\n     mutate(row_order = 1:n()) %>% \r\n     select(-false, -lgl, -fct)\r\n   \r\n   write_dataset(new_ds, tf, partitioning = \"part\")\r\n   \r\n   ds <- open_dataset(tf)\r\n   \r\n   # let's pop this puppy open in C and see if what's coming from the pipe in Arrow\r\n   # is correct\r\n   # https://github.com/duckdb/duckdb/blob/master/tools/rpkg/R/register.R#L71-L82\r\n   \r\n   stream <- carrow:::blank_invalid_array_stream()\r\n   stream_ptr <- carrow:::xptr_addr_double(stream)\r\n   s <- Scanner$create(\r\n     ds, \r\n     NULL,\r\n     filter = arrow:::build_expr(\r\n       \"&\",\r\n       arrow:::build_expr(\">\", Expression$field_ref(\"int\"), 5),\r\n       arrow:::build_expr(\">\", Expression$field_ref(\"part\"), 1)\r\n     ),\r\n     use_async = FALSE,\r\n     use_threads = TRUE\r\n   )$\r\n     ToRecordBatchReader()$\r\n     export_to_c(stream_ptr)\r\n   \r\n   # check schema\r\n   recreated_schema <- carrow::from_carrow_array(\r\n     list(schema = carrow::carrow_array_stream_get_schema(stream)),\r\n     arrow::Schema\r\n   )\r\n   # ding!\r\n   recreated_schema == ds$schema\r\n   #> [1] TRUE\r\n   \r\n   items <- list()\r\n   while (TRUE) {\r\n     item <- carrow::carrow_array_stream_get_next(stream)\r\n     if (is.null(item)) {\r\n       break\r\n     }\r\n     items[[length(items) + 1L]] <- carrow::from_carrow_array(item)\r\n   }\r\n   \r\n   result <- tibble::as_tibble(bind_rows(items))\r\n   \r\n   waldo::compare(\r\n     result %>% \r\n       select(part, everything()) %>%\r\n       mutate(part = as.double(part)) %>% \r\n       arrange(row_order),\r\n     tibble::as_tibble(new_ds) %>%\r\n       filter(int > 5 & part > 1) %>% \r\n       select(part, everything())\r\n   )\r\n   #> \u2713 No differences\r\n   ```\r\n   \r\n   <sup>Created on 2021-12-02 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>\r\n   \r\n   </details>\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-02T13:47:55.517+0000",
                    "updated": "2021-12-02T13:47:55.517+0000",
                    "started": "2021-12-02T13:47:55.517+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689302",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/689554",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-984921276\n\n\n   Putting this down for today, but narrowed down the segfault to computing the exec plan. Specifically, this line in the R package:\r\n   \r\n   https://github.com/apache/arrow/blob/a8ed77ef1d517e29675465e4c623085d3eb29e7d/r/src/compute-exec.cpp#L92\r\n   \r\n   I haven't been able to get lldb working with R, so I don't know where this occurs in the Arrow library.\r\n   \r\n   I can force a segfault by creating a record batch reader from an R function (without DuckDB) as well, and I think the two are linked (because `read_table()` seems to work for both). I wonder if the exec plan is calling the `array_stream->get_next()` method from multiple threads?\r\n   \r\n   <details>\r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   library(dplyr, warn.conflicts = FALSE)\r\n   \r\n   example_data <- tibble::tibble(\r\n     int = c(1:3, NA_integer_, 5:10),\r\n     dbl = c(1:8, NA, 10) + .1,\r\n     dbl2 = rep(5, 10),\r\n     lgl = sample(c(TRUE, FALSE, NA), 10, replace = TRUE),\r\n     false = logical(10),\r\n     chr = letters[c(1:5, NA, 7:10)],\r\n     fct = factor(letters[c(1:4, NA, NA, 7:10)])\r\n   )\r\n   \r\n   tf <- tempfile()\r\n   new_ds <- rbind(\r\n     cbind(example_data, part = 1),\r\n     cbind(example_data, part = 2),\r\n     cbind(example_data, part = 3),\r\n     cbind(example_data, part = 4)\r\n   ) %>%\r\n     mutate(row_order = 1:n()) %>% \r\n     select(-false, -lgl, -fct)\r\n   \r\n   write_dataset(new_ds, tf, partitioning = \"part\")\r\n   \r\n   ds <- open_dataset(tf)\r\n   \r\n   stream <- carrow:::blank_invalid_array_stream()\r\n   stream_ptr <- carrow:::xptr_addr_double(stream)\r\n   s <- Scanner$create(\r\n     ds, \r\n     NULL,\r\n     filter = TRUE,\r\n     use_async = FALSE,\r\n     use_threads = TRUE\r\n   )$\r\n     ToRecordBatchReader()$\r\n     export_to_c(stream_ptr)\r\n   \r\n   \r\n   # now, create an R stream based on a function that wrap the input stream\r\n   # basically, see if we can roundtrip through R\r\n   stream2 <- carrow::carrow_array_stream_function(ds$schema, function() {\r\n     message(\"streeeeaming!\")\r\n     carrow::carrow_array_stream_get_next(stream)\r\n   })\r\n   \r\n   rbr <- carrow::carrow_array_stream_to_arrow(stream2)\r\n   \r\n   # schema OK\r\n   rbr$schema\r\n   #> Schema\r\n   #> int: int32\r\n   #> dbl: double\r\n   #> dbl2: double\r\n   #> chr: string\r\n   #> row_order: int32\r\n   #> part: int32\r\n   #> \r\n   #> See $metadata for additional Schema metadata\r\n   \r\n   # query create OK\r\n   query <- arrow:::as_adq(rbr) \r\n   \r\n   # collect() is the only thing that segfaults\r\n   # segfault is here:\r\n   # https://github.com/apache/arrow/blob/master/r/src/compute-exec.cpp#L92\r\n   # result <- dplyr::collect(query)\r\n   \r\n   # ...but a manual scan is OK, as well as read_table()\r\n   # (which may explain why the streaming worked before)\r\n   # rbr$read_next_batch()\r\n   # rbr$read_next_batch()\r\n   # rbr$read_next_batch()\r\n   # rbr$read_next_batch()\r\n   # rbr$read_next_batch()\r\n   rbr$read_table()\r\n   #> streeeeaming!\r\n   #> streeeeaming!\r\n   #> streeeeaming!\r\n   #> streeeeaming!\r\n   #> streeeeaming!\r\n   #> Table\r\n   #> 40 rows x 6 columns\r\n   #> $int <int32>\r\n   #> $dbl <double>\r\n   #> $dbl2 <double>\r\n   #> $chr <string>\r\n   #> $row_order <int32>\r\n   #> $part <int32>\r\n   #> \r\n   #> See $metadata for additional Schema metadata\r\n   ```\r\n   \r\n   <sup>Created on 2021-12-02 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>\r\n   \r\n   </details>\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-02T19:09:46.829+0000",
                    "updated": "2021-12-02T19:09:46.829+0000",
                    "started": "2021-12-02T19:09:46.829+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689554",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/689592",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-984968571\n\n\n   The error *might* be related to the fact that the DuckDB stream errors after it's complete instead of returning 0 (success) and outputting an invalid array.\r\n   \r\n   DuckDB code where this happens:\r\n   \r\n   https://github.com/duckdb/duckdb/blob/master/src/common/arrow_wrapper.cpp#L103-L105\r\n   \r\n   Example of a carrow stream that does this (and also causes the exec plan to segfault).\r\n   \r\n   <details>\r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   library(dplyr, warn.conflicts = FALSE)\r\n   \r\n   example_data <- tibble::tibble(\r\n     int = c(1:3, NA_integer_, 5:10),\r\n     dbl = c(1:8, NA, 10) + .1,\r\n     dbl2 = rep(5, 10),\r\n     lgl = sample(c(TRUE, FALSE, NA), 10, replace = TRUE),\r\n     false = logical(10),\r\n     chr = letters[c(1:5, NA, 7:10)],\r\n     fct = factor(letters[c(1:4, NA, NA, 7:10)])\r\n   )\r\n   \r\n   tf <- tempfile()\r\n   new_ds <- rbind(\r\n     cbind(example_data, part = 1),\r\n     cbind(example_data, part = 2),\r\n     cbind(example_data, part = 3),\r\n     cbind(example_data, part = 4)\r\n   ) %>%\r\n     mutate(row_order = 1:n()) %>% \r\n     select(-false, -lgl, -fct)\r\n   \r\n   write_dataset(new_ds, tf, partitioning = \"part\")\r\n   \r\n   ds <- open_dataset(tf)\r\n   \r\n   stream <- carrow:::blank_invalid_array_stream()\r\n   stream_ptr <- carrow:::xptr_addr_double(stream)\r\n   s <- Scanner$create(\r\n     ds, \r\n     NULL,\r\n     filter = TRUE,\r\n     use_async = FALSE,\r\n     use_threads = TRUE\r\n   )$\r\n     ToRecordBatchReader()$\r\n     export_to_c(stream_ptr)\r\n   \r\n   \r\n   rbr <- arrow:::ImportRecordBatchReader(stream_ptr)\r\n   rbr$read_table()\r\n   #> Table\r\n   #> 40 rows x 6 columns\r\n   #> $int <int32>\r\n   #> $dbl <double>\r\n   #> $dbl2 <double>\r\n   #> $chr <string>\r\n   #> $row_order <int32>\r\n   #> $part <int32>\r\n   #> \r\n   #> See $metadata for additional Schema metadata\r\n   rbr$read_table()\r\n   #> Table\r\n   #> 0 rows x 6 columns\r\n   #> $int <int32>\r\n   #> $dbl <double>\r\n   #> $dbl2 <double>\r\n   #> $chr <string>\r\n   #> $row_order <int32>\r\n   #> $part <int32>\r\n   #> \r\n   #> See $metadata for additional Schema metadata\r\n   \r\n   # stream that errors after it's complete\r\n   stream <- carrow:::blank_invalid_array_stream()\r\n   stream_ptr <- carrow:::xptr_addr_double(stream)\r\n   s <- Scanner$create(\r\n     ds, \r\n     NULL,\r\n     filter = TRUE,\r\n     use_async = FALSE,\r\n     use_threads = TRUE\r\n   )$\r\n     ToRecordBatchReader()$\r\n     export_to_c(stream_ptr)\r\n   \r\n   stream2 <- carrow::carrow_array_stream_function(ds$schema, function() {\r\n     carrow::carrow_array_stream_get_next(stream)\r\n   })\r\n   \r\n   rbr <- carrow::carrow_array_stream_to_arrow(stream2)\r\n   rbr$read_table()\r\n   #> Table\r\n   #> 40 rows x 6 columns\r\n   #> $int <int32>\r\n   #> $dbl <double>\r\n   #> $dbl2 <double>\r\n   #> $chr <string>\r\n   #> $row_order <int32>\r\n   #> $part <int32>\r\n   #> \r\n   #> See $metadata for additional Schema metadata\r\n   rbr$read_table()\r\n   #> Error: Invalid: function array stream is finished\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/c/bridge.cc:1759  StatusFromCError(stream_.get_next(&stream_, &c_array))\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.cc:326  ReadNext(&batch)\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.cc:337  ReadAll(&batches)\r\n   ```\r\n   \r\n   <sup>Created on 2021-12-02 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>\r\n   \r\n   </details>\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-02T20:17:18.189+0000",
                    "updated": "2021-12-02T20:17:18.189+0000",
                    "started": "2021-12-02T20:17:18.189+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689592",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/691300",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-987097248\n\n\n   I've tried creating a stream that never errors and this still segfaults when using `dplyr::collect()` (but not when using `read_table()`. (So probably unrelated to this issue).\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T19:14:09.829+0000",
                    "updated": "2021-12-06T19:14:09.829+0000",
                    "started": "2021-12-06T19:14:09.829+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691300",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/691351",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-987205434\n\n\n   @bkietz or @westonpace might have some insight about what's going on here. \r\n   \r\n   In your second to last comment here, the following seems odd to me. It's weird that a second `read_table()` would produce that empty array instead of an error about a closed stream of some sort. I wonder if that's a hint about what's going on in the DuckDB tests that seem to have garbage data in them (or / and the segfaults Dewey is running into)\r\n   \r\n   ```\r\n   rbr <- arrow:::ImportRecordBatchReader(stream_ptr)\r\n   rbr$read_table()\r\n   #> Table\r\n   #> 40 rows x 6 columns\r\n   #> $int <int32>\r\n   #> $dbl <double>\r\n   #> $dbl2 <double>\r\n   #> $chr <string>\r\n   #> $row_order <int32>\r\n   #> $part <int32>\r\n   #> \r\n   #> See $metadata for additional Schema metadata\r\n   rbr$read_table()\r\n   #> Table\r\n   #> 0 rows x 6 columns\r\n   #> $int <int32>\r\n   #> $dbl <double>\r\n   #> $dbl2 <double>\r\n   #> $chr <string>\r\n   #> $row_order <int32>\r\n   #> $part <int32>\r\n   #> \r\n   #> See $metadata for additional Schema metadata\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T21:01:08.574+0000",
                    "updated": "2021-12-06T21:01:08.574+0000",
                    "started": "2021-12-06T21:01:08.574+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "691351",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/693360",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-989985949\n\n\n   @pitrou Here's one improvement to some of the DuckDB flakiness, but Dewey + I haven't yet figured out what's going wrong  (sometimes) with the stream such that we can enable it.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T15:59:58.349+0000",
                    "updated": "2021-12-09T15:59:58.349+0000",
                    "started": "2021-12-09T15:59:58.349+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693360",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/696714",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-994934312\n\n\n   Trying to track down the source of this, and one other theory is that it's and issue with the lifecycle of the underlying buffers (that they are getting freed out from under the `struct ArrowArray`). Again, just a theory! But it would explain the mix of intermittent success, corrupted data, and segfaults.\r\n   \r\n   The Array is created here:\r\n   \r\n   https://github.com/duckdb/duckdb/blob/048bce50e92b643e90cf7cc6bccda56a82378961/src/common/types/data_chunk.cpp#L684-L725\r\n   \r\n   To my reading, there's nothing in the private data that guarantees that the underlying `DataChunk` won't get deleted:\r\n   \r\n   https://github.com/duckdb/duckdb/blob/048bce50e92b643e90cf7cc6bccda56a82378961/src/common/types/data_chunk.cpp#L272-L297\r\n   \r\n   ...but perhaps I'm misreading the C++ here.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-15T16:06:06.180+0000",
                    "updated": "2021-12-15T16:06:06.180+0000",
                    "started": "2021-12-15T16:06:06.180+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "696714",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/696770",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-995008655\n\n\n   Hmm...in theory the duckdb memory is held by one of a few possible `unique_ptr`s.\r\n   \r\n   https://github.com/duckdb/duckdb/blob/048bce50e92b643e90cf7cc6bccda56a82378961/src/common/types/data_chunk.cpp#L547-L549\r\n   \r\n   I also can't fix the intermittent failure by keeping the `DataChunk` alive for the lifecycle of the array, so perhaps that isn't the issue.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-15T17:30:09.851+0000",
                    "updated": "2021-12-15T17:30:09.851+0000",
                    "started": "2021-12-15T17:30:09.851+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "696770",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/697383",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-996025890\n\n\n   Here's that DuckDB PR @romainfrancois \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-16T17:26:32.652+0000",
                    "updated": "2021-12-16T17:26:32.652+0000",
                    "started": "2021-12-16T17:26:32.651+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "697383",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/706811",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-1009906240\n\n\n   Trying another angle...only using `to_arrow()`, I can't get a segfault or any weird behaviour:\r\n   \r\n   <details>\r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   library(dplyr, warn.conflicts = FALSE)\r\n   \r\n   example_data <- tibble::tibble(\r\n     int = c(1:3, NA_integer_, 5:10),\r\n     dbl = c(1:8, NA, 10) + .1,\r\n     dbl2 = rep(5, 10),\r\n     lgl = sample(c(TRUE, FALSE, NA), 10, replace = TRUE),\r\n     false = logical(10),\r\n     chr = letters[c(1:5, NA, 7:10)],\r\n     fct = factor(letters[c(1:4, NA, NA, 7:10)])\r\n   )\r\n   \r\n   tf <- tempfile()\r\n   new_ds <- rbind(\r\n     cbind(example_data, part = 1),\r\n     cbind(example_data, part = 2),\r\n     cbind(example_data, part = 3),\r\n     cbind(example_data, part = 4)\r\n   ) %>%\r\n     mutate(row_order = 1:n())\r\n   \r\n   write_dataset(new_ds, tf, partitioning = \"part\")\r\n   \r\n   \r\n   # try using only duckdb without to_arrow()\r\n   drv <- duckdb::duckdb()\r\n   con <- DBI::dbConnect(drv)\r\n   \r\n   # easier with a single parquet here\r\n   tf2 <- tempfile()\r\n   write_parquet(new_ds, tf2)\r\n   \r\n   DBI::dbExecute(\r\n     con,\r\n     glue::glue_sql(\r\n       \"CREATE VIEW ds_view AS SELECT * FROM parquet_scan({ tf2 });\",\r\n       .con = con\r\n     )\r\n   )\r\n   #> [1] 0\r\n   \r\n   DBI::dbExecute(\r\n     con,\r\n     glue::glue_sql(\r\n       \"CREATE TABLE ds_tbl AS SELECT * FROM parquet_scan({ tf2 });\",\r\n       .con = con\r\n     )\r\n   )\r\n   #> [1] 40\r\n   \r\n   res <- DBI::dbSendQuery(con, \"SELECT * from ds_view\", arrow = TRUE)\r\n   record_batch_reader <- duckdb::duckdb_fetch_record_batch(res)\r\n   \r\n   query <- arrow:::arrow_dplyr_query(record_batch_reader)\r\n   dplyr::collect(query)\r\n   #> # A tibble: 40 \u00d7 9\r\n   #>      int   dbl  dbl2 lgl   false chr   fct    part row_order\r\n   #>    <int> <dbl> <dbl> <lgl> <lgl> <chr> <chr> <dbl>     <int>\r\n   #>  1     1   1.1     5 TRUE  FALSE a     a         1         1\r\n   #>  2     2   2.1     5 NA    FALSE b     b         1         2\r\n   #>  3     3   3.1     5 FALSE FALSE c     c         1         3\r\n   #>  4    NA   4.1     5 TRUE  FALSE d     d         1         4\r\n   #>  5     5   5.1     5 TRUE  FALSE e     <NA>      1         5\r\n   #>  6     6   6.1     5 FALSE FALSE <NA>  <NA>      1         6\r\n   #>  7     7   7.1     5 FALSE FALSE g     g         1         7\r\n   #>  8     8   8.1     5 FALSE FALSE h     h         1         8\r\n   #>  9     9  NA       5 FALSE FALSE i     i         1         9\r\n   #> 10    10  10.1     5 TRUE  FALSE j     j         1        10\r\n   #> # \u2026 with 30 more rows\r\n   \r\n   DBI::dbDisconnect(con, shutdown = TRUE)\r\n   ```\r\n   \r\n   </details>\r\n   \r\n   I also can't get anything weird to happen if the dataset only has one file:\r\n   \r\n   <details>\r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   library(dplyr, warn.conflicts = FALSE)\r\n   \r\n   example_data <- tibble::tibble(\r\n     int = c(1:3, NA_integer_, 5:10),\r\n     dbl = c(1:8, NA, 10) + .1,\r\n     dbl2 = rep(5, 10),\r\n     lgl = sample(c(TRUE, FALSE, NA), 10, replace = TRUE),\r\n     false = logical(10),\r\n     chr = letters[c(1:5, NA, 7:10)],\r\n     fct = factor(letters[c(1:4, NA, NA, 7:10)])\r\n   )\r\n   \r\n   tf <- tempfile()\r\n   new_ds <- rbind(\r\n     cbind(example_data, part = 1),\r\n     cbind(example_data, part = 2),\r\n     cbind(example_data, part = 3),\r\n     cbind(example_data, part = 4)\r\n   ) %>%\r\n     mutate(row_order = 1:n())\r\n   \r\n   \r\n   tf2 <- tempfile()\r\n   write_parquet(new_ds, tf2)\r\n   \r\n   ds <- open_dataset(tf2)\r\n   \r\n   waldo::compare(\r\n     ds %>%\r\n       to_duckdb() %>%\r\n       # factors don't roundtrip https://github.com/duckdb/duckdb/issues/1879\r\n       select(-fct) %>%\r\n       to_arrow() %>%\r\n       filter(int > 5 & part > 1) %>%\r\n       collect() %>%\r\n       arrange(row_order) %>%\r\n       tibble::as_tibble(),\r\n     ds %>%\r\n       select(-fct) %>%\r\n       filter(int > 5 & part > 1) %>%\r\n       collect() %>%\r\n       arrange(row_order) %>%\r\n       tibble::as_tibble()\r\n   )\r\n   #> \u2713 No differences\r\n   ```\r\n   \r\n   <sup>Created on 2022-01-11 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>\r\n   \r\n   </details>\r\n   \r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-11T12:13:05.118+0000",
                    "updated": "2022-01-11T12:13:05.118+0000",
                    "started": "2022-01-11T12:13:05.117+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "706811",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/706870",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-1010001875\n\n\n   If you call the garbage collector after each attempt (which calls the duckdb array stream `release()` callback), it won't crash (but still won't give you the right answer):\r\n   \r\n   <details>\r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   library(dplyr, warn.conflicts = FALSE)\r\n   \r\n   make_duckdb_crash <- function(n = 50, gc_after = TRUE) {\r\n     cat(\"Starting attempts [\")\r\n     on.exit(cat(\"]\\n\"))\r\n     \r\n     for (i in seq_len(n)) {\r\n   \r\n       example_data <- tibble::tibble(\r\n         int = c(1:3, NA_integer_, 5:10),\r\n         dbl = c(1:8, NA, 10) + .1,\r\n         dbl2 = rep(5, 10),\r\n         lgl = sample(c(TRUE, FALSE, NA), 10, replace = TRUE),\r\n         false = logical(10),\r\n         chr = letters[c(1:5, NA, 7:10)],\r\n         fct = factor(letters[c(1:4, NA, NA, 7:10)])\r\n       )\r\n       \r\n       tf <- tempfile()\r\n       new_ds <- rbind(\r\n         cbind(example_data, part = 1),\r\n         cbind(example_data, part = 2),\r\n         cbind(example_data, part = 3),\r\n         cbind(example_data, part = 4)\r\n       ) %>%\r\n         mutate(row_order = 1:n())\r\n       \r\n       write_dataset(new_ds, tf, partitioning = \"part\")\r\n       \r\n       ds <- open_dataset(tf)\r\n       \r\n       it_worked <- all.equal(\r\n         ds %>%\r\n           to_duckdb() %>%\r\n           # factors don't roundtrip https://github.com/duckdb/duckdb/issues/1879\r\n           select(-fct) %>%\r\n           to_arrow() %>%\r\n           filter(int > 5 & part > 1) %>%\r\n           collect() %>%\r\n           arrange(row_order) %>%\r\n           tibble::as_tibble(),\r\n         ds %>%\r\n           select(-fct) %>%\r\n           filter(int > 5 & part > 1) %>%\r\n           collect() %>%\r\n           arrange(row_order) %>%\r\n           tibble::as_tibble()\r\n       )\r\n       \r\n       if (isTRUE(it_worked)) {\r\n         cat(\"!\")\r\n       } else {\r\n         cat(\"X\")\r\n       }\r\n       \r\n       if (gc_after) gc()\r\n     }\r\n   }\r\n   \r\n   \r\n   make_duckdb_crash(n = 50, gc_after = TRUE)\r\n   #> Starting attempts [!!!!!XXX!!X!X!!!!X!XX!X!X!!!!!!!!X!!!!X!!!!X!X!!!X]\r\n   make_duckdb_crash(n = 50, gc_after = FALSE)\r\n   #> Starting attempts [X!!!!!!!!!!!X!X!X!!!!\r\n   #> Error: IOError: Query Stream is closed\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/c/bridge.cc:1759  StatusFromCError(stream_.get_next(&stream_, &c_array))\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.h:233  ReadNext(&batch)\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/util/iterator.h:428  it_.Next()\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/compute/exec/exec_plan.cc:417  iterator_.Next()\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.cc:336  ReadNext(&batch)\r\n   #> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.cc:347  ReadAll(&batches)\r\n   #> ]\r\n   ```\r\n   \r\n   <sup>Created on 2022-01-11 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>\r\n   \r\n   </details>\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-11T14:12:13.942+0000",
                    "updated": "2022-01-11T14:12:13.942+0000",
                    "started": "2022-01-11T14:12:13.942+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "706870",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/706880",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-1010010232\n\n\n   Iiiinteresting, on both of these fronts. In the second one, have you tried putting `auto_disconnect = FALSE` in the `to_duckdb()`? Now that we see this gc thing, I wonder if this is a consequence of our cleaning up doing something funny.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-11T14:21:06.484+0000",
                    "updated": "2022-01-11T14:21:06.484+0000",
                    "started": "2022-01-11T14:21:06.484+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "706880",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/706890",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-1010021941\n\n\n   Totally! Skipping the auto disconnect fixes the crash (but doesn't fix the incorrect results).\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-11T14:33:18.946+0000",
                    "updated": "2022-01-11T14:33:18.946+0000",
                    "started": "2022-01-11T14:33:18.946+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "706890",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/706893",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot edited a comment on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-1010021941\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-11T14:36:09.652+0000",
                    "updated": "2022-01-11T14:36:09.652+0000",
                    "started": "2022-01-11T14:36:09.652+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "706893",
                    "issueId": "13412373"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/worklog/706905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #11730:\nURL: https://github.com/apache/arrow/pull/11730#issuecomment-1010040486\n\n\n   Interesting! I've got one theory about the segfault.\r\n   \r\n   But still no clue what's going on in the other case (i.e. autodisconnect = FALSE / gc after each =TRUE). That is still very strange! We've narrowed it down that if the scan is _starting_ in DuckDB that seems to work. (have you tried setting `PRAGMA threads=N` to ensure parallelism in duckdb \u2014 this should be default now, but I don't remember which version that started in...). Have you tried running the duckdb -> arrow bit only multiple times checking the results (like you have here with the round trip)?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-11T14:53:04.491+0000",
                    "updated": "2022-01-11T14:53:04.491+0000",
                    "started": "2022-01-11T14:53:04.490+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "706905",
                    "issueId": "13412373"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 36600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5665dab3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7cefca1a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f601340[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1d5da5ac[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6383e4d6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4361773f[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c048600[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2c8438e9[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@505ddcfb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@184d9140[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@600120cf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6dcf1f56[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 36600,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Feb 07 19:56:45 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-02-07T19:56:45.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14745/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2021-11-17T22:40:55.000+0000",
        "updated": "2022-02-08T09:11:44.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "10h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 36600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Enable true duckdb streaming",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/comment/17477180",
                    "id": "17477180",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "[~jonkeane] can we postpone this to 8.0?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2022-01-17T12:38:46.194+0000",
                    "updated": "2022-01-17T12:38:46.194+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/comment/17478155",
                    "id": "17478155",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Postponed to 8.0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2022-01-18T19:45:25.228+0000",
                    "updated": "2022-01-18T19:45:25.228+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412373/comment/17488405",
                    "id": "17488405",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 11730\n[https://github.com/apache/arrow/pull/11730]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-02-07T19:56:45.977+0000",
                    "updated": "2022-02-07T19:56:45.977+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z0wu5c:",
        "customfield_12314139": null
    }
}