{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13322758",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758",
    "key": "ARROW-9742",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "aggregateprogress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9742/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 14,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758/worklog/471109",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove opened a new pull request #7972:\nURL: https://github.com/apache/arrow/pull/7972\n\n\n   This PR renames the `Table` trait to `DataFrame` and updates the `collect` method signature to remove the reference to an execution context (which made no sense because the table/dataframe struct was created by the context).\r\n   \r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-15T17:12:52.209+0000",
                    "updated": "2020-08-15T17:12:52.209+0000",
                    "started": "2020-08-15T17:12:52.209+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471109",
                    "issueId": "13322758"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758/worklog/471111",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #7972:\nURL: https://github.com/apache/arrow/pull/7972#issuecomment-674425017\n\n\n   @alamb @jorgecarleitao \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-15T17:14:29.943+0000",
                    "updated": "2020-08-15T17:14:29.943+0000",
                    "started": "2020-08-15T17:14:29.943+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471111",
                    "issueId": "13322758"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758/worklog/471114",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7972:\nURL: https://github.com/apache/arrow/pull/7972#issuecomment-674425511\n\n\n   https://issues.apache.org/jira/browse/ARROW-9742\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-15T17:18:38.369+0000",
                    "updated": "2020-08-15T17:18:38.369+0000",
                    "started": "2020-08-15T17:18:38.369+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471114",
                    "issueId": "13322758"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758/worklog/471173",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #7972:\nURL: https://github.com/apache/arrow/pull/7972#issuecomment-674477784\n\n\n   I went through this, and it looks great. I admit I am still not fully familiar when to use Rc vs Arc yet (e.g. why nor Arc instead? because we do not expect the context to be sharable between threads?), so take that into account.\r\n   \r\n   I have an extra suggestion, that I pushed [here](https://github.com/jorgecarleitao/arrow/commit/521dd2be7644bb8b7bf5cb47164e1246bc45d13f). Essentially, with this change I think that we can remove `ExecutionContextSchemaProvider` altogether and let `ExecutionContextState` implement `SchemaProvider`.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-16T04:35:31.833+0000",
                    "updated": "2020-08-16T04:35:31.833+0000",
                    "started": "2020-08-16T04:35:31.833+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471173",
                    "issueId": "13322758"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758/worklog/471191",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #7972:\nURL: https://github.com/apache/arrow/pull/7972#discussion_r471078546\n\n\n\n##########\nFile path: rust/datafusion/examples/memory_table_api.rs\n##########\n@@ -51,15 +51,15 @@ fn main() -> Result<()> {\n     // declare a table in memory. In spark API, this corresponds to createDataFrame(...).\n     let provider = MemTable::new(schema, vec![vec![batch]])?;\n     ctx.register_table(\"t\", Box::new(provider));\n-    let t = ctx.table(\"t\")?;\n+    let df = ctx.table(\"t\")?;\n\nReview comment:\n       Shouldn't we also rename `.table` and `.register_table`?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-16T07:37:02.787+0000",
                    "updated": "2020-08-16T07:37:02.787+0000",
                    "started": "2020-08-16T07:37:02.786+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471191",
                    "issueId": "13322758"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758/worklog/471193",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #7972:\nURL: https://github.com/apache/arrow/pull/7972#discussion_r471094243\n\n\n\n##########\nFile path: rust/datafusion/src/dataframe.rs\n##########\n@@ -15,42 +15,46 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-//! Table API for building a logical query plan. This is similar to the Table API in Ibis\n-//! and the DataFrame API in Apache Spark\n+//! DataFrame API for building and executing query plans.\n \n use crate::arrow::record_batch::RecordBatch;\n use crate::error::Result;\n-use crate::execution::context::ExecutionContext;\n use crate::logicalplan::{Expr, LogicalPlan};\n use arrow::datatypes::Schema;\n use std::sync::Arc;\n \n-/// Table is an abstraction of a logical query plan\n-pub trait Table {\n+/// DataFrame is an abstraction of a logical query plan\n+pub trait DataFrame {\n     /// Select columns by name\n-    fn select_columns(&self, columns: Vec<&str>) -> Result<Arc<dyn Table>>;\n+    fn select_columns(&self, columns: Vec<&str>) -> Result<Arc<dyn DataFrame>>;\n \n     /// Create a projection based on arbitrary expressions\n-    fn select(&self, expr: Vec<Expr>) -> Result<Arc<dyn Table>>;\n+    fn select(&self, expr: Vec<Expr>) -> Result<Arc<dyn DataFrame>>;\n \n     /// Create a selection based on a filter expression\n-    fn filter(&self, expr: Expr) -> Result<Arc<dyn Table>>;\n+    fn filter(&self, expr: Expr) -> Result<Arc<dyn DataFrame>>;\n \n     /// Perform an aggregate query\n     fn aggregate(\n         &self,\n         group_expr: Vec<Expr>,\n         aggr_expr: Vec<Expr>,\n-    ) -> Result<Arc<dyn Table>>;\n+    ) -> Result<Arc<dyn DataFrame>>;\n \n     /// limit the number of rows\n-    fn limit(&self, n: usize) -> Result<Arc<dyn Table>>;\n+    fn limit(&self, n: usize) -> Result<Arc<dyn DataFrame>>;\n \n     /// Return the logical plan\n     fn to_logical_plan(&self) -> LogicalPlan;\n \n-    /// Return an expression representing a column within this table\n-    fn col(&self, name: &str) -> Result<Expr>;\n+    /// Collects the result as a vector of RecordBatch.\n+    fn collect(&self, batch_size: usize) -> Result<Vec<RecordBatch>>;\n+\n+    /// Returns the schema\n\nReview comment:\n       ```suggestion\r\n       /// Returns the schema (names and types of columns) in this DataFrame\r\n   ```\n\n##########\nFile path: rust/datafusion/src/execution/context.rs\n##########\n@@ -89,12 +91,18 @@ impl ExecutionConfig {\n }\n \n /// Execution context for registering data sources and executing queries\n-pub struct ExecutionContext {\n-    datasources: HashMap<String, Box<dyn TableProvider + Send + Sync>>,\n-    scalar_functions: HashMap<String, Box<ScalarFunction>>,\n+#[derive(Clone)]\n+pub struct ExecutionContextState {\n+    datasources: Rc<RefCell<HashMap<String, Box<dyn TableProvider + Send + Sync>>>>,\n\nReview comment:\n       Can you explain the rationale for using `RefCell` here? It seems to me like `Arc<HashMap<...>>` is easier to reason about. I can't think of an example when running multi-threaded when you would want one thread to borrow mutably -- it seems like an ExecutionContextState would be created/configured by one thread, and then when shared would be read only.\n\n##########\nFile path: rust/datafusion/src/dataframe.rs\n##########\n@@ -15,42 +15,46 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-//! Table API for building a logical query plan. This is similar to the Table API in Ibis\n-//! and the DataFrame API in Apache Spark\n+//! DataFrame API for building and executing query plans.\n \n use crate::arrow::record_batch::RecordBatch;\n use crate::error::Result;\n-use crate::execution::context::ExecutionContext;\n use crate::logicalplan::{Expr, LogicalPlan};\n use arrow::datatypes::Schema;\n use std::sync::Arc;\n \n-/// Table is an abstraction of a logical query plan\n-pub trait Table {\n+/// DataFrame is an abstraction of a logical query plan\n\nReview comment:\n       ```suggestion\r\n   /// DataFrame represents a logical set of rows with the same named columns.\r\n   /// Similar to a [Pandas DataFrame](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html) or [Spark DataFrame](https://spark.apache.org/docs/latest/sql-programming-guide.html)\r\n   ```\n\n##########\nFile path: rust/datafusion/src/execution/context.rs\n##########\n@@ -17,9 +17,11 @@\n \n //! ExecutionContext contains methods for registering data sources and executing queries\n \n+use std::cell::RefCell;\n use std::collections::{HashMap, HashSet};\n use std::fs;\n use std::path::Path;\n+use std::rc::Rc;\n\nReview comment:\n       As mentioned by @jorgecarleitao  -- I suggest using `Arc` in this file unless there is a good reason to use `Rc`\n\n##########\nFile path: rust/datafusion/examples/memory_table_api.rs\n##########\n@@ -51,15 +51,15 @@ fn main() -> Result<()> {\n     // declare a table in memory. In spark API, this corresponds to createDataFrame(...).\n     let provider = MemTable::new(schema, vec![vec![batch]])?;\n     ctx.register_table(\"t\", Box::new(provider));\n-    let t = ctx.table(\"t\")?;\n+    let df = ctx.table(\"t\")?;\n\nReview comment:\n       FWIW I think `table` is still reasonable from a DataFusion point of view as the data is creating a logical table in the context of a query, while being backed by a Dataframe. Changing to `register_dataframe` would be fine too in my opinion. I could go either way\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-16T10:28:05.936+0000",
                    "updated": "2020-08-16T10:28:05.936+0000",
                    "started": "2020-08-16T10:28:05.936+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471193",
                    "issueId": "13322758"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758/worklog/471215",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #7972:\nURL: https://github.com/apache/arrow/pull/7972#discussion_r471116942\n\n\n\n##########\nFile path: rust/datafusion/src/execution/context.rs\n##########\n@@ -89,12 +91,18 @@ impl ExecutionConfig {\n }\n \n /// Execution context for registering data sources and executing queries\n-pub struct ExecutionContext {\n-    datasources: HashMap<String, Box<dyn TableProvider + Send + Sync>>,\n-    scalar_functions: HashMap<String, Box<ScalarFunction>>,\n+#[derive(Clone)]\n+pub struct ExecutionContextState {\n+    datasources: Rc<RefCell<HashMap<String, Box<dyn TableProvider + Send + Sync>>>>,\n\nReview comment:\n       So we do need interior mutability here. Users can register new data sources. I can convert to `Arc<Mutex<_>>` instead though.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-16T14:04:15.871+0000",
                    "updated": "2020-08-16T14:04:15.871+0000",
                    "started": "2020-08-16T14:04:15.871+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471215",
                    "issueId": "13322758"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758/worklog/471219",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #7972:\nURL: https://github.com/apache/arrow/pull/7972#discussion_r471125731\n\n\n\n##########\nFile path: rust/datafusion/examples/memory_table_api.rs\n##########\n@@ -51,15 +51,15 @@ fn main() -> Result<()> {\n     // declare a table in memory. In spark API, this corresponds to createDataFrame(...).\n     let provider = MemTable::new(schema, vec![vec![batch]])?;\n     ctx.register_table(\"t\", Box::new(provider));\n-    let t = ctx.table(\"t\")?;\n+    let df = ctx.table(\"t\")?;\n\nReview comment:\n       SparkSession has a `table` method described as `Returns the specified table/view as a DataFrame`. I tend to follow Spark conventions where possible.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-16T15:27:09.318+0000",
                    "updated": "2020-08-16T15:27:09.318+0000",
                    "started": "2020-08-16T15:27:09.317+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471219",
                    "issueId": "13322758"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758/worklog/471220",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #7972:\nURL: https://github.com/apache/arrow/pull/7972#issuecomment-674540473\n\n\n   @jorgecarleitao @alamb @houqp @jhorstmann This is ready for re-review. Please see the updated PR description.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-16T15:28:22.848+0000",
                    "updated": "2020-08-16T15:28:22.848+0000",
                    "started": "2020-08-16T15:28:22.848+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471220",
                    "issueId": "13322758"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758/worklog/471221",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #7972:\nURL: https://github.com/apache/arrow/pull/7972#discussion_r471127403\n\n\n\n##########\nFile path: rust/datafusion/src/dataframe.rs\n##########\n@@ -0,0 +1,168 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! DataFrame API for building and executing query plans.\n+\n+use crate::arrow::record_batch::RecordBatch;\n+use crate::error::Result;\n+use crate::logicalplan::{Expr, LogicalPlan};\n+use arrow::datatypes::Schema;\n+use std::sync::Arc;\n+\n+/// DataFrame represents a logical set of rows with the same named columns.\n+/// Similar to a [Pandas DataFrame](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html) or\n+/// [Spark DataFrame](https://spark.apache.org/docs/latest/sql-programming-guide.html)\n+///\n+/// DataFrames are typically created by the `read_csv` and `read_parquet` methods on the\n+/// [ExecutionContext](../execution/context/struct.ExecutionContext.html) and can then be modified\n+/// by calling the transformation methods, such as `filter`, `select`, `aggregate`, and `limit`\n+/// to build up a query definition.\n+///\n+/// The query can be executed by calling the `collect` method.\n+///\n+/// ```\n+/// use datafusion::ExecutionContext;\n+/// use datafusion::execution::physical_plan::csv::CsvReadOptions;\n+/// use datafusion::logicalplan::col;\n+///\n+/// let mut ctx = ExecutionContext::new();\n+/// let df = ctx.read_csv(\"tests/example.csv\", CsvReadOptions::new()).unwrap();\n+/// let df = df.filter(col(\"a\").lt_eq(col(\"b\"))).unwrap()\n+///            .aggregate(vec![col(\"a\")], vec![df.min(col(\"b\")).unwrap()]).unwrap()\n+///            .limit(100).unwrap();\n+/// let results = df.collect(4096);\n+/// ```\n+pub trait DataFrame {\n+    /// Filter the DataFrame by column. Returns a new DataFrame only containing the\n+    /// specified columns.\n+    ///\n+    /// ```\n+    /// use datafusion::ExecutionContext;\n+    /// use datafusion::execution::physical_plan::csv::CsvReadOptions;\n+    /// let mut ctx = ExecutionContext::new();\n+    ///\n+    /// let df = ctx.read_csv(\"tests/example.csv\", CsvReadOptions::new()).unwrap();\n+    /// let df = df.select_columns(vec![\"a\", \"b\"]).unwrap();\n+    /// ```\n+    fn select_columns(&self, columns: Vec<&str>) -> Result<Arc<dyn DataFrame>>;\n+\n+    /// Create a projection based on arbitrary expressions.\n+    ///\n+    /// ```\n+    /// use datafusion::ExecutionContext;\n+    /// use datafusion::execution::physical_plan::csv::CsvReadOptions;\n+    /// use datafusion::logicalplan::col;\n+    ///\n+    /// let mut ctx = ExecutionContext::new();\n+    /// let df = ctx.read_csv(\"tests/example.csv\", CsvReadOptions::new()).unwrap();\n+    /// let df = df.select(vec![col(\"a\").multiply(col(\"b\")), col(\"c\")]).unwrap();\n+    /// ```\n+    fn select(&self, expr: Vec<Expr>) -> Result<Arc<dyn DataFrame>>;\n+\n+    /// Filter a DataFrame to only include rows that match the specified filter expression.\n+    ///\n+    /// ```\n+    /// use datafusion::ExecutionContext;\n+    /// use datafusion::execution::physical_plan::csv::CsvReadOptions;\n+    /// use datafusion::logicalplan::col;\n+    ///\n+    /// let mut ctx = ExecutionContext::new();\n+    /// let df = ctx.read_csv(\"tests/example.csv\", CsvReadOptions::new()).unwrap();\n+    /// let df = df.filter(col(\"a\").lt_eq(col(\"b\"))).unwrap();\n+    /// ```\n+    fn filter(&self, expr: Expr) -> Result<Arc<dyn DataFrame>>;\n+\n+    /// Perform an aggregate query with optional grouping expressions.\n+    ///\n+    /// ```\n+    /// use datafusion::ExecutionContext;\n+    /// use datafusion::execution::physical_plan::csv::CsvReadOptions;\n+    /// use datafusion::logicalplan::col;\n+    ///\n+    /// let mut ctx = ExecutionContext::new();\n+    /// let df = ctx.read_csv(\"tests/example.csv\", CsvReadOptions::new()).unwrap();\n+    ///\n+    /// // The following use is the equivalent of \"SELECT MIN(b) GROUP BY a\"\n+    /// let _ = df.aggregate(vec![col(\"a\")], vec![df.min(col(\"b\")).unwrap()]).unwrap();\n+    ///\n+    /// // The following use is the equivalent of \"SELECT MIN(b)\"\n+    /// let _ = df.aggregate(vec![], vec![df.min(col(\"b\")).unwrap()]).unwrap();\n+    /// ```\n+    fn aggregate(\n+        &self,\n+        group_expr: Vec<Expr>,\n+        aggr_expr: Vec<Expr>,\n+    ) -> Result<Arc<dyn DataFrame>>;\n+\n+    /// limit the number of rows returned from this DataFrame.\n+    ///\n+    /// ```\n+    /// use datafusion::ExecutionContext;\n+    /// use datafusion::execution::physical_plan::csv::CsvReadOptions;\n+    /// use datafusion::logicalplan::col;\n+    ///\n+    /// let mut ctx = ExecutionContext::new();\n+    /// let df = ctx.read_csv(\"tests/example.csv\", CsvReadOptions::new()).unwrap();\n+    /// let df = df.limit(100).unwrap();\n+    /// ```\n+    fn limit(&self, n: usize) -> Result<Arc<dyn DataFrame>>;\n+\n+    /// Executes this DataFrame and collects all results into a vector of RecordBatch.\n+    ///\n+    /// ```\n+    /// use datafusion::ExecutionContext;\n+    /// use datafusion::execution::physical_plan::csv::CsvReadOptions;\n+    /// use datafusion::logicalplan::col;\n+    ///\n+    /// let mut ctx = ExecutionContext::new();\n+    /// let df = ctx.read_csv(\"tests/example.csv\", CsvReadOptions::new()).unwrap();\n+    /// let batches = df.collect(4096).unwrap();\n+    /// ```\n+    fn collect(&self, batch_size: usize) -> Result<Vec<RecordBatch>>;\n+\n+    /// Returns the schema describing the output of this DataFrame in terms of columns returned,\n+    /// where each column has a name, data type, and nullability attribute.\n+\n\nReview comment:\n       I am not sure if this won't break descriptions (add `    ///`?). If not, ignore this comment.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-16T15:44:16.605+0000",
                    "updated": "2020-08-16T15:44:16.605+0000",
                    "started": "2020-08-16T15:44:16.605+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471221",
                    "issueId": "13322758"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758/worklog/471222",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #7972:\nURL: https://github.com/apache/arrow/pull/7972#issuecomment-674545699\n\n\n   Thanks @jorgecarleitao  I wanted to move the aggregate functions too but ran into a problem and it probably relates to your PRs .. I will file a JIRA to explain this.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-16T16:13:13.169+0000",
                    "updated": "2020-08-16T16:13:13.169+0000",
                    "started": "2020-08-16T16:13:13.169+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471222",
                    "issueId": "13322758"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758/worklog/471223",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #7972:\nURL: https://github.com/apache/arrow/pull/7972#issuecomment-674546437\n\n\n   > Thanks @jorgecarleitao I wanted to move the aggregate functions too but ran into a problem and it probably relates to your PRs .. I will file a JIRA to explain this.\r\n   \r\n   Yes, currently aggregate functions are impossible to correctly declare in the logical realm because they have a variable return type, while all logical expressions have a hard-coded return type. I propose a fix for that in one of my PRs. The planets are aligning!\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-16T16:19:07.648+0000",
                    "updated": "2020-08-16T16:19:07.648+0000",
                    "started": "2020-08-16T16:19:07.648+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471223",
                    "issueId": "13322758"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758/worklog/471224",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove closed pull request #7972:\nURL: https://github.com/apache/arrow/pull/7972\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-16T16:21:20.831+0000",
                    "updated": "2020-08-16T16:21:20.831+0000",
                    "started": "2020-08-16T16:21:20.831+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471224",
                    "issueId": "13322758"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758/worklog/471466",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #7972:\nURL: https://github.com/apache/arrow/pull/7972#discussion_r471438457\n\n\n\n##########\nFile path: rust/datafusion/src/execution/context.rs\n##########\n@@ -89,12 +91,18 @@ impl ExecutionConfig {\n }\n \n /// Execution context for registering data sources and executing queries\n-pub struct ExecutionContext {\n-    datasources: HashMap<String, Box<dyn TableProvider + Send + Sync>>,\n-    scalar_functions: HashMap<String, Box<ScalarFunction>>,\n+#[derive(Clone)]\n+pub struct ExecutionContextState {\n+    datasources: Rc<RefCell<HashMap<String, Box<dyn TableProvider + Send + Sync>>>>,\n\nReview comment:\n       I guess I was thinking that users would register new datasources before/during query planning time (when `ExecutionContextState` was owned by a single thread and therefore the entire `struct` would be mutable, not just a field. I probably misunderstand what is going on\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-17T12:17:15.119+0000",
                    "updated": "2020-08-17T12:17:15.119+0000",
                    "started": "2020-08-17T12:17:15.114+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471466",
                    "issueId": "13322758"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 8400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@30417cd[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3228cab4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@226d50fe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@56e4436d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b965ef0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2eec9575[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@664edaf6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@12450279[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2b9daf1f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6190d024[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71192f8a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4bf5bd1a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 8400,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Aug 17 23:45:23 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-08-16T16:21:13.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9742/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2020-08-14T14:02:45.000+0000",
        "updated": "2020-10-09T10:50:35.000+0000",
        "timeoriginalestimate": null,
        "description": "\u00a0There was a discussion in last Arrow sync call about the fact that there are numerous Rust DataFrame projects and it would be good to have one standard, in the Arrow repo.\r\n\r\nI do think it would be good to have a DataFrame trait in Arrow, with an implementation in DataFusion, and making it possible for other projects to extend/replace the implementation e.g. for distributed compute, or for GPU compute, as two examples.\u00a0\r\n\r\n[~jhorstmann] Does this capture what you were suggesting in the call?",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 8400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Create one standard DataFrame API",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758/comment/17178521",
                    "id": "17178521",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Issue resolved by pull request 7972\n[https://github.com/apache/arrow/pull/7972]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2020-08-16T16:21:13.372+0000",
                    "updated": "2020-08-16T16:21:13.372+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758/comment/17178562",
                    "id": "17178562",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jhorstmann",
                        "name": "jhorstmann",
                        "key": "jhorstmann",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "J\u00f6rn Horstmann",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Hi [~andygrove] , in the call I was more thinking about the compute kernels which would be used by different dataframe implementations. I know of the following two projects, both seem to be implementing common arithmetic operations themselves instead of reusing functions defined inside arrow\r\n\r\nPolars: [https://github.com/ritchie46/polars/blob/master/polars/src/chunked_array/arithmetic.rs]\r\n\r\nRust Dataframe: [https://github.com/nevi-me/rust-dataframe/blob/master/src/functions/scalar.rs]\r\n\r\nI don't think this was done for performance reasons, as the current packed_simd implementations should be quite fast. Maybe it's more of a marketing problem and people do not know that the rust arrow implementation contains those kernels and not just the array data structures.\r\n\r\nNevertheless, I think having a common DataFrame implementation inside arrow makes sense, especially since the implementation can reuse all of the existing datafusion and logicalplan machinery.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jhorstmann",
                        "name": "jhorstmann",
                        "key": "jhorstmann",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "J\u00f6rn Horstmann",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2020-08-16T17:38:28.198+0000",
                    "updated": "2020-08-16T17:38:28.198+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322758/comment/17179274",
                    "id": "17179274",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "Hi [~jhorstmann], the scalar functions on the rust-dataframe library mainly call the Arrow compute functions. As we have implemented compute functions with an array being the smallest unit, I iterate the chunked arrays and call scalar functions on the arrays, before grouping them again into a chunk.\r\n\r\nI explored usin Rayon for parallelising those compute functions, but it's not a priority (the project is really for me to explore ideas, with the goal being to create a lazy dataframe ala spark).\r\n\r\nThere's scope to add a lot of compute functions to Arrow so that downstream users can reuse them, and so we can optimise performance from one place. I haven't yet seen interest in functions like trig, temporal functions (I have a Jira open for this as I tend to do a lot of datetime conversions), and other functions beyond what we have. I think DF has some of these as UDFs, which probably makes sense to keep them there for now.\r\n\r\nRegarding performance, we've found some patterns that help with autovectorisation when writing compute functions, I think at the least we could write them up so that downstream users can at least follow them.\r\n\r\nOne common mistake I've seen is that we iterate through array values, checking if a slot is valid or null, and computing the function if valid. An approach that works is to ignore nulls and calculate them from the validty mask.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2020-08-17T23:45:23.403+0000",
                    "updated": "2020-08-17T23:45:23.403+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z0hs2w:",
        "customfield_12314139": null
    }
}