{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13274214",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214",
    "key": "ARROW-7382",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346358",
                "id": "12346358",
                "description": "",
                "name": "0.15.1",
                "archived": false,
                "released": true,
                "releaseDate": "2019-11-01"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7382/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 18,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/358954",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FsDsD::Make\nURL: https://github.com/apache/arrow/pull/6027\n \n \n   Previously an omitted interceding directory (providing `/a=1/b=2/data` but not `/a=1` and `/a=1/b=2`) resulted in clobbered partition information. Now if any directories are missing they will be inserted\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-12T21:51:38.491+0000",
                    "updated": "2019-12-12T21:51:38.491+0000",
                    "started": "2019-12-12T21:51:38.490+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "358954",
                    "issueId": "13274214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/358964",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FsDsD::Make\nURL: https://github.com/apache/arrow/pull/6027#issuecomment-565206319\n \n \n   https://issues.apache.org/jira/browse/ARROW-7382\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-12T22:00:49.710+0000",
                    "updated": "2019-12-12T22:00:49.710+0000",
                    "started": "2019-12-12T22:00:49.710+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "358964",
                    "issueId": "13274214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/359105",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FsDsD::Make\nURL: https://github.com/apache/arrow/pull/6027#discussion_r357466075\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/path_util.h\n ##########\n @@ -79,6 +79,12 @@ ARROW_EXPORT\n util::optional<util::string_view> RemoveAncestor(util::string_view ancestor,\n                                                  util::string_view descendant);\n \n+/// Return a vector of paths which are descendants of ancestor but ancestors of descendant\n+/// (not inclusive of either argument).\n \n Review comment:\n   I'm confused by the wording, just put an example.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-13T03:18:06.338+0000",
                    "updated": "2019-12-13T03:18:06.338+0000",
                    "started": "2019-12-13T03:18:06.337+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "359105",
                    "issueId": "13274214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/359106",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FsDsD::Make\nURL: https://github.com/apache/arrow/pull/6027#discussion_r357466966\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery.cc\n ##########\n @@ -40,14 +40,18 @@ DataSourceDiscovery::DataSourceDiscovery()\n       root_partition_(scalar(true)) {}\n \n FileSystemDataSourceDiscovery::FileSystemDataSourceDiscovery(\n-    fs::FileSystemPtr filesystem, fs::FileStatsVector files, FileFormatPtr format,\n+    fs::FileSystemPtr filesystem, fs::PathForest forest, FileFormatPtr format,\n     FileSystemDiscoveryOptions options)\n     : fs_(std::move(filesystem)),\n-      files_(std::move(files)),\n+      forest_(std::move(forest)),\n       format_(std::move(format)),\n       options_(std::move(options)) {}\n \n bool StartsWithAnyOf(const std::vector<std::string>& prefixes, const std::string& path) {\n+  if (prefixes.empty()) {\n \n Review comment:\n   Is this for performance or an actual bug, it this is a bug, add a test.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-13T03:18:06.554+0000",
                    "updated": "2019-12-13T03:18:06.554+0000",
                    "started": "2019-12-13T03:18:06.554+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "359106",
                    "issueId": "13274214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/359107",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FsDsD::Make\nURL: https://github.com/apache/arrow/pull/6027#discussion_r357466914\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery_test.cc\n ##########\n @@ -56,6 +56,9 @@ class FileSystemDataSourceDiscoveryTest : public TestFileSystemDataSource {\n TEST_F(FileSystemDataSourceDiscoveryTest, Basic) {\n   MakeDiscovery({fs::File(\"a\"), fs::File(\"b\")});\n   AssertFinishWithPaths({\"a\", \"b\"});\n+\n+  // missing directory\n+  MakeDiscovery({fs::Dir(\"a\"), fs::Dir(\"a/b\"), fs::File(\"a/b/c\")});\n \n Review comment:\n   There doesn't seem to be missing anything, is it verifying something?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-13T03:18:06.579+0000",
                    "updated": "2019-12-13T03:18:06.579+0000",
                    "started": "2019-12-13T03:18:06.579+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "359107",
                    "issueId": "13274214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/359108",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FsDsD::Make\nURL: https://github.com/apache/arrow/pull/6027#discussion_r357468858\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery.cc\n ##########\n @@ -58,57 +62,88 @@ bool StartsWithAnyOf(const std::vector<std::string>& prefixes, const std::string\n   return std::any_of(prefixes.cbegin(), prefixes.cend(), matches_prefix);\n }\n \n-Result<DataSourceDiscoveryPtr> FileSystemDataSourceDiscovery::Make(\n-    fs::FileSystemPtr fs, fs::FileStatsVector files, FileFormatPtr format,\n-    FileSystemDiscoveryOptions options) {\n-  DCHECK_NE(format, nullptr);\n-\n-  bool has_prefixes = !options.ignore_prefixes.empty();\n-  std::vector<fs::FileStats> filtered;\n-  for (const auto& stat : files) {\n-    if (stat.IsFile()) {\n-      const std::string& path = stat.path();\n+Status FileSystemDataSourceDiscovery::Filter(const fs::FileSystemPtr& filesystem,\n+                                             const FileFormatPtr& format,\n+                                             const FileSystemDiscoveryOptions& options,\n+                                             fs::FileStatsVector* files) {\n+  for (auto it = files->begin(); it != files->end();) {\n+    if (StartsWithAnyOf(options.ignore_prefixes, it->path())) {\n+      files->erase(it);\n+      continue;\n+    }\n \n-      if (has_prefixes && StartsWithAnyOf(options.ignore_prefixes, path)) {\n+    if (it->IsFile() && options.exclude_invalid_files) {\n+      ARROW_ASSIGN_OR_RAISE(\n+          auto supported, format->IsSupported(FileSource(it->path(), filesystem.get())));\n+      if (!supported) {\n+        files->erase(it);\n         continue;\n       }\n+    }\n+\n+    ++it;\n+  }\n+  return Status::OK();\n+}\n+\n+Result<DataSourceDiscoveryPtr> FileSystemDataSourceDiscovery::Make(\n+    fs::FileSystemPtr filesystem, const std::vector<std::string>& paths,\n+    FileFormatPtr format, FileSystemDiscoveryOptions options) {\n+  DCHECK_NE(format, nullptr);\n+\n+  ARROW_ASSIGN_OR_RAISE(auto files, filesystem->GetTargetStats(paths));\n+  ARROW_ASSIGN_OR_RAISE(auto forest, fs::PathForest::Make(std::move(files)));\n \n-      if (options.exclude_invalid_files) {\n-        ARROW_ASSIGN_OR_RAISE(auto supported,\n-                              format->IsSupported(FileSource(path, fs.get())));\n-        if (!supported) {\n-          continue;\n-        }\n+  std::vector<std::string> missing;\n \n Review comment:\n   Use `unordered_set` instead? \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-13T03:18:06.636+0000",
                    "updated": "2019-12-13T03:18:06.636+0000",
                    "started": "2019-12-13T03:18:06.636+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "359108",
                    "issueId": "13274214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/359109",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FsDsD::Make\nURL: https://github.com/apache/arrow/pull/6027#discussion_r357470143\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery.cc\n ##########\n @@ -58,57 +62,88 @@ bool StartsWithAnyOf(const std::vector<std::string>& prefixes, const std::string\n   return std::any_of(prefixes.cbegin(), prefixes.cend(), matches_prefix);\n }\n \n-Result<DataSourceDiscoveryPtr> FileSystemDataSourceDiscovery::Make(\n-    fs::FileSystemPtr fs, fs::FileStatsVector files, FileFormatPtr format,\n-    FileSystemDiscoveryOptions options) {\n-  DCHECK_NE(format, nullptr);\n-\n-  bool has_prefixes = !options.ignore_prefixes.empty();\n-  std::vector<fs::FileStats> filtered;\n-  for (const auto& stat : files) {\n-    if (stat.IsFile()) {\n-      const std::string& path = stat.path();\n+Status FileSystemDataSourceDiscovery::Filter(const fs::FileSystemPtr& filesystem,\n+                                             const FileFormatPtr& format,\n+                                             const FileSystemDiscoveryOptions& options,\n+                                             fs::FileStatsVector* files) {\n+  for (auto it = files->begin(); it != files->end();) {\n+    if (StartsWithAnyOf(options.ignore_prefixes, it->path())) {\n+      files->erase(it);\n+      continue;\n+    }\n \n-      if (has_prefixes && StartsWithAnyOf(options.ignore_prefixes, path)) {\n+    if (it->IsFile() && options.exclude_invalid_files) {\n+      ARROW_ASSIGN_OR_RAISE(\n+          auto supported, format->IsSupported(FileSource(it->path(), filesystem.get())));\n+      if (!supported) {\n+        files->erase(it);\n         continue;\n       }\n+    }\n+\n+    ++it;\n+  }\n+  return Status::OK();\n+}\n+\n+Result<DataSourceDiscoveryPtr> FileSystemDataSourceDiscovery::Make(\n+    fs::FileSystemPtr filesystem, const std::vector<std::string>& paths,\n+    FileFormatPtr format, FileSystemDiscoveryOptions options) {\n+  DCHECK_NE(format, nullptr);\n+\n+  ARROW_ASSIGN_OR_RAISE(auto files, filesystem->GetTargetStats(paths));\n+  ARROW_ASSIGN_OR_RAISE(auto forest, fs::PathForest::Make(std::move(files)));\n \n-      if (options.exclude_invalid_files) {\n-        ARROW_ASSIGN_OR_RAISE(auto supported,\n-                              format->IsSupported(FileSource(path, fs.get())));\n-        if (!supported) {\n-          continue;\n-        }\n+  std::vector<std::string> missing;\n+  DCHECK_OK(forest.Visit([&missing](fs::PathForest::Ref ref) {\n+    if (auto parent = ref.parent()) {\n \n Review comment:\n   Shouldn't you do this if there's no parent?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-13T03:18:06.825+0000",
                    "updated": "2019-12-13T03:18:06.825+0000",
                    "started": "2019-12-13T03:18:06.825+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "359109",
                    "issueId": "13274214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/359110",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FsDsD::Make\nURL: https://github.com/apache/arrow/pull/6027#discussion_r357469139\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery.cc\n ##########\n @@ -58,57 +62,88 @@ bool StartsWithAnyOf(const std::vector<std::string>& prefixes, const std::string\n   return std::any_of(prefixes.cbegin(), prefixes.cend(), matches_prefix);\n }\n \n-Result<DataSourceDiscoveryPtr> FileSystemDataSourceDiscovery::Make(\n-    fs::FileSystemPtr fs, fs::FileStatsVector files, FileFormatPtr format,\n-    FileSystemDiscoveryOptions options) {\n-  DCHECK_NE(format, nullptr);\n-\n-  bool has_prefixes = !options.ignore_prefixes.empty();\n-  std::vector<fs::FileStats> filtered;\n-  for (const auto& stat : files) {\n-    if (stat.IsFile()) {\n-      const std::string& path = stat.path();\n+Status FileSystemDataSourceDiscovery::Filter(const fs::FileSystemPtr& filesystem,\n+                                             const FileFormatPtr& format,\n+                                             const FileSystemDiscoveryOptions& options,\n+                                             fs::FileStatsVector* files) {\n+  for (auto it = files->begin(); it != files->end();) {\n+    if (StartsWithAnyOf(options.ignore_prefixes, it->path())) {\n+      files->erase(it);\n \n Review comment:\n   I'm not a fan of modifying an iterable while iterating. I'd say keep the function but for a single FileStats, and move the exclusion + loop at callsite. Don't modify in place, just create a second array, one more reason for ranges.\r\n   \r\n   It's also bad for performance, if you're deleting most of the elements, it's approaching O(n^2) (n-1 + n-2 + ...) move of elements in a std::vector.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-13T03:18:06.829+0000",
                    "updated": "2019-12-13T03:18:06.829+0000",
                    "started": "2019-12-13T03:18:06.829+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "359110",
                    "issueId": "13274214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/359111",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FsDsD::Make\nURL: https://github.com/apache/arrow/pull/6027#discussion_r357469255\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery.cc\n ##########\n @@ -58,57 +62,88 @@ bool StartsWithAnyOf(const std::vector<std::string>& prefixes, const std::string\n   return std::any_of(prefixes.cbegin(), prefixes.cend(), matches_prefix);\n }\n \n-Result<DataSourceDiscoveryPtr> FileSystemDataSourceDiscovery::Make(\n-    fs::FileSystemPtr fs, fs::FileStatsVector files, FileFormatPtr format,\n-    FileSystemDiscoveryOptions options) {\n-  DCHECK_NE(format, nullptr);\n-\n-  bool has_prefixes = !options.ignore_prefixes.empty();\n-  std::vector<fs::FileStats> filtered;\n-  for (const auto& stat : files) {\n-    if (stat.IsFile()) {\n-      const std::string& path = stat.path();\n+Status FileSystemDataSourceDiscovery::Filter(const fs::FileSystemPtr& filesystem,\n+                                             const FileFormatPtr& format,\n+                                             const FileSystemDiscoveryOptions& options,\n+                                             fs::FileStatsVector* files) {\n+  for (auto it = files->begin(); it != files->end();) {\n+    if (StartsWithAnyOf(options.ignore_prefixes, it->path())) {\n+      files->erase(it);\n+      continue;\n+    }\n \n-      if (has_prefixes && StartsWithAnyOf(options.ignore_prefixes, path)) {\n+    if (it->IsFile() && options.exclude_invalid_files) {\n+      ARROW_ASSIGN_OR_RAISE(\n+          auto supported, format->IsSupported(FileSource(it->path(), filesystem.get())));\n+      if (!supported) {\n+        files->erase(it);\n         continue;\n       }\n+    }\n+\n+    ++it;\n+  }\n+  return Status::OK();\n+}\n+\n+Result<DataSourceDiscoveryPtr> FileSystemDataSourceDiscovery::Make(\n+    fs::FileSystemPtr filesystem, const std::vector<std::string>& paths,\n+    FileFormatPtr format, FileSystemDiscoveryOptions options) {\n+  DCHECK_NE(format, nullptr);\n+\n+  ARROW_ASSIGN_OR_RAISE(auto files, filesystem->GetTargetStats(paths));\n+  ARROW_ASSIGN_OR_RAISE(auto forest, fs::PathForest::Make(std::move(files)));\n \n-      if (options.exclude_invalid_files) {\n-        ARROW_ASSIGN_OR_RAISE(auto supported,\n-                              format->IsSupported(FileSource(path, fs.get())));\n-        if (!supported) {\n-          continue;\n-        }\n+  std::vector<std::string> missing;\n+  DCHECK_OK(forest.Visit([&missing](fs::PathForest::Ref ref) {\n+    if (auto parent = ref.parent()) {\n+      for (auto&& ancestor :\n+           fs::internal::GatherAncestry(parent.stats().path(), ref.stats().path())) {\n+        missing.push_back(std::move(ancestor));\n       }\n     }\n+    return Status::OK();\n+  }));\n+\n+  files = std::move(forest).stats();\n \n-    filtered.push_back(stat);\n+  for (auto&& path : missing) {\n+    ARROW_ASSIGN_OR_RAISE(auto file, filesystem->GetTargetStats(std::move(path)));\n+    files.emplace_back(std::move(file));\n   }\n \n+  RETURN_NOT_OK(Filter(filesystem, format, options, &files));\n \n Review comment:\n   Filter needs to also apply before creating the first PathForest (if you refactor the filter fn, you can also filter ancestors).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-13T03:18:06.927+0000",
                    "updated": "2019-12-13T03:18:06.927+0000",
                    "started": "2019-12-13T03:18:06.927+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "359111",
                    "issueId": "13274214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/359341",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FsDsD::Make\nURL: https://github.com/apache/arrow/pull/6027#discussion_r357624092\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery.cc\n ##########\n @@ -58,57 +62,88 @@ bool StartsWithAnyOf(const std::vector<std::string>& prefixes, const std::string\n   return std::any_of(prefixes.cbegin(), prefixes.cend(), matches_prefix);\n }\n \n-Result<DataSourceDiscoveryPtr> FileSystemDataSourceDiscovery::Make(\n-    fs::FileSystemPtr fs, fs::FileStatsVector files, FileFormatPtr format,\n-    FileSystemDiscoveryOptions options) {\n-  DCHECK_NE(format, nullptr);\n-\n-  bool has_prefixes = !options.ignore_prefixes.empty();\n-  std::vector<fs::FileStats> filtered;\n-  for (const auto& stat : files) {\n-    if (stat.IsFile()) {\n-      const std::string& path = stat.path();\n+Status FileSystemDataSourceDiscovery::Filter(const fs::FileSystemPtr& filesystem,\n+                                             const FileFormatPtr& format,\n+                                             const FileSystemDiscoveryOptions& options,\n+                                             fs::FileStatsVector* files) {\n+  for (auto it = files->begin(); it != files->end();) {\n+    if (StartsWithAnyOf(options.ignore_prefixes, it->path())) {\n+      files->erase(it);\n \n Review comment:\n   Alright.\r\n   \r\n   I would've just used `remove_if` but STL algorithms don't play well with Status return. Handling that with ranges is going to be a challenge\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-13T12:32:13.630+0000",
                    "updated": "2019-12-13T12:32:13.630+0000",
                    "started": "2019-12-13T12:32:13.629+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "359341",
                    "issueId": "13274214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/359343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FsDsD::Make\nURL: https://github.com/apache/arrow/pull/6027#discussion_r357625769\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery.cc\n ##########\n @@ -58,57 +62,88 @@ bool StartsWithAnyOf(const std::vector<std::string>& prefixes, const std::string\n   return std::any_of(prefixes.cbegin(), prefixes.cend(), matches_prefix);\n }\n \n-Result<DataSourceDiscoveryPtr> FileSystemDataSourceDiscovery::Make(\n-    fs::FileSystemPtr fs, fs::FileStatsVector files, FileFormatPtr format,\n-    FileSystemDiscoveryOptions options) {\n-  DCHECK_NE(format, nullptr);\n-\n-  bool has_prefixes = !options.ignore_prefixes.empty();\n-  std::vector<fs::FileStats> filtered;\n-  for (const auto& stat : files) {\n-    if (stat.IsFile()) {\n-      const std::string& path = stat.path();\n+Status FileSystemDataSourceDiscovery::Filter(const fs::FileSystemPtr& filesystem,\n+                                             const FileFormatPtr& format,\n+                                             const FileSystemDiscoveryOptions& options,\n+                                             fs::FileStatsVector* files) {\n+  for (auto it = files->begin(); it != files->end();) {\n+    if (StartsWithAnyOf(options.ignore_prefixes, it->path())) {\n+      files->erase(it);\n+      continue;\n+    }\n \n-      if (has_prefixes && StartsWithAnyOf(options.ignore_prefixes, path)) {\n+    if (it->IsFile() && options.exclude_invalid_files) {\n+      ARROW_ASSIGN_OR_RAISE(\n+          auto supported, format->IsSupported(FileSource(it->path(), filesystem.get())));\n+      if (!supported) {\n+        files->erase(it);\n         continue;\n       }\n+    }\n+\n+    ++it;\n+  }\n+  return Status::OK();\n+}\n+\n+Result<DataSourceDiscoveryPtr> FileSystemDataSourceDiscovery::Make(\n+    fs::FileSystemPtr filesystem, const std::vector<std::string>& paths,\n+    FileFormatPtr format, FileSystemDiscoveryOptions options) {\n+  DCHECK_NE(format, nullptr);\n+\n+  ARROW_ASSIGN_OR_RAISE(auto files, filesystem->GetTargetStats(paths));\n+  ARROW_ASSIGN_OR_RAISE(auto forest, fs::PathForest::Make(std::move(files)));\n \n-      if (options.exclude_invalid_files) {\n-        ARROW_ASSIGN_OR_RAISE(auto supported,\n-                              format->IsSupported(FileSource(path, fs.get())));\n-        if (!supported) {\n-          continue;\n-        }\n+  std::vector<std::string> missing;\n \n Review comment:\n   I don't see an advantage over vector; uniqueness is guaranteed, they're both O(1) insert, and vector is slightly friendlier to the allocator\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-13T12:37:27.513+0000",
                    "updated": "2019-12-13T12:37:27.513+0000",
                    "started": "2019-12-13T12:37:27.512+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "359343",
                    "issueId": "13274214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/359346",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FsDsD::Make\nURL: https://github.com/apache/arrow/pull/6027#discussion_r357626275\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery_test.cc\n ##########\n @@ -56,6 +56,9 @@ class FileSystemDataSourceDiscoveryTest : public TestFileSystemDataSource {\n TEST_F(FileSystemDataSourceDiscoveryTest, Basic) {\n   MakeDiscovery({fs::File(\"a\"), fs::File(\"b\")});\n   AssertFinishWithPaths({\"a\", \"b\"});\n+\n+  // missing directory\n+  MakeDiscovery({fs::Dir(\"a\"), fs::Dir(\"a/b\"), fs::File(\"a/b/c\")});\n \n Review comment:\n   I added it as the trivial case of a missing directory. I will move it above that comment\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-13T12:38:54.273+0000",
                    "updated": "2019-12-13T12:38:54.273+0000",
                    "started": "2019-12-13T12:38:54.273+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "359346",
                    "issueId": "13274214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/359347",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FsDsD::Make\nURL: https://github.com/apache/arrow/pull/6027#discussion_r357626576\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery.cc\n ##########\n @@ -40,14 +40,18 @@ DataSourceDiscovery::DataSourceDiscovery()\n       root_partition_(scalar(true)) {}\n \n FileSystemDataSourceDiscovery::FileSystemDataSourceDiscovery(\n-    fs::FileSystemPtr filesystem, fs::FileStatsVector files, FileFormatPtr format,\n+    fs::FileSystemPtr filesystem, fs::PathForest forest, FileFormatPtr format,\n     FileSystemDiscoveryOptions options)\n     : fs_(std::move(filesystem)),\n-      files_(std::move(files)),\n+      forest_(std::move(forest)),\n       format_(std::move(format)),\n       options_(std::move(options)) {}\n \n bool StartsWithAnyOf(const std::vector<std::string>& prefixes, const std::string& path) {\n+  if (prefixes.empty()) {\n \n Review comment:\n   It just seemed more clear to me; I believe it's equivalent semantically and performance-wise\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-13T12:39:46.991+0000",
                    "updated": "2019-12-13T12:39:46.991+0000",
                    "started": "2019-12-13T12:39:46.990+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "359347",
                    "issueId": "13274214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/359348",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FsDsD::Make\nURL: https://github.com/apache/arrow/pull/6027#discussion_r357626726\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/path_util.h\n ##########\n @@ -79,6 +79,12 @@ ARROW_EXPORT\n util::optional<util::string_view> RemoveAncestor(util::string_view ancestor,\n                                                  util::string_view descendant);\n \n+/// Return a vector of paths which are descendants of ancestor but ancestors of descendant\n+/// (not inclusive of either argument).\n \n Review comment:\n   Okay. To be honest I hate the name of this function, can you think of a better one?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-13T12:40:10.148+0000",
                    "updated": "2019-12-13T12:40:10.148+0000",
                    "started": "2019-12-13T12:40:10.147+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "359348",
                    "issueId": "13274214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/359349",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FsDsD::Make\nURL: https://github.com/apache/arrow/pull/6027#discussion_r357627186\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery.cc\n ##########\n @@ -58,57 +62,88 @@ bool StartsWithAnyOf(const std::vector<std::string>& prefixes, const std::string\n   return std::any_of(prefixes.cbegin(), prefixes.cend(), matches_prefix);\n }\n \n-Result<DataSourceDiscoveryPtr> FileSystemDataSourceDiscovery::Make(\n-    fs::FileSystemPtr fs, fs::FileStatsVector files, FileFormatPtr format,\n-    FileSystemDiscoveryOptions options) {\n-  DCHECK_NE(format, nullptr);\n-\n-  bool has_prefixes = !options.ignore_prefixes.empty();\n-  std::vector<fs::FileStats> filtered;\n-  for (const auto& stat : files) {\n-    if (stat.IsFile()) {\n-      const std::string& path = stat.path();\n+Status FileSystemDataSourceDiscovery::Filter(const fs::FileSystemPtr& filesystem,\n+                                             const FileFormatPtr& format,\n+                                             const FileSystemDiscoveryOptions& options,\n+                                             fs::FileStatsVector* files) {\n+  for (auto it = files->begin(); it != files->end();) {\n+    if (StartsWithAnyOf(options.ignore_prefixes, it->path())) {\n+      files->erase(it);\n+      continue;\n+    }\n \n-      if (has_prefixes && StartsWithAnyOf(options.ignore_prefixes, path)) {\n+    if (it->IsFile() && options.exclude_invalid_files) {\n+      ARROW_ASSIGN_OR_RAISE(\n+          auto supported, format->IsSupported(FileSource(it->path(), filesystem.get())));\n+      if (!supported) {\n+        files->erase(it);\n         continue;\n       }\n+    }\n+\n+    ++it;\n+  }\n+  return Status::OK();\n+}\n+\n+Result<DataSourceDiscoveryPtr> FileSystemDataSourceDiscovery::Make(\n+    fs::FileSystemPtr filesystem, const std::vector<std::string>& paths,\n+    FileFormatPtr format, FileSystemDiscoveryOptions options) {\n+  DCHECK_NE(format, nullptr);\n+\n+  ARROW_ASSIGN_OR_RAISE(auto files, filesystem->GetTargetStats(paths));\n+  ARROW_ASSIGN_OR_RAISE(auto forest, fs::PathForest::Make(std::move(files)));\n \n-      if (options.exclude_invalid_files) {\n-        ARROW_ASSIGN_OR_RAISE(auto supported,\n-                              format->IsSupported(FileSource(path, fs.get())));\n-        if (!supported) {\n-          continue;\n-        }\n+  std::vector<std::string> missing;\n+  DCHECK_OK(forest.Visit([&missing](fs::PathForest::Ref ref) {\n+    if (auto parent = ref.parent()) {\n \n Review comment:\n   Ah, you're right: in that case we would consider the parent to be the partition_base_dir. I'll fix it\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-13T12:41:42.277+0000",
                    "updated": "2019-12-13T12:41:42.277+0000",
                    "started": "2019-12-13T12:41:42.277+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "359349",
                    "issueId": "13274214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/359352",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FsDsD::Make\nURL: https://github.com/apache/arrow/pull/6027#discussion_r357632488\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery.cc\n ##########\n @@ -58,57 +62,88 @@ bool StartsWithAnyOf(const std::vector<std::string>& prefixes, const std::string\n   return std::any_of(prefixes.cbegin(), prefixes.cend(), matches_prefix);\n }\n \n-Result<DataSourceDiscoveryPtr> FileSystemDataSourceDiscovery::Make(\n-    fs::FileSystemPtr fs, fs::FileStatsVector files, FileFormatPtr format,\n-    FileSystemDiscoveryOptions options) {\n-  DCHECK_NE(format, nullptr);\n-\n-  bool has_prefixes = !options.ignore_prefixes.empty();\n-  std::vector<fs::FileStats> filtered;\n-  for (const auto& stat : files) {\n-    if (stat.IsFile()) {\n-      const std::string& path = stat.path();\n+Status FileSystemDataSourceDiscovery::Filter(const fs::FileSystemPtr& filesystem,\n+                                             const FileFormatPtr& format,\n+                                             const FileSystemDiscoveryOptions& options,\n+                                             fs::FileStatsVector* files) {\n+  for (auto it = files->begin(); it != files->end();) {\n+    if (StartsWithAnyOf(options.ignore_prefixes, it->path())) {\n+      files->erase(it);\n+      continue;\n+    }\n \n-      if (has_prefixes && StartsWithAnyOf(options.ignore_prefixes, path)) {\n+    if (it->IsFile() && options.exclude_invalid_files) {\n+      ARROW_ASSIGN_OR_RAISE(\n+          auto supported, format->IsSupported(FileSource(it->path(), filesystem.get())));\n+      if (!supported) {\n+        files->erase(it);\n         continue;\n       }\n+    }\n+\n+    ++it;\n+  }\n+  return Status::OK();\n+}\n+\n+Result<DataSourceDiscoveryPtr> FileSystemDataSourceDiscovery::Make(\n+    fs::FileSystemPtr filesystem, const std::vector<std::string>& paths,\n+    FileFormatPtr format, FileSystemDiscoveryOptions options) {\n+  DCHECK_NE(format, nullptr);\n+\n+  ARROW_ASSIGN_OR_RAISE(auto files, filesystem->GetTargetStats(paths));\n+  ARROW_ASSIGN_OR_RAISE(auto forest, fs::PathForest::Make(std::move(files)));\n \n-      if (options.exclude_invalid_files) {\n-        ARROW_ASSIGN_OR_RAISE(auto supported,\n-                              format->IsSupported(FileSource(path, fs.get())));\n-        if (!supported) {\n-          continue;\n-        }\n+  std::vector<std::string> missing;\n+  DCHECK_OK(forest.Visit([&missing](fs::PathForest::Ref ref) {\n+    if (auto parent = ref.parent()) {\n+      for (auto&& ancestor :\n+           fs::internal::GatherAncestry(parent.stats().path(), ref.stats().path())) {\n+        missing.push_back(std::move(ancestor));\n       }\n     }\n+    return Status::OK();\n+  }));\n+\n+  files = std::move(forest).stats();\n \n-    filtered.push_back(stat);\n+  for (auto&& path : missing) {\n+    ARROW_ASSIGN_OR_RAISE(auto file, filesystem->GetTargetStats(std::move(path)));\n+    files.emplace_back(std::move(file));\n   }\n \n+  RETURN_NOT_OK(Filter(filesystem, format, options, &files));\n \n Review comment:\n   I don't understand why Filter needs to be applied before. Is it a performance consideration?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-13T12:57:10.462+0000",
                    "updated": "2019-12-13T12:57:10.462+0000",
                    "started": "2019-12-13T12:57:10.462+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "359352",
                    "issueId": "13274214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/359390",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FsDsD::Make\nURL: https://github.com/apache/arrow/pull/6027#discussion_r357648183\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery_test.cc\n ##########\n @@ -56,6 +56,9 @@ class FileSystemDataSourceDiscoveryTest : public TestFileSystemDataSource {\n TEST_F(FileSystemDataSourceDiscoveryTest, Basic) {\n   MakeDiscovery({fs::File(\"a\"), fs::File(\"b\")});\n   AssertFinishWithPaths({\"a\", \"b\"});\n+\n+  // missing directory\n+  MakeDiscovery({fs::Dir(\"a\"), fs::Dir(\"a/b\"), fs::File(\"a/b/c\")});\n \n Review comment:\n   Ah, and the other tests were lost in a stash. Thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-13T13:38:35.635+0000",
                    "updated": "2019-12-13T13:38:35.635+0000",
                    "started": "2019-12-13T13:38:35.634+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "359390",
                    "issueId": "13274214"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/worklog/359445",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6027: ARROW-7382: [C++][Dataset] Insert missing directories in FileSystemDataSourceDiscovery::Make\nURL: https://github.com/apache/arrow/pull/6027#discussion_r357693295\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery.cc\n ##########\n @@ -58,57 +62,88 @@ bool StartsWithAnyOf(const std::vector<std::string>& prefixes, const std::string\n   return std::any_of(prefixes.cbegin(), prefixes.cend(), matches_prefix);\n }\n \n-Result<DataSourceDiscoveryPtr> FileSystemDataSourceDiscovery::Make(\n-    fs::FileSystemPtr fs, fs::FileStatsVector files, FileFormatPtr format,\n-    FileSystemDiscoveryOptions options) {\n-  DCHECK_NE(format, nullptr);\n-\n-  bool has_prefixes = !options.ignore_prefixes.empty();\n-  std::vector<fs::FileStats> filtered;\n-  for (const auto& stat : files) {\n-    if (stat.IsFile()) {\n-      const std::string& path = stat.path();\n+Status FileSystemDataSourceDiscovery::Filter(const fs::FileSystemPtr& filesystem,\n+                                             const FileFormatPtr& format,\n+                                             const FileSystemDiscoveryOptions& options,\n+                                             fs::FileStatsVector* files) {\n+  for (auto it = files->begin(); it != files->end();) {\n+    if (StartsWithAnyOf(options.ignore_prefixes, it->path())) {\n+      files->erase(it);\n+      continue;\n+    }\n \n-      if (has_prefixes && StartsWithAnyOf(options.ignore_prefixes, path)) {\n+    if (it->IsFile() && options.exclude_invalid_files) {\n+      ARROW_ASSIGN_OR_RAISE(\n+          auto supported, format->IsSupported(FileSource(it->path(), filesystem.get())));\n+      if (!supported) {\n+        files->erase(it);\n         continue;\n       }\n+    }\n+\n+    ++it;\n+  }\n+  return Status::OK();\n+}\n+\n+Result<DataSourceDiscoveryPtr> FileSystemDataSourceDiscovery::Make(\n+    fs::FileSystemPtr filesystem, const std::vector<std::string>& paths,\n+    FileFormatPtr format, FileSystemDiscoveryOptions options) {\n+  DCHECK_NE(format, nullptr);\n+\n+  ARROW_ASSIGN_OR_RAISE(auto files, filesystem->GetTargetStats(paths));\n+  ARROW_ASSIGN_OR_RAISE(auto forest, fs::PathForest::Make(std::move(files)));\n \n-      if (options.exclude_invalid_files) {\n-        ARROW_ASSIGN_OR_RAISE(auto supported,\n-                              format->IsSupported(FileSource(path, fs.get())));\n-        if (!supported) {\n-          continue;\n-        }\n+  std::vector<std::string> missing;\n \n Review comment:\n   Ah, I see: missing segments are guaranteed within a single path but not between paths. I'll use the set\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-13T15:17:47.341+0000",
                    "updated": "2019-12-13T15:17:47.341+0000",
                    "started": "2019-12-13T15:17:47.340+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "359445",
                    "issueId": "13274214"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@563ad63a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@645520f7[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58bb5100[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@15a49078[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@14e5b20d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4a32be2c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4883c53b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7995bb03[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@40591be6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1fc51e1f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4939bac1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1da04d46[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Dec 19 18:02:24 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-12-19T18:02:24.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7382/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-12-12T17:58:58.000+0000",
        "updated": "2020-04-10T15:32:18.000+0000",
        "timeoriginalestimate": null,
        "description": "This constructor should not take a vector of filestats. Instead, provide a convenience constructor taking paths and a filesystem pointer. Also, ensure that missing parent directories are injected (otherwise partition scheme application will fail).",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset] Refactor FsDsDiscovery constructors",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13274214/comment/17000265",
                    "id": "17000265",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 6027\n[https://github.com/apache/arrow/pull/6027]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-12-19T18:02:24.308+0000",
                    "updated": "2019-12-19T18:02:24.308+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z09mgo:",
        "customfield_12314139": null
    }
}