{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13424444",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444",
    "key": "ARROW-15428",
    "fields": {
        "parent": {
            "id": "13423524",
            "key": "ARROW-15367",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13423524",
            "fields": {
                "summary": "[Python] Improve Classes and Methods Docstrings for 8.0.0",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
            "name": "alenka",
            "key": "alenkaf",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Alenka Frim",
            "active": true,
            "timeZone": "Europe/Ljubljana"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "aggregateprogress": {
            "progress": 15600,
            "total": 15600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 15600,
            "total": 15600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15428/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 26,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/747145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF opened a new pull request #12704:\nURL: https://github.com/apache/arrow/pull/12704\n\n\n   This PR is adding docstirng examples to:\r\n   \r\n   - /docs/python/generated/pyarrow.parquet.ParquetDataset.html\r\n   - /docs/python/generated/pyarrow.parquet.ParquetFile.html\r\n   - /docs/python/generated/pyarrow.parquet.ParquetWriter.html\r\n   - /docs/python/generated/pyarrow.parquet.read_table.html\r\n   - /docs/python/generated/pyarrow.parquet.write_table.html\r\n   - /docs/python/generated/pyarrow.parquet.write_to_dataset.html\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-24T11:48:38.902+0000",
                    "updated": "2022-03-24T11:48:38.902+0000",
                    "started": "2022-03-24T11:48:38.901+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "747145",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/747149",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on pull request #12704:\nURL: https://github.com/apache/arrow/pull/12704#issuecomment-1077543762\n\n\n   I wasn't able to build the docs (Sphinx hangs currently) to check the latest change for `csv.write_to_dataset` and `common_metadata`. Will do that as soon as the build of the docs starts working. \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-24T11:50:39.919+0000",
                    "updated": "2022-03-24T11:50:39.919+0000",
                    "started": "2022-03-24T11:50:39.919+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "747149",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/747180",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12704:\nURL: https://github.com/apache/arrow/pull/12704#issuecomment-1077571730\n\n\n   https://issues.apache.org/jira/browse/ARROW-15428\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-24T12:24:17.804+0000",
                    "updated": "2022-03-24T12:24:17.804+0000",
                    "started": "2022-03-24T12:24:17.804+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "747180",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/747639",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on pull request #12704:\nURL: https://github.com/apache/arrow/pull/12704#issuecomment-1078731558\n\n\n   @AlenkaF Thank you for working on this! Very helpful.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-25T07:24:29.240+0000",
                    "updated": "2022-03-25T07:24:29.240+0000",
                    "started": "2022-03-25T07:24:29.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "747639",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/747703",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on pull request #12704:\nURL: https://github.com/apache/arrow/pull/12704#issuecomment-1078864720\n\n\n   I would think `test_read_table_doesnt_warn` is failing due to my change in `common_metadata` property but am not sure. I will need to dig deeper into this test to understand it better.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-25T10:09:35.325+0000",
                    "updated": "2022-03-25T10:09:35.325+0000",
                    "started": "2022-03-25T10:09:35.325+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "747703",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/748456",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on pull request #12704:\nURL: https://github.com/apache/arrow/pull/12704#issuecomment-1080291719\n\n\n   The reason for the failing test is added deprecation warning to `common_metadata` property of `ParquetDataset`:\r\n   \r\n   ```python\r\n   In [1]: import pytest\r\n   In [2]: import pyarrow.parquet as pq\r\n   \r\n   In [3]: with pytest.warns(None) as record:\r\n       ...:     pq.read_table('v0.7.1.parquet',\r\n       ...:                   use_legacy_dataset=True)\r\n       ...: len(record)\r\n   Out[3]: 2\r\n   \r\n   In [4]: record[0].message\r\n   Out[4]: DeprecationWarning(\"Passing 'use_legacy_dataset=True' to get the legacy behaviour is deprecated as of pyarrow 8.0.0, and the legacy implementation will be removed in a future version.\")\r\n   \r\n   In [5]: record[1].message\r\n   Out[5]: DeprecationWarning(\"'ParquetDataset.common_metadata' attribute is deprecated as of pyarrow 5.0.0 and will be removed in a future version.\")\r\n   ```\r\n   As the `common_metadata` property is added to the `ParquetDataset` constructor the warning is caught even if the property isn't explicitly used.\r\n   \r\n   I will corrected the test to include the new warning and will keep the change for `common_metadata`.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-28T07:24:53.375+0000",
                    "updated": "2022-03-28T07:24:53.375+0000",
                    "started": "2022-03-28T07:24:53.375+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "748456",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/748461",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF edited a comment on pull request #12704:\nURL: https://github.com/apache/arrow/pull/12704#issuecomment-1080291719\n\n\n   The reason for the failing test is added deprecation warning to `common_metadata` property of `ParquetDataset`:\r\n   \r\n   ```python\r\n   In [1]: import pytest\r\n   In [2]: import pyarrow.parquet as pq\r\n   \r\n   In [3]: with pytest.warns(None) as record:\r\n       ...:     pq.read_table('v0.7.1.parquet',\r\n       ...:                   use_legacy_dataset=True)\r\n       ...: len(record)\r\n   Out[3]: 2\r\n   \r\n   In [4]: record[0].message\r\n   Out[4]: DeprecationWarning(\"Passing 'use_legacy_dataset=True' to get the legacy behaviour is deprecated as of pyarrow 8.0.0, and the legacy implementation will be removed in a future version.\")\r\n   \r\n   In [5]: record[1].message\r\n   Out[5]: DeprecationWarning(\"'ParquetDataset.common_metadata' attribute is deprecated as of pyarrow 5.0.0 and will be removed in a future version.\")\r\n   ```\r\n   I am not sure why the warning for `common_metadata` property is saved and none of the other deprecated `ParquetDataset` properties are.\r\n   \r\n   I will corrected the test to include the new warning and will keep the change for `common_metadata`.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-28T07:29:54.829+0000",
                    "updated": "2022-03-28T07:29:54.829+0000",
                    "started": "2022-03-28T07:29:54.828+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "748461",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/748599",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on pull request #12704:\nURL: https://github.com/apache/arrow/pull/12704#issuecomment-1080635925\n\n\n   This PR was checked with `pytest --doctest-modules python/pyarrow/parquet.py`.\r\n   \r\n   I do need to look at CI errors, one looks related.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-28T13:15:21.926+0000",
                    "updated": "2022-03-28T13:15:21.926+0000",
                    "started": "2022-03-28T13:15:21.925+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "748599",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/749150",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on pull request #12704:\nURL: https://github.com/apache/arrow/pull/12704#issuecomment-1081504287\n\n\n   One more TODO: I need to make the output lines from the docstring examples short and pass doctest also. One way is to use [doctest.ELLIPSIS](https://docs.python.org/2/library/doctest.html#doctest.ELLIPSIS) or `\\` to break the line.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-29T07:18:12.294+0000",
                    "updated": "2022-03-29T07:18:12.294+0000",
                    "started": "2022-03-29T07:18:12.294+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "749150",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/752117",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on PR #12704:\nURL: https://github.com/apache/arrow/pull/12704#issuecomment-1087232178\n\n   @AlenkaF left some feedbacks, let me know if you are ok with them\n\n\n",
                    "created": "2022-04-04T07:55:54.357+0000",
                    "updated": "2022-04-04T07:55:54.357+0000",
                    "started": "2022-04-04T07:55:54.357+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752117",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/752148",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on code in PR #12704:\nURL: https://github.com/apache/arrow/pull/12704#discussion_r838345396\n\n\n##########\npython/pyarrow/parquet.py:\n##########\n@@ -225,6 +225,64 @@ class ParquetFile:\n         in nanoseconds.\n     decryption_properties : FileDecryptionProperties, default None\n         File decryption properties for Parquet Modular Encryption.\n+\n+    Examples\n+    --------\n+\n+    Generate an example PyArrow Table and write it to Parquet file:\n+\n+    >>> import pandas as pd\n+    >>> import pyarrow as pa\n+    >>> df = pd.DataFrame({'year': [2020, 2022, 2021, 2022, 2019, 2021],\n+    ...                    'month': [3, 5, 7, 9, 11, 12],\n+    ...                    'day': [1, 5, 9, 13, 17, 23],\n+    ...                    'n_legs': [2, 2, 4, 4, 5, 100],\n+    ...                    'animal': [\"Flamingo\", \"Parrot\", \"Dog\", \"Horse\",\n+    ...                    \"Brittle stars\", \"Centipede\"]})\n+    >>> table = pa.Table.from_pandas(df)\n\nReview Comment:\n   Why going through pandas? Involving an external dependency for a pyarrow example does seem to add confusion. Especially in this case where we could do\r\n   ```suggestion\r\n       >>> import pyarrow as pa\r\n       >>> table = pa.table({'year': [2020, 2022, 2021, 2022, 2019, 2021],\r\n       ...                   'month': [3, 5, 7, 9, 11, 12],\r\n       ...                   'day': [1, 5, 9, 13, 17, 23],\r\n       ...                   'n_legs': [2, 2, 4, 4, 5, 100],\r\n       ...                   'animal': [\"Flamingo\", \"Parrot\", \"Dog\", \"Horse\",\r\n       ...                              \"Brittle stars\", \"Centipede\"]})\r\n   ```\r\n   and end up with even simpler code.\r\n   \r\n   The same seems to apply as well to all the subsequent usages of `DataFrame`\n\n\n\n##########\npython/pyarrow/parquet.py:\n##########\n@@ -612,6 +857,58 @@ def _sanitize_table(table, new_schema, flavor):\n     the batch size can help keep page sizes closer to the intended size.\n \"\"\"\n \n+_parquet_writer_example_doc = \"\"\"\\\n\nReview Comment:\n   I'm a bit confused, given that we use this docstring only once, why is a variable? \r\n   In the case of `_parquet_writer_arg_docs` it was a variable because the docstring was shared by multiple classes.\n\n\n\n##########\npython/pyarrow/parquet.py:\n##########\n@@ -369,6 +537,40 @@ def iter_batches(self, batch_size=65536, row_groups=None, columns=None,\n         -------\n         iterator of pyarrow.RecordBatch\n             Contents of each batch as a record batch\n+\n+        Examples\n+        --------\n+        Generate an example Parquet file:\n+\n+        >>> import pandas as pd\n+        >>> import pyarrow as pa\n+        >>> df = pd.DataFrame({'year': [2020, 2022, 2021, 2022, 2019, 2021],\n+        ...                    'month': [3, 5, 7, 9, 11, 12],\n+        ...                    'day': [1, 5, 9, 13, 17, 23],\n+        ...                    'n_legs': [2, 2, 4, 4, 5, 100],\n+        ...                    'animal': [\"Flamingo\", \"Parrot\", \"Dog\", \"Horse\",\n+        ...                    \"Brittle stars\", \"Centipede\"]})\n+        >>> table = pa.Table.from_pandas(df)\n+        >>> import pyarrow.parquet as pq\n+        >>> pq.write_table(table, 'example.parquet')\n+        >>> parquet_file = pq.ParquetFile('example.parquet')\n+\n+        Read streaming batches:\n+\n+        >>> for i in parquet_file.iter_batches(batch_size=3):\n\nReview Comment:\n   I wonder if we making the example more complex than needed to show the method capabilities.\r\n   The user might have not yet dig into the details of what each argument does and thus might not immediately notice that the output involves multiple record batches due to `batch_size=3`. \r\n   I'll leave it to your choice, but personally I would omit the `batch_size=3` argument and just show to the user that the output is a recordbatch without forcefully trying to show that they are more than one.\n\n\n\n##########\npython/pyarrow/parquet.py:\n##########\n@@ -1310,6 +1615,49 @@ def _open_dataset_file(dataset, path, meta=None):\n     you need to specify the field names or a full schema. See the\n     ``pyarrow.dataset.partitioning()`` function for more details.\"\"\"\n \n+_parquet_dataset_example = \"\"\"\\\n\nReview Comment:\n   Same as before, maybe better to inline this into the docstring?\n\n\n\n",
                    "created": "2022-04-04T08:57:13.185+0000",
                    "updated": "2022-04-04T08:57:13.185+0000",
                    "started": "2022-04-04T08:57:13.184+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752148",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/752152",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #12704:\nURL: https://github.com/apache/arrow/pull/12704#discussion_r841517758\n\n\n##########\npython/pyarrow/parquet.py:\n##########\n@@ -225,6 +225,64 @@ class ParquetFile:\n         in nanoseconds.\n     decryption_properties : FileDecryptionProperties, default None\n         File decryption properties for Parquet Modular Encryption.\n+\n+    Examples\n+    --------\n+\n+    Generate an example PyArrow Table and write it to Parquet file:\n+\n+    >>> import pandas as pd\n+    >>> import pyarrow as pa\n+    >>> df = pd.DataFrame({'year': [2020, 2022, 2021, 2022, 2019, 2021],\n+    ...                    'month': [3, 5, 7, 9, 11, 12],\n+    ...                    'day': [1, 5, 9, 13, 17, 23],\n+    ...                    'n_legs': [2, 2, 4, 4, 5, 100],\n+    ...                    'animal': [\"Flamingo\", \"Parrot\", \"Dog\", \"Horse\",\n+    ...                    \"Brittle stars\", \"Centipede\"]})\n+    >>> table = pa.Table.from_pandas(df)\n\nReview Comment:\n   Yes, agree with this. Will correct it in all applicable examples.\n\n\n\n",
                    "created": "2022-04-04T09:04:03.379+0000",
                    "updated": "2022-04-04T09:04:03.379+0000",
                    "started": "2022-04-04T09:04:03.379+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752152",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/752157",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #12704:\nURL: https://github.com/apache/arrow/pull/12704#discussion_r841525737\n\n\n##########\npython/pyarrow/parquet.py:\n##########\n@@ -612,6 +857,58 @@ def _sanitize_table(table, new_schema, flavor):\n     the batch size can help keep page sizes closer to the intended size.\n \"\"\"\n \n+_parquet_writer_example_doc = \"\"\"\\\n\nReview Comment:\n   If I remember correctly I was getting errors (KeyError I think) for `'year'` if I included the examples directly in the docstrings that were string formatted. For this reason I added one additional variable.\n\n\n\n",
                    "created": "2022-04-04T09:13:18.648+0000",
                    "updated": "2022-04-04T09:13:18.648+0000",
                    "started": "2022-04-04T09:13:18.648+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752157",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/752161",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #12704:\nURL: https://github.com/apache/arrow/pull/12704#discussion_r841518804\n\n\n##########\npython/pyarrow/parquet.py:\n##########\n@@ -225,6 +225,64 @@ class ParquetFile:\n         in nanoseconds.\n     decryption_properties : FileDecryptionProperties, default None\n         File decryption properties for Parquet Modular Encryption.\n+\n+    Examples\n+    --------\n+\n+    Generate an example PyArrow Table and write it to Parquet file:\n+\n+    >>> import pandas as pd\n+    >>> import pyarrow as pa\n+    >>> df = pd.DataFrame({'year': [2020, 2022, 2021, 2022, 2019, 2021],\n+    ...                    'month': [3, 5, 7, 9, 11, 12],\n+    ...                    'day': [1, 5, 9, 13, 17, 23],\n+    ...                    'n_legs': [2, 2, 4, 4, 5, 100],\n+    ...                    'animal': [\"Flamingo\", \"Parrot\", \"Dog\", \"Horse\",\n+    ...                    \"Brittle stars\", \"Centipede\"]})\n+    >>> table = pa.Table.from_pandas(df)\n+\n+    >>> import pyarrow.parquet as pq\n+    >>> pq.write_table(table, 'example.parquet')\n+\n+    create a ParquetFile object from the Parqet file:\n\nReview Comment:\n   ```suggestion\r\n       Create a ``ParquetFile`` object from the Parquet file:\r\n   ```\n\n\n\n##########\npython/pyarrow/parquet.py:\n##########\n@@ -225,6 +225,64 @@ class ParquetFile:\n         in nanoseconds.\n     decryption_properties : FileDecryptionProperties, default None\n         File decryption properties for Parquet Modular Encryption.\n+\n+    Examples\n+    --------\n+\n+    Generate an example PyArrow Table and write it to Parquet file:\n+\n+    >>> import pandas as pd\n+    >>> import pyarrow as pa\n+    >>> df = pd.DataFrame({'year': [2020, 2022, 2021, 2022, 2019, 2021],\n+    ...                    'month': [3, 5, 7, 9, 11, 12],\n+    ...                    'day': [1, 5, 9, 13, 17, 23],\n+    ...                    'n_legs': [2, 2, 4, 4, 5, 100],\n+    ...                    'animal': [\"Flamingo\", \"Parrot\", \"Dog\", \"Horse\",\n+    ...                    \"Brittle stars\", \"Centipede\"]})\n+    >>> table = pa.Table.from_pandas(df)\n+\n+    >>> import pyarrow.parquet as pq\n+    >>> pq.write_table(table, 'example.parquet')\n+\n+    create a ParquetFile object from the Parqet file:\n+\n+    >>> parquet_file = pq.ParquetFile('example.parquet')\n+\n+    read the data:\n+\n+    >>> parquet_file.read()\n+    pyarrow.Table\n+    year: int64\n+    month: int64\n+    day: int64\n+    n_legs: int64\n+    animal: string\n+    ----\n+    year: [[2020,2022,2021,2022,2019,2021]]\n+    month: [[3,5,7,9,11,12]]\n+    day: [[1,5,9,13,17,23]]\n+    n_legs: [[2,2,4,4,5,100]]\n+    animal: [[\"Flamingo\",\"Parrot\",\"Dog\",\"Horse\",\"Brittle stars\",\"Centipede\"]]\n+\n+    create a ParquetFile object with \"animals\" column as DictionaryArray:\n\nReview Comment:\n   ```suggestion\r\n       Create a ParquetFile object with \"animals\" column as DictionaryArray:\r\n   ```\n\n\n\n##########\npython/pyarrow/parquet.py:\n##########\n@@ -2177,13 +3031,13 @@ def write_to_dataset(table, root_path, partition_cols=None,\n     Parameters\n     ----------\n     table : pyarrow.Table\n-    root_path : str, pathlib.Path\n+    root_path : str, pathlib.Path\u00df\n\nReview Comment:\n   ```suggestion\r\n       root_path : str, pathlib.Path\r\n   ```\n\n\n\n##########\npython/pyarrow/parquet.py:\n##########\n@@ -2201,6 +3055,47 @@ def write_to_dataset(table, root_path, partition_cols=None,\n         Using `metadata_collector` in kwargs allows one to collect the\n         file metadata instances of dataset pieces. The file paths in the\n         ColumnChunkMetaData will be set relative to `root_path`.\n+\n+    Examples\n+    --------\n+    Generate an example PyArrow Table:\n+\n+    >>> import pyarrow as pa\n+    >>> import pandas as pd\n+    >>> df = pd.DataFrame({'year': [2020, 2022, 2021, 2022, 2019, 2021],\n+    ...                    'month': [3, 5, 7, 9, 11, 12],\n+    ...                    'day': [1, 5, 9, 13, 17, 23],\n+    ...                    'n_legs': [2, 2, 4, 4, 5, 100],\n+    ...                    'animals': [\"Flamingo\", \"Parrot\", \"Dog\", \"Horse\",\n+    ...                    \"Brittle stars\", \"Centipede\"]})\n+    >>> table = pa.Table.from_pandas(df)\n+\n+    and write it to a partitioned dataset:\n+\n+    >>> import pyarrow.parquet as pq\n+    >>> pq.write_to_dataset(table, root_path='dataset_name_3',\n+    ...                     partition_cols=['year', 'month', 'day'],\n+    ...                     use_legacy_dataset=False\n+    ...                    )\n+    >>> pq.ParquetDataset('dataset_name_3', use_legacy_dataset=False).files\n+    ['dataset_name_3/year=2019/month=11/day=17/part-0.parquet', ...\n+\n+    Use old Arrow Dataset API and override the partition filename:\n+\n+    >>> pq.write_to_dataset(table, root_path='dataset_name_5',\n+    ...                     partition_cols=['year', 'month', 'day'],\n+    ...                     partition_filename_cb=lambda x:\n+    ...                     str(x[0]) + str(x[1]) + str(x[2])  + '.parquet'\n+    ...                    )\n+    >>> pq.ParquetDataset('dataset_name_5/', use_legacy_dataset=False).files\n+    ['dataset_name_5/year=2019/month=11/day=17/20191117.parquet', ...\n+\n+    Write to a single Parquet file:\n\nReview Comment:\n   It still creates a directory, but with a single file\n\n\n\n##########\npython/pyarrow/parquet.py:\n##########\n@@ -225,6 +225,64 @@ class ParquetFile:\n         in nanoseconds.\n     decryption_properties : FileDecryptionProperties, default None\n         File decryption properties for Parquet Modular Encryption.\n+\n+    Examples\n+    --------\n+\n+    Generate an example PyArrow Table and write it to Parquet file:\n+\n+    >>> import pandas as pd\n+    >>> import pyarrow as pa\n+    >>> df = pd.DataFrame({'year': [2020, 2022, 2021, 2022, 2019, 2021],\n+    ...                    'month': [3, 5, 7, 9, 11, 12],\n+    ...                    'day': [1, 5, 9, 13, 17, 23],\n+    ...                    'n_legs': [2, 2, 4, 4, 5, 100],\n+    ...                    'animal': [\"Flamingo\", \"Parrot\", \"Dog\", \"Horse\",\n+    ...                    \"Brittle stars\", \"Centipede\"]})\n+    >>> table = pa.Table.from_pandas(df)\n\nReview Comment:\n   Also, I would maybe in general keep the example data a bit smaller, if not needed for showing a specific feature (eg 2 or 3 columns is probably enough, instead of 5 columns; this reduces the vertical space)\n\n\n\n##########\npython/pyarrow/parquet.py:\n##########\n@@ -2201,6 +3055,47 @@ def write_to_dataset(table, root_path, partition_cols=None,\n         Using `metadata_collector` in kwargs allows one to collect the\n         file metadata instances of dataset pieces. The file paths in the\n         ColumnChunkMetaData will be set relative to `root_path`.\n+\n+    Examples\n+    --------\n+    Generate an example PyArrow Table:\n+\n+    >>> import pyarrow as pa\n+    >>> import pandas as pd\n+    >>> df = pd.DataFrame({'year': [2020, 2022, 2021, 2022, 2019, 2021],\n+    ...                    'month': [3, 5, 7, 9, 11, 12],\n+    ...                    'day': [1, 5, 9, 13, 17, 23],\n+    ...                    'n_legs': [2, 2, 4, 4, 5, 100],\n+    ...                    'animals': [\"Flamingo\", \"Parrot\", \"Dog\", \"Horse\",\n+    ...                    \"Brittle stars\", \"Centipede\"]})\n+    >>> table = pa.Table.from_pandas(df)\n+\n+    and write it to a partitioned dataset:\n+\n+    >>> import pyarrow.parquet as pq\n+    >>> pq.write_to_dataset(table, root_path='dataset_name_3',\n+    ...                     partition_cols=['year', 'month', 'day'],\n+    ...                     use_legacy_dataset=False\n+    ...                    )\n+    >>> pq.ParquetDataset('dataset_name_3', use_legacy_dataset=False).files\n+    ['dataset_name_3/year=2019/month=11/day=17/part-0.parquet', ...\n+\n+    Use old Arrow Dataset API and override the partition filename:\n+\n+    >>> pq.write_to_dataset(table, root_path='dataset_name_5',\n+    ...                     partition_cols=['year', 'month', 'day'],\n+    ...                     partition_filename_cb=lambda x:\n+    ...                     str(x[0]) + str(x[1]) + str(x[2])  + '.parquet'\n+    ...                    )\n+    >>> pq.ParquetDataset('dataset_name_5/', use_legacy_dataset=False).files\n+    ['dataset_name_5/year=2019/month=11/day=17/20191117.parquet', ...\n\nReview Comment:\n   I would maybe not show this if we are not yet sure that we will keep it ..\n\n\n\n##########\npython/pyarrow/parquet.py:\n##########\n@@ -225,6 +225,64 @@ class ParquetFile:\n         in nanoseconds.\n     decryption_properties : FileDecryptionProperties, default None\n         File decryption properties for Parquet Modular Encryption.\n+\n+    Examples\n+    --------\n+\n+    Generate an example PyArrow Table and write it to Parquet file:\n+\n+    >>> import pandas as pd\n+    >>> import pyarrow as pa\n+    >>> df = pd.DataFrame({'year': [2020, 2022, 2021, 2022, 2019, 2021],\n+    ...                    'month': [3, 5, 7, 9, 11, 12],\n+    ...                    'day': [1, 5, 9, 13, 17, 23],\n+    ...                    'n_legs': [2, 2, 4, 4, 5, 100],\n+    ...                    'animal': [\"Flamingo\", \"Parrot\", \"Dog\", \"Horse\",\n+    ...                    \"Brittle stars\", \"Centipede\"]})\n+    >>> table = pa.Table.from_pandas(df)\n+\n+    >>> import pyarrow.parquet as pq\n+    >>> pq.write_table(table, 'example.parquet')\n+\n+    create a ParquetFile object from the Parqet file:\n+\n+    >>> parquet_file = pq.ParquetFile('example.parquet')\n+\n+    read the data:\n\nReview Comment:\n   ```suggestion\r\n       Read the data:\r\n   ```\r\n   \r\n   (this reads the full file?)\n\n\n\n##########\npython/pyarrow/parquet.py:\n##########\n@@ -2128,6 +2938,46 @@ def write_table(table, where, row_group_size=None, version='1.0',\n         raise\n \n \n+_write_table_example = \"\"\"\\\n+Generate an example PyArrow Table:\n+\n+>>> import pyarrow as pa\n+>>> import pandas as pd\n+>>> df = pd.DataFrame({'year': [2020, 2022, 2021, 2022, 2019, 2021],\n+...                    'month': [3, 5, 7, 9, 11, 12],\n+...                    'day': [1, 5, 9, 13, 17, 23],\n+...                    'n_legs': [2, 2, 4, 4, 5, 100],\n+...                    'animals': [\"Flamingo\", \"Parrot\", \"Dog\", \"Horse\",\n+...                    \"Brittle stars\", \"Centipede\"]})\n+>>> table = pa.Table.from_pandas(df)\n+\n+and write the Table into Parquet file:\n+\n+>>> import pyarrow.parquet as pq\n+>>> pq.write_table(table, 'example.parquet')\n+\n+Defining row group size for the Parquet file:\n+\n+>>> pq.write_table(table, 'example.parquet', row_group_size=3)\n+\n+Defining row group compression (default is Snappy):\n+\n+>>> pq.write_table(table, 'example.parquet', compression='none')\n+\n+Defining row group compression and encoding per-column:\n+\n+>>> pq.write_table(table, 'example.parquet',\n+...                compression={'foo': 'snappy', 'bar': 'gzip'},\n+...                use_dictionary=['foo', 'bar'])\n\nReview Comment:\n   Can you refer to one of the actual columns in the table instead of foo/bar?\n\n\n\n",
                    "created": "2022-04-04T09:24:29.736+0000",
                    "updated": "2022-04-04T09:24:29.736+0000",
                    "started": "2022-04-04T09:24:29.736+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752161",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/752162",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #12704:\nURL: https://github.com/apache/arrow/pull/12704#discussion_r841536971\n\n\n##########\npython/pyarrow/parquet.py:\n##########\n@@ -612,6 +857,58 @@ def _sanitize_table(table, new_schema, flavor):\n     the batch size can help keep page sizes closer to the intended size.\n \"\"\"\n \n+_parquet_writer_example_doc = \"\"\"\\\n\nReview Comment:\n   I suppose the reason for that is because the example code includes some `{  }`, and then the string formatting gets confused with that\n\n\n\n",
                    "created": "2022-04-04T09:25:49.778+0000",
                    "updated": "2022-04-04T09:25:49.778+0000",
                    "started": "2022-04-04T09:25:49.778+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752162",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/752165",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #12704:\nURL: https://github.com/apache/arrow/pull/12704#discussion_r841540156\n\n\n##########\npython/pyarrow/parquet.py:\n##########\n@@ -2128,6 +2938,46 @@ def write_table(table, where, row_group_size=None, version='1.0',\n         raise\n \n \n+_write_table_example = \"\"\"\\\n+Generate an example PyArrow Table:\n+\n+>>> import pyarrow as pa\n+>>> import pandas as pd\n+>>> df = pd.DataFrame({'year': [2020, 2022, 2021, 2022, 2019, 2021],\n+...                    'month': [3, 5, 7, 9, 11, 12],\n+...                    'day': [1, 5, 9, 13, 17, 23],\n+...                    'n_legs': [2, 2, 4, 4, 5, 100],\n+...                    'animals': [\"Flamingo\", \"Parrot\", \"Dog\", \"Horse\",\n+...                    \"Brittle stars\", \"Centipede\"]})\n+>>> table = pa.Table.from_pandas(df)\n+\n+and write the Table into Parquet file:\n+\n+>>> import pyarrow.parquet as pq\n+>>> pq.write_table(table, 'example.parquet')\n+\n+Defining row group size for the Parquet file:\n+\n+>>> pq.write_table(table, 'example.parquet', row_group_size=3)\n+\n+Defining row group compression (default is Snappy):\n+\n+>>> pq.write_table(table, 'example.parquet', compression='none')\n+\n+Defining row group compression and encoding per-column:\n+\n+>>> pq.write_table(table, 'example.parquet',\n+...                compression={'foo': 'snappy', 'bar': 'gzip'},\n+...                use_dictionary=['foo', 'bar'])\n\nReview Comment:\n   Oh, my bad. Yes I will correct, thanks!\n\n\n\n",
                    "created": "2022-04-04T09:29:25.205+0000",
                    "updated": "2022-04-04T09:29:25.205+0000",
                    "started": "2022-04-04T09:29:25.204+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752165",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/752166",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #12704:\nURL: https://github.com/apache/arrow/pull/12704#discussion_r841541096\n\n\n##########\npython/pyarrow/parquet.py:\n##########\n@@ -2201,6 +3055,47 @@ def write_to_dataset(table, root_path, partition_cols=None,\n         Using `metadata_collector` in kwargs allows one to collect the\n         file metadata instances of dataset pieces. The file paths in the\n         ColumnChunkMetaData will be set relative to `root_path`.\n+\n+    Examples\n+    --------\n+    Generate an example PyArrow Table:\n+\n+    >>> import pyarrow as pa\n+    >>> import pandas as pd\n+    >>> df = pd.DataFrame({'year': [2020, 2022, 2021, 2022, 2019, 2021],\n+    ...                    'month': [3, 5, 7, 9, 11, 12],\n+    ...                    'day': [1, 5, 9, 13, 17, 23],\n+    ...                    'n_legs': [2, 2, 4, 4, 5, 100],\n+    ...                    'animals': [\"Flamingo\", \"Parrot\", \"Dog\", \"Horse\",\n+    ...                    \"Brittle stars\", \"Centipede\"]})\n+    >>> table = pa.Table.from_pandas(df)\n+\n+    and write it to a partitioned dataset:\n+\n+    >>> import pyarrow.parquet as pq\n+    >>> pq.write_to_dataset(table, root_path='dataset_name_3',\n+    ...                     partition_cols=['year', 'month', 'day'],\n+    ...                     use_legacy_dataset=False\n+    ...                    )\n+    >>> pq.ParquetDataset('dataset_name_3', use_legacy_dataset=False).files\n+    ['dataset_name_3/year=2019/month=11/day=17/part-0.parquet', ...\n+\n+    Use old Arrow Dataset API and override the partition filename:\n+\n+    >>> pq.write_to_dataset(table, root_path='dataset_name_5',\n+    ...                     partition_cols=['year', 'month', 'day'],\n+    ...                     partition_filename_cb=lambda x:\n+    ...                     str(x[0]) + str(x[1]) + str(x[2])  + '.parquet'\n+    ...                    )\n+    >>> pq.ParquetDataset('dataset_name_5/', use_legacy_dataset=False).files\n+    ['dataset_name_5/year=2019/month=11/day=17/20191117.parquet', ...\n+\n+    Write to a single Parquet file:\n\nReview Comment:\n   Yes, I should make this clearer. \n\n\n\n",
                    "created": "2022-04-04T09:30:25.178+0000",
                    "updated": "2022-04-04T09:30:25.178+0000",
                    "started": "2022-04-04T09:30:25.178+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752166",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/752178",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on PR #12704:\nURL: https://github.com/apache/arrow/pull/12704#issuecomment-1087370725\n\n   @amol- @jorisvandenbossche one question regarding the doctest. When running the doctest for this PR bunch of folders and files get created in the arrow folder. Since I am running it locally there is no problem. But should I do it differently to not have issues once the docs will migrate to doctest?\n\n\n",
                    "created": "2022-04-04T10:16:08.158+0000",
                    "updated": "2022-04-04T10:16:08.158+0000",
                    "started": "2022-04-04T10:16:08.158+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752178",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/752221",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on PR #12704:\nURL: https://github.com/apache/arrow/pull/12704#issuecomment-1087499045\n\n   With pytest, it might be possible to clean-up those files after running the doctests (or even automatically have it run in some temporary directory), cfr https://issues.apache.org/jira/browse/ARROW-16018 (but I don't think it is necessarily a blocker for this PR)\n\n\n",
                    "created": "2022-04-04T12:35:01.643+0000",
                    "updated": "2022-04-04T12:35:01.643+0000",
                    "started": "2022-04-04T12:35:01.643+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752221",
                    "issueId": "13424444"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/worklog/752269",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on PR #12704:\nURL: https://github.com/apache/arrow/pull/12704#issuecomment-1087581277\n\n   > @amol- @jorisvandenbossche one question regarding the doctest. When running the doctest for this PR bunch of folders and files get created in the arrow folder. Since I am running it locally there is no problem. But should I do it differently to not have issues once the docs will migrate to doctest?\r\n   \r\n   You might be able to solve that by adding a `doctest_global_setup` to `conf.py` to create a temporary direction and chdir into it. Anyway I'd create a separate ticket for this problem.\n\n\n",
                    "created": "2022-04-04T13:49:18.201+0000",
                    "updated": "2022-04-04T13:49:18.201+0000",
                    "started": "2022-04-04T13:49:18.201+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752269",
                    "issueId": "13424444"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 15600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@17d163f4[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7588bfe2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5fbf3563[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6f78f6d9[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@723ac471[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@587cde67[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e4eec26[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@56281308[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72955cf0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4ca43b23[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4582d14d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@53a42aa6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 15600,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Apr 13 10:24:16 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-04-13T10:24:16.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15428/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2022-01-24T15:31:36.000+0000",
        "updated": "2022-04-13T19:52:01.000+0000",
        "timeoriginalestimate": null,
        "description": "Ensure all docstrings of all classes and functions referenced in https://arrow.apache.org/docs/python/api/formats.html#parquet-files have an {{Examples}} section\r\n\r\nMost important:\r\n\r\n{code}\r\n/docs/python/generated/pyarrow.parquet.read_table.html\r\n/docs/python/generated/pyarrow.parquet.write_table.html\r\n/docs/python/generated/pyarrow.parquet.ParquetDataset.html\r\n/docs/python/generated/pyarrow.parquet.ParquetFile.html\r\n/docs/python/generated/pyarrow.parquet.ParquetWriter.html\r\n/docs/python/generated/pyarrow.parquet.write_to_dataset.html\r\n{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 15600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Address docstrings in Parquet classes and functions",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/comment/17511816",
                    "id": "17511816",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "body": "I left out three sections and will do them as a follow up:\r\n * [https://arrow.apache.org/docs/python/generated/pyarrow.parquet.read_metadata.html#pyarrow.parquet.read_metadata]\r\n * [https://arrow.apache.org/docs/python/generated/pyarrow.parquet.read_schema.html#pyarrow.parquet.read_schema]\r\n * [https://arrow.apache.org/docs/python/generated/pyarrow.parquet.write_metadata.html#pyarrow.parquet.write_metadata]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "created": "2022-03-24T11:48:38.487+0000",
                    "updated": "2022-03-24T11:48:38.487+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/comment/17516925",
                    "id": "17516925",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I created a ticket which might be related to the above follow-ups: https://issues.apache.org/jira/browse/ARROW-16114",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-04-04T16:13:17.752+0000",
                    "updated": "2022-04-04T16:13:17.752+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/comment/17517639",
                    "id": "17517639",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "body": "Great, thanks [~willjones127]!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "created": "2022-04-05T18:33:53.566+0000",
                    "updated": "2022-04-05T18:33:53.566+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424444/comment/17521602",
                    "id": "17521602",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
                        "name": "amol-",
                        "key": "amol-",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
                        },
                        "displayName": "Alessandro Molina",
                        "active": true,
                        "timeZone": "Europe/Rome"
                    },
                    "body": "Issue resolved by pull request 12704\n[https://github.com/apache/arrow/pull/12704]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
                        "name": "amol-",
                        "key": "amol-",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
                        },
                        "displayName": "Alessandro Molina",
                        "active": true,
                        "timeZone": "Europe/Rome"
                    },
                    "created": "2022-04-13T10:24:16.066+0000",
                    "updated": "2022-04-13T10:24:16.066+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0yw20:",
        "customfield_12314139": null
    }
}