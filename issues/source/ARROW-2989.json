{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13177007",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177007",
    "key": "ARROW-2989",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343066",
                "id": "12343066",
                "description": "",
                "name": "0.11.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-10-08"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/1",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/blocker.svg",
            "name": "Blocker",
            "id": "1"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2989/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 14,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177007/worklog/138259",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm opened a new pull request #2478: ARROW-2989: [C++/Python] Remove API deprecations in 0.10\nURL: https://github.com/apache/arrow/pull/2478\n \n \n   I didn't remove the `nthreads` deprecations in Python yet. @pitrou do you support removing them in 0.11?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-26T21:44:41.121+0000",
                    "updated": "2018-08-26T21:44:41.121+0000",
                    "started": "2018-08-26T21:44:41.121+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "138259",
                    "issueId": "13177007"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177007/worklog/138262",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2478: ARROW-2989: [C++/Python] Remove API deprecations in 0.10\nURL: https://github.com/apache/arrow/pull/2478#issuecomment-416077340\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2478?src=pr&el=h1) Report\n   > Merging [#2478](https://codecov.io/gh/apache/arrow/pull/2478?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/628b74b0de0a3d7ea6d7f424f605922fb8637b46?src=pr&el=desc) will **increase** coverage by `1.33%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2478/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2478?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2478      +/-   ##\n   ==========================================\n   + Coverage   86.19%   87.53%   +1.33%     \n   ==========================================\n     Files         308      246      -62     \n     Lines       47069    43359    -3710     \n   ==========================================\n   - Hits        40572    37955    -2617     \n   + Misses       6423     5404    -1019     \n   + Partials       74        0      -74\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2478?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/buffer.h](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWZmZXIuaA==) | `95.69% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/builder.cc](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWlsZGVyLmNj) | `83.2% <\u00f8> (+3.3%)` | :arrow_up: |\n   | [cpp/src/arrow/builder.h](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWlsZGVyLmg=) | `97.64% <\u00f8> (+0.38%)` | :arrow_up: |\n   | [python/pyarrow/\\_\\_init\\_\\_.py](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX19pbml0X18ucHk=) | `70.31% <\u00f8> (-0.46%)` | :arrow_down: |\n   | [cpp/src/plasma/client.h](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50Lmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/io.pxi](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaW8ucHhp) | `60.92% <\u00f8> (-0.1%)` | :arrow_down: |\n   | [cpp/src/arrow/buffer.cc](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWZmZXIuY2M=) | `95.78% <\u00f8> (+1.97%)` | :arrow_up: |\n   | [cpp/src/plasma/test/client\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9jbGllbnRfdGVzdHMuY2M=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | `70.64% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/ipc.py](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB5) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | ... and [63 more](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2478?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2478?src=pr&el=footer). Last update [628b74b...56343a6](https://codecov.io/gh/apache/arrow/pull/2478?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-26T22:27:29.576+0000",
                    "updated": "2018-08-26T22:27:29.576+0000",
                    "started": "2018-08-26T22:27:29.576+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "138262",
                    "issueId": "13177007"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177007/worklog/138322",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #2478: ARROW-2989: [C++/Python] Remove API deprecations in 0.10\nURL: https://github.com/apache/arrow/pull/2478#issuecomment-416155410\n \n \n   Removing the `nthreads` arguments is fine with me.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-27T08:32:52.595+0000",
                    "updated": "2018-08-27T08:32:52.595+0000",
                    "started": "2018-08-27T08:32:52.594+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "138322",
                    "issueId": "13177007"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177007/worklog/138457",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2478: ARROW-2989: [C++/Python] Remove API deprecations in 0.10\nURL: https://github.com/apache/arrow/pull/2478#issuecomment-416290969\n \n \n   Done. I noticed that the default for `use_threads` is `False`. I think that a `True` default would result in a better average experience for library users. What do you think?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-27T16:50:30.301+0000",
                    "updated": "2018-08-27T16:50:30.301+0000",
                    "started": "2018-08-27T16:50:30.301+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "138457",
                    "issueId": "13177007"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177007/worklog/138461",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #2478: ARROW-2989: [C++/Python] Remove API deprecations in 0.10\nURL: https://github.com/apache/arrow/pull/2478#issuecomment-416292241\n \n \n   I think there are arguments both ways. The advantage of leaving it to False is to force people to think about it, IMHO. If it's True by default and someone uses their own parallelism, they may get suboptimal results without knowing why (because of oversubscription). Perhaps @mrocklin wants to share thoughts about it (topic: making some operations parallel by default in library code).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-27T16:54:52.073+0000",
                    "updated": "2018-08-27T16:54:52.073+0000",
                    "started": "2018-08-27T16:54:52.072+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "138461",
                    "issueId": "13177007"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177007/worklog/138465",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2478: ARROW-2989: [C++/Python] Remove API deprecations in 0.10\nURL: https://github.com/apache/arrow/pull/2478#issuecomment-416294382\n \n \n   Agree that there are arguments both ways. I would argue that if users are using parallelism separately that they should also be aware of Arrow's default parallelism and set the thread pool parameters accordingly\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-27T17:01:38.123+0000",
                    "updated": "2018-08-27T17:01:38.123+0000",
                    "started": "2018-08-27T17:01:38.123+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "138465",
                    "issueId": "13177007"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177007/worklog/139669",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrocklin commented on issue #2478: ARROW-2989: [C++/Python] Remove API deprecations in 0.10\nURL: https://github.com/apache/arrow/pull/2478#issuecomment-417305231\n \n \n   Other libraries, like BLAS, enable parallelism by default.  As someone who parallelizes around these libraries I'm pretty comfortable setting environment variables on my system to control it.  If Arrow wanted to look for `OMP_NUM_THREADS` and follow that I suspect that that would capture the intent of many users.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-30T12:41:53.739+0000",
                    "updated": "2018-08-30T12:41:53.739+0000",
                    "started": "2018-08-30T12:41:53.739+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "139669",
                    "issueId": "13177007"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177007/worklog/139735",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2478: ARROW-2989: [C++/Python] Remove API deprecations in 0.10\nURL: https://github.com/apache/arrow/pull/2478#issuecomment-417353978\n \n \n   @pitrou they probably do. Let me have a look about that\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-30T15:08:22.311+0000",
                    "updated": "2018-08-30T15:08:22.311+0000",
                    "started": "2018-08-30T15:08:22.310+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "139735",
                    "issueId": "13177007"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177007/worklog/140101",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on issue #2478: ARROW-2989: [C++/Python] Remove API deprecations in 0.10\nURL: https://github.com/apache/arrow/pull/2478#issuecomment-417665409\n \n \n   +1 for `OMP_NUM_THREADS` that's also what we set in our environments mostly to control parallelism of many libraries.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-31T13:33:33.386+0000",
                    "updated": "2018-08-31T13:33:33.386+0000",
                    "started": "2018-08-31T13:33:33.386+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "140101",
                    "issueId": "13177007"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177007/worklog/140341",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2478: ARROW-2989: [C++/Python] Remove API deprecations in 0.10\nURL: https://github.com/apache/arrow/pull/2478#issuecomment-417880992\n \n \n   `OMP_NUM_THREADS` is already the default. I'll have a look at tests where we may need to disable threading\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-01T19:13:45.584+0000",
                    "updated": "2018-09-01T19:13:45.584+0000",
                    "started": "2018-09-01T19:13:45.584+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "140341",
                    "issueId": "13177007"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177007/worklog/140344",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2478: ARROW-2989: [C++/Python] Remove API deprecations in 0.10\nURL: https://github.com/apache/arrow/pull/2478#issuecomment-417883309\n \n \n   The tests in `test_convert_pandas.py` pass `use_threads=False` in most cases, and there are separate threading tests. I'm flipping the argument to `True` and changing the threaded test to be non-threaded\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-01T19:53:09.871+0000",
                    "updated": "2018-09-01T19:53:09.871+0000",
                    "started": "2018-09-01T19:53:09.870+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "140344",
                    "issueId": "13177007"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177007/worklog/140345",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2478: ARROW-2989: [C++/Python] Remove API deprecations in 0.10\nURL: https://github.com/apache/arrow/pull/2478#issuecomment-417883346\n \n \n   +1 from me. Feel free to merge once the build is green\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-01T19:53:40.528+0000",
                    "updated": "2018-09-01T19:53:40.528+0000",
                    "started": "2018-09-01T19:53:40.527+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "140345",
                    "issueId": "13177007"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177007/worklog/140346",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2478: ARROW-2989: [C++/Python] Remove API deprecations in 0.10\nURL: https://github.com/apache/arrow/pull/2478#issuecomment-416077340\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2478?src=pr&el=h1) Report\n   > Merging [#2478](https://codecov.io/gh/apache/arrow/pull/2478?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/20c04051d1ad54121b28b1704aa49f3ae4b6e1d5?src=pr&el=desc) will **increase** coverage by `1.22%`.\n   > The diff coverage is `81.25%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2478/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2478?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master   #2478      +/-   ##\n   =========================================\n   + Coverage   86.28%   87.5%   +1.22%     \n   =========================================\n     Files         308     246      -62     \n     Lines       47090   43369    -3721     \n   =========================================\n   - Hits        40631   37951    -2680     \n   + Misses       6387    5418     -969     \n   + Partials       72       0      -72\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2478?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/test/client\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9jbGllbnRfdGVzdHMuY2M=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/\\_\\_init\\_\\_.py](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX19pbml0X18ucHk=) | `70.31% <\u00f8> (-0.46%)` | :arrow_down: |\n   | [cpp/src/plasma/client.h](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50Lmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/buffer.h](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWZmZXIuaA==) | `95.69% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/builder.cc](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWlsZGVyLmNj) | `83.2% <\u00f8> (+3.3%)` | :arrow_up: |\n   | [cpp/src/arrow/builder.h](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWlsZGVyLmg=) | `97.64% <\u00f8> (+0.38%)` | :arrow_up: |\n   | [python/pyarrow/util.py](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdXRpbC5weQ==) | `58.33% <\u00f8> (-13.89%)` | :arrow_down: |\n   | [python/pyarrow/io.pxi](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaW8ucHhp) | `60.92% <\u00f8> (-0.1%)` | :arrow_down: |\n   | [cpp/src/arrow/buffer.cc](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWZmZXIuY2M=) | `95.78% <\u00f8> (+1.97%)` | :arrow_up: |\n   | [python/pyarrow/table.pxi](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGFibGUucHhp) | `69.67% <0%> (+0.01%)` | :arrow_up: |\n   | ... and [68 more](https://codecov.io/gh/apache/arrow/pull/2478/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2478?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2478?src=pr&el=footer). Last update [20c0405...8de36e6](https://codecov.io/gh/apache/arrow/pull/2478?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-01T20:22:17.129+0000",
                    "updated": "2018-09-01T20:22:17.129+0000",
                    "started": "2018-09-01T20:22:17.124+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "140346",
                    "issueId": "13177007"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177007/worklog/141052",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2478: ARROW-2989: [C++/Python] Remove API deprecations in 0.10\nURL: https://github.com/apache/arrow/pull/2478\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/buffer.cc b/cpp/src/arrow/buffer.cc\nindex 388e98f56c..2c0104170c 100644\n--- a/cpp/src/arrow/buffer.cc\n+++ b/cpp/src/arrow/buffer.cc\n@@ -210,8 +210,4 @@ Status AllocateEmptyBitmap(int64_t length, std::shared_ptr<Buffer>* out) {\n   return AllocateEmptyBitmap(default_memory_pool(), length, out);\n }\n \n-Status GetEmptyBitmap(MemoryPool* pool, int64_t length, std::shared_ptr<Buffer>* out) {\n-  return AllocateEmptyBitmap(pool, length, out);\n-}\n-\n }  // namespace arrow\ndiff --git a/cpp/src/arrow/buffer.h b/cpp/src/arrow/buffer.h\nindex 442c451698..99beb2343b 100644\n--- a/cpp/src/arrow/buffer.h\n+++ b/cpp/src/arrow/buffer.h\n@@ -319,11 +319,6 @@ Status AllocateEmptyBitmap(MemoryPool* pool, int64_t length,\n ARROW_EXPORT\n Status AllocateEmptyBitmap(int64_t length, std::shared_ptr<Buffer>* out);\n \n-/// \\deprecated Use AllocateEmptyBitmap instead.\n-ARROW_DEPRECATED(\"Use AllocateEmptyBitmap instead\")\n-ARROW_EXPORT\n-Status GetEmptyBitmap(MemoryPool* pool, int64_t length, std::shared_ptr<Buffer>* out);\n-\n // ----------------------------------------------------------------------\n // Buffer builder classes\n \ndiff --git a/cpp/src/arrow/builder.cc b/cpp/src/arrow/builder.cc\nindex 8bdcb60375..65d1ea7ff3 100644\n--- a/cpp/src/arrow/builder.cc\n+++ b/cpp/src/arrow/builder.cc\n@@ -233,12 +233,6 @@ Status PrimitiveBuilder<T>::AppendValues(const value_type* values, int64_t lengt\n   return Status::OK();\n }\n \n-template <typename T>\n-Status PrimitiveBuilder<T>::Append(const value_type* values, int64_t length,\n-                                   const uint8_t* valid_bytes) {\n-  return AppendValues(values, length, valid_bytes);\n-}\n-\n template <typename T>\n Status PrimitiveBuilder<T>::AppendValues(const value_type* values, int64_t length,\n                                          const std::vector<bool>& is_valid) {\n@@ -255,34 +249,17 @@ Status PrimitiveBuilder<T>::AppendValues(const value_type* values, int64_t lengt\n   return Status::OK();\n }\n \n-template <typename T>\n-Status PrimitiveBuilder<T>::Append(const value_type* values, int64_t length,\n-                                   const std::vector<bool>& is_valid) {\n-  return AppendValues(values, length, is_valid);\n-}\n-\n template <typename T>\n Status PrimitiveBuilder<T>::AppendValues(const std::vector<value_type>& values,\n                                          const std::vector<bool>& is_valid) {\n   return AppendValues(values.data(), static_cast<int64_t>(values.size()), is_valid);\n }\n \n-template <typename T>\n-Status PrimitiveBuilder<T>::Append(const std::vector<value_type>& values,\n-                                   const std::vector<bool>& is_valid) {\n-  return AppendValues(values, is_valid);\n-}\n-\n template <typename T>\n Status PrimitiveBuilder<T>::AppendValues(const std::vector<value_type>& values) {\n   return AppendValues(values.data(), static_cast<int64_t>(values.size()));\n }\n \n-template <typename T>\n-Status PrimitiveBuilder<T>::Append(const std::vector<value_type>& values) {\n-  return AppendValues(values);\n-}\n-\n template <typename T>\n Status PrimitiveBuilder<T>::FinishInternal(std::shared_ptr<ArrayData>* out) {\n   RETURN_NOT_OK(TrimBuffer(BitUtil::BytesForBits(length_), null_bitmap_.get()));\n@@ -427,11 +404,6 @@ Status AdaptiveIntBuilder::AppendValues(const int64_t* values, int64_t length,\n   return Status::OK();\n }\n \n-Status AdaptiveIntBuilder::Append(const int64_t* values, int64_t length,\n-                                  const uint8_t* valid_bytes) {\n-  return AppendValues(values, length, valid_bytes);\n-}\n-\n template <typename new_type, typename old_type>\n typename std::enable_if<sizeof(old_type) >= sizeof(new_type), Status>::type\n AdaptiveIntBuilder::ExpandIntSizeInternal() {\n@@ -585,11 +557,6 @@ Status AdaptiveUIntBuilder::AppendValues(const uint64_t* values, int64_t length,\n   return Status::OK();\n }\n \n-Status AdaptiveUIntBuilder::Append(const uint64_t* values, int64_t length,\n-                                   const uint8_t* valid_bytes) {\n-  return AppendValues(values, length, valid_bytes);\n-}\n-\n template <typename new_type, typename old_type>\n typename std::enable_if<sizeof(old_type) >= sizeof(new_type), Status>::type\n AdaptiveUIntBuilder::ExpandIntSizeInternal() {\n@@ -733,11 +700,6 @@ Status BooleanBuilder::AppendValues(const uint8_t* values, int64_t length,\n   return Status::OK();\n }\n \n-Status BooleanBuilder::Append(const uint8_t* values, int64_t length,\n-                              const uint8_t* valid_bytes) {\n-  return AppendValues(values, length, valid_bytes);\n-}\n-\n Status BooleanBuilder::AppendValues(const uint8_t* values, int64_t length,\n                                     const std::vector<bool>& is_valid) {\n   RETURN_NOT_OK(Reserve(length));\n@@ -752,29 +714,15 @@ Status BooleanBuilder::AppendValues(const uint8_t* values, int64_t length,\n   return Status::OK();\n }\n \n-Status BooleanBuilder::Append(const uint8_t* values, int64_t length,\n-                              const std::vector<bool>& is_valid) {\n-  return AppendValues(values, length, is_valid);\n-}\n-\n Status BooleanBuilder::AppendValues(const std::vector<uint8_t>& values,\n                                     const std::vector<bool>& is_valid) {\n   return AppendValues(values.data(), static_cast<int64_t>(values.size()), is_valid);\n }\n \n-Status BooleanBuilder::Append(const std::vector<uint8_t>& values,\n-                              const std::vector<bool>& is_valid) {\n-  return AppendValues(values, is_valid);\n-}\n-\n Status BooleanBuilder::AppendValues(const std::vector<uint8_t>& values) {\n   return AppendValues(values.data(), static_cast<int64_t>(values.size()));\n }\n \n-Status BooleanBuilder::Append(const std::vector<uint8_t>& values) {\n-  return AppendValues(values);\n-}\n-\n Status BooleanBuilder::AppendValues(const std::vector<bool>& values,\n                                     const std::vector<bool>& is_valid) {\n   const int64_t length = static_cast<int64_t>(values.size());\n@@ -790,11 +738,6 @@ Status BooleanBuilder::AppendValues(const std::vector<bool>& values,\n   return Status::OK();\n }\n \n-Status BooleanBuilder::Append(const std::vector<bool>& values,\n-                              const std::vector<bool>& is_valid) {\n-  return AppendValues(values, is_valid);\n-}\n-\n Status BooleanBuilder::AppendValues(const std::vector<bool>& values) {\n   const int64_t length = static_cast<int64_t>(values.size());\n   RETURN_NOT_OK(Reserve(length));\n@@ -808,10 +751,6 @@ Status BooleanBuilder::AppendValues(const std::vector<bool>& values) {\n   return Status::OK();\n }\n \n-Status BooleanBuilder::Append(const std::vector<bool>& values) {\n-  return AppendValues(values);\n-}\n-\n // ----------------------------------------------------------------------\n // DictionaryBuilder\n \n@@ -1236,11 +1175,6 @@ Status ListBuilder::AppendValues(const int32_t* offsets, int64_t length,\n   return Status::OK();\n }\n \n-Status ListBuilder::Append(const int32_t* offsets, int64_t length,\n-                           const uint8_t* valid_bytes) {\n-  return AppendValues(offsets, length, valid_bytes);\n-}\n-\n Status ListBuilder::AppendNextOffset() {\n   int64_t num_values = value_builder_->length();\n   if (ARROW_PREDICT_FALSE(num_values > kListMaximumElements)) {\n@@ -1418,11 +1352,6 @@ Status StringBuilder::AppendValues(const std::vector<std::string>& values,\n   return Status::OK();\n }\n \n-Status StringBuilder::Append(const std::vector<std::string>& values,\n-                             const uint8_t* valid_bytes) {\n-  return AppendValues(values, valid_bytes);\n-}\n-\n Status StringBuilder::AppendValues(const char** values, int64_t length,\n                                    const uint8_t* valid_bytes) {\n   std::size_t total_length = 0;\n@@ -1481,11 +1410,6 @@ Status StringBuilder::AppendValues(const char** values, int64_t length,\n   return Status::OK();\n }\n \n-Status StringBuilder::Append(const char** values, int64_t length,\n-                             const uint8_t* valid_bytes) {\n-  return AppendValues(values, length, valid_bytes);\n-}\n-\n // ----------------------------------------------------------------------\n // Fixed width binary\n \n@@ -1502,11 +1426,6 @@ Status FixedSizeBinaryBuilder::AppendValues(const uint8_t* data, int64_t length,\n   return byte_builder_.Append(data, length * byte_width_);\n }\n \n-Status FixedSizeBinaryBuilder::Append(const uint8_t* data, int64_t length,\n-                                      const uint8_t* valid_bytes) {\n-  return AppendValues(data, length, valid_bytes);\n-}\n-\n Status FixedSizeBinaryBuilder::Append(const std::string& value) {\n   return Append(reinterpret_cast<const uint8_t*>(value.c_str()));\n }\ndiff --git a/cpp/src/arrow/builder.h b/cpp/src/arrow/builder.h\nindex 69f2bdeb39..432ea9f879 100644\n--- a/cpp/src/arrow/builder.h\n+++ b/cpp/src/arrow/builder.h\n@@ -116,9 +116,6 @@ class ARROW_EXPORT ArrayBuilder {\n   /// this function responsibly.\n   Status Advance(int64_t elements);\n \n-  ARROW_DEPRECATED(\"Use Finish instead\")\n-  std::shared_ptr<ResizableBuffer> null_bitmap() const { return null_bitmap_; }\n-\n   /// \\brief Return result of builder as an internal generic ArrayData\n   /// object. Resets builder except for dictionary builder\n   ///\n@@ -252,9 +249,6 @@ class ARROW_EXPORT PrimitiveBuilder : public ArrayBuilder {\n     return Status::OK();\n   }\n \n-  ARROW_DEPRECATED(\"Use Finish instead\")\n-  std::shared_ptr<Buffer> data() const { return data_; }\n-\n   value_type GetValue(int64_t index) const {\n     return reinterpret_cast<const value_type*>(data_->data())[index];\n   }\n@@ -267,10 +261,6 @@ class ARROW_EXPORT PrimitiveBuilder : public ArrayBuilder {\n   /// \\return Status\n   Status AppendValues(const value_type* values, int64_t length,\n                       const uint8_t* valid_bytes = NULLPTR);\n-  /// \\deprecated Use AppendValues instead.\n-  ARROW_DEPRECATED(\"Use AppendValues instead\")\n-  Status Append(const value_type* values, int64_t length,\n-                const uint8_t* valid_bytes = NULLPTR);\n \n   /// \\brief Append a sequence of elements in one shot\n   /// \\param[in] values a contiguous C array of values\n@@ -280,10 +270,6 @@ class ARROW_EXPORT PrimitiveBuilder : public ArrayBuilder {\n   /// \\return Status\n   Status AppendValues(const value_type* values, int64_t length,\n                       const std::vector<bool>& is_valid);\n-  /// \\deprecated Use AppendValues instead.\n-  ARROW_DEPRECATED(\"Use AppendValues instead\")\n-  Status Append(const value_type* values, int64_t length,\n-                const std::vector<bool>& is_valid);\n \n   /// \\brief Append a sequence of elements in one shot\n   /// \\param[in] values a std::vector of values\n@@ -292,9 +278,6 @@ class ARROW_EXPORT PrimitiveBuilder : public ArrayBuilder {\n   /// \\return Status\n   Status AppendValues(const std::vector<value_type>& values,\n                       const std::vector<bool>& is_valid);\n-  /// \\deprecated Use AppendValues instead.\n-  ARROW_DEPRECATED(\"Use AppendValues instead\")\n-  Status Append(const std::vector<value_type>& values, const std::vector<bool>& is_valid);\n \n   /// \\brief Append a sequence of elements in one shot\n   /// \\param[in] values a std::vector of values\n@@ -364,10 +347,6 @@ class ARROW_EXPORT PrimitiveBuilder : public ArrayBuilder {\n     return Status::OK();\n   }\n \n-  /// \\deprecated Use AppendValues instead.\n-  ARROW_DEPRECATED(\"Use AppendValues instead\")\n-  Status Append(const std::vector<value_type>& values);\n-\n   Status FinishInternal(std::shared_ptr<ArrayData>* out) override;\n   void Reset() override;\n \n@@ -391,7 +370,6 @@ class ARROW_EXPORT NumericBuilder : public PrimitiveBuilder<T> {\n           ARROW_MEMORY_POOL_DEFAULT)\n       : PrimitiveBuilder<T1>(TypeTraits<T1>::type_singleton(), pool) {}\n \n-  using PrimitiveBuilder<T>::Append;\n   using PrimitiveBuilder<T>::AppendValues;\n   using PrimitiveBuilder<T>::Resize;\n   using PrimitiveBuilder<T>::Reserve;\n@@ -461,9 +439,6 @@ class ARROW_EXPORT AdaptiveIntBuilderBase : public ArrayBuilder {\n     return Status::OK();\n   }\n \n-  ARROW_DEPRECATED(\"Use Finish instead\")\n-  std::shared_ptr<Buffer> data() const { return data_; }\n-\n   void Reset() override;\n   Status Resize(int64_t capacity) override;\n \n@@ -561,10 +536,6 @@ class ARROW_EXPORT AdaptiveUIntBuilder : public internal::AdaptiveIntBuilderBase\n   /// \\return Status\n   Status AppendValues(const uint64_t* values, int64_t length,\n                       const uint8_t* valid_bytes = NULLPTR);\n-  /// \\deprecated Use AppendValues instead.\n-  ARROW_DEPRECATED(\"Use AppendValues instead\")\n-  Status Append(const uint64_t* values, int64_t length,\n-                const uint8_t* valid_bytes = NULLPTR);\n \n   Status FinishInternal(std::shared_ptr<ArrayData>* out) override;\n \n@@ -628,10 +599,6 @@ class ARROW_EXPORT AdaptiveIntBuilder : public internal::AdaptiveIntBuilderBase\n   /// \\return Status\n   Status AppendValues(const int64_t* values, int64_t length,\n                       const uint8_t* valid_bytes = NULLPTR);\n-  /// \\deprecated Use AppendValues instead.\n-  ARROW_DEPRECATED(\"Use AppendValues instead\")\n-  Status Append(const int64_t* values, int64_t length,\n-                const uint8_t* valid_bytes = NULLPTR);\n \n   Status FinishInternal(std::shared_ptr<ArrayData>* out) override;\n \n@@ -675,9 +642,6 @@ class ARROW_EXPORT BooleanBuilder : public ArrayBuilder {\n     return Status::OK();\n   }\n \n-  ARROW_DEPRECATED(\"Use Finish instead\")\n-  std::shared_ptr<Buffer> data() const { return data_; }\n-\n   /// Scalar append\n   Status Append(const bool val) {\n     RETURN_NOT_OK(Reserve(1));\n@@ -701,10 +665,6 @@ class ARROW_EXPORT BooleanBuilder : public ArrayBuilder {\n   /// \\return Status\n   Status AppendValues(const uint8_t* values, int64_t length,\n                       const uint8_t* valid_bytes = NULLPTR);\n-  /// \\deprecated Use AppendValues instead.\n-  ARROW_DEPRECATED(\"Use AppendValues instead\")\n-  Status Append(const uint8_t* values, int64_t length,\n-                const uint8_t* valid_bytes = NULLPTR);\n \n   /// \\brief Append a sequence of elements in one shot\n   /// \\param[in] values a contiguous C array of values\n@@ -714,9 +674,6 @@ class ARROW_EXPORT BooleanBuilder : public ArrayBuilder {\n   /// \\return Status\n   Status AppendValues(const uint8_t* values, int64_t length,\n                       const std::vector<bool>& is_valid);\n-  /// \\deprecated Use AppendValues instead.\n-  ARROW_DEPRECATED(\"Use AppendValues instead\")\n-  Status Append(const uint8_t* values, int64_t length, const std::vector<bool>& is_valid);\n \n   /// \\brief Append a sequence of elements in one shot\n   /// \\param[in] values a std::vector of bytes\n@@ -725,17 +682,11 @@ class ARROW_EXPORT BooleanBuilder : public ArrayBuilder {\n   /// \\return Status\n   Status AppendValues(const std::vector<uint8_t>& values,\n                       const std::vector<bool>& is_valid);\n-  /// \\deprecated Use AppendValues instead.\n-  ARROW_DEPRECATED(\"Use AppendValues instead\")\n-  Status Append(const std::vector<uint8_t>& values, const std::vector<bool>& is_valid);\n \n   /// \\brief Append a sequence of elements in one shot\n   /// \\param[in] values a std::vector of bytes\n   /// \\return Status\n   Status AppendValues(const std::vector<uint8_t>& values);\n-  /// \\deprecated Use AppendValues instead.\n-  ARROW_DEPRECATED(\"Use AppendValues instead\")\n-  Status Append(const std::vector<uint8_t>& values);\n \n   /// \\brief Append a sequence of elements in one shot\n   /// \\param[in] values an std::vector<bool> indicating true (1) or false\n@@ -743,17 +694,11 @@ class ARROW_EXPORT BooleanBuilder : public ArrayBuilder {\n   /// (0). Equal in length to values\n   /// \\return Status\n   Status AppendValues(const std::vector<bool>& values, const std::vector<bool>& is_valid);\n-  /// \\deprecated Use AppendValues instead.\n-  ARROW_DEPRECATED(\"Use AppendValues instead\")\n-  Status Append(const std::vector<bool>& values, const std::vector<bool>& is_valid);\n \n   /// \\brief Append a sequence of elements in one shot\n   /// \\param[in] values an std::vector<bool> indicating true (1) or false\n   /// \\return Status\n   Status AppendValues(const std::vector<bool>& values);\n-  /// \\deprecated Use AppendValues instead.\n-  ARROW_DEPRECATED(\"Use AppendValues instead\")\n-  Status Append(const std::vector<bool>& values);\n \n   /// \\brief Append a sequence of elements in one shot\n   /// \\param[in] values_begin InputIterator to the beginning of the values\n@@ -865,10 +810,6 @@ class ARROW_EXPORT ListBuilder : public ArrayBuilder {\n   /// will be considered as a null for that slot\n   Status AppendValues(const int32_t* offsets, int64_t length,\n                       const uint8_t* valid_bytes = NULLPTR);\n-  /// \\deprecated Use AppendValues instead.\n-  ARROW_DEPRECATED(\"Use AppendValues instead\")\n-  Status Append(const int32_t* offsets, int64_t length,\n-                const uint8_t* valid_bytes = NULLPTR);\n \n   /// \\brief Start a new variable-length list slot\n   ///\n@@ -955,10 +896,6 @@ class ARROW_EXPORT StringBuilder : public BinaryBuilder {\n   /// \\return Status\n   Status AppendValues(const std::vector<std::string>& values,\n                       const uint8_t* valid_bytes = NULLPTR);\n-  /// \\deprecated Use AppendValues instead.\n-  ARROW_DEPRECATED(\"Use AppendValues instead\")\n-  Status Append(const std::vector<std::string>& values,\n-                const uint8_t* valid_bytes = NULLPTR);\n \n   /// \\brief Append a sequence of nul-terminated strings in one shot.\n   ///        If one of the values is NULL, it is processed as a null\n@@ -971,10 +908,6 @@ class ARROW_EXPORT StringBuilder : public BinaryBuilder {\n   /// \\return Status\n   Status AppendValues(const char** values, int64_t length,\n                       const uint8_t* valid_bytes = NULLPTR);\n-  /// \\deprecated Use AppendValues instead.\n-  ARROW_DEPRECATED(\"Use AppendValues instead\")\n-  Status Append(const char** values, int64_t length,\n-                const uint8_t* valid_bytes = NULLPTR);\n };\n \n // ----------------------------------------------------------------------\n@@ -1003,10 +936,6 @@ class ARROW_EXPORT FixedSizeBinaryBuilder : public ArrayBuilder {\n \n   Status AppendValues(const uint8_t* data, int64_t length,\n                       const uint8_t* valid_bytes = NULLPTR);\n-  /// \\deprecated Use AppendValues instead.\n-  ARROW_DEPRECATED(\"Use AppendValues instead\")\n-  Status Append(const uint8_t* data, int64_t length,\n-                const uint8_t* valid_bytes = NULLPTR);\n   Status Append(const std::string& value);\n   Status AppendNull();\n \n@@ -1069,11 +998,6 @@ class ARROW_EXPORT StructBuilder : public ArrayBuilder {\n     UnsafeAppendToBitmap(valid_bytes, length);\n     return Status::OK();\n   }\n-  /// \\deprecated Use AppendValues instead.\n-  ARROW_DEPRECATED(\"Use AppendValues instead\")\n-  Status Append(int64_t length, const uint8_t* valid_bytes) {\n-    return AppendValues(length, valid_bytes);\n-  }\n \n   /// Append an element to the Struct. All child-builders' Append method must\n   /// be called independently to maintain data-structure consistency.\ndiff --git a/cpp/src/plasma/client.h b/cpp/src/plasma/client.h\nindex a95b992a19..9d4dbf5f9a 100644\n--- a/cpp/src/plasma/client.h\n+++ b/cpp/src/plasma/client.h\n@@ -34,10 +34,6 @@ using arrow::Status;\n \n namespace plasma {\n \n-ARROW_DEPRECATED(\"PLASMA_DEFAULT_RELEASE_DELAY is deprecated\")\n-constexpr int64_t kDeprecatedPlasmaDefaultReleaseDelay = 64;\n-#define PLASMA_DEFAULT_RELEASE_DELAY plasma::kDeprecatedPlasmaDefaultReleaseDelay\n-\n /// We keep a queue of unreleased objects cached in the client until we start\n /// sending release requests to the store. This is to avoid frequently mapping\n /// and unmapping objects and evicting data from processor caches.\ndiff --git a/cpp/src/plasma/test/client_tests.cc b/cpp/src/plasma/test/client_tests.cc\nindex d391cd9380..a2725a62aa 100644\n--- a/cpp/src/plasma/test/client_tests.cc\n+++ b/cpp/src/plasma/test/client_tests.cc\n@@ -487,13 +487,6 @@ TEST_F(TestPlasmaStore, ManyObjectTest) {\n   }\n }\n \n-#ifndef ARROW_NO_DEPRECATED_API\n-TEST_F(TestPlasmaStore, DeprecatedApiTest) {\n-  int64_t default_delay = PLASMA_DEFAULT_RELEASE_DELAY;\n-  ARROW_CHECK(default_delay == plasma::kPlasmaDefaultReleaseDelay);\n-}\n-#endif  // ARROW_NO_DEPRECATED_API\n-\n #ifdef PLASMA_GPU\n using arrow::gpu::CudaBuffer;\n using arrow::gpu::CudaBufferReader;\ndiff --git a/python/pyarrow/__init__.py b/python/pyarrow/__init__.py\nindex 7fb16100ed..bed5930104 100644\n--- a/python/pyarrow/__init__.py\n+++ b/python/pyarrow/__init__.py\n@@ -171,8 +171,6 @@ def _plasma_store_entry_point():\n \n from pyarrow.util import _deprecate_api  # noqa\n \n-frombuffer = _deprecate_api('frombuffer', 'py_buffer', py_buffer, '0.9.0')\n-\n # ----------------------------------------------------------------------\n # Returning absolute path to the pyarrow include directory (if bundled, e.g. in\n # wheels)\ndiff --git a/python/pyarrow/feather.py b/python/pyarrow/feather.py\nindex 26f22dac7e..4a693fe3ea 100644\n--- a/python/pyarrow/feather.py\n+++ b/python/pyarrow/feather.py\n@@ -26,7 +26,6 @@\n from pyarrow.lib import FeatherError  # noqa\n from pyarrow.lib import RecordBatch, Table, concat_tables\n import pyarrow.lib as ext\n-from .util import _deprecate_nthreads\n \n \n try:\n@@ -68,8 +67,7 @@ def read_table(self, columns=None):\n         table = Table.from_arrays(columns, names=names)\n         return table\n \n-    def read_pandas(self, columns=None, nthreads=None, use_threads=False):\n-        use_threads = _deprecate_nthreads(use_threads, nthreads)\n+    def read_pandas(self, columns=None, use_threads=True):\n         return self.read_table(columns=columns).to_pandas(\n             use_threads=use_threads)\n \n@@ -145,7 +143,7 @@ def validate_schemas(self, piece, table):\n                              .format(piece, self.schema,\n                                      table.schema))\n \n-    def read_pandas(self, columns=None, nthreads=None, use_threads=False):\n+    def read_pandas(self, columns=None, use_threads=True):\n         \"\"\"\n         Read multiple Parquet files as a single pandas DataFrame\n \n@@ -153,15 +151,14 @@ def read_pandas(self, columns=None, nthreads=None, use_threads=False):\n         ----------\n         columns : List[str]\n             Names of columns to read from the file\n-        nthreads : int, default 1\n-            Number of columns to read in parallel.\n+        use_threads : boolean, default True\n+            Use multiple threads when converting to pandas\n \n         Returns\n         -------\n         pandas.DataFrame\n             Content of the file as a pandas DataFrame (of columns)\n         \"\"\"\n-        use_threads = _deprecate_nthreads(use_threads, nthreads)\n         return self.read_table(columns=columns).to_pandas(\n             use_threads=use_threads)\n \n@@ -192,7 +189,7 @@ def write_feather(df, dest):\n         raise\n \n \n-def read_feather(source, columns=None, nthreads=None, use_threads=False):\n+def read_feather(source, columns=None, use_threads=True):\n     \"\"\"\n     Read a pandas.DataFrame from Feather format\n \n@@ -202,14 +199,13 @@ def read_feather(source, columns=None, nthreads=None, use_threads=False):\n     columns : sequence, optional\n         Only read a specific set of columns. If not provided, all columns are\n         read\n-    use_threads: bool, default False\n+    use_threads: bool, default True\n         Whether to parallelize reading using multiple threads\n \n     Returns\n     -------\n     df : pandas.DataFrame\n     \"\"\"\n-    use_threads = _deprecate_nthreads(use_threads, nthreads)\n     reader = FeatherReader(source)\n     return reader.read_pandas(columns=columns, use_threads=use_threads)\n \ndiff --git a/python/pyarrow/io.pxi b/python/pyarrow/io.pxi\nindex c8d86cd2c6..5a4d16441c 100644\n--- a/python/pyarrow/io.pxi\n+++ b/python/pyarrow/io.pxi\n@@ -942,15 +942,6 @@ cdef class BufferOutputStream(NativeFile):\n         self.is_writable = True\n         self.closed = False\n \n-    def get_result(self):\n-        \"\"\"\n-        Deprecated as of 0.10.0. Alias for getvalue()\n-        \"\"\"\n-        warnings.warn(\"BufferOutputStream.get_result() has been renamed \"\n-                      \"to getvalue(), will be removed in 0.11.0\",\n-                      FutureWarning)\n-        return self.getvalue()\n-\n     def getvalue(self):\n         \"\"\"\n         Finalize output stream and return result as pyarrow.Buffer.\ndiff --git a/python/pyarrow/ipc.pxi b/python/pyarrow/ipc.pxi\nindex e00dca8e25..c60c21c1ca 100644\n--- a/python/pyarrow/ipc.pxi\n+++ b/python/pyarrow/ipc.pxi\n@@ -84,7 +84,7 @@ cdef class Message:\n             check_status(self.message.get()\n                          .SerializeTo(stream.wr_file.get(),\n                                       &output_length))\n-        return stream.get_result()\n+        return stream.getvalue()\n \n     def __repr__(self):\n         metadata_len = self.metadata.size\ndiff --git a/python/pyarrow/ipc.py b/python/pyarrow/ipc.py\nindex 989e976875..a79cafe247 100644\n--- a/python/pyarrow/ipc.py\n+++ b/python/pyarrow/ipc.py\n@@ -24,7 +24,6 @@\n                          read_tensor, write_tensor,\n                          get_record_batch_size, get_tensor_size)\n import pyarrow.lib as lib\n-from .util import _deprecate_nthreads\n \n \n class _ReadPandasOption(object):\n@@ -166,25 +165,23 @@ def serialize_pandas(df, nthreads=None, preserve_index=True):\n     writer = pa.RecordBatchStreamWriter(sink, batch.schema)\n     writer.write_batch(batch)\n     writer.close()\n-    return sink.get_result()\n+    return sink.getvalue()\n \n \n-def deserialize_pandas(buf, nthreads=None, use_threads=False):\n+def deserialize_pandas(buf, use_threads=True):\n     \"\"\"Deserialize a buffer protocol compatible object into a pandas DataFrame.\n \n     Parameters\n     ----------\n     buf : buffer\n         An object compatible with the buffer protocol\n-    use_threads: boolean, default False\n+    use_threads: boolean, default True\n         Whether to parallelize the conversion using multiple threads\n \n     Returns\n     -------\n     df : pandas.DataFrame\n     \"\"\"\n-    use_threads = _deprecate_nthreads(use_threads, nthreads)\n-\n     buffer_reader = pa.BufferReader(buf)\n     reader = pa.RecordBatchStreamReader(buffer_reader)\n     table = reader.read_all()\ndiff --git a/python/pyarrow/table.pxi b/python/pyarrow/table.pxi\nindex 825b2b8856..513da28bb4 100644\n--- a/python/pyarrow/table.pxi\n+++ b/python/pyarrow/table.pxi\n@@ -27,8 +27,6 @@ except ImportError:\n else:\n     import pyarrow.pandas_compat as pdcompat\n \n-from .util import _deprecate_nthreads\n-\n \n cdef class ChunkedArray:\n     \"\"\"\n@@ -865,15 +863,19 @@ cdef class RecordBatch:\n             entries.append((name, column))\n         return OrderedDict(entries)\n \n-    def to_pandas(self, nthreads=None, use_threads=False):\n+    def to_pandas(self, use_threads=True):\n         \"\"\"\n         Convert the arrow::RecordBatch to a pandas DataFrame\n \n+        Parameters\n+        ----------\n+        use_threads : boolean, default True\n+            Use multiple threads for conversion\n+\n         Returns\n         -------\n         pandas.DataFrame\n         \"\"\"\n-        use_threads = _deprecate_nthreads(use_threads, nthreads)\n         return Table.from_batches([self]).to_pandas(use_threads=use_threads)\n \n     @classmethod\n@@ -1289,9 +1291,9 @@ cdef class Table:\n \n         return result\n \n-    def to_pandas(self, nthreads=None, strings_to_categorical=False,\n+    def to_pandas(self, strings_to_categorical=False,\n                   memory_pool=None, zero_copy_only=False, categories=None,\n-                  integer_object_nulls=False, use_threads=False):\n+                  integer_object_nulls=False, use_threads=True):\n         \"\"\"\n         Convert the arrow::Table to a pandas DataFrame\n \n@@ -1308,7 +1310,7 @@ cdef class Table:\n             List of columns that should be returned as pandas.Categorical\n         integer_object_nulls : boolean, default False\n             Cast integers with nulls to objects\n-        use_threads: boolean, default False\n+        use_threads: boolean, default True\n             Whether to parallelize the conversion using multiple threads\n \n         Returns\n@@ -1318,8 +1320,6 @@ cdef class Table:\n         cdef:\n             PandasOptions options\n \n-        use_threads = _deprecate_nthreads(use_threads, nthreads)\n-\n         options = PandasOptions(\n             strings_to_categorical=strings_to_categorical,\n             zero_copy_only=zero_copy_only,\ndiff --git a/python/pyarrow/tests/test_convert_pandas.py b/python/pyarrow/tests/test_convert_pandas.py\nindex 1cb58ff2b8..4f65547757 100644\n--- a/python/pyarrow/tests/test_convert_pandas.py\n+++ b/python/pyarrow/tests/test_convert_pandas.py\n@@ -57,7 +57,7 @@ def _alltypes_example(size=100):\n     })\n \n \n-def _check_pandas_roundtrip(df, expected=None, use_threads=False,\n+def _check_pandas_roundtrip(df, expected=None, use_threads=True,\n                             expected_schema=None,\n                             check_dtype=True, schema=None,\n                             preserve_index=False,\n@@ -1836,6 +1836,12 @@ def test_zero_copy_failure_on_timestamp_types(self):\n \n \n # This function must be at the top-level for Python 2.7's multiprocessing\n+def _non_threaded_conversion():\n+    df = _alltypes_example()\n+    _check_pandas_roundtrip(df, use_threads=False)\n+    _check_pandas_roundtrip(df, use_threads=False, as_batch=True)\n+\n+\n def _threaded_conversion():\n     df = _alltypes_example()\n     _check_pandas_roundtrip(df, use_threads=True)\n@@ -1881,8 +1887,8 @@ def test_empty_arrays(self):\n             arr = np.array([], dtype=dtype)\n             _check_array_roundtrip(arr, type=pa_type)\n \n-    def test_threaded_conversion(self):\n-        _threaded_conversion()\n+    def test_non_threaded_conversion(self):\n+        _non_threaded_conversion()\n \n     def test_threaded_conversion_multiprocess(self):\n         # Parallel conversion should work from child processes too (ARROW-2963)\ndiff --git a/python/pyarrow/util.py b/python/pyarrow/util.py\nindex 2954b62235..b8825658d8 100644\n--- a/python/pyarrow/util.py\n+++ b/python/pyarrow/util.py\n@@ -35,13 +35,3 @@ def wrapper(*args, **kwargs):\n         warnings.warn(msg, FutureWarning)\n         return api(*args)\n     return wrapper\n-\n-\n-def _deprecate_nthreads(use_threads, nthreads):\n-    if nthreads is not None:\n-        warnings.warn(\"`nthreads` argument is deprecated, \"\n-                      \"pass `use_threads` instead\", FutureWarning,\n-                      stacklevel=3)\n-        if nthreads > 1:\n-            use_threads = True\n-    return use_threads\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-04T21:32:57.448+0000",
                    "updated": "2018-09-04T21:32:57.448+0000",
                    "started": "2018-09-04T21:32:57.447+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "141052",
                    "issueId": "13177007"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 8400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7d900145[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b363b7c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7181ab93[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7be69304[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2c0f88ef[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@101e211c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6cbfcdbf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@230e0d9f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7396a1e1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1261784e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@218d88[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@53901ae6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 8400,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Sep 04 21:33:41 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-09-04T21:33:41.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2989/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-08-06T02:55:45.000+0000",
        "updated": "2018-09-04T21:33:41.000+0000",
        "timeoriginalestimate": null,
        "description": "Reminder to scrub the API before releasing 0.11.0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 8400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Remove deprecated APIs in 0.10.0 and below",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177007/comment/16603621",
                    "id": "16603621",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2478\n[https://github.com/apache/arrow/pull/2478]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-09-04T21:33:41.418+0000",
                    "updated": "2018-09-04T21:33:41.418+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3wpq7:",
        "customfield_12314139": null
    }
}