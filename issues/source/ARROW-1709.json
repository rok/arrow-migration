{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13111261",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111261",
    "key": "ARROW-1709",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341666",
                "id": "12341666",
                "name": "0.7.1",
                "archived": false,
                "released": true,
                "releaseDate": "2017-10-01"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1709/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1570d75c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3ed70c71[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4fdb7e01[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4969470f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@166b3218[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5e66ade7[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ad9fb5c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@498b8c37[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@63f9cec[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6d5d1059[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@685b15b5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7d24d6bd[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Nov 09 01:51:10 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-11-09T01:51:10.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1709/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2017-10-22T22:09:15.000+0000",
        "updated": "2017-11-09T01:51:10.000+0000",
        "timeoriginalestimate": null,
        "description": "{{Decimal128::ToString(int precision, int scale)}} doesn't handle {{scale < 0}} correctly. It should tack on an extra {{e<abs(scale)>}} to the end.",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Decimal.ToString is incorrect for negative scale",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111261/comment/16214473",
                    "id": "16214473",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Note this doesn't affect anything about the correctness of the underlying bytes, just the way the value looks when printing.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-10-22T22:10:16.666+0000",
                    "updated": "2017-10-22T22:10:16.666+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111261/comment/16242828",
                    "id": "16242828",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud opened a new pull request #1292: ARROW-1709: [C++] Decimal.ToString is incorrect for negative scale\nURL: https://github.com/apache/arrow/pull/1292\n \n \n   This is on top of ARROW-1716. Will rebase when that's merged.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-07T20:32:18.748+0000",
                    "updated": "2017-11-07T20:32:18.748+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111261/comment/16243221",
                    "id": "16243221",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1292: ARROW-1709: [C++] Decimal.ToString is incorrect for negative scale\nURL: https://github.com/apache/arrow/pull/1292#issuecomment-342678512\n \n \n   Hm looks like another osx build timeout.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-08T01:19:39.998+0000",
                    "updated": "2017-11-08T01:19:39.998+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111261/comment/16244806",
                    "id": "16244806",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1292: ARROW-1709: [C++] Decimal.ToString is incorrect for negative scale\nURL: https://github.com/apache/arrow/pull/1292#issuecomment-342976812\n \n \n   @wesm @xhochy This is ready to go whenever you have a chance.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-08T22:06:47.959+0000",
                    "updated": "2017-11-08T22:06:47.959+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111261/comment/16245094",
                    "id": "16245094",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1292: ARROW-1709: [C++] Decimal.ToString is incorrect for negative scale\nURL: https://github.com/apache/arrow/pull/1292\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/util/decimal-test.cc b/cpp/src/arrow/util/decimal-test.cc\nindex b0271fff1..0d0c08cc4 100644\n--- a/cpp/src/arrow/util/decimal-test.cc\n+++ b/cpp/src/arrow/util/decimal-test.cc\n@@ -18,6 +18,7 @@\n \n #include <cstdint>\n #include <string>\n+#include <tuple>\n \n #include <gtest/gtest.h>\n \n@@ -291,4 +292,78 @@ TEST(Decimal128Test, PrintMinValue) {\n   ASSERT_EQ(string_value, printed_value);\n }\n \n+class Decimal128PrintingTest\n+    : public ::testing::TestWithParam<std::tuple<int32_t, int32_t, std::string>> {};\n+\n+TEST_P(Decimal128PrintingTest, Print) {\n+  int32_t test_value;\n+  int32_t scale;\n+  std::string expected_string;\n+  std::tie(test_value, scale, expected_string) = GetParam();\n+  const Decimal128 value(test_value);\n+  const std::string printed_value = value.ToString(scale);\n+  ASSERT_EQ(expected_string, printed_value);\n+}\n+\n+INSTANTIATE_TEST_CASE_P(Decimal128PrintingTest, Decimal128PrintingTest,\n+                        ::testing::Values(std::make_tuple(123, 1, \"12.3\"),\n+                                          std::make_tuple(123, 5, \"0.00123\"),\n+                                          std::make_tuple(123, 10, \"1.23E-8\"),\n+                                          std::make_tuple(123, -1, \"1.23E+3\"),\n+                                          std::make_tuple(-123, -1, \"-1.23E+3\"),\n+                                          std::make_tuple(123, -3, \"1.23E+5\"),\n+                                          std::make_tuple(-123, -3, \"-1.23E+5\"),\n+                                          std::make_tuple(12345, -3, \"1.2345E+7\")));\n+\n+class Decimal128ParsingTest\n+    : public ::testing::TestWithParam<std::tuple<std::string, uint64_t, int32_t>> {};\n+\n+TEST_P(Decimal128ParsingTest, Parse) {\n+  std::string test_string;\n+  uint64_t expected_low_bits;\n+  int32_t expected_scale;\n+  std::tie(test_string, expected_low_bits, expected_scale) = GetParam();\n+  Decimal128 value;\n+  int32_t scale;\n+  ASSERT_OK(Decimal128::FromString(test_string, &value, NULLPTR, &scale));\n+  ASSERT_EQ(value.low_bits(), expected_low_bits);\n+  ASSERT_EQ(expected_scale, scale);\n+}\n+\n+INSTANTIATE_TEST_CASE_P(Decimal128ParsingTest, Decimal128ParsingTest,\n+                        ::testing::Values(std::make_tuple(\"12.3\", 123ULL, 1),\n+                                          std::make_tuple(\"0.00123\", 123ULL, 5),\n+                                          std::make_tuple(\"1.23E-8\", 123ULL, 10),\n+                                          std::make_tuple(\"-1.23E-8\", -123LL, 10),\n+                                          std::make_tuple(\"1.23E+3\", 123ULL, -1),\n+                                          std::make_tuple(\"-1.23E+3\", -123LL, -1),\n+                                          std::make_tuple(\"1.23E+5\", 123ULL, -3),\n+                                          std::make_tuple(\"1.2345E+7\", 12345ULL, -3),\n+                                          std::make_tuple(\"1.23e-8\", 123ULL, 10),\n+                                          std::make_tuple(\"-1.23e-8\", -123LL, 10),\n+                                          std::make_tuple(\"1.23e+3\", 123ULL, -1),\n+                                          std::make_tuple(\"-1.23e+3\", -123LL, -1),\n+                                          std::make_tuple(\"1.23e+5\", 123ULL, -3),\n+                                          std::make_tuple(\"1.2345e+7\", 12345ULL, -3)));\n+\n+class Decimal128ParsingTestInvalid : public ::testing::TestWithParam<std::string> {};\n+\n+TEST_P(Decimal128ParsingTestInvalid, Parse) {\n+  std::string test_string = GetParam();\n+  Decimal128 value;\n+  ASSERT_RAISES(Invalid, Decimal128::FromString(test_string, &value));\n+}\n+\n+INSTANTIATE_TEST_CASE_P(Decimal128ParsingTestInvalid, Decimal128ParsingTestInvalid,\n+                        ::testing::Values(\"0.00123D/3\", \"1.23eA8\", \"1.23E+3A\",\n+                                          \"-1.23E--5\", \"1.2345E+++07\"));\n+\n+TEST(Decimal128ParseTest, WithExponentAndNullptrScale) {\n+  Decimal128 value;\n+  ASSERT_OK(Decimal128::FromString(\"1.23E-8\", &value));\n+\n+  const Decimal128 expected_value(123);\n+  ASSERT_EQ(expected_value, value);\n+}\n+\n }  // namespace arrow\ndiff --git a/cpp/src/arrow/util/decimal.cc b/cpp/src/arrow/util/decimal.cc\nindex cc180258a..447cae5c5 100644\n--- a/cpp/src/arrow/util/decimal.cc\n+++ b/cpp/src/arrow/util/decimal.cc\n@@ -105,6 +105,22 @@ Decimal128::operator int64_t() const {\n   return static_cast<int64_t>(low_bits_);\n }\n \n+static std::string ToStringNegativeScale(const std::string& str,\n+                                         int32_t adjusted_exponent, bool is_negative) {\n+  std::stringstream buf;\n+\n+  size_t offset = 0;\n+  buf << str[offset++];\n+\n+  if (is_negative) {\n+    buf << str[offset++];\n+  }\n+\n+  buf << '.' << str.substr(offset, std::string::npos) << 'E' << std::showpos\n+      << adjusted_exponent;\n+  return buf.str();\n+}\n+\n std::string Decimal128::ToString(int32_t scale) const {\n   const std::string str(ToIntegerString());\n \n@@ -112,9 +128,18 @@ std::string Decimal128::ToString(int32_t scale) const {\n     return str;\n   }\n \n-  if (*this < 0) {\n-    const auto len = static_cast<int32_t>(str.size());\n+  const bool is_negative = *this < 0;\n \n+  const auto len = static_cast<int32_t>(str.size());\n+  const auto is_negative_offset = static_cast<int32_t>(is_negative);\n+  const int32_t adjusted_exponent = -scale + (len - 1 - is_negative_offset);\n+\n+  /// Note that the -6 is taken from the Java BigDecimal documentation.\n+  if (scale < 0 || adjusted_exponent < -6) {\n+    return ToStringNegativeScale(str, adjusted_exponent, is_negative);\n+  }\n+\n+  if (is_negative) {\n     if (len - 1 > scale) {\n       const auto n = static_cast<size_t>(len - scale);\n       return str.substr(0, n) + \".\" + str.substr(n, static_cast<size_t>(scale));\n@@ -128,8 +153,6 @@ std::string Decimal128::ToString(int32_t scale) const {\n     return result + str.substr(1, std::string::npos);\n   }\n \n-  const auto len = static_cast<int32_t>(str.size());\n-\n   if (len > scale) {\n     const auto n = static_cast<size_t>(len - scale);\n     return str.substr(0, n) + \".\" + str.substr(n, static_cast<size_t>(scale));\n@@ -164,10 +187,12 @@ static constexpr int64_t kPowersOfTen[kInt64DecimalDigits + 1] = {1LL,\n                                                                   100000000000000000LL,\n                                                                   1000000000000000000LL};\n \n+static inline bool isdigit(char value) { return std::isdigit(value) != 0; }\n+\n static void StringToInteger(const std::string& str, Decimal128* out) {\n   using std::size_t;\n \n-  DCHECK_NE(out, nullptr) << \"Decimal128 output variable cannot be nullptr\";\n+  DCHECK_NE(out, NULLPTR) << \"Decimal128 output variable cannot be NULLPTR\";\n   DCHECK_EQ(*out, 0)\n       << \"When converting a string to Decimal128 the initial output must be 0\";\n \n@@ -189,7 +214,7 @@ static void StringToInteger(const std::string& str, Decimal128* out) {\n \n Status Decimal128::FromString(const std::string& s, Decimal128* out, int* precision,\n                               int* scale) {\n-  // Implements this regex: \"(\\\\+?|-?)((0*)(\\\\d*))(\\\\.(\\\\d+))?\";\n+  // Implements this regex: \"(\\\\+?|-?)((0*)(\\\\d*))(\\\\.(\\\\d+))?((E|e)(\\\\+|-)?\\\\d+)?\";\n   if (s.empty()) {\n     return Status::Invalid(\"Empty string cannot be converted to decimal\");\n   }\n@@ -215,21 +240,21 @@ Status Decimal128::FromString(const std::string& s, Decimal128* out, int* precis\n   DCHECK_LT(charp, end);\n \n   // skip leading zeros\n-  charp = std::find_if_not(charp, end, [](char c) { return c == '0'; });\n+  charp = std::find_if_not(charp, end, [](char value) { return value == '0'; });\n \n   // all zeros and no decimal point\n   if (charp == end) {\n-    if (out != nullptr) {\n+    if (out != NULLPTR) {\n       *out = 0;\n     }\n \n     // Not sure what other libraries assign precision to for this case (this case of\n     // a string consisting only of one or more zeros)\n-    if (precision != nullptr) {\n+    if (precision != NULLPTR) {\n       *precision = static_cast<int>(charp - numeric_string_start);\n     }\n \n-    if (scale != nullptr) {\n+    if (scale != NULLPTR) {\n       *scale = 0;\n     }\n \n@@ -238,7 +263,7 @@ Status Decimal128::FromString(const std::string& s, Decimal128* out, int* precis\n \n   std::string::const_iterator whole_part_start = charp;\n \n-  charp = std::find_if_not(charp, end, [](char c) { return std::isdigit(c) != 0; });\n+  charp = std::find_if_not(charp, end, isdigit);\n \n   std::string::const_iterator whole_part_end = charp;\n   std::string whole_part(whole_part_start, whole_part_end);\n@@ -269,14 +294,13 @@ Status Decimal128::FromString(const std::string& s, Decimal128* out, int* precis\n \n   std::string::const_iterator fractional_part_start = charp;\n \n-  // The rest must be digits, because if we have a decimal point it must be followed by\n-  // digits\n+  // The rest must be digits or an exponent\n   if (charp != end) {\n-    charp = std::find_if_not(charp, end, [](char c) { return std::isdigit(c) != 0; });\n+    charp = std::find_if_not(charp, end, isdigit);\n \n     // The while loop has ended before the end of the string which means we've hit a\n-    // character that isn't a base ten digit\n-    if (charp != end) {\n+    // character that isn't a base ten digit or \"E\" for exponent\n+    if (charp != end && *charp != 'E' && *charp != 'e') {\n       std::stringstream ss;\n       ss << \"Found non base ten digit character '\" << *charp\n          << \"' before the end of the string\";\n@@ -287,15 +311,55 @@ Status Decimal128::FromString(const std::string& s, Decimal128* out, int* precis\n   std::string::const_iterator fractional_part_end = charp;\n   std::string fractional_part(fractional_part_start, fractional_part_end);\n \n-  if (precision != nullptr) {\n+  if (precision != NULLPTR) {\n     *precision = static_cast<int>(whole_part.size() + fractional_part.size());\n   }\n \n-  if (scale != nullptr) {\n-    *scale = static_cast<int>(fractional_part.size());\n+  if (charp != end) {\n+    // we must have an exponent, if this aborts then we have somehow not caught this and\n+    // raised a proper error\n+    DCHECK(*charp == 'E' || *charp == 'e');\n+\n+    ++charp;\n+\n+    const char value = *charp;\n+    const bool starts_with_plus_or_minus = value == '+' || value == '-';\n+\n+    // we use this to construct the adjusted exponent integer later\n+    std::string::const_iterator digit_start = charp;\n+\n+    // skip plus or minus\n+    charp += starts_with_plus_or_minus;\n+\n+    // confirm that the rest of the characters are digits\n+    charp = std::find_if_not(charp, end, isdigit);\n+\n+    if (charp != end) {\n+      // we have something other than digits here\n+      std::stringstream ss;\n+      ss << \"Found non decimal digit exponent value '\" << *charp << \"'\";\n+      return Status::Invalid(ss.str());\n+    }\n+\n+    if (scale != NULLPTR) {\n+      // compute the scale from the adjusted exponent\n+      std::string adjusted_exponent_string(digit_start, end);\n+      DCHECK(std::all_of(adjusted_exponent_string.cbegin() + starts_with_plus_or_minus,\n+                         adjusted_exponent_string.cend(), isdigit))\n+          << \"Non decimal digit character found in \" << adjusted_exponent_string;\n+      const auto adjusted_exponent =\n+          static_cast<int32_t>(std::stol(adjusted_exponent_string));\n+      const auto len = static_cast<int32_t>(whole_part.size() + fractional_part.size());\n+\n+      *scale = -adjusted_exponent + len - 1;\n+    }\n+  } else {\n+    if (scale != NULLPTR) {\n+      *scale = static_cast<int>(fractional_part.size());\n+    }\n   }\n \n-  if (out != nullptr) {\n+  if (out != NULLPTR) {\n     // zero out in case we've passed in a previously used value\n     *out = 0;\n     StringToInteger(whole_part + fractional_part, out);\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-09T01:51:05.493+0000",
                    "updated": "2017-11-09T01:51:05.493+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111261/comment/16245095",
                    "id": "16245095",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1292\n[https://github.com/apache/arrow/pull/1292]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-11-09T01:51:10.078+0000",
                    "updated": "2017-11-09T01:51:10.078+0000"
                }
            ],
            "maxResults": 6,
            "total": 6,
            "startAt": 0
        },
        "customfield_12311820": "0|i3lkdj:",
        "customfield_12314139": null
    }
}