{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13416137",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137",
    "key": "ARROW-15032",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "kernel",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=willayd",
            "name": "willayd",
            "key": "willayd",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=willayd&avatarId=49036",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=willayd&avatarId=49036",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=willayd&avatarId=49036",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=willayd&avatarId=49036"
            },
            "displayName": "Will Ayd",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=willayd",
            "name": "willayd",
            "key": "willayd",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=willayd&avatarId=49036",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=willayd&avatarId=49036",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=willayd&avatarId=49036",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=willayd&avatarId=49036"
            },
            "displayName": "Will Ayd",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=willayd",
            "name": "willayd",
            "key": "willayd",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=willayd&avatarId=49036",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=willayd&avatarId=49036",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=willayd&avatarId=49036",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=willayd&avatarId=49036"
            },
            "displayName": "Will Ayd",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 22800,
            "total": 22800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 22800,
            "total": 22800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15032/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 38,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/698136",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "WillAyd opened a new pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990\n\n\n   There is still one test failure with the timezone test I need to figure out, but hopefully this is still reviewable in the meantime. I wasn't really sold on `DateStruct` as the name of the compute function\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-17T22:51:10.779+0000",
                    "updated": "2021-12-17T22:51:10.779+0000",
                    "started": "2021-12-17T22:51:10.779+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "698136",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/698137",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#issuecomment-997076200\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-17T22:51:33.575+0000",
                    "updated": "2021-12-17T22:51:33.575+0000",
                    "started": "2021-12-17T22:51:33.575+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "698137",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/698266",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on a change in pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#discussion_r771830498\n\n\n\n##########\nFile path: cpp/src/arrow/compute/api_scalar.h\n##########\n@@ -1024,6 +1024,18 @@ Result<Datum> Month(const Datum& values, ExecContext* ctx = NULLPTR);\n ARROW_EXPORT\n Result<Datum> Day(const Datum& values, ExecContext* ctx = NULLPTR);\n \n+/// \\brief DateStruct returns a struct containing the Year, Month and Day value for\n+/// each element of `values`.\n+///\n+/// \\param[in] values input to extract Year/Month/Day from\n\nReview comment:\n       ```suggestion\r\n   /// \\param[in] values input to extract (year, month, day) struct from\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal_unary.cc\n##########\n@@ -185,6 +191,98 @@ struct Day {\n   Localizer localizer_;\n };\n \n+// ----------------------------------------------------------------------\n+// Extract year/month/day from temporal types\n\nReview comment:\n       ```suggestion\r\n   // Extract (year, month, day) struct from temporal types\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal_unary.cc\n##########\n@@ -833,6 +931,13 @@ const FunctionDoc day_doc{\n      \"cannot be found in the timezone database.\"),\n     {\"values\"}};\n \n+const FunctionDoc date_struct_doc{\n+  \"Extract year/month/day\",\n\nReview comment:\n       ```suggestion\r\n     \"Extract (year, month, day) struct\",\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/api_scalar.h\n##########\n@@ -1024,6 +1024,18 @@ Result<Datum> Month(const Datum& values, ExecContext* ctx = NULLPTR);\n ARROW_EXPORT\n Result<Datum> Day(const Datum& values, ExecContext* ctx = NULLPTR);\n \n+/// \\brief DateStruct returns a struct containing the Year, Month and Day value for\n+/// each element of `values`.\n+///\n+/// \\param[in] values input to extract Year/Month/Day from\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 6.1.0\n\nReview comment:\n       ```suggestion\r\n   /// \\since 7.0.0\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-18T14:46:10.187+0000",
                    "updated": "2021-12-18T14:46:10.187+0000",
                    "started": "2021-12-18T14:46:10.187+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "698266",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/698280",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#discussion_r771842555\n\n\n\n##########\nFile path: cpp/src/arrow/compute/api_scalar.h\n##########\n@@ -1024,6 +1024,18 @@ Result<Datum> Month(const Datum& values, ExecContext* ctx = NULLPTR);\n ARROW_EXPORT\n Result<Datum> Day(const Datum& values, ExecContext* ctx = NULLPTR);\n \n+/// \\brief DateStruct returns a struct containing the Year, Month and Day value for\n+/// each element of `values`.\n+///\n+/// \\param[in] values input to extract (year, month, day) struct from\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 7.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT\n+Result<Datum> DateStruct(const Datum& values, ExecContext* ctx = NULLPTR);\n\nReview comment:\n       `YearMonthDay`/`year_month_day` might be a little more consistent with the naming here?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal_test.cc\n##########\n@@ -580,6 +627,7 @@ TEST_F(ScalarTemporalTest, TestZoned2) {\n     CheckScalarUnary(\"year\", unit, times_seconds_precision, int64(), year);\n     CheckScalarUnary(\"month\", unit, times_seconds_precision, int64(), month);\n     CheckScalarUnary(\"day\", unit, times_seconds_precision, int64(), day);\n+    // TODO: where is year assigned in this function?\n\nReview comment:\n       TEST_F declares the test as using a [test fixture in Googletest](https://google.github.io/googletest/primer.html#same-data-multiple-tests) so it effectively becomes a method of the fixture class above. Hence `year` comes from here: https://github.com/apache/arrow/blob/b5a47e166c7c168c3393256d4da48bf7b7f6add5/cpp/src/arrow/compute/kernels/scalar_temporal_test.cc#L141\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal_unary.cc\n##########\n@@ -185,6 +191,98 @@ struct Day {\n   Localizer localizer_;\n };\n \n+// ----------------------------------------------------------------------\n+// Extract (year, month, day) struct from temporal types\n+\n+template <typename Duration, typename InType, typename BuilderType>\n+struct DateStructVisitValueFunction {\n+  static Result<std::function<Status(typename InType::c_type arg)>> Get(\n+      const std::vector<BuilderType*>& field_builders, const ArrayData&,\n+      StructBuilder* struct_builder) {\n+    return [=](typename InType::c_type arg) {\n+      const auto ymd = year_month_day(floor<days>(NonZonedLocalizer{}.template ConvertTimePoint<Duration>(arg)));;\n+      field_builders[0]->UnsafeAppend(static_cast<const int32_t>(ymd.year()));\n+      field_builders[1]->UnsafeAppend(static_cast<const uint32_t>(ymd.month()));\n+      field_builders[2]->UnsafeAppend(static_cast<const uint32_t>(ymd.day()));\n+      return struct_builder->Append();\n+    };\n+  };\n+};  \n+\n+template <typename Duration, typename BuilderType>\n+struct DateStructVisitValueFunction<Duration, TimestampType, BuilderType> {\n+  static Result<std::function<Status(typename TimestampType::c_type arg)>> Get(\n+      const std::vector<BuilderType*>& field_builders, const ArrayData& in,\n+      StructBuilder* struct_builder) {\n+    const auto& timezone = GetInputTimezone(in);\n+    if (timezone.empty()) {\n+      return [=](TimestampType::c_type arg) {\n+        const auto ymd = year_month_day(floor<days>(NonZonedLocalizer{}.template ConvertTimePoint<Duration>(arg)));;\n+        field_builders[0]->UnsafeAppend(static_cast<const int32_t>(ymd.year()));\n+        field_builders[1]->UnsafeAppend(static_cast<const uint32_t>(ymd.month()));\n+        field_builders[2]->UnsafeAppend(static_cast<const uint32_t>(ymd.day()));\n+        return struct_builder->Append();\n+      };\n+    }\n+    ARROW_ASSIGN_OR_RAISE(auto tz, LocateZone(timezone));\n+    return [=](TimestampType::c_type arg) {\n+        const auto ymd = year_month_day(floor<days>(ZonedLocalizer{tz}.template ConvertTimePoint<Duration>(arg)));      \n+        field_builders[0]->UnsafeAppend(static_cast<const int32_t>(ymd.year()));\n+        field_builders[1]->UnsafeAppend(static_cast<const uint32_t>(ymd.month()));\n+        field_builders[2]->UnsafeAppend(static_cast<const uint32_t>(ymd.day()));\n+      return struct_builder->Append();\n+    };\n+  }\n+};\n+\n+template <typename Duration, typename InType>\n+struct DateStruct {\n+  static Status Call(KernelContext* ctx, const Scalar& in, Scalar* out) {\n+    if (in.is_valid) {\n+      const auto& in_val = internal::UnboxScalar<const InType>::Unbox(in);\n+      const auto t = floor<days>(NonZonedLocalizer{}.template ConvertTimePoint<Duration>(in_val));\n\nReview comment:\n       It might be possible to structure things more like the other kernels except perhaps return `year_month_day`. And then we can dispatch to the right one variant here and reuse the same implementation across the scalar/array and zoned/naive timestamp cases.\n\n##########\nFile path: docs/source/cpp/compute.rst\n##########\n@@ -1390,29 +1392,31 @@ For timestamps inputs with non-empty timezone, localized timestamp components wi\n +--------------------+------------+-------------------+---------------+----------------------------+-------+\n | subsecond          | Unary      | Timestamp, Time   | Double        |                            |       |\n +--------------------+------------+-------------------+---------------+----------------------------+-------+\n-| us_week            | Unary      | Temporal          | Int64         |                            | \\(4)  |\n+| us_week            | Unary      | Temporal          | Int64         |                            | \\(5)  |\n +--------------------+------------+-------------------+---------------+----------------------------+-------+\n-| week               | Unary      | Timestamp         | Int64         | :struct:`WeekOptions`      | \\(5)  |\n+| week               | Unary      | Timestamp         | Int64         | :struct:`WeekOptions`      | \\(6)  |\n +--------------------+------------+-------------------+---------------+----------------------------+-------+\n | year               | Unary      | Temporal          | Int64         |                            |       |\n +--------------------+------------+-------------------+---------------+----------------------------+-------+\n \n-* \\(1) Outputs the number of the day of the week. By default week begins on Monday\n+* \\(1) Output is a ``{\"year\": output type, \"month\": output type, \"day\": output type}`` Struct.\n\nReview comment:\n       This should be something like `{\"year\": int64(), ...}` no?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal_unary.cc\n##########\n@@ -833,6 +931,13 @@ const FunctionDoc day_doc{\n      \"cannot be found in the timezone database.\"),\n     {\"values\"}};\n \n+const FunctionDoc date_struct_doc{\n+  \"Extract (year, month, day) struct\",\n+  (\"Null values emit null.\\n\"\n+   \"An error is returned in the values have a defined timezone but it\\n\"\n+   \"cannot be found in the timezone database.\"),\n\nReview comment:\n       ```suggestion\r\n      \"An error is returned if the values have a defined timezone but it\\n\"\r\n      \"cannot be found in the timezone database.\"),\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal_unary.cc\n##########\n@@ -185,6 +191,98 @@ struct Day {\n   Localizer localizer_;\n };\n \n+// ----------------------------------------------------------------------\n+// Extract (year, month, day) struct from temporal types\n+\n+template <typename Duration, typename InType, typename BuilderType>\n+struct DateStructVisitValueFunction {\n+  static Result<std::function<Status(typename InType::c_type arg)>> Get(\n+      const std::vector<BuilderType*>& field_builders, const ArrayData&,\n+      StructBuilder* struct_builder) {\n+    return [=](typename InType::c_type arg) {\n+      const auto ymd = year_month_day(floor<days>(NonZonedLocalizer{}.template ConvertTimePoint<Duration>(arg)));;\n+      field_builders[0]->UnsafeAppend(static_cast<const int32_t>(ymd.year()));\n+      field_builders[1]->UnsafeAppend(static_cast<const uint32_t>(ymd.month()));\n+      field_builders[2]->UnsafeAppend(static_cast<const uint32_t>(ymd.day()));\n+      return struct_builder->Append();\n+    };\n+  };\n+};  \n+\n+template <typename Duration, typename BuilderType>\n+struct DateStructVisitValueFunction<Duration, TimestampType, BuilderType> {\n+  static Result<std::function<Status(typename TimestampType::c_type arg)>> Get(\n+      const std::vector<BuilderType*>& field_builders, const ArrayData& in,\n+      StructBuilder* struct_builder) {\n+    const auto& timezone = GetInputTimezone(in);\n+    if (timezone.empty()) {\n+      return [=](TimestampType::c_type arg) {\n+        const auto ymd = year_month_day(floor<days>(NonZonedLocalizer{}.template ConvertTimePoint<Duration>(arg)));;\n+        field_builders[0]->UnsafeAppend(static_cast<const int32_t>(ymd.year()));\n+        field_builders[1]->UnsafeAppend(static_cast<const uint32_t>(ymd.month()));\n+        field_builders[2]->UnsafeAppend(static_cast<const uint32_t>(ymd.day()));\n+        return struct_builder->Append();\n+      };\n+    }\n+    ARROW_ASSIGN_OR_RAISE(auto tz, LocateZone(timezone));\n+    return [=](TimestampType::c_type arg) {\n+        const auto ymd = year_month_day(floor<days>(ZonedLocalizer{tz}.template ConvertTimePoint<Duration>(arg)));      \n+        field_builders[0]->UnsafeAppend(static_cast<const int32_t>(ymd.year()));\n+        field_builders[1]->UnsafeAppend(static_cast<const uint32_t>(ymd.month()));\n+        field_builders[2]->UnsafeAppend(static_cast<const uint32_t>(ymd.day()));\n+      return struct_builder->Append();\n+    };\n+  }\n+};\n+\n+template <typename Duration, typename InType>\n+struct DateStruct {\n+  static Status Call(KernelContext* ctx, const Scalar& in, Scalar* out) {\n+    if (in.is_valid) {\n+      const auto& in_val = internal::UnboxScalar<const InType>::Unbox(in);\n+      const auto t = floor<days>(NonZonedLocalizer{}.template ConvertTimePoint<Duration>(in_val));\n\nReview comment:\n       What if the scalar type has a timezone?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal_unary.cc\n##########\n@@ -185,6 +191,98 @@ struct Day {\n   Localizer localizer_;\n };\n \n+// ----------------------------------------------------------------------\n+// Extract (year, month, day) struct from temporal types\n+\n+template <typename Duration, typename InType, typename BuilderType>\n+struct DateStructVisitValueFunction {\n+  static Result<std::function<Status(typename InType::c_type arg)>> Get(\n+      const std::vector<BuilderType*>& field_builders, const ArrayData&,\n+      StructBuilder* struct_builder) {\n+    return [=](typename InType::c_type arg) {\n+      const auto ymd = year_month_day(floor<days>(NonZonedLocalizer{}.template ConvertTimePoint<Duration>(arg)));;\n+      field_builders[0]->UnsafeAppend(static_cast<const int32_t>(ymd.year()));\n+      field_builders[1]->UnsafeAppend(static_cast<const uint32_t>(ymd.month()));\n+      field_builders[2]->UnsafeAppend(static_cast<const uint32_t>(ymd.day()));\n+      return struct_builder->Append();\n+    };\n+  };\n+};  \n+\n+template <typename Duration, typename BuilderType>\n+struct DateStructVisitValueFunction<Duration, TimestampType, BuilderType> {\n+  static Result<std::function<Status(typename TimestampType::c_type arg)>> Get(\n+      const std::vector<BuilderType*>& field_builders, const ArrayData& in,\n+      StructBuilder* struct_builder) {\n+    const auto& timezone = GetInputTimezone(in);\n+    if (timezone.empty()) {\n+      return [=](TimestampType::c_type arg) {\n+        const auto ymd = year_month_day(floor<days>(NonZonedLocalizer{}.template ConvertTimePoint<Duration>(arg)));;\n+        field_builders[0]->UnsafeAppend(static_cast<const int32_t>(ymd.year()));\n+        field_builders[1]->UnsafeAppend(static_cast<const uint32_t>(ymd.month()));\n+        field_builders[2]->UnsafeAppend(static_cast<const uint32_t>(ymd.day()));\n+        return struct_builder->Append();\n+      };\n+    }\n+    ARROW_ASSIGN_OR_RAISE(auto tz, LocateZone(timezone));\n+    return [=](TimestampType::c_type arg) {\n+        const auto ymd = year_month_day(floor<days>(ZonedLocalizer{tz}.template ConvertTimePoint<Duration>(arg)));      \n+        field_builders[0]->UnsafeAppend(static_cast<const int32_t>(ymd.year()));\n+        field_builders[1]->UnsafeAppend(static_cast<const uint32_t>(ymd.month()));\n+        field_builders[2]->UnsafeAppend(static_cast<const uint32_t>(ymd.day()));\n+      return struct_builder->Append();\n+    };\n+  }\n+};\n+\n+template <typename Duration, typename InType>\n+struct DateStruct {\n+  static Status Call(KernelContext* ctx, const Scalar& in, Scalar* out) {\n+    if (in.is_valid) {\n+      const auto& in_val = internal::UnboxScalar<const InType>::Unbox(in);\n+      const auto t = floor<days>(NonZonedLocalizer{}.template ConvertTimePoint<Duration>(in_val));\n+      const auto ymd = year_month_day(t);\n+      \n+      ScalarVector values = {std::make_shared<Int64Scalar>(static_cast<const int32_t>(ymd.year())),\n+\tstd::make_shared<Int64Scalar>(static_cast<const uint32_t>(ymd.month())),\n+\tstd::make_shared<Int64Scalar>(static_cast<const uint32_t>(ymd.day()))};\n+      *checked_cast<StructScalar*>(out) =\n+          StructScalar(std::move(values), DateStructType());\n\nReview comment:\n       You're going to want to format the code. See https://arrow.apache.org/docs/developers/cpp/development.html#code-style-linting-and-ci\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-18T16:43:53.172+0000",
                    "updated": "2021-12-18T16:43:53.172+0000",
                    "started": "2021-12-18T16:43:53.171+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "698280",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/698288",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "WillAyd commented on a change in pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#discussion_r771848861\n\n\n\n##########\nFile path: cpp/src/arrow/compute/api_scalar.h\n##########\n@@ -1024,6 +1024,18 @@ Result<Datum> Month(const Datum& values, ExecContext* ctx = NULLPTR);\n ARROW_EXPORT\n Result<Datum> Day(const Datum& values, ExecContext* ctx = NULLPTR);\n \n+/// \\brief DateStruct returns a struct containing the Year, Month and Day value for\n+/// each element of `values`.\n+///\n+/// \\param[in] values input to extract (year, month, day) struct from\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the resulting datum\n+///\n+/// \\since 7.0.0\n+/// \\note API not yet finalized\n+ARROW_EXPORT\n+Result<Datum> DateStruct(const Datum& values, ExecContext* ctx = NULLPTR);\n\nReview comment:\n       Great idea - love this\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-18T17:49:38.198+0000",
                    "updated": "2021-12-18T17:49:38.198+0000",
                    "started": "2021-12-18T17:49:38.197+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "698288",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/698289",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "WillAyd commented on a change in pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#discussion_r771849033\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal_unary.cc\n##########\n@@ -185,6 +191,98 @@ struct Day {\n   Localizer localizer_;\n };\n \n+// ----------------------------------------------------------------------\n+// Extract (year, month, day) struct from temporal types\n+\n+template <typename Duration, typename InType, typename BuilderType>\n+struct DateStructVisitValueFunction {\n+  static Result<std::function<Status(typename InType::c_type arg)>> Get(\n+      const std::vector<BuilderType*>& field_builders, const ArrayData&,\n+      StructBuilder* struct_builder) {\n+    return [=](typename InType::c_type arg) {\n+      const auto ymd = year_month_day(floor<days>(NonZonedLocalizer{}.template ConvertTimePoint<Duration>(arg)));;\n+      field_builders[0]->UnsafeAppend(static_cast<const int32_t>(ymd.year()));\n+      field_builders[1]->UnsafeAppend(static_cast<const uint32_t>(ymd.month()));\n+      field_builders[2]->UnsafeAppend(static_cast<const uint32_t>(ymd.day()));\n+      return struct_builder->Append();\n+    };\n+  };\n+};  \n+\n+template <typename Duration, typename BuilderType>\n+struct DateStructVisitValueFunction<Duration, TimestampType, BuilderType> {\n+  static Result<std::function<Status(typename TimestampType::c_type arg)>> Get(\n+      const std::vector<BuilderType*>& field_builders, const ArrayData& in,\n+      StructBuilder* struct_builder) {\n+    const auto& timezone = GetInputTimezone(in);\n+    if (timezone.empty()) {\n+      return [=](TimestampType::c_type arg) {\n+        const auto ymd = year_month_day(floor<days>(NonZonedLocalizer{}.template ConvertTimePoint<Duration>(arg)));;\n+        field_builders[0]->UnsafeAppend(static_cast<const int32_t>(ymd.year()));\n+        field_builders[1]->UnsafeAppend(static_cast<const uint32_t>(ymd.month()));\n+        field_builders[2]->UnsafeAppend(static_cast<const uint32_t>(ymd.day()));\n+        return struct_builder->Append();\n+      };\n+    }\n+    ARROW_ASSIGN_OR_RAISE(auto tz, LocateZone(timezone));\n+    return [=](TimestampType::c_type arg) {\n+        const auto ymd = year_month_day(floor<days>(ZonedLocalizer{tz}.template ConvertTimePoint<Duration>(arg)));      \n+        field_builders[0]->UnsafeAppend(static_cast<const int32_t>(ymd.year()));\n+        field_builders[1]->UnsafeAppend(static_cast<const uint32_t>(ymd.month()));\n+        field_builders[2]->UnsafeAppend(static_cast<const uint32_t>(ymd.day()));\n+      return struct_builder->Append();\n+    };\n+  }\n+};\n+\n+template <typename Duration, typename InType>\n+struct DateStruct {\n+  static Status Call(KernelContext* ctx, const Scalar& in, Scalar* out) {\n+    if (in.is_valid) {\n+      const auto& in_val = internal::UnboxScalar<const InType>::Unbox(in);\n+      const auto t = floor<days>(NonZonedLocalizer{}.template ConvertTimePoint<Duration>(in_val));\n\nReview comment:\n       Yea I was a little wary of how this handled timezones. This was copied over from ISOCalendar, which I'm guessing may have different requirements.\r\n   \r\n   Will give it another pass and see if I can match the other kernels more closely \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-18T17:50:51.014+0000",
                    "updated": "2021-12-18T17:50:51.014+0000",
                    "started": "2021-12-18T17:50:51.014+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "698289",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/698303",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on a change in pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#discussion_r771858259\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal_unary.cc\n##########\n@@ -185,6 +191,98 @@ struct Day {\n   Localizer localizer_;\n };\n \n+// ----------------------------------------------------------------------\n+// Extract (year, month, day) struct from temporal types\n+\n+template <typename Duration, typename InType, typename BuilderType>\n+struct DateStructVisitValueFunction {\n+  static Result<std::function<Status(typename InType::c_type arg)>> Get(\n+      const std::vector<BuilderType*>& field_builders, const ArrayData&,\n+      StructBuilder* struct_builder) {\n+    return [=](typename InType::c_type arg) {\n+      const auto ymd = year_month_day(floor<days>(NonZonedLocalizer{}.template ConvertTimePoint<Duration>(arg)));;\n+      field_builders[0]->UnsafeAppend(static_cast<const int32_t>(ymd.year()));\n+      field_builders[1]->UnsafeAppend(static_cast<const uint32_t>(ymd.month()));\n+      field_builders[2]->UnsafeAppend(static_cast<const uint32_t>(ymd.day()));\n+      return struct_builder->Append();\n+    };\n+  };\n+};  \n+\n+template <typename Duration, typename BuilderType>\n+struct DateStructVisitValueFunction<Duration, TimestampType, BuilderType> {\n+  static Result<std::function<Status(typename TimestampType::c_type arg)>> Get(\n+      const std::vector<BuilderType*>& field_builders, const ArrayData& in,\n+      StructBuilder* struct_builder) {\n+    const auto& timezone = GetInputTimezone(in);\n+    if (timezone.empty()) {\n+      return [=](TimestampType::c_type arg) {\n+        const auto ymd = year_month_day(floor<days>(NonZonedLocalizer{}.template ConvertTimePoint<Duration>(arg)));;\n+        field_builders[0]->UnsafeAppend(static_cast<const int32_t>(ymd.year()));\n+        field_builders[1]->UnsafeAppend(static_cast<const uint32_t>(ymd.month()));\n+        field_builders[2]->UnsafeAppend(static_cast<const uint32_t>(ymd.day()));\n+        return struct_builder->Append();\n+      };\n+    }\n+    ARROW_ASSIGN_OR_RAISE(auto tz, LocateZone(timezone));\n+    return [=](TimestampType::c_type arg) {\n+        const auto ymd = year_month_day(floor<days>(ZonedLocalizer{tz}.template ConvertTimePoint<Duration>(arg)));      \n+        field_builders[0]->UnsafeAppend(static_cast<const int32_t>(ymd.year()));\n+        field_builders[1]->UnsafeAppend(static_cast<const uint32_t>(ymd.month()));\n+        field_builders[2]->UnsafeAppend(static_cast<const uint32_t>(ymd.day()));\n+      return struct_builder->Append();\n+    };\n+  }\n+};\n+\n+template <typename Duration, typename InType>\n+struct DateStruct {\n+  static Status Call(KernelContext* ctx, const Scalar& in, Scalar* out) {\n+    if (in.is_valid) {\n+      const auto& in_val = internal::UnboxScalar<const InType>::Unbox(in);\n+      const auto t = floor<days>(NonZonedLocalizer{}.template ConvertTimePoint<Duration>(in_val));\n\nReview comment:\n       Handling timezones would be nice.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-18T19:39:11.847+0000",
                    "updated": "2021-12-18T19:39:11.847+0000",
                    "started": "2021-12-18T19:39:11.847+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "698303",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/699780",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "WillAyd commented on pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#issuecomment-999273534\n\n\n   Updated to make YearMonthDay work more closely to the other Unary funcs. This doesn't build atm because (as far as I can tell) passing a StructArray to the `UnaryTemporalFactory` doesn't resolve to existing specializations. Need to study the factory machinery a little more, but I'm guessing something needs to be changed with the factories themselves to allow this\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-22T04:16:56.814+0000",
                    "updated": "2021-12-22T04:16:56.814+0000",
                    "started": "2021-12-22T04:16:56.814+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "699780",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/699945",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#issuecomment-999515836\n\n\n   > Updated to make YearMonthDay work more closely to the other Unary funcs. This doesn't build atm because (as far as I can tell) passing a StructArray to the `UnaryTemporalFactory` doesn't resolve to existing specializations. Need to study the factory machinery a little more, but I'm guessing something needs to be changed with the factories themselves to allow this\r\n   \r\n   I think this is also the reason `ISOCalendar` is implemented the way is was. @lidavidm can unary kernels return StructArray?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-22T11:47:16.346+0000",
                    "updated": "2021-12-22T11:47:16.346+0000",
                    "started": "2021-12-22T11:47:16.346+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "699945",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/699948",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok edited a comment on pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#issuecomment-999515836\n\n\n   > Updated to make YearMonthDay work more closely to the other Unary funcs. This doesn't build atm because (as far as I can tell) passing a StructArray to the `UnaryTemporalFactory` doesn't resolve to existing specializations. Need to study the factory machinery a little more, but I'm guessing something needs to be changed with the factories themselves to allow this\r\n   \r\n   I think this is also the reason `ISOCalendar` is implemented the way is was.\r\n   \r\n   @lidavidm can unary kernels return StructArray? Also, can you approve the CI workflow? I don't have permissions to.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-22T11:49:01.598+0000",
                    "updated": "2021-12-22T11:49:01.598+0000",
                    "started": "2021-12-22T11:49:01.598+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "699948",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/699981",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#issuecomment-999561189\n\n\n   > > Updated to make YearMonthDay work more closely to the other Unary funcs. This doesn't build atm because (as far as I can tell) passing a StructArray to the `UnaryTemporalFactory` doesn't resolve to existing specializations. Need to study the factory machinery a little more, but I'm guessing something needs to be changed with the factories themselves to allow this\r\n   > \r\n   > I think this is also the reason `ISOCalendar` is implemented the way is was.\r\n   \r\n   Apologies, you are right, you cannot implement it exactly the same way as the other unary functions.\r\n   \r\n   I meant something more like this:\r\n   \r\n   ```cpp\r\n   template <typename Duration, typename Localizer>\r\n   struct YearMonthDay {\r\n     explicit YearMonthDay(const FunctionOptions* options, Localizer&& localizer)\r\n         : localizer_(std::move(localizer)) {}\r\n   \r\n     template <typename T, typename Arg0>\r\n     T Call(KernelContext*, Arg0 arg, Status*) const {\r\n       static_assert(std::is_same<T, year_month_day>, \"\");\r\n       return year_month_day(floor<days>(localizer_.template ConvertTimePoint<Duration>(arg)));\r\n     }\r\n   \r\n     Localizer localizer_;\r\n   };\r\n   \r\n   // ...\r\n   \r\n   // Original PR implementation, but using the YearMonthDay struct to share some of the code between the scalar/array cases\r\n   \r\n   ```\r\n   \r\n   i.e. to just factor out a bit more of the shared code between the scalar/array cases.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-22T13:03:49.175+0000",
                    "updated": "2021-12-22T13:03:49.175+0000",
                    "started": "2021-12-22T13:03:49.175+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "699981",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/699982",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#issuecomment-999561893\n\n\n   (Tangentially: do you mind updating the PR title to fit the format? e.g. `ARROW-15032: [C++] Add DateStruct Function`)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-22T13:04:52.035+0000",
                    "updated": "2021-12-22T13:04:52.035+0000",
                    "started": "2021-12-22T13:04:52.035+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "699982",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/700252",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "WillAyd commented on pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#issuecomment-999877018\n\n\n   Updated the PR title. Looking at your suggestion, is that different from what we are trying on this PR in its current state? Might be overlooking but I think that's what I've already tried in this permalink\r\n   \r\n   https://github.com/apache/arrow/blob/c59783ab7edc74f16b4e709a581229aed91cf44d/cpp/src/arrow/compute/kernels/scalar_temporal_unary.cc#L198\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-22T21:00:19.444+0000",
                    "updated": "2021-12-22T21:00:19.444+0000",
                    "started": "2021-12-22T21:00:19.444+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700252",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/700255",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#issuecomment-999877614\n\n\n   Yes, I mean to write out the kernel \"loop\" yourself (as you originally did) instead of using the templated helpers (which you've found don't work).\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-22T21:01:28.011+0000",
                    "updated": "2021-12-22T21:01:28.011+0000",
                    "started": "2021-12-22T21:01:28.011+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700255",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/700256",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#issuecomment-999877958\n\n\n   But we can separate out the logic for the actual calculation more than was done originally (IIRC) instead of hard coding a call to a localizer, etc.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-22T21:02:10.869+0000",
                    "updated": "2021-12-22T21:02:10.869+0000",
                    "started": "2021-12-22T21:02:10.869+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700256",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/700354",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#issuecomment-999956415\n\n\n   Didn't read the new commit yet but I wonder could we share some infrastructure of `ISOCalendar` with `DateStruct`.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-23T00:22:17.056+0000",
                    "updated": "2021-12-23T00:22:17.056+0000",
                    "started": "2021-12-23T00:22:17.056+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700354",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/700894",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "WillAyd commented on pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#issuecomment-1000615827\n\n\n   Alright so I have this to a point where ISOCalendar and YearMonthDay are practically mirror images of one another, save different implementations of a `GetX` function. In terms of more code sharing my first thought was to move some of the Wrapper / Visit functions in as struct members to both ISOCalendar and YearMonthDay. I'm brand new to C++ though so if there's a more idiomatic approach you had in mind let me know and happy to work on that\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-24T02:31:02.086+0000",
                    "updated": "2021-12-24T02:31:02.086+0000",
                    "started": "2021-12-24T02:31:02.085+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700894",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/701351",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "WillAyd commented on a change in pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#discussion_r775568843\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal_test.cc\n##########\n@@ -610,6 +673,7 @@ TEST_F(ScalarTemporalTest, TestNonexistentTimezone) {\n     ASSERT_RAISES(Invalid, Year(timestamp_array));\n     ASSERT_RAISES(Invalid, Month(timestamp_array));\n     ASSERT_RAISES(Invalid, Day(timestamp_array));\n+    ASSERT_RAISES(Invalid, YearMonthDay(timestamp_array));\n\nReview comment:\n       I think those are already there in the TestZoned1 and TestZoned2 tests (?)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-27T16:34:42.567+0000",
                    "updated": "2021-12-27T16:34:42.567+0000",
                    "started": "2021-12-27T16:34:42.567+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "701351",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/701356",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#discussion_r775574976\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal_test.cc\n##########\n@@ -610,6 +673,7 @@ TEST_F(ScalarTemporalTest, TestNonexistentTimezone) {\n     ASSERT_RAISES(Invalid, Year(timestamp_array));\n     ASSERT_RAISES(Invalid, Month(timestamp_array));\n     ASSERT_RAISES(Invalid, Day(timestamp_array));\n+    ASSERT_RAISES(Invalid, YearMonthDay(timestamp_array));\n\nReview comment:\n       Ah yes, my bad, I didn't look carefully at the diff context. Thanks.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-27T16:48:33.458+0000",
                    "updated": "2021-12-27T16:48:33.458+0000",
                    "started": "2021-12-27T16:48:33.458+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "701356",
                    "issueId": "13416137"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/worklog/701577",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "WillAyd commented on pull request #11990:\nURL: https://github.com/apache/arrow/pull/11990#issuecomment-1002156868\n\n\n   I don't believe any of the CI failures are related to this PR but let me know if I am overlooking something\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-28T15:24:10.118+0000",
                    "updated": "2021-12-28T15:24:10.118+0000",
                    "started": "2021-12-28T15:24:10.117+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "701577",
                    "issueId": "13416137"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 22800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@cf4263e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5054a72c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e9419ee[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7b8ca2d7[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@661df5e7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2551b09b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b2496b6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1520071f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c1b7a91[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@34e6d4e1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1bd875ed[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@ed59176[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 22800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jan 05 01:35:42 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-05T01:35:42.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15032/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2021-12-08T19:18:53.000+0000",
        "updated": "2022-01-06T03:41:29.000+0000",
        "timeoriginalestimate": null,
        "description": "Related to\r\n\r\n[https://stackoverflow.com/questions/70194714/how-to-return-a-structarray-from-multiple-scalar-functions/70213443#70213443]\r\n\r\n\u00a0\r\n\r\nRight now the temporal compute functions include year / month / day as separate functions. AFAICT in the implementation these all internally create a struct containing year/month/day using the date library and then return only one of the components.\r\n\r\n\u00a0\r\n\r\nFrom a pure efficiency perspective it might be best to just return all as one StructArray and allow the user to unpack the values. From a user perspective, I also typically want year / month / day to be bundled together, so one function call to get all three in one pass would be ideal\r\n\r\n\u00a0\r\n\r\nThis might be extendable down to the timestamp structure as well",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 22800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Compute Function to return Year / Month / Day",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/comment/17456021",
                    "id": "17456021",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "body": "We have [ISOCalendar|https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/scalar_temporal_unary.cc#L712] kernel that does something similar to what you're suggesting. Given enough interest we could add y/m/d kernel too.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "created": "2021-12-08T22:24:21.136+0000",
                    "updated": "2021-12-08T22:24:21.136+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/comment/17456055",
                    "id": "17456055",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willayd",
                        "name": "willayd",
                        "key": "willayd",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=willayd&avatarId=49036",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=willayd&avatarId=49036",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=willayd&avatarId=49036",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=willayd&avatarId=49036"
                        },
                        "displayName": "Will Ayd",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "That's great to know - never even saw that. I can also take a look and push up a PR if I can mirror that over to the calendar side of things",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willayd",
                        "name": "willayd",
                        "key": "willayd",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=willayd&avatarId=49036",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=willayd&avatarId=49036",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=willayd&avatarId=49036",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=willayd&avatarId=49036"
                        },
                        "displayName": "Will Ayd",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-12-08T23:23:09.788+0000",
                    "updated": "2021-12-08T23:23:09.788+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/comment/17456100",
                    "id": "17456100",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "body": "Could you check if there are comparable methods in pandas and lubridate and make sure the designs match?\r\n[~jorisvandenbossche] Any opinion on this?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "created": "2021-12-09T02:31:04.391+0000",
                    "updated": "2021-12-09T02:31:04.391+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/comment/17456146",
                    "id": "17456146",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willayd",
                        "name": "willayd",
                        "key": "willayd",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=willayd&avatarId=49036",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=willayd&avatarId=49036",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=willayd&avatarId=49036",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=willayd&avatarId=49036"
                        },
                        "displayName": "Will Ayd",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Pandas doesn\u2019t have anything user facing to match this but internally it uses an npy_datetimestruct borrowed from numpy for passing across Its C functions.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willayd",
                        "name": "willayd",
                        "key": "willayd",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=willayd&avatarId=49036",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=willayd&avatarId=49036",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=willayd&avatarId=49036",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=willayd&avatarId=49036"
                        },
                        "displayName": "Will Ayd",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-12-09T04:54:36.342+0000",
                    "updated": "2021-12-09T04:54:36.342+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/comment/17456823",
                    "id": "17456823",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "body": "What worries me a little bit is that if you make a struct array that you then access from python per row you might not really see performance benefits. What use case are you thinking about?\r\n\r\nBesides there are many possible struct one can make from a timestamp and I imagine we don't want many in arrow?\r\n\r\nI might be missing something here though..\r\n\r\nAnother option would be to make a generic kernel kinda like strftime that would return a struct array.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "created": "2021-12-10T00:00:22.465+0000",
                    "updated": "2021-12-10T00:00:22.465+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/comment/17456876",
                    "id": "17456876",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willayd",
                        "name": "willayd",
                        "key": "willayd",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=willayd&avatarId=49036",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=willayd&avatarId=49036",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=willayd&avatarId=49036",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=willayd&avatarId=49036"
                        },
                        "displayName": "Will Ayd",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hmm I wasn't really thinking about Python with this enhancement. As a relatively new (and likely misguided) user of the C++ library I found it difficult to represent a Date32Array in a year/month/day format that I think would be commonly desired. As far as I am aware, the only way to do that is the separately call year/month/day compute functions then either manage the three arrays or manually construct a StructArray with those after the fact.\u00a0\r\n\r\n\u00a0\r\n\r\nI do agree when you start thinking about timestamp components that the requirements get a little more vague. When opening this enhancement my initial thought was that that did not need to be solved to still make good use of the year/month/day StructArray\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willayd",
                        "name": "willayd",
                        "key": "willayd",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=willayd&avatarId=49036",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=willayd&avatarId=49036",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=willayd&avatarId=49036",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=willayd&avatarId=49036"
                        },
                        "displayName": "Will Ayd",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-12-10T04:03:41.992+0000",
                    "updated": "2021-12-10T04:03:41.992+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/comment/17457131",
                    "id": "17457131",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "body": "Perhaps it would make sense to do something like timetuple (https://pandas.pydata.org/docs/reference/api/pandas.Timestamp.timetuple.html) to be as general as possible?\r\n[~apitrou]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "created": "2021-12-10T12:56:18.210+0000",
                    "updated": "2021-12-10T12:56:18.210+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/comment/17459126",
                    "id": "17459126",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "I think we could indeed have a {{to_date_struct}} function that returns a {{year,month,day}} struct. I'm not sure if other variations are useful, such as {{to_time_struct}} and/or {{to_datetime_struct}}.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-12-14T12:54:59.487+0000",
                    "updated": "2021-12-14T12:54:59.487+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/comment/17459240",
                    "id": "17459240",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "body": "Starting with to_date_struct (and limiting to to_date_struct, to_time_struct  and to_datetime_struct) sounds reasonable.\r\nI assume output would be in timezone of the array.\r\n\r\n[~willayd] would you like to make a PR?\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "created": "2021-12-14T15:24:10.145+0000",
                    "updated": "2021-12-14T15:24:10.145+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/comment/17459249",
                    "id": "17459249",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "cc [~icook] [~lidavidm]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-12-14T15:33:34.515+0000",
                    "updated": "2021-12-14T15:33:34.515+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/comment/17459268",
                    "id": "17459268",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willayd",
                        "name": "willayd",
                        "key": "willayd",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=willayd&avatarId=49036",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=willayd&avatarId=49036",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=willayd&avatarId=49036",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=willayd&avatarId=49036"
                        },
                        "displayName": "Will Ayd",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Sure I'd love to try a PR. May take me a week or two to get around to it",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willayd",
                        "name": "willayd",
                        "key": "willayd",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=willayd&avatarId=49036",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=willayd&avatarId=49036",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=willayd&avatarId=49036",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=willayd&avatarId=49036"
                        },
                        "displayName": "Will Ayd",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-12-14T15:56:48.787+0000",
                    "updated": "2021-12-14T15:56:48.787+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/comment/17461905",
                    "id": "17461905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "body": "[~icook] Will is a first time contributor, could you assign him this ticket and approve the github CI run for his [PR|https://github.com/apache/arrow/pull/11990]?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "created": "2021-12-18T14:41:11.057+0000",
                    "updated": "2021-12-18T14:41:11.057+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/comment/17461931",
                    "id": "17461931",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I've assigned Will to this issue and from now on they should be able to self-assign.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-12-18T16:33:49.346+0000",
                    "updated": "2021-12-18T16:33:49.346+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416137/comment/17468938",
                    "id": "17468938",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 11990\n[https://github.com/apache/arrow/pull/11990]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-01-05T01:35:42.144+0000",
                    "updated": "2022-01-05T01:35:42.144+0000"
                }
            ],
            "maxResults": 14,
            "total": 14,
            "startAt": 0
        },
        "customfield_12311820": "0|z0xhco:",
        "customfield_12314139": null
    }
}