{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13243335",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335",
    "key": "ARROW-5862",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12567369",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12567369",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13249826",
                    "key": "ARROW-6185",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249826",
                    "fields": {
                        "summary": "[Java] Provide hash table based dictionary builder",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 24000,
            "total": 24000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 24000,
            "total": 24000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5862/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 40,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/272535",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813\n \n \n   The dictionary builder servers for the following scenario which is frequently encountered in practice when dictionary encoding is involved: the dictionary values are not known a priori, so they are determined dynamically, as new data arrive continually.\r\n   \r\n   In particular, when a new value arrives, it is tested to check if it is already in the dictionary. If so, it is simply neglected, otherwise, it is added to the dictionary.\r\n   \r\n   When all values have been evaluated, the dictionary can be considered complete. So encoding can start afterward.\r\n   \r\n   The code snippet using a dictionary builder should be like this:\r\n   \r\n   DictonaryBuilder<IntVector> dictionaryBuilder = ...\r\n   dictionaryBuilder.startBuild();\r\n   ...\r\n   dictionaryBuild.addValue(newValue);\r\n   ...\r\n   dictionaryBuilder.endBuild();\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-05T10:54:18.059+0000",
                    "updated": "2019-07-05T10:54:18.059+0000",
                    "started": "2019-07-05T10:54:18.058+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "272535",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/272870",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#issuecomment-508937573\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4813?src=pr&el=h1) Report\n   > Merging [#4813](https://codecov.io/gh/apache/arrow/pull/4813?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/9ffb9cdd46c498a2f46a8d030613e7c046b6e843?src=pr&el=desc) will **increase** coverage by `17.32%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4813/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4813?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #4813       +/-   ##\n   ===========================================\n   + Coverage   72.26%   89.59%   +17.32%     \n   ===========================================\n     Files         822      662      -160     \n     Lines      107713    96351    -11362     \n     Branches     1418        0     -1418     \n   ===========================================\n   + Hits        77844    86330     +8486     \n   + Misses      29507    10021    -19486     \n   + Partials      362        0      -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4813?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/testing/gtest\\_util.h](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90ZXN0aW5nL2d0ZXN0X3V0aWwuaA==) | `97.36% <0%> (-2.64%)` | :arrow_down: |\n   | [cpp/src/arrow/compute/kernel.h](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2tlcm5lbC5o) | `61.16% <0%> (-1.53%)` | :arrow_down: |\n   | [cpp/src/arrow/result.h](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9yZXN1bHQuaA==) | `91.3% <0%> (-0.37%)` | :arrow_down: |\n   | [cpp/src/arrow/flight/server.h](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvc2VydmVyLmg=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/expression\\_registry.h](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2V4cHJlc3Npb25fcmVnaXN0cnkuaA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/csv/column-builder.h](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY29sdW1uLWJ1aWxkZXIuaA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/table\\_builder.h](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90YWJsZV9idWlsZGVyLmg=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/plasma.h](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcGxhc21hLmg=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/configuration.h](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2NvbmZpZ3VyYXRpb24uaA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/compute/kernels/cast.h](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2tlcm5lbHMvY2FzdC5o) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | ... and [746 more](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4813?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4813?src=pr&el=footer). Last update [9ffb9cd...a36cb82](https://codecov.io/gh/apache/arrow/pull/4813?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-06T16:16:33.715+0000",
                    "updated": "2019-07-06T16:16:33.715+0000",
                    "started": "2019-07-06T16:16:33.715+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "272870",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/279496",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#discussion_r305195711\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchTreeBasedDictionaryBuilder.java\n ##########\n @@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import java.util.TreeSet;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * The dictionary based on a search tree.\n+ * So each add operation can be finished in O(log(n)),\n+ * where n is the current dictionary size.\n+ * @param <V> the dictionary vector type.\n+ */\n+public class SearchTreeBasedDictionaryBuilder<V extends ValueVector> extends DictionaryBuilder<V> {\n+\n+  private final BaseFixedWidthVector fixedWidthVector;\n+\n+  private final BaseVariableWidthVector variableWidthVector;\n+\n+  /**\n+   * The search tree for storing the value index.\n+   */\n+  protected TreeSet<Integer> searchTree =\n+          new TreeSet<>((index1, index2) -> comparator.compare(index1, index2));\n+\n+  /**\n+   * Construct a search tree-based dictionary builder.\n+   * @param dictionary the dictionary vector.\n+   * @param comparator the criteria for value equality.\n+   */\n+  public SearchTreeBasedDictionaryBuilder(V dictionary, VectorValueComparator<V> comparator) {\n+    this(dictionary, comparator, false);\n+  }\n+\n+  /**\n+   * Construct a search tree-based dictionary builder.\n+   * @param dictionary the dictionary vector.\n+   * @param comparator the criteria for value equality.\n+   * @param encodeNull if null should be encoded.\n+   */\n+  public SearchTreeBasedDictionaryBuilder(V dictionary, VectorValueComparator<V> comparator, boolean encodeNull) {\n+    super(dictionary, comparator, encodeNull);\n+\n+    if (dictionary instanceof BaseFixedWidthVector) {\n+      fixedWidthVector = (BaseFixedWidthVector) dictionary;\n+      variableWidthVector = null;\n+    } else if (dictionary instanceof BaseVariableWidthVector) {\n+      fixedWidthVector = null;\n+      variableWidthVector = (BaseVariableWidthVector) dictionary;\n+    } else {\n+      throw new IllegalArgumentException(\"The dictionary must be a BaseFixedWidthVector or a BaseVariableWidthVector\");\n+    }\n+  }\n+\n+  @Override\n+  public boolean addValue(V targetVector, int targetIndex) {\n+    totalValueCount += 1;\n+\n+    // first copy the value to the end of the dictionary\n+    if (fixedWidthVector != null) {\n+      fixedWidthVector.copyFromSafe(targetIndex, distinctValueCount, (BaseFixedWidthVector) targetVector);\n \n Review comment:\n   is it possible to move copyFromSafe up to a common interface?  it seems like the only reason why we check variable width vs fixedwidth  is to cast appropriately?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-19T04:07:45.222+0000",
                    "updated": "2019-07-19T04:07:45.222+0000",
                    "started": "2019-07-19T04:07:45.221+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "279496",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/279498",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#discussion_r305196055\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/DictionaryBuilder.java\n ##########\n @@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * The class for building a dictionary.\n+ * It is intended for the scenario which can be frequently encountered in practice:\n+ * the dictionary is not known a priori, so it is generated dynamically.\n+ * In particular, when a new value arrives, it is tested to check if it is already\n+ * in the dictionary. If so, it is simply neglected, otherwise, it is added to the dictionary.\n+ *\n+ * <p>\n+ *   When all values have been evaluated, the dictionary can be considered complete.\n+ *   So encoding can start afterward.\n+ * </p>\n+ * @param <V> the dictionary vector type.\n+ */\n+public abstract class DictionaryBuilder<V extends ValueVector> {\n \n Review comment:\n   I'd prefer not to create class hierarchies for only one implementation.  If there are plans to add additional builders, lets do that in follow-up PRs where we can assess the commonalities.  for now can you merge this into the TreeSet Builder below? \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-19T04:10:43.744+0000",
                    "updated": "2019-07-19T04:10:43.744+0000",
                    "started": "2019-07-19T04:10:43.743+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "279498",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/279549",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#discussion_r305225951\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchTreeBasedDictionaryBuilder.java\n ##########\n @@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import java.util.TreeSet;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * The dictionary based on a search tree.\n+ * So each add operation can be finished in O(log(n)),\n+ * where n is the current dictionary size.\n+ * @param <V> the dictionary vector type.\n+ */\n+public class SearchTreeBasedDictionaryBuilder<V extends ValueVector> extends DictionaryBuilder<V> {\n+\n+  private final BaseFixedWidthVector fixedWidthVector;\n+\n+  private final BaseVariableWidthVector variableWidthVector;\n+\n+  /**\n+   * The search tree for storing the value index.\n+   */\n+  protected TreeSet<Integer> searchTree =\n+          new TreeSet<>((index1, index2) -> comparator.compare(index1, index2));\n+\n+  /**\n+   * Construct a search tree-based dictionary builder.\n+   * @param dictionary the dictionary vector.\n+   * @param comparator the criteria for value equality.\n+   */\n+  public SearchTreeBasedDictionaryBuilder(V dictionary, VectorValueComparator<V> comparator) {\n+    this(dictionary, comparator, false);\n+  }\n+\n+  /**\n+   * Construct a search tree-based dictionary builder.\n+   * @param dictionary the dictionary vector.\n+   * @param comparator the criteria for value equality.\n+   * @param encodeNull if null should be encoded.\n+   */\n+  public SearchTreeBasedDictionaryBuilder(V dictionary, VectorValueComparator<V> comparator, boolean encodeNull) {\n+    super(dictionary, comparator, encodeNull);\n+\n+    if (dictionary instanceof BaseFixedWidthVector) {\n+      fixedWidthVector = (BaseFixedWidthVector) dictionary;\n+      variableWidthVector = null;\n+    } else if (dictionary instanceof BaseVariableWidthVector) {\n+      fixedWidthVector = null;\n+      variableWidthVector = (BaseVariableWidthVector) dictionary;\n+    } else {\n+      throw new IllegalArgumentException(\"The dictionary must be a BaseFixedWidthVector or a BaseVariableWidthVector\");\n+    }\n+  }\n+\n+  @Override\n+  public boolean addValue(V targetVector, int targetIndex) {\n+    totalValueCount += 1;\n+\n+    // first copy the value to the end of the dictionary\n+    if (fixedWidthVector != null) {\n+      fixedWidthVector.copyFromSafe(targetIndex, distinctValueCount, (BaseFixedWidthVector) targetVector);\n \n Review comment:\n   Good suggestion. Moved the methods to the ValueVector interface.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-19T07:07:08.605+0000",
                    "updated": "2019-07-19T07:07:08.605+0000",
                    "started": "2019-07-19T07:07:08.605+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "279549",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/279553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#discussion_r305229513\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/DictionaryBuilder.java\n ##########\n @@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * The class for building a dictionary.\n+ * It is intended for the scenario which can be frequently encountered in practice:\n+ * the dictionary is not known a priori, so it is generated dynamically.\n+ * In particular, when a new value arrives, it is tested to check if it is already\n+ * in the dictionary. If so, it is simply neglected, otherwise, it is added to the dictionary.\n+ *\n+ * <p>\n+ *   When all values have been evaluated, the dictionary can be considered complete.\n+ *   So encoding can start afterward.\n+ * </p>\n+ * @param <V> the dictionary vector type.\n+ */\n+public abstract class DictionaryBuilder<V extends ValueVector> {\n \n Review comment:\n   Sure. Maybe we can extract a base class later, if it is necessary.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-19T07:19:59.520+0000",
                    "updated": "2019-07-19T07:19:59.520+0000",
                    "started": "2019-07-19T07:19:59.519+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "279553",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/281560",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#issuecomment-514519822\n \n \n   @emkornfield I have opened a separate issue (ARROW-6021) to track the problem of moving copySafe method to ValueVector, because\r\n   1. The changes are not minor, so placing them in a separate issue makes it easier to review the changes.\r\n   2. I have realized that the requirement is not only needed by this single feature. So I hope this problem can be resolved sooner.\r\n   \r\n   Let's hold this PR until ARROW-6021 is resolved. Thank you so much.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T07:45:39.790+0000",
                    "updated": "2019-07-24T07:45:39.790+0000",
                    "started": "2019-07-24T07:45:39.790+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281560",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/286628",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#issuecomment-517232689\n \n \n   @emkornfield @pravindra \r\n   As the dependency (ARROW-6021) is resolved, I have revised this PR. Would you please take a look?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-01T10:51:42.672+0000",
                    "updated": "2019-08-01T10:51:42.672+0000",
                    "started": "2019-08-01T10:51:42.671+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "286628",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/286690",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#issuecomment-508937573\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4813?src=pr&el=h1) Report\n   > Merging [#4813](https://codecov.io/gh/apache/arrow/pull/4813?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/e3ba3dedd162744bf7e506da0d977a65762674c9?src=pr&el=desc) will **increase** coverage by `2.1%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4813/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4813?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4813      +/-   ##\n   ==========================================\n   + Coverage   87.57%   89.68%    +2.1%     \n   ==========================================\n     Files        1002      667     -335     \n     Lines      142994    98754   -44240     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       125224    88563   -36661     \n   + Misses      17408    10191    -7217     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4813?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/tests/test\\_convert\\_builtin.py](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9jb252ZXJ0X2J1aWx0aW4ucHk=) | `97.21% <0%> (-2.07%)` | :arrow_down: |\n   | [python/pyarrow/array.pxi](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvYXJyYXkucHhp) | `79.3% <0%> (-1.32%)` | :arrow_down: |\n   | [python/pyarrow/types.py](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdHlwZXMucHk=) | `97.8% <0%> (-1.03%)` | :arrow_down: |\n   | [python/pyarrow/scalar.pxi](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvc2NhbGFyLnB4aQ==) | `62.76% <0%> (-0.77%)` | :arrow_down: |\n   | [python/pyarrow/types.pxi](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdHlwZXMucHhp) | `68.02% <0%> (-0.72%)` | :arrow_down: |\n   | [cpp/src/arrow/python/python\\_to\\_arrow.cc](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vcHl0aG9uX3RvX2Fycm93LmNj) | `91.22% <0%> (-0.47%)` | :arrow_down: |\n   | [cpp/src/arrow/compute/kernels/take-internal.h](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2tlcm5lbHMvdGFrZS1pbnRlcm5hbC5o) | `94.58% <0%> (-0.07%)` | :arrow_down: |\n   | [python/pyarrow/\\_\\_init\\_\\_.py](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX19pbml0X18ucHk=) | `67.04% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/compute/kernels/take-test.cc](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2tlcm5lbHMvdGFrZS10ZXN0LmNj) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/array/builder\\_primitive.h](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX3ByaW1pdGl2ZS5o) | `95.86% <0%> (\u00f8)` | :arrow_up: |\n   | ... and [345 more](https://codecov.io/gh/apache/arrow/pull/4813/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4813?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4813?src=pr&el=footer). Last update [e3ba3de...6be773b](https://codecov.io/gh/apache/arrow/pull/4813?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-01T13:00:22.436+0000",
                    "updated": "2019-08-01T13:00:22.436+0000",
                    "started": "2019-08-01T13:00:22.435+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "286690",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/291727",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#discussion_r312314785\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchTreeBasedDictionaryBuilder.java\n ##########\n @@ -0,0 +1,157 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import java.util.TreeSet;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * A dictionary builder is intended for the scenario frequently encountered in practice:\n+ * the dictionary is not known a priori, so it is generated dynamically.\n+ * In particular, when a new value arrives, it is tested to check if it is already\n+ * in the dictionary. If so, it is simply neglected, otherwise, it is added to the dictionary.\n+ *\n+ * <p>\n+ *   This class builds the dictionary based on a binary search tree.\n+ *   Each add operation can be finished in O(log(n)) time,\n+ *   where n is the current dictionary size.\n+ * </p>\n+ * @param <V> the dictionary vector type.\n+ */\n+public class SearchTreeBasedDictionaryBuilder<V extends ValueVector> {\n+\n+  /**\n+   * The dictionary to be built.\n+   */\n+  protected final V dictionary;\n \n Review comment:\n   Lets make all of the fields private for now?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:02:45.652+0000",
                    "updated": "2019-08-09T03:02:45.652+0000",
                    "started": "2019-08-09T03:02:45.651+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291727",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/291728",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#discussion_r312314851\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchTreeBasedDictionaryBuilder.java\n ##########\n @@ -0,0 +1,157 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import java.util.TreeSet;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * A dictionary builder is intended for the scenario frequently encountered in practice:\n+ * the dictionary is not known a priori, so it is generated dynamically.\n+ * In particular, when a new value arrives, it is tested to check if it is already\n+ * in the dictionary. If so, it is simply neglected, otherwise, it is added to the dictionary.\n+ *\n+ * <p>\n+ *   This class builds the dictionary based on a binary search tree.\n+ *   Each add operation can be finished in O(log(n)) time,\n+ *   where n is the current dictionary size.\n+ * </p>\n+ * @param <V> the dictionary vector type.\n+ */\n \n Review comment:\n   you might want to clarify whether this class is intended to be used more then one\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:03:13.243+0000",
                    "updated": "2019-08-09T03:03:13.243+0000",
                    "started": "2019-08-09T03:03:13.242+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291728",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/291729",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#discussion_r312315153\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchTreeBasedDictionaryBuilder.java\n ##########\n @@ -0,0 +1,157 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import java.util.TreeSet;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * A dictionary builder is intended for the scenario frequently encountered in practice:\n+ * the dictionary is not known a priori, so it is generated dynamically.\n+ * In particular, when a new value arrives, it is tested to check if it is already\n+ * in the dictionary. If so, it is simply neglected, otherwise, it is added to the dictionary.\n+ *\n+ * <p>\n+ *   This class builds the dictionary based on a binary search tree.\n+ *   Each add operation can be finished in O(log(n)) time,\n+ *   where n is the current dictionary size.\n+ * </p>\n+ * @param <V> the dictionary vector type.\n+ */\n+public class SearchTreeBasedDictionaryBuilder<V extends ValueVector> {\n+\n+  /**\n+   * The dictionary to be built.\n+   */\n+  protected final V dictionary;\n+\n+  /**\n+   * The criteria for sorting in the search tree.\n+   */\n+  protected final VectorValueComparator<V> comparator;\n+\n+  /**\n+   * The total number of data items probed.\n+   */\n+  protected int totalValueCount;\n+\n+  /**\n+   * The number of items in the dictionary.\n+   */\n+  protected int distinctValueCount;\n+\n+  /**\n+   * If null should be encoded.\n+   */\n+  protected final boolean encodeNull;\n+\n+  /**\n+   * The search tree for storing the value index.\n+   */\n+  protected TreeSet<Integer> searchTree;\n+\n+  /**\n+   * Construct a search tree-based dictionary builder.\n+   * @param dictionary the dictionary vector.\n+   * @param comparator the criteria for value equality.\n+   */\n+  public SearchTreeBasedDictionaryBuilder(V dictionary, VectorValueComparator<V> comparator) {\n+    this(dictionary, comparator, false);\n+  }\n+\n+  /**\n+   * Construct a search tree-based dictionary builder.\n+   * @param dictionary the dictionary vector.\n+   * @param comparator the criteria for value equality.\n+   * @param encodeNull if null should be encoded.\n+   */\n+  public SearchTreeBasedDictionaryBuilder(V dictionary, VectorValueComparator<V> comparator, boolean encodeNull) {\n+    this.dictionary = dictionary;\n+    this.comparator = comparator;\n+    this.encodeNull = encodeNull;\n+    this.comparator.attachVector(dictionary);\n+\n+    searchTree = new TreeSet<>((index1, index2) -> comparator.compare(index1, index2));\n+  }\n+\n+  public void startBuild() {\n+    totalValueCount = 0;\n+    distinctValueCount = 0;\n+  }\n+\n+  public void endBuild() {\n+    dictionary.setValueCount(distinctValueCount);\n+  }\n+\n+  public V getDictionary() {\n+    return dictionary;\n+  }\n+\n+  /**\n+   * Try to add all values from the target vector to the dictionary.\n+   * @param targetVector the target vector containing values to probe.\n+   * @return the number of values actually added to the dictionary.\n+   */\n+  public int addValues(V targetVector) {\n+    int ret = 0;\n+    for (int i = 0; i < targetVector.getValueCount(); i++) {\n+      if (!encodeNull && targetVector.isNull(i)) {\n+        continue;\n+      }\n+      if (addValue(targetVector, i)) {\n+        ret += 1;\n+      }\n+    }\n+    return ret;\n+  }\n+\n+  /**\n+   * Try to add an element from the target vector to the dictionary.\n+   * @param targetVector the target vector containing new element.\n+   * @param targetIndex the index of the new element in the target vector.\n+   * @return true if the element is added to the dictionary, and false otherwise.\n+   */\n+  public boolean addValue(V targetVector, int targetIndex) {\n+    totalValueCount += 1;\n+\n+    // first copy the value to the end of the dictionary\n+    dictionary.copyFromSafe(targetIndex, distinctValueCount, targetVector);\n+\n+    // try to add the value to the dictionary,\n+    // if an equal element does not exist.\n+    // this operation can be done in O(logn) time.\n+    boolean ret = searchTree.add(distinctValueCount);\n+    distinctValueCount = searchTree.size();\n+    return ret;\n+  }\n+\n+  /**\n+   * Gets the sorted dictionary.\n+   * Note that given the binary search tree, the sort can finish in O(n).\n+   */\n+  public void getSortedDictionary(V sortedDictionary) {\n \n Review comment:\n   this is probably better named populateSortedDictionary.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:05:29.128+0000",
                    "updated": "2019-08-09T03:05:29.128+0000",
                    "started": "2019-08-09T03:05:29.127+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291729",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/291733",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#discussion_r312315234\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchTreeBasedDictionaryBuilder.java\n ##########\n @@ -0,0 +1,157 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import java.util.TreeSet;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * A dictionary builder is intended for the scenario frequently encountered in practice:\n+ * the dictionary is not known a priori, so it is generated dynamically.\n+ * In particular, when a new value arrives, it is tested to check if it is already\n+ * in the dictionary. If so, it is simply neglected, otherwise, it is added to the dictionary.\n+ *\n+ * <p>\n+ *   This class builds the dictionary based on a binary search tree.\n+ *   Each add operation can be finished in O(log(n)) time,\n+ *   where n is the current dictionary size.\n+ * </p>\n+ * @param <V> the dictionary vector type.\n+ */\n+public class SearchTreeBasedDictionaryBuilder<V extends ValueVector> {\n+\n+  /**\n+   * The dictionary to be built.\n+   */\n+  protected final V dictionary;\n+\n+  /**\n+   * The criteria for sorting in the search tree.\n+   */\n+  protected final VectorValueComparator<V> comparator;\n+\n+  /**\n+   * The total number of data items probed.\n+   */\n+  protected int totalValueCount;\n+\n+  /**\n+   * The number of items in the dictionary.\n+   */\n+  protected int distinctValueCount;\n+\n+  /**\n+   * If null should be encoded.\n+   */\n+  protected final boolean encodeNull;\n+\n+  /**\n+   * The search tree for storing the value index.\n+   */\n+  protected TreeSet<Integer> searchTree;\n \n Review comment:\n   at some point we might want to explore the possibility of making use of an off-heap datastructure if possible (but not for this PR).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:06:09.542+0000",
                    "updated": "2019-08-09T03:06:09.542+0000",
                    "started": "2019-08-09T03:06:09.542+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291733",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/291736",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#discussion_r312315359\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchTreeBasedDictionaryBuilder.java\n ##########\n @@ -0,0 +1,157 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import java.util.TreeSet;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * A dictionary builder is intended for the scenario frequently encountered in practice:\n+ * the dictionary is not known a priori, so it is generated dynamically.\n+ * In particular, when a new value arrives, it is tested to check if it is already\n+ * in the dictionary. If so, it is simply neglected, otherwise, it is added to the dictionary.\n+ *\n+ * <p>\n+ *   This class builds the dictionary based on a binary search tree.\n+ *   Each add operation can be finished in O(log(n)) time,\n+ *   where n is the current dictionary size.\n+ * </p>\n+ * @param <V> the dictionary vector type.\n+ */\n+public class SearchTreeBasedDictionaryBuilder<V extends ValueVector> {\n+\n+  /**\n+   * The dictionary to be built.\n+   */\n+  protected final V dictionary;\n+\n+  /**\n+   * The criteria for sorting in the search tree.\n+   */\n+  protected final VectorValueComparator<V> comparator;\n+\n+  /**\n+   * The total number of data items probed.\n+   */\n+  protected int totalValueCount;\n+\n+  /**\n+   * The number of items in the dictionary.\n+   */\n+  protected int distinctValueCount;\n+\n+  /**\n+   * If null should be encoded.\n+   */\n+  protected final boolean encodeNull;\n+\n+  /**\n+   * The search tree for storing the value index.\n+   */\n+  protected TreeSet<Integer> searchTree;\n+\n+  /**\n+   * Construct a search tree-based dictionary builder.\n+   * @param dictionary the dictionary vector.\n+   * @param comparator the criteria for value equality.\n+   */\n+  public SearchTreeBasedDictionaryBuilder(V dictionary, VectorValueComparator<V> comparator) {\n+    this(dictionary, comparator, false);\n+  }\n+\n+  /**\n+   * Construct a search tree-based dictionary builder.\n+   * @param dictionary the dictionary vector.\n+   * @param comparator the criteria for value equality.\n+   * @param encodeNull if null should be encoded.\n+   */\n+  public SearchTreeBasedDictionaryBuilder(V dictionary, VectorValueComparator<V> comparator, boolean encodeNull) {\n+    this.dictionary = dictionary;\n+    this.comparator = comparator;\n+    this.encodeNull = encodeNull;\n+    this.comparator.attachVector(dictionary);\n+\n+    searchTree = new TreeSet<>((index1, index2) -> comparator.compare(index1, index2));\n+  }\n+\n+  public void startBuild() {\n+    totalValueCount = 0;\n+    distinctValueCount = 0;\n+  }\n+\n+  public void endBuild() {\n+    dictionary.setValueCount(distinctValueCount);\n+  }\n+\n+  public V getDictionary() {\n+    return dictionary;\n \n Review comment:\n   you might want a guard here to ensure this  and getSortedDictionary aren't called until endBuild is called.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:07:06.823+0000",
                    "updated": "2019-08-09T03:07:06.823+0000",
                    "started": "2019-08-09T03:07:06.823+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291736",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/291739",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#discussion_r312315415\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchTreeBasedDictionaryBuilder.java\n ##########\n @@ -0,0 +1,157 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import java.util.TreeSet;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * A dictionary builder is intended for the scenario frequently encountered in practice:\n+ * the dictionary is not known a priori, so it is generated dynamically.\n+ * In particular, when a new value arrives, it is tested to check if it is already\n+ * in the dictionary. If so, it is simply neglected, otherwise, it is added to the dictionary.\n+ *\n \n Review comment:\n   have a code sample in the javadoc here might make it easier for users to understand the the intended call pattern.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:07:31.273+0000",
                    "updated": "2019-08-09T03:07:31.273+0000",
                    "started": "2019-08-09T03:07:31.272+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291739",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/291754",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#discussion_r312318022\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchTreeBasedDictionaryBuilder.java\n ##########\n @@ -0,0 +1,157 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import java.util.TreeSet;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * A dictionary builder is intended for the scenario frequently encountered in practice:\n+ * the dictionary is not known a priori, so it is generated dynamically.\n+ * In particular, when a new value arrives, it is tested to check if it is already\n+ * in the dictionary. If so, it is simply neglected, otherwise, it is added to the dictionary.\n+ *\n+ * <p>\n+ *   This class builds the dictionary based on a binary search tree.\n+ *   Each add operation can be finished in O(log(n)) time,\n+ *   where n is the current dictionary size.\n+ * </p>\n+ * @param <V> the dictionary vector type.\n+ */\n+public class SearchTreeBasedDictionaryBuilder<V extends ValueVector> {\n+\n+  /**\n+   * The dictionary to be built.\n+   */\n+  protected final V dictionary;\n \n Review comment:\n   Sure. Sounds reasonable.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:28:23.474+0000",
                    "updated": "2019-08-09T03:28:23.474+0000",
                    "started": "2019-08-09T03:28:23.473+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291754",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/291755",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#discussion_r312318075\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchTreeBasedDictionaryBuilder.java\n ##########\n @@ -0,0 +1,157 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import java.util.TreeSet;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * A dictionary builder is intended for the scenario frequently encountered in practice:\n+ * the dictionary is not known a priori, so it is generated dynamically.\n+ * In particular, when a new value arrives, it is tested to check if it is already\n+ * in the dictionary. If so, it is simply neglected, otherwise, it is added to the dictionary.\n+ *\n+ * <p>\n+ *   This class builds the dictionary based on a binary search tree.\n+ *   Each add operation can be finished in O(log(n)) time,\n+ *   where n is the current dictionary size.\n+ * </p>\n+ * @param <V> the dictionary vector type.\n+ */\n \n Review comment:\n   Sure. Revised. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:28:47.565+0000",
                    "updated": "2019-08-09T03:28:47.565+0000",
                    "started": "2019-08-09T03:28:47.564+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291755",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/291756",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#discussion_r312318124\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchTreeBasedDictionaryBuilder.java\n ##########\n @@ -0,0 +1,157 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import java.util.TreeSet;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * A dictionary builder is intended for the scenario frequently encountered in practice:\n+ * the dictionary is not known a priori, so it is generated dynamically.\n+ * In particular, when a new value arrives, it is tested to check if it is already\n+ * in the dictionary. If so, it is simply neglected, otherwise, it is added to the dictionary.\n+ *\n+ * <p>\n+ *   This class builds the dictionary based on a binary search tree.\n+ *   Each add operation can be finished in O(log(n)) time,\n+ *   where n is the current dictionary size.\n+ * </p>\n+ * @param <V> the dictionary vector type.\n+ */\n+public class SearchTreeBasedDictionaryBuilder<V extends ValueVector> {\n+\n+  /**\n+   * The dictionary to be built.\n+   */\n+  protected final V dictionary;\n+\n+  /**\n+   * The criteria for sorting in the search tree.\n+   */\n+  protected final VectorValueComparator<V> comparator;\n+\n+  /**\n+   * The total number of data items probed.\n+   */\n+  protected int totalValueCount;\n+\n+  /**\n+   * The number of items in the dictionary.\n+   */\n+  protected int distinctValueCount;\n+\n+  /**\n+   * If null should be encoded.\n+   */\n+  protected final boolean encodeNull;\n+\n+  /**\n+   * The search tree for storing the value index.\n+   */\n+  protected TreeSet<Integer> searchTree;\n+\n+  /**\n+   * Construct a search tree-based dictionary builder.\n+   * @param dictionary the dictionary vector.\n+   * @param comparator the criteria for value equality.\n+   */\n+  public SearchTreeBasedDictionaryBuilder(V dictionary, VectorValueComparator<V> comparator) {\n+    this(dictionary, comparator, false);\n+  }\n+\n+  /**\n+   * Construct a search tree-based dictionary builder.\n+   * @param dictionary the dictionary vector.\n+   * @param comparator the criteria for value equality.\n+   * @param encodeNull if null should be encoded.\n+   */\n+  public SearchTreeBasedDictionaryBuilder(V dictionary, VectorValueComparator<V> comparator, boolean encodeNull) {\n+    this.dictionary = dictionary;\n+    this.comparator = comparator;\n+    this.encodeNull = encodeNull;\n+    this.comparator.attachVector(dictionary);\n+\n+    searchTree = new TreeSet<>((index1, index2) -> comparator.compare(index1, index2));\n+  }\n+\n+  public void startBuild() {\n+    totalValueCount = 0;\n+    distinctValueCount = 0;\n+  }\n+\n+  public void endBuild() {\n+    dictionary.setValueCount(distinctValueCount);\n+  }\n+\n+  public V getDictionary() {\n+    return dictionary;\n+  }\n+\n+  /**\n+   * Try to add all values from the target vector to the dictionary.\n+   * @param targetVector the target vector containing values to probe.\n+   * @return the number of values actually added to the dictionary.\n+   */\n+  public int addValues(V targetVector) {\n+    int ret = 0;\n+    for (int i = 0; i < targetVector.getValueCount(); i++) {\n+      if (!encodeNull && targetVector.isNull(i)) {\n+        continue;\n+      }\n+      if (addValue(targetVector, i)) {\n+        ret += 1;\n+      }\n+    }\n+    return ret;\n+  }\n+\n+  /**\n+   * Try to add an element from the target vector to the dictionary.\n+   * @param targetVector the target vector containing new element.\n+   * @param targetIndex the index of the new element in the target vector.\n+   * @return true if the element is added to the dictionary, and false otherwise.\n+   */\n+  public boolean addValue(V targetVector, int targetIndex) {\n+    totalValueCount += 1;\n+\n+    // first copy the value to the end of the dictionary\n+    dictionary.copyFromSafe(targetIndex, distinctValueCount, targetVector);\n+\n+    // try to add the value to the dictionary,\n+    // if an equal element does not exist.\n+    // this operation can be done in O(logn) time.\n+    boolean ret = searchTree.add(distinctValueCount);\n+    distinctValueCount = searchTree.size();\n+    return ret;\n+  }\n+\n+  /**\n+   * Gets the sorted dictionary.\n+   * Note that given the binary search tree, the sort can finish in O(n).\n+   */\n+  public void getSortedDictionary(V sortedDictionary) {\n \n Review comment:\n   Good suggestion. Revised accordingly.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:29:07.775+0000",
                    "updated": "2019-08-09T03:29:07.775+0000",
                    "started": "2019-08-09T03:29:07.775+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291756",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/291758",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#discussion_r312318226\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchTreeBasedDictionaryBuilder.java\n ##########\n @@ -0,0 +1,157 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import java.util.TreeSet;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * A dictionary builder is intended for the scenario frequently encountered in practice:\n+ * the dictionary is not known a priori, so it is generated dynamically.\n+ * In particular, when a new value arrives, it is tested to check if it is already\n+ * in the dictionary. If so, it is simply neglected, otherwise, it is added to the dictionary.\n+ *\n+ * <p>\n+ *   This class builds the dictionary based on a binary search tree.\n+ *   Each add operation can be finished in O(log(n)) time,\n+ *   where n is the current dictionary size.\n+ * </p>\n+ * @param <V> the dictionary vector type.\n+ */\n+public class SearchTreeBasedDictionaryBuilder<V extends ValueVector> {\n+\n+  /**\n+   * The dictionary to be built.\n+   */\n+  protected final V dictionary;\n+\n+  /**\n+   * The criteria for sorting in the search tree.\n+   */\n+  protected final VectorValueComparator<V> comparator;\n+\n+  /**\n+   * The total number of data items probed.\n+   */\n+  protected int totalValueCount;\n+\n+  /**\n+   * The number of items in the dictionary.\n+   */\n+  protected int distinctValueCount;\n+\n+  /**\n+   * If null should be encoded.\n+   */\n+  protected final boolean encodeNull;\n+\n+  /**\n+   * The search tree for storing the value index.\n+   */\n+  protected TreeSet<Integer> searchTree;\n \n Review comment:\n   Good suggestion. We will provide an ArrowBuf based binary search tree.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:29:52.220+0000",
                    "updated": "2019-08-09T03:29:52.220+0000",
                    "started": "2019-08-09T03:29:52.219+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291758",
                    "issueId": "13243335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/worklog/291759",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4813: ARROW-5862: [Java] Provide dictionary builder\nURL: https://github.com/apache/arrow/pull/4813#discussion_r312318318\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchTreeBasedDictionaryBuilder.java\n ##########\n @@ -0,0 +1,157 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import java.util.TreeSet;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * A dictionary builder is intended for the scenario frequently encountered in practice:\n+ * the dictionary is not known a priori, so it is generated dynamically.\n+ * In particular, when a new value arrives, it is tested to check if it is already\n+ * in the dictionary. If so, it is simply neglected, otherwise, it is added to the dictionary.\n+ *\n+ * <p>\n+ *   This class builds the dictionary based on a binary search tree.\n+ *   Each add operation can be finished in O(log(n)) time,\n+ *   where n is the current dictionary size.\n+ * </p>\n+ * @param <V> the dictionary vector type.\n+ */\n+public class SearchTreeBasedDictionaryBuilder<V extends ValueVector> {\n+\n+  /**\n+   * The dictionary to be built.\n+   */\n+  protected final V dictionary;\n+\n+  /**\n+   * The criteria for sorting in the search tree.\n+   */\n+  protected final VectorValueComparator<V> comparator;\n+\n+  /**\n+   * The total number of data items probed.\n+   */\n+  protected int totalValueCount;\n+\n+  /**\n+   * The number of items in the dictionary.\n+   */\n+  protected int distinctValueCount;\n+\n+  /**\n+   * If null should be encoded.\n+   */\n+  protected final boolean encodeNull;\n+\n+  /**\n+   * The search tree for storing the value index.\n+   */\n+  protected TreeSet<Integer> searchTree;\n+\n+  /**\n+   * Construct a search tree-based dictionary builder.\n+   * @param dictionary the dictionary vector.\n+   * @param comparator the criteria for value equality.\n+   */\n+  public SearchTreeBasedDictionaryBuilder(V dictionary, VectorValueComparator<V> comparator) {\n+    this(dictionary, comparator, false);\n+  }\n+\n+  /**\n+   * Construct a search tree-based dictionary builder.\n+   * @param dictionary the dictionary vector.\n+   * @param comparator the criteria for value equality.\n+   * @param encodeNull if null should be encoded.\n+   */\n+  public SearchTreeBasedDictionaryBuilder(V dictionary, VectorValueComparator<V> comparator, boolean encodeNull) {\n+    this.dictionary = dictionary;\n+    this.comparator = comparator;\n+    this.encodeNull = encodeNull;\n+    this.comparator.attachVector(dictionary);\n+\n+    searchTree = new TreeSet<>((index1, index2) -> comparator.compare(index1, index2));\n+  }\n+\n+  public void startBuild() {\n+    totalValueCount = 0;\n+    distinctValueCount = 0;\n+  }\n+\n+  public void endBuild() {\n+    dictionary.setValueCount(distinctValueCount);\n+  }\n+\n+  public V getDictionary() {\n+    return dictionary;\n \n Review comment:\n   Good suggestion. We use a bool flag to mark the end of dictionary building. Please take a look.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:30:39.921+0000",
                    "updated": "2019-08-09T03:30:39.921+0000",
                    "started": "2019-08-09T03:30:39.920+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291759",
                    "issueId": "13243335"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 24000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1a8412fd[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6bdc69c2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16f1716c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1e6b9809[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4628b546[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2ef7976e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3310e9cd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@71f99476[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72789d8a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6026384c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@54cceb04[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@692b8fcf[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 24000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Aug 16 03:00:56 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-16T03:00:56.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5862/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-07-05T10:49:34.000+0000",
        "updated": "2019-08-16T03:00:56.000+0000",
        "timeoriginalestimate": null,
        "description": "The dictionary builder servers for the following scenario which is frequently encountered in practice when dictionary encoding is involved: the dictionary values are not known a priori, so they are determined dynamically, as new data arrive continually.\r\n\r\nIn particular, when a new value arrives, it is tested to check if it is already in the dictionary. If so, it is simply neglected, otherwise, it is added to the dictionary.\r\n \r\nWhen all values have been evaluated, the dictionary can be considered complete. So encoding can start afterward.\r\n\r\nThe code snippet using a dictionary builder should be like this:\r\n\r\n{{DictonaryBuilder<IntVector> dictionaryBuilder = ...}}\r\n{{dictionaryBuilder.startBuild();}}\r\n{{...}}\r\n{{dictionaryBuild.addValue(newValue);}}\r\n{{...}}\r\n{{dictionaryBuilder.endBuild();}}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 24000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Provide dictionary builder",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243335/comment/16908666",
                    "id": "16908666",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4813\n[https://github.com/apache/arrow/pull/4813]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-16T03:00:56.962+0000",
                    "updated": "2019-08-16T03:00:56.962+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z04eeo:",
        "customfield_12314139": null
    }
}