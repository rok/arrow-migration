{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13039605",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13039605",
    "key": "ARROW-522",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/6",
            "id": "6",
            "description": "The problem isn't valid and it can't be fixed.",
            "name": "Invalid"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": "2022-11-11T00:49:01.413+0000",
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "name": "Critical",
            "id": "2"
        },
        "labels": [],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12338369",
                "id": "12338369",
                "description": "Early release.",
                "name": "0.1.0",
                "archived": false,
                "released": true,
                "releaseDate": "2016-10-10"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rleiwang",
            "name": "rleiwang",
            "key": "rleiwang",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Rock Wang",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rleiwang",
            "name": "rleiwang",
            "key": "rleiwang",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Rock Wang",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-522/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7054f179[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@69b8b996[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b9332d4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@274b5e39[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3ebff0c2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3c5e63f5[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2e49f338[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@538eda5e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@12f6090d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5d78816d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3cc979c9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@19b01824[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jun 29 16:58:02 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-06-29T16:58:02.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-522/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-02-01T21:37:55.000+0000",
        "updated": "2022-06-29T16:58:02.000+0000",
        "timeoriginalestimate": null,
        "description": "I encountered this exception\n{code:java}\nException in thread \"main\" java.lang.IllegalArgumentException: should have as many children as in the schema: found 0 expected 2\n    at com.google.common.base.Preconditions.checkArgument(Preconditions.java:122)\n    at org.apache.arrow.vector.VectorLoader.loadBuffers(VectorLoader.java:91)\n    at org.apache.arrow.vector.VectorLoader.loadBuffers(VectorLoader.java:95)\n    at org.apache.arrow.vector.VectorLoader.load(VectorLoader.java:69)\n{code}\n\nThe test code is\n\n{code:java}\npublic class ArrowTest {\n    public static class ByteArrayReadableSeekableByteChannel implements SeekableByteChannel {\n        private byte[] byteArray;\n        private int position = 0;\n\n        public ByteArrayReadableSeekableByteChannel(byte[] byteArray) {\n            if (byteArray == null) {\n                throw new NullPointerException();\n            }\n            this.byteArray = byteArray;\n        }\n\n        @Override\n        public boolean isOpen() {\n            return byteArray != null;\n        }\n\n        @Override\n        public void close() throws IOException {\n            byteArray = null;\n        }\n\n        @Override\n        public int read(final ByteBuffer dst) throws IOException {\n            int remainingInBuf = byteArray.length - this.position;\n            int length = Math.min(dst.remaining(), remainingInBuf);\n            dst.put(this.byteArray, this.position, length);\n            this.position += length;\n            return length;\n        }\n\n        @Override\n        public long position() throws IOException {\n            return this.position;\n        }\n\n        @Override\n        public SeekableByteChannel position(final long newPosition) throws IOException {\n            this.position = (int) newPosition;\n            return this;\n        }\n\n        @Override\n        public long size() throws IOException {\n            return this.byteArray.length;\n        }\n\n        @Override\n        public int write(final ByteBuffer src) throws IOException {\n            throw new UnsupportedOperationException(\"Read only\");\n        }\n\n        @Override\n        public SeekableByteChannel truncate(final long size) throws IOException {\n            throw new UnsupportedOperationException(\"Read only\");\n        }\n    }\n\n    public static void main(String[] argv) throws Exception {\n        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n\n        // write\n        try (BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE);\n                BufferAllocator originalVectorAllocator = allocator\n                        .newChildAllocator(\"child allocator\", 1024, Integer.MAX_VALUE);\n                MapVector parent = new MapVector(\"parent\", originalVectorAllocator, null)\n        ) {\n            writeData(10, parent);\n            write(parent.getChild(\"root\"), Channels.newChannel(byteArrayOutputStream));\n        }\n\n        byte[] data = byteArrayOutputStream.toByteArray();\n\n        // read\n        try (BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE);\n                BufferAllocator readerAllocator = allocator.newChildAllocator(\"reader\", 0, Integer.MAX_VALUE);\n                ArrowReader arrowReader = new ArrowReader(new ByteArrayReadableSeekableByteChannel(data),\n                        readerAllocator);\n                BufferAllocator vectorAllocator = allocator.newChildAllocator(\"final vectors\", 0, Integer.MAX_VALUE);\n                MapVector parent = new MapVector(\"parent\", vectorAllocator, null)\n        ) {\n            ArrowFooter footer = arrowReader.readFooter();\n            Schema schema = footer.getSchema();\n\n            NullableMapVector root = parent.addOrGet(\"root\", Types.MinorType.MAP, NullableMapVector.class);\n\n            VectorLoader vectorLoader = new VectorLoader(schema, root);\n\n            List<ArrowBlock> recordBatches = footer.getRecordBatches();\n\n            for (ArrowBlock rbBlock : recordBatches) {\n                try (ArrowRecordBatch recordBatch = arrowReader.readRecordBatch(rbBlock)) {\n                    vectorLoader.load(recordBatch);\n                }\n\n                readData(10, parent);\n            }\n        }\n    }\n\n    private static void writeData(int count, MapVector parent) throws Exception {\n        BaseWriter.ComplexWriter writer = new ComplexWriterImpl(\"root\", parent, true);\n        BaseWriter.MapWriter rootWriter = writer.rootAsMap();\n        IntWriter intWriter = rootWriter.integer(\"id\");\n        BaseWriter.ListWriter listWriter = rootWriter.list(\"list\");\n        BaseWriter.MapWriter mapFromList = listWriter.map();\n        for (int i = 0; i < count; i++) {\n            rootWriter.start();\n            intWriter.setPosition(i);\n            intWriter.writeInt(i);\n\n            listWriter.setPosition(i);\n            listWriter.startList();\n            for (int j = 0; j < 2; j++) {\n                mapFromList.start();\n                mapFromList.integer(\"type\").writeInt(j);\n                mapFromList.bigInt(\"id\").writeBigInt(j * 1000L);\n                mapFromList.end();\n            }\n            listWriter.endList();\n            rootWriter.end();\n        }\n        writer.setValueCount(count);\n    }\n\n    private static void readData(int count, MapVector parent) {\n        BaseReader.MapReader rootReader = new SingleMapReaderImpl(parent).reader(\"root\");\n        FieldReader listReader = rootReader.reader(\"list\");\n        for (int i = 0; i < count; i++) {\n            listReader.setPosition(i);\n            while (listReader.next()) {\n                System.out.println(i + \" id \" + listReader.reader().reader(\"id\").readLong());\n                System.out.println(i + \" type \" + listReader.reader().reader(\"type\").readInteger());\n            }\n        }\n    }\n\n    private static void write(FieldVector parent, WritableByteChannel out) throws IOException {\n        VectorUnloader vectorUnloader = new VectorUnloader(parent);\n        Schema schema = vectorUnloader.getSchema();\n        try (\n                ArrowWriter arrowWriter = new ArrowWriter(out, schema);\n                ArrowRecordBatch recordBatch = vectorUnloader.getRecordBatch();\n        ) {\n            arrowWriter.writeRecordBatch(recordBatch);\n        }\n    }\n{code}",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] VectorLoader throws exception data schema contains list of maps.",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13039605/comment/15848971",
                    "id": "15848971",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rleiwang",
                        "name": "rleiwang",
                        "key": "rleiwang",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Rock Wang",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "It seems fixed the exception by adding the following to /org/apache/arrow/vector/complex/ListVector.java\n{code:java}\n    if (!field.getChildren().isEmpty()) {\n      addOrGetVector.getVector().initializeChildrenFromFields(field.getChildren());\n    }\n{code}\n\nas in \n\n{code:java}\n  @Override\n  public void initializeChildrenFromFields(List<Field> children) {\n    if (children.size() != 1) {\n      throw new IllegalArgumentException(\"Lists have only one child. Found: \" + children);\n    }\n    Field field = children.get(0);\n    MinorType minorType = Types.getMinorTypeForArrowType(field.getType());\n    AddOrGetResult<FieldVector> addOrGetVector = addOrGetVector(minorType);\n    if (!addOrGetVector.isCreated()) {\n      throw new IllegalArgumentException(\"Child vector already existed: \" + addOrGetVector.getVector());\n    }\n    if (!field.getChildren().isEmpty()) {\n      addOrGetVector.getVector().initializeChildrenFromFields(field.getChildren());\n    }\n  }\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rleiwang",
                        "name": "rleiwang",
                        "key": "rleiwang",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Rock Wang",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-02-01T21:41:41.623+0000",
                    "updated": "2017-02-01T21:41:41.623+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13039605/comment/17560380",
                    "id": "17560380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Since this issue is against 0.17.0, it's highly likely that it was fixed in the meantime. If it wasn't, feel free to open a new JIRA. Thank you!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-06-29T16:58:02.971+0000",
                    "updated": "2022-06-29T16:58:02.971+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|i39hmn:",
        "customfield_12314139": null
    }
}