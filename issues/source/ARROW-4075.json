{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13205293",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13205293",
    "key": "ARROW-4075",
    "fields": {
        "parent": {
            "id": "13179854",
            "key": "ARROW-3089",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13179854",
            "fields": {
                "summary": "[Rust] Add ArrayBuilder for different Arrow arrays",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
            "name": "csun",
            "key": "csun",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
            },
            "displayName": "Chao Sun",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
            "name": "csun",
            "key": "csun",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
            },
            "displayName": "Chao Sun",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
            "name": "csun",
            "key": "csun",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
            },
            "displayName": "Chao Sun",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4075/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 3,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13205293/worklog/176868",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao opened a new pull request #3221: ARROW-4075: [Rust] Reuse array builder after calling finish()\nURL: https://github.com/apache/arrow/pull/3221\n \n \n   Currently a buffer/array builder is consumed after `finish()` is called. This may not be very convenient as one may want to use the same builder for multiple arrays. This changes the behavior of it to reset the builder instead.\r\n   \r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-19T07:19:46.123+0000",
                    "updated": "2018-12-19T07:19:46.123+0000",
                    "started": "2018-12-19T07:19:46.122+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "176868",
                    "issueId": "13205293"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13205293/worklog/177348",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on issue #3221: ARROW-4075: [Rust] Reuse array builder after calling finish()\nURL: https://github.com/apache/arrow/pull/3221#issuecomment-448887622\n \n \n   @andygrove @paddyhoran could you take a look? Thanks.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-20T06:25:06.154+0000",
                    "updated": "2018-12-20T06:25:06.154+0000",
                    "started": "2018-12-20T06:25:06.153+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177348",
                    "issueId": "13205293"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13205293/worklog/178285",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs closed pull request #3221: ARROW-4075: [Rust] Reuse array builder after calling finish()\nURL: https://github.com/apache/arrow/pull/3221\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/rust/src/builder.rs b/rust/src/builder.rs\nindex d5d222d006..a4c8666233 100644\n--- a/rust/src/builder.rs\n+++ b/rust/src/builder.rs\n@@ -60,7 +60,7 @@ pub trait BufferBuilderTrait<T: ArrowPrimitiveType> {\n     fn reserve(&mut self, n: usize) -> Result<()>;\n     fn push(&mut self, v: T::Native) -> Result<()>;\n     fn push_slice(&mut self, slice: &[T::Native]) -> Result<()>;\n-    fn finish(self) -> Buffer;\n+    fn finish(&mut self) -> Buffer;\n }\n \n impl<T: ArrowPrimitiveType> BufferBuilderTrait<T> for BufferBuilder<T> {\n@@ -114,9 +114,11 @@ impl<T: ArrowPrimitiveType> BufferBuilderTrait<T> for BufferBuilder<T> {\n         self.write_bytes(slice.to_byte_slice(), array_slots)\n     }\n \n-    /// Consumes this builder and returns an immutable `Buffer`.\n-    default fn finish(self) -> Buffer {\n-        self.buffer.freeze()\n+    /// Reset this builder and returns an immutable `Buffer`.\n+    default fn finish(&mut self) -> Buffer {\n+        let buf = ::std::mem::replace(&mut self.buffer, MutableBuffer::new(0));\n+        self.len = 0;\n+        buf.freeze()\n     }\n }\n \n@@ -196,13 +198,15 @@ impl BufferBuilderTrait<BooleanType> for BufferBuilder<BooleanType> {\n         Ok(())\n     }\n \n-    /// Consumes this and returns an immutable `Buffer`.\n-    fn finish(mut self) -> Buffer {\n+    /// Reset this builder and returns an immutable `Buffer`.\n+    fn finish(&mut self) -> Buffer {\n         // `push` does not update the buffer's `len` so do it before `freeze` is called.\n         let new_buffer_len = bit_util::ceil(self.len, 8);\n         debug_assert!(new_buffer_len >= self.buffer.len());\n-        self.buffer.resize(new_buffer_len).unwrap();\n-        self.buffer.freeze()\n+        let mut buf = ::std::mem::replace(&mut self.buffer, MutableBuffer::new(0));\n+        self.len = 0;\n+        buf.resize(new_buffer_len).unwrap();\n+        buf.freeze()\n     }\n }\n \n@@ -211,15 +215,25 @@ pub trait ArrayBuilder {\n     /// The type of array that this builder creates\n     type ArrayType: Array;\n \n-    /// Returns the builder as an owned `Any` type so that it can be `downcast` to a specific\n-    /// implementation before calling it's `finish` method\n-    fn into_any(self) -> Box<Any>;\n-\n     /// Returns the number of array slots in the builder\n     fn len(&self) -> usize;\n \n     /// Builds the array\n-    fn finish(self) -> Self::ArrayType;\n+    fn finish(&mut self) -> Self::ArrayType;\n+\n+    /// Returns the builder as an non-mutable `Any` reference.\n+    ///\n+    /// This is most useful when one wants to call non-mutable APIs on a specific builder\n+    /// type. In this case, one can first cast this into a `Any`, and then use\n+    /// `downcast_ref` to get a reference on the specific builder.\n+    fn as_any(&self) -> &Any;\n+\n+    /// Returns the builder as an mutable `Any` reference.\n+    ///\n+    /// This is most useful when one wants to call mutable APIs on a specific builder\n+    /// type. In this case, one can first cast this into a `Any`, and then use\n+    /// `downcast_mut` to get a reference on the specific builder.\n+    fn as_any_mut(&mut self) -> &mut Any;\n }\n \n ///  Array builder for fixed-width primitive types\n@@ -243,10 +257,14 @@ pub type Float64Builder = PrimitiveArrayBuilder<Float64Type>;\n impl<T: ArrowPrimitiveType> ArrayBuilder for PrimitiveArrayBuilder<T> {\n     type ArrayType = PrimitiveArray<T>;\n \n-    /// Returns the builder as an owned `Any` type so that it can be `downcast` to a specific\n-    /// implementation before calling it's `finish` method\n-    fn into_any(self) -> Box<Any> {\n-        Box::new(self)\n+    /// Returns the builder as an non-mutable `Any` reference.\n+    fn as_any(&self) -> &Any {\n+        self\n+    }\n+\n+    /// Returns the builder as an mutable `Any` reference.\n+    fn as_any_mut(&mut self) -> &mut Any {\n+        self\n     }\n \n     /// Returns the number of array slots in the builder\n@@ -254,8 +272,8 @@ impl<T: ArrowPrimitiveType> ArrayBuilder for PrimitiveArrayBuilder<T> {\n         self.values_builder.len\n     }\n \n-    /// Builds the PrimitiveArray\n-    fn finish(self) -> PrimitiveArray<T> {\n+    /// Builds the `PrimitiveArray` and reset this builder.\n+    fn finish(&mut self) -> PrimitiveArray<T> {\n         let len = self.len();\n         let null_bit_buffer = self.bitmap_builder.finish();\n         let data = ArrayData::builder(T::get_data_type())\n@@ -341,10 +359,14 @@ where\n {\n     type ArrayType = ListArray;\n \n-    /// Returns the builder as an owned `Any` type so that it can be `downcast` to a specific\n-    /// implementation before calling it's `finish` method.\n-    fn into_any(self) -> Box<Any> {\n-        Box::new(self)\n+    /// Returns the builder as an non-mutable `Any` reference.\n+    fn as_any(&self) -> &Any {\n+        self\n+    }\n+\n+    /// Returns the builder as an mutable `Any` reference.\n+    fn as_any_mut(&mut self) -> &mut Any {\n+        self\n     }\n \n     /// Returns the number of array slots in the builder\n@@ -352,22 +374,25 @@ where\n         self.len\n     }\n \n-    /// Builds the `ListArray`\n-    fn finish(self) -> ListArray {\n+    /// Builds the `ListArray` and reset this builder.\n+    fn finish(&mut self) -> ListArray {\n         let len = self.len();\n+        self.len = 0;\n         let values_arr = self\n             .values_builder\n-            .into_any()\n-            .downcast::<T>()\n+            .as_any_mut()\n+            .downcast_mut::<T>()\n             .unwrap()\n             .finish();\n         let values_data = values_arr.data();\n \n+        let offset_buffer = self.offsets_builder.finish();\n         let null_bit_buffer = self.bitmap_builder.finish();\n+        self.offsets_builder.push(0).unwrap();\n         let data = ArrayData::builder(DataType::List(Box::new(values_data.data_type().clone())))\n             .len(len)\n             .null_count(len - bit_util::count_set_bits(null_bit_buffer.data()))\n-            .add_buffer(self.offsets_builder.finish())\n+            .add_buffer(offset_buffer)\n             .add_child_data(values_data)\n             .null_bit_buffer(null_bit_buffer)\n             .build();\n@@ -403,10 +428,14 @@ pub struct BinaryArrayBuilder {\n impl ArrayBuilder for BinaryArrayBuilder {\n     type ArrayType = BinaryArray;\n \n-    /// Returns the builder as an owned `Any` type so that it can be `downcast` to a specific\n-    /// implementation before calling it's `finish` method.\n-    fn into_any(self) -> Box<Any> {\n-        Box::new(self)\n+    /// Returns the builder as an non-mutable `Any` reference.\n+    fn as_any(&self) -> &Any {\n+        self\n+    }\n+\n+    /// Returns the builder as an mutable `Any` reference.\n+    fn as_any_mut(&mut self) -> &mut Any {\n+        self\n     }\n \n     /// Returns the number of array slots in the builder\n@@ -414,8 +443,8 @@ impl ArrayBuilder for BinaryArrayBuilder {\n         self.builder.len()\n     }\n \n-    /// Builds the `BinaryArray`\n-    fn finish(self) -> BinaryArray {\n+    /// Builds the `BinaryArray` and reset this builder.\n+    fn finish(&mut self) -> BinaryArray {\n         BinaryArray::from(self.builder.finish())\n     }\n }\n@@ -462,7 +491,7 @@ mod tests {\n \n     #[test]\n     fn test_builder_i32_empty() {\n-        let b = Int32BufferBuilder::new(5);\n+        let mut b = Int32BufferBuilder::new(5);\n         assert_eq!(0, b.len());\n         assert_eq!(16, b.capacity());\n         let a = b.finish();\n@@ -500,6 +529,27 @@ mod tests {\n         assert_eq!(80, a.len());\n     }\n \n+    #[test]\n+    fn test_builder_finish() {\n+        let mut b = Int32BufferBuilder::new(5);\n+        assert_eq!(16, b.capacity());\n+        for i in 0..10 {\n+            b.push(i).unwrap();\n+        }\n+        let mut a = b.finish();\n+        assert_eq!(40, a.len());\n+        assert_eq!(0, b.len());\n+        assert_eq!(0, b.capacity());\n+\n+        // Try build another buffer after cleaning up.\n+        for i in 0..20 {\n+            b.push(i).unwrap()\n+        }\n+        assert_eq!(32, b.capacity());\n+        a = b.finish();\n+        assert_eq!(80, a.len());\n+    }\n+\n     #[test]\n     fn test_reserve() {\n         let mut b = UInt8BufferBuilder::new(2);\n@@ -702,6 +752,20 @@ mod tests {\n         }\n     }\n \n+    #[test]\n+    fn test_primitive_array_builder_finish() {\n+        let mut builder = Int32Builder::new(5);\n+        builder.push_slice(&[2, 4, 6, 8]).unwrap();\n+        let mut arr = builder.finish();\n+        assert_eq!(4, arr.len());\n+        assert_eq!(0, builder.len());\n+\n+        builder.push_slice(&[1, 3, 5, 7, 9]).unwrap();\n+        arr = builder.finish();\n+        assert_eq!(5, arr.len());\n+        assert_eq!(0, builder.len());\n+    }\n+\n     #[test]\n     fn test_list_array_builder() {\n         let values_builder = Int32Builder::new(10);\n@@ -768,6 +832,27 @@ mod tests {\n         assert_eq!(3, list_array.value_length(2));\n     }\n \n+    #[test]\n+    fn test_list_array_builder_finish() {\n+        let values_builder = Int32Array::builder(5);\n+        let mut builder = ListArrayBuilder::new(values_builder);\n+\n+        builder.values().push_slice(&[1, 2, 3]).unwrap();\n+        builder.append(true).unwrap();\n+        builder.values().push_slice(&[4, 5, 6]).unwrap();\n+        builder.append(true).unwrap();\n+\n+        let mut arr = builder.finish();\n+        assert_eq!(2, arr.len());\n+        assert_eq!(0, builder.len());\n+\n+        builder.values().push_slice(&[7, 8, 9]).unwrap();\n+        builder.append(true).unwrap();\n+        arr = builder.finish();\n+        assert_eq!(1, arr.len());\n+        assert_eq!(0, builder.len());\n+    }\n+\n     #[test]\n     fn test_list_list_array_builder() {\n         let primitive_builder = Int32Builder::new(10);\n@@ -857,6 +942,23 @@ mod tests {\n         assert_eq!(5, binary_array.value_length(2));\n     }\n \n+    #[test]\n+    fn test_binary_array_builder_finish() {\n+        let mut builder = BinaryArrayBuilder::new(10);\n+\n+        builder.push_string(\"hello\").unwrap();\n+        builder.push_string(\"world\").unwrap();\n+\n+        let mut arr = builder.finish();\n+        assert_eq!(2, arr.len());\n+        assert_eq!(0, builder.len());\n+\n+        builder.push_string(\"arrow\").unwrap();\n+        arr = builder.finish();\n+        assert_eq!(1, arr.len());\n+        assert_eq!(0, builder.len());\n+    }\n+\n     #[test]\n     fn test_binary_array_builder_push_string() {\n         let mut builder = BinaryArrayBuilder::new(20);\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-22T20:56:42.573+0000",
                    "updated": "2018-12-22T20:56:42.573+0000",
                    "started": "2018-12-22T20:56:42.571+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "178285",
                    "issueId": "13205293"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 1800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@f3aeb51[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@64051e05[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37a7621c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7b1ea7db[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7750b50e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@63bd563d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f066fd4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@61a83d90[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@13a21c6e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1a27ac99[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@460308c6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@66e7e92b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 1800,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Dec 22 20:57:06 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-12-22T20:57:06.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4075/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-12-19T07:15:37.000+0000",
        "updated": "2018-12-22T20:57:06.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently a buffer/array builder is consumed after {{finish()}} is called. This may not be very convenient as one may want to use the same builder for multiple arrays. This changes the behavior of it to reset the builder instead.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "0.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 1800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Reuse array builder after calling finish()",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13205293/comment/16727567",
                    "id": "16727567",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Issue resolved by pull request 3221\n[https://github.com/apache/arrow/pull/3221]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2018-12-22T20:57:06.993+0000",
                    "updated": "2018-12-22T20:57:06.993+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|u0048g:",
        "customfield_12314139": null
    }
}