{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13238227",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227",
    "key": "ARROW-5527",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 36600,
            "total": 36600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 36600,
            "total": 36600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5527/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 64,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276102",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4867: ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867\n \n \n   In order to prepare for the GroupBy operator, we need to cap memory usage of hash tables. This is done by passing a custom allocator to all HashTable/MemoTable and forces them to use Buffers for heap storage instead of std::vector and std::string (in the case of BinaryMemoTable).\r\n   \r\n   There's a noted 5-10% performance penalty in the string benchmarks (negligible change for integers). The BuildStringDictionary benchmark pays a 30% penalty, due to Upsize and the memset. This overhead is mostly in memset, which can be controlled by a better default table size. One can validate by changing the default MemoTable values in the Hash kernel.\r\n   \r\n   This patch hides the failure via DCHECK_OK internaly, the next step will be to bubble up the failing status to kernels, but this will require more careful tuning.\r\n   \r\n   There's still improvement to be done, e.g. the CopyValues/CopyOffsets/GetDictionary can now be mostly zero-copy, as long as the MemoTable is also finalized/moved. I didn't change this contract because I think some consumers uses this class in an iterative fashion.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T19:35:50.600+0000",
                    "updated": "2019-07-12T19:35:50.600+0000",
                    "started": "2019-07-12T19:35:50.599+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276102",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276104",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on issue #4867: ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#issuecomment-511008188\n \n \n   @ursabot benchmark --suite-filter=arrow-compute-benchmark HEAD~4\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T19:36:27.061+0000",
                    "updated": "2019-07-12T19:36:27.061+0000",
                    "started": "2019-07-12T19:36:27.061+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276104",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276110",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on issue #4867: ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#issuecomment-511012824\n \n \n   [AMD64 Ubuntu 18.04 C++ Benchmark (#36112)](https://ci.ursalabs.org/#builders/73/builds/47) builder has been succeeded.\n   \n   Revision: 3fc56b8f612e36d66b6ad2bb2e11407e6ad74d6d\n   \n   ```diff\n     ==================================  ===========  ===========  ===========\n     benchmark                              baseline    contender       change\n     ==================================  ===========  ===========  ===========\n   - UniqueString10bytes/4194304/10240   3.1251e+08   2.96083e+08  -0.0525651\n     UniqueUInt8NoNulls/4194304/200      1.23494e+09  1.22514e+09  -0.00793683\n   - BuildStringDictionary               4.9678e+07   3.70287e+07  -0.254626\n     BuildDictionary                     8.67541e+08  8.64137e+08  -0.00392407\n     UniqueInt64WithNulls/4194304/1024   2.0481e+09   2.04443e+09  -0.00178981\n     UniqueUInt8WithNulls/4194304/200    4.75735e+08  4.84722e+08   0.0188905\n     UniqueInt64WithNulls/4194304/10240  1.22206e+09  1.23999e+09   0.0146677\n     UniqueString100bytes/4194304/1024   2.37048e+09  2.32435e+09  -0.0194591\n   - UniqueString10bytes/4194304/1024    5.71624e+08  5.3281e+08   -0.0679028\n     UniqueInt64NoNulls/4194304/1024     2.93211e+09  3.00881e+09   0.0261599\n     UniqueString100bytes/4194304/10240  1.39878e+09  1.33731e+09  -0.0439462\n     UniqueInt64NoNulls/4194304/10240    1.50567e+09  1.74247e+09   0.157267\n     ==================================  ===========  ===========  ===========\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T19:52:50.948+0000",
                    "updated": "2019-07-12T19:52:50.948+0000",
                    "started": "2019-07-12T19:52:50.947+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276110",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276118",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4867: ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#discussion_r303123333\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -201,29 +201,30 @@ class HashTable {\n     operator bool() const { return h != kSentinel; }\n   };\n \n-  explicit HashTable(uint64_t capacity) {\n-    // Presize for at least 8 elements\n-    capacity = std::max(capacity, static_cast<uint64_t>(8U));\n-    size_ = BitUtil::NextPower2(capacity * 4U);\n-    size_mask_ = size_ - 1;\n-    n_filled_ = 0;\n-    // This will zero out hash entries, marking them empty\n-    entries_.resize(size_);\n+  explicit HashTable(MemoryPool* pool, uint64_t capacity) : entries_builder_(pool) {\n \n Review comment:\n   ```suggestion\r\n     HashTable(MemoryPool* pool, uint64_t capacity) : entries_builder_(pool) {\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T20:11:33.164+0000",
                    "updated": "2019-07-12T20:11:33.164+0000",
                    "started": "2019-07-12T20:11:33.163+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276118",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276119",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4867: ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#discussion_r303129868\n \n \n\n ##########\n File path: cpp/src/parquet/encoding.cc\n ##########\n @@ -416,12 +416,12 @@ void DictEncoderImpl<DType>::WriteDict(uint8_t* buffer) {\n // ByteArray and FLBA already have the dictionary encoded in their data heaps\n template <>\n void DictEncoderImpl<ByteArrayType>::WriteDict(uint8_t* buffer) {\n-  memo_table_.VisitValues(0, [&](const ::arrow::util::string_view& v) {\n+  memo_table_.VisitValues(0, [&buffer](const ::arrow::util::string_view& v) {\n     uint32_t len = static_cast<uint32_t>(v.length());\n \n Review comment:\n   should this check for overflow?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T20:11:33.676+0000",
                    "updated": "2019-07-12T20:11:33.676+0000",
                    "started": "2019-07-12T20:11:33.676+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276119",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276120",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4867: ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#discussion_r303127713\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -300,36 +302,57 @@ class HashTable {\n \n   bool NeedUpsizing() const {\n     // Keep the load factor <= 1/2\n-    return n_filled_ * 2U >= size_;\n+    return size_ * 2U >= capacity_;\n+  }\n+\n+  Status UpsizeBuffer(uint64_t capacity) {\n+    RETURN_NOT_OK(entries_builder_.Reserve(capacity));\n \n Review comment:\n   Since you're doing your own growth factor / power of two management, wouldn't it be sufficient to use Resize (and skip the builder doing its own growth factoring?)\r\n   ```suggestion\r\n       RETURN_NOT_OK(entries_builder_.Resize(capacity));\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T20:11:33.720+0000",
                    "updated": "2019-07-12T20:11:33.720+0000",
                    "started": "2019-07-12T20:11:33.720+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276120",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276121",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4867: ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#discussion_r303131005\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -764,19 +788,16 @@ class BinaryMemoTable : public MemoTable {\n   using HashTableType = HashTable<Payload>;\n   using HashTableEntry = typename HashTable<Payload>::Entry;\n   HashTableType hash_table_;\n-\n-  std::vector<int32_t> offsets_;\n-  std::string values_;\n+  BinaryBuilder binary_builder_;\n \n   int32_t null_index_ = kKeyNotFound;\n \n   std::pair<const HashTableEntry*, bool> Lookup(hash_t h, const void* data,\n                                                 int32_t length) const {\n     auto cmp_func = [=](const Payload* payload) {\n \n Review comment:\n   Again, could you inline cmp_func and use reference capture for conformance with the rest of the codebase?\r\n   ```suggestion\r\n       auto cmp_func = [&](const Payload* payload) {\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T20:11:33.767+0000",
                    "updated": "2019-07-12T20:11:33.767+0000",
                    "started": "2019-07-12T20:11:33.766+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276121",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276122",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4867: ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#discussion_r303125596\n \n \n\n ##########\n File path: cpp/src/arrow/buffer-builder.h\n ##########\n @@ -176,12 +176,9 @@ class ARROW_EXPORT BufferBuilder {\n   int64_t size_;\n };\n \n-template <typename T, typename Enable = void>\n-class TypedBufferBuilder;\n-\n /// \\brief A BufferBuilder for building a buffer of arithmetic elements\n template <typename T>\n-class TypedBufferBuilder<T, typename std::enable_if<std::is_arithmetic<T>::value>::type> {\n+class TypedBufferBuilder {\n \n Review comment:\n   Maybe paranoia, but it seems best to be explicit that only POD should be constructed here (not clang-formatted):\r\n   ```suggestion\r\n   class TypedBufferBuilder<T, typename std::enable_if<std::is_arithmetic<T>::value || std::is_standard_layout<T>::value>::type> {\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T20:11:33.917+0000",
                    "updated": "2019-07-12T20:11:33.917+0000",
                    "started": "2019-07-12T20:11:33.916+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276122",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276123",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4867: ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#discussion_r303124207\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -233,20 +234,21 @@ class HashTable {\n     assert(!*entry);\n     entry->h = FixHash(h);\n     entry->payload = payload;\n-    ++n_filled_;\n+    ++size_;\n     if (NeedUpsizing()) {\n       // Resizing is expensive, avoid doing it too often\n-      Upsize(size_ * 4);\n+      DCHECK_OK(Upsize(capacity_ * 4));\n     }\n   }\n \n-  uint64_t size() const { return n_filled_; }\n+  uint64_t size() const { return size_; }\n \n Review comment:\n   :+1: sane naming\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T20:11:33.932+0000",
                    "updated": "2019-07-12T20:11:33.932+0000",
                    "started": "2019-07-12T20:11:33.931+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276123",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276124",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4867: ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#discussion_r303126181\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -300,36 +302,57 @@ class HashTable {\n \n   bool NeedUpsizing() const {\n     // Keep the load factor <= 1/2\n-    return n_filled_ * 2U >= size_;\n+    return size_ * 2U >= capacity_;\n+  }\n+\n+  Status UpsizeBuffer(uint64_t capacity) {\n+    RETURN_NOT_OK(entries_builder_.Reserve(capacity));\n+    entries_ = entries_builder_.mutable_data();\n+    memset(entries_, 0, capacity * sizeof(Entry));\n+\n+    return Status::OK();\n   }\n \n-  void Upsize(uint64_t new_size) {\n-    assert(new_size > size_);\n-    uint64_t new_mask = new_size - 1;\n-    assert((new_size & new_mask) == 0);  // it's a power of two\n+  Status Upsize(uint64_t new_capacity) {\n+    assert(new_capacity > capacity_);\n+    uint64_t new_mask = new_capacity - 1;\n+    assert((new_capacity & new_mask) == 0);  // it's a power of two\n+\n+    // Stash old entries and seal builder, effectively resetting the Buffer\n+    const Entry* old_entries = entries_;\n+    std::shared_ptr<Buffer> previous;\n+    RETURN_NOT_OK(entries_builder_.Finish(&previous));\n+    // Allocate new buffer\n+    RETURN_NOT_OK(UpsizeBuffer(new_capacity));\n \n-    std::vector<Entry> new_entries(new_size);\n-    for (auto& entry : entries_) {\n+    for (uint64_t i = 0; i < capacity_; i++) {\n+      const auto& entry = old_entries[i];\n       if (entry) {\n         // Dummy compare function (will not be called)\n         auto cmp_func = [](const Payload*) { return false; };\n-        // Non-empty slot, move into new\n-        auto p = Lookup<NoCompare>(entry.h, new_entries.data(), new_mask, cmp_func);\n-        assert(!p.second);  // shouldn't have found a matching entry\n-        new_entries[p.first] = entry;\n+        auto p = Lookup<NoCompare>(entry.h, entries_, new_mask, cmp_func);\n \n Review comment:\n   nit: could you just inline `cmp_func`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T20:11:33.976+0000",
                    "updated": "2019-07-12T20:11:33.976+0000",
                    "started": "2019-07-12T20:11:33.975+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276124",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4867: ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#discussion_r303126474\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -300,36 +302,57 @@ class HashTable {\n \n   bool NeedUpsizing() const {\n     // Keep the load factor <= 1/2\n-    return n_filled_ * 2U >= size_;\n+    return size_ * 2U >= capacity_;\n+  }\n+\n+  Status UpsizeBuffer(uint64_t capacity) {\n+    RETURN_NOT_OK(entries_builder_.Reserve(capacity));\n+    entries_ = entries_builder_.mutable_data();\n+    memset(entries_, 0, capacity * sizeof(Entry));\n+\n+    return Status::OK();\n   }\n \n-  void Upsize(uint64_t new_size) {\n-    assert(new_size > size_);\n-    uint64_t new_mask = new_size - 1;\n-    assert((new_size & new_mask) == 0);  // it's a power of two\n+  Status Upsize(uint64_t new_capacity) {\n+    assert(new_capacity > capacity_);\n \n Review comment:\n   Should these be `ARROW_CHECK_GT` etc?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T20:11:33.981+0000",
                    "updated": "2019-07-12T20:11:33.981+0000",
                    "started": "2019-07-12T20:11:33.981+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276125",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276126",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4867: ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#discussion_r303124010\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -201,29 +201,30 @@ class HashTable {\n     operator bool() const { return h != kSentinel; }\n   };\n \n-  explicit HashTable(uint64_t capacity) {\n-    // Presize for at least 8 elements\n-    capacity = std::max(capacity, static_cast<uint64_t>(8U));\n-    size_ = BitUtil::NextPower2(capacity * 4U);\n-    size_mask_ = size_ - 1;\n-    n_filled_ = 0;\n-    // This will zero out hash entries, marking them empty\n-    entries_.resize(size_);\n+  explicit HashTable(MemoryPool* pool, uint64_t capacity) : entries_builder_(pool) {\n+    DCHECK_NE(pool, nullptr);\n+    // Presize for at least 512 elements\n+    capacity = std::max(capacity, static_cast<uint64_t>(512U));\n \n Review comment:\n   Isn't this presizing for 512 * `4U`? If `4U` is a stand in for `sizeof(int32_t)` or so please use the latter\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T20:11:34.029+0000",
                    "updated": "2019-07-12T20:11:34.029+0000",
                    "started": "2019-07-12T20:11:34.028+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276126",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276127",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4867: ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#discussion_r303129374\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -657,22 +669,23 @@ class BinaryMemoTable : public MemoTable {\n     return static_cast<int32_t>(hash_table_.size() + (GetNull() != kKeyNotFound));\n   }\n \n-  int32_t values_size() const { return static_cast<int32_t>(values_.size()); }\n-\n-  const uint8_t* values_data() const {\n-    return reinterpret_cast<const uint8_t*>(values_.data());\n-  }\n+  int32_t values_size() const { return binary_builder_.value_data_length(); }\n \n   // Copy (n + 1) offsets starting from index `start` into `out_data`\n   template <class Offset>\n   void CopyOffsets(int32_t start, Offset* out_data) const {\n-    auto delta = offsets_[start];\n-    for (uint32_t i = start; i < offsets_.size(); ++i) {\n-      auto adjusted_offset = offsets_[i] - delta;\n-      auto cast_offset = static_cast<Offset>(adjusted_offset);\n+    const int32_t* offsets = binary_builder_.offsets_data();\n+    int32_t delta = offsets[start];\n+    for (int32_t i = start; i < size(); ++i) {\n+      int32_t adjusted_offset = offsets[i] - delta;\n+      Offset cast_offset = static_cast<Offset>(adjusted_offset);\n       assert(static_cast<int32_t>(cast_offset) == adjusted_offset);  // avoid truncation\n       *out_data++ = cast_offset;\n     }\n+\n+    // Copy last value since BinaryBuilder only materialize it on the Finalize\n \n Review comment:\n   ```suggestion\r\n       // Copy last value since BinaryBuilder only materializes it in Finish()\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T20:11:34.159+0000",
                    "updated": "2019-07-12T20:11:34.159+0000",
                    "started": "2019-07-12T20:11:34.158+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276127",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276128",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4867: ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#discussion_r303129037\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -687,12 +700,20 @@ class BinaryMemoTable : public MemoTable {\n \n   // Same as above, but check output size in debug mode\n   void CopyValues(int32_t start, int64_t out_size, uint8_t* out_data) const {\n-    int32_t offset = offsets_[start];\n-    auto length = values_.size() - static_cast<size_t>(offset);\n+    if (start >= size()) {\n+      return;\n+    }\n+\n+    // The absolute byte offset of `start` value in the binary buffer.\n+    int32_t offset = binary_builder_.OffsetOf(start);\n+    auto length = binary_builder_.value_data_length() - static_cast<size_t>(offset);\n+\n     if (out_size != -1) {\n       assert(static_cast<int64_t>(length) == out_size);\n \n Review comment:\n   Is it necessarily incorrect for length to be less than out_size?\r\n   ```suggestion\r\n         assert(static_cast<int64_t>(length) <= out_size);\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T20:11:37.100+0000",
                    "updated": "2019-07-12T20:11:37.100+0000",
                    "started": "2019-07-12T20:11:37.099+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276128",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276800",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4867: WIP ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#discussion_r303507617\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -300,36 +302,57 @@ class HashTable {\n \n   bool NeedUpsizing() const {\n     // Keep the load factor <= 1/2\n-    return n_filled_ * 2U >= size_;\n+    return size_ * 2U >= capacity_;\n+  }\n+\n+  Status UpsizeBuffer(uint64_t capacity) {\n+    RETURN_NOT_OK(entries_builder_.Reserve(capacity));\n \n Review comment:\n   That sounds reasonable indeed, and would avoid unexpected interactions.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-15T16:02:00.902+0000",
                    "updated": "2019-07-15T16:02:00.902+0000",
                    "started": "2019-07-15T16:02:00.901+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276800",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276801",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4867: WIP ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#discussion_r303512851\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -764,19 +788,16 @@ class BinaryMemoTable : public MemoTable {\n   using HashTableType = HashTable<Payload>;\n   using HashTableEntry = typename HashTable<Payload>::Entry;\n   HashTableType hash_table_;\n-\n-  std::vector<int32_t> offsets_;\n-  std::string values_;\n+  BinaryBuilder binary_builder_;\n \n   int32_t null_index_ = kKeyNotFound;\n \n   std::pair<const HashTableEntry*, bool> Lookup(hash_t h, const void* data,\n                                                 int32_t length) const {\n     auto cmp_func = [=](const Payload* payload) {\n \n Review comment:\n   Keeping value capture seems fine to me. We aren't using reference capture everywhere.\r\n   (in practice, I hope the compiler is able to find the best optimizations regardless of how the lambda is spelt - inlined or not, value or reference capture, etc.)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-15T16:02:00.909+0000",
                    "updated": "2019-07-15T16:02:00.909+0000",
                    "started": "2019-07-15T16:02:00.908+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276801",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276802",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4867: WIP ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#discussion_r303508239\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -300,36 +302,57 @@ class HashTable {\n \n   bool NeedUpsizing() const {\n     // Keep the load factor <= 1/2\n-    return n_filled_ * 2U >= size_;\n+    return size_ * 2U >= capacity_;\n+  }\n+\n+  Status UpsizeBuffer(uint64_t capacity) {\n+    RETURN_NOT_OK(entries_builder_.Reserve(capacity));\n \n Review comment:\n   Also, `Reserve` takes an _additional_ capacity as argument (yes, I dislike the resize / reserve distinction as well :-)).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-15T16:02:00.920+0000",
                    "updated": "2019-07-15T16:02:00.920+0000",
                    "started": "2019-07-15T16:02:00.919+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276802",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276803",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4867: WIP ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#discussion_r303508928\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -300,36 +302,57 @@ class HashTable {\n \n   bool NeedUpsizing() const {\n     // Keep the load factor <= 1/2\n-    return n_filled_ * 2U >= size_;\n+    return size_ * 2U >= capacity_;\n+  }\n+\n+  Status UpsizeBuffer(uint64_t capacity) {\n+    RETURN_NOT_OK(entries_builder_.Reserve(capacity));\n+    entries_ = entries_builder_.mutable_data();\n+    memset(entries_, 0, capacity * sizeof(Entry));\n+\n+    return Status::OK();\n   }\n \n-  void Upsize(uint64_t new_size) {\n-    assert(new_size > size_);\n-    uint64_t new_mask = new_size - 1;\n-    assert((new_size & new_mask) == 0);  // it's a power of two\n+  Status Upsize(uint64_t new_capacity) {\n+    assert(new_capacity > capacity_);\n \n Review comment:\n   I don't think so, because these are internal API checks.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-15T16:02:00.930+0000",
                    "updated": "2019-07-15T16:02:00.930+0000",
                    "started": "2019-07-15T16:02:00.930+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276803",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276804",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4867: WIP ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#discussion_r303513076\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -709,6 +730,10 @@ class BinaryMemoTable : public MemoTable {\n     //\n     // Thus, the method will properly inject an empty value of the proper width\n     // in the output buffer.\n+    //\n+    if (start >= size()) {\n \n Review comment:\n   +1\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-15T16:02:00.939+0000",
                    "updated": "2019-07-15T16:02:00.939+0000",
                    "started": "2019-07-15T16:02:00.938+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276804",
                    "issueId": "13238227"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/worklog/276805",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4867: WIP ARROW-5527: [C++] Uses Buffer/Builder in HashTable and MemoTable\nURL: https://github.com/apache/arrow/pull/4867#discussion_r303510049\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -233,20 +234,21 @@ class HashTable {\n     assert(!*entry);\n     entry->h = FixHash(h);\n     entry->payload = payload;\n-    ++n_filled_;\n+    ++size_;\n     if (NeedUpsizing()) {\n       // Resizing is expensive, avoid doing it too often\n-      Upsize(size_ * 4);\n+      DCHECK_OK(Upsize(capacity_ * 4));\n     }\n   }\n \n-  uint64_t size() const { return n_filled_; }\n+  uint64_t size() const { return size_; }\n \n Review comment:\n   Not sure I agree. It's easy to get confused here. Usually we have the convention that `size` represents the contiguous initialized area of a `capacity`-length buffer. Here it's different...\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-15T16:02:00.959+0000",
                    "updated": "2019-07-15T16:02:00.959+0000",
                    "started": "2019-07-15T16:02:00.955+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276805",
                    "issueId": "13238227"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 36600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1b097622[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5fc0731c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1502f802[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4986212d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a5e89d6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1ed77380[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c974ab0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@64608f46[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a8eaa25[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3fe08187[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19849e01[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@79fe38c8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 36600,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Aug 02 20:22:17 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-02T20:22:17.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5527/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-06-07T15:08:36.000+0000",
        "updated": "2019-08-04T00:14:19.000+0000",
        "timeoriginalestimate": null,
        "description": "The current implementation uses `std::vector` and `std::string` with unbounded size. The refactor would take a memory pool in the constructor for buffer management and would get rid of vectors. This will have the side effect of propagating Status to some calls (notably insert due to Upsize failing to resize).\r\n\r\n* MemoTable constructor needs to take a MemoryPool in input\r\n* GetOrInsert must return Status/Result<int32_t>\r\n* MemoTable should use a TypeBufferBuilder instead of std::vector<Payload>\r\n* BinaryMemoTable should use a BinaryBuilder instead of (std::vector<int32_t>, std::string) pair.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "10h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 36600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] HashTable/MemoTable should use Buffer(s)/Builder(s) for heap data",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13238227/comment/16899186",
                    "id": "16899186",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 4867\n[https://github.com/apache/arrow/pull/4867]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-08-02T20:22:17.271+0000",
                    "updated": "2019-08-02T20:22:17.271+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z03iz4:",
        "customfield_12314139": null
    }
}