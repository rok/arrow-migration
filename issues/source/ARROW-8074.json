{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13291060",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060",
    "key": "ARROW-8074",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "dataset-dask-integration",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 33600,
            "total": 33600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 33600,
            "total": 33600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8074/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 56,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/404940",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6645: ARROW-8074: [Dataset][Python] FileFragments from Buffers\nURL: https://github.com/apache/arrow/pull/6645\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T20:19:20.441+0000",
                    "updated": "2020-03-17T20:19:20.441+0000",
                    "started": "2020-03-17T20:19:20.440+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404940",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/404950",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6645: ARROW-8074: [Dataset][Python] FileFragments from Buffers\nURL: https://github.com/apache/arrow/pull/6645#issuecomment-600282574\n \n \n   https://issues.apache.org/jira/browse/ARROW-8074\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T20:31:44.191+0000",
                    "updated": "2020-03-17T20:31:44.191+0000",
                    "started": "2020-03-17T20:31:44.190+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404950",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/404965",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #6645: ARROW-8074: [Dataset][Python] FileFragments from Buffers\nURL: https://github.com/apache/arrow/pull/6645#issuecomment-600290459\n \n \n   Cool, thanks for working on this!\r\n   \r\n   WIll take a closer look tomorrow, but just one comment. From the test I see the usage is like:\r\n   \r\n   ```\r\n   fragment = ds.FileFragment(ds.ParquetFileFormat(), parquetbuffer)\r\n   dataset = ds.InMemoryDataset(fragment=fragment)\r\n   ```\r\n   \r\n   which allows one to make a fragment and then a dataset from it. This gives all what is needed to eg allow `ds.dataset(parquetbuffer)` in the higher level API. \r\n   \r\n   But, naively, I would not have thought this to be a InMemoryDataset (as for me, in-memory dataset was about in-memory record batches, while here it is in-memory but still parquet files). \r\n   A more practical concern is that, assuming at some point we want to make a ParquetDataset(FileSystemDataset) subclass that exposes some more parquet-specific properties, this makes it more difficult to have such a ParquetDataset that supports both file paths and buffer (although I assume this can be solved by not using inheritance, but composition). \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T20:50:40.673+0000",
                    "updated": "2020-03-17T20:50:40.673+0000",
                    "started": "2020-03-17T20:50:40.672+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404965",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/427620",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #6645:\nURL: https://github.com/apache/arrow/pull/6645#issuecomment-619957568\n\n\n   I'll close this for now, ARROW-8318 will remove this limitation and FileSystemDataset will be created from a list of FileFragment, which themselves can be created from Buffer-backed FileSource.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-27T12:34:04.452+0000",
                    "updated": "2020-04-27T12:34:04.452+0000",
                    "started": "2020-04-27T12:34:04.452+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427620",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/427621",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques edited a comment on pull request #6645:\nURL: https://github.com/apache/arrow/pull/6645#issuecomment-619957568\n\n\n   I'll close this for now, ARROW-8318 will remove this limitation and FileSystemDataset will be created from a list of FileFragment, which themselves can be created from Buffer-backed FileSource. You'll be able to create Dataset from a mix of files on disk and buffers in memory.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-27T12:34:37.895+0000",
                    "updated": "2020-04-27T12:34:37.895+0000",
                    "started": "2020-04-27T12:34:37.895+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427621",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/433124",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] edited a comment on pull request #7156:\nURL: https://github.com/apache/arrow/pull/7156#issuecomment-627415490\n\n\n   https://issues.apache.org/jira/browse/ARROW-8074\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-14T12:58:40.173+0000",
                    "updated": "2020-05-14T12:58:40.173+0000",
                    "started": "2020-05-14T12:58:40.173+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433124",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/433142",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #7156:\nURL: https://github.com/apache/arrow/pull/7156#discussion_r425152680\n\n\n\n##########\nFile path: python/pyarrow/dataset.py\n##########\n@@ -592,9 +596,13 @@ def dataset(source, schema=None, format=None, filesystem=None,\n         selector_ignore_prefixes=ignore_prefixes\n     )\n \n+    import io\n+\n     # TODO(kszucs): support InMemoryDataset for a table input\n     if _is_path_like(source):\n         return _filesystem_dataset(source, **kwargs)\n+    elif isinstance(source, (io.BytesIO, FileSource)):\n\nReview comment:\n       and also `pa.Buffer`\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-14T13:51:07.401+0000",
                    "updated": "2020-05-14T13:51:07.401+0000",
                    "started": "2020-05-14T13:51:07.401+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433142",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/433145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #7156:\nURL: https://github.com/apache/arrow/pull/7156#issuecomment-628657581\n\n\n   I am testing the other parquet tests that are also skipped, and that turned up already one issue: https://issues.apache.org/jira/browse/ARROW-8799\r\n   \r\n   With a few small edits, all other tests pass now. Do I push that here? (can also keep for follow-up PR)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-14T14:02:44.140+0000",
                    "updated": "2020-05-14T14:02:44.140+0000",
                    "started": "2020-05-14T14:02:44.140+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433145",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/433153",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #7156:\nURL: https://github.com/apache/arrow/pull/7156#issuecomment-628666066\n\n\n   @jorisvandenbossche please push that here, thanks!\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-14T14:17:15.809+0000",
                    "updated": "2020-05-14T14:17:15.809+0000",
                    "started": "2020-05-14T14:17:15.808+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433153",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/433156",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7156:\nURL: https://github.com/apache/arrow/pull/7156#discussion_r425175133\n\n\n\n##########\nFile path: python/pyarrow/dataset.py\n##########\n@@ -592,9 +596,13 @@ def dataset(source, schema=None, format=None, filesystem=None,\n         selector_ignore_prefixes=ignore_prefixes\n     )\n \n+    import io\n+\n     # TODO(kszucs): support InMemoryDataset for a table input\n     if _is_path_like(source):\n         return _filesystem_dataset(source, **kwargs)\n+    elif isinstance(source, (io.BytesIO, FileSource)):\n\nReview comment:\n       I can certainly add these but it is far from a complete and general solution. For example this would not enable you to pass a list of buffers or file like objects other than bytesIO and nativefile\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-14T14:21:15.402+0000",
                    "updated": "2020-05-14T14:21:15.402+0000",
                    "started": "2020-05-14T14:21:15.401+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433156",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/433158",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #7156:\nURL: https://github.com/apache/arrow/pull/7156#discussion_r425177073\n\n\n\n##########\nFile path: python/pyarrow/dataset.py\n##########\n@@ -592,9 +596,13 @@ def dataset(source, schema=None, format=None, filesystem=None,\n         selector_ignore_prefixes=ignore_prefixes\n     )\n \n+    import io\n+\n     # TODO(kszucs): support InMemoryDataset for a table input\n     if _is_path_like(source):\n         return _filesystem_dataset(source, **kwargs)\n+    elif isinstance(source, (io.BytesIO, FileSource)):\n\nReview comment:\n       Yep, I understand, but added them now in the commit I pushed to get the tests passing (those only use single buffer objects). But certainly agree this should be cleaned up (later).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-14T14:23:46.052+0000",
                    "updated": "2020-05-14T14:23:46.052+0000",
                    "started": "2020-05-14T14:23:46.052+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433158",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/433236",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7156:\nURL: https://github.com/apache/arrow/pull/7156#discussion_r425326032\n\n\n\n##########\nFile path: python/pyarrow/dataset.py\n##########\n@@ -592,9 +596,13 @@ def dataset(source, schema=None, format=None, filesystem=None,\n         selector_ignore_prefixes=ignore_prefixes\n     )\n \n+    import io\n+\n     # TODO(kszucs): support InMemoryDataset for a table input\n     if _is_path_like(source):\n         return _filesystem_dataset(source, **kwargs)\n+    elif isinstance(source, (io.BytesIO, FileSource)):\n\nReview comment:\n       Well for the time being I've added `dataset.py::_is_native_file_wrappable` which includes an explicit and easily extensible class list. Further refactoring can be left for a follow up\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-14T17:53:15.624+0000",
                    "updated": "2020-05-14T17:53:15.624+0000",
                    "started": "2020-05-14T17:53:15.624+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433236",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/433239",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7156:\nURL: https://github.com/apache/arrow/pull/7156#discussion_r425328361\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -42,6 +43,52 @@ def _forbid_instantiation(klass, subclasses_instead=True):\n     raise TypeError(msg)\n \n \n+ctypedef CResult[shared_ptr[CRandomAccessFile]] CCustomOpen()\n+\n+cdef class FileSource:\n+\n+    cdef:\n+        # XXX why is shared_ptr necessary here? CFileSource shouldn't need it\n+        shared_ptr[CFileSource] wrapped\n\nReview comment:\n       @pitrou @kszucs I tried using \r\n   ```suggestion\r\n           CFileSource wrapped\r\n   ```\r\n   which caused a segfault after `FileSource.__init__()`. Am I missing something obvious?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-14T17:57:07.391+0000",
                    "updated": "2020-05-14T17:57:07.391+0000",
                    "started": "2020-05-14T17:57:07.391+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433239",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/433243",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7156:\nURL: https://github.com/apache/arrow/pull/7156#discussion_r425330758\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -42,6 +43,52 @@ def _forbid_instantiation(klass, subclasses_instead=True):\n     raise TypeError(msg)\n \n \n+ctypedef CResult[shared_ptr[CRandomAccessFile]] CCustomOpen()\n+\n+cdef class FileSource:\n+\n+    cdef:\n+        # XXX why is shared_ptr necessary here? CFileSource shouldn't need it\n+        shared_ptr[CFileSource] wrapped\n\nReview comment:\n       using __cinit__ instead of __init__ seems to fix it locally\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-14T18:00:57.174+0000",
                    "updated": "2020-05-14T18:00:57.174+0000",
                    "started": "2020-05-14T18:00:57.172+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433243",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/433256",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7156:\nURL: https://github.com/apache/arrow/pull/7156#discussion_r425330758\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -42,6 +43,52 @@ def _forbid_instantiation(klass, subclasses_instead=True):\n     raise TypeError(msg)\n \n \n+ctypedef CResult[shared_ptr[CRandomAccessFile]] CCustomOpen()\n+\n+cdef class FileSource:\n+\n+    cdef:\n+        # XXX why is shared_ptr necessary here? CFileSource shouldn't need it\n+        shared_ptr[CFileSource] wrapped\n\nReview comment:\n       using `__cinit__` instead of `__init__` seems to fix it. Why is it necessary here?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-14T18:19:46.385+0000",
                    "updated": "2020-05-14T18:19:46.385+0000",
                    "started": "2020-05-14T18:19:46.384+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433256",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/434432",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7156:\nURL: https://github.com/apache/arrow/pull/7156#discussion_r426687933\n\n\n\n##########\nFile path: python/pyarrow/dataset.py\n##########\n@@ -314,6 +315,15 @@ def _ensure_multiple_sources(paths, filesystem=None):\n     return filesystem, paths\n \n \n+def _is_native_file_wrappable(source):\n+    import io\n+    return isinstance(source, (FileSource,\n+                               io.BytesIO,\n\nReview comment:\n       You want `io.BufferedIOBase` here.\n\n##########\nFile path: cpp/src/arrow/python/common.cc\n##########\n@@ -96,42 +109,38 @@ class PythonErrorDetail : public StatusDetail {\n   }\n \n   void RestorePyError() const {\n-    Py_INCREF(exc_type_.obj());\n-    Py_INCREF(exc_value_.obj());\n-    Py_INCREF(exc_traceback_.obj());\n-    PyErr_Restore(exc_type_.obj(), exc_value_.obj(), exc_traceback_.obj());\n+    PyErr_Restore(exc_type_.incref(), exc_value_.incref(), exc_traceback_.incref());\n   }\n \n   PyObject* exc_type() const { return exc_type_.obj(); }\n \n   PyObject* exc_value() const { return exc_value_.obj(); }\n \n-  static std::shared_ptr<PythonErrorDetail> FromPyError() {\n-    PyObject* exc_type = nullptr;\n-    PyObject* exc_value = nullptr;\n-    PyObject* exc_traceback = nullptr;\n-\n-    PyErr_Fetch(&exc_type, &exc_value, &exc_traceback);\n-    PyErr_NormalizeException(&exc_type, &exc_value, &exc_traceback);\n-    ARROW_CHECK(exc_type)\n-        << \"PythonErrorDetail::FromPyError called without a Python error set\";\n-    DCHECK(PyType_Check(exc_type));\n-    DCHECK(exc_value);  // Ensured by PyErr_NormalizeException, double-check\n-    if (exc_traceback == nullptr) {\n-      // Needed by PyErr_Restore()\n-      Py_INCREF(Py_None);\n-      exc_traceback = Py_None;\n+  Status ToStatus(StatusCode code = StatusCode::UnknownError) && {\n+    if (code == StatusCode::UnknownError) {\n+      code = MapPyError(exc_type());\n     }\n \n-    std::shared_ptr<PythonErrorDetail> detail(new PythonErrorDetail);\n-    detail->exc_type_.reset(exc_type);\n-    detail->exc_value_.reset(exc_value);\n-    detail->exc_traceback_.reset(exc_traceback);\n-    return detail;\n+    std::string message;\n+    RETURN_NOT_OK(internal::PyObject_StdStringStr(exc_value(), &message));\n+\n+    auto detail = std::make_shared<PythonErrorDetail>(std::move(*this));\n\nReview comment:\n       Not very pretty...\n\n##########\nFile path: cpp/src/arrow/python/common.h\n##########\n@@ -170,17 +176,23 @@ class ARROW_PYTHON_EXPORT OwnedRef {\n  private:\n   ARROW_DISALLOW_COPY_AND_ASSIGN(OwnedRef);\n \n-  PyObject* obj_;\n+  PyObject* obj_ = NULLPTR;\n };\n \n // Same as OwnedRef, but ensures the GIL is taken when it goes out of scope.\n // This is for situations where the GIL is not always known to be held\n // (e.g. if it is released in the middle of a function for performance reasons)\n class ARROW_PYTHON_EXPORT OwnedRefNoGIL : public OwnedRef {\n  public:\n-  OwnedRefNoGIL() : OwnedRef() {}\n-  OwnedRefNoGIL(OwnedRefNoGIL&& other) : OwnedRef(other.detach()) {}\n-  explicit OwnedRefNoGIL(PyObject* obj) : OwnedRef(obj) {}\n+  using OwnedRef::OwnedRef;\n+  OwnedRefNoGIL() = default;\n+  OwnedRefNoGIL(OwnedRefNoGIL&& other) = default;\n\nReview comment:\n       What does this do? Inherit from parent? This looks a bit ambiguous to me...\n\n##########\nFile path: cpp/src/arrow/python/common.h\n##########\n@@ -303,5 +315,102 @@ static inline PyObject* cpp_PyObject_CallMethod(PyObject* obj, const char* metho\n                              const_cast<char*>(argspec), args...);\n }\n \n+template <typename Self, typename Fn>\n+struct BoundMethod;\n+\n+template <typename Self, typename R, typename... A>\n+struct BoundMethod<Self, R(A...)> {\n\nReview comment:\n       Do we really need this complication? What concrete problem is this solving?\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -42,6 +43,51 @@ def _forbid_instantiation(klass, subclasses_instead=True):\n     raise TypeError(msg)\n \n \n+ctypedef CResult[shared_ptr[CRandomAccessFile]] CCustomOpen()\n+\n+cdef class FileSource:\n+\n+    cdef:\n+        # XXX why is shared_ptr necessary here? CFileSource shouldn't need it\n+        CFileSource wrapped\n+\n+    def __cinit__(self, file, FileSystem filesystem=None):\n+        cdef:\n+            shared_ptr[CFileSystem] c_filesystem\n+            c_string c_path\n+            function[CCustomOpen] c_open\n+            shared_ptr[CBuffer] c_buffer\n+\n+        if isinstance(file, FileSource):\n+            self.wrapped = (<FileSource> file).wrapped\n+\n+        elif isinstance(file, Buffer):\n+            c_buffer = pyarrow_unwrap_buffer(file)\n+            self.wrapped = CFileSource(move(c_buffer))\n+\n+        elif _is_path_like(file):\n+            if filesystem is None:\n+                raise ValueError(\"cannot construct a FileSource from \"\n+                                 \"a path without a FileSystem\")\n+            c_filesystem = filesystem.unwrap()\n+            c_path = tobytes(_stringify_path(file))\n+            self.wrapped = CFileSource(move(c_path), move(c_filesystem))\n+\n+        else:\n+            c_open = BindMethod[CCustomOpen](\n+                wrap_python_file(file, mode='r'),\n+                &NativeFile.get_random_access_file)\n+            self.wrapped = CFileSource(move(c_open))\n+\n+    @staticmethod\n+    def from_uri(uri):\n\nReview comment:\n       It's a bit weird to have a constructor that takes almost every kind of input, but a separate factory method for URIs. I'd say either have factory methods for everything, or accept everything in the constructor.\n\n##########\nFile path: python/pyarrow/dataset.py\n##########\n@@ -411,7 +421,14 @@ def _filesystem_dataset(source, schema=None, filesystem=None,\n     partitioning = _ensure_partitioning(partitioning)\n \n     if isinstance(source, (list, tuple)):\n-        fs, paths_or_selector = _ensure_multiple_sources(source, filesystem)\n+        if all(_is_path_like(elem) for elem in source):\n+            fs, paths_or_selector = _ensure_multiple_sources(source,\n+                                                             filesystem)\n+        else:\n+            fs, paths_or_selector = _MockFileSystem(), source\n\nReview comment:\n       Why the MockFileSystem fallback here?\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -42,6 +43,51 @@ def _forbid_instantiation(klass, subclasses_instead=True):\n     raise TypeError(msg)\n \n \n+ctypedef CResult[shared_ptr[CRandomAccessFile]] CCustomOpen()\n+\n+cdef class FileSource:\n+\n+    cdef:\n+        # XXX why is shared_ptr necessary here? CFileSource shouldn't need it\n+        CFileSource wrapped\n+\n+    def __cinit__(self, file, FileSystem filesystem=None):\n+        cdef:\n+            shared_ptr[CFileSystem] c_filesystem\n+            c_string c_path\n+            function[CCustomOpen] c_open\n+            shared_ptr[CBuffer] c_buffer\n+\n+        if isinstance(file, FileSource):\n+            self.wrapped = (<FileSource> file).wrapped\n+\n+        elif isinstance(file, Buffer):\n+            c_buffer = pyarrow_unwrap_buffer(file)\n+            self.wrapped = CFileSource(move(c_buffer))\n+\n+        elif _is_path_like(file):\n+            if filesystem is None:\n+                raise ValueError(\"cannot construct a FileSource from \"\n+                                 \"a path without a FileSystem\")\n+            c_filesystem = filesystem.unwrap()\n+            c_path = tobytes(_stringify_path(file))\n+            self.wrapped = CFileSource(move(c_path), move(c_filesystem))\n+\n+        else:\n+            c_open = BindMethod[CCustomOpen](\n+                wrap_python_file(file, mode='r'),\n+                &NativeFile.get_random_access_file)\n\nReview comment:\n       Is it any useful to make the NativeFile construction lazy? I'm not sure I understand what this is saving.\n\n##########\nFile path: python/pyarrow/includes/libarrow_dataset.pxd\n##########\n@@ -194,7 +194,11 @@ cdef extern from \"arrow/dataset/api.h\" namespace \"arrow::dataset\" nogil:\n         const c_string& path() const\n         const shared_ptr[CFileSystem]& filesystem() const\n         const shared_ptr[CBuffer]& buffer() const\n-        CFileSource(c_string path, shared_ptr[CFileSystem] filesystem)\n+        # HACK: Cython can't handle all the overloads so don't declare them.\n\nReview comment:\n       I'm curious, did you report a bug to Cython?\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -42,6 +43,51 @@ def _forbid_instantiation(klass, subclasses_instead=True):\n     raise TypeError(msg)\n \n \n+ctypedef CResult[shared_ptr[CRandomAccessFile]] CCustomOpen()\n+\n+cdef class FileSource:\n+\n+    cdef:\n+        # XXX why is shared_ptr necessary here? CFileSource shouldn't need it\n\nReview comment:\n       Perhaps a bug in CFileSource's copy/move constructors or operators?\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -42,6 +43,51 @@ def _forbid_instantiation(klass, subclasses_instead=True):\n     raise TypeError(msg)\n \n \n+ctypedef CResult[shared_ptr[CRandomAccessFile]] CCustomOpen()\n+\n+cdef class FileSource:\n+\n+    cdef:\n+        # XXX why is shared_ptr necessary here? CFileSource shouldn't need it\n+        CFileSource wrapped\n+\n+    def __cinit__(self, file, FileSystem filesystem=None):\n+        cdef:\n+            shared_ptr[CFileSystem] c_filesystem\n+            c_string c_path\n+            function[CCustomOpen] c_open\n+            shared_ptr[CBuffer] c_buffer\n+\n+        if isinstance(file, FileSource):\n+            self.wrapped = (<FileSource> file).wrapped\n+\n+        elif isinstance(file, Buffer):\n+            c_buffer = pyarrow_unwrap_buffer(file)\n+            self.wrapped = CFileSource(move(c_buffer))\n+\n+        elif _is_path_like(file):\n+            if filesystem is None:\n+                raise ValueError(\"cannot construct a FileSource from \"\n+                                 \"a path without a FileSystem\")\n\nReview comment:\n       Interesting, it doesn't use a local filesystem as default? (or doesn't accept a URI?)\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1377,6 +1377,21 @@ cdef shared_ptr[CBuffer] as_c_buffer(object o) except *:\n     return buf\n \n \n+cdef NativeFile wrap_python_file(object source, str mode):\n\nReview comment:\n       Is there a reason not to reuse `_get_native_file`?\n\n##########\nFile path: python/pyarrow/tests/test_dataset.py\n##########\n@@ -1425,3 +1425,13 @@ def test_feather_format(tempdir):\n     write_feather(table, str(basedir / \"data1.feather\"), version=1)\n     with pytest.raises(ValueError):\n         ds.dataset(basedir, format=\"feather\").to_table()\n+\n+\n+def test_file_source_refcount():\n+    from io import BytesIO\n+    from sys import getrefcount\n\nReview comment:\n       Please put all standard imports at the top level.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-18T15:08:32.643+0000",
                    "updated": "2020-05-18T15:08:32.643+0000",
                    "started": "2020-05-18T15:08:32.642+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434432",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/434435",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7156:\nURL: https://github.com/apache/arrow/pull/7156#discussion_r426702390\n\n\n\n##########\nFile path: cpp/src/arrow/python/common.h\n##########\n@@ -303,5 +315,102 @@ static inline PyObject* cpp_PyObject_CallMethod(PyObject* obj, const char* metho\n                              const_cast<char*>(argspec), args...);\n }\n \n+template <typename Self, typename Fn>\n+struct BoundMethod;\n+\n+template <typename Self, typename R, typename... A>\n+struct BoundMethod<Self, R(A...)> {\n\nReview comment:\n       This allows me to straightforwardly expose `NativeFile.get_random_access_file` to C++ as a function object\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-18T15:16:38.186+0000",
                    "updated": "2020-05-18T15:16:38.186+0000",
                    "started": "2020-05-18T15:16:38.186+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434435",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/434436",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7156:\nURL: https://github.com/apache/arrow/pull/7156#discussion_r426702864\n\n\n\n##########\nFile path: cpp/src/arrow/python/common.h\n##########\n@@ -170,17 +176,23 @@ class ARROW_PYTHON_EXPORT OwnedRef {\n  private:\n   ARROW_DISALLOW_COPY_AND_ASSIGN(OwnedRef);\n \n-  PyObject* obj_;\n+  PyObject* obj_ = NULLPTR;\n };\n \n // Same as OwnedRef, but ensures the GIL is taken when it goes out of scope.\n // This is for situations where the GIL is not always known to be held\n // (e.g. if it is released in the middle of a function for performance reasons)\n class ARROW_PYTHON_EXPORT OwnedRefNoGIL : public OwnedRef {\n  public:\n-  OwnedRefNoGIL() : OwnedRef() {}\n-  OwnedRefNoGIL(OwnedRefNoGIL&& other) : OwnedRef(other.detach()) {}\n-  explicit OwnedRefNoGIL(PyObject* obj) : OwnedRef(obj) {}\n+  using OwnedRef::OwnedRef;\n+  OwnedRefNoGIL() = default;\n+  OwnedRefNoGIL(OwnedRefNoGIL&& other) = default;\n\nReview comment:\n       It uses the default, which is to use the move constructors of data members and base classes\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-18T15:17:21.569+0000",
                    "updated": "2020-05-18T15:17:21.569+0000",
                    "started": "2020-05-18T15:17:21.569+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434436",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/434437",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7156:\nURL: https://github.com/apache/arrow/pull/7156#discussion_r426704076\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -42,6 +43,51 @@ def _forbid_instantiation(klass, subclasses_instead=True):\n     raise TypeError(msg)\n \n \n+ctypedef CResult[shared_ptr[CRandomAccessFile]] CCustomOpen()\n+\n+cdef class FileSource:\n+\n+    cdef:\n+        # XXX why is shared_ptr necessary here? CFileSource shouldn't need it\n+        CFileSource wrapped\n+\n+    def __cinit__(self, file, FileSystem filesystem=None):\n+        cdef:\n+            shared_ptr[CFileSystem] c_filesystem\n+            c_string c_path\n+            function[CCustomOpen] c_open\n+            shared_ptr[CBuffer] c_buffer\n+\n+        if isinstance(file, FileSource):\n+            self.wrapped = (<FileSource> file).wrapped\n+\n+        elif isinstance(file, Buffer):\n+            c_buffer = pyarrow_unwrap_buffer(file)\n+            self.wrapped = CFileSource(move(c_buffer))\n+\n+        elif _is_path_like(file):\n+            if filesystem is None:\n+                raise ValueError(\"cannot construct a FileSource from \"\n+                                 \"a path without a FileSystem\")\n\nReview comment:\n       I'm following the convention that `_dataset.pyx` APIs require filesystem while `dataset.py` APIs can default to a LocalFileSystem. I provide `FileSource.from_uri` to produce a `FileSource` from a uri but we could certainly remove that and accept a URI in the constructor instead. This feeds back into the \"what's optimal python API\" discussion\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-18T15:19:15.608+0000",
                    "updated": "2020-05-18T15:19:15.608+0000",
                    "started": "2020-05-18T15:19:15.607+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434437",
                    "issueId": "13291060"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/worklog/434438",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7156:\nURL: https://github.com/apache/arrow/pull/7156#discussion_r426704270\n\n\n\n##########\nFile path: python/pyarrow/dataset.py\n##########\n@@ -314,6 +315,15 @@ def _ensure_multiple_sources(paths, filesystem=None):\n     return filesystem, paths\n \n \n+def _is_native_file_wrappable(source):\n+    import io\n+    return isinstance(source, (FileSource,\n+                               io.BytesIO,\n\nReview comment:\n       okay\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-18T15:19:30.447+0000",
                    "updated": "2020-05-18T15:19:30.447+0000",
                    "started": "2020-05-18T15:19:30.446+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434438",
                    "issueId": "13291060"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 33600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3527abf[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@8890987[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71147eeb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3191847f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@31f2ba04[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4b34571b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19058bb0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@240a4693[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@8cea8c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6969e909[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c04b79f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2acc5c52[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 33600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jun 18 12:09:03 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-06-18T12:09:03.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8074/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2020-03-11T11:31:06.000+0000",
        "updated": "2020-06-18T12:11:18.000+0000",
        "timeoriginalestimate": null,
        "description": "The current {{pyarrow.parquet.read_table}}/{{ParquetFile}} can work with buffer (reader) objects (file-like objects, pyarrow.Buffer, pyarrow.BufferReader) as input when dealing with single files. This functionality is for example being used by pandas and kartothek (in addition to being extensively used in our own tests as well).\r\n\r\nWhile we could keep the old implementation to handle single files (which is different from the ParquetDataset logic), there are also some advantages of being able to handle this in the Datasets API.  \r\nFor example, this would enable to filtering functionality of the datasets API, also for this single-file buffers use case, which would be a nice enhancement (currently, {{read_table}} does not support {{filters}} in case of single files, which is eg why kartothek implements this themselves).\r\n\r\nWould this be possible to support?\r\n\r\nThe {{arrow::dataset::FileSource}} already has PATH and BUFFER enum types (https://github.com/apache/arrow/blob/08f8bff05af37921ff1e5a2b630ce1e7ec1c0ede/cpp/src/arrow/dataset/file_base.h#L46-L49), so it seems in principle possible to create a FileSource (for a FileSystemDataset / FileFragment) from a buffer instead of from a path?",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "9h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 33600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset] Support for file-like objects (buffers) in FileSystemDataset?",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13291060/comment/17139369",
                    "id": "17139369",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Issue resolved by pull request 7156\n[https://github.com/apache/arrow/pull/7156]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-06-18T12:09:03.103+0000",
                    "updated": "2020-06-18T12:09:03.103+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0cf2o:",
        "customfield_12314139": null
    }
}