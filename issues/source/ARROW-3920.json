{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13201733",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13201733",
    "key": "ARROW-3920",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=robertnishihara",
            "name": "robertnishihara",
            "key": "robertnishihara",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Robert Nishihara",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332956",
                "id": "12332956",
                "name": "C++ - Plasma"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=robertnishihara",
            "name": "robertnishihara",
            "key": "robertnishihara",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Robert Nishihara",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=robertnishihara",
            "name": "robertnishihara",
            "key": "robertnishihara",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Robert Nishihara",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 4200,
            "total": 4200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 4200,
            "total": 4200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3920/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 7,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13201733/worklog/171233",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "concretevitamin commented on issue #3061: ARROW-3920: [plasma] Fix reference counting in custom tensorflow plasma operator.\nURL: https://github.com/apache/arrow/pull/3061#issuecomment-443370771\n \n \n   Thoughts:\r\n   * It'd be a good idea to update Plasma documentation, in the source code & outside, to reflect this usage pattern.  \r\n   * Question: is the omission of Release() considered a bug?  If so, can you add a test case that fails before your change and passes after this change?  Or is this an internal detail?\r\n   * I would avoid doing renaming changes in a bug fix PR.\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-30T23:28:22.338+0000",
                    "updated": "2018-11-30T23:28:22.338+0000",
                    "started": "2018-11-30T23:28:22.338+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "171233",
                    "issueId": "13201733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13201733/worklog/171250",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on issue #3061: ARROW-3920: [plasma] Fix reference counting in custom tensorflow plasma operator.\nURL: https://github.com/apache/arrow/pull/3061#issuecomment-443377610\n \n \n   Thanks @concretevitamin!\r\n   - I agree, though there's no change in the usage here.\r\n   - It's a bug. I added a test (and might add another).\r\n   - The renaming is somewhat necessary because there was actually another bug that changed the behavior of the plasma op (to use arrow tensors instead of ndarrays), and I needed to fix both things to get it working.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-01T00:10:26.959+0000",
                    "updated": "2018-12-01T00:10:26.959+0000",
                    "started": "2018-12-01T00:10:26.959+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "171250",
                    "issueId": "13201733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13201733/worklog/171291",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on a change in pull request #3061: ARROW-3920: [plasma] Fix reference counting in custom tensorflow plasma operator.\nURL: https://github.com/apache/arrow/pull/3061#discussion_r238055243\n \n \n\n ##########\n File path: python/pyarrow/tensorflow/plasma_op.cc\n ##########\n @@ -157,11 +157,14 @@ class TensorToPlasmaOp : public tf::AsyncOpKernel {\n \n     uint8_t* data = reinterpret_cast<uint8_t*>(data_buffer->mutable_data() + offset);\n \n-    auto wrapped_callback = [this, context, done, data_buffer, object_id]() {\n+    auto wrapped_callback = [this, context, done, data_buffer, data, object_id]() {\n       {\n         tf::mutex_lock lock(mu_);\n         ARROW_CHECK_OK(client_.Seal(object_id));\n         ARROW_CHECK_OK(client_.Release(object_id));\n+        auto orig_stream = context->op_device_context()->stream();\n+        auto stream_executor = orig_stream->parent();\n+        CHECK(stream_executor->HostMemoryUnregister(static_cast<void*>(data)));\n \n Review comment:\n   We probably only want this to happen in the GPU case, right?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-01T07:14:41.222+0000",
                    "updated": "2018-12-01T07:14:41.222+0000",
                    "started": "2018-12-01T07:14:41.221+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "171291",
                    "issueId": "13201733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13201733/worklog/171292",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on a change in pull request #3061: ARROW-3920: [plasma] Fix reference counting in custom tensorflow plasma operator.\nURL: https://github.com/apache/arrow/pull/3061#discussion_r238055280\n \n \n\n ##########\n File path: python/pyarrow/tensorflow/plasma_op.cc\n ##########\n @@ -157,11 +157,14 @@ class TensorToPlasmaOp : public tf::AsyncOpKernel {\n \n     uint8_t* data = reinterpret_cast<uint8_t*>(data_buffer->mutable_data() + offset);\n \n-    auto wrapped_callback = [this, context, done, data_buffer, object_id]() {\n+    auto wrapped_callback = [this, context, done, data_buffer, data, object_id]() {\n       {\n         tf::mutex_lock lock(mu_);\n         ARROW_CHECK_OK(client_.Seal(object_id));\n         ARROW_CHECK_OK(client_.Release(object_id));\n+        auto orig_stream = context->op_device_context()->stream();\n+        auto stream_executor = orig_stream->parent();\n+        CHECK(stream_executor->HostMemoryUnregister(static_cast<void*>(data)));\n \n Review comment:\n   Same with the other op.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-01T07:16:28.939+0000",
                    "updated": "2018-12-01T07:16:28.939+0000",
                    "started": "2018-12-01T07:16:28.938+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "171292",
                    "issueId": "13201733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13201733/worklog/171294",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #3061: ARROW-3920: [plasma] Fix reference counting in custom tensorflow plasma operator.\nURL: https://github.com/apache/arrow/pull/3061#discussion_r238056016\n \n \n\n ##########\n File path: python/pyarrow/tensorflow/plasma_op.cc\n ##########\n @@ -157,11 +157,14 @@ class TensorToPlasmaOp : public tf::AsyncOpKernel {\n \n     uint8_t* data = reinterpret_cast<uint8_t*>(data_buffer->mutable_data() + offset);\n \n-    auto wrapped_callback = [this, context, done, data_buffer, object_id]() {\n+    auto wrapped_callback = [this, context, done, data_buffer, data, object_id]() {\n       {\n         tf::mutex_lock lock(mu_);\n         ARROW_CHECK_OK(client_.Seal(object_id));\n         ARROW_CHECK_OK(client_.Release(object_id));\n+        auto orig_stream = context->op_device_context()->stream();\n+        auto stream_executor = orig_stream->parent();\n+        CHECK(stream_executor->HostMemoryUnregister(static_cast<void*>(data)));\n \n Review comment:\n   Yeah, I updated it (it actually doesn't compile for cpu only tensorflow).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-01T07:57:18.369+0000",
                    "updated": "2018-12-01T07:57:18.369+0000",
                    "started": "2018-12-01T07:57:18.368+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "171294",
                    "issueId": "13201733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13201733/worklog/171295",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3061: ARROW-3920: [plasma] Fix reference counting in custom tensorflow plasma operator.\nURL: https://github.com/apache/arrow/pull/3061#issuecomment-443409570\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3061?src=pr&el=h1) Report\n   > Merging [#3061](https://codecov.io/gh/apache/arrow/pull/3061?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/2bc4d95b3192316b91bbd9687208ef669bcf704c?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n   > The diff coverage is `93.33%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3061/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3061?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3061      +/-   ##\n   ==========================================\n   - Coverage   87.07%   87.07%   -0.01%     \n   ==========================================\n     Files         489      489              \n     Lines       69160    69161       +1     \n   ==========================================\n   - Hits        60222    60221       -1     \n   - Misses       8837     8839       +2     \n     Partials      101      101\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3061?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/python/serialize.h](https://codecov.io/gh/apache/arrow/pull/3061/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vc2VyaWFsaXplLmg=) | `0% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/python/serialize.cc](https://codecov.io/gh/apache/arrow/pull/3061/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vc2VyaWFsaXplLmNj) | `89.95% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_plasma\\_tf\\_op.py](https://codecov.io/gh/apache/arrow/pull/3061/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wbGFzbWFfdGZfb3AucHk=) | `97.91% <100%> (+0.04%)` | :arrow_up: |\n   | [cpp/src/arrow/python/deserialize.cc](https://codecov.io/gh/apache/arrow/pull/3061/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vZGVzZXJpYWxpemUuY2M=) | `91.7% <87.5%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/3061/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `72.03% <0%> (-0.95%)` | :arrow_down: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3061?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3061?src=pr&el=footer). Last update [2bc4d95...c109566](https://codecov.io/gh/apache/arrow/pull/3061?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-01T08:23:30.892+0000",
                    "updated": "2018-12-01T08:23:30.892+0000",
                    "started": "2018-12-01T08:23:30.891+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "171295",
                    "issueId": "13201733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13201733/worklog/171296",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz closed pull request #3061: ARROW-3920: [plasma] Fix reference counting in custom tensorflow plasma operator.\nURL: https://github.com/apache/arrow/pull/3061\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/python/deserialize.cc b/cpp/src/arrow/python/deserialize.cc\nindex 452d8dd0ac..f1a7eab8fc 100644\n--- a/cpp/src/arrow/python/deserialize.cc\n+++ b/cpp/src/arrow/python/deserialize.cc\n@@ -361,7 +361,7 @@ Status GetSerializedFromComponents(int num_tensors, int num_ndarrays, int num_bu\n \n     ipc::Message message(metadata, body);\n \n-    RETURN_NOT_OK(ReadTensor(message, &tensor));\n+    RETURN_NOT_OK(ipc::ReadTensor(message, &tensor));\n     out->tensors.emplace_back(std::move(tensor));\n   }\n \n@@ -375,7 +375,7 @@ Status GetSerializedFromComponents(int num_tensors, int num_ndarrays, int num_bu\n \n     ipc::Message message(metadata, body);\n \n-    RETURN_NOT_OK(ReadTensor(message, &tensor));\n+    RETURN_NOT_OK(ipc::ReadTensor(message, &tensor));\n     out->ndarrays.emplace_back(std::move(tensor));\n   }\n \n@@ -389,19 +389,20 @@ Status GetSerializedFromComponents(int num_tensors, int num_ndarrays, int num_bu\n   return Status::OK();\n }\n \n-Status DeserializeTensor(const SerializedPyObject& object, std::shared_ptr<Tensor>* out) {\n-  if (object.tensors.size() != 1) {\n-    return Status::Invalid(\"Object is not a Tensor\");\n+Status DeserializeNdarray(const SerializedPyObject& object,\n+                          std::shared_ptr<Tensor>* out) {\n+  if (object.ndarrays.size() != 1) {\n+    return Status::Invalid(\"Object is not an Ndarray\");\n   }\n-  *out = object.tensors[0];\n+  *out = object.ndarrays[0];\n   return Status::OK();\n }\n \n-Status ReadTensor(std::shared_ptr<Buffer> src, std::shared_ptr<Tensor>* out) {\n+Status NdarrayFromBuffer(std::shared_ptr<Buffer> src, std::shared_ptr<Tensor>* out) {\n   io::BufferReader reader(src);\n   SerializedPyObject object;\n   RETURN_NOT_OK(ReadSerializedObject(&reader, &object));\n-  return DeserializeTensor(object, out);\n+  return DeserializeNdarray(object, out);\n }\n \n }  // namespace py\ndiff --git a/cpp/src/arrow/python/deserialize.h b/cpp/src/arrow/python/deserialize.h\nindex a0286b1726..754765a682 100644\n--- a/cpp/src/arrow/python/deserialize.h\n+++ b/cpp/src/arrow/python/deserialize.h\n@@ -76,15 +76,15 @@ ARROW_EXPORT\n Status DeserializeObject(PyObject* context, const SerializedPyObject& object,\n                          PyObject* base, PyObject** out);\n \n-/// \\brief Reconstruct Tensor from Arrow-serialized representation\n+/// \\brief Reconstruct Ndarray from Arrow-serialized representation\n /// \\param[in] object Object to deserialize\n /// \\param[out] out The deserialized tensor\n /// \\return Status\n ARROW_EXPORT\n-Status DeserializeTensor(const SerializedPyObject& object, std::shared_ptr<Tensor>* out);\n+Status DeserializeNdarray(const SerializedPyObject& object, std::shared_ptr<Tensor>* out);\n \n ARROW_EXPORT\n-Status ReadTensor(std::shared_ptr<Buffer> src, std::shared_ptr<Tensor>* out);\n+Status NdarrayFromBuffer(std::shared_ptr<Buffer> src, std::shared_ptr<Tensor>* out);\n \n }  // namespace py\n }  // namespace arrow\ndiff --git a/cpp/src/arrow/python/serialize.cc b/cpp/src/arrow/python/serialize.cc\nindex 2655280067..7911557ee7 100644\n--- a/cpp/src/arrow/python/serialize.cc\n+++ b/cpp/src/arrow/python/serialize.cc\n@@ -752,23 +752,23 @@ Status SerializeObject(PyObject* context, PyObject* sequence, SerializedPyObject\n   return Status::OK();\n }\n \n-Status SerializeTensor(std::shared_ptr<Tensor> tensor, SerializedPyObject* out) {\n+Status SerializeNdarray(std::shared_ptr<Tensor> tensor, SerializedPyObject* out) {\n   std::shared_ptr<Array> array;\n   SequenceBuilder builder;\n-  RETURN_NOT_OK(builder.AppendTensor(static_cast<int32_t>(out->tensors.size())));\n-  out->tensors.push_back(tensor);\n+  RETURN_NOT_OK(builder.AppendNdarray(static_cast<int32_t>(out->ndarrays.size())));\n+  out->ndarrays.push_back(tensor);\n   RETURN_NOT_OK(builder.Finish(nullptr, nullptr, nullptr, nullptr, &array));\n   out->batch = MakeBatch(array);\n   return Status::OK();\n }\n \n-Status WriteTensorHeader(std::shared_ptr<DataType> dtype,\n-                         const std::vector<int64_t>& shape, int64_t tensor_num_bytes,\n-                         io::OutputStream* dst) {\n+Status WriteNdarrayHeader(std::shared_ptr<DataType> dtype,\n+                          const std::vector<int64_t>& shape, int64_t tensor_num_bytes,\n+                          io::OutputStream* dst) {\n   auto empty_tensor = std::make_shared<Tensor>(\n       dtype, std::make_shared<Buffer>(nullptr, tensor_num_bytes), shape);\n   SerializedPyObject serialized_tensor;\n-  RETURN_NOT_OK(SerializeTensor(empty_tensor, &serialized_tensor));\n+  RETURN_NOT_OK(SerializeNdarray(empty_tensor, &serialized_tensor));\n   return serialized_tensor.WriteTo(dst);\n }\n \ndiff --git a/cpp/src/arrow/python/serialize.h b/cpp/src/arrow/python/serialize.h\nindex f11cb5a1bf..2759d0c9f1 100644\n--- a/cpp/src/arrow/python/serialize.h\n+++ b/cpp/src/arrow/python/serialize.h\n@@ -103,9 +103,9 @@ Status SerializeTensor(std::shared_ptr<Tensor> tensor, py::SerializedPyObject* o\n /// \\param[in] dst The OutputStream to write the Tensor header to\n /// \\return Status\n ARROW_EXPORT\n-Status WriteTensorHeader(std::shared_ptr<DataType> dtype,\n-                         const std::vector<int64_t>& shape, int64_t tensor_num_bytes,\n-                         io::OutputStream* dst);\n+Status WriteNdarrayHeader(std::shared_ptr<DataType> dtype,\n+                          const std::vector<int64_t>& shape, int64_t tensor_num_bytes,\n+                          io::OutputStream* dst);\n \n }  // namespace py\n \ndiff --git a/python/pyarrow/tensorflow/plasma_op.cc b/python/pyarrow/tensorflow/plasma_op.cc\nindex 15ae0dc69b..a341d5a539 100644\n--- a/python/pyarrow/tensorflow/plasma_op.cc\n+++ b/python/pyarrow/tensorflow/plasma_op.cc\n@@ -77,8 +77,7 @@ class TensorToPlasmaOp : public tf::AsyncOpKernel {\n     if (!connected_) {\n       VLOG(1) << \"Connecting to Plasma...\";\n       ARROW_CHECK_OK(client_.Connect(plasma_store_socket_name_,\n-                                     plasma_manager_socket_name_,\n-                                     plasma::kPlasmaDefaultReleaseDelay));\n+                                     plasma_manager_socket_name_, 0));\n       VLOG(1) << \"Connected!\";\n       connected_ = true;\n     }\n@@ -141,7 +140,7 @@ class TensorToPlasmaOp : public tf::AsyncOpKernel {\n     std::vector<int64_t> shape = {total_bytes / byte_width};\n \n     arrow::io::MockOutputStream mock;\n-    ARROW_CHECK_OK(arrow::py::WriteTensorHeader(arrow_dtype, shape, 0, &mock));\n+    ARROW_CHECK_OK(arrow::py::WriteNdarrayHeader(arrow_dtype, shape, 0, &mock));\n     int64_t header_size = mock.GetExtentBytesWritten();\n \n     std::shared_ptr<Buffer> data_buffer;\n@@ -153,15 +152,21 @@ class TensorToPlasmaOp : public tf::AsyncOpKernel {\n \n     int64_t offset;\n     arrow::io::FixedSizeBufferWriter buf(data_buffer);\n-    ARROW_CHECK_OK(arrow::py::WriteTensorHeader(arrow_dtype, shape, total_bytes, &buf));\n+    ARROW_CHECK_OK(arrow::py::WriteNdarrayHeader(arrow_dtype, shape, total_bytes, &buf));\n     ARROW_CHECK_OK(buf.Tell(&offset));\n \n     uint8_t* data = reinterpret_cast<uint8_t*>(data_buffer->mutable_data() + offset);\n \n-    auto wrapped_callback = [this, context, done, data_buffer, object_id]() {\n+    auto wrapped_callback = [this, context, done, data_buffer, data, object_id]() {\n       {\n         tf::mutex_lock lock(mu_);\n         ARROW_CHECK_OK(client_.Seal(object_id));\n+        ARROW_CHECK_OK(client_.Release(object_id));\n+#ifdef GOOGLE_CUDA\n+        auto orig_stream = context->op_device_context()->stream();\n+        auto stream_executor = orig_stream->parent();\n+        CHECK(stream_executor->HostMemoryUnregister(static_cast<void*>(data)));\n+#endif\n       }\n       context->SetStatus(tensorflow::Status::OK());\n       done();\n@@ -244,8 +249,7 @@ class PlasmaToTensorOp : public tf::AsyncOpKernel {\n     if (!connected_) {\n       VLOG(1) << \"Connecting to Plasma...\";\n       ARROW_CHECK_OK(client_.Connect(plasma_store_socket_name_,\n-                                     plasma_manager_socket_name_,\n-                                     plasma::kPlasmaDefaultReleaseDelay));\n+                                     plasma_manager_socket_name_, 0));\n       VLOG(1) << \"Connected!\";\n       connected_ = true;\n     }\n@@ -284,25 +288,39 @@ class PlasmaToTensorOp : public tf::AsyncOpKernel {\n                                  /*timeout_ms=*/-1, &object_buffer));\n     }\n \n-    std::shared_ptr<arrow::Tensor> tensor;\n-    ARROW_CHECK_OK(arrow::py::ReadTensor(object_buffer.data, &tensor));\n+    std::shared_ptr<arrow::Tensor> ndarray;\n+    ARROW_CHECK_OK(arrow::py::NdarrayFromBuffer(object_buffer.data, &ndarray));\n \n-    int64_t byte_width = get_byte_width(*tensor->type());\n-    const int64_t size_in_bytes = tensor->data()->size();\n+    int64_t byte_width = get_byte_width(*ndarray->type());\n+    const int64_t size_in_bytes = ndarray->data()->size();\n \n     tf::TensorShape shape({static_cast<int64_t>(size_in_bytes / byte_width)});\n \n-    const float* plasma_data = reinterpret_cast<const float*>(tensor->raw_data());\n+    const float* plasma_data = reinterpret_cast<const float*>(ndarray->raw_data());\n \n     tf::Tensor* output_tensor = nullptr;\n     OP_REQUIRES_OK_ASYNC(context, context->allocate_output(0, shape, &output_tensor),\n                          done);\n \n+    auto wrapped_callback = [this, context, done, plasma_data, object_id]() {\n+      {\n+        tf::mutex_lock lock(mu_);\n+        ARROW_CHECK_OK(client_.Release(object_id));\n+#ifdef GOOGLE_CUDA\n+        auto orig_stream = context->op_device_context()->stream();\n+        auto stream_executor = orig_stream->parent();\n+        CHECK(stream_executor->HostMemoryUnregister(\n+            const_cast<void*>(static_cast<const void*>(plasma_data))));\n+#endif\n+      }\n+      done();\n+    };\n+\n     if (std::is_same<Device, CPUDevice>::value) {\n       std::memcpy(\n           reinterpret_cast<void*>(const_cast<char*>(output_tensor->tensor_data().data())),\n           plasma_data, size_in_bytes);\n-      done();\n+      wrapped_callback();\n     } else {\n #ifdef GOOGLE_CUDA\n       auto orig_stream = context->op_device_context()->stream();\n@@ -319,8 +337,6 @@ class PlasmaToTensorOp : public tf::AsyncOpKernel {\n       }\n \n       // Important.  See note in T2P op.\n-      // We don't check the return status since the host memory might've been\n-      // already registered (e.g., the TensorToPlasmaOp might've been run).\n       CHECK(stream_executor->HostMemoryRegister(\n           const_cast<void*>(static_cast<const void*>(plasma_data)),\n           static_cast<tf::uint64>(size_in_bytes)));\n@@ -341,7 +357,7 @@ class PlasmaToTensorOp : public tf::AsyncOpKernel {\n       CHECK(orig_stream->ThenWaitFor(h2d_stream).ok());\n \n       context->device()->tensorflow_gpu_device_info()->event_mgr->ThenExecute(\n-          h2d_stream, std::move(done));\n+          h2d_stream, std::move(wrapped_callback));\n #endif\n     }\n   }\ndiff --git a/python/pyarrow/tests/test_plasma_tf_op.py b/python/pyarrow/tests/test_plasma_tf_op.py\nindex b7e1afa883..d9bf915d66 100644\n--- a/python/pyarrow/tests/test_plasma_tf_op.py\n+++ b/python/pyarrow/tests/test_plasma_tf_op.py\n@@ -70,7 +70,6 @@ def FromPlasma():\n     # Try getting the data from Python\n     plasma_object_id = plasma.ObjectID(object_id)\n     obj = client.get(plasma_object_id)\n-    obj = obj.to_numpy()\n \n     # Deserialized Tensor should be 64-byte aligned.\n     assert obj.ctypes.data % 64 == 0\n@@ -100,3 +99,7 @@ def test_plasma_tf_op(use_gpu=False):\n                       np.int8, np.int16, np.int32, np.int64]:\n             run_tensorflow_test_with_dtype(tf, plasma, plasma_store_name,\n                                            client, use_gpu, dtype)\n+\n+        # Make sure the objects have been released.\n+        for _, info in client.list().items():\n+            assert info['ref_count'] == 0\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-01T08:27:13.044+0000",
                    "updated": "2018-12-01T08:27:13.044+0000",
                    "started": "2018-12-01T08:27:13.043+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "171296",
                    "issueId": "13201733"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 4200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3de73a22[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b96ac7a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@28e663c7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@66ddefdd[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77f7be8e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@787e74f7[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@639dd864[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6a3770cd[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@207eb0cb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2b2ca1ff[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26ff1206[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@779fbf0c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 4200,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Dec 01 08:27:06 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-12-01T08:27:06.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3920/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-11-30T22:35:59.000+0000",
        "updated": "2018-12-01T08:27:13.000+0000",
        "timeoriginalestimate": null,
        "description": "We never call {{Release}} in the custom op code.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 4200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "Plasma reference counting not properly done in TensorFlow custom operator.",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13201733/comment/16705722",
                    "id": "16705722",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
                        "name": "pcmoritz",
                        "key": "pcmoritz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Philipp Moritz",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 3061\n[https://github.com/apache/arrow/pull/3061]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
                        "name": "pcmoritz",
                        "key": "pcmoritz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Philipp Moritz",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-12-01T08:27:06.246+0000",
                    "updated": "2018-12-01T08:27:06.246+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s0127s:",
        "customfield_12314139": null
    }
}