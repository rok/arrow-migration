{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13180002",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13180002",
    "key": "ARROW-3094",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343066",
                "id": "12343066",
                "description": "",
                "name": "0.11.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-10-08"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3094/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 3,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13180002/worklog/136178",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #2450: ARROW-3094: [Python] Easier construction of schemas and struct types\nURL: https://github.com/apache/arrow/pull/2450\n \n \n   Allow calling `pa.schema()` and `pa.struct()` with a list of tuples, or a mapping of strings to datatypes, instead of having to call `pa.field()` explicitly for each field. The latter is still possible if e.g. wanting to pass metadata.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-20T17:12:58.992+0000",
                    "updated": "2018-08-20T17:12:58.992+0000",
                    "started": "2018-08-20T17:12:58.992+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "136178",
                    "issueId": "13180002"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13180002/worklog/136573",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2450: ARROW-3094: [Python] Easier construction of schemas and struct types\nURL: https://github.com/apache/arrow/pull/2450#issuecomment-414717945\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2450?src=pr&el=h1) Report\n   > Merging [#2450](https://codecov.io/gh/apache/arrow/pull/2450?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/94e8196ff925e2a8051ac330a02bee0dc63702c8?src=pr&el=desc) will **increase** coverage by `1.28%`.\n   > The diff coverage is `95.34%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2450/graphs/tree.svg?width=650&src=pr&token=LpTCFbqVT1&height=150)](https://codecov.io/gh/apache/arrow/pull/2450?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2450      +/-   ##\n   ==========================================\n   + Coverage   86.12%   87.41%   +1.28%     \n   ==========================================\n     Files         306      244      -62     \n     Lines       46591    42960    -3631     \n   ==========================================\n   - Hits        40126    37553    -2573     \n   + Misses       6391     5407     -984     \n   + Partials       74        0      -74\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2450?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/tests/test\\_types.py](https://codecov.io/gh/apache/arrow/pull/2450/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF90eXBlcy5weQ==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_schema.py](https://codecov.io/gh/apache/arrow/pull/2450/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9zY2hlbWEucHk=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/types.pxi](https://codecov.io/gh/apache/arrow/pull/2450/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdHlwZXMucHhp) | `58.47% <88.23%> (+0.6%)` | :arrow_up: |\n   | [cpp/src/arrow/status.h](https://codecov.io/gh/apache/arrow/pull/2450/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zdGF0dXMuaA==) | `95.29% <0%> (\u00f8)` | :arrow_up: |\n   | [rust/src/bitmap.rs](https://codecov.io/gh/apache/arrow/pull/2450/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYml0bWFwLnJz) | | |\n   | [go/arrow/memory/go\\_allocator.go](https://codecov.io/gh/apache/arrow/pull/2450/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L2dvX2FsbG9jYXRvci5nbw==) | | |\n   | [go/arrow/math/int64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2450/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/datatype\\_numeric.gen.go](https://codecov.io/gh/apache/arrow/pull/2450/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbnVtZXJpYy5nZW4uZ28=) | | |\n   | [go/arrow/type\\_string.go](https://codecov.io/gh/apache/arrow/pull/2450/diff?src=pr&el=tree#diff-Z28vYXJyb3cvdHlwZV9zdHJpbmcuZ28=) | | |\n   | [go/arrow/datatype\\_nested.go](https://codecov.io/gh/apache/arrow/pull/2450/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbmVzdGVkLmdv) | | |\n   | ... and [56 more](https://codecov.io/gh/apache/arrow/pull/2450/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2450?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2450?src=pr&el=footer). Last update [94e8196...4b27541](https://codecov.io/gh/apache/arrow/pull/2450?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-21T15:33:22.567+0000",
                    "updated": "2018-08-21T15:33:22.567+0000",
                    "started": "2018-08-21T15:33:22.566+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "136573",
                    "issueId": "13180002"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13180002/worklog/136582",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2450: ARROW-3094: [Python] Easier construction of schemas and struct types\nURL: https://github.com/apache/arrow/pull/2450\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/doc/source/data.rst b/python/doc/source/data.rst\nindex f54cba1e2f..3260f6d637 100644\n--- a/python/doc/source/data.rst\n+++ b/python/doc/source/data.rst\n@@ -18,8 +18,8 @@\n .. currentmodule:: pyarrow\n .. _data:\n \n-In-Memory Data Model\n-====================\n+Data Types and In-Memory Data Model\n+===================================\n \n Apache Arrow defines columnar array data structures by composing type metadata\n with memory buffers, like the ones explained in the documentation on\n@@ -107,12 +107,22 @@ A `struct` is a collection of named fields:\n        pa.field('s0', t1),\n        pa.field('s1', t2),\n        pa.field('s2', t4),\n-       pa.field('s3', t6)\n+       pa.field('s3', t6),\n    ]\n \n    t7 = pa.struct(fields)\n    print(t7)\n \n+For convenience, you can pass ``(name, type)`` tuples directly instead of\n+:class:`~pyarrow.Field` instances:\n+\n+.. ipython:: python\n+\n+   t8 = pa.struct([('s0', t1), ('s1', t2), ('s2', t4), ('s3', t6)])\n+   print(t8)\n+   t8 == t7\n+\n+\n See :ref:`Data Types API <api.types>` for a full listing of data type\n functions.\n \n@@ -123,19 +133,15 @@ Schemas\n \n The :class:`~pyarrow.Schema` type is similar to the ``struct`` array type; it\n defines the column names and types in a record batch or table data\n-structure. The ``pyarrow.schema`` factory function makes new Schema objects in\n+structure. The :func:`pyarrow.schema` factory function makes new Schema objects in\n Python:\n \n .. ipython:: python\n \n-   fields = [\n-       pa.field('s0', t1),\n-       pa.field('s1', t2),\n-       pa.field('s2', t4),\n-       pa.field('s3', t6)\n-   ]\n-\n-   my_schema = pa.schema(fields)\n+   my_schema = pa.schema([('field0', t1),\n+                          ('field1', t2),\n+                          ('field2', t4),\n+                          ('field3', t6)])\n    my_schema\n \n In some applications, you may not create schemas directly, only using the ones\n@@ -233,10 +239,8 @@ sequence of Python dicts or tuples:\n \n .. ipython:: python\n \n-   ty = pa.struct([\n-       pa.field('x', pa.int8()),\n-       pa.field('y', pa.bool_()),\n-   ])\n+   ty = pa.struct([('x', pa.int8()),\n+                   ('y', pa.bool_())])\n    pa.array([{'x': 1, 'y': True}, {'x': 2, 'y': False}], type=ty)\n    pa.array([(3, True), (4, False)], type=ty)\n \ndiff --git a/python/pyarrow/tests/test_schema.py b/python/pyarrow/tests/test_schema.py\nindex fed6787409..d358f12b19 100644\n--- a/python/pyarrow/tests/test_schema.py\n+++ b/python/pyarrow/tests/test_schema.py\n@@ -15,6 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n \n+from collections import OrderedDict\n import pickle\n \n import pytest\n@@ -206,6 +207,7 @@ def test_schema():\n     sch = pa.schema(fields)\n \n     assert sch.names == ['foo', 'bar', 'baz']\n+    assert sch.types == [pa.int32(), pa.string(), pa.list_(pa.int8())]\n \n     assert len(sch) == 3\n     assert sch[0].name == 'foo'\n@@ -220,6 +222,40 @@ def test_schema():\n   child 0, item: int8\"\"\"\n \n \n+def test_schema_from_tuples():\n+    fields = [\n+        ('foo', pa.int32()),\n+        ('bar', pa.string()),\n+        ('baz', pa.list_(pa.int8())),\n+    ]\n+    sch = pa.schema(fields)\n+    assert sch.names == ['foo', 'bar', 'baz']\n+    assert sch.types == [pa.int32(), pa.string(), pa.list_(pa.int8())]\n+    assert len(sch) == 3\n+    assert repr(sch) == \"\"\"\\\n+foo: int32\n+bar: string\n+baz: list<item: int8>\n+  child 0, item: int8\"\"\"\n+\n+\n+def test_schema_from_mapping():\n+    fields = OrderedDict([\n+        ('foo', pa.int32()),\n+        ('bar', pa.string()),\n+        ('baz', pa.list_(pa.int8())),\n+    ])\n+    sch = pa.schema(fields)\n+    assert sch.names == ['foo', 'bar', 'baz']\n+    assert sch.types == [pa.int32(), pa.string(), pa.list_(pa.int8())]\n+    assert len(sch) == 3\n+    assert repr(sch) == \"\"\"\\\n+foo: int32\n+bar: string\n+baz: list<item: int8>\n+  child 0, item: int8\"\"\"\n+\n+\n def test_field_flatten():\n     f0 = pa.field('foo', pa.int32()).add_metadata({b'foo': b'bar'})\n     assert f0.flatten() == [f0]\ndiff --git a/python/pyarrow/tests/test_types.py b/python/pyarrow/tests/test_types.py\nindex c0f593080c..aaf2e36876 100644\n--- a/python/pyarrow/tests/test_types.py\n+++ b/python/pyarrow/tests/test_types.py\n@@ -15,6 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n \n+from collections import OrderedDict\n import pickle\n \n import pytest\n@@ -233,6 +234,23 @@ def test_struct_type():\n     for a, b in zip(ty, fields):\n         a == b\n \n+    # Construct from list of tuples\n+    ty = pa.struct([('a', pa.int64()),\n+                    ('a', pa.int32()),\n+                    ('b', pa.int32())])\n+    assert list(ty) == fields\n+    for a, b in zip(ty, fields):\n+        a == b\n+\n+    # Construct from mapping\n+    fields = [pa.field('a', pa.int64()),\n+              pa.field('b', pa.int32())]\n+    ty = pa.struct(OrderedDict([('a', pa.int64()),\n+                                ('b', pa.int32())]))\n+    assert list(ty) == fields\n+    for a, b in zip(ty, fields):\n+        a == b\n+\n \n def test_union_type():\n     def check_fields(ty, fields):\ndiff --git a/python/pyarrow/types.pxi b/python/pyarrow/types.pxi\nindex c8bf643be0..818fa74bb4 100644\n--- a/python/pyarrow/types.pxi\n+++ b/python/pyarrow/types.pxi\n@@ -15,6 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n \n+import collections\n import re\n \n # These are imprecise because the type (in pandas 0.x) depends on the presence\n@@ -498,6 +499,13 @@ cdef class Schema:\n \n     @property\n     def names(self):\n+        \"\"\"\n+        The schema's field names.\n+\n+        Returns\n+        -------\n+        list of str\n+        \"\"\"\n         cdef int i\n         result = []\n         for i in range(self.schema.num_fields()):\n@@ -505,6 +513,17 @@ cdef class Schema:\n             result.append(name)\n         return result\n \n+    @property\n+    def types(self):\n+        \"\"\"\n+        The schema's field types.\n+\n+        Returns\n+        -------\n+        list of DataType\n+        \"\"\"\n+        return [field.type for field in self]\n+\n     @property\n     def metadata(self):\n         cdef shared_ptr[const CKeyValueMetadata] metadata = (\n@@ -1221,16 +1240,22 @@ def struct(fields):\n \n     Parameters\n     ----------\n-    fields : sequence of Field values\n+    fields : iterable of Fields or tuples, or mapping of strings to DataTypes\n \n     Examples\n     --------\n     ::\n \n         import pyarrow as pa\n+        fields = [\n+            ('f1', pa.int32()),\n+            ('f2', pa.string()),\n+        ]\n+        struct_type = pa.struct(fields)\n+\n         fields = [\n             pa.field('f1', pa.int32()),\n-            pa.field('f2', pa.string())\n+            pa.field('f2', pa.string(), nullable=false),\n         ]\n         struct_type = pa.struct(fields)\n \n@@ -1239,12 +1264,19 @@ def struct(fields):\n     type : DataType\n     \"\"\"\n     cdef:\n-        Field field\n+        Field py_field\n         vector[shared_ptr[CField]] c_fields\n         cdef shared_ptr[CDataType] struct_type\n \n-    for field in fields:\n-        c_fields.push_back(field.sp_field)\n+    if isinstance(fields, collections.Mapping):\n+        fields = fields.items()\n+\n+    for item in fields:\n+        if isinstance(item, tuple):\n+            py_field = field(*item)\n+        else:\n+            py_field = item\n+        c_fields.push_back(py_field.sp_field)\n \n     struct_type.reset(new CStructType(c_fields))\n     return pyarrow_wrap_data_type(struct_type)\n@@ -1368,10 +1400,21 @@ def schema(fields, dict metadata=None):\n \n     Parameters\n     ----------\n-    field : list or iterable\n+    field : iterable of Fields or tuples, or mapping of strings to DataTypes\n     metadata : dict, default None\n         Keys and values must be coercible to bytes\n \n+    Examples\n+    --------\n+    ::\n+\n+        import pyarrow as pa\n+        fields = [\n+            ('some_int', pa.int32()),\n+            ('some_string', pa.string()),\n+        ]\n+        schema = pa.schema(fields)\n+\n     Returns\n     -------\n     schema : pyarrow.Schema\n@@ -1380,11 +1423,18 @@ def schema(fields, dict metadata=None):\n         shared_ptr[CKeyValueMetadata] c_meta\n         shared_ptr[CSchema] c_schema\n         Schema result\n-        Field field\n+        Field py_field\n         vector[shared_ptr[CField]] c_fields\n \n-    for i, field in enumerate(fields):\n-        c_fields.push_back(field.sp_field)\n+    if isinstance(fields, collections.Mapping):\n+        fields = fields.items()\n+\n+    for item in fields:\n+        if isinstance(item, tuple):\n+            py_field = field(*item)\n+        else:\n+            py_field = item\n+        c_fields.push_back(py_field.sp_field)\n \n     if metadata is not None:\n         convert_metadata(metadata, &c_meta)\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-21T15:51:38.447+0000",
                    "updated": "2018-08-21T15:51:38.447+0000",
                    "started": "2018-08-21T15:51:38.444+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "136582",
                    "issueId": "13180002"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
            "id": "5",
            "description": "General wishlist item.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Wish",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 1800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3796e12b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@265925d0[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@14a6caf6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7bbe0a17[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6025cf7d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3b306bfc[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1963e716[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1286a89f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c16c395[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@64c12c60[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@621c3cb9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4579a235[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 1800,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Aug 21 15:51:28 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-08-21T15:51:28.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3094/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-08-20T16:38:31.000+0000",
        "updated": "2018-10-02T14:29:41.000+0000",
        "timeoriginalestimate": null,
        "description": "One shouldn't have to call {{pa.field}} explicitly. See this example:\r\nhttps://github.com/apache/arrow/pull/2449/files#diff-a01a3e7cbe0d7dd0ec300a725ac0c0c6R148\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "0.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 1800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Allow lighter construction of pa.Schema / pa.StructType",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13180002/comment/16587625",
                    "id": "16587625",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2450\n[https://github.com/apache/arrow/pull/2450]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-08-21T15:51:28.802+0000",
                    "updated": "2018-08-21T15:51:28.802+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3x86v:",
        "customfield_12314139": null
    }
}