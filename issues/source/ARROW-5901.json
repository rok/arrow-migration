{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13244093",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093",
    "key": "ARROW-5901",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=liurenjie1024",
            "name": "liurenjie1024",
            "key": "liurenjie1024",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Renjie Liu",
            "active": true,
            "timeZone": "Asia/Chongqing"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=liurenjie1024",
            "name": "liurenjie1024",
            "key": "liurenjie1024",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Renjie Liu",
            "active": true,
            "timeZone": "Asia/Chongqing"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=liurenjie1024",
            "name": "liurenjie1024",
            "key": "liurenjie1024",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Renjie Liu",
            "active": true,
            "timeZone": "Asia/Chongqing"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5901/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 18,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/283916",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940#discussion_r308012042\n \n \n\n ##########\n File path: rust/arrow/src/array/equal.rs\n ##########\n @@ -418,6 +420,171 @@ fn value_offset_equal<T: Array + ListArrayOps>(this: &T, other: &T) -> bool {\n     true\n }\n \n+/// Trait for comparing arrow array with json array\n+pub trait JsonEqual {\n+    fn equals_json(&self, json: &[&Value]) -> bool;\n \n Review comment:\n   may you please add a doc to these functions\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-28T18:31:40.864+0000",
                    "updated": "2019-07-28T18:31:40.864+0000",
                    "started": "2019-07-28T18:31:40.864+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283916",
                    "issueId": "13244093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/283917",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940#discussion_r308012477\n \n \n\n ##########\n File path: rust/arrow/src/array/equal.rs\n ##########\n @@ -418,6 +420,171 @@ fn value_offset_equal<T: Array + ListArrayOps>(this: &T, other: &T) -> bool {\n     true\n }\n \n+/// Trait for comparing arrow array with json array\n+pub trait JsonEqual {\n+    fn equals_json(&self, json: &[&Value]) -> bool;\n+\n+    fn equals_json_values(&self, json: &[Value]) -> bool {\n+        let refs = json.iter().map(|v| v).collect::<Vec<&Value>>();\n \n Review comment:\n   Why do you `map()` here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-28T18:31:40.865+0000",
                    "updated": "2019-07-28T18:31:40.865+0000",
                    "started": "2019-07-28T18:31:40.865+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283917",
                    "issueId": "13244093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/283918",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940#discussion_r308012219\n \n \n\n ##########\n File path: rust/arrow/src/datatypes.rs\n ##########\n @@ -121,17 +122,71 @@ pub trait ArrowPrimitiveType: 'static {\n     fn default_value() -> Self::Native;\n }\n \n-impl ArrowNativeType for bool {}\n-impl ArrowNativeType for i8 {}\n-impl ArrowNativeType for i16 {}\n-impl ArrowNativeType for i32 {}\n-impl ArrowNativeType for i64 {}\n-impl ArrowNativeType for u8 {}\n-impl ArrowNativeType for u16 {}\n-impl ArrowNativeType for u32 {}\n-impl ArrowNativeType for u64 {}\n-impl ArrowNativeType for f32 {}\n-impl ArrowNativeType for f64 {}\n+impl ArrowNativeType for bool {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(self.into())\n+    }\n+}\n+\n+impl ArrowNativeType for i8 {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(VNumber(Number::from(self)))\n+    }\n+}\n+\n+impl ArrowNativeType for i16 {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(VNumber(Number::from(self)))\n+    }\n+}\n+\n+impl ArrowNativeType for i32 {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(VNumber(Number::from(self)))\n+    }\n+}\n+\n+impl ArrowNativeType for i64 {\n \n Review comment:\n   Is it fine that we implement this on `ArrowNativeType` (for i{32|64} which can also be dates and times)? Should we support temporal arrays? I know with time, we don't really have a JSON format, but we could have JSON timestamps that we might benefit from comparing.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-28T18:31:40.866+0000",
                    "updated": "2019-07-28T18:31:40.866+0000",
                    "started": "2019-07-28T18:31:40.865+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283918",
                    "issueId": "13244093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/283919",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940#discussion_r308011983\n \n \n\n ##########\n File path: rust/arrow/src/array/array.rs\n ##########\n @@ -999,6 +1007,25 @@ impl StructArray {\n     pub fn columns(&self) -> Vec<&ArrayRef> {\n         self.boxed_fields.iter().collect()\n     }\n+\n+    /// Return field names in this struct array\n+    pub fn column_names(&self) -> Vec<&str> {\n+        match self.data.data_type() {\n+            Struct(fields) => fields\n+                .iter()\n+                .map(|f| f.name().as_str())\n+                .collect::<Vec<&str>>(),\n+            _ => panic!(\"Struct array's data type is not struct!\"),\n \n Review comment:\n   if this is guaranteed to never happen, you could use `unreachable!()` instead?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-28T18:31:41.070+0000",
                    "updated": "2019-07-28T18:31:41.070+0000",
                    "started": "2019-07-28T18:31:41.069+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283919",
                    "issueId": "13244093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/283920",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940#discussion_r308012294\n \n \n\n ##########\n File path: rust/arrow/src/array/equal.rs\n ##########\n @@ -418,6 +420,171 @@ fn value_offset_equal<T: Array + ListArrayOps>(this: &T, other: &T) -> bool {\n     true\n }\n \n+/// Trait for comparing arrow array with json array\n+pub trait JsonEqual {\n+    fn equals_json(&self, json: &[&Value]) -> bool;\n+\n+    fn equals_json_values(&self, json: &[Value]) -> bool {\n+        let refs = json.iter().map(|v| v).collect::<Vec<&Value>>();\n+\n+        self.equals_json(&refs)\n+    }\n+}\n+\n+/// Implement array equals for numeric type\n+impl<T: ArrowPrimitiveType> JsonEqual for PrimitiveArray<T> {\n+    fn equals_json(&self, json: &[&Value]) -> bool {\n+        if self.len() != json.len() {\n+            return false;\n+        }\n+\n+        let result = (0..self.len()).all(|i| match json[i] {\n+            Value::Null => self.is_null(i),\n+            v => self.is_valid(i) && Some(v) == self.value(i).into_json_value().as_ref(),\n+        });\n+\n+        result\n+    }\n+}\n+\n+impl<T: ArrowPrimitiveType> PartialEq<Value> for PrimitiveArray<T> {\n+    fn eq(&self, json: &Value) -> bool {\n+        match json {\n+            Value::Array(array) => self.equals_json_values(&array),\n+            _ => false,\n+        }\n+    }\n+}\n+\n+impl<T: ArrowPrimitiveType> PartialEq<PrimitiveArray<T>> for Value {\n+    fn eq(&self, arrow: &PrimitiveArray<T>) -> bool {\n+        match self {\n+            Value::Array(array) => arrow.equals_json_values(&array),\n+            _ => false,\n+        }\n+    }\n+}\n+\n+impl JsonEqual for ListArray {\n+    fn equals_json(&self, json: &[&Value]) -> bool {\n+        if self.len() != json.len() {\n+            return false;\n+        }\n+\n+        let result = (0..self.len()).all(|i| match json[i] {\n+            Value::Array(v) => self.is_valid(i) && self.value(i).equals_json_values(v),\n+            Value::Null => self.is_null(i) || self.value_length(i) == 0,\n+            _ => false,\n+        });\n+\n+        result\n+    }\n+}\n+\n+impl PartialEq<Value> for ListArray {\n+    fn eq(&self, json: &Value) -> bool {\n+        match json {\n+            Value::Array(json_array) => self.equals_json_values(json_array),\n+            _ => false,\n+        }\n+    }\n+}\n+\n+impl PartialEq<ListArray> for Value {\n+    fn eq(&self, arrow: &ListArray) -> bool {\n+        match self {\n+            Value::Array(json_array) => arrow.equals_json_values(json_array),\n+            _ => false,\n+        }\n+    }\n+}\n+\n+impl JsonEqual for StructArray {\n+    fn equals_json(&self, json: &[&Value]) -> bool {\n+        if self.len() != json.len() {\n+            return false;\n+        }\n+\n+        let all_object = json.iter().all(|v| match v {\n+            Object(_) | JNull => true,\n+            _ => false,\n+        });\n+\n+        if !all_object {\n+            println!(\"Not all objects\");\n \n Review comment:\n   nit: should we keep these `println!()` here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-28T18:31:43.808+0000",
                    "updated": "2019-07-28T18:31:43.808+0000",
                    "started": "2019-07-28T18:31:43.808+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283920",
                    "issueId": "13244093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/284006",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liurenjie1024 commented on pull request #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940#discussion_r308049996\n \n \n\n ##########\n File path: rust/arrow/src/array/array.rs\n ##########\n @@ -999,6 +1007,25 @@ impl StructArray {\n     pub fn columns(&self) -> Vec<&ArrayRef> {\n         self.boxed_fields.iter().collect()\n     }\n+\n+    /// Return field names in this struct array\n+    pub fn column_names(&self) -> Vec<&str> {\n+        match self.data.data_type() {\n+            Struct(fields) => fields\n+                .iter()\n+                .map(|f| f.name().as_str())\n+                .collect::<Vec<&str>>(),\n+            _ => panic!(\"Struct array's data type is not struct!\"),\n \n Review comment:\n   Thanks for this hint.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T04:11:43.669+0000",
                    "updated": "2019-07-29T04:11:43.669+0000",
                    "started": "2019-07-29T04:11:43.668+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284006",
                    "issueId": "13244093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/284007",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liurenjie1024 commented on pull request #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940#discussion_r308050018\n \n \n\n ##########\n File path: rust/arrow/src/array/equal.rs\n ##########\n @@ -418,6 +420,171 @@ fn value_offset_equal<T: Array + ListArrayOps>(this: &T, other: &T) -> bool {\n     true\n }\n \n+/// Trait for comparing arrow array with json array\n+pub trait JsonEqual {\n+    fn equals_json(&self, json: &[&Value]) -> bool;\n+\n+    fn equals_json_values(&self, json: &[Value]) -> bool {\n+        let refs = json.iter().map(|v| v).collect::<Vec<&Value>>();\n+\n+        self.equals_json(&refs)\n+    }\n+}\n+\n+/// Implement array equals for numeric type\n+impl<T: ArrowPrimitiveType> JsonEqual for PrimitiveArray<T> {\n+    fn equals_json(&self, json: &[&Value]) -> bool {\n+        if self.len() != json.len() {\n+            return false;\n+        }\n+\n+        let result = (0..self.len()).all(|i| match json[i] {\n+            Value::Null => self.is_null(i),\n+            v => self.is_valid(i) && Some(v) == self.value(i).into_json_value().as_ref(),\n+        });\n+\n+        result\n+    }\n+}\n+\n+impl<T: ArrowPrimitiveType> PartialEq<Value> for PrimitiveArray<T> {\n+    fn eq(&self, json: &Value) -> bool {\n+        match json {\n+            Value::Array(array) => self.equals_json_values(&array),\n+            _ => false,\n+        }\n+    }\n+}\n+\n+impl<T: ArrowPrimitiveType> PartialEq<PrimitiveArray<T>> for Value {\n+    fn eq(&self, arrow: &PrimitiveArray<T>) -> bool {\n+        match self {\n+            Value::Array(array) => arrow.equals_json_values(&array),\n+            _ => false,\n+        }\n+    }\n+}\n+\n+impl JsonEqual for ListArray {\n+    fn equals_json(&self, json: &[&Value]) -> bool {\n+        if self.len() != json.len() {\n+            return false;\n+        }\n+\n+        let result = (0..self.len()).all(|i| match json[i] {\n+            Value::Array(v) => self.is_valid(i) && self.value(i).equals_json_values(v),\n+            Value::Null => self.is_null(i) || self.value_length(i) == 0,\n+            _ => false,\n+        });\n+\n+        result\n+    }\n+}\n+\n+impl PartialEq<Value> for ListArray {\n+    fn eq(&self, json: &Value) -> bool {\n+        match json {\n+            Value::Array(json_array) => self.equals_json_values(json_array),\n+            _ => false,\n+        }\n+    }\n+}\n+\n+impl PartialEq<ListArray> for Value {\n+    fn eq(&self, arrow: &ListArray) -> bool {\n+        match self {\n+            Value::Array(json_array) => arrow.equals_json_values(json_array),\n+            _ => false,\n+        }\n+    }\n+}\n+\n+impl JsonEqual for StructArray {\n+    fn equals_json(&self, json: &[&Value]) -> bool {\n+        if self.len() != json.len() {\n+            return false;\n+        }\n+\n+        let all_object = json.iter().all(|v| match v {\n+            Object(_) | JNull => true,\n+            _ => false,\n+        });\n+\n+        if !all_object {\n+            println!(\"Not all objects\");\n \n Review comment:\n   Used for debugging, removed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T04:12:00.810+0000",
                    "updated": "2019-07-29T04:12:00.810+0000",
                    "started": "2019-07-29T04:12:00.810+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284007",
                    "issueId": "13244093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/284008",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liurenjie1024 commented on pull request #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940#discussion_r308050032\n \n \n\n ##########\n File path: rust/arrow/src/array/equal.rs\n ##########\n @@ -418,6 +420,171 @@ fn value_offset_equal<T: Array + ListArrayOps>(this: &T, other: &T) -> bool {\n     true\n }\n \n+/// Trait for comparing arrow array with json array\n+pub trait JsonEqual {\n+    fn equals_json(&self, json: &[&Value]) -> bool;\n+\n+    fn equals_json_values(&self, json: &[Value]) -> bool {\n+        let refs = json.iter().map(|v| v).collect::<Vec<&Value>>();\n \n Review comment:\n   Some mistake, removed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T04:12:08.510+0000",
                    "updated": "2019-07-29T04:12:08.510+0000",
                    "started": "2019-07-29T04:12:08.509+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284008",
                    "issueId": "13244093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/284009",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liurenjie1024 commented on pull request #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940#discussion_r308050177\n \n \n\n ##########\n File path: rust/arrow/src/datatypes.rs\n ##########\n @@ -121,17 +122,71 @@ pub trait ArrowPrimitiveType: 'static {\n     fn default_value() -> Self::Native;\n }\n \n-impl ArrowNativeType for bool {}\n-impl ArrowNativeType for i8 {}\n-impl ArrowNativeType for i16 {}\n-impl ArrowNativeType for i32 {}\n-impl ArrowNativeType for i64 {}\n-impl ArrowNativeType for u8 {}\n-impl ArrowNativeType for u16 {}\n-impl ArrowNativeType for u32 {}\n-impl ArrowNativeType for u64 {}\n-impl ArrowNativeType for f32 {}\n-impl ArrowNativeType for f64 {}\n+impl ArrowNativeType for bool {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(self.into())\n+    }\n+}\n+\n+impl ArrowNativeType for i8 {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(VNumber(Number::from(self)))\n+    }\n+}\n+\n+impl ArrowNativeType for i16 {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(VNumber(Number::from(self)))\n+    }\n+}\n+\n+impl ArrowNativeType for i32 {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(VNumber(Number::from(self)))\n+    }\n+}\n+\n+impl ArrowNativeType for i64 {\n \n Review comment:\n   Do you mean `ArrowPrimitiveType`? In fact I don't think so, because temporal arrays already benefits from this because their native type is i32|i64.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T04:13:34.856+0000",
                    "updated": "2019-07-29T04:13:34.856+0000",
                    "started": "2019-07-29T04:13:34.855+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284009",
                    "issueId": "13244093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/284021",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940#discussion_r308056926\n \n \n\n ##########\n File path: rust/arrow/src/datatypes.rs\n ##########\n @@ -121,17 +122,71 @@ pub trait ArrowPrimitiveType: 'static {\n     fn default_value() -> Self::Native;\n }\n \n-impl ArrowNativeType for bool {}\n-impl ArrowNativeType for i8 {}\n-impl ArrowNativeType for i16 {}\n-impl ArrowNativeType for i32 {}\n-impl ArrowNativeType for i64 {}\n-impl ArrowNativeType for u8 {}\n-impl ArrowNativeType for u16 {}\n-impl ArrowNativeType for u32 {}\n-impl ArrowNativeType for u64 {}\n-impl ArrowNativeType for f32 {}\n-impl ArrowNativeType for f64 {}\n+impl ArrowNativeType for bool {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(self.into())\n+    }\n+}\n+\n+impl ArrowNativeType for i8 {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(VNumber(Number::from(self)))\n+    }\n+}\n+\n+impl ArrowNativeType for i16 {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(VNumber(Number::from(self)))\n+    }\n+}\n+\n+impl ArrowNativeType for i32 {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(VNumber(Number::from(self)))\n+    }\n+}\n+\n+impl ArrowNativeType for i64 {\n \n Review comment:\n   Yes, what I was considering was how we'd consider dates in JSON, as they're normally in the string format of `2019-07-29T05:07:07.771Z`. I think it's not an issue though, so you may disregard my comment :)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T05:07:41.779+0000",
                    "updated": "2019-07-29T05:07:41.779+0000",
                    "started": "2019-07-29T05:07:41.779+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284021",
                    "issueId": "13244093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/284022",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940#discussion_r308056926\n \n \n\n ##########\n File path: rust/arrow/src/datatypes.rs\n ##########\n @@ -121,17 +122,71 @@ pub trait ArrowPrimitiveType: 'static {\n     fn default_value() -> Self::Native;\n }\n \n-impl ArrowNativeType for bool {}\n-impl ArrowNativeType for i8 {}\n-impl ArrowNativeType for i16 {}\n-impl ArrowNativeType for i32 {}\n-impl ArrowNativeType for i64 {}\n-impl ArrowNativeType for u8 {}\n-impl ArrowNativeType for u16 {}\n-impl ArrowNativeType for u32 {}\n-impl ArrowNativeType for u64 {}\n-impl ArrowNativeType for f32 {}\n-impl ArrowNativeType for f64 {}\n+impl ArrowNativeType for bool {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(self.into())\n+    }\n+}\n+\n+impl ArrowNativeType for i8 {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(VNumber(Number::from(self)))\n+    }\n+}\n+\n+impl ArrowNativeType for i16 {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(VNumber(Number::from(self)))\n+    }\n+}\n+\n+impl ArrowNativeType for i32 {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(VNumber(Number::from(self)))\n+    }\n+}\n+\n+impl ArrowNativeType for i64 {\n \n Review comment:\n   Yes, what I was considering was how we'd compare dates in JSON, as they're normally in the string format of `2019-07-29T05:07:07.771Z`. I think it's not an issue though, so you may disregard my comment :)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T05:09:11.329+0000",
                    "updated": "2019-07-29T05:09:11.329+0000",
                    "started": "2019-07-29T05:09:11.329+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284022",
                    "issueId": "13244093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/284027",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940#issuecomment-515850654\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4940?src=pr&el=h1) Report\n   > Merging [#4940](https://codecov.io/gh/apache/arrow/pull/4940?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/f4fcf568c4386e2249a5f7f991d2ec5cf570108f?src=pr&el=desc) will **decrease** coverage by `5.03%`.\n   > The diff coverage is `63.05%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4940/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4940?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #4940       +/-   ##\n   ===========================================\n   - Coverage   87.46%   82.43%    -5.04%     \n   ===========================================\n     Files         994       86      -908     \n     Lines      140562    25068   -115494     \n     Branches     1418        0     -1418     \n   ===========================================\n   - Hits       122943    20664   -102279     \n   + Misses      17257     4404    -12853     \n   + Partials      362        0      -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4940?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/array/array.rs](https://codecov.io/gh/apache/arrow/pull/4940/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXkucnM=) | `92.63% <100%> (+0.06%)` | :arrow_up: |\n   | [rust/arrow/src/array/equal.rs](https://codecov.io/gh/apache/arrow/pull/4940/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvZXF1YWwucnM=) | `79.68% <69.84%> (-3.26%)` | :arrow_down: |\n   | [rust/arrow/src/datatypes.rs](https://codecov.io/gh/apache/arrow/pull/4940/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvZGF0YXR5cGVzLnJz) | `74.67% <9.09%> (-3.96%)` | :arrow_down: |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/4940/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | | |\n   | [cpp/src/arrow/csv/chunker-test.cc](https://codecov.io/gh/apache/arrow/pull/4940/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY2h1bmtlci10ZXN0LmNj) | | |\n   | [cpp/src/parquet/column\\_page.h](https://codecov.io/gh/apache/arrow/pull/4940/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9wYWdlLmg=) | | |\n   | [cpp/src/parquet/bloom\\_filter-test.cc](https://codecov.io/gh/apache/arrow/pull/4940/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Jsb29tX2ZpbHRlci10ZXN0LmNj) | | |\n   | [cpp/src/arrow/array/builder\\_decimal.cc](https://codecov.io/gh/apache/arrow/pull/4940/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2RlY2ltYWwuY2M=) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4940/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [cpp/src/arrow/io/test-common.h](https://codecov.io/gh/apache/arrow/pull/4940/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby90ZXN0LWNvbW1vbi5o) | | |\n   | ... and [902 more](https://codecov.io/gh/apache/arrow/pull/4940/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4940?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4940?src=pr&el=footer). Last update [f4fcf56...cf34907](https://codecov.io/gh/apache/arrow/pull/4940?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T05:33:37.958+0000",
                    "updated": "2019-07-29T05:33:37.958+0000",
                    "started": "2019-07-29T05:33:37.957+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284027",
                    "issueId": "13244093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/284028",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liurenjie1024 commented on pull request #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940#discussion_r308061362\n \n \n\n ##########\n File path: rust/arrow/src/datatypes.rs\n ##########\n @@ -121,17 +122,71 @@ pub trait ArrowPrimitiveType: 'static {\n     fn default_value() -> Self::Native;\n }\n \n-impl ArrowNativeType for bool {}\n-impl ArrowNativeType for i8 {}\n-impl ArrowNativeType for i16 {}\n-impl ArrowNativeType for i32 {}\n-impl ArrowNativeType for i64 {}\n-impl ArrowNativeType for u8 {}\n-impl ArrowNativeType for u16 {}\n-impl ArrowNativeType for u32 {}\n-impl ArrowNativeType for u64 {}\n-impl ArrowNativeType for f32 {}\n-impl ArrowNativeType for f64 {}\n+impl ArrowNativeType for bool {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(self.into())\n+    }\n+}\n+\n+impl ArrowNativeType for i8 {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(VNumber(Number::from(self)))\n+    }\n+}\n+\n+impl ArrowNativeType for i16 {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(VNumber(Number::from(self)))\n+    }\n+}\n+\n+impl ArrowNativeType for i32 {\n+    fn into_json_value(self) -> Option<Value> {\n+        Some(VNumber(Number::from(self)))\n+    }\n+}\n+\n+impl ArrowNativeType for i64 {\n \n Review comment:\n   The challenging part is that primitive array's value method returns T::Native. I think we can still compare temporal type if we serialize date time type to time stamp in json.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T05:37:18.071+0000",
                    "updated": "2019-07-29T05:37:18.071+0000",
                    "started": "2019-07-29T05:37:18.070+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284028",
                    "issueId": "13244093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/284665",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liurenjie1024 commented on issue #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940#issuecomment-516240941\n \n \n   @wesm I noticed that you changed the title, but I can't see difference. Could you tell me the different so that I will not make the mistake again?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T03:03:46.746+0000",
                    "updated": "2019-07-30T03:03:46.746+0000",
                    "started": "2019-07-30T03:03:46.745+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284665",
                    "issueId": "13244093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/284709",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on issue #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940#issuecomment-516266378\n \n \n   @liurenjie1024 he changed the JIRA number, from 5091 to 5901\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T05:20:42.469+0000",
                    "updated": "2019-07-30T05:20:42.469+0000",
                    "started": "2019-07-30T05:20:42.469+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284709",
                    "issueId": "13244093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/284710",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on issue #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940#issuecomment-516266526\n \n \n   @sunchao are you merging it, or should I?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T05:21:23.882+0000",
                    "updated": "2019-07-30T05:21:23.882+0000",
                    "started": "2019-07-30T05:21:23.881+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284710",
                    "issueId": "13244093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/284713",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on issue #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940#issuecomment-516267675\n \n \n   @nevi-me go ahead to merge it \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T05:26:45.519+0000",
                    "updated": "2019-07-30T05:26:45.519+0000",
                    "started": "2019-07-30T05:26:45.518+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284713",
                    "issueId": "13244093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/worklog/284714",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #4940: ARROW-5901: [Rust] Add equals to json arrays.\nURL: https://github.com/apache/arrow/pull/4940\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T05:30:13.773+0000",
                    "updated": "2019-07-30T05:30:13.773+0000",
                    "started": "2019-07-30T05:30:13.772+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284714",
                    "issueId": "13244093"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2f7d9351[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@49f0d497[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6c53b213[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@23489762[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4d01a075[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@583ef011[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@298c022f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4e9863fb[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e5a6055[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@21cbb7f7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@689f449b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@659575c8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 30 05:30:26 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-07-30T05:30:26.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5901/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-07-10T12:00:00.000+0000",
        "updated": "2019-08-01T22:39:44.000+0000",
        "timeoriginalestimate": null,
        "description": "Useful in tests",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Implement PartialEq to compare array and json values",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244093/comment/16895800",
                    "id": "16895800",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "Issue resolved by pull request 4940\n[https://github.com/apache/arrow/pull/4940]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2019-07-30T05:30:26.160+0000",
                    "updated": "2019-07-30T05:30:26.160+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z04j2w:",
        "customfield_12314139": null
    }
}