{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13434441",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434441",
    "key": "ARROW-15964",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "arrow",
            "bug",
            "crash",
            "r"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yogat3ch",
            "name": "yogat3ch",
            "key": "JIRAUSER286756",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Stephen Holsenbeck",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yogat3ch",
            "name": "yogat3ch",
            "key": "JIRAUSER286756",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Stephen Holsenbeck",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/customFieldOption/10431",
                "value": "Important",
                "id": "10431",
                "disabled": false
            }
        ],
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15964/votes",
            "votes": 0,
            "hasVoted": false
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@103f6248[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2a1d401f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56d32ef9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@160e9184[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2d6f771b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@39dff829[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7634ad0d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@14d480fe[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4255ead0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@40d5c03[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5702d54a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@67e16c24[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Mar 22 18:37:50 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": [
            "R"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-03-22T18:37:50.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15964/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2022-03-17T20:52:13.000+0000",
        "updated": "2022-11-23T17:25:28.000+0000",
        "timeoriginalestimate": null,
        "description": "The Reprex is super simple.\r\n\r\n\u00a0\r\n{code:java}\r\narrow::write_feather(data.frame(1:2), compression = \"uncompressed\") {code}\r\n\u00a0\r\n\r\n\u00a0\r\n\r\nThis causes R to hard abort with the \"Start a new session\" prompt\r\n\r\n<details>\r\n<summary>Sys.info</summary>\r\n```\r\nsysname\u00a0 \"Darwin\"\r\n\r\nrelease\u00a0 \"21.3.0\"\r\n\r\nversion\u00a0 \"Darwin Kernel Version 21.3.0: Wed Jan \u00a05 21:37:58 PST 2022; root:xnu-8019.80.24~20/RELEASE_ARM64_T6000\"\u00a0 \u00a0 \u00a0\r\n\r\nnodename\u00a0 \u00a0 \u00a0\"MacBook-Pro.local\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 machine\u00a0 \u00a0\"x86_64\"\u00a0\r\n\r\nlogin \"root\"\u00a0\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>sessionInfo</summary>\r\n\r\n\u00a0\r\n{code:java}\r\nR version 4.1.2 (2021-11-01) Platform: x86_64-apple-darwin17.0 (64-bit) Running under: macOS Monterey 12.2.1 Matrix products: default LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib locale: [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 attached base packages: [1] stats \u00a0 \u00a0 graphics \u00a0grDevices datasets \u00a0utils \u00a0 \u00a0 methods \u00a0 base \u00a0 \u00a0\u00a0 loaded via a namespace (and not attached): \u00a0 [1] fs_1.5.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 usethis_2.1.5 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0bit64_4.0.5 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0 [4] lubridate_1.8.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0devtools_2.4.3 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 httr_1.4.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [7] rprojroot_2.0.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0tools_4.1.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0bslib_0.3.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0[10] utf8_1.2.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 R6_2.5.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DT_0.21 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0[13] DBI_1.1.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0lazyeval_0.2.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 colorspace_2.0-3 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0[16] withr_2.5.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0tidyselect_1.1.2 \u00a0 \u00a0 \u00a0 \u00a0 prettyunits_1.1.1 \u00a0 \u00a0 \u00a0\u00a0 \u00a0[19] processx_3.5.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 bit_4.0.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0curl_4.3.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0[22] compiler_4.1.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cli_3.2.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0xml2_1.3.3 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0[25] desc_1.4.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 plotly_4.9.4.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sass_0.4.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0[28] scales_1.1.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 bs4Dash_2.0.3 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0arrow_7.0.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0[31] callr_3.7.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0stringr_1.4.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0digest_0.6.29 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0[34] shinydashboardPlus_2.0.3 rmarkdown_2.11 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pkgconfig_2.0.3 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0[37] htmltools_0.5.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0sessioninfo_1.2.2 \u00a0 \u00a0 \u00a0 \u00a0attempt_0.3.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0[40] highr_0.9 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0fastmap_1.1.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0htmlwidgets_1.5.4 \u00a0 \u00a0 \u00a0\u00a0 \u00a0[43] rlang_1.0.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0rstudioapi_0.13 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0shiny_1.7.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0[46] jquerylib_0.1.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0generics_0.1.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 jsonlite_1.8.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0[49] dplyr_1.0.8 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0zip_2.2.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0config_0.3.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0[52] magrittr_2.0.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Rcpp_1.0.8 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 munsell_0.5.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0[55] fansi_1.0.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0clipr_0.8.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0shinycssloaders_1.0.0 \u00a0\u00a0 \u00a0[58] lifecycle_1.0.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0stringi_1.7.6 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0yaml_2.3.5 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0[61] snakecase_0.11.0 \u00a0 \u00a0 \u00a0 \u00a0 brio_1.1.3 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pkgbuild_1.3.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0[64] grid_4.1.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 promises_1.2.0.1 \u00a0 \u00a0 \u00a0 \u00a0 shinydashboard_0.7.2 \u00a0 \u00a0 \u00a0[67] crayon_1.5.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 knitr_1.37 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ps_1.6.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0[70] pillar_1.7.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pkgload_1.2.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0reprex_2.0.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0[73] glue_1.6.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 evaluate_0.15 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0golem_0.3.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0[76] data.table_1.14.2 \u00a0 \u00a0 \u00a0 \u00a0remotes_2.4.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0renv_0.15.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0[79] vctrs_0.3.8 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0httpuv_1.6.5 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 testthat_3.1.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0[82] gtable_0.3.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 purrr_0.3.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0tidyr_1.2.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0[85] assertthat_0.2.1 \u00a0 \u00a0 \u00a0 \u00a0 cachem_1.0.6 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ggplot2_3.3.5 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0[88] xfun_0.29 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0mime_0.12 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0xtable_1.8-4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0[91] roxygen2_7.1.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 UU_0.0.0.9003 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0later_1.3.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0[94] googledrive_2.0.0 \u00a0 \u00a0 \u00a0 \u00a0viridisLite_0.4.0 \u00a0 \u00a0 \u00a0 \u00a0gargle_1.2.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0[97] dockerfiler_0.1.4 \u00a0 \u00a0 \u00a0 \u00a0tibble_3.1.6 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 memoise_2.0.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 [100] shinyWidgets_0.6.3 \u00a0 \u00a0 \u00a0 ellipsis_0.3.2 \u00a0 {code}\r\n\r\n</details>\r\n<details>\r\n<summary>Extended STDOUT from the \\{reprex}\u00a0package</summary>\r\nThis reprex appears to crash R.\r\nSee standard output and standard error for more details.\r\n\r\n\u00a0\r\n # \r\n ## \r\n ### \r\n #### Standard output and error\r\n\r\n\u00a0\r\n{code:java}\r\nx Install the styler package in order to use `style = TRUE`.\r\n\u00a0*** caught illegal operation ***\r\naddress 0x114c7b741, cause 'illegal opcode'\r\nTraceback:\r\n\u00a01: Table__from_dots(dots, schema, option_use_threads())\r\n\u00a02: Table$create\r\n\u00a03: arrow::write_feather(data.frame(1:2), compression = \"uncompressed\")\r\n\u00a04: eval(expr, envir, enclos)\r\n\u00a05: eval(expr, envir, enclos)\r\n\u00a06: eval_with_user_handlers(expr, envir, enclos, user_handlers)\r\n\u00a07: withVisible(eval_with_user_handlers(expr, envir, enclos, user_handlers))\r\n\u00a08: withCallingHandlers(withVisible(eval_with_user_handlers(expr, \u00a0 \u00a0 envir, enclos, user_handlers)), warning = wHandler, error = eHandler, \u00a0 \u00a0 message = mHandler)\r\n\u00a09: doTryCatch(return(expr), name, parentenv, handler)\r\n10: tryCatchOne(expr, names, parentenv, handlers[[1L]])\r\n11: tryCatchList(expr, classes, parentenv, handlers)\r\n12: tryCatch(expr, error = function(e) { \u00a0 \u00a0call <- conditionCall(e) \u00a0 \u00a0if (!is.null(call))\r\n{ \u00a0 \u00a0 \u00a0 \u00a0if (identical(call[[1L]], quote(doTryCatch))) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 call <- sys.call(-4L) \u00a0 \u00a0 \u00a0 \u00a0dcall <- deparse(call, nlines = 1L) \u00a0 \u00a0 \u00a0 \u00a0prefix <- paste(\"Error in\", dcall, \": \") \u00a0 \u00a0 \u00a0 \u00a0LONG <- 75L \u00a0 \u00a0 \u00a0 \u00a0sm <- strsplit(conditionMessage(e), \"\\n\")[[1L]] \u00a0 \u00a0 \u00a0 \u00a0w <- 14L + nchar(dcall, type = \"w\") + nchar(sm[1L], type = \"w\") \u00a0 \u00a0 \u00a0 \u00a0if (is.na(w)) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 w <- 14L + nchar(dcall, type = \"b\") + nchar(sm[1L], \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 type = \"b\") \u00a0 \u00a0 \u00a0 \u00a0if (w > LONG) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 prefix <- paste0(prefix, \"\\n \u00a0\") \u00a0 \u00a0}\r\n\u00a0 \u00a0else prefix <- \"Error : \" \u00a0 \u00a0msg <- paste0(prefix, conditionMessage(e), \"\\n\") \u00a0 \u00a0.Internal(seterrmessage(msg[1L])) \u00a0 \u00a0if (!silent && isTRUE(getOption(\"show.error.messages\")))\r\n{ \u00a0 \u00a0 \u00a0 \u00a0cat(msg, file = outFile) \u00a0 \u00a0 \u00a0 \u00a0.Internal(printDeferredWarnings()) \u00a0 \u00a0}\r\n\u00a0 \u00a0invisible(structure(msg, class = \"try-error\", condition = e))})\r\n13: try(f, silent = TRUE)\r\n14: handle(ev <- withCallingHandlers(withVisible(eval_with_user_handlers(expr, \u00a0 \u00a0 envir, enclos, user_handlers)), warning = wHandler, error = eHandler, \u00a0 \u00a0 message = mHandler))\r\n15: timing_fn(handle(ev <- withCallingHandlers(withVisible(eval_with_user_handlers(expr, \u00a0 \u00a0 envir, enclos, user_handlers)), warning = wHandler, error = eHandler, \u00a0 \u00a0 message = mHandler)))\r\n16: evaluate_call(expr, parsed$src[[i]], envir = envir, enclos = enclos, \u00a0 \u00a0 debug = debug, last = i == length(out), use_try = stop_on_error != \u00a0 \u00a0 \u00a0 \u00a0 2L, keep_warning = keep_warning, keep_message = keep_message, \u00a0 \u00a0 output_handler = output_handler, include_timing = include_timing)\r\n17: evaluate::evaluate(...)\r\n18: evaluate(code, envir = env, new_device = FALSE, keep_warning = !isFALSE(options$warning), \u00a0 \u00a0 keep_message = !isFALSE(options$message), stop_on_error = if (is.numeric(options$error)) options$error else\r\n{ \u00a0 \u00a0 \u00a0 \u00a0if (options$error && options$include) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0L \u00a0 \u00a0 \u00a0 \u00a0else 2L \u00a0 \u00a0}\r\n, output_handler = knit_handlers(options$render, options))\r\n19: in_dir(input_dir(), evaluate(code, envir = env, new_device = FALSE, \u00a0 \u00a0 keep_warning = !isFALSE(options$warning), keep_message = !isFALSE(options$message), \u00a0 \u00a0 stop_on_error = if (is.numeric(options$error)) options$error else { \u00a0 \u00a0 \u00a0 \u00a0if (options$error && options$include) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0L \u00a0 \u00a0 \u00a0 \u00a0else 2L \u00a0 \u00a0}\r\n, output_handler = knit_handlers(options$render, options)))\r\n20: eng_r(options)\r\n21: block_exec(params)\r\n22: call_block\r\n23: process_group.block(group)\r\n24: process_group(group)\r\n25: withCallingHandlers(if (tangle) process_tangle(group) else process_group(group), \u00a0 \u00a0 error = function(e)\r\n{ \u00a0 \u00a0 \u00a0 \u00a0setwd(wd) \u00a0 \u00a0 \u00a0 \u00a0cat(res, sep = \"\\n\", file = output %n% \"\") \u00a0 \u00a0 \u00a0 \u00a0message(\"Quitting from lines \", paste(current_lines(i), \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 collapse = \"-\"), \" (\", knit_concord$get(\"infile\"), \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \") \") \u00a0 \u00a0}\r\n)\r\n26: process_file(text, output)\r\n27: knitr::knit(knit_input, knit_output, envir = envir, quiet = quiet)\r\n28: rmarkdown::render(input, quiet = TRUE, envir = globalenv(), encoding = \"UTF-8\")\r\n29: (function (input)\r\n{ \u00a0 \u00a0rmarkdown::render(input, quiet = TRUE, envir = globalenv(), \u00a0 \u00a0 \u00a0 \u00a0 encoding = \"UTF-8\")}\r\n)(input = base::quote(\"bonny-fox_reprex.R\"))\r\n30: (function (what, args, quote = FALSE, envir = parent.frame())\r\n{ \u00a0 \u00a0if (!is.list(args)) \u00a0 \u00a0 \u00a0 \u00a0 stop(\"second argument must be a list\") \u00a0 \u00a0if (quote) \u00a0 \u00a0 \u00a0 \u00a0 args <- lapply(args, enquote) \u00a0 \u00a0.Internal(do.call(what, args, envir))}\r\n)(base::quote(function (input)\r\n{ \u00a0 \u00a0rmarkdown::render(input, quiet = TRUE, envir = globalenv(), \u00a0 \u00a0 \u00a0 \u00a0 encoding = \"UTF-8\")}\r\n), base::quote(list(input = \"bonny-fox_reprex.R\")), envir = base::quote(<environment>), \u00a0 \u00a0 quote = base::quote(TRUE))\r\n31: do.call(do.call, c(readRDS(\"/var/folders/s8/yv0hmbdj5pq2g88v8qs7v82c0000gn/T//RtmphMqH7S/callr-fun-120e5fef59ef\"), \u00a0 \u00a0 list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv, \u00a0 \u00a0 quote = TRUE)\r\n32: saveRDS(do.call(do.call, c(readRDS(\"/var/folders/s8/yv0hmbdj5pq2g88v8qs7v82c0000gn/T//RtmphMqH7S/callr-fun-120e5fef59ef\"), \u00a0 \u00a0 list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv, \u00a0 \u00a0 quote = TRUE), file = \"/var/folders/s8/yv0hmbdj5pq2g88v8qs7v82c0000gn/T//RtmphMqH7S/callr-res-120e5af98b1d\")\r\n33: withCallingHandlers(\r\n{ \u00a0 \u00a0NULL \u00a0 \u00a0saveRDS(do.call(do.call, c(readRDS(\"/var/folders/s8/yv0hmbdj5pq2g88v8qs7v82c0000gn/T//RtmphMqH7S/callr-fun-120e5fef59ef\"), \u00a0 \u00a0 \u00a0 \u00a0 list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv, \u00a0 \u00a0 \u00a0 \u00a0 quote = TRUE), file = \"/var/folders/s8/yv0hmbdj5pq2g88v8qs7v82c0000gn/T//RtmphMqH7S/callr-res-120e5af98b1d\") \u00a0 \u00a0flush(stdout()) \u00a0 \u00a0flush(stderr()) \u00a0 \u00a0NULL \u00a0 \u00a0invisible()}\r\n, error = function(e) { \u00a0 \u00a0{ \u00a0 \u00a0 \u00a0 \u00a0callr_data <- as.environment(\"tools:callr\")$`{}callr_data{}` \u00a0 \u00a0 \u00a0 \u00a0err <- callr_data$err \u00a0 \u00a0 \u00a0 \u00a0assign(\".Traceback\", .traceback(4), envir = callr_data) \u00a0 \u00a0 \u00a0 \u00a0dump.frames(\"{}callr_dump{}\") \u00a0 \u00a0 \u00a0 \u00a0assign(\".Last.dump\", .GlobalEnv$`{}callr_dump{}`, envir = callr_data) \u00a0 \u00a0 \u00a0 \u00a0rm(\"{}callr_dump{}\", envir = .GlobalEnv) \u00a0 \u00a0 \u00a0 \u00a0e$call <- deparse(conditionCall(e), nlines = 6) \u00a0 \u00a0 \u00a0 \u00a0e2 <- err$new_error(conditionMessage(e), call. = conditionCall(e)) \u00a0 \u00a0 \u00a0 \u00a0class(e2) <- c(\"callr_remote_error\", class(e2)) \u00a0 \u00a0 \u00a0 \u00a0e2$error <- e \u00a0 \u00a0 \u00a0 \u00a0calls <- sys.calls() \u00a0 \u00a0 \u00a0 \u00a0dcframe <- which(vapply(calls, function length >= \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1 && identical(x[[1]], quote(do.call)), logical(1)))[1] \u00a0 \u00a0 \u00a0 \u00a0if (!is.na(dcframe)) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 e2$`ignore` <- list(c(1, dcframe + 1L)) \u00a0 \u00a0 \u00a0 \u00a0e2$`_pid` <- Sys.getpid() \u00a0 \u00a0 \u00a0 \u00a0e2$`_timestamp` <- Sys.time() \u00a0 \u00a0 \u00a0 \u00a0if (inherits(e, \"rlib_error_2_0\")) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 e2$parent <- e$parent \u00a0 \u00a0 \u00a0 \u00a0e2 <- err$add_trace_back(e2, embed = FALSE) \u00a0 \u00a0 \u00a0 \u00a0saveRDS(list(\"error\", e2), file = paste0(\"/var/folders/s8/yv0hmbdj5pq2g88v8qs7v82c0000gn/T//RtmphMqH7S/callr-res-120e5af98b1d\", \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \".error\")) \u00a0 \u00a0}}, interrupt = function(e) { \u00a0 \u00a0{ \u00a0 \u00a0 \u00a0 \u00a0callr_data <- as.environment(\"tools:callr\")$`callr_data` \u00a0 \u00a0 \u00a0 \u00a0err <- callr_data$err \u00a0 \u00a0 \u00a0 \u00a0assign(\".Traceback\", .traceback(4), envir = callr_data) \u00a0 \u00a0 \u00a0 \u00a0dump.frames(\"callr_dump\") \u00a0 \u00a0 \u00a0 \u00a0assign(\".Last.dump\", .GlobalEnv$`callr_dump`, envir = callr_data) \u00a0 \u00a0 \u00a0 \u00a0rm(\"callr_dump_\", envir = .GlobalEnv) \u00a0 \u00a0 \u00a0 \u00a0e$call <- deparse(conditionCall(e), nlines = 6) \u00a0 \u00a0 \u00a0 \u00a0e2 <- err$new_error(conditionMessage(e), call. = conditionCall(e)) \u00a0 \u00a0 \u00a0 \u00a0class(e2) <- c(\"callr_remote_error\", class(e2)) \u00a0 \u00a0 \u00a0 \u00a0e2$error <- e \u00a0 \u00a0 \u00a0 \u00a0calls <- sys.calls() \u00a0 \u00a0 \u00a0 \u00a0dcframe <- which(vapply(calls, function length >= \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1 && identical(x[[1]], quote(do.call)), logical(1)))[1] \u00a0 \u00a0 \u00a0 \u00a0if (!is.na(dcframe)) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 e2$`_ignore` <- list(c(1, dcframe + 1L)) \u00a0 \u00a0 \u00a0 \u00a0e2$`_pid` <- Sys.getpid() \u00a0 \u00a0 \u00a0 \u00a0e2$`_timestamp` <- Sys.time() \u00a0 \u00a0 \u00a0 \u00a0if (inherits(e, \"rlib_error_2_0\")) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 e2$parent <- e$parent \u00a0 \u00a0 \u00a0 \u00a0e2 <- err$add_trace_back(e2, embed = FALSE) \u00a0 \u00a0 \u00a0 \u00a0saveRDS(list(\"error\", e2), file = paste0(\"/var/folders/s8/yv0hmbdj5pq2g88v8qs7v82c0000gn/T//RtmphMqH7S/callr-res-120e5af98b1d\", \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \".error\")) \u00a0 \u00a0}}, callr_message = function(e) { \u00a0 \u00a0try(signalCondition(e))})\r\n34: doTryCatch(return(expr), name, parentenv, handler)\r\n35: tryCatchOne(expr, names, parentenv, handlers[[1L]])\r\n36: tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\r\n37: doTryCatch(return(expr), name, parentenv, handler)\r\n38: tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), \u00a0 \u00a0 names[nh], parentenv, handlers[[nh]])\r\n39: tryCatchList(expr, classes, parentenv, handlers)\r\n40: tryCatch(withCallingHandlers({ \u00a0 \u00a0NULL \u00a0 \u00a0saveRDS(do.call(do.call, c(readRDS(\"/var/folders/s8/yv0hmbdj5pq2g88v8qs7v82c0000gn/T//RtmphMqH7S/callr-fun-120e5fef59ef\"), \u00a0 \u00a0 \u00a0 \u00a0 list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv, \u00a0 \u00a0 \u00a0 \u00a0 quote = TRUE), file = \"/var/folders/s8/yv0hmbdj5pq2g88v8qs7v82c0000gn/T//RtmphMqH7S/callr-res-120e5af98b1d\") \u00a0 \u00a0flush(stdout()) \u00a0 \u00a0flush(stderr()) \u00a0 \u00a0NULL \u00a0 \u00a0invisible()}\r\n, error = function(e) { \u00a0 \u00a0{ \u00a0 \u00a0 \u00a0 \u00a0callr_data <- as.environment(\"tools:callr\")$`{}callr_data{}` \u00a0 \u00a0 \u00a0 \u00a0err <- callr_data$err \u00a0 \u00a0 \u00a0 \u00a0assign(\".Traceback\", .traceback(4), envir = callr_data) \u00a0 \u00a0 \u00a0 \u00a0dump.frames(\"{}callr_dump{}\") \u00a0 \u00a0 \u00a0 \u00a0assign(\".Last.dump\", .GlobalEnv$`{}callr_dump{}`, envir = callr_data) \u00a0 \u00a0 \u00a0 \u00a0rm(\"{}callr_dump{}\", envir = .GlobalEnv) \u00a0 \u00a0 \u00a0 \u00a0e$call <- deparse(conditionCall(e), nlines = 6) \u00a0 \u00a0 \u00a0 \u00a0e2 <- err$new_error(conditionMessage(e), call. = conditionCall(e)) \u00a0 \u00a0 \u00a0 \u00a0class(e2) <- c(\"callr_remote_error\", class(e2)) \u00a0 \u00a0 \u00a0 \u00a0e2$error <- e \u00a0 \u00a0 \u00a0 \u00a0calls <- sys.calls() \u00a0 \u00a0 \u00a0 \u00a0dcframe <- which(vapply(calls, function length >= \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1 && identical(x[[1]], quote(do.call)), logical(1)))[1] \u00a0 \u00a0 \u00a0 \u00a0if (!is.na(dcframe)) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 e2$`ignore` <- list(c(1, dcframe + 1L)) \u00a0 \u00a0 \u00a0 \u00a0e2$`_pid` <- Sys.getpid() \u00a0 \u00a0 \u00a0 \u00a0e2$`_timestamp` <- Sys.time() \u00a0 \u00a0 \u00a0 \u00a0if (inherits(e, \"rlib_error_2_0\")) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 e2$parent <- e$parent \u00a0 \u00a0 \u00a0 \u00a0e2 <- err$add_trace_back(e2, embed = FALSE) \u00a0 \u00a0 \u00a0 \u00a0saveRDS(list(\"error\", e2), file = paste0(\"/var/folders/s8/yv0hmbdj5pq2g88v8qs7v82c0000gn/T//RtmphMqH7S/callr-res-120e5af98b1d\", \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \".error\")) \u00a0 \u00a0}}, interrupt = function(e) { \u00a0 \u00a0{ \u00a0 \u00a0 \u00a0 \u00a0callr_data <- as.environment(\"tools:callr\")$`callr_data` \u00a0 \u00a0 \u00a0 \u00a0err <- callr_data$err \u00a0 \u00a0 \u00a0 \u00a0assign(\".Traceback\", .traceback(4), envir = callr_data) \u00a0 \u00a0 \u00a0 \u00a0dump.frames(\"callr_dump\") \u00a0 \u00a0 \u00a0 \u00a0assign(\".Last.dump\", .GlobalEnv$`callr_dump`, envir = callr_data) \u00a0 \u00a0 \u00a0 \u00a0rm(\"callr_dump_\", envir = .GlobalEnv) \u00a0 \u00a0 \u00a0 \u00a0e$call <- deparse(conditionCall(e), nlines = 6) \u00a0 \u00a0 \u00a0 \u00a0e2 <- err$new_error(conditionMessage(e), call. = conditionCall(e)) \u00a0 \u00a0 \u00a0 \u00a0class(e2) <- c(\"callr_remote_error\", class(e2)) \u00a0 \u00a0 \u00a0 \u00a0e2$error <- e \u00a0 \u00a0 \u00a0 \u00a0calls <- sys.calls() \u00a0 \u00a0 \u00a0 \u00a0dcframe <- which(vapply(calls, function length >= \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1 && identical(x[[1]], quote(do.call)), logical(1)))[1] \u00a0 \u00a0 \u00a0 \u00a0if (!is.na(dcframe)) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 e2$`_ignore` <- list(c(1, dcframe + 1L)) \u00a0 \u00a0 \u00a0 \u00a0e2$`_pid` <- Sys.getpid() \u00a0 \u00a0 \u00a0 \u00a0e2$`_timestamp` <- Sys.time() \u00a0 \u00a0 \u00a0 \u00a0if (inherits(e, \"rlib_error_2_0\")) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 e2$parent <- e$parent \u00a0 \u00a0 \u00a0 \u00a0e2 <- err$add_trace_back(e2, embed = FALSE) \u00a0 \u00a0 \u00a0 \u00a0saveRDS(list(\"error\", e2), file = paste0(\"/var/folders/s8/yv0hmbdj5pq2g88v8qs7v82c0000gn/T//RtmphMqH7S/callr-res-120e5af98b1d\", \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \".error\")) \u00a0 \u00a0}}, callr_message = function(e)\r\n{ \u00a0 \u00a0try(signalCondition(e))}\r\n), error = function(e)\r\n{ \u00a0 \u00a0NULL \u00a0 \u00a0try(stop(e))}\r\n, interrupt = function(e)\r\n{ \u00a0 \u00a0NULL \u00a0 \u00a0e}\r\n)\r\nAn irrecoverable exception occurred. R is aborting now ... {code}\r\n</details>",
        "customfield_10010": null,
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] `arrow::write_*` causes R session hard abort on Mac OSX Monterey",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": "Mac OSX Monterey 12.2.1\r\nChip: Apple M1 Pro\r\n",
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "customfield_12311820": "0|z10ldk:",
        "customfield_12314139": null
    }
}