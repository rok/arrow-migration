{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13350996",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996",
    "key": "ARROW-11177",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Jackey+Lee",
            "name": "Jackey Lee",
            "key": "jackey lee",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Jackey Lee",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Jackey+Lee",
            "name": "Jackey Lee",
            "key": "jackey lee",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Jackey Lee",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11177/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 21,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/533447",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stczwd opened a new pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147\n\n\n   InvalidProtocolBufferException will be thrown in ArrowMessage.frame if we use gzip compress in Grpc.\r\n   \r\n   The reason is, stream.available is still a 1 after we read compressed data. It need another read to change InflaterInputStream.reachEOF to be true, and make stream.available to be 0.\r\n   Thus we need check stream.available agian after read first byte from stream.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-09T15:18:03.589+0000",
                    "updated": "2021-01-09T15:18:03.589+0000",
                    "started": "2021-01-09T15:18:03.588+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "533447",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/533448",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147#issuecomment-757305199\n\n\n   https://issues.apache.org/jira/browse/ARROW-11177\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-09T15:18:17.027+0000",
                    "updated": "2021-01-09T15:18:17.027+0000",
                    "started": "2021-01-09T15:18:17.027+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "533448",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/533707",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stczwd opened a new pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147\n\n\n   InvalidProtocolBufferException will be thrown in ArrowMessage.frame if we use gzip compress in Grpc.\r\n   \r\n   The reason is, stream.available is still a 1 after we read compressed data. It need another read to change InflaterInputStream.reachEOF to be true, and make stream.available to be 0.\r\n   Thus we need check stream.available agian after read first byte from stream.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-10T04:11:18.996+0000",
                    "updated": "2021-01-10T04:11:18.996+0000",
                    "started": "2021-01-10T04:11:18.996+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "533707",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/533821",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147#issuecomment-757305199\n\n\n   https://issues.apache.org/jira/browse/ARROW-11177\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-10T04:22:21.279+0000",
                    "updated": "2021-01-10T04:22:21.279+0000",
                    "started": "2021-01-10T04:22:21.279+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "533821",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/534262",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147#discussion_r555078736\n\n\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -332,6 +333,23 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n \n   }\n \n+  /**\n+   * Get first byte with EOF check, it is especially needed when using grpc compression.\n+   * InflaterInputStream need another read to change reachEOF after all bytes has been read.\n+   *\n+   * @param is InputStream\n+   * @return -1 if stream is not available, otherwise it will return the actual value.\n+   * @throws IOException Read first byte failed.\n+   */\n+  private static int readRawVarint32WithEOFCheck(InputStream is) throws IOException {\n+    int firstByte = is.read();\n\nReview comment:\n       Why can't we check `firstByte < 0` for EOF?\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -259,7 +259,8 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n       ArrowBuf body = null;\n       ArrowBuf appMetadata = null;\n       while (stream.available() > 0) {\n-        int tag = readRawVarint32(stream);\n+        int tag = readRawVarint32WithEOFCheck(stream);\n+\n         switch (tag) {\n\nReview comment:\n       Can we explicitly handle -1 (EOF) here?\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -332,6 +333,23 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n \n   }\n \n+  /**\n+   * Get first byte with EOF check, it is especially needed when using grpc compression.\n+   * InflaterInputStream need another read to change reachEOF after all bytes has been read.\n+   *\n+   * @param is InputStream\n+   * @return -1 if stream is not available, otherwise it will return the actual value.\n+   * @throws IOException Read first byte failed.\n+   */\n+  private static int readRawVarint32WithEOFCheck(InputStream is) throws IOException {\n+    int firstByte = is.read();\n+    if (is.available() <= 0) {\n+      return -1;\n+    } else {\n+      return CodedInputStream.readRawVarint32(firstByte, is);\n+    }\n+  }\n+\n   private static int readRawVarint32(InputStream is) throws IOException {\n     int firstByte = is.read();\n\nReview comment:\n       It seems here we should be checking `firstByte < -1` since `readRawVarint32` expects the caller to do EOF-checking - so maybe we don't need a new method, and we should fix this for all callers of this method?\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -332,6 +333,23 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n \n   }\n \n+  /**\n+   * Get first byte with EOF check, it is especially needed when using grpc compression.\n+   * InflaterInputStream need another read to change reachEOF after all bytes has been read.\n+   *\n+   * @param is InputStream\n+   * @return -1 if stream is not available, otherwise it will return the actual value.\n+   * @throws IOException Read first byte failed.\n+   */\n\nReview comment:\n       ```suggestion\r\n     /**\r\n      * Read a varint32 from the stream, checking for EOF.\r\n      *\r\n      * <p>When using gRPC compression, EOF may not be reported by the InflaterInputStream until another read has\r\n      * been performed. This method checks {@link InputStream#available()} after reading the first byte in order\r\n      * to handle this case.\r\n      *\r\n      * @param is InputStream\r\n      * @return -1 if EOF reached, else the varint32 value.\r\n      * @throws IOException if an error occurred while reading the stream.\r\n      */\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T14:24:32.586+0000",
                    "updated": "2021-01-11T14:24:32.586+0000",
                    "started": "2021-01-11T14:24:32.586+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534262",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/534734",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stczwd commented on a change in pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147#discussion_r555572500\n\n\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -332,6 +333,23 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n \n   }\n \n+  /**\n+   * Get first byte with EOF check, it is especially needed when using grpc compression.\n+   * InflaterInputStream need another read to change reachEOF after all bytes has been read.\n+   *\n+   * @param is InputStream\n+   * @return -1 if stream is not available, otherwise it will return the actual value.\n+   * @throws IOException Read first byte failed.\n+   */\n\nReview comment:\n       Great, thanks.\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -332,6 +333,23 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n \n   }\n \n+  /**\n+   * Get first byte with EOF check, it is especially needed when using grpc compression.\n+   * InflaterInputStream need another read to change reachEOF after all bytes has been read.\n+   *\n+   * @param is InputStream\n+   * @return -1 if stream is not available, otherwise it will return the actual value.\n+   * @throws IOException Read first byte failed.\n+   */\n+  private static int readRawVarint32WithEOFCheck(InputStream is) throws IOException {\n+    int firstByte = is.read();\n\nReview comment:\n       what if `firstByte < 0` but `is.available >0`?\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -259,7 +259,8 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n       ArrowBuf body = null;\n       ArrowBuf appMetadata = null;\n       while (stream.available() > 0) {\n-        int tag = readRawVarint32(stream);\n+        int tag = readRawVarint32WithEOFCheck(stream);\n+\n         switch (tag) {\n\nReview comment:\n       readRawVarint32 will throw InvalidProtocolBufferException before the tag return.\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -332,6 +333,23 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n \n   }\n \n+  /**\n+   * Get first byte with EOF check, it is especially needed when using grpc compression.\n+   * InflaterInputStream need another read to change reachEOF after all bytes has been read.\n+   *\n+   * @param is InputStream\n+   * @return -1 if stream is not available, otherwise it will return the actual value.\n+   * @throws IOException Read first byte failed.\n+   */\n+  private static int readRawVarint32WithEOFCheck(InputStream is) throws IOException {\n+    int firstByte = is.read();\n+    if (is.available() <= 0) {\n+      return -1;\n+    } else {\n+      return CodedInputStream.readRawVarint32(firstByte, is);\n+    }\n+  }\n+\n   private static int readRawVarint32(InputStream is) throws IOException {\n     int firstByte = is.read();\n\nReview comment:\n       Hm, I have thought about this. This function is also called for getting size, we should keep checking of `firstByte < -1`\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-12T08:05:17.308+0000",
                    "updated": "2021-01-12T08:05:17.308+0000",
                    "started": "2021-01-12T08:05:17.308+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534734",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/534872",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147#discussion_r555809311\n\n\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -259,7 +259,8 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n       ArrowBuf body = null;\n       ArrowBuf appMetadata = null;\n       while (stream.available() > 0) {\n-        int tag = readRawVarint32(stream);\n+        int tag = readRawVarint32WithEOFCheck(stream);\n+\n         switch (tag) {\n\nReview comment:\n       That's not true, though, since readRawVarint32WithEOFCheck has a branch that returns -1.\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -332,6 +333,23 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n \n   }\n \n+  /**\n+   * Get first byte with EOF check, it is especially needed when using grpc compression.\n+   * InflaterInputStream need another read to change reachEOF after all bytes has been read.\n+   *\n+   * @param is InputStream\n+   * @return -1 if stream is not available, otherwise it will return the actual value.\n+   * @throws IOException Read first byte failed.\n+   */\n+  private static int readRawVarint32WithEOFCheck(InputStream is) throws IOException {\n+    int firstByte = is.read();\n+    if (is.available() <= 0) {\n+      return -1;\n+    } else {\n+      return CodedInputStream.readRawVarint32(firstByte, is);\n+    }\n+  }\n+\n   private static int readRawVarint32(InputStream is) throws IOException {\n     int firstByte = is.read();\n\nReview comment:\n       I'm not sure what you mean - if is.read() returns -1, the stream is at EOF, so there's never any more data to read.\r\n   \r\n   I also mean, we should consolidate readRawVarint32 and readRawVarint32WithEOFCheck since there's never any reason to proceed if we're at EOF, and furthermore, CodedInputStream#readRawVarint32(int, InputStream) itself doesn't do an EOF check (it assumes the caller has).\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -332,6 +333,23 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n \n   }\n \n+  /**\n+   * Get first byte with EOF check, it is especially needed when using grpc compression.\n+   * InflaterInputStream need another read to change reachEOF after all bytes has been read.\n+   *\n+   * @param is InputStream\n+   * @return -1 if stream is not available, otherwise it will return the actual value.\n+   * @throws IOException Read first byte failed.\n+   */\n+  private static int readRawVarint32WithEOFCheck(InputStream is) throws IOException {\n+    int firstByte = is.read();\n\nReview comment:\n       That would be an incorrect InputStream implementation, since InputStream.read() == -1 is defined to be EOF - there should be no data left.\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -332,6 +333,23 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n \n   }\n \n+  /**\n+   * Get first byte with EOF check, it is especially needed when using grpc compression.\n+   * InflaterInputStream need another read to change reachEOF after all bytes has been read.\n+   *\n+   * @param is InputStream\n+   * @return -1 if stream is not available, otherwise it will return the actual value.\n+   * @throws IOException Read first byte failed.\n+   */\n+  private static int readRawVarint32WithEOFCheck(InputStream is) throws IOException {\n+    int firstByte = is.read();\n\nReview comment:\n       Furthermore, available() is defined to be an estimate; available() == 0 doesn't mean EOF.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-12T14:28:23.771+0000",
                    "updated": "2021-01-12T14:28:23.771+0000",
                    "started": "2021-01-12T14:28:23.770+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534872",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/535173",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stczwd commented on a change in pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147#discussion_r556234741\n\n\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -332,6 +333,23 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n \n   }\n \n+  /**\n+   * Get first byte with EOF check, it is especially needed when using grpc compression.\n+   * InflaterInputStream need another read to change reachEOF after all bytes has been read.\n+   *\n+   * @param is InputStream\n+   * @return -1 if stream is not available, otherwise it will return the actual value.\n+   * @throws IOException Read first byte failed.\n+   */\n+  private static int readRawVarint32WithEOFCheck(InputStream is) throws IOException {\n+    int firstByte = is.read();\n+    if (is.available() <= 0) {\n+      return -1;\n+    } else {\n+      return CodedInputStream.readRawVarint32(firstByte, is);\n+    }\n+  }\n+\n   private static int readRawVarint32(InputStream is) throws IOException {\n     int firstByte = is.read();\n\nReview comment:\n       `readRawVarint32` is called to get tag and byte size, exception is still needed on the byte size reading.\r\n   If the tag readed is -1, it means there's never any more data to read.\r\n   But if the size readed is -1, it means this is bad data and exception is needed.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-13T03:08:19.268+0000",
                    "updated": "2021-01-13T03:08:19.268+0000",
                    "started": "2021-01-13T03:08:19.268+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "535173",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/535177",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stczwd commented on a change in pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147#discussion_r556236616\n\n\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -332,6 +333,23 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n \n   }\n \n+  /**\n+   * Get first byte with EOF check, it is especially needed when using grpc compression.\n+   * InflaterInputStream need another read to change reachEOF after all bytes has been read.\n+   *\n+   * @param is InputStream\n+   * @return -1 if stream is not available, otherwise it will return the actual value.\n+   * @throws IOException Read first byte failed.\n+   */\n+  private static int readRawVarint32WithEOFCheck(InputStream is) throws IOException {\n+    int firstByte = is.read();\n\nReview comment:\n       The description of `java.io.InputStream#available()` indicates it will return {@code 0} when it reaches the end of the input stream.\r\n   ```\r\n   /**\r\n    * Returns an estimate of the number of bytes that can be read (or\r\n    * skipped over) from this input stream without blocking by the next\r\n    * invocation of a method for this input stream. The next invocation\r\n    * might be the same thread or another thread.  A single read or skip of this\r\n    * many bytes will not block, but may read or skip fewer bytes.\r\n    *\r\n    * <p> Note that while some implementations of {@code InputStream} will return\r\n    * the total number of bytes in the stream, many will not.  It is\r\n    * never correct to use the return value of this method to allocate\r\n    * a buffer intended to hold all data in this stream.\r\n    *\r\n    * <p> A subclass' implementation of this method may choose to throw an\r\n    * {@link IOException} if this input stream has been closed by\r\n    * invoking the {@link #close()} method.\r\n    *\r\n    * <p> The {@code available} method for class {@code InputStream} always\r\n    * returns {@code 0}.\r\n    *\r\n    * <p> This method should be overridden by subclasses.\r\n    *\r\n    * @return     an estimate of the number of bytes that can be read (or skipped\r\n    *             over) from this input stream without blocking or {@code 0} when\r\n    *             it reaches the end of the input stream.\r\n    * @exception  IOException if an I/O error occurs.\r\n    */\r\n   public int available() throws IOException {\r\n       return 0;\r\n   }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-13T03:15:22.903+0000",
                    "updated": "2021-01-13T03:15:22.903+0000",
                    "started": "2021-01-13T03:15:22.903+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "535177",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/535414",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147#discussion_r556542740\n\n\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -259,7 +259,8 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n       ArrowBuf body = null;\n       ArrowBuf appMetadata = null;\n       while (stream.available() > 0) {\n-        int tag = readRawVarint32(stream);\n+        int tag = readRawVarint32WithEOFCheck(stream);\n+\n         switch (tag) {\n\nReview comment:\n       Ah, actually, now that I look at this, ArrowMessage#frame overall doesn't seem right...it shouldn't be checking stream.available() at all, instead it should be looping and reading the first byte, and handing it to readRawVarint32(int, InputStream) if it's >= 0.\r\n   \r\n   I think that would explain the actual issues you are seeing - we should not rely on available() at all and instead use read(). So it should look like\r\n   \r\n   ```java\r\n   while (true) {\r\n       int firstByte = stream.read();\r\n       if (firstByte < 0) {\r\n           // EOF\r\n           break;    \r\n       }\r\n       int tag = readRawVarint32(firstByte, stream);\r\n       // ...\r\n   }\r\n   ```\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -259,7 +259,8 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n       ArrowBuf body = null;\n       ArrowBuf appMetadata = null;\n       while (stream.available() > 0) {\n-        int tag = readRawVarint32(stream);\n+        int tag = readRawVarint32WithEOFCheck(stream);\n+\n         switch (tag) {\n\nReview comment:\n       As-is, -1 will get silently ignored and that happens to be correct here, fortunately. But we shouldn't be relying on available() at all.\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -332,6 +333,23 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n \n   }\n \n+  /**\n+   * Get first byte with EOF check, it is especially needed when using grpc compression.\n+   * InflaterInputStream need another read to change reachEOF after all bytes has been read.\n+   *\n+   * @param is InputStream\n+   * @return -1 if stream is not available, otherwise it will return the actual value.\n+   * @throws IOException Read first byte failed.\n+   */\n+  private static int readRawVarint32WithEOFCheck(InputStream is) throws IOException {\n+    int firstByte = is.read();\n\nReview comment:\n       Sorry, my read of this is that EOF implies available == 0, but not the other way around. Otherwise, since the base InputStream always returns 0 for available, that would imply it's always at EOF, which is rather useless, right? And the method definition is about the number of bytes that can be read _without blocking_, not the number of bytes that can be read overall.\r\n   \r\n   If empirically, that doesn't match the behavior of the InflaterInputStream, that's fine - but let's make it clear in that case so that it doesn't confuse people without that context.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-13T14:08:34.167+0000",
                    "updated": "2021-01-13T14:08:34.167+0000",
                    "started": "2021-01-13T14:08:34.166+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "535414",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/536301",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stczwd commented on a change in pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147#discussion_r557832603\n\n\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -259,7 +259,8 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n       ArrowBuf body = null;\n       ArrowBuf appMetadata = null;\n       while (stream.available() > 0) {\n-        int tag = readRawVarint32(stream);\n+        int tag = readRawVarint32WithEOFCheck(stream);\n+\n         switch (tag) {\n\nReview comment:\n       Em,  it is similar to current code. Besides, current we can return unified exception information for abnormal EOF.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-15T03:01:26.777+0000",
                    "updated": "2021-01-15T03:01:26.777+0000",
                    "started": "2021-01-15T03:01:26.777+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "536301",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/537816",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147#discussion_r560200455\n\n\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -259,7 +259,8 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n       ArrowBuf body = null;\n       ArrowBuf appMetadata = null;\n       while (stream.available() > 0) {\n-        int tag = readRawVarint32(stream);\n+        int tag = readRawVarint32WithEOFCheck(stream);\n+\n         switch (tag) {\n\nReview comment:\n       The current code is wrong, though. (It would be entirely valid for available() == 0 even when the stream is not at EOF. The JavaDocs state that EOF implies available() == 0, but not the other way around.) And the PR raises different exceptions for EOF depending on the case.\r\n   \r\n   Instead of adding flags to massage the current behavior in different cases, let's write code that adheres to the contract of InputStream.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-19T14:08:39.978+0000",
                    "updated": "2021-01-19T14:08:39.978+0000",
                    "started": "2021-01-19T14:08:39.978+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "537816",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/567473",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147#issuecomment-800866250\n\n\n   @lidavidm @stczwd what is the status of this PR?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-17T07:37:08.427+0000",
                    "updated": "2021-03-17T07:37:08.427+0000",
                    "started": "2021-03-17T07:37:08.427+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "567473",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/567595",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147#issuecomment-801014998\n\n\n   I still believe we should not be polling available().\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-17T11:41:12.757+0000",
                    "updated": "2021-03-17T11:41:12.757+0000",
                    "started": "2021-03-17T11:41:12.757+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "567595",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/568068",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147#discussion_r596528147\n\n\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -332,6 +333,23 @@ private static ArrowMessage frame(BufferAllocator allocator, final InputStream s\n \n   }\n \n+  /**\n+   * Get first byte with EOF check, it is especially needed when using grpc compression.\n+   * InflaterInputStream need another read to change reachEOF after all bytes has been read.\n+   *\n+   * @param is InputStream\n+   * @return -1 if stream is not available, otherwise it will return the actual value.\n+   * @throws IOException Read first byte failed.\n+   */\n+  private static int readRawVarint32WithEOFCheck(InputStream is) throws IOException {\n+    int firstByte = is.read();\n\nReview comment:\n       I agree with @lidavidm another scenario where zero is perfectly allowable is when no data is buffered but EOF hasn't been reached. @stczwd do you think you will be able to revise the PR to fix the underlying issue?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-18T03:32:35.178+0000",
                    "updated": "2021-03-18T03:32:35.178+0000",
                    "started": "2021-03-18T03:32:35.178+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "568068",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/594592",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147#issuecomment-838718260\n\n\n   @stczwd did you want to address feedback here?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-11T15:47:36.525+0000",
                    "updated": "2021-05-11T15:47:36.525+0000",
                    "started": "2021-05-11T15:47:36.525+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594592",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/602692",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stczwd commented on pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147#issuecomment-849241240\n\n\n   sure. I have changed the code with checking -1.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-27T01:20:13.443+0000",
                    "updated": "2021-05-27T01:20:13.443+0000",
                    "started": "2021-05-27T01:20:13.443+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "602692",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/602693",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stczwd commented on pull request #9147:\nURL: https://github.com/apache/arrow/pull/9147#issuecomment-849241823\n\n\n   @emkornfield @lidavidm any more comments?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-27T01:21:36.913+0000",
                    "updated": "2021-05-27T01:21:36.913+0000",
                    "started": "2021-05-27T01:21:36.912+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "602693",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/766038",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #9147:\nURL: https://github.com/apache/arrow/pull/9147#issuecomment-1117391256\n\n   @lidavidm Do you want to take this up and finish it, or perhaps one of @lwhite1 @davisusanibar is interested in doing it?\n\n\n",
                    "created": "2022-05-04T14:33:28.238+0000",
                    "updated": "2022-05-04T14:33:28.238+0000",
                    "started": "2022-05-04T14:33:28.238+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "766038",
                    "issueId": "13350996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/worklog/766042",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #9147:\nURL: https://github.com/apache/arrow/pull/9147#issuecomment-1117404204\n\n   Yes, we should finish this up. I won't have a chance to until at least next week but if David or Larry want to take it up I'm happy to review.\n\n\n",
                    "created": "2022-05-04T14:39:56.902+0000",
                    "updated": "2022-05-04T14:39:56.902+0000",
                    "started": "2022-05-04T14:39:56.902+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "766042",
                    "issueId": "13350996"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 12600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3a05ce39[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@36803e9c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ed89087[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@399b2b1e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5927cbdd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4cdee1f[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4edb0aa9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2e780bb7[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@49664486[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2230f6a3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34a83e0e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5ae3ae9f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12600,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jan 08 02:52:14 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11177/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-01-08T02:39:37.000+0000",
        "updated": "2022-06-07T11:50:17.000+0000",
        "timeoriginalestimate": null,
        "description": "InvalidProtocolBufferException will be thrown in ArrowMessage.frame if we use gzip compress in Grpc.\r\n\r\nThe reason is stream.available\u00a0will still be 1 after we read compressed data. There should be another attempt read to change InflaterInputStream.reachEOF to be true, and make stream.available to be 0.\r\n\r\nThus we need check stream.available after read tag from stream.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] ArrowMessage failed to parse compressed grpc stream",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/comment/17260950",
                    "id": "17260950",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Thanks for the report!\r\n\r\nWe haven't tried to use gRPC's compression yet. Note Arrow itself supports compression of data (e.g. for the FeatherV2 format) which may also be an option (but that is also not yet something we've tried.) It would be interesting to see which performs better. IIRC, gRPC only offers a few simple codecs (gz), but Arrow supports more expensive ones too (lz4, zstd, etc).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-01-08T02:42:09.935+0000",
                    "updated": "2021-01-08T02:42:09.935+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350996/comment/17260954",
                    "id": "17260954",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Jackey+Lee",
                        "name": "Jackey Lee",
                        "key": "jackey lee",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Jackey Lee",
                        "active": true,
                        "timeZone": "Asia/Shanghai"
                    },
                    "body": "Yeah, we are working on the compression performance test currently, all of these will be tested.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Jackey+Lee",
                        "name": "Jackey Lee",
                        "key": "jackey lee",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Jackey Lee",
                        "active": true,
                        "timeZone": "Asia/Shanghai"
                    },
                    "created": "2021-01-08T02:52:14.138+0000",
                    "updated": "2021-01-08T02:52:14.138+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0mdds:",
        "customfield_12314139": null
    }
}