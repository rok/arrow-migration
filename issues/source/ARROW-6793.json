{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13260618",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618",
    "key": "ARROW-6793",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "name": "Critical",
            "id": "2"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 49800,
            "total": 49800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 49800,
            "total": 49800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6793/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 106,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/361493",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068\n \n \n   After multiple failed attempts to build a single \"manylinux\" Arrow C++ library to use with the R package, I've opted for a different strategy:\r\n   \r\n   * Build static binaries for some set of distribution-versions (e.g. \"ubuntu-18.04\", \"centos-7\", etc.) and host them at `https://dl.bintray.com/ursa-labs/arrow-r/libarrow/$DISTRO-$OS_VERSION/arrow-$PKG_VERSION.zip`. This will be done through some CI, most likely at https://github.com/ursa-labs/arrow-r-nightly.\r\n   * Also host C++ source snapshots corresponding to the R package versions (both CRAN releases and nightlies) at `https://dl.bintray.com/ursa-labs/arrow-r/libarrow/src/arrow-$PKG_VERSION.zip`\r\n   * When someone does `install.packages(\"arrow\")`, the `configure` script will, if Arrow C++ is not found locally, attempt to download a static C++ library that corresponds to the local OS and the R package version; if not found, it will download the C++ source and attempt to compile it. In this latter case, installation will be slow, but it should work--the script in `r/inst/build_arrow_static.sh` makes a bundled, static build, and as long as `cmake` exists on the user's system, it should succeed without any additional system dependencies. If *that* fails, then the current \"arrow without arrow\" package is built.\r\n   \r\n   Currently there are no prebuilt binaries hosted, so the C++ library compilation will be the default behavior, but at least that gets our users a simple (albeit slow) installation experience. I'll follow up with the CI for building the binaries and we can fill those in as needed.\r\n   \r\n   I summarized the installation workflow and the ways to control and debug it in a vignette: `r/vignettes/install.Rmd`. That document also points to the code/scripts that do the work.\r\n   \r\n   Finally, note that the intent is that this extra C++ installation will not happen on CRAN, only when users install the package themselves. We can relax that later once we have more confidence that the binaries we build will work widely, but it does not affect the experience of users who install the package.\r\n   \r\n   I've confirmed the basic logic of building the C++ library while installing the R package, and I've confirmed downloading and using a prebuilt binary works (assuming exact OS/version match). For further testing, I will host a C++ source .zip on bintray and build the R package with that across the range of Docker images at https://hub.docker.com/u/rhub. Setting that up will probably be the foundation for the build matrix that builds the binaries anyway. That said, accepting these changes does not require the existence of that build infrastructure--the package installation improvements here stand alone.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-19T22:45:47.846+0000",
                    "updated": "2019-12-19T22:45:47.846+0000",
                    "started": "2019-12-19T22:45:47.846+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "361493",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362106",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360636742\n \n \n\n ##########\n File path: r/inst/build_arrow_static.sh\n ##########\n @@ -0,0 +1,80 @@\n+#!/bin/bash\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# Quit on failure\n+# set -e\n+\n+# Print commands for debugging\n+set -x\n+\n+# By default, this script assumes it's in the top-level dir of the apache/arrow\n+# git repository. Set any of the following env vars to customize where to read\n+# and write from\n+: ${ARROW_HOME:=\"$(pwd)\"}                       # Only used in default SOURCE/BUILD dirs\n+: ${SOURCE_DIR:=\"${ARROW_HOME}/cpp\"}            # Where the C++ source is\n+: ${BUILD_DIR:=\"${ARROW_HOME}/r/libarrow/dist\"} # Where cmake should build\n+: ${DEST_DIR:=\"$BUILD_DIR\"}                     # Where the resulting /lib and /include should be\n+\n+# Make sure SOURCE and DEST dirs are absolute and exist\n+SOURCE_DIR=\"$(cd \"${SOURCE_DIR}\" && pwd)\"\n+DEST_DIR=\"$(mkdir -p \"${DEST_DIR}\" && cd \"${DEST_DIR}\" && pwd)\"\n+\n+if [ \"$CMAKE_GENERATOR\" = \"\" ]; then\n+  # Look for ninja, prefer it\n+  ninja --version >/dev/null 2>&1\n+  if [ $? -eq 0 ]; then\n \n Review comment:\n   ```suggestion\r\n     if ninja --version >/dev/null 2>&1; then\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T10:19:44.955+0000",
                    "updated": "2019-12-21T10:19:44.955+0000",
                    "started": "2019-12-21T10:19:44.955+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362106",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362107",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360636810\n \n \n\n ##########\n File path: r/inst/build_arrow_static.sh\n ##########\n @@ -0,0 +1,80 @@\n+#!/bin/bash\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# Quit on failure\n+# set -e\n+\n+# Print commands for debugging\n+set -x\n+\n+# By default, this script assumes it's in the top-level dir of the apache/arrow\n+# git repository. Set any of the following env vars to customize where to read\n+# and write from\n+: ${ARROW_HOME:=\"$(pwd)\"}                       # Only used in default SOURCE/BUILD dirs\n+: ${SOURCE_DIR:=\"${ARROW_HOME}/cpp\"}            # Where the C++ source is\n+: ${BUILD_DIR:=\"${ARROW_HOME}/r/libarrow/dist\"} # Where cmake should build\n+: ${DEST_DIR:=\"$BUILD_DIR\"}                     # Where the resulting /lib and /include should be\n+\n+# Make sure SOURCE and DEST dirs are absolute and exist\n+SOURCE_DIR=\"$(cd \"${SOURCE_DIR}\" && pwd)\"\n+DEST_DIR=\"$(mkdir -p \"${DEST_DIR}\" && cd \"${DEST_DIR}\" && pwd)\"\n+\n+if [ \"$CMAKE_GENERATOR\" = \"\" ]; then\n+  # Look for ninja, prefer it\n+  ninja --version >/dev/null 2>&1\n+  if [ $? -eq 0 ]; then\n+    CMAKE_GENERATOR=\"Ninja\"\n+  fi\n+fi\n+\n+mkdir -p \"${BUILD_DIR}\"\n+pushd \"${BUILD_DIR}\"\n+cmake -DCMAKE_BUILD_TYPE=Release \\\n+    -DARROW_DEPENDENCY_SOURCE=BUNDLED \\\n+    -DCMAKE_INSTALL_PREFIX=${DEST_DIR} \\\n \n Review comment:\n   Could you sort this list alphabetically?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T10:19:44.959+0000",
                    "updated": "2019-12-21T10:19:44.959+0000",
                    "started": "2019-12-21T10:19:44.959+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362107",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362108",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360640926\n \n \n\n ##########\n File path: r/configure\n ##########\n @@ -91,6 +96,14 @@ else\n       fi\n       PKG_CFLAGS=\"-I$BREWDIR/opt/$PKG_BREW_NAME/include\"\n       PKG_LIBS=\"-L$BREWDIR/opt/$PKG_BREW_NAME/lib $PKG_LIBS\"\n+    else\n+      VERSION=$(grep ^Version DESCRIPTION | sed s/Version:\\ //)\n+      ${R_HOME}/bin/Rscript tools/linuxlibs.R $VERSION $LOCAL_LIBARROW\n+      PKG_CFLAGS=\"-I$(pwd)/libarrow/arrow-${VERSION}/include $PKG_CFLAGS\"\n+      PKG_LIBS=\"-L$(pwd)/libarrow/arrow-${VERSION}/lib $PKG_LIBS\"\n+      # Also enumerate the static libs included in there\n+      # TODO: this should be generated based on what's in the lib dir\n+      PKG_LIBS=\"$PKG_LIBS -lthrift -lsnappy -lz -lzstd -llz4 -lbrotlidec-static -lbrotlienc-static -lbrotlicommon-static -lboost_filesystem -lboost_regex -lboost_system -ljemalloc_pic\"\n \n Review comment:\n   How about using only static linked `libarrow.so` (shared library) instead of using `libarrow.a` (static library) and other static libraries?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T10:19:45.026+0000",
                    "updated": "2019-12-21T10:19:45.026+0000",
                    "started": "2019-12-21T10:19:45.026+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362108",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362109",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360637371\n \n \n\n ##########\n File path: r/tools/linuxlibs.R\n ##########\n @@ -0,0 +1,131 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+args <- commandArgs(TRUE)\n+VERSION <- args[1]\n+dst_dir <- paste0(\"libarrow/arrow-\", VERSION)\n+src_dir <- NULL\n+download_libs <- identical(tolower(Sys.getenv(\"NOT_CRAN\")), \"true\") || identical(Sys.getenv(\"_R_CHECK_SIZE_OF_TARBALL_\"), \"\")\n+# For local debugging, set ARROW_R_DEV=TRUE to make this script print more\n+quietly <- !identical(tolower(Sys.getenv(\"ARROW_R_DEV\")), \"true\")\n+\n+identify_os <- function(os = Sys.getenv(\"ARROW_BINARY_DISTRO\")) {\n+  # Function to figure out which flavor of binary we should download.\n+  # By default, it will try to discover from the OS what distro-version we're on\n+  # but you can override this by setting the env var ARROW_BINARY_DISTRO to:\n+  # * `FALSE` (not case-sensitive), which tells the script not to download a binary,\n+  # * some other string, presumably a related \"distro-version\" that has binaries\n+  #   built that work for your OS\n+  if (nzchar(os)) {\n+    if (identical(tolower(os), \"false\")) {\n+      # Env var says not to download a binary\n+      return(NULL)\n+    } else {\n+      # Env var provided an os-version to use--maybe you're on Ubuntu 18.10 but\n+      # we only build for 18.04 and that's fine--so use what the user set\n+      return(os)\n+    }\n+  }\n+\n+  has_lsb <- system(\"which lsb_release\", ignore.stdout = TRUE) == 0\n+  if (has_lsb) {\n+    distro <- tolower(system(\"lsb_release -is\", intern = TRUE))\n+    os_version <- system(\"lsb_release -rs\", intern = TRUE)\n+    # In the future, we may be able to do some mapping of distro-versions to\n+    # versions we built for, since there's no way we'll build for everything.\n+    os <- paste0(distro, \"-\", os_version)\n+  } else if (file.exists(\"/etc/system-release\")) {\n+    # Something like \"CentOS Linux release 7.7.1908 (Core)\"\n+    system_release <- tolower(head(readLines(\"/etc/system-release\"), 1))\n+    # Extract from that the distro and the major version number\n+    os <- sub(\"^([a-z]+) .*([0-9]+).*$\", \"\\\\1-\\\\2\", system_release)\n+  } else {\n+    cat(\"*** Unable to identify current OS/version\\n\")\n+    os <- NULL\n+  }\n+  return(os)\n+}\n+\n+if (!file.exists(paste0(dst_dir, \"/include/arrow/api.h\"))) {\n+  # If we're working in a local checkout and have already built the libs, we\n+  # don't need to do anything. Otherwise,\n+  if (length(args) > 1) {\n+    # Arg 2 would be the path/to/lib.zip\n+    # TODO: do we need this option?\n+    localfile <- args[2]\n+    if (file.exists(localfile)) {\n+      cat(sprintf(\"*** Using LOCAL_LIBARROW %s\\n\", localfile))\n+      file.copy(localfile, \"lib.zip\")\n+    } else {\n+      cat(sprintf(\"*** LOCAL_LIBARROW %s does not exist\\n\", localfile))\n+    }\n+  } else if (download_libs) {\n+    base_url <- \"https://dl.bintray.com/ursa-labs/arrow-r/libarrow/\"\n+    # Determine (or take) distro\n+    os <- identify_os()\n+    if (!is.null(os)) {\n+      # Download it, if allowed\n+      binary_url <- paste0(base_url, os, \"/arrow-\", VERSION, \".zip\")\n+      try(\n+        download.file(binary_url, \"lib.zip\", quiet = quietly),\n+        silent = quietly\n+      )\n+    }\n+    if (file.exists(\"lib.zip\")) {\n+      cat(sprintf(\"*** Successfully retrieved C++ binaries for %s\\n\", os))\n+    } else {\n+      if (!is.null(os)) {\n+        cat(sprintf(\"*** No C++ binaries found for %s\\n\", os))\n+      }\n+      # Try to build C++ from source\n+      tf1 <- tempfile()\n+      source_url <- paste0(base_url, \"src/arrow-\", VERSION, \".zip\")\n \n Review comment:\n   Why do we use source archive in ursa-labs/arrow-r instead of the official source archive?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T10:19:45.063+0000",
                    "updated": "2019-12-21T10:19:45.063+0000",
                    "started": "2019-12-21T10:19:45.063+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362109",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362110",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360636852\n \n \n\n ##########\n File path: r/inst/build_arrow_static.sh\n ##########\n @@ -0,0 +1,80 @@\n+#!/bin/bash\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# Quit on failure\n+# set -e\n+\n+# Print commands for debugging\n+set -x\n+\n+# By default, this script assumes it's in the top-level dir of the apache/arrow\n+# git repository. Set any of the following env vars to customize where to read\n+# and write from\n+: ${ARROW_HOME:=\"$(pwd)\"}                       # Only used in default SOURCE/BUILD dirs\n+: ${SOURCE_DIR:=\"${ARROW_HOME}/cpp\"}            # Where the C++ source is\n+: ${BUILD_DIR:=\"${ARROW_HOME}/r/libarrow/dist\"} # Where cmake should build\n+: ${DEST_DIR:=\"$BUILD_DIR\"}                     # Where the resulting /lib and /include should be\n+\n+# Make sure SOURCE and DEST dirs are absolute and exist\n+SOURCE_DIR=\"$(cd \"${SOURCE_DIR}\" && pwd)\"\n+DEST_DIR=\"$(mkdir -p \"${DEST_DIR}\" && cd \"${DEST_DIR}\" && pwd)\"\n+\n+if [ \"$CMAKE_GENERATOR\" = \"\" ]; then\n+  # Look for ninja, prefer it\n+  ninja --version >/dev/null 2>&1\n+  if [ $? -eq 0 ]; then\n+    CMAKE_GENERATOR=\"Ninja\"\n+  fi\n+fi\n+\n+mkdir -p \"${BUILD_DIR}\"\n+pushd \"${BUILD_DIR}\"\n+cmake -DCMAKE_BUILD_TYPE=Release \\\n+    -DARROW_DEPENDENCY_SOURCE=BUNDLED \\\n+    -DCMAKE_INSTALL_PREFIX=${DEST_DIR} \\\n+    -DCMAKE_INSTALL_LIBDIR=lib \\\n+    -DARROW_BUILD_TESTS=OFF \\\n+    -DARROW_BUILD_SHARED=OFF \\\n+    -DARROW_BUILD_STATIC=ON \\\n+    -DARROW_BOOST_USE_SHARED=OFF \\\n+    -DARROW_JEMALLOC=ON \\\n+    -DARROW_COMPUTE=ON \\\n+    -DARROW_CSV=ON \\\n+    -DARROW_FILESYSTEM=ON \\\n+    -DARROW_JSON=ON \\\n+    -DARROW_PARQUET=ON \\\n+    -DARROW_DATASET=ON \\\n+    -DARROW_WITH_BZ2=ON \\\n+    -DARROW_WITH_ZLIB=ON \\\n+    -DARROW_WITH_ZSTD=ON \\\n+    -DARROW_WITH_LZ4=ON \\\n+    -DARROW_WITH_SNAPPY=ON \\\n+    -DARROW_WITH_BROTLI=ON \\\n+    -DOPENSSL_USE_STATIC_LIBS=ON \\\n+    -G ${CMAKE_GENERATOR:-\"Unix Makefiles\"} \\\n+    ${SOURCE_DIR}\n+cmake --build . --target install\n+\n+# Copy the bundled static libs from the build to the install dir\n+find . -regex .*/.*/lib/.*\\\\.a\\$ | xargs -I{} cp -u {} ${DEST_DIR}/lib\n \n Review comment:\n   If we use static linked shared library, we don't need this.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T10:19:45.131+0000",
                    "updated": "2019-12-21T10:19:45.131+0000",
                    "started": "2019-12-21T10:19:45.130+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362110",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362111",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360637087\n \n \n\n ##########\n File path: r/inst/build_arrow_static.sh\n ##########\n @@ -0,0 +1,80 @@\n+#!/bin/bash\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# Quit on failure\n+# set -e\n+\n+# Print commands for debugging\n+set -x\n+\n+# By default, this script assumes it's in the top-level dir of the apache/arrow\n+# git repository. Set any of the following env vars to customize where to read\n+# and write from\n+: ${ARROW_HOME:=\"$(pwd)\"}                       # Only used in default SOURCE/BUILD dirs\n+: ${SOURCE_DIR:=\"${ARROW_HOME}/cpp\"}            # Where the C++ source is\n+: ${BUILD_DIR:=\"${ARROW_HOME}/r/libarrow/dist\"} # Where cmake should build\n+: ${DEST_DIR:=\"$BUILD_DIR\"}                     # Where the resulting /lib and /include should be\n+\n+# Make sure SOURCE and DEST dirs are absolute and exist\n+SOURCE_DIR=\"$(cd \"${SOURCE_DIR}\" && pwd)\"\n+DEST_DIR=\"$(mkdir -p \"${DEST_DIR}\" && cd \"${DEST_DIR}\" && pwd)\"\n+\n+if [ \"$CMAKE_GENERATOR\" = \"\" ]; then\n+  # Look for ninja, prefer it\n+  ninja --version >/dev/null 2>&1\n+  if [ $? -eq 0 ]; then\n+    CMAKE_GENERATOR=\"Ninja\"\n+  fi\n+fi\n+\n+mkdir -p \"${BUILD_DIR}\"\n+pushd \"${BUILD_DIR}\"\n+cmake -DCMAKE_BUILD_TYPE=Release \\\n+    -DARROW_DEPENDENCY_SOURCE=BUNDLED \\\n+    -DCMAKE_INSTALL_PREFIX=${DEST_DIR} \\\n+    -DCMAKE_INSTALL_LIBDIR=lib \\\n+    -DARROW_BUILD_TESTS=OFF \\\n+    -DARROW_BUILD_SHARED=OFF \\\n+    -DARROW_BUILD_STATIC=ON \\\n+    -DARROW_BOOST_USE_SHARED=OFF \\\n+    -DARROW_JEMALLOC=ON \\\n+    -DARROW_COMPUTE=ON \\\n+    -DARROW_CSV=ON \\\n+    -DARROW_FILESYSTEM=ON \\\n+    -DARROW_JSON=ON \\\n+    -DARROW_PARQUET=ON \\\n+    -DARROW_DATASET=ON \\\n+    -DARROW_WITH_BZ2=ON \\\n+    -DARROW_WITH_ZLIB=ON \\\n+    -DARROW_WITH_ZSTD=ON \\\n+    -DARROW_WITH_LZ4=ON \\\n+    -DARROW_WITH_SNAPPY=ON \\\n+    -DARROW_WITH_BROTLI=ON \\\n+    -DOPENSSL_USE_STATIC_LIBS=ON \\\n+    -G ${CMAKE_GENERATOR:-\"Unix Makefiles\"} \\\n+    ${SOURCE_DIR}\n+cmake --build . --target install\n+\n+# Copy the bundled static libs from the build to the install dir\n+find . -regex .*/.*/lib/.*\\\\.a\\$ | xargs -I{} cp -u {} ${DEST_DIR}/lib\n+popd\n+\n+pushd ${DEST_DIR}\n+zip -r libarrow.zip lib/*.a include/\n \n Review comment:\n   Why is this needed?\r\n   Do we need to distribute this archive? If we need to distribute this archive, we should include copyright holder list, license description and so on to satisfy license.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T10:19:45.134+0000",
                    "updated": "2019-12-21T10:19:45.134+0000",
                    "started": "2019-12-21T10:19:45.134+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362111",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362112",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360637581\n \n \n\n ##########\n File path: r/configure\n ##########\n @@ -91,6 +96,14 @@ else\n       fi\n       PKG_CFLAGS=\"-I$BREWDIR/opt/$PKG_BREW_NAME/include\"\n       PKG_LIBS=\"-L$BREWDIR/opt/$PKG_BREW_NAME/lib $PKG_LIBS\"\n+    else\n+      VERSION=$(grep ^Version DESCRIPTION | sed s/Version:\\ //)\n+      ${R_HOME}/bin/Rscript tools/linuxlibs.R $VERSION $LOCAL_LIBARROW\n+      PKG_CFLAGS=\"-I$(pwd)/libarrow/arrow-${VERSION}/include $PKG_CFLAGS\"\n \n Review comment:\n   How about omitting `arrow-${VERSION}/` path component?\r\n   We don't need multiple bundled Apache Arrow C++ for one installation.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T10:19:45.144+0000",
                    "updated": "2019-12-21T10:19:45.144+0000",
                    "started": "2019-12-21T10:19:45.144+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362112",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362113",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360641302\n \n \n\n ##########\n File path: r/configure\n ##########\n @@ -31,7 +31,7 @@ PKG_DEB_NAME=\"(unsuppored)\"\n PKG_RPM_NAME=\"(unsuppored)\"\n PKG_BREW_NAME=\"apache-arrow\"\n PKG_TEST_HEADER=\"<arrow/api.h>\"\n-PKG_LIBS=\"-larrow -lparquet -larrow_dataset\"\n+PKG_LIBS=\"-lparquet -larrow_dataset -larrow\"\n \n Review comment:\n   ```suggestion\r\n   PKG_LIBS=\"-larrow_dataset -lparquet -larrow\"\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T10:19:45.253+0000",
                    "updated": "2019-12-21T10:19:45.253+0000",
                    "started": "2019-12-21T10:19:45.253+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362113",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362114",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360640938\n \n \n\n ##########\n File path: r/configure\n ##########\n @@ -104,6 +117,8 @@ CPPFLAGS=`\"${R_HOME}\"/bin/R CMD config CPPFLAGS`\n # If libarrow uses the old GLIBCXX ABI, so we have to use it too\n if [ \"$ARROW_USE_OLD_CXXABI\" ]; then\n   PKG_CFLAGS=\"$PKG_CFLAGS -D_GLIBCXX_USE_CXX11_ABI=0\"\n+# else\n+#   PKG_CFLAGS=\"$PKG_CFLAGS -D_GLIBCXX_USE_CXX11_ABI=1\"\n \n Review comment:\n   Should we remove this?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T10:19:45.256+0000",
                    "updated": "2019-12-21T10:19:45.256+0000",
                    "started": "2019-12-21T10:19:45.256+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362114",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362115",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360641364\n \n \n\n ##########\n File path: r/configure\n ##########\n @@ -91,6 +96,14 @@ else\n       fi\n       PKG_CFLAGS=\"-I$BREWDIR/opt/$PKG_BREW_NAME/include\"\n       PKG_LIBS=\"-L$BREWDIR/opt/$PKG_BREW_NAME/lib $PKG_LIBS\"\n+    else\n \n Review comment:\n   ```suggestion\r\n       elif [ \"$UNAME\" = \"Linux\" ]; then\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T10:19:45.259+0000",
                    "updated": "2019-12-21T10:19:45.259+0000",
                    "started": "2019-12-21T10:19:45.259+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362115",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362116",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360641003\n \n \n\n ##########\n File path: r/inst/build_arrow_static.sh\n ##########\n @@ -0,0 +1,80 @@\n+#!/bin/bash\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# Quit on failure\n+# set -e\n+\n+# Print commands for debugging\n+set -x\n+\n+# By default, this script assumes it's in the top-level dir of the apache/arrow\n+# git repository. Set any of the following env vars to customize where to read\n+# and write from\n+: ${ARROW_HOME:=\"$(pwd)\"}                       # Only used in default SOURCE/BUILD dirs\n+: ${SOURCE_DIR:=\"${ARROW_HOME}/cpp\"}            # Where the C++ source is\n+: ${BUILD_DIR:=\"${ARROW_HOME}/r/libarrow/dist\"} # Where cmake should build\n+: ${DEST_DIR:=\"$BUILD_DIR\"}                     # Where the resulting /lib and /include should be\n+\n+# Make sure SOURCE and DEST dirs are absolute and exist\n+SOURCE_DIR=\"$(cd \"${SOURCE_DIR}\" && pwd)\"\n+DEST_DIR=\"$(mkdir -p \"${DEST_DIR}\" && cd \"${DEST_DIR}\" && pwd)\"\n+\n+if [ \"$CMAKE_GENERATOR\" = \"\" ]; then\n+  # Look for ninja, prefer it\n+  ninja --version >/dev/null 2>&1\n+  if [ $? -eq 0 ]; then\n+    CMAKE_GENERATOR=\"Ninja\"\n+  fi\n+fi\n+\n+mkdir -p \"${BUILD_DIR}\"\n+pushd \"${BUILD_DIR}\"\n+cmake -DCMAKE_BUILD_TYPE=Release \\\n+    -DARROW_DEPENDENCY_SOURCE=BUNDLED \\\n+    -DCMAKE_INSTALL_PREFIX=${DEST_DIR} \\\n+    -DCMAKE_INSTALL_LIBDIR=lib \\\n+    -DARROW_BUILD_TESTS=OFF \\\n+    -DARROW_BUILD_SHARED=OFF \\\n+    -DARROW_BUILD_STATIC=ON \\\n \n Review comment:\n   We can use static linked shared library with `-DARROW_BUILD_SHARED=ON` (and `-DARROW_BUILD_STATIC_OFF`).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T10:19:45.327+0000",
                    "updated": "2019-12-21T10:19:45.327+0000",
                    "started": "2019-12-21T10:19:45.326+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362116",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362155",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360657143\n \n \n\n ##########\n File path: r/configure\n ##########\n @@ -91,6 +96,14 @@ else\n       fi\n       PKG_CFLAGS=\"-I$BREWDIR/opt/$PKG_BREW_NAME/include\"\n       PKG_LIBS=\"-L$BREWDIR/opt/$PKG_BREW_NAME/lib $PKG_LIBS\"\n+    else\n+      VERSION=$(grep ^Version DESCRIPTION | sed s/Version:\\ //)\n+      ${R_HOME}/bin/Rscript tools/linuxlibs.R $VERSION $LOCAL_LIBARROW\n+      PKG_CFLAGS=\"-I$(pwd)/libarrow/arrow-${VERSION}/include $PKG_CFLAGS\"\n \n Review comment:\n   We could; I was starting from https://github.com/apache/arrow/blob/master/r/tools/winlibs.R which does this business on Windows (and was originally provided by Jeroen, who maintains https://github.com/rwinlib). Aside from cargo cult, I have found the directory versioning helps if you run this in your local git checkout, helps make sure that the C++ library version you use matches the R package version. For the installed package itself, it doesn't matter what the directory is called because this is all temporary.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T16:51:55.479+0000",
                    "updated": "2019-12-21T16:51:55.479+0000",
                    "started": "2019-12-21T16:51:55.478+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362155",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362156",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360657568\n \n \n\n ##########\n File path: r/configure\n ##########\n @@ -91,6 +96,14 @@ else\n       fi\n       PKG_CFLAGS=\"-I$BREWDIR/opt/$PKG_BREW_NAME/include\"\n       PKG_LIBS=\"-L$BREWDIR/opt/$PKG_BREW_NAME/lib $PKG_LIBS\"\n+    else\n+      VERSION=$(grep ^Version DESCRIPTION | sed s/Version:\\ //)\n+      ${R_HOME}/bin/Rscript tools/linuxlibs.R $VERSION $LOCAL_LIBARROW\n+      PKG_CFLAGS=\"-I$(pwd)/libarrow/arrow-${VERSION}/include $PKG_CFLAGS\"\n+      PKG_LIBS=\"-L$(pwd)/libarrow/arrow-${VERSION}/lib $PKG_LIBS\"\n+      # Also enumerate the static libs included in there\n+      # TODO: this should be generated based on what's in the lib dir\n+      PKG_LIBS=\"$PKG_LIBS -lthrift -lsnappy -lz -lzstd -llz4 -lbrotlidec-static -lbrotlienc-static -lbrotlicommon-static -lboost_filesystem -lboost_regex -lboost_system -ljemalloc_pic\"\n \n Review comment:\n   My understanding (from e.g. https://github.com/r-windows/rtools-packages#building-package and the similar macOS system) is that we can only download static libs during package installation. The package gets built in a temp directory and creates a shared library `arrow.so` from the R C++ binding code and these libraries, so if we downloaded and linked a shared `libarrow.so` in that, the package won't be able to load because it won't be able to find `libarrow.so` at runtime.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T16:51:55.563+0000",
                    "updated": "2019-12-21T16:51:55.563+0000",
                    "started": "2019-12-21T16:51:55.563+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362156",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362157",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360657767\n \n \n\n ##########\n File path: r/inst/build_arrow_static.sh\n ##########\n @@ -0,0 +1,80 @@\n+#!/bin/bash\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# Quit on failure\n+# set -e\n+\n+# Print commands for debugging\n+set -x\n+\n+# By default, this script assumes it's in the top-level dir of the apache/arrow\n+# git repository. Set any of the following env vars to customize where to read\n+# and write from\n+: ${ARROW_HOME:=\"$(pwd)\"}                       # Only used in default SOURCE/BUILD dirs\n+: ${SOURCE_DIR:=\"${ARROW_HOME}/cpp\"}            # Where the C++ source is\n+: ${BUILD_DIR:=\"${ARROW_HOME}/r/libarrow/dist\"} # Where cmake should build\n+: ${DEST_DIR:=\"$BUILD_DIR\"}                     # Where the resulting /lib and /include should be\n+\n+# Make sure SOURCE and DEST dirs are absolute and exist\n+SOURCE_DIR=\"$(cd \"${SOURCE_DIR}\" && pwd)\"\n+DEST_DIR=\"$(mkdir -p \"${DEST_DIR}\" && cd \"${DEST_DIR}\" && pwd)\"\n+\n+if [ \"$CMAKE_GENERATOR\" = \"\" ]; then\n+  # Look for ninja, prefer it\n+  ninja --version >/dev/null 2>&1\n+  if [ $? -eq 0 ]; then\n+    CMAKE_GENERATOR=\"Ninja\"\n+  fi\n+fi\n+\n+mkdir -p \"${BUILD_DIR}\"\n+pushd \"${BUILD_DIR}\"\n+cmake -DCMAKE_BUILD_TYPE=Release \\\n+    -DARROW_DEPENDENCY_SOURCE=BUNDLED \\\n+    -DCMAKE_INSTALL_PREFIX=${DEST_DIR} \\\n+    -DCMAKE_INSTALL_LIBDIR=lib \\\n+    -DARROW_BUILD_TESTS=OFF \\\n+    -DARROW_BUILD_SHARED=OFF \\\n+    -DARROW_BUILD_STATIC=ON \\\n+    -DARROW_BOOST_USE_SHARED=OFF \\\n+    -DARROW_JEMALLOC=ON \\\n+    -DARROW_COMPUTE=ON \\\n+    -DARROW_CSV=ON \\\n+    -DARROW_FILESYSTEM=ON \\\n+    -DARROW_JSON=ON \\\n+    -DARROW_PARQUET=ON \\\n+    -DARROW_DATASET=ON \\\n+    -DARROW_WITH_BZ2=ON \\\n+    -DARROW_WITH_ZLIB=ON \\\n+    -DARROW_WITH_ZSTD=ON \\\n+    -DARROW_WITH_LZ4=ON \\\n+    -DARROW_WITH_SNAPPY=ON \\\n+    -DARROW_WITH_BROTLI=ON \\\n+    -DOPENSSL_USE_STATIC_LIBS=ON \\\n+    -G ${CMAKE_GENERATOR:-\"Unix Makefiles\"} \\\n+    ${SOURCE_DIR}\n+cmake --build . --target install\n+\n+# Copy the bundled static libs from the build to the install dir\n+find . -regex .*/.*/lib/.*\\\\.a\\$ | xargs -I{} cp -u {} ${DEST_DIR}/lib\n+popd\n+\n+pushd ${DEST_DIR}\n+zip -r libarrow.zip lib/*.a include/\n \n Review comment:\n   I'll probably move this to a different script; we only need this step for publishing the prebuilt libraries, not for when this script is called from R package installation. (And thanks for the reminder, I'll add LICENSE and NOTICE.)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T16:51:55.597+0000",
                    "updated": "2019-12-21T16:51:55.597+0000",
                    "started": "2019-12-21T16:51:55.597+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362157",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362158",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360657955\n \n \n\n ##########\n File path: r/tools/linuxlibs.R\n ##########\n @@ -0,0 +1,131 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+args <- commandArgs(TRUE)\n+VERSION <- args[1]\n+dst_dir <- paste0(\"libarrow/arrow-\", VERSION)\n+src_dir <- NULL\n+download_libs <- identical(tolower(Sys.getenv(\"NOT_CRAN\")), \"true\") || identical(Sys.getenv(\"_R_CHECK_SIZE_OF_TARBALL_\"), \"\")\n+# For local debugging, set ARROW_R_DEV=TRUE to make this script print more\n+quietly <- !identical(tolower(Sys.getenv(\"ARROW_R_DEV\")), \"true\")\n+\n+identify_os <- function(os = Sys.getenv(\"ARROW_BINARY_DISTRO\")) {\n+  # Function to figure out which flavor of binary we should download.\n+  # By default, it will try to discover from the OS what distro-version we're on\n+  # but you can override this by setting the env var ARROW_BINARY_DISTRO to:\n+  # * `FALSE` (not case-sensitive), which tells the script not to download a binary,\n+  # * some other string, presumably a related \"distro-version\" that has binaries\n+  #   built that work for your OS\n+  if (nzchar(os)) {\n+    if (identical(tolower(os), \"false\")) {\n+      # Env var says not to download a binary\n+      return(NULL)\n+    } else {\n+      # Env var provided an os-version to use--maybe you're on Ubuntu 18.10 but\n+      # we only build for 18.04 and that's fine--so use what the user set\n+      return(os)\n+    }\n+  }\n+\n+  has_lsb <- system(\"which lsb_release\", ignore.stdout = TRUE) == 0\n+  if (has_lsb) {\n+    distro <- tolower(system(\"lsb_release -is\", intern = TRUE))\n+    os_version <- system(\"lsb_release -rs\", intern = TRUE)\n+    # In the future, we may be able to do some mapping of distro-versions to\n+    # versions we built for, since there's no way we'll build for everything.\n+    os <- paste0(distro, \"-\", os_version)\n+  } else if (file.exists(\"/etc/system-release\")) {\n+    # Something like \"CentOS Linux release 7.7.1908 (Core)\"\n+    system_release <- tolower(head(readLines(\"/etc/system-release\"), 1))\n+    # Extract from that the distro and the major version number\n+    os <- sub(\"^([a-z]+) .*([0-9]+).*$\", \"\\\\1-\\\\2\", system_release)\n+  } else {\n+    cat(\"*** Unable to identify current OS/version\\n\")\n+    os <- NULL\n+  }\n+  return(os)\n+}\n+\n+if (!file.exists(paste0(dst_dir, \"/include/arrow/api.h\"))) {\n+  # If we're working in a local checkout and have already built the libs, we\n+  # don't need to do anything. Otherwise,\n+  if (length(args) > 1) {\n+    # Arg 2 would be the path/to/lib.zip\n+    # TODO: do we need this option?\n+    localfile <- args[2]\n+    if (file.exists(localfile)) {\n+      cat(sprintf(\"*** Using LOCAL_LIBARROW %s\\n\", localfile))\n+      file.copy(localfile, \"lib.zip\")\n+    } else {\n+      cat(sprintf(\"*** LOCAL_LIBARROW %s does not exist\\n\", localfile))\n+    }\n+  } else if (download_libs) {\n+    base_url <- \"https://dl.bintray.com/ursa-labs/arrow-r/libarrow/\"\n+    # Determine (or take) distro\n+    os <- identify_os()\n+    if (!is.null(os)) {\n+      # Download it, if allowed\n+      binary_url <- paste0(base_url, os, \"/arrow-\", VERSION, \".zip\")\n+      try(\n+        download.file(binary_url, \"lib.zip\", quiet = quietly),\n+        silent = quietly\n+      )\n+    }\n+    if (file.exists(\"lib.zip\")) {\n+      cat(sprintf(\"*** Successfully retrieved C++ binaries for %s\\n\", os))\n+    } else {\n+      if (!is.null(os)) {\n+        cat(sprintf(\"*** No C++ binaries found for %s\\n\", os))\n+      }\n+      # Try to build C++ from source\n+      tf1 <- tempfile()\n+      source_url <- paste0(base_url, \"src/arrow-\", VERSION, \".zip\")\n \n Review comment:\n   Yeah I thought about that, wondered if you'd ask ;) I think I'll still have it check bintray first, in case there's some amendment we have to make after the official release (we have, at least for the R package but not the C++ code, for each of the last couple of releases in order to satisfy some CRAN check). But I won't put one on bintray for an official release if we can use the official source.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T16:51:55.666+0000",
                    "updated": "2019-12-21T16:51:55.666+0000",
                    "started": "2019-12-21T16:51:55.665+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362158",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362159",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360657687\n \n \n\n ##########\n File path: r/configure\n ##########\n @@ -104,6 +117,8 @@ CPPFLAGS=`\"${R_HOME}\"/bin/R CMD config CPPFLAGS`\n # If libarrow uses the old GLIBCXX ABI, so we have to use it too\n if [ \"$ARROW_USE_OLD_CXXABI\" ]; then\n   PKG_CFLAGS=\"$PKG_CFLAGS -D_GLIBCXX_USE_CXX11_ABI=0\"\n+# else\n+#   PKG_CFLAGS=\"$PKG_CFLAGS -D_GLIBCXX_USE_CXX11_ABI=1\"\n \n Review comment:\n   I had this in for debugging because I was looking at a system where old ABI was default. I still want to test on more systems, and I'll clean it up if this isn't something we ever want.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T16:51:55.831+0000",
                    "updated": "2019-12-21T16:51:55.831+0000",
                    "started": "2019-12-21T16:51:55.830+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362159",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362200",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360671908\n \n \n\n ##########\n File path: r/configure\n ##########\n @@ -91,6 +96,14 @@ else\n       fi\n       PKG_CFLAGS=\"-I$BREWDIR/opt/$PKG_BREW_NAME/include\"\n       PKG_LIBS=\"-L$BREWDIR/opt/$PKG_BREW_NAME/lib $PKG_LIBS\"\n+    else\n+      VERSION=$(grep ^Version DESCRIPTION | sed s/Version:\\ //)\n+      ${R_HOME}/bin/Rscript tools/linuxlibs.R $VERSION $LOCAL_LIBARROW\n+      PKG_CFLAGS=\"-I$(pwd)/libarrow/arrow-${VERSION}/include $PKG_CFLAGS\"\n+      PKG_LIBS=\"-L$(pwd)/libarrow/arrow-${VERSION}/lib $PKG_LIBS\"\n+      # Also enumerate the static libs included in there\n+      # TODO: this should be generated based on what's in the lib dir\n+      PKG_LIBS=\"$PKG_LIBS -lthrift -lsnappy -lz -lzstd -llz4 -lbrotlidec-static -lbrotlienc-static -lbrotlicommon-static -lboost_filesystem -lboost_regex -lboost_system -ljemalloc_pic\"\n \n Review comment:\n   Oh...\r\n   \r\n   BTW, we'll be able to use pkg-config to collect build flags. If we use `pkg-config --define-variable=libdir=$(pwd)/libarrow-arrow-${VERSION}/lib --libs --static arrow`, it should return suitable `-lXXX` flags.\r\n   To do this, we need to add `Requires.private: thrift snappy lz ...` to `arrow.pc`.\r\n   \r\n   I'll be able work on this in the next month.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T23:04:11.114+0000",
                    "updated": "2019-12-21T23:04:11.114+0000",
                    "started": "2019-12-21T23:04:11.113+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362200",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362201",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360671962\n \n \n\n ##########\n File path: r/configure\n ##########\n @@ -91,6 +96,14 @@ else\n       fi\n       PKG_CFLAGS=\"-I$BREWDIR/opt/$PKG_BREW_NAME/include\"\n       PKG_LIBS=\"-L$BREWDIR/opt/$PKG_BREW_NAME/lib $PKG_LIBS\"\n+    else\n+      VERSION=$(grep ^Version DESCRIPTION | sed s/Version:\\ //)\n+      ${R_HOME}/bin/Rscript tools/linuxlibs.R $VERSION $LOCAL_LIBARROW\n+      PKG_CFLAGS=\"-I$(pwd)/libarrow/arrow-${VERSION}/include $PKG_CFLAGS\"\n \n Review comment:\n   I see.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T23:04:11.117+0000",
                    "updated": "2019-12-21T23:04:11.117+0000",
                    "started": "2019-12-21T23:04:11.117+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362201",
                    "issueId": "13260618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/worklog/362202",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6068: ARROW-6793: [R] Arrow C++ binary packaging for Linux\nURL: https://github.com/apache/arrow/pull/6068#discussion_r360672088\n \n \n\n ##########\n File path: r/tools/linuxlibs.R\n ##########\n @@ -0,0 +1,131 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+args <- commandArgs(TRUE)\n+VERSION <- args[1]\n+dst_dir <- paste0(\"libarrow/arrow-\", VERSION)\n+src_dir <- NULL\n+download_libs <- identical(tolower(Sys.getenv(\"NOT_CRAN\")), \"true\") || identical(Sys.getenv(\"_R_CHECK_SIZE_OF_TARBALL_\"), \"\")\n+# For local debugging, set ARROW_R_DEV=TRUE to make this script print more\n+quietly <- !identical(tolower(Sys.getenv(\"ARROW_R_DEV\")), \"true\")\n+\n+identify_os <- function(os = Sys.getenv(\"ARROW_BINARY_DISTRO\")) {\n+  # Function to figure out which flavor of binary we should download.\n+  # By default, it will try to discover from the OS what distro-version we're on\n+  # but you can override this by setting the env var ARROW_BINARY_DISTRO to:\n+  # * `FALSE` (not case-sensitive), which tells the script not to download a binary,\n+  # * some other string, presumably a related \"distro-version\" that has binaries\n+  #   built that work for your OS\n+  if (nzchar(os)) {\n+    if (identical(tolower(os), \"false\")) {\n+      # Env var says not to download a binary\n+      return(NULL)\n+    } else {\n+      # Env var provided an os-version to use--maybe you're on Ubuntu 18.10 but\n+      # we only build for 18.04 and that's fine--so use what the user set\n+      return(os)\n+    }\n+  }\n+\n+  has_lsb <- system(\"which lsb_release\", ignore.stdout = TRUE) == 0\n+  if (has_lsb) {\n+    distro <- tolower(system(\"lsb_release -is\", intern = TRUE))\n+    os_version <- system(\"lsb_release -rs\", intern = TRUE)\n+    # In the future, we may be able to do some mapping of distro-versions to\n+    # versions we built for, since there's no way we'll build for everything.\n+    os <- paste0(distro, \"-\", os_version)\n+  } else if (file.exists(\"/etc/system-release\")) {\n+    # Something like \"CentOS Linux release 7.7.1908 (Core)\"\n+    system_release <- tolower(head(readLines(\"/etc/system-release\"), 1))\n+    # Extract from that the distro and the major version number\n+    os <- sub(\"^([a-z]+) .*([0-9]+).*$\", \"\\\\1-\\\\2\", system_release)\n+  } else {\n+    cat(\"*** Unable to identify current OS/version\\n\")\n+    os <- NULL\n+  }\n+  return(os)\n+}\n+\n+if (!file.exists(paste0(dst_dir, \"/include/arrow/api.h\"))) {\n+  # If we're working in a local checkout and have already built the libs, we\n+  # don't need to do anything. Otherwise,\n+  if (length(args) > 1) {\n+    # Arg 2 would be the path/to/lib.zip\n+    # TODO: do we need this option?\n+    localfile <- args[2]\n+    if (file.exists(localfile)) {\n+      cat(sprintf(\"*** Using LOCAL_LIBARROW %s\\n\", localfile))\n+      file.copy(localfile, \"lib.zip\")\n+    } else {\n+      cat(sprintf(\"*** LOCAL_LIBARROW %s does not exist\\n\", localfile))\n+    }\n+  } else if (download_libs) {\n+    base_url <- \"https://dl.bintray.com/ursa-labs/arrow-r/libarrow/\"\n+    # Determine (or take) distro\n+    os <- identify_os()\n+    if (!is.null(os)) {\n+      # Download it, if allowed\n+      binary_url <- paste0(base_url, os, \"/arrow-\", VERSION, \".zip\")\n+      try(\n+        download.file(binary_url, \"lib.zip\", quiet = quietly),\n+        silent = quietly\n+      )\n+    }\n+    if (file.exists(\"lib.zip\")) {\n+      cat(sprintf(\"*** Successfully retrieved C++ binaries for %s\\n\", os))\n+    } else {\n+      if (!is.null(os)) {\n+        cat(sprintf(\"*** No C++ binaries found for %s\\n\", os))\n+      }\n+      # Try to build C++ from source\n+      tf1 <- tempfile()\n+      source_url <- paste0(base_url, \"src/arrow-\", VERSION, \".zip\")\n \n Review comment:\n   I see.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-21T23:04:11.261+0000",
                    "updated": "2019-12-21T23:04:11.261+0000",
                    "started": "2019-12-21T23:04:11.260+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "362202",
                    "issueId": "13260618"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 49800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2805ef86[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ea4e2f3[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@120f5966[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2b8592ae[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@79c619b3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@63416eef[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@bedcf88[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@cfa3cb9[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@45b8b714[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2de69f5a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@481284e1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@15d066ae[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 49800,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Jan 12 16:53:30 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-01-12T16:53:30.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6793/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2019-10-04T18:06:52.000+0000",
        "updated": "2020-01-12T16:54:03.000+0000",
        "timeoriginalestimate": null,
        "description": "Our current installation experience on Linux isn't ideal. Unless you've already installed the Arrow C++ library, when you install the R package, you get a shell that tells you to install the C++ library. That was a useful approach to allow us to get the package on CRAN, which makes it easy for macOS and Windows users to install, but it doesn't improve the installation experience for Linux users. This is an impediment to adoption of arrow not only by users but also by package maintainers who might want to depend on arrow.\u00a0\r\n\r\nmacOS and Windows have a better experience because at installation time, the configure scripts download and statically link a prebuilt C++ library. CRAN bundles the whole thing up and delivers that as a binary R package.\u00a0\r\n\r\nPython wheels do a similar thing: they're binaries that contain all external dependencies. And there are pyarrow wheels for Linux. This suggests that we could do something similar for R: build a generic Linux binary of the C++ library and download it in the R package configure script at install time.\r\n\r\nI experimented with using the Arrow C++ binaries included in the Python wheels in R. See discussion at the end of ARROW-5956. This worked on macOS (not useful for R, but it proved the concept) and almost worked on Linux, but it turned out that the \"manylinux2010\" standard is too archaic to work with contemporary Rcpp.\u00a0\r\n\r\nProposal: do a similar workflow to what the manylinux2010 pyarrow build does, just with slightly more modern compiler/settings. Publish that C++ binary package to bintray. Then download it in the R configure script\u00a0if a local/system package isn't found.\r\n\r\nOnce we have a basic version working, test against various distros on [R-hub|https://builder.r-hub.io/advanced]\u00a0to make sure we're solid everywhere and/or ensure the current fallback behavior when we encounter a distro that this doesn't work for. If necessary, we can make multiple flavors of this C++ binary for debian, centos, etc.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "13h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 49800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Arrow C++ binary packaging for Linux",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16944786",
                    "id": "16944786",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "+1. We should be able to take the manylinux2010 base image and tweak the CXXFLAGS to suit R's requirements. \r\n\r\nNote that we may have to generate two different libraries, one for pre-gcc5 ABI and one for post. I think manylinux2010 uses the pre-gcc5 ABI in the interest of broad spectrum compatibility. The R build may need to detect which ABI the active configuration needs. Not sure how easy that will be",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-04T19:38:45.329+0000",
                    "updated": "2019-10-04T19:38:45.329+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16945433",
                    "id": "16945433",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tschm",
                        "name": "tschm",
                        "key": "tschm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Schm",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Very recently i had the pleasure to install arrow on Linux. At this stage let me first remark that without the help of @xhochy and @kou I certainly would have failed. I have now managed to install(? still quite a lot of warning messages) in a rocker container. I have published the docker-image here:\r\n\r\nhttps://hub.docker.com/r/tschm/rocker-arrow\r\n\r\nMaybe one of the experts could fix and/or improve it? Many thanks\r\n\r\nThomas",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tschm",
                        "name": "tschm",
                        "key": "tschm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Schm",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-10-06T19:39:31.670+0000",
                    "updated": "2019-10-06T19:39:31.670+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16948725",
                    "id": "16948725",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tschm",
                        "name": "tschm",
                        "key": "tschm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Schm",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "The new version is breaking my Dockerfile.  Here's some output:\r\n\r\nStep 6/6 : RUN install2.r --error --deps TRUE arrow\r\n ---> Running in 16553854c478\r\ntrying URL 'https://mran.microsoft.com/snapshot/2019-09-19/src/contrib/arrow_0.14.1.1.tar.gz'\r\nContent type 'application/octet-stream' length 105910 bytes (103 KB)\r\n==================================================\r\ndownloaded 103 KB\r\n\r\n* installing *source* package \u2018arrow\u2019 ...\r\n** package \u2018arrow\u2019 successfully unpacked and MD5 sums checked\r\n** using staged installation\r\nArrow C++ libraries found via pkg-config\r\nPKG_CFLAGS=-DNDEBUG -DARROW_R_WITH_ARROW\r\nPKG_LIBS=-larrow -lparquet\r\n** libs\r\ng++ -std=gnu++11 -I\"/usr/local/lib/R/include\" -DNDEBUG -DNDEBUG -DARROW_R_WITH_ARROW -I\"/usr/local/lib/R/site-library/Rcpp/include\" -I/usr/local/include -fvisibility=hidden -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c array.cpp -o array.o\r\ng++ -std=gnu++11 -I\"/usr/local/lib/R/include\" -DNDEBUG -DNDEBUG -DARROW_R_WITH_ARROW -I\"/usr/local/lib/R/site-library/Rcpp/include\" -I/usr/local/include -fvisibility=hidden -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c array__to_vector.cpp -o array__to_vector.o\r\narray__to_vector.cpp:22:35: fatal error: arrow/util/task-group.h: No such file or directory\r\n #include <arrow/util/task-group.h>\r\n                                   ^\r\ncompilation terminated.\r\nmake: *** [array__to_vector.o] Error 1\r\n/usr/local/lib/R/etc/Makeconf:176: recipe for target 'array__to_vector.o' failed\r\nERROR: compilation failed for package \u2018arrow\u2019\r\n* removing \u2018/usr/local/lib/R/site-library/arrow\u2019\r\n\r\nThe downloaded source packages are in\r\n\t\u2018/tmp/downloaded_packages\u2019\r\nError: installation of package \u2018arrow\u2019 had non-zero exit status\r\nIn addition: Warning message:\r\nIn install.packages(pkgs, ...) :\r\n  installation of package \u2018arrow\u2019 had non-zero exit status\r\nERROR: Service 'r' failed to build: The command '/bin/sh -c install2.r --error --deps TRUE arrow' returned a non-zero code: 1\r\n/home/thomas/github/antarctic/r/Makefile:23: recipe for target 'build' failed",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tschm",
                        "name": "tschm",
                        "key": "tschm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Schm",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-10-10T16:02:03.662+0000",
                    "updated": "2019-10-10T16:02:03.662+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16948734",
                    "id": "16948734",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "> trying URL '[https://mran.microsoft.com/snapshot/2019-09-19/src/contrib/arrow_0.14.1.1.tar.gz']\r\n\r\nThat's not the new version of arrow. For development purposes you should be installing from the git repository, not CRAN (and definitely not an old snapshot of CRAN).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-10-10T16:08:54.496+0000",
                    "updated": "2019-10-10T16:08:54.496+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16948740",
                    "id": "16948740",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tschm",
                        "name": "tschm",
                        "key": "tschm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Schm",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "The latest greatest version on cran is 0.15.0 from October 7. I really don't understand enough R. Nor the ways it tries to cope with dependency hell. Managed now via remotes::install_github(\"apache/arrow/r\"). Would be amazing if there could be a more official Dockerfile taking R users through the experience you call not ideal. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tschm",
                        "name": "tschm",
                        "key": "tschm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Schm",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-10-10T16:14:43.073+0000",
                    "updated": "2019-10-10T16:14:43.073+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16948774",
                    "id": "16948774",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "You're welcome to use\u00a0[https://github.com/apache/arrow/blob/master/r/Dockerfile]. Though for the record, this ticket is about something different.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-10-10T16:56:30.282+0000",
                    "updated": "2019-10-10T16:56:30.282+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16949227",
                    "id": "16949227",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tschm",
                        "name": "tschm",
                        "key": "tschm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Schm",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Yes, I guess this ticket is addressing a subproblem of getting arrow into R on Linux. Solving this problem is unfortunately a huge task and the information is in fragments over Github, Jira and several articles. It's a very unfortunate situation. Trying to install apache/arrow/r from Github worked yesterday but fails today. The problem today relates to a commit you have done yesterday\r\n\r\ncompression.cpp: In function \u2018bool util___Codec__IsAvailable(arrow::Compression::type)\u2019:\r\ncompression.cpp:37:10: error: \u2018IsAvailable\u2019 is not a member of \u2018arrow::util::Codec\u2019\r\n   return arrow::util::Codec::IsAvailable(codec);\r\n          ^~~~~\r\n\r\nAre the libraries I link to outdated? I did a fresh pull just a few minutes ago. Is there way to specify a certain tag in the install via github route? ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tschm",
                        "name": "tschm",
                        "key": "tschm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Schm",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-10-11T07:46:35.738+0000",
                    "updated": "2019-10-11T07:46:35.738+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16949489",
                    "id": "16949489",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "If you're building from master, you need to build both the C++ and R libraries from master. In general the git revision of both libraries should be the same",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-11T14:14:41.272+0000",
                    "updated": "2019-10-11T14:14:41.272+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16949763",
                    "id": "16949763",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tschm",
                        "name": "tschm",
                        "key": "tschm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Schm",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Gosh, that's a big can. Is there a chance to keep the precompiled libraries, see https://arrow.apache.org/install/ somewhat in sync with a tagged version from github? At the moment the libraries or all pointing to 0.15.0 etc. but CRAN is lagging and Github is somewhat ahead. Maybe it's a stupid idea in the first place to try to rely on this precomiled libraries? Or maybe one could install slightly outdated libraries to stay in sync with CRAN? ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tschm",
                        "name": "tschm",
                        "key": "tschm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Schm",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-10-11T19:48:00.726+0000",
                    "updated": "2019-10-11T19:48:00.726+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16949770",
                    "id": "16949770",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "The binaries available on the install page\u00a0_are_ in sync with tagged versions on GitHub, but you seem to be installing the head of the master branch (what you get if you do install_github without specifying a tag). If you want to use the built binary libraries for an official release version of the C++ library, you need to use the corresponding R package. You can get that from CRAN\u2013it isn't lagging. In the output you pasted above, you were installing from a CRAN snapshot \"https://mran.microsoft.com/snapshot/2019-09-19/\". That's your lag.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-10-11T20:01:56.840+0000",
                    "updated": "2019-10-11T20:01:56.840+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16949785",
                    "id": "16949785",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tschm",
                        "name": "tschm",
                        "key": "tschm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Schm",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Awesome, that's good news. Everyone following this thread. To install a tagged version from Github run\r\nR -e 'remotes::install_github(\"apache/arrow/r@apache-arrow-0.15.0\")'\r\nor with CRAN\r\ndevtools::install_version(\"arrow\", version = \"0.15.0\", repos = \"http://cran.us.r-project.org\")\r\n\r\nThanks for all your help on that issue. The documentation on downloading the precompiled libraries is unfortunately slightly outdated. But @kou is already on the case.  If I understand the linking process correctly there is no need to specify any version number for the precompiled libraries as debian is given merely access to a software archive and the compiler/linker can pick any library in need. I couldn't agree more with the initial premise of this thread. The experience for people running arrow on Linux relying on this binary packages is not exactly ideal :-) Painful. Thanks again... Note that the documentation is too terse for people not familiar with deep knowledge of debian and the way it can access libraries and/or familiar with devtools.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tschm",
                        "name": "tschm",
                        "key": "tschm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Thomas Schm",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-10-11T20:40:33.821+0000",
                    "updated": "2019-10-11T20:40:33.821+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16949791",
                    "id": "16949791",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "You don't need devtools/remotes if you want to install the current version. Just install it from CRAN.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-10-11T20:45:28.098+0000",
                    "updated": "2019-10-11T20:45:28.098+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16990210",
                    "id": "16990210",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I've picked this back up this week. Now that manylinux2014 is starting to happen (ARROW-7344), I've tried to use that as a source for libarrow et al., hoping that a less-ancient base image would solve the ABI issues I experienced with manylinux2010 wheels. Unfortunately, the behavior with\u00a0manylinux2014 is the same as with\u00a0manylinux2010. To recap, in my R build script, I'm first downloading a wheel, unzipping it, and pointing to it for the lib/include dirs (cf.\u00a0[https://github.com/nealrichardson/sandbox/blob/5ad43525e8d5a9fc25e33fde888408629c421d52/.travis.yml#L11-L20]), and:\r\n * Building the R package without {{-D_GLIBCXX_USE_CXX11_ABI=0}}, I get an undefined symbol (e.g. [https://travis-ci.org/nealrichardson/sandbox/builds/621785506#L1603])\r\n * Adding {{-D_GLIBCXX_USE_CXX11_ABI=0}}, the package installs and works _except_ for when {{Rcpp::stop}} is called to raise an exception. This causes a core dump, typically {{bad_alloc}} trying to handle the exception message (backtrace here: [https://travis-ci.org/nealrichardson/sandbox/builds/621402417#L1892]). Symptoms are similar to [https://stackoverflow.com/questions/56494095/rcppstop-crashes-r-under-g]\r\n\r\nI'm struggling to figure out how to proceed. It looks like using the wheels themselves won't work for R, but maybe using the wheel base image (stripped down as it is) is a good starting point to build a generic library without having to create as much parallel infrastructure. But I'm not sure how exactly to tweak the cmake/flags to make this work\u2013this is not my area of expertise. Or maybe this is the wrong approach entirely.\r\n\r\nThoughts [~kou] [~kszucs]? (N.B. in reviewing this ticket you can disregard the previous comment thread, it's unrelated to this problem.)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-12-06T22:54:46.828+0000",
                    "updated": "2019-12-06T22:54:46.828+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16990340",
                    "id": "16990340",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Generally, I don't like manylinux approach, one binary for multiple Linux environments. Because it requires static linking or bundling many shared libraries.\r\n\r\nStatic linking isn't good for security. If there is a static linked library in our dependency, we need to release a new version with fixed bundled library as soon as possible. It's difficult because we need to vote for official release.\r\n\r\nBundling many shared libraries has the same security problem. It also has conflict problem. If X library is bundled in A library and B library, X library in A and B must be the same version. If X in A and X in B are different version, it may be cause some errors.\r\n\r\nHow about installing our official deb/rpm packages automatically at install time? Ruby (Red Arrow) does so.\r\n\r\nWhich Linux distributions should we support? Here are supported distributions for now:\r\n\r\n  * Debian GNU/Linux 9\r\n  * Debian GNU/Linux 10\r\n  * Ubuntu 16.04\r\n  * Ubuntu 18.04\r\n  * Ubuntu 19.10\r\n  * CentOS/RHEL 6\r\n  * CentOS/RHEL 7\r\n  * CentOS/RHEL 8",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2019-12-07T05:27:50.432+0000",
                    "updated": "2019-12-07T05:27:50.432+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16990650",
                    "id": "16990650",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Unfortunately, R packages are not allowed to install system dependencies, so that's why I was looking into the manylinux approach. Not ideal but seems like the second-best solution. I'm less worried about the security risks of static linking because I plan to host nightly packages (like I'm doing for macOS and Windows R packages) so we can handle patches there. (Also, that seems like the tradeoff we're stuck with.)\r\n\r\nGiven that, any suggestions?\r\n\r\nMy hope is to get a \"manylinux\"-ish binary and set up some CI to see how many distributions that covers. I'm hoping for a reasonable coverage of versions of debian/ubuntu/centos.\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-12-07T23:06:43.645+0000",
                    "updated": "2019-12-07T23:06:43.645+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16991094",
                    "id": "16991094",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "> R packages are not allowed to install system dependencies\r\n\r\nWhy? Because root privilege isn't supplied?\r\n\r\nRuby packages uses {{sudo}} automatically if it's needed.\r\n\r\nAnother approach: How about extracting .deb/.rpm contents for each distribution instead of creating new \"manylinux\"-ish binary? We already have binaries for Debian/Ubuntu/CentOS. We can use them.\r\n\r\nWe can extract .deb by {{dpkg -x}}. It doesn't require root privilege. We can download a package by {{apt download ${PACKAGE_NAME}}. We can collect depended packages by {{apt depends ${PACKAGE_NAME}}}.\r\n\r\nWe can extract .rpm by {{rpm2cpio}} and {{cpio}}. It doesn't require root privilege. We can download a package by {{dnf download ${PACKAGE_NAME}}}/{{yum download ${PACKAGE_NAME}}} but we need to install additional packages by {{dnf install 'dnf-command(download)'}}.\r\n\r\n(We can provide pre-extracted binaries instead of extracting on user environment.)\r\n\r\nWe'll be able to use the extracted binaries by setting suitable {{LD_LIBRARY_PATH}}.\r\n\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2019-12-09T03:10:15.413+0000",
                    "updated": "2019-12-09T03:10:15.413+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16991824",
                    "id": "16991824",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "R can't install system dependencies mainly per CRAN policy. The actual [policy|https://cran.r-project.org/web/packages/policies.html] says: \"Packages should not write in the user\u2019s home filespace (including clipboards), nor anywhere else on the file system apart from the R session\u2019s temporary directory (or during installation in the location pointed to by\u00a0{{TMPDIR}}: and such usage should be cleaned up). Installing into the system\u2019s R installation (e.g., scripts to its\u00a0{{bin}}\u00a0directory) is not allowed.\"\r\n\r\nPrivileges would be the next reason why we couldn't do it.\r\n\r\nI'll try your suggestion about using the system packages in that way, but I fear that still won't work because of the same CRAN policy. I think we have to statically link.\u00a0\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-12-09T18:11:52.207+0000",
                    "updated": "2019-12-09T18:11:52.207+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16991975",
                    "id": "16991975",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Thanks.\r\nI'll also look into R package installation process later.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2019-12-09T22:03:53.798+0000",
                    "updated": "2019-12-09T22:03:53.798+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16991985",
                    "id": "16991985",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "For reference of how it works for macOS and Windows, see https://cwiki.apache.org/confluence/display/ARROW/Release+Management+Guide#ReleaseManagementGuide-UpdatingRpackages, which explains and links to various materials about the process.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-12-09T22:08:54.056+0000",
                    "updated": "2019-12-09T22:08:54.056+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/16991987",
                    "id": "16991987",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Thanks!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2019-12-09T22:10:58.362+0000",
                    "updated": "2019-12-09T22:10:58.362+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260618/comment/17013816",
                    "id": "17013816",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 6068\n[https://github.com/apache/arrow/pull/6068]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-01-12T16:53:30.935+0000",
                    "updated": "2020-01-12T16:53:30.935+0000"
                }
            ],
            "maxResults": 21,
            "total": 21,
            "startAt": 0
        },
        "customfield_12311820": "0|z07b1c:",
        "customfield_12314139": null
    }
}