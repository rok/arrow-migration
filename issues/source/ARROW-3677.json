{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13195623",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623",
    "key": "ARROW-3677",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexandreyc",
            "name": "alexandreyc",
            "key": "alexandreyc",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Alexandre Crayssac",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333772",
                "id": "12333772",
                "name": "Go"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sbinet",
            "name": "sbinet",
            "key": "sbinet",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sbinet&avatarId=36072",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sbinet&avatarId=36072",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sbinet&avatarId=36072",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sbinet&avatarId=36072"
            },
            "displayName": "Sebastien Binet",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sbinet",
            "name": "sbinet",
            "key": "sbinet",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sbinet&avatarId=36072",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sbinet&avatarId=36072",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sbinet&avatarId=36072",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sbinet&avatarId=36072"
            },
            "displayName": "Sebastien Binet",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3677/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/168800",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alexandreyc opened a new pull request #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012\n \n \n   Feel free to review and comment :)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T13:49:42.986+0000",
                    "updated": "2018-11-22T13:49:42.986+0000",
                    "started": "2018-11-22T13:49:42.985+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168800",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/168848",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on a change in pull request #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012#discussion_r235782339\n \n \n\n ##########\n File path: go/arrow/array/fixedsize_binarybuilder.go\n ##########\n @@ -0,0 +1,161 @@\n+package array\n \n Review comment:\n   missing copyright stanza\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T16:52:52.179+0000",
                    "updated": "2018-11-22T16:52:52.179+0000",
                    "started": "2018-11-22T16:52:52.179+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168848",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/168849",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on a change in pull request #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012#discussion_r235785975\n \n \n\n ##########\n File path: go/arrow/array/fixedsize_binary.go\n ##########\n @@ -0,0 +1,45 @@\n+package array\n+\n+import \"github.com/apache/arrow/go/arrow\"\n+\n+// A type which represents an immutable sequence of fixed-length binary strings.\n+type FixedSizeBinary struct {\n \n Review comment:\n   perhaps add the usual trick to test that `FixedSizeBinary` implements `array.Interface` ?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T16:52:52.193+0000",
                    "updated": "2018-11-22T16:52:52.193+0000",
                    "started": "2018-11-22T16:52:52.192+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168849",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/168850",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on a change in pull request #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012#discussion_r235782258\n \n \n\n ##########\n File path: go/arrow/array/fixedsize_binary.go\n ##########\n @@ -0,0 +1,45 @@\n+package array\n \n Review comment:\n   missing copyright stanza\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T16:52:52.207+0000",
                    "updated": "2018-11-22T16:52:52.207+0000",
                    "started": "2018-11-22T16:52:52.206+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168850",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/168851",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on a change in pull request #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012#discussion_r235784195\n \n \n\n ##########\n File path: go/arrow/array/fixedsize_binary_test.go\n ##########\n @@ -0,0 +1,37 @@\n+package array\n+\n+import (\n+\t\"testing\"\n+\n+\t\"github.com/stretchr/testify/assert\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/memory\"\n+)\n+\n+func TestFixedSizeBinary(t *testing.T) {\n+\tmem := memory.NewCheckedAllocator(memory.NewGoAllocator())\n+\tdefer mem.AssertSize(t, 0)\n+\n+\tdtype := arrow.FixedSizeBinaryType{ByteWidth: 7}\n+\tb := NewFixedSizeBinaryBuilder(mem, dtype)\n+\n+\tvalues := [][]byte{\n+\t\t[]byte(\"7654321\"),\n+\t\tnil,\n+\t\t[]byte(\"AZERTYU\"),\n+\t}\n+\tb.AppendValues(values, []bool{true, false, true})\n+\n+\ta := b.NewFixedSizeBinaryArray()\n \n Review comment:\n   ditto: perhaps add a \"dummy\" pair of `Retain/Release` ?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T16:52:52.234+0000",
                    "updated": "2018-11-22T16:52:52.234+0000",
                    "started": "2018-11-22T16:52:52.233+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168851",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/168852",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on a change in pull request #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012#discussion_r235784881\n \n \n\n ##########\n File path: go/arrow/array/fixedsize_binary_test.go\n ##########\n @@ -0,0 +1,37 @@\n+package array\n+\n+import (\n+\t\"testing\"\n+\n+\t\"github.com/stretchr/testify/assert\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/memory\"\n+)\n+\n+func TestFixedSizeBinary(t *testing.T) {\n+\tmem := memory.NewCheckedAllocator(memory.NewGoAllocator())\n+\tdefer mem.AssertSize(t, 0)\n+\n+\tdtype := arrow.FixedSizeBinaryType{ByteWidth: 7}\n+\tb := NewFixedSizeBinaryBuilder(mem, dtype)\n+\n+\tvalues := [][]byte{\n+\t\t[]byte(\"7654321\"),\n+\t\tnil,\n+\t\t[]byte(\"AZERTYU\"),\n+\t}\n+\tb.AppendValues(values, []bool{true, false, true})\n+\n+\ta := b.NewFixedSizeBinaryArray()\n \n Review comment:\n   also: perhaps use the `NewArray` API (with a type-cast to `*FixedSizeBinary`) to also make sure `NewArray` works correctly.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T16:52:52.340+0000",
                    "updated": "2018-11-22T16:52:52.340+0000",
                    "started": "2018-11-22T16:52:52.339+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168852",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/168853",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on a change in pull request #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012#discussion_r235784466\n \n \n\n ##########\n File path: go/arrow/array/fixedsize_binarybuilder.go\n ##########\n @@ -0,0 +1,161 @@\n+package array\n+\n+import (\n+\t\"sync/atomic\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/internal/debug\"\n+\t\"github.com/apache/arrow/go/arrow/memory\"\n+)\n+\n+// A FixedSizeBinaryBuilder is used to build a FixedSizeBinary array using the Append methods.\n+type FixedSizeBinaryBuilder struct {\n+\tbuilder\n+\n+\tdtype   arrow.FixedSizeBinaryType\n+\toffsets *int32BufferBuilder\n+\tvalues  *byteBufferBuilder\n+}\n+\n+func NewFixedSizeBinaryBuilder(mem memory.Allocator, dtype arrow.FixedSizeBinaryType) *FixedSizeBinaryBuilder {\n+\tb := &FixedSizeBinaryBuilder{\n+\t\tbuilder: builder{refCount: 1, mem: mem},\n+\t\tdtype:   dtype,\n+\t\toffsets: newInt32BufferBuilder(mem),\n+\t\tvalues:  newByteBufferBuilder(mem),\n+\t}\n+\treturn b\n+}\n+\n+// Release decreases the reference count by 1.\n+// When the reference count goes to zero, the memory is freed.\n+// Release may be called simultaneously from multiple goroutines.\n+func (b *FixedSizeBinaryBuilder) Release() {\n+\tdebug.Assert(atomic.LoadInt64(&b.refCount) > 0, \"too many releases\")\n+\n+\tif atomic.AddInt64(&b.refCount, -1) == 0 {\n+\t\tif b.nullBitmap != nil {\n+\t\t\tb.nullBitmap.Release()\n+\t\t\tb.nullBitmap = nil\n+\t\t}\n+\t\tif b.offsets != nil {\n+\t\t\tb.offsets.Release()\n+\t\t\tb.offsets = nil\n+\t\t}\n+\t\tif b.values != nil {\n+\t\t\tb.values.Release()\n+\t\t\tb.values = nil\n+\t\t}\n+\t}\n+}\n+\n+func (b *FixedSizeBinaryBuilder) Append(v []byte) {\n+\tif len(v) != b.dtype.ByteWidth {\n+\t\t// TODO(alexandre): should we return an error instead?\n+\t\tpanic(\"len(v) != b.dtype.ByteWidth\")\n+\t}\n+\n+\tb.Reserve(1)\n+\tb.appendNextOffset()\n+\tb.values.Append(v)\n+\tb.UnsafeAppendBoolToBitmap(true)\n+}\n+\n+func (b *FixedSizeBinaryBuilder) AppendNull() {\n+\tb.Reserve(1)\n+\tb.appendNextOffset()\n+\tb.UnsafeAppendBoolToBitmap(false)\n+}\n+\n+// AppendValues will append the values in the v slice. The valid slice determines which values\n+// in v are valid (not null). The valid slice must either be empty or be equal in length to v. If empty,\n+// all values in v are appended and considered valid.\n+func (b *FixedSizeBinaryBuilder) AppendValues(v [][]byte, valid []bool) {\n+\tif len(v) != len(valid) && len(valid) != 0 {\n+\t\tpanic(\"len(v) != len(valid) && len(valid) != 0\")\n+\t}\n+\n+\tb.Reserve(len(v))\n+\tfor _, vv := range v {\n+\t\tb.appendNextOffset()\n+\t\tb.values.Append(vv)\n+\t}\n+\n+\tb.builder.unsafeAppendBoolsToBitmap(valid, len(v))\n+}\n+\n+func (b *FixedSizeBinaryBuilder) Value(i int) []byte {\n+\t// start := i * b.dtype.ByteWidth\n \n Review comment:\n   please remove.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T16:52:52.374+0000",
                    "updated": "2018-11-22T16:52:52.374+0000",
                    "started": "2018-11-22T16:52:52.374+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168853",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/168854",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on a change in pull request #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012#discussion_r235785551\n \n \n\n ##########\n File path: go/arrow/array/fixedsize_binary.go\n ##########\n @@ -0,0 +1,45 @@\n+package array\n+\n+import \"github.com/apache/arrow/go/arrow\"\n+\n+// A type which represents an immutable sequence of fixed-length binary strings.\n+type FixedSizeBinary struct {\n+\tarray\n+\tbyteWidth    int\n+\tvalueOffsets []int32\n+\tvalueBytes   []byte\n+}\n+\n+// NewFixedSizeBinaryData constructs a new fixed-size binary array from data.\n+func NewFixedSizeBinaryData(data *Data) *FixedSizeBinary {\n \n Review comment:\n   this needs to be wired into `makeArrayFn`:\r\n   https://github.com/apache/arrow/blob/0a8654d3060e9f83a33e8bf22984b80e08cadffe/go/arrow/array/array.go#L182\r\n   \r\n   (together with a test \"of course\" :))\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T16:52:52.391+0000",
                    "updated": "2018-11-22T16:52:52.391+0000",
                    "started": "2018-11-22T16:52:52.391+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168854",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/168855",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on a change in pull request #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012#discussion_r235784580\n \n \n\n ##########\n File path: go/arrow/array/fixedsize_binarybuilder.go\n ##########\n @@ -0,0 +1,161 @@\n+package array\n+\n+import (\n+\t\"sync/atomic\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/internal/debug\"\n+\t\"github.com/apache/arrow/go/arrow/memory\"\n+)\n+\n+// A FixedSizeBinaryBuilder is used to build a FixedSizeBinary array using the Append methods.\n+type FixedSizeBinaryBuilder struct {\n+\tbuilder\n+\n+\tdtype   arrow.FixedSizeBinaryType\n+\toffsets *int32BufferBuilder\n+\tvalues  *byteBufferBuilder\n+}\n+\n+func NewFixedSizeBinaryBuilder(mem memory.Allocator, dtype arrow.FixedSizeBinaryType) *FixedSizeBinaryBuilder {\n+\tb := &FixedSizeBinaryBuilder{\n+\t\tbuilder: builder{refCount: 1, mem: mem},\n+\t\tdtype:   dtype,\n+\t\toffsets: newInt32BufferBuilder(mem),\n+\t\tvalues:  newByteBufferBuilder(mem),\n+\t}\n+\treturn b\n+}\n+\n+// Release decreases the reference count by 1.\n+// When the reference count goes to zero, the memory is freed.\n+// Release may be called simultaneously from multiple goroutines.\n+func (b *FixedSizeBinaryBuilder) Release() {\n+\tdebug.Assert(atomic.LoadInt64(&b.refCount) > 0, \"too many releases\")\n+\n+\tif atomic.AddInt64(&b.refCount, -1) == 0 {\n+\t\tif b.nullBitmap != nil {\n+\t\t\tb.nullBitmap.Release()\n+\t\t\tb.nullBitmap = nil\n+\t\t}\n+\t\tif b.offsets != nil {\n+\t\t\tb.offsets.Release()\n+\t\t\tb.offsets = nil\n+\t\t}\n+\t\tif b.values != nil {\n+\t\t\tb.values.Release()\n+\t\t\tb.values = nil\n+\t\t}\n+\t}\n+}\n+\n+func (b *FixedSizeBinaryBuilder) Append(v []byte) {\n+\tif len(v) != b.dtype.ByteWidth {\n+\t\t// TODO(alexandre): should we return an error instead?\n+\t\tpanic(\"len(v) != b.dtype.ByteWidth\")\n+\t}\n+\n+\tb.Reserve(1)\n+\tb.appendNextOffset()\n+\tb.values.Append(v)\n+\tb.UnsafeAppendBoolToBitmap(true)\n+}\n+\n+func (b *FixedSizeBinaryBuilder) AppendNull() {\n+\tb.Reserve(1)\n+\tb.appendNextOffset()\n+\tb.UnsafeAppendBoolToBitmap(false)\n+}\n+\n+// AppendValues will append the values in the v slice. The valid slice determines which values\n+// in v are valid (not null). The valid slice must either be empty or be equal in length to v. If empty,\n+// all values in v are appended and considered valid.\n+func (b *FixedSizeBinaryBuilder) AppendValues(v [][]byte, valid []bool) {\n+\tif len(v) != len(valid) && len(valid) != 0 {\n+\t\tpanic(\"len(v) != len(valid) && len(valid) != 0\")\n+\t}\n+\n+\tb.Reserve(len(v))\n+\tfor _, vv := range v {\n+\t\tb.appendNextOffset()\n+\t\tb.values.Append(vv)\n+\t}\n+\n+\tb.builder.unsafeAppendBoolsToBitmap(valid, len(v))\n+}\n+\n+func (b *FixedSizeBinaryBuilder) Value(i int) []byte {\n+\t// start := i * b.dtype.ByteWidth\n+\t// return b.values.Bytes()[start : start+b.dtype.ByteWidth]\n+\toffsets := b.offsets.Values()\n+\tstart := int(offsets[i])\n+\tvar end int\n+\tif i == (b.length - 1) {\n+\t\tend = b.values.Len()\n+\t} else {\n+\t\tend = int(offsets[i+1])\n+\t}\n+\treturn b.values.Bytes()[start:end]\n+}\n+\n+func (b *FixedSizeBinaryBuilder) init(capacity int) {\n+\tb.builder.init(capacity)\n+\tb.values.resize(capacity * b.dtype.ByteWidth)\n+}\n+\n+// Reserve ensures there is enough space for appending n elements\n+// by checking the capacity and calling Resize if necessary.\n+func (b *FixedSizeBinaryBuilder) Reserve(n int) {\n+\tb.builder.reserve(n, b.Resize)\n+}\n+\n+// Resize adjusts the space allocated by b to n elements. If n is greater than b.Cap(),\n+// additional memory will be allocated. If n is smaller, the allocated memory may reduced.\n+func (b *FixedSizeBinaryBuilder) Resize(n int) {\n+\tb.offsets.resize((n + 1) * arrow.Int32SizeBytes)\n+\t//b.values.resize(n * b.dtype.ByteWidth)\n \n Review comment:\n   please remove.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T16:52:52.412+0000",
                    "updated": "2018-11-22T16:52:52.412+0000",
                    "started": "2018-11-22T16:52:52.411+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168855",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/168856",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on a change in pull request #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012#discussion_r235782306\n \n \n\n ##########\n File path: go/arrow/array/fixedsize_binary_test.go\n ##########\n @@ -0,0 +1,37 @@\n+package array\n \n Review comment:\n   missing copyright stanza\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T16:52:52.504+0000",
                    "updated": "2018-11-22T16:52:52.504+0000",
                    "started": "2018-11-22T16:52:52.503+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168856",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/168857",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on a change in pull request #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012#discussion_r235782219\n \n \n\n ##########\n File path: go/arrow/array/binary_test.go\n ##########\n @@ -0,0 +1,36 @@\n+package array\n \n Review comment:\n   missing copyright stanza\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T16:52:52.516+0000",
                    "updated": "2018-11-22T16:52:52.516+0000",
                    "started": "2018-11-22T16:52:52.516+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168857",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/168858",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on a change in pull request #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012#discussion_r235783831\n \n \n\n ##########\n File path: go/arrow/datatype_fixedwidth.go\n ##########\n @@ -24,6 +24,14 @@ func (t *BooleanType) Name() string { return \"bool\" }\n // BitWidth returns the number of bits required to store a single element of this data type in memory.\n func (t *BooleanType) BitWidth() int { return 1 }\n \n+type FixedSizeBinaryType struct {\n \n Review comment:\n   we can't add this type to the `FixedWidthTypes` struct (well, we could, but it wouldn't make much sense.)\r\n   but perhaps we could test `FixedSizeBinaryType` implements the `FixedWidthDataType` interface using the usual `_ FixedWidthDataType = (*FixedSizeBinaryType)(nil)` trick?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T16:52:52.527+0000",
                    "updated": "2018-11-22T16:52:52.527+0000",
                    "started": "2018-11-22T16:52:52.527+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168858",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/168859",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on a change in pull request #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012#discussion_r235784094\n \n \n\n ##########\n File path: go/arrow/array/fixedsize_binary_test.go\n ##########\n @@ -0,0 +1,37 @@\n+package array\n+\n+import (\n+\t\"testing\"\n+\n+\t\"github.com/stretchr/testify/assert\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/memory\"\n+)\n+\n+func TestFixedSizeBinary(t *testing.T) {\n+\tmem := memory.NewCheckedAllocator(memory.NewGoAllocator())\n+\tdefer mem.AssertSize(t, 0)\n+\n+\tdtype := arrow.FixedSizeBinaryType{ByteWidth: 7}\n+\tb := NewFixedSizeBinaryBuilder(mem, dtype)\n \n Review comment:\n   perhaps add a \"dummy\" pair of `Retain()/Release()` to exercize that API ?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-22T16:52:52.532+0000",
                    "updated": "2018-11-22T16:52:52.532+0000",
                    "started": "2018-11-22T16:52:52.532+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168859",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/169082",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alexandreyc commented on issue #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012#issuecomment-441310900\n \n \n   Should be good now.\r\n   \r\n   I got ride of attribute `byteWidth` on struct `FixedSizeBinary` because I realized it was useless when writing the test for array api.\r\n   \r\n   -Alexandre\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-23T19:59:35.746+0000",
                    "updated": "2018-11-23T19:59:35.746+0000",
                    "started": "2018-11-23T19:59:35.746+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169082",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/169084",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012#issuecomment-441315130\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=h1) Report\n   > Merging [#3012](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/7cdab9b06541617ea67ee2ae1694195b8281125a?src=pr&el=desc) will **decrease** coverage by `11.19%`.\n   > The diff coverage is `83.83%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3012/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3012      +/-   ##\n   ==========================================\n   - Coverage   86.65%   75.46%   -11.2%     \n   ==========================================\n     Files         493       71     -422     \n     Lines       69675     5701   -63974     \n   ==========================================\n   - Hits        60375     4302   -56073     \n   + Misses       9204     1302    -7902     \n   - Partials       96       97       +1\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/datatype\\_fixedwidth.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfZml4ZWR3aWR0aC5nbw==) | `12.5% <0%> (-2.89%)` | :arrow_down: |\n   | [go/arrow/array/array.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYXJyYXkuZ28=) | `96.61% <100%> (+0.05%)` | :arrow_up: |\n   | [go/arrow/array/fixedsize\\_binary.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvZml4ZWRzaXplX2JpbmFyeS5nbw==) | `68.42% <68.42%> (\u00f8)` | |\n   | [go/arrow/array/fixedsize\\_binarybuilder.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvZml4ZWRzaXplX2JpbmFyeWJ1aWxkZXIuZ28=) | `90.78% <90.78%> (\u00f8)` | |\n   | [go/arrow/math/float64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X3NzZTRfYW1kNjQuZ28=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/int64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfc3NlNF9hbWQ2NC5nbw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/int64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hbWQ2NC5nbw==) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | ... and [435 more](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=footer). Last update [7cdab9b...3ada4f7](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-23T20:40:06.580+0000",
                    "updated": "2018-11-23T20:40:06.580+0000",
                    "started": "2018-11-23T20:40:06.579+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169084",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/169085",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012#issuecomment-441315130\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=h1) Report\n   > Merging [#3012](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/7cdab9b06541617ea67ee2ae1694195b8281125a?src=pr&el=desc) will **increase** coverage by `0.32%`.\n   > The diff coverage is `83.83%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3012/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3012      +/-   ##\n   ==========================================\n   + Coverage   86.65%   86.98%   +0.32%     \n   ==========================================\n     Files         493      496       +3     \n     Lines       69675    70295     +620     \n   ==========================================\n   + Hits        60375    61144     +769     \n   + Misses       9204     9054     -150     \n   - Partials       96       97       +1\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/datatype\\_fixedwidth.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfZml4ZWR3aWR0aC5nbw==) | `12.5% <0%> (-2.89%)` | :arrow_down: |\n   | [go/arrow/array/array.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYXJyYXkuZ28=) | `96.61% <100%> (+0.05%)` | :arrow_up: |\n   | [go/arrow/array/fixedsize\\_binary.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvZml4ZWRzaXplX2JpbmFyeS5nbw==) | `68.42% <68.42%> (\u00f8)` | |\n   | [go/arrow/array/fixedsize\\_binarybuilder.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvZml4ZWRzaXplX2JpbmFyeWJ1aWxkZXIuZ28=) | `90.78% <90.78%> (\u00f8)` | |\n   | [go/arrow/math/uint64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfc3NlNF9hbWQ2NC5nbw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/float64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X3NzZTRfYW1kNjQuZ28=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/int64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/util/parsing.h](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3BhcnNpbmcuaA==) | `95.6% <0%> (-4.4%)` | :arrow_down: |\n   | [cpp/src/arrow/builder.cc](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWlsZGVyLmNj) | `78.3% <0%> (-3.93%)` | :arrow_down: |\n   | ... and [40 more](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=footer). Last update [7cdab9b...3ada4f7](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-23T20:44:59.587+0000",
                    "updated": "2018-11-23T20:44:59.587+0000",
                    "started": "2018-11-23T20:44:59.586+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169085",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/169141",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alexandreyc commented on issue #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012#issuecomment-441384813\n \n \n   Fixed an inconsistency and added missing cases to newBuidler.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-24T17:58:39.992+0000",
                    "updated": "2018-11-24T17:58:39.992+0000",
                    "started": "2018-11-24T17:58:39.991+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169141",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/169153",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012#issuecomment-441315130\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=h1) Report\n   > Merging [#3012](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/7cdab9b06541617ea67ee2ae1694195b8281125a?src=pr&el=desc) will **increase** coverage by `0.32%`.\n   > The diff coverage is `79.04%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3012/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3012      +/-   ##\n   ==========================================\n   + Coverage   86.65%   86.97%   +0.32%     \n   ==========================================\n     Files         493      496       +3     \n     Lines       69675    70301     +626     \n   ==========================================\n   + Hits        60375    61146     +771     \n   + Misses       9204     9058     -146     \n   - Partials       96       97       +1\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/datatype\\_fixedwidth.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfZml4ZWR3aWR0aC5nbw==) | `12.5% <0%> (-2.89%)` | :arrow_down: |\n   | [go/arrow/array/builder.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVpbGRlci5nbw==) | `67.17% <0%> (-3.23%)` | :arrow_down: |\n   | [go/arrow/array/array.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYXJyYXkuZ28=) | `96.61% <100%> (+0.05%)` | :arrow_up: |\n   | [go/arrow/array/fixedsize\\_binary.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvZml4ZWRzaXplX2JpbmFyeS5nbw==) | `68.42% <68.42%> (\u00f8)` | |\n   | [go/arrow/array/fixedsize\\_binarybuilder.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvZml4ZWRzaXplX2JpbmFyeWJ1aWxkZXIuZ28=) | `90.78% <90.78%> (\u00f8)` | |\n   | [go/arrow/math/uint64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfc3NlNF9hbWQ2NC5nbw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/float64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X3NzZTRfYW1kNjQuZ28=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/int64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/util/parsing.h](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3BhcnNpbmcuaA==) | `95.6% <0%> (-4.4%)` | :arrow_down: |\n   | ... and [40 more](https://codecov.io/gh/apache/arrow/pull/3012/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=footer). Last update [7cdab9b...de15e7e](https://codecov.io/gh/apache/arrow/pull/3012?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-24T18:44:10.200+0000",
                    "updated": "2018-11-24T18:44:10.200+0000",
                    "started": "2018-11-24T18:44:10.199+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169153",
                    "issueId": "13195623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/worklog/169233",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #3012: ARROW-3677: [Go] Add fixed-length binary builder and array\nURL: https://github.com/apache/arrow/pull/3012\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/go/arrow/array/array.go b/go/arrow/array/array.go\nindex a225693262..b188dcd68c 100644\n--- a/go/arrow/array/array.go\n+++ b/go/arrow/array/array.go\n@@ -179,7 +179,7 @@ func init() {\n \t\tarrow.FLOAT64:           func(data *Data) Interface { return NewFloat64Data(data) },\n \t\tarrow.STRING:            func(data *Data) Interface { return NewStringData(data) },\n \t\tarrow.BINARY:            func(data *Data) Interface { return NewBinaryData(data) },\n-\t\tarrow.FIXED_SIZE_BINARY: unsupportedArrayType,\n+\t\tarrow.FIXED_SIZE_BINARY: func(data *Data) Interface { return NewFixedSizeBinaryData(data) },\n \t\tarrow.DATE32:            unsupportedArrayType,\n \t\tarrow.DATE64:            unsupportedArrayType,\n \t\tarrow.TIMESTAMP:         func(data *Data) Interface { return NewTimestampData(data) },\ndiff --git a/go/arrow/array/array_test.go b/go/arrow/array/array_test.go\nindex 02f588a11d..eb97d9edcd 100644\n--- a/go/arrow/array/array_test.go\n+++ b/go/arrow/array/array_test.go\n@@ -60,6 +60,9 @@ func TestMakeFromData(t *testing.T) {\n \t\t{name: \"float64\", d: &testDataType{arrow.FLOAT64}},\n \t\t{name: \"binary\", d: &testDataType{arrow.BINARY}, size: 3},\n \t\t{name: \"timestamp\", d: &testDataType{arrow.TIMESTAMP}},\n+\t\t{name: \"time32\", d: &testDataType{arrow.TIME32}},\n+\t\t{name: \"time64\", d: &testDataType{arrow.TIME64}},\n+\t\t{name: \"fixed_size_binary\", d: &testDataType{arrow.FIXED_SIZE_BINARY}, size: 3},\n \n \t\t{name: \"list\", d: &testDataType{arrow.LIST}, child: []*array.Data{\n \t\t\tarray.NewData(&testDataType{arrow.INT64}, 0, make([]*memory.Buffer, 4), nil, 0, 0),\ndiff --git a/go/arrow/array/binary_test.go b/go/arrow/array/binary_test.go\nnew file mode 100644\nindex 0000000000..87d1b58c47\n--- /dev/null\n+++ b/go/arrow/array/binary_test.go\n@@ -0,0 +1,64 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package array\n+\n+import (\n+\t\"testing\"\n+\n+\t\"github.com/stretchr/testify/assert\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/memory\"\n+)\n+\n+func TestBinary(t *testing.T) {\n+\tmem := memory.NewCheckedAllocator(memory.NewGoAllocator())\n+\tdefer mem.AssertSize(t, 0)\n+\n+\tb := NewBinaryBuilder(mem, arrow.BinaryTypes.Binary)\n+\n+\tvalues := [][]byte{\n+\t\t[]byte(\"AAA\"),\n+\t\tnil,\n+\t\t[]byte(\"BBBB\"),\n+\t}\n+\tvalid := []bool{true, false, true}\n+\tb.AppendValues(values, valid)\n+\n+\tb.Retain()\n+\tb.Release()\n+\n+\ta := b.NewBinaryArray()\n+\tassert.Equal(t, 3, a.Len())\n+\tassert.Equal(t, 1, a.NullN())\n+\tassert.Equal(t, []byte(\"AAA\"), a.Value(0))\n+\tassert.Equal(t, []byte{}, a.Value(1))\n+\tassert.Equal(t, []byte(\"BBBB\"), a.Value(2))\n+\ta.Release()\n+\n+\t// Test builder reset and NewArray API.\n+\tb.AppendValues(values, valid)\n+\ta = b.NewArray().(*Binary)\n+\tassert.Equal(t, 3, a.Len())\n+\tassert.Equal(t, 1, a.NullN())\n+\tassert.Equal(t, []byte(\"AAA\"), a.Value(0))\n+\tassert.Equal(t, []byte{}, a.Value(1))\n+\tassert.Equal(t, []byte(\"BBBB\"), a.Value(2))\n+\ta.Release()\n+\n+\tb.Release()\n+}\ndiff --git a/go/arrow/array/builder.go b/go/arrow/array/builder.go\nindex 7dd099051e..c00a365268 100644\n--- a/go/arrow/array/builder.go\n+++ b/go/arrow/array/builder.go\n@@ -239,11 +239,17 @@ func newBuilder(mem memory.Allocator, dtype arrow.DataType) Builder {\n \tcase arrow.BINARY:\n \t\treturn NewBinaryBuilder(mem, arrow.BinaryTypes.Binary)\n \tcase arrow.FIXED_SIZE_BINARY:\n+\t\ttyp := dtype.(*arrow.FixedSizeBinaryType)\n+\t\treturn NewFixedSizeBinaryBuilder(mem, typ)\n \tcase arrow.DATE32:\n \tcase arrow.DATE64:\n \tcase arrow.TIMESTAMP:\n \tcase arrow.TIME32:\n+\t\ttyp := dtype.(*arrow.Time32Type)\n+\t\treturn NewTime32Builder(mem, typ)\n \tcase arrow.TIME64:\n+\t\ttyp := dtype.(*arrow.Time64Type)\n+\t\treturn NewTime64Builder(mem, typ)\n \tcase arrow.INTERVAL:\n \tcase arrow.DECIMAL:\n \tcase arrow.LIST:\ndiff --git a/go/arrow/array/fixedsize_binary.go b/go/arrow/array/fixedsize_binary.go\nnew file mode 100644\nindex 0000000000..258f2d2c44\n--- /dev/null\n+++ b/go/arrow/array/fixedsize_binary.go\n@@ -0,0 +1,63 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package array\n+\n+import \"github.com/apache/arrow/go/arrow\"\n+\n+// A type which represents an immutable sequence of fixed-length binary strings.\n+type FixedSizeBinary struct {\n+\tarray\n+\tvalueOffsets []int32\n+\tvalueBytes   []byte\n+}\n+\n+// NewFixedSizeBinaryData constructs a new fixed-size binary array from data.\n+func NewFixedSizeBinaryData(data *Data) *FixedSizeBinary {\n+\ta := &FixedSizeBinary{}\n+\ta.refCount = 1\n+\ta.setData(data)\n+\treturn a\n+}\n+\n+// Value returns the fixed-size slice at index i. This value should not be mutated.\n+func (a *FixedSizeBinary) Value(i int) []byte {\n+\treturn a.valueBytes[a.valueOffsets[i]:a.valueOffsets[i+1]]\n+}\n+\n+func (a *FixedSizeBinary) ValueOffset(i int) int { return int(a.valueOffsets[i]) }\n+func (a *FixedSizeBinary) ValueLen(i int) int    { return int(a.valueOffsets[i+1] - a.valueOffsets[i]) }\n+func (a *FixedSizeBinary) ValueOffsets() []int32 { return a.valueOffsets }\n+func (a *FixedSizeBinary) ValueBytes() []byte    { return a.valueBytes }\n+\n+func (a *FixedSizeBinary) setData(data *Data) {\n+\tif len(data.buffers) != 3 {\n+\t\tpanic(\"len(data.buffers) != 3\")\n+\t}\n+\n+\ta.array.setData(data)\n+\n+\tif valueBytes := data.buffers[2]; valueBytes != nil {\n+\t\ta.valueBytes = valueBytes.Bytes()\n+\t}\n+\tif valueOffsets := data.buffers[1]; valueOffsets != nil {\n+\t\ta.valueOffsets = arrow.Int32Traits.CastFromBytes(valueOffsets.Bytes())\n+\t}\n+}\n+\n+var (\n+\t_ Interface = (*FixedSizeBinary)(nil)\n+)\ndiff --git a/go/arrow/array/fixedsize_binary_test.go b/go/arrow/array/fixedsize_binary_test.go\nnew file mode 100644\nindex 0000000000..b7f3d3f84a\n--- /dev/null\n+++ b/go/arrow/array/fixedsize_binary_test.go\n@@ -0,0 +1,65 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package array\n+\n+import (\n+\t\"testing\"\n+\n+\t\"github.com/stretchr/testify/assert\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/memory\"\n+)\n+\n+func TestFixedSizeBinary(t *testing.T) {\n+\tmem := memory.NewCheckedAllocator(memory.NewGoAllocator())\n+\tdefer mem.AssertSize(t, 0)\n+\n+\tdtype := arrow.FixedSizeBinaryType{ByteWidth: 7}\n+\tb := NewFixedSizeBinaryBuilder(mem, &dtype)\n+\n+\tvalues := [][]byte{\n+\t\t[]byte(\"7654321\"),\n+\t\tnil,\n+\t\t[]byte(\"AZERTYU\"),\n+\t}\n+\tvalid := []bool{true, false, true}\n+\tb.AppendValues(values, valid)\n+\n+\tb.Retain()\n+\tb.Release()\n+\n+\ta := b.NewFixedSizeBinaryArray()\n+\tassert.Equal(t, 3, a.Len())\n+\tassert.Equal(t, 1, a.NullN())\n+\tassert.Equal(t, []byte(\"7654321\"), a.Value(0))\n+\tassert.Equal(t, []byte{}, a.Value(1))\n+\tassert.Equal(t, []byte(\"AZERTYU\"), a.Value(2))\n+\ta.Release()\n+\n+\t// Test builder reset and NewArray API.\n+\tb.AppendValues(values, valid)\n+\ta = b.NewArray().(*FixedSizeBinary)\n+\tassert.Equal(t, 3, a.Len())\n+\tassert.Equal(t, 1, a.NullN())\n+\tassert.Equal(t, []byte(\"7654321\"), a.Value(0))\n+\tassert.Equal(t, []byte{}, a.Value(1))\n+\tassert.Equal(t, []byte(\"AZERTYU\"), a.Value(2))\n+\ta.Release()\n+\n+\tb.Release()\n+}\ndiff --git a/go/arrow/array/fixedsize_binarybuilder.go b/go/arrow/array/fixedsize_binarybuilder.go\nnew file mode 100644\nindex 0000000000..11a948f3d6\n--- /dev/null\n+++ b/go/arrow/array/fixedsize_binarybuilder.go\n@@ -0,0 +1,174 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package array\n+\n+import (\n+\t\"sync/atomic\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/internal/debug\"\n+\t\"github.com/apache/arrow/go/arrow/memory\"\n+)\n+\n+// A FixedSizeBinaryBuilder is used to build a FixedSizeBinary array using the Append methods.\n+type FixedSizeBinaryBuilder struct {\n+\tbuilder\n+\n+\tdtype   *arrow.FixedSizeBinaryType\n+\toffsets *int32BufferBuilder\n+\tvalues  *byteBufferBuilder\n+}\n+\n+func NewFixedSizeBinaryBuilder(mem memory.Allocator, dtype *arrow.FixedSizeBinaryType) *FixedSizeBinaryBuilder {\n+\tb := &FixedSizeBinaryBuilder{\n+\t\tbuilder: builder{refCount: 1, mem: mem},\n+\t\tdtype:   dtype,\n+\t\toffsets: newInt32BufferBuilder(mem),\n+\t\tvalues:  newByteBufferBuilder(mem),\n+\t}\n+\treturn b\n+}\n+\n+// Release decreases the reference count by 1.\n+// When the reference count goes to zero, the memory is freed.\n+// Release may be called simultaneously from multiple goroutines.\n+func (b *FixedSizeBinaryBuilder) Release() {\n+\tdebug.Assert(atomic.LoadInt64(&b.refCount) > 0, \"too many releases\")\n+\n+\tif atomic.AddInt64(&b.refCount, -1) == 0 {\n+\t\tif b.nullBitmap != nil {\n+\t\t\tb.nullBitmap.Release()\n+\t\t\tb.nullBitmap = nil\n+\t\t}\n+\t\tif b.offsets != nil {\n+\t\t\tb.offsets.Release()\n+\t\t\tb.offsets = nil\n+\t\t}\n+\t\tif b.values != nil {\n+\t\t\tb.values.Release()\n+\t\t\tb.values = nil\n+\t\t}\n+\t}\n+}\n+\n+func (b *FixedSizeBinaryBuilder) Append(v []byte) {\n+\tif len(v) != b.dtype.ByteWidth {\n+\t\t// TODO(alexandre): should we return an error instead?\n+\t\tpanic(\"len(v) != b.dtype.ByteWidth\")\n+\t}\n+\n+\tb.Reserve(1)\n+\tb.appendNextOffset()\n+\tb.values.Append(v)\n+\tb.UnsafeAppendBoolToBitmap(true)\n+}\n+\n+func (b *FixedSizeBinaryBuilder) AppendNull() {\n+\tb.Reserve(1)\n+\tb.appendNextOffset()\n+\tb.UnsafeAppendBoolToBitmap(false)\n+}\n+\n+// AppendValues will append the values in the v slice. The valid slice determines which values\n+// in v are valid (not null). The valid slice must either be empty or be equal in length to v. If empty,\n+// all values in v are appended and considered valid.\n+func (b *FixedSizeBinaryBuilder) AppendValues(v [][]byte, valid []bool) {\n+\tif len(v) != len(valid) && len(valid) != 0 {\n+\t\tpanic(\"len(v) != len(valid) && len(valid) != 0\")\n+\t}\n+\n+\tb.Reserve(len(v))\n+\tfor _, vv := range v {\n+\t\tb.appendNextOffset()\n+\t\tb.values.Append(vv)\n+\t}\n+\n+\tb.builder.unsafeAppendBoolsToBitmap(valid, len(v))\n+}\n+\n+func (b *FixedSizeBinaryBuilder) Value(i int) []byte {\n+\toffsets := b.offsets.Values()\n+\tstart := int(offsets[i])\n+\tvar end int\n+\tif i == (b.length - 1) {\n+\t\tend = b.values.Len()\n+\t} else {\n+\t\tend = int(offsets[i+1])\n+\t}\n+\treturn b.values.Bytes()[start:end]\n+}\n+\n+func (b *FixedSizeBinaryBuilder) init(capacity int) {\n+\tb.builder.init(capacity)\n+\tb.values.resize(capacity * b.dtype.ByteWidth)\n+}\n+\n+// Reserve ensures there is enough space for appending n elements\n+// by checking the capacity and calling Resize if necessary.\n+func (b *FixedSizeBinaryBuilder) Reserve(n int) {\n+\tb.builder.reserve(n, b.Resize)\n+}\n+\n+// Resize adjusts the space allocated by b to n elements. If n is greater than b.Cap(),\n+// additional memory will be allocated. If n is smaller, the allocated memory may reduced.\n+func (b *FixedSizeBinaryBuilder) Resize(n int) {\n+\tb.offsets.resize((n + 1) * arrow.Int32SizeBytes)\n+\tb.builder.resize(n, b.init)\n+}\n+\n+// NewArray creates a FixedSizeBinary array from the memory buffers used by the\n+// builder and resets the FixedSizeBinaryBuilder so it can be used to build a new array.\n+func (b *FixedSizeBinaryBuilder) NewArray() Interface {\n+\treturn b.NewFixedSizeBinaryArray()\n+}\n+\n+// NewFixedSizeBinaryArray creates a FixedSizeBinary array from the memory buffers used by the builder and resets the FixedSizeBinaryBuilder\n+// so it can be used to build a new array.\n+func (b *FixedSizeBinaryBuilder) NewFixedSizeBinaryArray() (a *FixedSizeBinary) {\n+\tdata := b.newData()\n+\ta = NewFixedSizeBinaryData(data)\n+\tdata.Release()\n+\treturn\n+}\n+\n+func (b *FixedSizeBinaryBuilder) newData() (data *Data) {\n+\tb.appendNextOffset()\n+\tvalues := b.values.Finish()\n+\toffsets := b.offsets.Finish()\n+\tdata = NewData(b.dtype, b.length, []*memory.Buffer{b.nullBitmap, offsets, values}, nil, b.nulls, 0)\n+\n+\tif values != nil {\n+\t\tvalues.Release()\n+\t}\n+\tif offsets != nil {\n+\t\toffsets.Release()\n+\t}\n+\n+\tb.builder.reset()\n+\n+\treturn\n+}\n+\n+func (b *FixedSizeBinaryBuilder) appendNextOffset() {\n+\tnumBytes := b.values.Len()\n+\t// TODO(alexandre): check binaryArrayMaximumCapacity?\n+\tb.offsets.AppendValue(int32(numBytes))\n+}\n+\n+var (\n+\t_ Builder = (*FixedSizeBinaryBuilder)(nil)\n+)\ndiff --git a/go/arrow/array/fixedsize_binarybuilder_test.go b/go/arrow/array/fixedsize_binarybuilder_test.go\nnew file mode 100644\nindex 0000000000..ce86648450\n--- /dev/null\n+++ b/go/arrow/array/fixedsize_binarybuilder_test.go\n@@ -0,0 +1,70 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package array\n+\n+import (\n+\t\"testing\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/memory\"\n+\t\"github.com/stretchr/testify/assert\"\n+)\n+\n+func TestFixedSizeBinaryBuilder(t *testing.T) {\n+\tmem := memory.NewCheckedAllocator(memory.NewGoAllocator())\n+\tdefer mem.AssertSize(t, 0)\n+\n+\tdtype := arrow.FixedSizeBinaryType{ByteWidth: 7}\n+\tb := NewFixedSizeBinaryBuilder(mem, &dtype)\n+\n+\tb.Append([]byte(\"1234567\"))\n+\tb.AppendNull()\n+\tb.Append([]byte(\"ABCDEFG\"))\n+\tb.AppendNull()\n+\n+\tassert.Equal(t, 4, b.Len(), \"unexpected Len()\")\n+\tassert.Equal(t, 2, b.NullN(), \"unexpected NullN()\")\n+\n+\tassert.Equal(t, b.Value(0), []byte(\"1234567\"))\n+\tassert.Equal(t, b.Value(1), []byte{})\n+\tassert.Equal(t, b.Value(2), []byte(\"ABCDEFG\"))\n+\tassert.Equal(t, b.Value(3), []byte{})\n+\n+\tvalues := [][]byte{\n+\t\t[]byte(\"7654321\"),\n+\t\tnil,\n+\t\t[]byte(\"AZERTYU\"),\n+\t}\n+\tb.AppendValues(values, []bool{true, false, true})\n+\n+\tassert.Equal(t, 7, b.Len(), \"unexpected Len()\")\n+\tassert.Equal(t, 3, b.NullN(), \"unexpected NullN()\")\n+\n+\tassert.Equal(t, []byte(\"7654321\"), b.Value(4))\n+\tassert.Equal(t, []byte{}, b.Value(5))\n+\tassert.Equal(t, []byte(\"AZERTYU\"), b.Value(6))\n+\n+\ta := b.NewFixedSizeBinaryArray()\n+\n+\t// check state of builder after NewFixedSizeBinaryArray\n+\tassert.Zero(t, b.Len(), \"unexpected ArrayBuilder.Len(), NewFixedSizeBinaryArray did not reset state\")\n+\tassert.Zero(t, b.Cap(), \"unexpected ArrayBuilder.Cap(), NewFixedSizeBinaryArray did not reset state\")\n+\tassert.Zero(t, b.NullN(), \"unexpected ArrayBuilder.NullN(), NewFixedSizeBinaryArray did not reset state\")\n+\n+\tb.Release()\n+\ta.Release()\n+}\ndiff --git a/go/arrow/datatype_fixedwidth.go b/go/arrow/datatype_fixedwidth.go\nindex cbddcefdb2..60cc98a4b9 100644\n--- a/go/arrow/datatype_fixedwidth.go\n+++ b/go/arrow/datatype_fixedwidth.go\n@@ -24,6 +24,14 @@ func (t *BooleanType) Name() string { return \"bool\" }\n // BitWidth returns the number of bits required to store a single element of this data type in memory.\n func (t *BooleanType) BitWidth() int { return 1 }\n \n+type FixedSizeBinaryType struct {\n+\tByteWidth int\n+}\n+\n+func (*FixedSizeBinaryType) ID() Type        { return FIXED_SIZE_BINARY }\n+func (*FixedSizeBinaryType) Name() string    { return \"fixed_size_binary\" }\n+func (t *FixedSizeBinaryType) BitWidth() int { return 8 * t.ByteWidth }\n+\n type (\n \tTimestamp int64\n \tTime32    int32\n@@ -86,4 +94,6 @@ var (\n \t\tTime64us: &Time64Type{Unit: Microsecond},\n \t\tTime64ns: &Time64Type{Unit: Nanosecond},\n \t}\n+\n+\t_ FixedWidthDataType = (*FixedSizeBinaryType)(nil)\n )\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T21:45:34.036+0000",
                    "updated": "2018-11-25T21:45:34.036+0000",
                    "started": "2018-11-25T21:45:34.035+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169233",
                    "issueId": "13195623"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@38c0b216[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@222771cd[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c3a5a3b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@458ae168[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b24c1ae[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@528a8be3[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5cefe80b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4e7cd35f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@63f8528f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@652b1880[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@46270b9e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6ee9de2e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Nov 25 21:45:23 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-11-25T21:45:23.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3677/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-11-01T10:41:44.000+0000",
        "updated": "2018-11-25T21:45:34.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Go] implement FixedSizedBinary array",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/comment/16695823",
                    "id": "16695823",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexandreyc",
                        "name": "alexandreyc",
                        "key": "alexandreyc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Alexandre Crayssac",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Working on this, should be ready soon.\r\n\r\nAlexandre",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexandreyc",
                        "name": "alexandreyc",
                        "key": "alexandreyc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Alexandre Crayssac",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-11-22T11:59:22.487+0000",
                    "updated": "2018-11-22T11:59:22.487+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13195623/comment/16698328",
                    "id": "16698328",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 3012\n[https://github.com/apache/arrow/pull/3012]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-11-25T21:45:23.675+0000",
                    "updated": "2018-11-25T21:45:23.675+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|s000p4:",
        "customfield_12314139": null
    }
}