{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13409096",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096",
    "key": "ARROW-14518",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334104",
                "id": "12334104",
                "name": "Ruby"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=simpl1g",
            "name": "simpl1g",
            "key": "simpl1g",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Kanstantsin Ilchanka",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=simpl1g",
            "name": "simpl1g",
            "key": "simpl1g",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Kanstantsin Ilchanka",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14518/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/worklog/781021",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou opened a new pull request, #13377:\nURL: https://github.com/apache/arrow/pull/13377\n\n   This requires bigdecimal 3.1.0 or later for BigDecimal#scale.\r\n   \r\n   Arrow::Array.new([BigDecimal]) detects the max precision and scale\r\n   from BigDecimals and creates suitable Arrow::Decimal{128,256}DataType\r\n   automatically.\r\n   \r\n   This also truncates given BigDecimal when the specified\r\n   Arrow::Decimal{128,256}DataType doesn't have enough and scale. This\r\n   still doesn't check precision. If an user specifies data that have too\r\n   much precision, the data are used as-is.\n\n\n",
                    "created": "2022-06-14T07:57:23.276+0000",
                    "updated": "2022-06-14T07:57:23.276+0000",
                    "started": "2022-06-14T07:57:23.276+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781021",
                    "issueId": "13409096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/worklog/781022",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13377:\nURL: https://github.com/apache/arrow/pull/13377#issuecomment-1154855949\n\n   https://issues.apache.org/jira/browse/ARROW-14518\n\n\n",
                    "created": "2022-06-14T08:07:39.130+0000",
                    "updated": "2022-06-14T08:07:39.130+0000",
                    "started": "2022-06-14T08:07:39.129+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781022",
                    "issueId": "13409096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/worklog/781023",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13377:\nURL: https://github.com/apache/arrow/pull/13377#issuecomment-1154855972\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-06-14T08:07:41.032+0000",
                    "updated": "2022-06-14T08:07:41.032+0000",
                    "started": "2022-06-14T08:07:41.032+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781023",
                    "issueId": "13409096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/worklog/781708",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on code in PR #13377:\nURL: https://github.com/apache/arrow/pull/13377#discussion_r898144157\n\n\n##########\nruby/red-arrow/lib/arrow/array-builder.rb:\n##########\n@@ -121,15 +126,28 @@ def detect_builder_info(value, builder_info)\n             detected: true,\n           }\n         when BigDecimal\n-          if value.to_arrow.is_a?(Decimal128)\n-            {\n-              builder: Decimal128ArrayBuilder.new,\n-            }\n-          else\n+          builder_info ||= {}\n+          if builder_info[:builder]\n             {\n-              builder: Decimal256ArrayBuilder.new,\n+              builder: StringArrayBuilder.new,\n               detected: true,\n             }\n+          else\n+            precision = [builder_info[:precision] || 0, value.precision].max\n+            scale = [builder_info[:scale] || 0, value.scale].max\n\nReview Comment:\n   These 2 lines don't permit overwriting the value's precision and the scale with smaller values by specifying the precision and the scale in `builder_info`.  Is it intentional?\n\n\n\n##########\nruby/red-arrow/test/test-array-builder.rb:\n##########\n@@ -68,6 +68,56 @@ def assert_build(builder_class, raw_array)\n                      ])\n       end\n \n+      test(\"decimal + string\") do\n+        raw_array = [BigDecimal(\"10.1\"), \"10.1\"]\n+        array = Arrow::ArrayBuilder.build(raw_array)\n+        assert_equal(raw_array.collect(&:to_s), array.to_a)\n+      end\n+\n+      test(\"decimal128\") do\n+        values = [\n+          BigDecimal(\"10.1\"),\n+          BigDecimal(\"1.11\"),\n+          BigDecimal(\"1\"),\n+        ]\n+        array = Arrow::Array.new(values)\n+        data_type = Arrow::Decimal128DataType.new(3, 2)\n+        assert_equal({\n+                       data_type: data_type,\n+                       values: [\n+                         BigDecimal(\"10.1\"),\n+                         BigDecimal(\"1.11\"),\n+                         BigDecimal(\"1\"),\n+                       ],\n+                     },\n+                     {\n+                       data_type: array.value_data_type,\n+                       values: array.to_a,\n+                     })\n+      end\n+\n+      test(\"decimal256\") do\n+        values = [\n+          BigDecimal(\"1\" * 40 + \".1\"),\n+          BigDecimal(\"1\" * 38 + \".11\"),\n+          BigDecimal(\"1\" * 37),\n+        ]\n+        array = Arrow::Array.new(values)\n+        data_type = Arrow::Decimal256DataType.new(41, 2)\n+        assert_equal({\n+                       data_type: data_type,\n+                       values: [\n+                         BigDecimal(\"1\" * 40 + \".1\"),\n+                         BigDecimal(\"1\" * 38 + \".11\"),\n+                         BigDecimal(\"1\" * 37),\n+                       ],\n+                     },\n+                     {\n+                       data_type: array.value_data_type,\n+                       values: array.to_a,\n+                     })\n+      end\n+\n\nReview Comment:\n   Is it unnecessary to test with `BigDecimal::NAN` and `BigDecimal::INFINITY`?\n\n\n\n",
                    "created": "2022-06-15T15:50:29.197+0000",
                    "updated": "2022-06-15T15:50:29.197+0000",
                    "started": "2022-06-15T15:50:29.196+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781708",
                    "issueId": "13409096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/worklog/781876",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on code in PR #13377:\nURL: https://github.com/apache/arrow/pull/13377#discussion_r898577939\n\n\n##########\nruby/red-arrow/lib/arrow/array-builder.rb:\n##########\n@@ -121,15 +126,28 @@ def detect_builder_info(value, builder_info)\n             detected: true,\n           }\n         when BigDecimal\n-          if value.to_arrow.is_a?(Decimal128)\n-            {\n-              builder: Decimal128ArrayBuilder.new,\n-            }\n-          else\n+          builder_info ||= {}\n+          if builder_info[:builder]\n             {\n-              builder: Decimal256ArrayBuilder.new,\n+              builder: StringArrayBuilder.new,\n               detected: true,\n             }\n+          else\n+            precision = [builder_info[:precision] || 0, value.precision].max\n+            scale = [builder_info[:scale] || 0, value.scale].max\n\nReview Comment:\n   Could you provide an example case?\r\n   `Arrow::Array.new([BigDecimal(\"1.1\"), BigDecimal(\"11.11\")])`?\n\n\n\n",
                    "created": "2022-06-16T00:11:23.577+0000",
                    "updated": "2022-06-16T00:11:23.577+0000",
                    "started": "2022-06-16T00:11:23.576+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781876",
                    "issueId": "13409096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/worklog/781877",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on code in PR #13377:\nURL: https://github.com/apache/arrow/pull/13377#discussion_r898578609\n\n\n##########\nruby/red-arrow/test/test-array-builder.rb:\n##########\n@@ -68,6 +68,56 @@ def assert_build(builder_class, raw_array)\n                      ])\n       end\n \n+      test(\"decimal + string\") do\n+        raw_array = [BigDecimal(\"10.1\"), \"10.1\"]\n+        array = Arrow::ArrayBuilder.build(raw_array)\n+        assert_equal(raw_array.collect(&:to_s), array.to_a)\n+      end\n+\n+      test(\"decimal128\") do\n+        values = [\n+          BigDecimal(\"10.1\"),\n+          BigDecimal(\"1.11\"),\n+          BigDecimal(\"1\"),\n+        ]\n+        array = Arrow::Array.new(values)\n+        data_type = Arrow::Decimal128DataType.new(3, 2)\n+        assert_equal({\n+                       data_type: data_type,\n+                       values: [\n+                         BigDecimal(\"10.1\"),\n+                         BigDecimal(\"1.11\"),\n+                         BigDecimal(\"1\"),\n+                       ],\n+                     },\n+                     {\n+                       data_type: array.value_data_type,\n+                       values: array.to_a,\n+                     })\n+      end\n+\n+      test(\"decimal256\") do\n+        values = [\n+          BigDecimal(\"1\" * 40 + \".1\"),\n+          BigDecimal(\"1\" * 38 + \".11\"),\n+          BigDecimal(\"1\" * 37),\n+        ]\n+        array = Arrow::Array.new(values)\n+        data_type = Arrow::Decimal256DataType.new(41, 2)\n+        assert_equal({\n+                       data_type: data_type,\n+                       values: [\n+                         BigDecimal(\"1\" * 40 + \".1\"),\n+                         BigDecimal(\"1\" * 38 + \".11\"),\n+                         BigDecimal(\"1\" * 37),\n+                       ],\n+                     },\n+                     {\n+                       data_type: array.value_data_type,\n+                       values: array.to_a,\n+                     })\n+      end\n+\n\nReview Comment:\n   Oh, I didn't notice them.\r\n   What is the expected behavior with them? It seems that decimal classes in C++ can't represent `NAN` and `INFINITY`.\n\n\n\n",
                    "created": "2022-06-16T00:13:18.760+0000",
                    "updated": "2022-06-16T00:13:18.760+0000",
                    "started": "2022-06-16T00:13:18.760+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781877",
                    "issueId": "13409096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/worklog/782670",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on code in PR #13377:\nURL: https://github.com/apache/arrow/pull/13377#discussion_r901053447\n\n\n##########\nruby/red-arrow/lib/arrow/array-builder.rb:\n##########\n@@ -121,15 +126,28 @@ def detect_builder_info(value, builder_info)\n             detected: true,\n           }\n         when BigDecimal\n-          if value.to_arrow.is_a?(Decimal128)\n-            {\n-              builder: Decimal128ArrayBuilder.new,\n-            }\n-          else\n+          builder_info ||= {}\n+          if builder_info[:builder]\n             {\n-              builder: Decimal256ArrayBuilder.new,\n+              builder: StringArrayBuilder.new,\n               detected: true,\n             }\n+          else\n+            precision = [builder_info[:precision] || 0, value.precision].max\n+            scale = [builder_info[:scale] || 0, value.scale].max\n\nReview Comment:\n   I misreading the code.  It's OK now.  But, I guess we may need to permit to pass precision and scale to `Arrow::Array.new` as optional arguments like`Arrow::Array.new([BigDecimal(\"1.1\"), BigDecimal(\"11.11\")], scale: 1)`.\n\n\n\n",
                    "created": "2022-06-19T06:15:41.615+0000",
                    "updated": "2022-06-19T06:15:41.615+0000",
                    "started": "2022-06-19T06:15:41.615+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "782670",
                    "issueId": "13409096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/worklog/782671",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on code in PR #13377:\nURL: https://github.com/apache/arrow/pull/13377#discussion_r901053764\n\n\n##########\nruby/red-arrow/test/test-array-builder.rb:\n##########\n@@ -68,6 +68,56 @@ def assert_build(builder_class, raw_array)\n                      ])\n       end\n \n+      test(\"decimal + string\") do\n+        raw_array = [BigDecimal(\"10.1\"), \"10.1\"]\n+        array = Arrow::ArrayBuilder.build(raw_array)\n+        assert_equal(raw_array.collect(&:to_s), array.to_a)\n+      end\n+\n+      test(\"decimal128\") do\n+        values = [\n+          BigDecimal(\"10.1\"),\n+          BigDecimal(\"1.11\"),\n+          BigDecimal(\"1\"),\n+        ]\n+        array = Arrow::Array.new(values)\n+        data_type = Arrow::Decimal128DataType.new(3, 2)\n+        assert_equal({\n+                       data_type: data_type,\n+                       values: [\n+                         BigDecimal(\"10.1\"),\n+                         BigDecimal(\"1.11\"),\n+                         BigDecimal(\"1\"),\n+                       ],\n+                     },\n+                     {\n+                       data_type: array.value_data_type,\n+                       values: array.to_a,\n+                     })\n+      end\n+\n+      test(\"decimal256\") do\n+        values = [\n+          BigDecimal(\"1\" * 40 + \".1\"),\n+          BigDecimal(\"1\" * 38 + \".11\"),\n+          BigDecimal(\"1\" * 37),\n+        ]\n+        array = Arrow::Array.new(values)\n+        data_type = Arrow::Decimal256DataType.new(41, 2)\n+        assert_equal({\n+                       data_type: data_type,\n+                       values: [\n+                         BigDecimal(\"1\" * 40 + \".1\"),\n+                         BigDecimal(\"1\" * 38 + \".11\"),\n+                         BigDecimal(\"1\" * 37),\n+                       ],\n+                     },\n+                     {\n+                       data_type: array.value_data_type,\n+                       values: array.to_a,\n+                     })\n+      end\n+\n\nReview Comment:\n   Throwing `FloatDomainError`?\n\n\n\n",
                    "created": "2022-06-19T06:18:52.255+0000",
                    "updated": "2022-06-19T06:18:52.255+0000",
                    "started": "2022-06-19T06:18:52.255+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "782671",
                    "issueId": "13409096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/worklog/782758",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on code in PR #13377:\nURL: https://github.com/apache/arrow/pull/13377#discussion_r901196693\n\n\n##########\nruby/red-arrow/lib/arrow/array-builder.rb:\n##########\n@@ -121,15 +126,28 @@ def detect_builder_info(value, builder_info)\n             detected: true,\n           }\n         when BigDecimal\n-          if value.to_arrow.is_a?(Decimal128)\n-            {\n-              builder: Decimal128ArrayBuilder.new,\n-            }\n-          else\n+          builder_info ||= {}\n+          if builder_info[:builder]\n             {\n-              builder: Decimal256ArrayBuilder.new,\n+              builder: StringArrayBuilder.new,\n               detected: true,\n             }\n+          else\n+            precision = [builder_info[:precision] || 0, value.precision].max\n+            scale = [builder_info[:scale] || 0, value.scale].max\n\nReview Comment:\n   If users know an expected data type, they should use `Arrow::XXXArray.new` instead of `Arrow::Array.new` such as `Arrow::Decimal128Array.new({scale: ..., precision: ...}, [BigDecimal(...). ...])`.\r\n   \r\n   `Arrow::Array.new` may not build a `Arrow::Decimal128Array`. In the case, the given optional arguments are just ignored. It may confuse users.\n\n\n\n",
                    "created": "2022-06-20T01:48:10.678+0000",
                    "updated": "2022-06-20T01:48:10.678+0000",
                    "started": "2022-06-20T01:48:10.678+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "782758",
                    "issueId": "13409096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/worklog/782759",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on code in PR #13377:\nURL: https://github.com/apache/arrow/pull/13377#discussion_r901197288\n\n\n##########\nruby/red-arrow/test/test-array-builder.rb:\n##########\n@@ -68,6 +68,56 @@ def assert_build(builder_class, raw_array)\n                      ])\n       end\n \n+      test(\"decimal + string\") do\n+        raw_array = [BigDecimal(\"10.1\"), \"10.1\"]\n+        array = Arrow::ArrayBuilder.build(raw_array)\n+        assert_equal(raw_array.collect(&:to_s), array.to_a)\n+      end\n+\n+      test(\"decimal128\") do\n+        values = [\n+          BigDecimal(\"10.1\"),\n+          BigDecimal(\"1.11\"),\n+          BigDecimal(\"1\"),\n+        ]\n+        array = Arrow::Array.new(values)\n+        data_type = Arrow::Decimal128DataType.new(3, 2)\n+        assert_equal({\n+                       data_type: data_type,\n+                       values: [\n+                         BigDecimal(\"10.1\"),\n+                         BigDecimal(\"1.11\"),\n+                         BigDecimal(\"1\"),\n+                       ],\n+                     },\n+                     {\n+                       data_type: array.value_data_type,\n+                       values: array.to_a,\n+                     })\n+      end\n+\n+      test(\"decimal256\") do\n+        values = [\n+          BigDecimal(\"1\" * 40 + \".1\"),\n+          BigDecimal(\"1\" * 38 + \".11\"),\n+          BigDecimal(\"1\" * 37),\n+        ]\n+        array = Arrow::Array.new(values)\n+        data_type = Arrow::Decimal256DataType.new(41, 2)\n+        assert_equal({\n+                       data_type: data_type,\n+                       values: [\n+                         BigDecimal(\"1\" * 40 + \".1\"),\n+                         BigDecimal(\"1\" * 38 + \".11\"),\n+                         BigDecimal(\"1\" * 37),\n+                       ],\n+                     },\n+                     {\n+                       data_type: array.value_data_type,\n+                       values: array.to_a,\n+                     })\n+      end\n+\n\nReview Comment:\n   We should build an Apache Arrow array with `Arrow::ArrayBuilder.build` instead of raising an exception. I'll use `Arrow::StringArray` for the case.\n\n\n\n",
                    "created": "2022-06-20T01:50:20.724+0000",
                    "updated": "2022-06-20T01:50:20.724+0000",
                    "started": "2022-06-20T01:50:20.724+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "782759",
                    "issueId": "13409096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/worklog/782773",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on code in PR #13377:\nURL: https://github.com/apache/arrow/pull/13377#discussion_r901225084\n\n\n##########\nruby/red-arrow/test/test-array-builder.rb:\n##########\n@@ -68,6 +68,56 @@ def assert_build(builder_class, raw_array)\n                      ])\n       end\n \n+      test(\"decimal + string\") do\n+        raw_array = [BigDecimal(\"10.1\"), \"10.1\"]\n+        array = Arrow::ArrayBuilder.build(raw_array)\n+        assert_equal(raw_array.collect(&:to_s), array.to_a)\n+      end\n+\n+      test(\"decimal128\") do\n+        values = [\n+          BigDecimal(\"10.1\"),\n+          BigDecimal(\"1.11\"),\n+          BigDecimal(\"1\"),\n+        ]\n+        array = Arrow::Array.new(values)\n+        data_type = Arrow::Decimal128DataType.new(3, 2)\n+        assert_equal({\n+                       data_type: data_type,\n+                       values: [\n+                         BigDecimal(\"10.1\"),\n+                         BigDecimal(\"1.11\"),\n+                         BigDecimal(\"1\"),\n+                       ],\n+                     },\n+                     {\n+                       data_type: array.value_data_type,\n+                       values: array.to_a,\n+                     })\n+      end\n+\n+      test(\"decimal256\") do\n+        values = [\n+          BigDecimal(\"1\" * 40 + \".1\"),\n+          BigDecimal(\"1\" * 38 + \".11\"),\n+          BigDecimal(\"1\" * 37),\n+        ]\n+        array = Arrow::Array.new(values)\n+        data_type = Arrow::Decimal256DataType.new(41, 2)\n+        assert_equal({\n+                       data_type: data_type,\n+                       values: [\n+                         BigDecimal(\"1\" * 40 + \".1\"),\n+                         BigDecimal(\"1\" * 38 + \".11\"),\n+                         BigDecimal(\"1\" * 37),\n+                       ],\n+                     },\n+                     {\n+                       data_type: array.value_data_type,\n+                       values: array.to_a,\n+                     })\n+      end\n+\n\nReview Comment:\n   OK, It makes sense.\n\n\n\n",
                    "created": "2022-06-20T03:24:54.189+0000",
                    "updated": "2022-06-20T03:24:54.189+0000",
                    "started": "2022-06-20T03:24:54.189+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "782773",
                    "issueId": "13409096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/worklog/782774",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on code in PR #13377:\nURL: https://github.com/apache/arrow/pull/13377#discussion_r901225314\n\n\n##########\nruby/red-arrow/lib/arrow/array-builder.rb:\n##########\n@@ -121,15 +126,28 @@ def detect_builder_info(value, builder_info)\n             detected: true,\n           }\n         when BigDecimal\n-          if value.to_arrow.is_a?(Decimal128)\n-            {\n-              builder: Decimal128ArrayBuilder.new,\n-            }\n-          else\n+          builder_info ||= {}\n+          if builder_info[:builder]\n             {\n-              builder: Decimal256ArrayBuilder.new,\n+              builder: StringArrayBuilder.new,\n               detected: true,\n             }\n+          else\n+            precision = [builder_info[:precision] || 0, value.precision].max\n+            scale = [builder_info[:scale] || 0, value.scale].max\n\nReview Comment:\n   I see.\n\n\n\n",
                    "created": "2022-06-20T03:25:34.215+0000",
                    "updated": "2022-06-20T03:25:34.215+0000",
                    "started": "2022-06-20T03:25:34.215+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "782774",
                    "issueId": "13409096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/worklog/783729",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on code in PR #13377:\nURL: https://github.com/apache/arrow/pull/13377#discussion_r903355360\n\n\n##########\nruby/red-arrow/test/test-array-builder.rb:\n##########\n@@ -68,6 +68,56 @@ def assert_build(builder_class, raw_array)\n                      ])\n       end\n \n+      test(\"decimal + string\") do\n+        raw_array = [BigDecimal(\"10.1\"), \"10.1\"]\n+        array = Arrow::ArrayBuilder.build(raw_array)\n+        assert_equal(raw_array.collect(&:to_s), array.to_a)\n+      end\n+\n+      test(\"decimal128\") do\n+        values = [\n+          BigDecimal(\"10.1\"),\n+          BigDecimal(\"1.11\"),\n+          BigDecimal(\"1\"),\n+        ]\n+        array = Arrow::Array.new(values)\n+        data_type = Arrow::Decimal128DataType.new(3, 2)\n+        assert_equal({\n+                       data_type: data_type,\n+                       values: [\n+                         BigDecimal(\"10.1\"),\n+                         BigDecimal(\"1.11\"),\n+                         BigDecimal(\"1\"),\n+                       ],\n+                     },\n+                     {\n+                       data_type: array.value_data_type,\n+                       values: array.to_a,\n+                     })\n+      end\n+\n+      test(\"decimal256\") do\n+        values = [\n+          BigDecimal(\"1\" * 40 + \".1\"),\n+          BigDecimal(\"1\" * 38 + \".11\"),\n+          BigDecimal(\"1\" * 37),\n+        ]\n+        array = Arrow::Array.new(values)\n+        data_type = Arrow::Decimal256DataType.new(41, 2)\n+        assert_equal({\n+                       data_type: data_type,\n+                       values: [\n+                         BigDecimal(\"1\" * 40 + \".1\"),\n+                         BigDecimal(\"1\" * 38 + \".11\"),\n+                         BigDecimal(\"1\" * 37),\n+                       ],\n+                     },\n+                     {\n+                       data_type: array.value_data_type,\n+                       values: array.to_a,\n+                     })\n+      end\n+\n\nReview Comment:\n   I've added a validation for `BigDecimal::NAN` and `BigDecimal::INFINITY` to `Arrow::Decimal{128,256}ArrayBuilder`. If users append `BigDecimal::NAN` or `BigDecimal::INFINITY`, `FloatDomainError` is raised.\n\n\n\n",
                    "created": "2022-06-22T07:03:39.453+0000",
                    "updated": "2022-06-22T07:03:39.453+0000",
                    "started": "2022-06-22T07:03:39.452+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "783729",
                    "issueId": "13409096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/worklog/784003",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on PR #13377:\nURL: https://github.com/apache/arrow/pull/13377#issuecomment-1163778275\n\n   +1\n\n\n",
                    "created": "2022-06-22T23:55:07.775+0000",
                    "updated": "2022-06-22T23:55:07.775+0000",
                    "started": "2022-06-22T23:55:07.775+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "784003",
                    "issueId": "13409096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/worklog/784004",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou merged PR #13377:\nURL: https://github.com/apache/arrow/pull/13377\n\n\n",
                    "created": "2022-06-22T23:58:29.429+0000",
                    "updated": "2022-06-22T23:58:29.429+0000",
                    "started": "2022-06-22T23:58:29.429+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "784004",
                    "issueId": "13409096"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1dc894a9[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f8e8cb0[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@17f2d42b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3cb23169[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4d491d8e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@30166a7d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@31c4b3d8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1cd0e5f0[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19f03e89[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1a36fa48[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ef8c0a5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@151c5bef[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jun 22 23:58:32 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-06-22T23:58:32.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14518/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2021-10-29T10:28:40.000+0000",
        "updated": "2022-06-22T23:58:32.000+0000",
        "timeoriginalestimate": null,
        "description": "When trying to convert raw data with decimal values to Arrow::Table error received\r\n\r\n\u00a0\r\n{code:java}\r\nArrow::Table.new(x: [BigDecimal('1.1')])\r\nArgumentError: wrong arguments: Arrow::Decimal128ArrayBuilder#initialize(): available signatures: (data_type: interface(Arrow::Decimal128DataType(GArrowDecimal128DataType)))\r\n{code}\r\nI guess this is because\u00a0Decimal128ArrayBuilder expects\u00a0Decimal128DataType in initialiser, however I'm not sure how to correctly and effectively detect precision and scale from array of BigDecimal\r\n\r\n\u00a0\r\n{code:java}\r\nArrow::VERSION\r\n=> \"5.0.0\"{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Ruby] ArrayBuilder doesn't work correctly with Decimal",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/comment/17436166",
                    "id": "17436166",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Umm...\r\n\r\n[~mrkn] Can we detect correct precision and scale from BigDecimal?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2021-10-29T20:45:07.439+0000",
                    "updated": "2021-10-29T20:45:07.439+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/comment/17436352",
                    "id": "17436352",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
                        "name": "mrkn",
                        "key": "mrkn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Kenta Murata",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "A {{BigDecimal}} number manages only its precision in its decimal notation.\r\n\r\nWe can get the precision of a {{BigDecimal}} number by {{BigDecimal#precision}} method.\r\n\r\n{{irb(main):001:0> BigDecimal(\"1.1\").precision}}\r\n{{=> 2}}\r\n\r\nBut, the {{BigDecimal#precision}} method doesn't count the trailing zeros.\r\n\r\n{{irb(main):002:0> BigDecimal(\"1.10\").precision}}\r\n{{=> 2}}\r\n\r\nThe reason why a {{BigDecimal}} number doesn't have the scale property may be a {{BigDecimal}} number isn't a fixed-precision number.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
                        "name": "mrkn",
                        "key": "mrkn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Kenta Murata",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-10-30T17:38:29.205+0000",
                    "updated": "2021-10-30T17:39:24.110+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/comment/17436366",
                    "id": "17436366",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Thanks.\r\nIt's not efficient but is the following reasonable as detected scale?\r\n\r\n{noformat}\r\ndecimals = [\r\n  BigDecimal(\"1.1\"),\r\n  BigDecimal(\"1.10\"),\r\n  BigDecimal(\"1.111\"),\r\n]\r\ndecimals.collect {|decimal| decimal.to_s(\"f\").split(\".\", 2)[1].size}.max # => 3\r\n{noformat}\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2021-10-30T21:31:21.787+0000",
                    "updated": "2021-10-30T21:31:21.787+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/comment/17436367",
                    "id": "17436367",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=simpl1g",
                        "name": "simpl1g",
                        "key": "simpl1g",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Kanstantsin Ilchanka",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Problem here is that Arrow expects fixed scale for all array values as far as understand\r\n\r\nSo we will have a problem here,\u00a0\r\n{code:java}\r\ndecimals = [\r\n  BigDecimal(\"1.1\"),\r\n  BigDecimal(\"1.10\"),\r\n  BigDecimal(\"1.111\"),\r\n]\r\ndecimals.sum.to_s => \"3.311\"\r\n\r\nArrow::Decimal128ArrayBuilder.build(\r\n  Arrow::Decimal128DataType.new(4, 3), decimals\r\n).sum.to_s => \"1.133\"{code}\r\n1.1 will be converted to 0.011 to scale to 3 digits after dot\r\n1.10 is the same\r\n\r\nArray of decimals should be validated to have the same scale, any other options?\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=simpl1g",
                        "name": "simpl1g",
                        "key": "simpl1g",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Kanstantsin Ilchanka",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-10-30T21:46:11.045+0000",
                    "updated": "2021-10-30T21:46:11.045+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/comment/17436549",
                    "id": "17436549",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=simpl1g",
                        "name": "simpl1g",
                        "key": "simpl1g",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Kanstantsin Ilchanka",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Btw it faults on macOS if precision is bigger than max\r\n{code:java}\r\nArrow::Decimal128DataType.new(50, 48)\r\n/tmp/apache-arrow-20211019-6348-1ltpz75/apache-arrow-5.0.0/cpp/src/arrow/type.cc:813:\u00a0 Check failed: (precision) <= (kMaxPrecision)\u00a0\r\n0 \u00a0 libarrow.500.dylib\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0x000000011170b8e2 _ZN5arrow4util7CerrLogD2Ev + 204\r\n1 \u00a0 libarrow.500.dylib\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0x000000011170b808 _ZN5arrow4util7CerrLogD0Ev + 14\r\n2 \u00a0 libarrow.500.dylib\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0x000000011170b7b0 _ZN5arrow4util8ArrowLogD1Ev + 34\r\n3 \u00a0 libarrow.500.dylib\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0x00000001116a7eba _ZN5arrow14Decimal128TypeC2Eii + 176\r\n4 \u00a0 libarrow.500.dylib\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0x00000001116b21bc _ZN5arrow10decimal128Eii + 78\r\n5 \u00a0 libarrow-glib.500.dylib \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0x000000011147eb68 garrow_decimal128_data_type_new + 24\r\n6 \u00a0 libffi.8.dylib\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0x0000000111122d8a ffi_call_unix64 + 82\r\n7 \u00a0 ??? \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0x00007ffee21c3818 0x0 + 140732691920920\r\n{code}\r\nAnd if invalid decimal passed\r\n{code:java}\r\nArrow::Decimal128.new('2,2')\r\n/tmp/apache-arrow-20211019-6348-1ltpz75/apache-arrow-5.0.0/cpp/src/arrow/result.cc:28: ValueOrDie called on an error: Invalid: The string '2,2' is not a valid decimal number\r\n0 \u00a0 libarrow.500.dylib\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0x00000001099718e2 _ZN5arrow4util7CerrLogD2Ev + 204\r\n1 \u00a0 libarrow.500.dylib\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0x0000000109971808 _ZN5arrow4util7CerrLogD0Ev + 14\r\n2 \u00a0 libarrow.500.dylib\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0x00000001099717b0 _ZN5arrow4util8ArrowLogD1Ev + 34\r\n3 \u00a0 libarrow.500.dylib\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0x00000001098c6dcf _ZN5arrow8internal14DieWithMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE + 111\r\n4 \u00a0 libarrow.500.dylib\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0x00000001098c6e7e _ZN5arrow8internal17InvalidValueOrDieERKNS_6StatusE + 146\r\n5 \u00a0 libarrow.500.dylib\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0x000000010995af91 _ZN5arrow10Decimal128C1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE + 93\r\n6 \u00a0 libarrow-glib.500.dylib \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0x00000001054d73a5 _Z25garrow_decimal_new_stringIN5arrow10Decimal128EEPN16DecimalConverterIT_E10GArrowTypeEPKc + 181\r\n7 \u00a0 libffi.8.dylib\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0x0000000105166d8a ffi_call_unix64 + 82\r\n8 \u00a0 ??? \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0x00007ffeee29b9a8 0x0 + 140732894132648\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=simpl1g",
                        "name": "simpl1g",
                        "key": "simpl1g",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Kanstantsin Ilchanka",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-10-31T20:44:20.320+0000",
                    "updated": "2021-10-31T20:44:20.320+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/comment/17436553",
                    "id": "17436553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=simpl1g",
                        "name": "simpl1g",
                        "key": "simpl1g",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Kanstantsin Ilchanka",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "This appears to be working, but I guess very inefficient\r\n\r\nArrow::Decimal128 expects string with correct scale, so ljust required to fill with zeroes\r\n{code:java}\r\ndecimals = [\r\n  BigDecimal(\"1.1\"),\r\n  BigDecimal(\"1.10\"),\r\n  BigDecimal(\"1.111\"),\r\n]\r\nscale = decimals.map { |decimal| decimal.to_s(\"f\").split(\".\", 2)[1].size }.max # => 3\r\ndecimals.map! { |decimal| Arrow::Decimal128.new(decimal.to_s(\"f\").ljust(scale + 2, '0')) }\r\n\r\nArrow::Decimal128ArrayBuilder.build(\r\n  Arrow::Decimal128DataType.new(38, scale), decimals\r\n).sum.to_s => \"3.311\"\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=simpl1g",
                        "name": "simpl1g",
                        "key": "simpl1g",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Kanstantsin Ilchanka",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-10-31T21:33:18.695+0000",
                    "updated": "2021-10-31T21:33:18.695+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/comment/17436608",
                    "id": "17436608",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Thanks.\r\n(Could you create a new Jira issue for the segmentation fault with an invalid precision?)\r\n\r\n[~mrkn] What do you think about this?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2021-11-01T04:39:46.460+0000",
                    "updated": "2021-11-01T04:39:46.460+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/comment/17436611",
                    "id": "17436611",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
                        "name": "mrkn",
                        "key": "mrkn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Kenta Murata",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Arrow's decimal number is completely different from {{BigDecimal}}.  The former is a fixed-point number whereas the latter is a floating-point number.\r\n\r\nThe best approach is introducing the new fixed-point number system for Arrow's decimal numbers on the Ruby side.\r\n\r\nThe second-best approach for me is letting {{Arrow::Decimal128ArrayBuilder}} support arbitrary precisions and scales. That can be done by pooling {{BigDecimal}} values.\r\n\r\nI's OK to add the new property in {{BigDecimal}} to obtain the number of digits following the decimal dot for assisting the latter case. Maybe, the suitable name of this property is {{BigDecimal#scale}}.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
                        "name": "mrkn",
                        "key": "mrkn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Kenta Murata",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-11-01T04:57:26.409+0000",
                    "updated": "2021-11-01T04:57:26.409+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/comment/17436612",
                    "id": "17436612",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "We already have {{Arrow::Decimal128}} and {{Arrow::Decimal256}} but {{Arrow::ArrayBuilder.detect_builder_info}} doesn't support them. If we add support for {{Arrow::Decimal128}} and {{Arrow::Decimal256}} to {{Arrow::ArrayBuilder.detect_builder_info}}, we can implement the best approach. We should use a new Jira issue for this approach.\r\n\r\nThe second-best approach will be convenient for many users. Could you add {{BigDecimal#scale}}? Then we implement the second-best approach. We can use this issue for this approach.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2021-11-01T05:09:24.111+0000",
                    "updated": "2021-11-01T05:09:24.111+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/comment/17436613",
                    "id": "17436613",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
                        "name": "mrkn",
                        "key": "mrkn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Kenta Murata",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "{quote}Could you add BigDecimal#scale?{quote}\r\n\r\nYes, I'll add it. But the new property will be available only with the latest {{bigdecimal}} gem.\r\nTo support older versions of {{bigdecimal}} gems, we need to detect the existence of {{BigDecimal#scale}} and emulate it when it is absent.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
                        "name": "mrkn",
                        "key": "mrkn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Kenta Murata",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-11-01T05:14:36.491+0000",
                    "updated": "2021-11-01T05:14:36.491+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/comment/17436705",
                    "id": "17436705",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=simpl1g",
                        "name": "simpl1g",
                        "key": "simpl1g",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Kanstantsin Ilchanka",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "https://issues.apache.org/jira/browse/ARROW-14529\r\n\r\nhttps://issues.apache.org/jira/browse/ARROW-14530\r\n\r\n[~kou]\u00a0I've created 2 issues\r\n\r\nAlso I have a one more question, I'm continue testing decimals) I'm tried to multiply 2 Decimal128 arrays with max precision(38) and it fails because precision is out of range. I expected that result should be converted to Decimal256 in such case, what do you think?\r\n{code:java}\r\na = Arrow::Decimal128ArrayBuilder.build(\r\n  Arrow::Decimal128DataType.new(38, 15), [1.1, 2.2, 3.3]\r\n)\r\n\r\nb = Arrow::Decimal128ArrayBuilder.build(\r\n  Arrow::Decimal128DataType.new(38, 15), [1.1, 2.2, 3.3]\r\n)\r\n\r\nArrow::Function.find('multiply').execute([a, b])\r\nArrow::Error::Invalid: [function][execute]: Invalid: Decimal precision out of range: 77\r\n\r\nArrow::Function.find('add').execute([a, b])\r\nArrow::Error::Invalid: [function][execute]: Invalid: Decimal precision out of range: 39\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=simpl1g",
                        "name": "simpl1g",
                        "key": "simpl1g",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Kanstantsin Ilchanka",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-11-01T08:57:45.524+0000",
                    "updated": "2021-11-01T08:57:45.524+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/comment/17436707",
                    "id": "17436707",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Thanks.\r\nIt looks reasonable. Could you create an issue for it?\r\nWe need to improve decimal related kernels in https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/scalar_arithmetic.cc for it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2021-11-01T09:08:23.800+0000",
                    "updated": "2021-11-01T09:08:23.800+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/comment/17436716",
                    "id": "17436716",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=simpl1g",
                        "name": "simpl1g",
                        "key": "simpl1g",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Kanstantsin Ilchanka",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "https://issues.apache.org/jira/browse/ARROW-14532",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=simpl1g",
                        "name": "simpl1g",
                        "key": "simpl1g",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Kanstantsin Ilchanka",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-11-01T09:29:39.250+0000",
                    "updated": "2021-11-01T09:29:39.250+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409096/comment/17557737",
                    "id": "17557737",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 13377\n[https://github.com/apache/arrow/pull/13377]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2022-06-22T23:58:32.618+0000",
                    "updated": "2022-06-22T23:58:32.618+0000"
                }
            ],
            "maxResults": 14,
            "total": 14,
            "startAt": 0
        },
        "customfield_12311820": "0|z0wa34:",
        "customfield_12314139": null
    }
}