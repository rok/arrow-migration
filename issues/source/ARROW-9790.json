{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13323442",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442",
    "key": "ARROW-9790",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "1.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
            "name": "alamb",
            "key": "alamb",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
            },
            "displayName": "Andrew Lamb",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
            "name": "alamb",
            "key": "alamb",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
            },
            "displayName": "Andrew Lamb",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
            "name": "alamb",
            "key": "alamb",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
            },
            "displayName": "Andrew Lamb",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9790/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 20,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/472443",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb opened a new pull request #8007:\nURL: https://github.com/apache/arrow/pull/8007\n\n\n   When I was reading a parquet file into `RecordBatches` using `ParquetFileArrowReader` that had row groups that were 100,000 rows in length with a batch size of 60,000, after reading 300,000 rows successfully, I started seeing this error\r\n   \r\n   ```\r\n    ParquetError(\"Parquet error: Not all children array length are the same!\")\r\n   ```\r\n   \r\n   Upon investigation, I found that when reading with `ParquetFileArrowReader`, if the parquet input file has multiple row groups, and if a batch happens to end at the end of a row group for Int or Float, no subsequent row groups are read\r\n   \r\n   Visually:\r\n   \r\n   ```\r\n   +-----+\r\n   | RG1 |\r\n   |     |\r\n   +-----+  <-- If a batch ends exactly at the end of this row group (page), RG2 is never read\r\n   +-----+\r\n   | RG2 |\r\n   |     |\r\n   +-----+\r\n   ```\r\n   \r\n   I traced the issue down to a bug in `PrimitiveArrayReader` where it mistakenly interprets reading `0` rows from a page reader as being at the end of the column.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T13:50:09.381+0000",
                    "updated": "2020-08-19T13:50:09.381+0000",
                    "started": "2020-08-19T13:50:09.381+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472443",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/472445",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8007:\nURL: https://github.com/apache/arrow/pull/8007#discussion_r473045357\n\n\n\n##########\nFile path: rust/parquet/src/arrow/array_reader.rs\n##########\n@@ -136,10 +136,8 @@ impl<T: DataType> ArrayReader for PrimitiveArrayReader<T> {\n         while records_read < batch_size {\n             let records_to_read = batch_size - records_read;\n \n+            // NB can be 0 if at end of page\n             let records_read_once = self.record_reader.read_records(records_to_read)?;\n-            if records_read_once == 0 {\n\nReview comment:\n       The case of `0` rows being read is handled in the `if records_read_once < records_to-read` clause below -- namely in this case the code needs to try and get the next page of data from the page reader. \n\n##########\nFile path: rust/parquet/src/arrow/arrow_reader.rs\n##########\n@@ -304,6 +304,45 @@ mod tests {\n         >(2, 100, 2, message_type, 15, 50, converter);\n     }\n \n+    #[test]\n\nReview comment:\n       Both these tests fail without the changes in this PR.\r\n   \r\n   I don't like the copy/paste nature of these tests and I plan a minor PR building on this one proposing how to remove the duplication and make the tests easier to read. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T13:52:45.934+0000",
                    "updated": "2020-08-19T13:52:45.934+0000",
                    "started": "2020-08-19T13:52:45.934+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472445",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/472450",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8007:\nURL: https://github.com/apache/arrow/pull/8007#issuecomment-676414386\n\n\n   https://issues.apache.org/jira/browse/ARROW-9790\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T14:05:55.595+0000",
                    "updated": "2020-08-19T14:05:55.595+0000",
                    "started": "2020-08-19T14:05:55.595+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472450",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/472456",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #8007:\nURL: https://github.com/apache/arrow/pull/8007#issuecomment-676450197\n\n\n   As the code that I removed in this PR  added to support empty pages in 8a61570a8bd64ae6f6e47ce8efd2287c3c2feded (but it didn't seem to have any tests), I was worried that this deletion would cause some sort of reversion in behavior. To ensure it didn't, I added a test for empty pages in commit cfdea8349a8f41229a4c8fb2cfddec3bb11df112\r\n   \r\n   To try and ensure that the test covers the empty pages case, I and ran the new test on commit ed1f771dccdde623ce85e212eccb2b573185c461 (the one right before 8a61570a8bd64ae6f6e47ce8efd2287c3c2feded) and the test fails, thus leading me to conclude that the code removed in this PR is unnecessary and zero page parquet files are still supported.\r\n   \r\n   Log of what I did:\r\n   \r\n   Get commit right before support for empty pages:\r\n   ```\r\n   alamb@MacBook-Pro rust % git checkout ed1f771dccdde623ce85e212eccb2b573185c461\r\n   git checkout ed1f771dccdde623ce85e212eccb2b573185c461\r\n   M\ttesting\r\n   Note: switching to 'ed1f771dccdde623ce85e212eccb2b573185c461'.\r\n   ...\r\n   HEAD is now at ed1f771dc ARROW-8717: [CI][Packaging] Add build dependency on boost to homebrew\r\n   ```\r\n   \r\n   Apply new test for no pages:\r\n   \r\n   ```\r\n   alamb@MacBook-Pro rust % git cherry-pick cfdea8349a8f41229a4c8fb2cfddec3bb11df112\r\n   git cherry-pick cfdea8349a8f41229a4c8fb2cfddec3bb11df112\r\n   Auto-merging rust/parquet/src/arrow/array_reader.rs\r\n   [detached HEAD ab3bcdd8f] Add a test for reading empty pages\r\n    Date: Wed Aug 19 10:16:31 2020 -0400\r\n    1 file changed, 57 insertions(+), 1 deletion(-)\r\n   ```\r\n   \r\n   Then I had to edit the test a little to use `.len` instead of `.is_empty` (which did not exist in the old commit):\r\n   \r\n   ```\r\n   diff --git a/rust/parquet/src/arrow/array_reader.rs b/rust/parquet/src/arrow/array_reader.rs\r\n   index d70619518..54c929c05 100644\r\n   --- a/rust/parquet/src/arrow/array_reader.rs\r\n   +++ b/rust/parquet/src/arrow/array_reader.rs\r\n   @@ -967,7 +967,7 @@ mod tests {\r\n   \r\n            // expect no values to be read\r\n            let array = array_reader.next_batch(50).unwrap();\r\n   -        assert!(array.is_empty());\r\n   +        assert!(array.len() == 0);\r\n        }\r\n   \r\n        #[test]\r\n   ```\r\n   \r\n   And then I ran the test, and it fails:\r\n   \r\n   ```\r\n   cd arrow/rust/parquet && PARQUET_TEST_DATA=`pwd`/../../cpp/submodules/parquet-testing/data ARROW_TEST_DATA=`pwd`/../../testing/data cargo test\r\n   ...\r\n   ---- arrow::array_reader::tests::test_primitive_array_reader_empty_pages stdout ----\r\n   thread 'arrow::array_reader::tests::test_primitive_array_reader_empty_pages' panicked at 'called `Result::unwrap()` on an `Err` value: General(\"Can\\'t build array without pages!\")', parquet/src/arrow/array_reader.rs:962:32\r\n   note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n   ```\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T14:29:24.289+0000",
                    "updated": "2020-08-19T14:29:24.289+0000",
                    "started": "2020-08-19T14:29:24.289+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472456",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/472457",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8007:\nURL: https://github.com/apache/arrow/pull/8007#issuecomment-676450729\n\n\n   @sunchao Could you review as well ?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T14:29:47.546+0000",
                    "updated": "2020-08-19T14:29:47.546+0000",
                    "started": "2020-08-19T14:29:47.546+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472457",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/472458",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb edited a comment on pull request #8007:\nURL: https://github.com/apache/arrow/pull/8007#issuecomment-676450197\n\n\n   As the code that I removed in this PR  added to support empty pages in 8a61570a8bd64ae6f6e47ce8efd2287c3c2feded (but it didn't seem to have any tests), I was worried that this deletion would cause some sort of reversion in behavior. To ensure it didn't, I added a test for empty pages in commit cfdea8349a8f41229a4c8fb2cfddec3bb11df112\r\n   \r\n   To try and ensure that the test covers the empty pages case, I and ran the new test on commit ed1f771dccdde623ce85e212eccb2b573185c461 (the one right before 8a61570a8bd64ae6f6e47ce8efd2287c3c2feded) and the test fails, thus leading me to conclude that the code removed in this PR is unnecessary and zero page parquet files are still supported.\r\n   \r\n   Log of what I did:\r\n   \r\n   Get commit right before support for empty pages:\r\n   ```\r\n   alamb@MacBook-Pro rust % git checkout ed1f771dccdde623ce85e212eccb2b573185c461\r\n   git checkout ed1f771dccdde623ce85e212eccb2b573185c461\r\n   M\ttesting\r\n   Note: switching to 'ed1f771dccdde623ce85e212eccb2b573185c461'.\r\n   ...\r\n   HEAD is now at ed1f771dc ARROW-8717: [CI][Packaging] Add build dependency on boost to homebrew\r\n   ```\r\n   \r\n   Apply new test for no pages:\r\n   \r\n   ```\r\n   alamb@MacBook-Pro rust % git cherry-pick cfdea8349a8f41229a4c8fb2cfddec3bb11df112\r\n   git cherry-pick cfdea8349a8f41229a4c8fb2cfddec3bb11df112\r\n   Auto-merging rust/parquet/src/arrow/array_reader.rs\r\n   [detached HEAD ab3bcdd8f] Add a test for reading empty pages\r\n    Date: Wed Aug 19 10:16:31 2020 -0400\r\n    1 file changed, 57 insertions(+), 1 deletion(-)\r\n   ```\r\n   \r\n   Then I had to edit the test a little to use `.len` instead of `.is_empty` (which did not exist in the old commit):\r\n   \r\n   ```\r\n   diff --git a/rust/parquet/src/arrow/array_reader.rs b/rust/parquet/src/arrow/array_reader.rs\r\n   index d70619518..54c929c05 100644\r\n   --- a/rust/parquet/src/arrow/array_reader.rs\r\n   +++ b/rust/parquet/src/arrow/array_reader.rs\r\n   @@ -967,7 +967,7 @@ mod tests {\r\n   \r\n            // expect no values to be read\r\n            let array = array_reader.next_batch(50).unwrap();\r\n   -        assert!(array.is_empty());\r\n   +        assert!(array.len() == 0);\r\n        }\r\n   \r\n        #[test]\r\n   ```\r\n   \r\n   And then I ran the test, and it fails:\r\n   \r\n   ```\r\n   cd arrow/rust/parquet && PARQUET_TEST_DATA=`pwd`/../../cpp/submodules/parquet-testing/data ARROW_TEST_DATA=`pwd`/../../testing/data cargo test\r\n   ...\r\n   ---- arrow::array_reader::tests::test_primitive_array_reader_empty_pages stdout ----\r\n   thread 'arrow::array_reader::tests::test_primitive_array_reader_empty_pages' panicked at 'called `Result::unwrap()` on an `Err` value: General(\"Can\\'t build array without pages!\")', parquet/src/arrow/array_reader.rs:962:32\r\n   note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n   ```\r\n   FYI @houqp  and @paddyhoran \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T14:30:02.878+0000",
                    "updated": "2020-08-19T14:30:02.878+0000",
                    "started": "2020-08-19T14:30:02.878+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472458",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/472460",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8007:\nURL: https://github.com/apache/arrow/pull/8007#discussion_r473075068\n\n\n\n##########\nFile path: rust/parquet/src/arrow/array_reader.rs\n##########\n@@ -1000,6 +998,33 @@ mod tests {\n         }\n     }\n \n+    #[test]\n+    fn test_primitive_array_reader_empty_pages() {\n\nReview comment:\n       This is a test for the functionality added in https://github.com/apache/arrow/commit/8a61570a8bd64ae6f6e47ce8efd2287c3c2feded / https://github.com/apache/arrow/pull/7140\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T14:31:30.920+0000",
                    "updated": "2020-08-19T14:31:30.920+0000",
                    "started": "2020-08-19T14:31:30.919+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472460",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/472469",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on pull request #8007:\nURL: https://github.com/apache/arrow/pull/8007#issuecomment-676475353\n\n\n   > @sunchao Could you review as well ?\r\n   \r\n   Thanks for pinging! will do today.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T14:52:45.107+0000",
                    "updated": "2020-08-19T14:52:45.107+0000",
                    "started": "2020-08-19T14:52:45.107+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472469",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/472478",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb opened a new pull request #8009:\nURL: https://github.com/apache/arrow/pull/8009\n\n\n   I added two test cases in https://github.com/apache/arrow/pull/8007, which increased coverage. However, upon further review, I noticed the choice of parameters to hit edge conditions didn't cover the string data types.\r\n   \r\n   Rather than adding a bunch more copies of basically the same test to add new parameters for different tests, I instead propose using the same set of parameters for all data types and drive the tests using a table in this PR. \r\n   \r\n   It makes the test logic slightly harder to follow, in my opinion, but it does increase coverage\r\n   \r\n   Draft PR until the disposition of https://github.com/apache/arrow/pull/8007 is decided\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T15:20:24.715+0000",
                    "updated": "2020-08-19T15:20:24.715+0000",
                    "started": "2020-08-19T15:20:24.714+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472478",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/472479",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8009:\nURL: https://github.com/apache/arrow/pull/8009#discussion_r473111954\n\n\n\n##########\nFile path: rust/parquet/src/arrow/arrow_reader.rs\n##########\n@@ -348,30 +348,101 @@ mod tests {\n         \";\n \n         let converter = Utf8ArrayConverter {};\n-        single_column_reader_test::<\n+        run_single_column_reader_tests::<\n             ByteArrayType,\n             StringArray,\n             Utf8ArrayConverter,\n             RandUtf8Gen,\n-        >(2, 100, 2, message_type, 15, 50, converter);\n+        >(2, message_type, &converter);\n     }\n \n-    fn single_column_reader_test<T, A, C, G>(\n+    /// Parameters for single_column_reader_test\n+    #[derive(Debug)]\n+    struct TestOptions {\n+        /// Number of row group to write to parquet (row group size =\n+        /// num_row_groups / num_rows)\n         num_row_groups: usize,\n+        /// Total number of rows\n         num_rows: usize,\n-        rand_max: i32,\n-        message_type: &str,\n+        /// Size of batches to read back\n         record_batch_size: usize,\n+        /// Total number of batches to attempt to read.\n+        /// `record_batch_size` * `num_iterations` should be greater\n+        /// than `num_rows` to ensure the data can be read back completely\n         num_iterations: usize,\n-        converter: C,\n+    }\n+\n+    impl TestOptions {\n+        fn new(\n+            num_row_groups: usize,\n+            num_rows: usize,\n+            record_batch_size: usize,\n+            num_iterations: usize,\n+        ) -> Self {\n+            TestOptions {\n+                num_row_groups,\n+                num_rows,\n+                record_batch_size,\n+                num_iterations,\n+            }\n+        }\n+    }\n+\n+    /// Create a parquet file and then read it using\n+    /// `ParquetFileArrowReader` using a standard set of parameters\n+    /// `opts`.\n+    ///\n+    /// `rand_max` represents the maximum size of value to pass to to\n+    /// value generator\n+    fn run_single_column_reader_tests<T, A, C, G>(\n+        rand_max: i32,\n+        message_type: &str,\n+        converter: &C,\n     ) where\n         T: DataType,\n         G: RandGen<T>,\n         A: PartialEq + Array + 'static,\n         C: Converter<Vec<Option<T::T>>, A> + 'static,\n     {\n-        let values: Vec<Vec<T::T>> = (0..num_row_groups)\n-            .map(|_| G::gen_vec(rand_max, num_rows))\n+        let all_options = vec![\n\nReview comment:\n       This is the basic idea -- drive the test with a table that is shared between bool, utf, and fixed_len_binary_array types\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T15:21:32.028+0000",
                    "updated": "2020-08-19T15:21:32.028+0000",
                    "started": "2020-08-19T15:21:32.028+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472479",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/472480",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8009:\nURL: https://github.com/apache/arrow/pull/8009#issuecomment-676493621\n\n\n   https://issues.apache.org/jira/browse/ARROW-9790\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T15:23:47.711+0000",
                    "updated": "2020-08-19T15:23:47.711+0000",
                    "started": "2020-08-19T15:23:47.711+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472480",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/472483",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8007:\nURL: https://github.com/apache/arrow/pull/8007#discussion_r473116005\n\n\n\n##########\nFile path: rust/parquet/src/arrow/arrow_reader.rs\n##########\n@@ -304,6 +304,45 @@ mod tests {\n         >(2, 100, 2, message_type, 15, 50, converter);\n     }\n \n+    #[test]\n\nReview comment:\n       https://github.com/apache/arrow/pull/8009\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T15:26:38.141+0000",
                    "updated": "2020-08-19T15:26:38.141+0000",
                    "started": "2020-08-19T15:26:38.140+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472483",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/472592",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8009:\nURL: https://github.com/apache/arrow/pull/8009#discussion_r473249646\n\n\n\n##########\nFile path: rust/parquet/src/arrow/arrow_reader.rs\n##########\n@@ -348,30 +348,101 @@ mod tests {\n         \";\n \n         let converter = Utf8ArrayConverter {};\n-        single_column_reader_test::<\n+        run_single_column_reader_tests::<\n             ByteArrayType,\n             StringArray,\n             Utf8ArrayConverter,\n             RandUtf8Gen,\n-        >(2, 100, 2, message_type, 15, 50, converter);\n+        >(2, message_type, &converter);\n     }\n \n-    fn single_column_reader_test<T, A, C, G>(\n+    /// Parameters for single_column_reader_test\n+    #[derive(Debug)]\n+    struct TestOptions {\n+        /// Number of row group to write to parquet (row group size =\n+        /// num_row_groups / num_rows)\n         num_row_groups: usize,\n+        /// Total number of rows\n         num_rows: usize,\n-        rand_max: i32,\n-        message_type: &str,\n+        /// Size of batches to read back\n         record_batch_size: usize,\n+        /// Total number of batches to attempt to read.\n+        /// `record_batch_size` * `num_iterations` should be greater\n+        /// than `num_rows` to ensure the data can be read back completely\n         num_iterations: usize,\n-        converter: C,\n+    }\n+\n+    impl TestOptions {\n+        fn new(\n+            num_row_groups: usize,\n+            num_rows: usize,\n+            record_batch_size: usize,\n+            num_iterations: usize,\n+        ) -> Self {\n+            TestOptions {\n+                num_row_groups,\n+                num_rows,\n+                record_batch_size,\n+                num_iterations,\n+            }\n+        }\n+    }\n+\n+    /// Create a parquet file and then read it using\n+    /// `ParquetFileArrowReader` using a standard set of parameters\n+    /// `opts`.\n+    ///\n+    /// `rand_max` represents the maximum size of value to pass to to\n+    /// value generator\n+    fn run_single_column_reader_tests<T, A, C, G>(\n+        rand_max: i32,\n+        message_type: &str,\n+        converter: &C,\n     ) where\n         T: DataType,\n         G: RandGen<T>,\n         A: PartialEq + Array + 'static,\n         C: Converter<Vec<Option<T::T>>, A> + 'static,\n     {\n-        let values: Vec<Vec<T::T>> = (0..num_row_groups)\n-            .map(|_| G::gen_vec(rand_max, num_rows))\n+        let all_options = vec![\n+            TestOptions::new(2, 100, 15, 50),\n+            // batch size (5) so batches to fall on row group\n+            // boundaries (25 rows in 3 row groups --> row groups of\n+            // 10, 10, and 5) to test edge refilling edge cases.\n+            TestOptions::new(3, 25, 5, 50),\n\nReview comment:\n       Since you felt the need to add a comment explaining the values, a tiny suggestion is to declare all members of `TestOptions` as `pub` and use \r\n   \r\n   ```\r\n   TestOptions {\r\n       num_row_groups: 3,\r\n       num_rows: 25,\r\n       record_batch_size: 5,\r\n       num_iterations: 50,\r\n   }\r\n   ```\r\n   instead, to increase readability of the values' meaning.\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T18:51:57.008+0000",
                    "updated": "2020-08-19T18:51:57.008+0000",
                    "started": "2020-08-19T18:51:57.008+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472592",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/472648",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8009:\nURL: https://github.com/apache/arrow/pull/8009#discussion_r473348774\n\n\n\n##########\nFile path: rust/parquet/src/arrow/arrow_reader.rs\n##########\n@@ -348,30 +348,101 @@ mod tests {\n         \";\n \n         let converter = Utf8ArrayConverter {};\n-        single_column_reader_test::<\n+        run_single_column_reader_tests::<\n             ByteArrayType,\n             StringArray,\n             Utf8ArrayConverter,\n             RandUtf8Gen,\n-        >(2, 100, 2, message_type, 15, 50, converter);\n+        >(2, message_type, &converter);\n     }\n \n-    fn single_column_reader_test<T, A, C, G>(\n+    /// Parameters for single_column_reader_test\n+    #[derive(Debug)]\n+    struct TestOptions {\n+        /// Number of row group to write to parquet (row group size =\n+        /// num_row_groups / num_rows)\n         num_row_groups: usize,\n+        /// Total number of rows\n         num_rows: usize,\n-        rand_max: i32,\n-        message_type: &str,\n+        /// Size of batches to read back\n         record_batch_size: usize,\n+        /// Total number of batches to attempt to read.\n+        /// `record_batch_size` * `num_iterations` should be greater\n+        /// than `num_rows` to ensure the data can be read back completely\n         num_iterations: usize,\n-        converter: C,\n+    }\n+\n+    impl TestOptions {\n+        fn new(\n+            num_row_groups: usize,\n+            num_rows: usize,\n+            record_batch_size: usize,\n+            num_iterations: usize,\n+        ) -> Self {\n+            TestOptions {\n+                num_row_groups,\n+                num_rows,\n+                record_batch_size,\n+                num_iterations,\n+            }\n+        }\n+    }\n+\n+    /// Create a parquet file and then read it using\n+    /// `ParquetFileArrowReader` using a standard set of parameters\n+    /// `opts`.\n+    ///\n+    /// `rand_max` represents the maximum size of value to pass to to\n+    /// value generator\n+    fn run_single_column_reader_tests<T, A, C, G>(\n+        rand_max: i32,\n+        message_type: &str,\n+        converter: &C,\n     ) where\n         T: DataType,\n         G: RandGen<T>,\n         A: PartialEq + Array + 'static,\n         C: Converter<Vec<Option<T::T>>, A> + 'static,\n     {\n-        let values: Vec<Vec<T::T>> = (0..num_row_groups)\n-            .map(|_| G::gen_vec(rand_max, num_rows))\n+        let all_options = vec![\n+            TestOptions::new(2, 100, 15, 50),\n+            // batch size (5) so batches to fall on row group\n+            // boundaries (25 rows in 3 row groups --> row groups of\n+            // 10, 10, and 5) to test edge refilling edge cases.\n+            TestOptions::new(3, 25, 5, 50),\n\nReview comment:\n       This is a good idea -- I will do so before turning this into a full on PR for review\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-19T21:39:46.849+0000",
                    "updated": "2020-08-19T21:39:46.849+0000",
                    "started": "2020-08-19T21:39:46.849+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472648",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/472708",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #8007:\nURL: https://github.com/apache/arrow/pull/8007#discussion_r473493106\n\n\n\n##########\nFile path: rust/parquet/src/arrow/array_reader.rs\n##########\n@@ -136,10 +136,8 @@ impl<T: DataType> ArrayReader for PrimitiveArrayReader<T> {\n         while records_read < batch_size {\n             let records_to_read = batch_size - records_read;\n \n+            // NB can be 0 if at end of page\n             let records_read_once = self.record_reader.read_records(records_to_read)?;\n-            if records_read_once == 0 {\n\nReview comment:\n       +1\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-20T01:01:46.540+0000",
                    "updated": "2020-08-20T01:01:46.540+0000",
                    "started": "2020-08-20T01:01:46.540+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472708",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/472709",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao closed pull request #8007:\nURL: https://github.com/apache/arrow/pull/8007\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-20T01:02:59.804+0000",
                    "updated": "2020-08-20T01:02:59.804+0000",
                    "started": "2020-08-20T01:02:59.803+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472709",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/473311",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8009:\nURL: https://github.com/apache/arrow/pull/8009#discussion_r474756757\n\n\n\n##########\nFile path: rust/parquet/src/arrow/arrow_reader.rs\n##########\n@@ -348,30 +348,101 @@ mod tests {\n         \";\n \n         let converter = Utf8ArrayConverter {};\n-        single_column_reader_test::<\n+        run_single_column_reader_tests::<\n             ByteArrayType,\n             StringArray,\n             Utf8ArrayConverter,\n             RandUtf8Gen,\n-        >(2, 100, 2, message_type, 15, 50, converter);\n+        >(2, message_type, &converter);\n     }\n \n-    fn single_column_reader_test<T, A, C, G>(\n+    /// Parameters for single_column_reader_test\n+    #[derive(Debug)]\n+    struct TestOptions {\n+        /// Number of row group to write to parquet (row group size =\n+        /// num_row_groups / num_rows)\n         num_row_groups: usize,\n+        /// Total number of rows\n         num_rows: usize,\n-        rand_max: i32,\n-        message_type: &str,\n+        /// Size of batches to read back\n         record_batch_size: usize,\n+        /// Total number of batches to attempt to read.\n+        /// `record_batch_size` * `num_iterations` should be greater\n+        /// than `num_rows` to ensure the data can be read back completely\n         num_iterations: usize,\n-        converter: C,\n+    }\n+\n+    impl TestOptions {\n+        fn new(\n+            num_row_groups: usize,\n+            num_rows: usize,\n+            record_batch_size: usize,\n+            num_iterations: usize,\n+        ) -> Self {\n+            TestOptions {\n+                num_row_groups,\n+                num_rows,\n+                record_batch_size,\n+                num_iterations,\n+            }\n+        }\n+    }\n+\n+    /// Create a parquet file and then read it using\n+    /// `ParquetFileArrowReader` using a standard set of parameters\n+    /// `opts`.\n+    ///\n+    /// `rand_max` represents the maximum size of value to pass to to\n+    /// value generator\n+    fn run_single_column_reader_tests<T, A, C, G>(\n+        rand_max: i32,\n+        message_type: &str,\n+        converter: &C,\n     ) where\n         T: DataType,\n         G: RandGen<T>,\n         A: PartialEq + Array + 'static,\n         C: Converter<Vec<Option<T::T>>, A> + 'static,\n     {\n-        let values: Vec<Vec<T::T>> = (0..num_row_groups)\n-            .map(|_| G::gen_vec(rand_max, num_rows))\n+        let all_options = vec![\n+            TestOptions::new(2, 100, 15, 50),\n+            // batch size (5) so batches to fall on row group\n+            // boundaries (25 rows in 3 row groups --> row groups of\n+            // 10, 10, and 5) to test edge refilling edge cases.\n+            TestOptions::new(3, 25, 5, 50),\n\nReview comment:\n       Done in https://github.com/apache/arrow/pull/8009/commits/f149500a86ff3c557015434b4c2f7811a63b10bb\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-21T15:05:34.127+0000",
                    "updated": "2020-08-21T15:05:34.127+0000",
                    "started": "2020-08-21T15:05:34.126+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473311",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/476220",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8009:\nURL: https://github.com/apache/arrow/pull/8009#discussion_r479754464\n\n\n\n##########\nFile path: rust/parquet/src/arrow/arrow_reader.rs\n##########\n@@ -296,51 +296,12 @@ mod tests {\n         \";\n \n         let converter = FromConverter::new();\n-        single_column_reader_test::<\n+        run_single_column_reader_tests::<\n             BoolType,\n             BooleanArray,\n             FromConverter<Vec<Option<bool>>, BooleanArray>,\n             BoolType,\n-        >(2, 100, 2, message_type, 15, 50, converter);\n-    }\n-\n-    #[test]\n-    fn test_bool_single_column_reader_test_batch_size_divides_into_row_group_size() {\n\nReview comment:\n       The coverage of these tests was moved into two table entries here: https://github.com/apache/arrow/pull/8009/files#diff-4c103051156d7b901fad8d9e26104932R393\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-30T10:56:55.217+0000",
                    "updated": "2020-08-30T10:56:55.217+0000",
                    "started": "2020-08-30T10:56:55.216+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "476220",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/482857",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove closed pull request #8009:\nURL: https://github.com/apache/arrow/pull/8009\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T20:27:36.965+0000",
                    "updated": "2020-09-12T20:27:36.965+0000",
                    "started": "2020-09-12T20:27:36.965+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482857",
                    "issueId": "13323442"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/worklog/483261",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove closed pull request #8009:\nURL: https://github.com/apache/arrow/pull/8009\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T21:39:18.113+0000",
                    "updated": "2020-09-12T21:39:18.113+0000",
                    "started": "2020-09-12T21:39:18.113+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483261",
                    "issueId": "13323442"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 12000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@61ab318e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@757dd9b0[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4263d85b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@59c829fe[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9764871[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@161b42fd[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a66e165[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5279a60e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@69f759f0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2537e299[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58a74293[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4771c65f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jul 08 18:38:49 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-08-20T01:02:47.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9790/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-08-18T22:24:04.000+0000",
        "updated": "2022-07-08T18:38:49.000+0000",
        "timeoriginalestimate": null,
        "description": "When I was reading a parquet file into RecordBatches using {{ParquetFileArrowReader}} that had row groups that were 100,000 rows in length with a batch size of 60,000, after reading 300,000 rows successfully, I started seeing this error\r\n\r\n{code}\r\n ParquetError(\"Parquet error: Not all children array length are the same!\")\r\n{code}\r\n\r\nUpon investigation, I found that when reading with {{ParquetFileArrowReader}}, if the parquet input file has multiple row groups, and if a batch happens to end at the end of a row group for Int or Float, no subsequent row groups are read\r\n\r\nVisually:\r\n{code}\r\n+-----+\r\n| RG1 |\r\n|     |\r\n+-----+  <-- If a batch ends exactly at the end of this row group (page), RG2 is never read\r\n+-----+\r\n| RG2 |\r\n|     |\r\n+-----+\r\n{code}\r\n\r\nA reproducer is attached. 20 values should be read by the {{ParquetFileArrowReader}} regardless of the batch size. However, when using batch sizes such as {{5}} or {{3}} (which fall on a boundary between row groups) not all the rows are read. \r\n\r\nTo run the reproducer, decompress the attachment  [^parquet_file_arrow_reader.zip] and do `cargo run`\r\n\r\nThe output is as follows:\r\n\r\n{code}\r\nwrote 20 rows in 4 row groups to /tmp/repro.parquet\r\nSize when reading with batch_size 100 : 20\r\nSize when reading with batch_size 7 : 20\r\nSize when reading with batch_size 5 : 5\r\n{code}\r\n\r\nThe expected output is as follows (should always read 20 rows, regardless of the batch size):\r\n{code}\r\nwrote 20 rows in 4 row groups to /tmp/repro.parquet\r\nSize when reading with batch_size 100 : 20\r\nSize when reading with batch_size 7 : 20\r\nSize when reading with batch_size 5 : 20\r\n{code}\r\n\r\nh2. Workaround\r\nUse a different batch size that will not fall on record batch boundaries",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/attachment/13010060",
                "id": "13010060",
                "filename": "parquet_file_arrow_reader.zip",
                "author": {
                    "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                    "name": "alamb",
                    "key": "alamb",
                    "avatarUrls": {
                        "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                        "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                        "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                        "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                    },
                    "displayName": "Andrew Lamb",
                    "active": true,
                    "timeZone": "America/New_York"
                },
                "created": "2020-08-18T22:23:44.563+0000",
                "size": 39487,
                "mimeType": "application/zip",
                "content": "https://issues.apache.org/jira/secure/attachment/13010060/parquet_file_arrow_reader.zip"
            }
        ],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [Parquet] ParquetFileArrowReader fails to decode all pages if batches fall exactly on row group boundaries",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/comment/17180135",
                    "id": "17180135",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I am pretty sure I know what the problem is, and I will have a PR up to fix this tomorrow morning",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-08-18T22:24:30.648+0000",
                    "updated": "2020-08-18T22:24:30.648+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/comment/17180510",
                    "id": "17180510",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Here is the reproducer code, to save you from having to download it:\r\n\r\n{code}\r\n\r\nuse std::{fs, path::Path, rc::Rc};\r\n\r\nuse parquet::{\r\n    file::{\r\n        properties::WriterProperties,\r\n        writer::{FileWriter, SerializedFileWriter},\r\n    },\r\n    schema::parser::parse_message_type, column::writer::ColumnWriter,\r\n};\r\n\r\nuse parquet::arrow::arrow_reader::ArrowReader;\r\nuse arrow::record_batch::RecordBatchReader;\r\n\r\nfn main() {\r\n    make_repro_file();\r\n\r\n    println!(\"Size when reading with batch_size 100 : {}\", read_record_batches(100));\r\n    println!(\"Size when reading with batch_size 7 : {}\", read_record_batches(7));\r\n    println!(\"Size when reading with batch_size 5 : {}\", read_record_batches(5));\r\n\r\n}\r\n\r\n/// create repro.parquet file\r\nfn make_repro_file() {\r\n    let path = Path::new(\"/tmp/repro.parquet\");\r\n\r\n    let message_type = \"\r\n  message schema {\r\n    REQUIRED INT32 b;\r\n  }\r\n\";\r\n    let schema = Rc::new(parse_message_type(message_type).unwrap());\r\n    let props = Rc::new(WriterProperties::builder().build());\r\n    let file = fs::File::create(&path).unwrap();\r\n    let mut writer = SerializedFileWriter::new(file, schema, props).unwrap();\r\n\r\n    let data = [1,2,3,4,5];\r\n\r\n    for _ in 0..4 {\r\n        let mut row_group_writer = writer.next_row_group().unwrap();\r\n        if let Some(mut col_writer) = row_group_writer.next_column().unwrap() {\r\n            match &mut col_writer {\r\n                ColumnWriter::Int32ColumnWriter(w) => {\r\n                    w.write_batch(&data, None, None).expect(\"Writing data\");\r\n                },\r\n                _=> unimplemented!(\"unexpected type\")\r\n            }\r\n            row_group_writer.close_column(col_writer).unwrap();\r\n        }\r\n        writer.close_row_group(row_group_writer).unwrap();\r\n    }\r\n    writer.close().unwrap();\r\n    println!(\"wrote 20 rows in 4 row groups to /tmp/repro.parquet\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// returns the number of total rows, using batch_size\r\nfn read_record_batches(batch_size: usize) -> usize {\r\n    //println!(\"Opening the file....\");\r\n    let r = fs::File::open(\"/tmp/repro.parquet\").unwrap();\r\n\r\n    let parquet_reader = parquet::file::reader::SerializedFileReader::new(r).unwrap();\r\n    let mut reader = parquet::arrow::arrow_reader::ParquetFileArrowReader::new(Rc::new(parquet_reader));\r\n    let mut record_batch_reader = reader.get_record_reader(batch_size).unwrap();\r\n\r\n    let mut total_rows = 0;\r\n    loop {\r\n        let rb = record_batch_reader.next_batch();\r\n        match rb {\r\n            Err(e) => println!(\"WARNING: error reading batch: {:?}, SKIPPING\", e),\r\n            Ok(Some(rb)) => {\r\n                //println!(\"Successfully got a new record batch of {} rows\", rb.num_rows());\r\n                total_rows += rb.num_rows();\r\n            },\r\n            Ok(None) => {\r\n                //println!(\"No more batches\");\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    total_rows\r\n}\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-08-19T12:44:59.768+0000",
                    "updated": "2020-08-19T12:44:59.768+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/comment/17180898",
                    "id": "17180898",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
                        "name": "csun",
                        "key": "csun",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
                        },
                        "displayName": "Chao Sun",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 8007\n[https://github.com/apache/arrow/pull/8007]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
                        "name": "csun",
                        "key": "csun",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
                        },
                        "displayName": "Chao Sun",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-08-20T01:02:47.479+0000",
                    "updated": "2020-08-20T01:02:47.479+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323442/comment/17564399",
                    "id": "17564399",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "See also https://github.com/apache/arrow-rs/issues/2025",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-07-08T18:38:49.055+0000",
                    "updated": "2022-07-08T18:38:49.055+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0hwaw:",
        "customfield_12314139": null
    }
}