{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13435863",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863",
    "key": "ARROW-16031",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/5",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/trivial.svg",
            "name": "Trivial",
            "id": "5"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=viniciusroque",
            "name": "viniciusroque",
            "key": "viniciusroque",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Vinicius Souza Roque",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=viniciusroque",
            "name": "viniciusroque",
            "key": "viniciusroque",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Vinicius Souza Roque",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16031/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 23,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/747895",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on pull request #12716:\nURL: https://github.com/apache/arrow/pull/12716#issuecomment-1079244551\n\n\n   @github-actions crossbow submit java-jars\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-25T17:26:36.913+0000",
                    "updated": "2022-03-25T17:26:36.913+0000",
                    "started": "2022-03-25T17:26:36.913+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "747895",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/747901",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12716:\nURL: https://github.com/apache/arrow/pull/12716#issuecomment-1079252588\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-25T17:36:02.672+0000",
                    "updated": "2022-03-25T17:36:02.672+0000",
                    "started": "2022-03-25T17:36:02.672+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "747901",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/747903",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12716:\nURL: https://github.com/apache/arrow/pull/12716#issuecomment-1079253461\n\n\n   Revision: 45127ca0710c84fc01fbb0527de46bb899a9ee98\n   \n   Submitted crossbow builds: [ursacomputing/crossbow @ actions-1792](https://github.com/ursacomputing/crossbow/branches/all?query=actions-1792)\n   \n   |Task|Status|\n   |----|------|\n   |java-jars|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1792-github-java-jars)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1792-github-java-jars)|\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-25T17:37:17.720+0000",
                    "updated": "2022-03-25T17:37:17.720+0000",
                    "started": "2022-03-25T17:37:17.719+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "747903",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/751051",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on pull request #12716:\nURL: https://github.com/apache/arrow/pull/12716#issuecomment-1084799319\n\n\n   @github-actions crossbow submit java-jars\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-31T16:14:09.824+0000",
                    "updated": "2022-03-31T16:14:09.824+0000",
                    "started": "2022-03-31T16:14:09.824+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "751051",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/751052",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12716:\nURL: https://github.com/apache/arrow/pull/12716#issuecomment-1084800748\n\n\n   Revision: 61757b89352f7c80e2ec3fec84fc91bfdc05df37\n   \n   Submitted crossbow builds: [ursacomputing/crossbow @ actions-1807](https://github.com/ursacomputing/crossbow/branches/all?query=actions-1807)\n   \n   |Task|Status|\n   |----|------|\n   |java-jars|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1807-github-java-jars)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1807-github-java-jars)|\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-31T16:15:35.992+0000",
                    "updated": "2022-03-31T16:15:35.992+0000",
                    "started": "2022-03-31T16:15:35.992+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "751052",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/755324",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on code in PR #12716:\nURL: https://github.com/apache/arrow/pull/12716#discussion_r847539724\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2815,14 +2815,17 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n   }\n \n   // The soundex code is composed by one letter and three numbers\n+  char* soundex = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, in_len));\n   char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n-  if (ret == nullptr) {\n+\n+  if (soundex == nullptr || ret == nullptr) {\n\nReview Comment:\n   This function is returning an error on memory allocation failure. concat_ws should do the same\n\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2814,46 +2845,51 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n     return \"\";\n   }\n \n+  char* in_clean;\n+  int len_clean;\n+\n+  // Removing numbers, spaces and special characters, and put upper all letters\n+  in_clean = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, in_len));\n+  memcpy(in_clean, in, in_len);\n\nReview Comment:\n   We should avoid the memcpy() - in the common case when this function is used, there are no special characters.. \n\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops_test.cc:\n##########\n@@ -2310,12 +2310,43 @@ TEST(TestStringOps, TestFromHex) {\n       ::testing::HasSubstr(\"Error parsing hex string, one or more bytes are not valid.\"));\n   ctx.Reset();\n }\n+\n TEST(TestStringOps, TestSoundex) {\n   gandiva::ExecutionContext ctx;\n   auto ctx_ptr = reinterpret_cast<int64_t>(&ctx);\n   int32_t out_len = 0;\n   const char* out;\n \n+  out = soundex_utf8(ctx_ptr, \"Robert\", 6, &out_len);\n\nReview Comment:\n   Please add a test case where the string starts with lower case alphabets\r\n   \n\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2837,21 +2840,30 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n   for (int i = start_idx, l = in_len; i < l; i++) {\n     if (isalpha(in[i]) > 0) {\n       c = toupper(in[i]) - 65;\n-      if (mappings[c] != '0') {\n-        if (mappings[c] != ret[si - 1]) {\n-          ret[si] = mappings[c];\n-          si++;\n-        }\n-\n-        if (si > 3) break;\n+      if (mappings[c] != soundex[si - 1]) {\n+        soundex[si] = mappings[c];\n+        si++;\n       }\n     }\n   }\n \n-  if (si <= 3) {\n-    while (si <= 3) {\n-      ret[si] = '0';\n-      si++;\n+  for (int i = 1; i < si; i++) {\n+    // If the saved letter's digit is the same as the resulting first digit, remove the\n+    // digit.\n+    if (i == 1 && soundex[i] == mappings[ret[0] - 65]) {\n+      i++;\n+    }\n+    if (soundex[i] != '0') {\n\nReview Comment:\n   I see this skipping all vowels and anything that maps to '0'. This is step 1 in the algorithm in line 2792.\r\n   \r\n   Are we implementing step 3 as well?\r\n   \r\n   3. If two or more letters with the same number are adjacent in the original name\r\n   //    (before step 1), only retain the first letter; \r\n   \r\n   I can see this implemented in line 2843. However, I dont see the below implemented. If we are not implementing the below, please remove this from the comments\r\n   \r\n   also two letters with the same number\r\n   //    separated by 'h' or 'w' are coded as a single number, whereas such letters separated\r\n   //    by a vowel are coded twice. This rule also applies to the first letter.\n\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2837,21 +2840,30 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n   for (int i = start_idx, l = in_len; i < l; i++) {\n     if (isalpha(in[i]) > 0) {\n       c = toupper(in[i]) - 65;\n-      if (mappings[c] != '0') {\n-        if (mappings[c] != ret[si - 1]) {\n-          ret[si] = mappings[c];\n-          si++;\n-        }\n-\n-        if (si > 3) break;\n+      if (mappings[c] != soundex[si - 1]) {\n\nReview Comment:\n   soundex[0] is not initialised and this is comparing against soundex[0]. Please initialise soundex[0] to an invalid mapping\n\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2837,21 +2840,30 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n   for (int i = start_idx, l = in_len; i < l; i++) {\n\nReview Comment:\n   What is need for the temporary variable l\n\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2837,21 +2840,30 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n   for (int i = start_idx, l = in_len; i < l; i++) {\n     if (isalpha(in[i]) > 0) {\n       c = toupper(in[i]) - 65;\n-      if (mappings[c] != '0') {\n-        if (mappings[c] != ret[si - 1]) {\n-          ret[si] = mappings[c];\n-          si++;\n-        }\n-\n-        if (si > 3) break;\n+      if (mappings[c] != soundex[si - 1]) {\n+        soundex[si] = mappings[c];\n+        si++;\n       }\n     }\n   }\n \n-  if (si <= 3) {\n-    while (si <= 3) {\n-      ret[si] = '0';\n-      si++;\n+  for (int i = 1; i < si; i++) {\n+    // If the saved letter's digit is the same as the resulting first digit, remove the\n+    // digit.\n+    if (i == 1 && soundex[i] == mappings[ret[0] - 65]) {\n\nReview Comment:\n   i == 1 is only true once. We shouldn't be checking for i==1 in the loop.\r\n   \r\n   Please change this to be:\r\n   if (soundex[1] == mappings[ret[0] - 65]) {\r\n     i = 2;\r\n   } else {\r\n     i = 1;\r\n   }\r\n   \r\n   before the for loop in line 2850\n\n\n\n",
                    "created": "2022-04-11T17:11:16.832+0000",
                    "updated": "2022-04-11T17:11:16.832+0000",
                    "started": "2022-04-11T17:11:16.832+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "755324",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/755901",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on code in PR #12716:\nURL: https://github.com/apache/arrow/pull/12716#discussion_r848682428\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2814,46 +2845,51 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n     return \"\";\n   }\n \n+  char* in_clean;\n+  int len_clean;\n+\n+  // Removing numbers, spaces and special characters, and put upper all letters\n+  in_clean = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, in_len));\n+  memcpy(in_clean, in, in_len);\n\nReview Comment:\n   this has removed\n\n\n\n",
                    "created": "2022-04-12T17:22:01.176+0000",
                    "updated": "2022-04-12T17:22:01.176+0000",
                    "started": "2022-04-12T17:22:01.176+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "755901",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/755905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on code in PR #12716:\nURL: https://github.com/apache/arrow/pull/12716#discussion_r848684055\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2815,14 +2815,17 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n   }\n \n   // The soundex code is composed by one letter and three numbers\n+  char* soundex = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, in_len));\n   char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n-  if (ret == nullptr) {\n+\n+  if (soundex == nullptr || ret == nullptr) {\n\nReview Comment:\n   Yes, according to Projjal, this should return false\n\n\n\n",
                    "created": "2022-04-12T17:24:06.649+0000",
                    "updated": "2022-04-12T17:24:06.649+0000",
                    "started": "2022-04-12T17:24:06.648+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "755905",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/755906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on code in PR #12716:\nURL: https://github.com/apache/arrow/pull/12716#discussion_r848684393\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2837,21 +2840,30 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n   for (int i = start_idx, l = in_len; i < l; i++) {\n     if (isalpha(in[i]) > 0) {\n       c = toupper(in[i]) - 65;\n-      if (mappings[c] != '0') {\n-        if (mappings[c] != ret[si - 1]) {\n-          ret[si] = mappings[c];\n-          si++;\n-        }\n-\n-        if (si > 3) break;\n+      if (mappings[c] != soundex[si - 1]) {\n\nReview Comment:\n   Okay, I started with value '0'.\n\n\n\n",
                    "created": "2022-04-12T17:24:36.536+0000",
                    "updated": "2022-04-12T17:24:36.536+0000",
                    "started": "2022-04-12T17:24:36.535+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "755906",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/755907",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on code in PR #12716:\nURL: https://github.com/apache/arrow/pull/12716#discussion_r848686113\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2837,21 +2840,30 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n   for (int i = start_idx, l = in_len; i < l; i++) {\n     if (isalpha(in[i]) > 0) {\n       c = toupper(in[i]) - 65;\n-      if (mappings[c] != '0') {\n-        if (mappings[c] != ret[si - 1]) {\n-          ret[si] = mappings[c];\n-          si++;\n-        }\n-\n-        if (si > 3) break;\n+      if (mappings[c] != soundex[si - 1]) {\n+        soundex[si] = mappings[c];\n+        si++;\n       }\n     }\n   }\n \n-  if (si <= 3) {\n-    while (si <= 3) {\n-      ret[si] = '0';\n-      si++;\n+  for (int i = 1; i < si; i++) {\n+    // If the saved letter's digit is the same as the resulting first digit, remove the\n+    // digit.\n+    if (i == 1 && soundex[i] == mappings[ret[0] - 65]) {\n\nReview Comment:\n   Done\n\n\n\n",
                    "created": "2022-04-12T17:26:46.645+0000",
                    "updated": "2022-04-12T17:26:46.645+0000",
                    "started": "2022-04-12T17:26:46.645+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "755907",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/755908",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on code in PR #12716:\nURL: https://github.com/apache/arrow/pull/12716#discussion_r848687117\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2837,21 +2840,30 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n   for (int i = start_idx, l = in_len; i < l; i++) {\n\nReview Comment:\n   don't need, is from old version from Augusto.\r\n   I removed\n\n\n\n",
                    "created": "2022-04-12T17:28:01.752+0000",
                    "updated": "2022-04-12T17:28:01.752+0000",
                    "started": "2022-04-12T17:28:01.752+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "755908",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/755943",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on code in PR #12716:\nURL: https://github.com/apache/arrow/pull/12716#discussion_r848764946\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops_test.cc:\n##########\n@@ -2310,12 +2310,43 @@ TEST(TestStringOps, TestFromHex) {\n       ::testing::HasSubstr(\"Error parsing hex string, one or more bytes are not valid.\"));\n   ctx.Reset();\n }\n+\n TEST(TestStringOps, TestSoundex) {\n   gandiva::ExecutionContext ctx;\n   auto ctx_ptr = reinterpret_cast<int64_t>(&ctx);\n   int32_t out_len = 0;\n   const char* out;\n \n+  out = soundex_utf8(ctx_ptr, \"Robert\", 6, &out_len);\n\nReview Comment:\n   Done\n\n\n\n",
                    "created": "2022-04-12T18:46:50.030+0000",
                    "updated": "2022-04-12T18:46:50.030+0000",
                    "started": "2022-04-12T18:46:50.030+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "755943",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/756342",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on code in PR #12716:\nURL: https://github.com/apache/arrow/pull/12716#discussion_r849398932\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2837,21 +2840,30 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n   for (int i = start_idx, l = in_len; i < l; i++) {\n     if (isalpha(in[i]) > 0) {\n       c = toupper(in[i]) - 65;\n-      if (mappings[c] != '0') {\n-        if (mappings[c] != ret[si - 1]) {\n-          ret[si] = mappings[c];\n-          si++;\n-        }\n-\n-        if (si > 3) break;\n+      if (mappings[c] != soundex[si - 1]) {\n+        soundex[si] = mappings[c];\n+        si++;\n       }\n     }\n   }\n \n-  if (si <= 3) {\n-    while (si <= 3) {\n-      ret[si] = '0';\n-      si++;\n+  for (int i = 1; i < si; i++) {\n+    // If the saved letter's digit is the same as the resulting first digit, remove the\n+    // digit.\n+    if (i == 1 && soundex[i] == mappings[ret[0] - 65]) {\n+      i++;\n+    }\n+    if (soundex[i] != '0') {\n\nReview Comment:\n   I updated the documentation, look if is good\n\n\n\n",
                    "created": "2022-04-13T11:58:43.959+0000",
                    "updated": "2022-04-13T11:58:43.959+0000",
                    "started": "2022-04-13T11:58:43.959+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "756342",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/756568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on code in PR #12716:\nURL: https://github.com/apache/arrow/pull/12716#discussion_r849732089\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2815,43 +2814,62 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n   }\n \n   // The soundex code is composed by one letter and three numbers\n+  char* soundex = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, in_len));\n   char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n-  if (ret == nullptr) {\n+\n+  if (soundex == nullptr || ret == nullptr) {\n     gdv_fn_context_set_error_msg(ctx, \"Could not allocate memory for output string\");\n     *out_len = 0;\n     return \"\";\n   }\n \n   int si = 1;\n+  int ret_len = 1;\n   unsigned char c;\n \n   int start_idx = 0;\n   for (int i = 0; i < in_len; ++i) {\n     if (isalpha(in[i]) > 0) {\n+      // Retain the first letter\n       ret[0] = toupper(in[i]);\n       start_idx = i + 1;\n       break;\n     }\n   }\n \n-  for (int i = start_idx, l = in_len; i < l; i++) {\n+  soundex[0] = '\\0';\n+  // Replace consonants with digits and special letters with 0\n+  for (int i = start_idx; i < in_len; i++) {\n     if (isalpha(in[i]) > 0) {\n       c = toupper(in[i]) - 65;\n-      if (mappings[c] != '0') {\n-        if (mappings[c] != ret[si - 1]) {\n-          ret[si] = mappings[c];\n-          si++;\n-        }\n-\n-        if (si > 3) break;\n+      if (mappings[c] != soundex[si - 1]) {\n+        soundex[si] = mappings[c];\n+        si++;\n       }\n     }\n   }\n \n-  if (si <= 3) {\n-    while (si <= 3) {\n-      ret[si] = '0';\n-      si++;\n+  int i = 1;\n+  // If the saved letter's digit is the same as the resulting first digit, remove the\n+  // digit.\n+  if (soundex[i] == mappings[ret[0] - 65]) {\n\nReview Comment:\n   You have to handle the case where ret[0] is not initialised.. for e.g. the input is '123456' - since there are no alphabets, ret[0] will not be initialised\r\n   \r\n   Similarly, you have to handle the case where soundex[1] is not set.. \n\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops_test.cc:\n##########\n@@ -2310,12 +2310,49 @@ TEST(TestStringOps, TestFromHex) {\n       ::testing::HasSubstr(\"Error parsing hex string, one or more bytes are not valid.\"));\n   ctx.Reset();\n }\n+\n TEST(TestStringOps, TestSoundex) {\n   gandiva::ExecutionContext ctx;\n   auto ctx_ptr = reinterpret_cast<int64_t>(&ctx);\n   int32_t out_len = 0;\n   const char* out;\n \n+  out = soundex_utf8(ctx_ptr, \"robert\", 6, &out_len);\n\nReview Comment:\n   Add a test case where the input is all numbers\r\n   Add a test case where there is only alphabet and the rest are numbers\n\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2789,20 +2789,19 @@ static char mappings[] = {'0', '1', '2', '3', '0', '1', '2', '0', '0',\n // the input string followed by a phonetic code. Characters that are not alphabetic are\n // ignored. If expression evaluates to the null value, null is returned.\n //\n-// The soundex algorith works with the following steps:\n+// The soundex algorithm works with the following steps:\n //    1. Retain the first letter of the string and drop all other occurrences of a, e, i,\n-//    o, u, y, h, w.\n+//    o, u, y, h, w. (let's call them special letters)\n //    2. Replace consonants with digits as follows (after the first letter):\n //        b, f, p, v \u2192 1\n //        c, g, j, k, q, s, x, z \u2192 2\n //        d, t \u2192 3\n //        l \u2192 4\n //        m, n \u2192 5\n //        r \u2192 6\n-//    3. If two or more letters with the same number are adjacent in the original name\n-//    (before step 1), only retain the first letter; also two letters with the same number\n-//    separated by 'h' or 'w' are coded as a single number, whereas such letters separated\n-//    by a vowel are coded twice. This rule also applies to the first letter.\n+//    3. If two or more letters with the same number were adjacent in the original name\n+//    (before step 1), or adjacent for any intervening from any special letters, then omit\n\nReview Comment:\n   What does \"or adjacent for any intervening from any special letters\" mean?\n\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2815,43 +2814,62 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n   }\n \n   // The soundex code is composed by one letter and three numbers\n+  char* soundex = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, in_len));\n   char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n-  if (ret == nullptr) {\n+\n+  if (soundex == nullptr || ret == nullptr) {\n     gdv_fn_context_set_error_msg(ctx, \"Could not allocate memory for output string\");\n     *out_len = 0;\n     return \"\";\n   }\n \n   int si = 1;\n+  int ret_len = 1;\n   unsigned char c;\n \n   int start_idx = 0;\n   for (int i = 0; i < in_len; ++i) {\n     if (isalpha(in[i]) > 0) {\n+      // Retain the first letter\n       ret[0] = toupper(in[i]);\n       start_idx = i + 1;\n       break;\n     }\n   }\n \n-  for (int i = start_idx, l = in_len; i < l; i++) {\n+  soundex[0] = '\\0';\n+  // Replace consonants with digits and special letters with 0\n+  for (int i = start_idx; i < in_len; i++) {\n     if (isalpha(in[i]) > 0) {\n       c = toupper(in[i]) - 65;\n-      if (mappings[c] != '0') {\n-        if (mappings[c] != ret[si - 1]) {\n-          ret[si] = mappings[c];\n-          si++;\n-        }\n-\n-        if (si > 3) break;\n+      if (mappings[c] != soundex[si - 1]) {\n+        soundex[si] = mappings[c];\n+        si++;\n       }\n     }\n   }\n \n-  if (si <= 3) {\n-    while (si <= 3) {\n-      ret[si] = '0';\n-      si++;\n+  int i = 1;\n+  // If the saved letter's digit is the same as the resulting first digit, remove the\n+  // digit.\n+  if (soundex[i] == mappings[ret[0] - 65]) {\n\nReview Comment:\n   Please change this to:\r\n   if (soundex[1] == mapp) {\r\n    i = 2;\r\n   }\n\n\n\n",
                    "created": "2022-04-13T17:34:58.825+0000",
                    "updated": "2022-04-13T17:34:58.825+0000",
                    "started": "2022-04-13T17:34:58.825+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "756568",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/756922",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on code in PR #12716:\nURL: https://github.com/apache/arrow/pull/12716#discussion_r850327482\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2789,20 +2789,19 @@ static char mappings[] = {'0', '1', '2', '3', '0', '1', '2', '0', '0',\n // the input string followed by a phonetic code. Characters that are not alphabetic are\n // ignored. If expression evaluates to the null value, null is returned.\n //\n-// The soundex algorith works with the following steps:\n+// The soundex algorithm works with the following steps:\n //    1. Retain the first letter of the string and drop all other occurrences of a, e, i,\n-//    o, u, y, h, w.\n+//    o, u, y, h, w. (let's call them special letters)\n //    2. Replace consonants with digits as follows (after the first letter):\n //        b, f, p, v \u2192 1\n //        c, g, j, k, q, s, x, z \u2192 2\n //        d, t \u2192 3\n //        l \u2192 4\n //        m, n \u2192 5\n //        r \u2192 6\n-//    3. If two or more letters with the same number are adjacent in the original name\n-//    (before step 1), only retain the first letter; also two letters with the same number\n-//    separated by 'h' or 'w' are coded as a single number, whereas such letters separated\n-//    by a vowel are coded twice. This rule also applies to the first letter.\n+//    3. If two or more letters with the same number were adjacent in the original name\n+//    (before step 1), or adjacent for any intervening from any special letters, then omit\n\nReview Comment:\n   simply adjacent:  **BB** or **CC** or **DD**\r\n   adjacent with special intervening: **B**A**B**, **C**H**C**, **D**AAAAA**D**\r\n   \r\n   For any of these cases, the result is always B, C, D\n\n\n\n",
                    "created": "2022-04-14T10:54:17.384+0000",
                    "updated": "2022-04-14T10:54:17.384+0000",
                    "started": "2022-04-14T10:54:17.383+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "756922",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/756924",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on code in PR #12716:\nURL: https://github.com/apache/arrow/pull/12716#discussion_r850331184\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2815,43 +2814,62 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n   }\n \n   // The soundex code is composed by one letter and three numbers\n+  char* soundex = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, in_len));\n   char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n-  if (ret == nullptr) {\n+\n+  if (soundex == nullptr || ret == nullptr) {\n     gdv_fn_context_set_error_msg(ctx, \"Could not allocate memory for output string\");\n     *out_len = 0;\n     return \"\";\n   }\n \n   int si = 1;\n+  int ret_len = 1;\n   unsigned char c;\n \n   int start_idx = 0;\n   for (int i = 0; i < in_len; ++i) {\n     if (isalpha(in[i]) > 0) {\n+      // Retain the first letter\n       ret[0] = toupper(in[i]);\n       start_idx = i + 1;\n       break;\n     }\n   }\n \n-  for (int i = start_idx, l = in_len; i < l; i++) {\n+  soundex[0] = '\\0';\n+  // Replace consonants with digits and special letters with 0\n+  for (int i = start_idx; i < in_len; i++) {\n     if (isalpha(in[i]) > 0) {\n       c = toupper(in[i]) - 65;\n-      if (mappings[c] != '0') {\n-        if (mappings[c] != ret[si - 1]) {\n-          ret[si] = mappings[c];\n-          si++;\n-        }\n-\n-        if (si > 3) break;\n+      if (mappings[c] != soundex[si - 1]) {\n+        soundex[si] = mappings[c];\n+        si++;\n       }\n     }\n   }\n \n-  if (si <= 3) {\n-    while (si <= 3) {\n-      ret[si] = '0';\n-      si++;\n+  int i = 1;\n+  // If the saved letter's digit is the same as the resulting first digit, remove the\n+  // digit.\n+  if (soundex[i] == mappings[ret[0] - 65]) {\n\nReview Comment:\n   > You have to handle the case where ret[0] is not initialised.. for e.g. the input is '123456' - since there are no alphabets, ret[0] will not be initialised\r\n   > \r\n   > Similarly, you have to handle the case where soundex[1] is not set..\r\n   \r\n   About the soundex[1];\r\n   If ret[0] is valid, we don't need handle with this case\n\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops_test.cc:\n##########\n@@ -2310,12 +2310,49 @@ TEST(TestStringOps, TestFromHex) {\n       ::testing::HasSubstr(\"Error parsing hex string, one or more bytes are not valid.\"));\n   ctx.Reset();\n }\n+\n TEST(TestStringOps, TestSoundex) {\n   gandiva::ExecutionContext ctx;\n   auto ctx_ptr = reinterpret_cast<int64_t>(&ctx);\n   int32_t out_len = 0;\n   const char* out;\n \n+  out = soundex_utf8(ctx_ptr, \"robert\", 6, &out_len);\n\nReview Comment:\n   Done\n\n\n\n",
                    "created": "2022-04-14T10:59:32.808+0000",
                    "updated": "2022-04-14T10:59:32.808+0000",
                    "started": "2022-04-14T10:59:32.808+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "756924",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/756933",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on code in PR #12716:\nURL: https://github.com/apache/arrow/pull/12716#discussion_r850339691\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2815,45 +2814,71 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n   }\n \n   // The soundex code is composed by one letter and three numbers\n+  char* soundex = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, in_len));\n   char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n-  if (ret == nullptr) {\n+\n+  if (soundex == nullptr || ret == nullptr) {\n     gdv_fn_context_set_error_msg(ctx, \"Could not allocate memory for output string\");\n     *out_len = 0;\n     return \"\";\n   }\n \n   int si = 1;\n+  int ret_len = 1;\n   unsigned char c;\n \n   int start_idx = 0;\n   for (int i = 0; i < in_len; ++i) {\n     if (isalpha(in[i]) > 0) {\n+      // Retain the first letter\n       ret[0] = toupper(in[i]);\n       start_idx = i + 1;\n       break;\n     }\n   }\n \n-  for (int i = start_idx, l = in_len; i < l; i++) {\n+  // If ret[0] is not initialised, return one exception\n+  if (start_idx == 0) {\n\nReview Comment:\n   Shouldn't this return '0000' instead?\n\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2815,45 +2814,71 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n   }\n \n   // The soundex code is composed by one letter and three numbers\n+  char* soundex = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, in_len));\n   char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n-  if (ret == nullptr) {\n+\n+  if (soundex == nullptr || ret == nullptr) {\n     gdv_fn_context_set_error_msg(ctx, \"Could not allocate memory for output string\");\n     *out_len = 0;\n     return \"\";\n   }\n \n   int si = 1;\n+  int ret_len = 1;\n   unsigned char c;\n \n   int start_idx = 0;\n   for (int i = 0; i < in_len; ++i) {\n     if (isalpha(in[i]) > 0) {\n+      // Retain the first letter\n       ret[0] = toupper(in[i]);\n       start_idx = i + 1;\n       break;\n     }\n   }\n \n-  for (int i = start_idx, l = in_len; i < l; i++) {\n+  // If ret[0] is not initialised, return one exception\n+  if (start_idx == 0) {\n+    gdv_fn_context_set_error_msg(ctx, \"There are no valid values in this entry.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  soundex[0] = '\\0';\n+  // Replace consonants with digits and special letters with 0\n+  for (int i = start_idx; i < in_len; i++) {\n     if (isalpha(in[i]) > 0) {\n       c = toupper(in[i]) - 65;\n-      if (mappings[c] != '0') {\n-        if (mappings[c] != ret[si - 1]) {\n-          ret[si] = mappings[c];\n-          si++;\n-        }\n-\n-        if (si > 3) break;\n+      if (mappings[c] != soundex[si - 1]) {\n+        soundex[si] = mappings[c];\n+        si++;\n       }\n     }\n   }\n \n-  if (si <= 3) {\n-    while (si <= 3) {\n-      ret[si] = '0';\n-      si++;\n+  int i = 1;\n+  // If the saved letter's digit is the same as the resulting first digit, skip it\n+  if (soundex[1] == mappings[ret[0] - 65]) {\n\nReview Comment:\n   What if si = 1? soundex[1] will access an uninitialised variable - you need to handle this and append the remaining 0s and return\n\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2789,20 +2789,19 @@ static char mappings[] = {'0', '1', '2', '3', '0', '1', '2', '0', '0',\n // the input string followed by a phonetic code. Characters that are not alphabetic are\n // ignored. If expression evaluates to the null value, null is returned.\n //\n-// The soundex algorith works with the following steps:\n+// The soundex algorithm works with the following steps:\n //    1. Retain the first letter of the string and drop all other occurrences of a, e, i,\n-//    o, u, y, h, w.\n+//    o, u, y, h, w. (let's call them special letters)\n //    2. Replace consonants with digits as follows (after the first letter):\n //        b, f, p, v \u2192 1\n //        c, g, j, k, q, s, x, z \u2192 2\n //        d, t \u2192 3\n //        l \u2192 4\n //        m, n \u2192 5\n //        r \u2192 6\n-//    3. If two or more letters with the same number are adjacent in the original name\n-//    (before step 1), only retain the first letter; also two letters with the same number\n-//    separated by 'h' or 'w' are coded as a single number, whereas such letters separated\n-//    by a vowel are coded twice. This rule also applies to the first letter.\n+//    3. If two or more letters with the same number were adjacent in the original name\n+//    (before step 1), or adjacent for any intervening from any special letters, then omit\n\nReview Comment:\n   Do we have a test case for DAAAAD returning D000? I dont see the code behaving that way\n\n\n\n",
                    "created": "2022-04-14T11:18:49.625+0000",
                    "updated": "2022-04-14T11:18:49.625+0000",
                    "started": "2022-04-14T11:18:49.625+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "756933",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/756963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on code in PR #12716:\nURL: https://github.com/apache/arrow/pull/12716#discussion_r850448876\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2789,20 +2789,19 @@ static char mappings[] = {'0', '1', '2', '3', '0', '1', '2', '0', '0',\n // the input string followed by a phonetic code. Characters that are not alphabetic are\n // ignored. If expression evaluates to the null value, null is returned.\n //\n-// The soundex algorith works with the following steps:\n+// The soundex algorithm works with the following steps:\n //    1. Retain the first letter of the string and drop all other occurrences of a, e, i,\n-//    o, u, y, h, w.\n+//    o, u, y, h, w. (let's call them special letters)\n //    2. Replace consonants with digits as follows (after the first letter):\n //        b, f, p, v \u2192 1\n //        c, g, j, k, q, s, x, z \u2192 2\n //        d, t \u2192 3\n //        l \u2192 4\n //        m, n \u2192 5\n //        r \u2192 6\n-//    3. If two or more letters with the same number are adjacent in the original name\n-//    (before step 1), only retain the first letter; also two letters with the same number\n-//    separated by 'h' or 'w' are coded as a single number, whereas such letters separated\n-//    by a vowel are coded twice. This rule also applies to the first letter.\n+//    3. If two or more letters with the same number were adjacent in the original name\n+//    (before step 1), or adjacent for any intervening from any special letters, then omit\n\nReview Comment:\n   You right, i made a mistake, I changed the documentation thinking in intervening with H and W from MySQL. \r\n   Oracle remove only if is same number adjacent in original text, i removed this from documentation\r\n   \n\n\n\n",
                    "created": "2022-04-14T13:32:50.529+0000",
                    "updated": "2022-04-14T13:32:50.529+0000",
                    "started": "2022-04-14T13:32:50.529+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "756963",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/756964",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on code in PR #12716:\nURL: https://github.com/apache/arrow/pull/12716#discussion_r850451326\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2789,20 +2789,19 @@ static char mappings[] = {'0', '1', '2', '3', '0', '1', '2', '0', '0',\n // the input string followed by a phonetic code. Characters that are not alphabetic are\n // ignored. If expression evaluates to the null value, null is returned.\n //\n-// The soundex algorith works with the following steps:\n+// The soundex algorithm works with the following steps:\n //    1. Retain the first letter of the string and drop all other occurrences of a, e, i,\n-//    o, u, y, h, w.\n+//    o, u, y, h, w. (let's call them special letters)\n //    2. Replace consonants with digits as follows (after the first letter):\n //        b, f, p, v \u2192 1\n //        c, g, j, k, q, s, x, z \u2192 2\n //        d, t \u2192 3\n //        l \u2192 4\n //        m, n \u2192 5\n //        r \u2192 6\n-//    3. If two or more letters with the same number are adjacent in the original name\n-//    (before step 1), only retain the first letter; also two letters with the same number\n-//    separated by 'h' or 'w' are coded as a single number, whereas such letters separated\n-//    by a vowel are coded twice. This rule also applies to the first letter.\n+//    3. If two or more letters with the same number were adjacent in the original name\n+//    (before step 1), or adjacent for any intervening from any special letters, then omit\n\nReview Comment:\n   The mentioned above is only for intervening with **H** and **W** for **MySQL**, but **we'll don't following this example here**.\n\n\n\n",
                    "created": "2022-04-14T13:35:20.867+0000",
                    "updated": "2022-04-14T13:35:20.867+0000",
                    "started": "2022-04-14T13:35:20.867+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "756964",
                    "issueId": "13435863"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/worklog/757081",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ViniciusSouzaRoque commented on code in PR #12716:\nURL: https://github.com/apache/arrow/pull/12716#discussion_r850628289\n\n\n##########\ncpp/src/gandiva/precompiled/string_ops.cc:\n##########\n@@ -2815,45 +2814,71 @@ const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n   }\n \n   // The soundex code is composed by one letter and three numbers\n+  char* soundex = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, in_len));\n   char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n-  if (ret == nullptr) {\n+\n+  if (soundex == nullptr || ret == nullptr) {\n     gdv_fn_context_set_error_msg(ctx, \"Could not allocate memory for output string\");\n     *out_len = 0;\n     return \"\";\n   }\n \n   int si = 1;\n+  int ret_len = 1;\n   unsigned char c;\n \n   int start_idx = 0;\n   for (int i = 0; i < in_len; ++i) {\n     if (isalpha(in[i]) > 0) {\n+      // Retain the first letter\n       ret[0] = toupper(in[i]);\n       start_idx = i + 1;\n       break;\n     }\n   }\n \n-  for (int i = start_idx, l = in_len; i < l; i++) {\n+  // If ret[0] is not initialised, return one exception\n+  if (start_idx == 0) {\n\nReview Comment:\n   For Oracle this return null.\r\n   I seted the result to false validity in this case\r\n   \n\n\n\n",
                    "created": "2022-04-14T16:49:35.128+0000",
                    "updated": "2022-04-14T16:49:35.128+0000",
                    "started": "2022-04-14T16:49:35.127+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "757081",
                    "issueId": "13435863"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6dde4f22[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@23e6f311[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f3a5652[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7bd04edf[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6357ce0c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6b19911[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b04d753[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@425bc05a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f2151b3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@15d22a57[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@871d9f1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@143491b5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Apr 27 11:49:16 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-04-27T11:49:16.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16031/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-03-25T17:21:04.000+0000",
        "updated": "2022-05-02T15:21:28.000+0000",
        "timeoriginalestimate": null,
        "description": "Current Soundex Function presents errors in generating results for some specific cases, when we have a sequence of 2 equal numbers separated by 0 it ends up ignoring it, as it deletes the 0 before generating the entire Soundex\r\n\r\n*Example with errors:*\r\n\r\nAlice Ichabod\u00a0\u00a0 -> Correct return is {color:#00875a}*A422*{color} but the Soundex returned {color:#de350b}*A421*{color}\r\n\r\nLuke Garcia\u00a0\u00a0 \u00a0 \u00a0 -> Correct return is {color:#00875a}*L226*{color} but the Soundex returned\u00a0 {color:#de350b}*L262*{color}\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Fix Soundex errors generate",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435863/comment/17528746",
                    "id": "17528746",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "Issue resolved by pull request 12716\n[https://github.com/apache/arrow/pull/12716]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2022-04-27T11:49:16.153+0000",
                    "updated": "2022-04-27T11:49:16.153+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z10u3k:",
        "customfield_12314139": null
    }
}