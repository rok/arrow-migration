{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13427266",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266",
    "key": "ARROW-15617",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332532",
                "id": "12332532",
                "name": "Documentation"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 16800,
            "total": 16800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 16800,
            "total": 16800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15617/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 28,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/740967",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624\n\n\n   List and describe the environment variables which influence the behaviour of Arrow C++ at runtime.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-14T15:56:23.761+0000",
                    "updated": "2022-03-14T15:56:23.761+0000",
                    "started": "2022-03-14T15:56:23.761+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "740967",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/740969",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#discussion_r826117252\n\n\n\n##########\nFile path: docs/source/cpp/env_vars.rst\n##########\n@@ -0,0 +1,128 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+=====================\n+Environment Variables\n+=====================\n+\n+The following environment variables can be used to affect the behavior of\n+Arrow C++ at runtime.  Many of these variables are inspected only once per\n+process (for example, when the Arrow C++ DLL is loaded), so you cannot assume\n+that changing their value later will have an effect.\n+\n+.. envvar:: ARROW_DEBUG_MEMORY_POOL\n+\n+   Enable rudimentary memory checks to guard against buffer overflows.\n+   The value of this environment variable selects the behavior when a\n+   buffer overflow is detected:\n+\n+   - ``abort`` exits the processus with a non-zero return value;\n+   - ``trap`` issues a platform-specific debugger breakpoint / trap instruction;\n+   - ``warn`` prints a warning on stderr and continues execution;\n+   - an empty value disables memory checks.\n+\n+   .. note::\n+      While this functionality can be useful and has little overhead, it\n+      is not a replacement for more sophisticated memory checking utilities\n+      such as `Valgrind <https://valgrind.org/>`_ or\n+      `Address Sanitizer <https://clang.llvm.org/docs/AddressSanitizer.html>`_.\n+\n+.. envvar:: ARROW_DEFAULT_MEMORY_POOL\n+\n+   The backend to be used for the default :ref:`memory pool <cpp_memory_pool>`.\n+   Possible values are among ``jemalloc``, ``mimalloc`` and ``system``,\n+   depending on which backends were enabled when\n+   :ref:`building Arrow C++ <building-arrow-cpp>`.\n+\n+.. envvar:: ARROW_LIBHDFS_DIR\n+\n+   The directory containing the C HDFS library (``hdfs.dll`` on Windows,\n+   ``libhdfs.dylib`` on macOS, ``libhdfs.so`` on other platforms).\n+   Alternatively, one can set :envvar:`HADOOP_HOME`.\n+\n+.. envvar:: ARROW_TRACING_BACKEND\n+\n+   The backend where to export `OpenTelemetry <https://opentelemetry.io/>`_-based\n+   execution traces.  Possible values are:\n+\n+   - ``ostream``: emit textual log messages to stdout;\n+   - ``otlp_http``: emit JSON traces to a HTTP server (by default, the endpoint\n+     URL is \"http://localhost:4318/v1/traces\");\n+   - ``arrow_otlp_stdout``: emit JSON traces to stdout;\n+   - ``arrow_otlp_stderr``: emit JSON traces to stderr.\n+\n+   This environment variable has no effect if Arrow C++ was not built with\n+   tracing enabled.\n+\n+   .. seealso::\n+\n+      `OpenTelemetry configuration for remote endpoints\n+      <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md>`__\n+\n+.. envvar:: ARROW_USER_SIMD_LEVEL\n+\n+   The SIMD optimization level to select.  By default, Arrow C++ detects\n+   the capabilities of the current CPU at runtime and chooses the best\n+   execution paths based on that information.  One can override the detection\n+   by setting this environment variable to a well-defined value.\n+   Supported values are:\n+\n+   - ``NONE`` disables any runtime-selected SIMD optimization;\n+   - ``SSE4.2`` enables any SSE2-based optimizations until SSE4.2 (included);\n+   - ``AVX`` enables any AVX-based optimizations and earlier;\n+   - ``AVX2`` enables any AVX2-based optimizations and earlier;\n+   - ``AVX512`` enables any AVX512-based optimizations and earlier.\n+\n+   This environment variable only has an effect on x86 platforms.  Other\n+   platforms currently do not implement any form of runtime dispatch.\n+\n+   .. note::\n+      In addition to runtime dispatch, the compile-time SIMD level can\n+      be set using the ``ARROW_SIMD_LEVEL`` CMake configuration variable.\n+      Unlike runtime dispatch, compile-time SIMD optimizations cannot be\n+      changed at runtime (for example, if you compile Arrow C++ with AVX512\n+      enabled, the resulting binary will only run on AVX512-enabled CPUs).\n+\n+.. envvar:: GANDIVA_CACHE_SIZE\n+\n+   The number of entries to keep in the Gandiva JIT compilation cache.\n+   The cache is in-memory and does not persist accross processes.\n+\n+.. envvar:: HADOOP_HOME\n+\n+   The path to the Hadoop installation.\n+\n+.. envvar:: JAVA_HOME\n+\n+   The path to the Java Runtime Environment installation.  This may be\n+   required for HDFS support if Java is installed in a non-standard location.\n+\n+.. envvar:: OMP_NUM_THREADS\n+\n+   The number of worker threads in the global (process-wide) CPU thread pool.\n+   If this environment variable is not defined, the available hardware\n+   concurrency is determined using a platform-specific routine.\n\nReview comment:\n       @westonpace I notice the IO thread pool size cannot be influenced for now, unless I'm mistaken. Is this something we'd like to make configurable?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-14T15:58:13.466+0000",
                    "updated": "2022-03-14T15:58:13.466+0000",
                    "started": "2022-03-14T15:58:13.466+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "740969",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/740970",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#discussion_r826117777\n\n\n\n##########\nFile path: docs/source/cpp/env_vars.rst\n##########\n@@ -0,0 +1,128 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+=====================\n+Environment Variables\n+=====================\n+\n+The following environment variables can be used to affect the behavior of\n+Arrow C++ at runtime.  Many of these variables are inspected only once per\n+process (for example, when the Arrow C++ DLL is loaded), so you cannot assume\n+that changing their value later will have an effect.\n+\n+.. envvar:: ARROW_DEBUG_MEMORY_POOL\n+\n+   Enable rudimentary memory checks to guard against buffer overflows.\n+   The value of this environment variable selects the behavior when a\n+   buffer overflow is detected:\n+\n+   - ``abort`` exits the processus with a non-zero return value;\n+   - ``trap`` issues a platform-specific debugger breakpoint / trap instruction;\n+   - ``warn`` prints a warning on stderr and continues execution;\n+   - an empty value disables memory checks.\n+\n+   .. note::\n+      While this functionality can be useful and has little overhead, it\n+      is not a replacement for more sophisticated memory checking utilities\n+      such as `Valgrind <https://valgrind.org/>`_ or\n+      `Address Sanitizer <https://clang.llvm.org/docs/AddressSanitizer.html>`_.\n+\n+.. envvar:: ARROW_DEFAULT_MEMORY_POOL\n+\n+   The backend to be used for the default :ref:`memory pool <cpp_memory_pool>`.\n+   Possible values are among ``jemalloc``, ``mimalloc`` and ``system``,\n+   depending on which backends were enabled when\n+   :ref:`building Arrow C++ <building-arrow-cpp>`.\n+\n+.. envvar:: ARROW_LIBHDFS_DIR\n+\n+   The directory containing the C HDFS library (``hdfs.dll`` on Windows,\n+   ``libhdfs.dylib`` on macOS, ``libhdfs.so`` on other platforms).\n+   Alternatively, one can set :envvar:`HADOOP_HOME`.\n+\n+.. envvar:: ARROW_TRACING_BACKEND\n+\n+   The backend where to export `OpenTelemetry <https://opentelemetry.io/>`_-based\n+   execution traces.  Possible values are:\n+\n+   - ``ostream``: emit textual log messages to stdout;\n\nReview comment:\n       @lidavidm It seems once cannot choose between stdout/stderr?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-14T15:58:35.986+0000",
                    "updated": "2022-03-14T15:58:35.986+0000",
                    "started": "2022-03-14T15:58:35.986+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "740970",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/740973",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#discussion_r826119248\n\n\n\n##########\nFile path: docs/source/cpp/env_vars.rst\n##########\n@@ -0,0 +1,128 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+=====================\n+Environment Variables\n+=====================\n+\n+The following environment variables can be used to affect the behavior of\n+Arrow C++ at runtime.  Many of these variables are inspected only once per\n+process (for example, when the Arrow C++ DLL is loaded), so you cannot assume\n+that changing their value later will have an effect.\n+\n+.. envvar:: ARROW_DEBUG_MEMORY_POOL\n+\n+   Enable rudimentary memory checks to guard against buffer overflows.\n+   The value of this environment variable selects the behavior when a\n+   buffer overflow is detected:\n+\n+   - ``abort`` exits the processus with a non-zero return value;\n+   - ``trap`` issues a platform-specific debugger breakpoint / trap instruction;\n+   - ``warn`` prints a warning on stderr and continues execution;\n+   - an empty value disables memory checks.\n+\n+   .. note::\n+      While this functionality can be useful and has little overhead, it\n+      is not a replacement for more sophisticated memory checking utilities\n+      such as `Valgrind <https://valgrind.org/>`_ or\n+      `Address Sanitizer <https://clang.llvm.org/docs/AddressSanitizer.html>`_.\n+\n+.. envvar:: ARROW_DEFAULT_MEMORY_POOL\n+\n+   The backend to be used for the default :ref:`memory pool <cpp_memory_pool>`.\n+   Possible values are among ``jemalloc``, ``mimalloc`` and ``system``,\n+   depending on which backends were enabled when\n+   :ref:`building Arrow C++ <building-arrow-cpp>`.\n+\n+.. envvar:: ARROW_LIBHDFS_DIR\n+\n+   The directory containing the C HDFS library (``hdfs.dll`` on Windows,\n+   ``libhdfs.dylib`` on macOS, ``libhdfs.so`` on other platforms).\n+   Alternatively, one can set :envvar:`HADOOP_HOME`.\n+\n+.. envvar:: ARROW_TRACING_BACKEND\n+\n+   The backend where to export `OpenTelemetry <https://opentelemetry.io/>`_-based\n+   execution traces.  Possible values are:\n+\n+   - ``ostream``: emit textual log messages to stdout;\n\nReview comment:\n       We can add `ostream_stdout` and `ostream_stderr` then\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-14T16:00:06.285+0000",
                    "updated": "2022-03-14T16:00:06.285+0000",
                    "started": "2022-03-14T16:00:06.285+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "740973",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/740978",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#discussion_r826121766\n\n\n\n##########\nFile path: docs/source/cpp/env_vars.rst\n##########\n@@ -0,0 +1,128 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+=====================\n+Environment Variables\n+=====================\n+\n+The following environment variables can be used to affect the behavior of\n+Arrow C++ at runtime.  Many of these variables are inspected only once per\n+process (for example, when the Arrow C++ DLL is loaded), so you cannot assume\n+that changing their value later will have an effect.\n+\n+.. envvar:: ARROW_DEBUG_MEMORY_POOL\n+\n+   Enable rudimentary memory checks to guard against buffer overflows.\n+   The value of this environment variable selects the behavior when a\n+   buffer overflow is detected:\n+\n+   - ``abort`` exits the processus with a non-zero return value;\n+   - ``trap`` issues a platform-specific debugger breakpoint / trap instruction;\n+   - ``warn`` prints a warning on stderr and continues execution;\n+   - an empty value disables memory checks.\n+\n+   .. note::\n+      While this functionality can be useful and has little overhead, it\n+      is not a replacement for more sophisticated memory checking utilities\n+      such as `Valgrind <https://valgrind.org/>`_ or\n+      `Address Sanitizer <https://clang.llvm.org/docs/AddressSanitizer.html>`_.\n+\n+.. envvar:: ARROW_DEFAULT_MEMORY_POOL\n+\n+   The backend to be used for the default :ref:`memory pool <cpp_memory_pool>`.\n+   Possible values are among ``jemalloc``, ``mimalloc`` and ``system``,\n+   depending on which backends were enabled when\n+   :ref:`building Arrow C++ <building-arrow-cpp>`.\n+\n+.. envvar:: ARROW_LIBHDFS_DIR\n+\n+   The directory containing the C HDFS library (``hdfs.dll`` on Windows,\n+   ``libhdfs.dylib`` on macOS, ``libhdfs.so`` on other platforms).\n+   Alternatively, one can set :envvar:`HADOOP_HOME`.\n+\n+.. envvar:: ARROW_TRACING_BACKEND\n+\n+   The backend where to export `OpenTelemetry <https://opentelemetry.io/>`_-based\n+   execution traces.  Possible values are:\n+\n+   - ``ostream``: emit textual log messages to stdout;\n+   - ``otlp_http``: emit JSON traces to a HTTP server (by default, the endpoint\n+     URL is \"http://localhost:4318/v1/traces\");\n+   - ``arrow_otlp_stdout``: emit JSON traces to stdout;\n+   - ``arrow_otlp_stderr``: emit JSON traces to stderr.\n+\n+   This environment variable has no effect if Arrow C++ was not built with\n+   tracing enabled.\n+\n+   .. seealso::\n+\n+      `OpenTelemetry configuration for remote endpoints\n+      <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md>`__\n+\n+.. envvar:: ARROW_USER_SIMD_LEVEL\n+\n+   The SIMD optimization level to select.  By default, Arrow C++ detects\n+   the capabilities of the current CPU at runtime and chooses the best\n+   execution paths based on that information.  One can override the detection\n+   by setting this environment variable to a well-defined value.\n+   Supported values are:\n+\n+   - ``NONE`` disables any runtime-selected SIMD optimization;\n+   - ``SSE4.2`` enables any SSE2-based optimizations until SSE4.2 (included);\n+   - ``AVX`` enables any AVX-based optimizations and earlier;\n+   - ``AVX2`` enables any AVX2-based optimizations and earlier;\n+   - ``AVX512`` enables any AVX512-based optimizations and earlier.\n+\n+   This environment variable only has an effect on x86 platforms.  Other\n+   platforms currently do not implement any form of runtime dispatch.\n+\n+   .. note::\n+      In addition to runtime dispatch, the compile-time SIMD level can\n+      be set using the ``ARROW_SIMD_LEVEL`` CMake configuration variable.\n+      Unlike runtime dispatch, compile-time SIMD optimizations cannot be\n+      changed at runtime (for example, if you compile Arrow C++ with AVX512\n+      enabled, the resulting binary will only run on AVX512-enabled CPUs).\n+\n+.. envvar:: GANDIVA_CACHE_SIZE\n+\n+   The number of entries to keep in the Gandiva JIT compilation cache.\n+   The cache is in-memory and does not persist accross processes.\n+\n+.. envvar:: HADOOP_HOME\n+\n+   The path to the Hadoop installation.\n+\n+.. envvar:: JAVA_HOME\n+\n+   The path to the Java Runtime Environment installation.  This may be\n+   required for HDFS support if Java is installed in a non-standard location.\n+\n+.. envvar:: OMP_NUM_THREADS\n+\n+   The number of worker threads in the global (process-wide) CPU thread pool.\n+   If this environment variable is not defined, the available hardware\n+   concurrency is determined using a platform-specific routine.\n\nReview comment:\n       There is a function, though not an env var: https://github.com/apache/arrow/blob/5cb5afc40547b4f75739e31ff8632c71a10d3084/cpp/src/arrow/io/type_fwd.h#L46-L52\r\n   \r\n   Also, hmm. https://github.com/apache/arrow/blob/5cb5afc40547b4f75739e31ff8632c71a10d3084/r/src/threadpool.cpp#L51-L57\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-14T16:02:13.498+0000",
                    "updated": "2022-03-14T16:02:13.498+0000",
                    "started": "2022-03-14T16:02:13.498+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "740978",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/740981",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#discussion_r826122992\n\n\n\n##########\nFile path: docs/source/cpp/env_vars.rst\n##########\n@@ -0,0 +1,128 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+=====================\n+Environment Variables\n+=====================\n+\n+The following environment variables can be used to affect the behavior of\n+Arrow C++ at runtime.  Many of these variables are inspected only once per\n+process (for example, when the Arrow C++ DLL is loaded), so you cannot assume\n+that changing their value later will have an effect.\n+\n+.. envvar:: ARROW_DEBUG_MEMORY_POOL\n+\n+   Enable rudimentary memory checks to guard against buffer overflows.\n+   The value of this environment variable selects the behavior when a\n+   buffer overflow is detected:\n+\n+   - ``abort`` exits the processus with a non-zero return value;\n+   - ``trap`` issues a platform-specific debugger breakpoint / trap instruction;\n+   - ``warn`` prints a warning on stderr and continues execution;\n+   - an empty value disables memory checks.\n+\n+   .. note::\n+      While this functionality can be useful and has little overhead, it\n+      is not a replacement for more sophisticated memory checking utilities\n+      such as `Valgrind <https://valgrind.org/>`_ or\n+      `Address Sanitizer <https://clang.llvm.org/docs/AddressSanitizer.html>`_.\n+\n+.. envvar:: ARROW_DEFAULT_MEMORY_POOL\n+\n+   The backend to be used for the default :ref:`memory pool <cpp_memory_pool>`.\n+   Possible values are among ``jemalloc``, ``mimalloc`` and ``system``,\n+   depending on which backends were enabled when\n+   :ref:`building Arrow C++ <building-arrow-cpp>`.\n+\n+.. envvar:: ARROW_LIBHDFS_DIR\n+\n+   The directory containing the C HDFS library (``hdfs.dll`` on Windows,\n+   ``libhdfs.dylib`` on macOS, ``libhdfs.so`` on other platforms).\n+   Alternatively, one can set :envvar:`HADOOP_HOME`.\n+\n+.. envvar:: ARROW_TRACING_BACKEND\n+\n+   The backend where to export `OpenTelemetry <https://opentelemetry.io/>`_-based\n+   execution traces.  Possible values are:\n+\n+   - ``ostream``: emit textual log messages to stdout;\n+   - ``otlp_http``: emit JSON traces to a HTTP server (by default, the endpoint\n+     URL is \"http://localhost:4318/v1/traces\");\n+   - ``arrow_otlp_stdout``: emit JSON traces to stdout;\n+   - ``arrow_otlp_stderr``: emit JSON traces to stderr.\n+\n+   This environment variable has no effect if Arrow C++ was not built with\n+   tracing enabled.\n+\n+   .. seealso::\n+\n+      `OpenTelemetry configuration for remote endpoints\n+      <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md>`__\n+\n+.. envvar:: ARROW_USER_SIMD_LEVEL\n+\n+   The SIMD optimization level to select.  By default, Arrow C++ detects\n+   the capabilities of the current CPU at runtime and chooses the best\n+   execution paths based on that information.  One can override the detection\n+   by setting this environment variable to a well-defined value.\n+   Supported values are:\n+\n+   - ``NONE`` disables any runtime-selected SIMD optimization;\n+   - ``SSE4.2`` enables any SSE2-based optimizations until SSE4.2 (included);\n+   - ``AVX`` enables any AVX-based optimizations and earlier;\n+   - ``AVX2`` enables any AVX2-based optimizations and earlier;\n+   - ``AVX512`` enables any AVX512-based optimizations and earlier.\n+\n+   This environment variable only has an effect on x86 platforms.  Other\n+   platforms currently do not implement any form of runtime dispatch.\n+\n+   .. note::\n+      In addition to runtime dispatch, the compile-time SIMD level can\n+      be set using the ``ARROW_SIMD_LEVEL`` CMake configuration variable.\n+      Unlike runtime dispatch, compile-time SIMD optimizations cannot be\n+      changed at runtime (for example, if you compile Arrow C++ with AVX512\n+      enabled, the resulting binary will only run on AVX512-enabled CPUs).\n+\n+.. envvar:: GANDIVA_CACHE_SIZE\n+\n+   The number of entries to keep in the Gandiva JIT compilation cache.\n+   The cache is in-memory and does not persist accross processes.\n+\n+.. envvar:: HADOOP_HOME\n+\n+   The path to the Hadoop installation.\n+\n+.. envvar:: JAVA_HOME\n+\n+   The path to the Java Runtime Environment installation.  This may be\n+   required for HDFS support if Java is installed in a non-standard location.\n+\n+.. envvar:: OMP_NUM_THREADS\n+\n+   The number of worker threads in the global (process-wide) CPU thread pool.\n+   If this environment variable is not defined, the available hardware\n+   concurrency is determined using a platform-specific routine.\n\nReview comment:\n       :-D. Do you want to open a JIRA for ?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-14T16:03:21.115+0000",
                    "updated": "2022-03-14T16:03:21.115+0000",
                    "started": "2022-03-14T16:03:21.114+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "740981",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/740982",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#discussion_r826122992\n\n\n\n##########\nFile path: docs/source/cpp/env_vars.rst\n##########\n@@ -0,0 +1,128 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+=====================\n+Environment Variables\n+=====================\n+\n+The following environment variables can be used to affect the behavior of\n+Arrow C++ at runtime.  Many of these variables are inspected only once per\n+process (for example, when the Arrow C++ DLL is loaded), so you cannot assume\n+that changing their value later will have an effect.\n+\n+.. envvar:: ARROW_DEBUG_MEMORY_POOL\n+\n+   Enable rudimentary memory checks to guard against buffer overflows.\n+   The value of this environment variable selects the behavior when a\n+   buffer overflow is detected:\n+\n+   - ``abort`` exits the processus with a non-zero return value;\n+   - ``trap`` issues a platform-specific debugger breakpoint / trap instruction;\n+   - ``warn`` prints a warning on stderr and continues execution;\n+   - an empty value disables memory checks.\n+\n+   .. note::\n+      While this functionality can be useful and has little overhead, it\n+      is not a replacement for more sophisticated memory checking utilities\n+      such as `Valgrind <https://valgrind.org/>`_ or\n+      `Address Sanitizer <https://clang.llvm.org/docs/AddressSanitizer.html>`_.\n+\n+.. envvar:: ARROW_DEFAULT_MEMORY_POOL\n+\n+   The backend to be used for the default :ref:`memory pool <cpp_memory_pool>`.\n+   Possible values are among ``jemalloc``, ``mimalloc`` and ``system``,\n+   depending on which backends were enabled when\n+   :ref:`building Arrow C++ <building-arrow-cpp>`.\n+\n+.. envvar:: ARROW_LIBHDFS_DIR\n+\n+   The directory containing the C HDFS library (``hdfs.dll`` on Windows,\n+   ``libhdfs.dylib`` on macOS, ``libhdfs.so`` on other platforms).\n+   Alternatively, one can set :envvar:`HADOOP_HOME`.\n+\n+.. envvar:: ARROW_TRACING_BACKEND\n+\n+   The backend where to export `OpenTelemetry <https://opentelemetry.io/>`_-based\n+   execution traces.  Possible values are:\n+\n+   - ``ostream``: emit textual log messages to stdout;\n+   - ``otlp_http``: emit JSON traces to a HTTP server (by default, the endpoint\n+     URL is \"http://localhost:4318/v1/traces\");\n+   - ``arrow_otlp_stdout``: emit JSON traces to stdout;\n+   - ``arrow_otlp_stderr``: emit JSON traces to stderr.\n+\n+   This environment variable has no effect if Arrow C++ was not built with\n+   tracing enabled.\n+\n+   .. seealso::\n+\n+      `OpenTelemetry configuration for remote endpoints\n+      <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md>`__\n+\n+.. envvar:: ARROW_USER_SIMD_LEVEL\n+\n+   The SIMD optimization level to select.  By default, Arrow C++ detects\n+   the capabilities of the current CPU at runtime and chooses the best\n+   execution paths based on that information.  One can override the detection\n+   by setting this environment variable to a well-defined value.\n+   Supported values are:\n+\n+   - ``NONE`` disables any runtime-selected SIMD optimization;\n+   - ``SSE4.2`` enables any SSE2-based optimizations until SSE4.2 (included);\n+   - ``AVX`` enables any AVX-based optimizations and earlier;\n+   - ``AVX2`` enables any AVX2-based optimizations and earlier;\n+   - ``AVX512`` enables any AVX512-based optimizations and earlier.\n+\n+   This environment variable only has an effect on x86 platforms.  Other\n+   platforms currently do not implement any form of runtime dispatch.\n+\n+   .. note::\n+      In addition to runtime dispatch, the compile-time SIMD level can\n+      be set using the ``ARROW_SIMD_LEVEL`` CMake configuration variable.\n+      Unlike runtime dispatch, compile-time SIMD optimizations cannot be\n+      changed at runtime (for example, if you compile Arrow C++ with AVX512\n+      enabled, the resulting binary will only run on AVX512-enabled CPUs).\n+\n+.. envvar:: GANDIVA_CACHE_SIZE\n+\n+   The number of entries to keep in the Gandiva JIT compilation cache.\n+   The cache is in-memory and does not persist accross processes.\n+\n+.. envvar:: HADOOP_HOME\n+\n+   The path to the Hadoop installation.\n+\n+.. envvar:: JAVA_HOME\n+\n+   The path to the Java Runtime Environment installation.  This may be\n+   required for HDFS support if Java is installed in a non-standard location.\n+\n+.. envvar:: OMP_NUM_THREADS\n+\n+   The number of worker threads in the global (process-wide) CPU thread pool.\n+   If this environment variable is not defined, the available hardware\n+   concurrency is determined using a platform-specific routine.\n\nReview comment:\n       :-D. Do you want to open a JIRA for R?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-14T16:03:33.527+0000",
                    "updated": "2022-03-14T16:03:33.527+0000",
                    "started": "2022-03-14T16:03:33.527+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "740982",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/740983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#discussion_r826124063\n\n\n\n##########\nFile path: docs/source/cpp/env_vars.rst\n##########\n@@ -0,0 +1,128 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+=====================\n+Environment Variables\n+=====================\n+\n+The following environment variables can be used to affect the behavior of\n+Arrow C++ at runtime.  Many of these variables are inspected only once per\n+process (for example, when the Arrow C++ DLL is loaded), so you cannot assume\n+that changing their value later will have an effect.\n+\n+.. envvar:: ARROW_DEBUG_MEMORY_POOL\n+\n+   Enable rudimentary memory checks to guard against buffer overflows.\n+   The value of this environment variable selects the behavior when a\n+   buffer overflow is detected:\n+\n+   - ``abort`` exits the processus with a non-zero return value;\n+   - ``trap`` issues a platform-specific debugger breakpoint / trap instruction;\n+   - ``warn`` prints a warning on stderr and continues execution;\n+   - an empty value disables memory checks.\n+\n+   .. note::\n+      While this functionality can be useful and has little overhead, it\n+      is not a replacement for more sophisticated memory checking utilities\n+      such as `Valgrind <https://valgrind.org/>`_ or\n+      `Address Sanitizer <https://clang.llvm.org/docs/AddressSanitizer.html>`_.\n+\n+.. envvar:: ARROW_DEFAULT_MEMORY_POOL\n+\n+   The backend to be used for the default :ref:`memory pool <cpp_memory_pool>`.\n+   Possible values are among ``jemalloc``, ``mimalloc`` and ``system``,\n+   depending on which backends were enabled when\n+   :ref:`building Arrow C++ <building-arrow-cpp>`.\n+\n+.. envvar:: ARROW_LIBHDFS_DIR\n+\n+   The directory containing the C HDFS library (``hdfs.dll`` on Windows,\n+   ``libhdfs.dylib`` on macOS, ``libhdfs.so`` on other platforms).\n+   Alternatively, one can set :envvar:`HADOOP_HOME`.\n+\n+.. envvar:: ARROW_TRACING_BACKEND\n+\n+   The backend where to export `OpenTelemetry <https://opentelemetry.io/>`_-based\n+   execution traces.  Possible values are:\n+\n+   - ``ostream``: emit textual log messages to stdout;\n+   - ``otlp_http``: emit JSON traces to a HTTP server (by default, the endpoint\n+     URL is \"http://localhost:4318/v1/traces\");\n+   - ``arrow_otlp_stdout``: emit JSON traces to stdout;\n+   - ``arrow_otlp_stderr``: emit JSON traces to stderr.\n+\n+   This environment variable has no effect if Arrow C++ was not built with\n+   tracing enabled.\n+\n+   .. seealso::\n+\n+      `OpenTelemetry configuration for remote endpoints\n+      <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md>`__\n+\n+.. envvar:: ARROW_USER_SIMD_LEVEL\n+\n+   The SIMD optimization level to select.  By default, Arrow C++ detects\n+   the capabilities of the current CPU at runtime and chooses the best\n+   execution paths based on that information.  One can override the detection\n+   by setting this environment variable to a well-defined value.\n+   Supported values are:\n+\n+   - ``NONE`` disables any runtime-selected SIMD optimization;\n+   - ``SSE4.2`` enables any SSE2-based optimizations until SSE4.2 (included);\n+   - ``AVX`` enables any AVX-based optimizations and earlier;\n+   - ``AVX2`` enables any AVX2-based optimizations and earlier;\n+   - ``AVX512`` enables any AVX512-based optimizations and earlier.\n+\n+   This environment variable only has an effect on x86 platforms.  Other\n+   platforms currently do not implement any form of runtime dispatch.\n+\n+   .. note::\n+      In addition to runtime dispatch, the compile-time SIMD level can\n+      be set using the ``ARROW_SIMD_LEVEL`` CMake configuration variable.\n+      Unlike runtime dispatch, compile-time SIMD optimizations cannot be\n+      changed at runtime (for example, if you compile Arrow C++ with AVX512\n+      enabled, the resulting binary will only run on AVX512-enabled CPUs).\n+\n+.. envvar:: GANDIVA_CACHE_SIZE\n+\n+   The number of entries to keep in the Gandiva JIT compilation cache.\n+   The cache is in-memory and does not persist accross processes.\n+\n+.. envvar:: HADOOP_HOME\n+\n+   The path to the Hadoop installation.\n+\n+.. envvar:: JAVA_HOME\n+\n+   The path to the Java Runtime Environment installation.  This may be\n+   required for HDFS support if Java is installed in a non-standard location.\n+\n+.. envvar:: OMP_NUM_THREADS\n+\n+   The number of worker threads in the global (process-wide) CPU thread pool.\n+   If this environment variable is not defined, the available hardware\n+   concurrency is determined using a platform-specific routine.\n\nReview comment:\n       https://issues.apache.org/jira/browse/ARROW-15929\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-14T16:04:29.577+0000",
                    "updated": "2022-03-14T16:04:29.577+0000",
                    "started": "2022-03-14T16:04:29.577+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "740983",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/740985",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#discussion_r826125472\n\n\n\n##########\nFile path: docs/source/cpp/env_vars.rst\n##########\n@@ -0,0 +1,128 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+=====================\n+Environment Variables\n+=====================\n+\n+The following environment variables can be used to affect the behavior of\n+Arrow C++ at runtime.  Many of these variables are inspected only once per\n+process (for example, when the Arrow C++ DLL is loaded), so you cannot assume\n+that changing their value later will have an effect.\n+\n+.. envvar:: ARROW_DEBUG_MEMORY_POOL\n+\n+   Enable rudimentary memory checks to guard against buffer overflows.\n+   The value of this environment variable selects the behavior when a\n+   buffer overflow is detected:\n+\n+   - ``abort`` exits the processus with a non-zero return value;\n+   - ``trap`` issues a platform-specific debugger breakpoint / trap instruction;\n+   - ``warn`` prints a warning on stderr and continues execution;\n+   - an empty value disables memory checks.\n+\n+   .. note::\n+      While this functionality can be useful and has little overhead, it\n+      is not a replacement for more sophisticated memory checking utilities\n+      such as `Valgrind <https://valgrind.org/>`_ or\n+      `Address Sanitizer <https://clang.llvm.org/docs/AddressSanitizer.html>`_.\n+\n+.. envvar:: ARROW_DEFAULT_MEMORY_POOL\n+\n+   The backend to be used for the default :ref:`memory pool <cpp_memory_pool>`.\n+   Possible values are among ``jemalloc``, ``mimalloc`` and ``system``,\n+   depending on which backends were enabled when\n+   :ref:`building Arrow C++ <building-arrow-cpp>`.\n+\n+.. envvar:: ARROW_LIBHDFS_DIR\n+\n+   The directory containing the C HDFS library (``hdfs.dll`` on Windows,\n+   ``libhdfs.dylib`` on macOS, ``libhdfs.so`` on other platforms).\n+   Alternatively, one can set :envvar:`HADOOP_HOME`.\n+\n+.. envvar:: ARROW_TRACING_BACKEND\n+\n+   The backend where to export `OpenTelemetry <https://opentelemetry.io/>`_-based\n+   execution traces.  Possible values are:\n+\n+   - ``ostream``: emit textual log messages to stdout;\n\nReview comment:\n       https://issues.apache.org/jira/browse/ARROW-15930\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-14T16:05:38.333+0000",
                    "updated": "2022-03-14T16:05:38.333+0000",
                    "started": "2022-03-14T16:05:38.333+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "740985",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/741043",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#issuecomment-1067094428\n\n\n   https://issues.apache.org/jira/browse/ARROW-15617\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-14T17:28:23.159+0000",
                    "updated": "2022-03-14T17:28:23.159+0000",
                    "started": "2022-03-14T17:28:23.159+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "741043",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/741676",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#discussion_r827088337\n\n\n\n##########\nFile path: docs/source/cpp/env_vars.rst\n##########\n@@ -0,0 +1,128 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+=====================\n+Environment Variables\n+=====================\n+\n+The following environment variables can be used to affect the behavior of\n+Arrow C++ at runtime.  Many of these variables are inspected only once per\n+process (for example, when the Arrow C++ DLL is loaded), so you cannot assume\n+that changing their value later will have an effect.\n+\n+.. envvar:: ARROW_DEBUG_MEMORY_POOL\n+\n+   Enable rudimentary memory checks to guard against buffer overflows.\n+   The value of this environment variable selects the behavior when a\n+   buffer overflow is detected:\n+\n+   - ``abort`` exits the processus with a non-zero return value;\n+   - ``trap`` issues a platform-specific debugger breakpoint / trap instruction;\n+   - ``warn`` prints a warning on stderr and continues execution;\n+   - an empty value disables memory checks.\n+\n+   .. note::\n+      While this functionality can be useful and has little overhead, it\n+      is not a replacement for more sophisticated memory checking utilities\n+      such as `Valgrind <https://valgrind.org/>`_ or\n+      `Address Sanitizer <https://clang.llvm.org/docs/AddressSanitizer.html>`_.\n+\n+.. envvar:: ARROW_DEFAULT_MEMORY_POOL\n+\n+   The backend to be used for the default :ref:`memory pool <cpp_memory_pool>`.\n+   Possible values are among ``jemalloc``, ``mimalloc`` and ``system``,\n+   depending on which backends were enabled when\n+   :ref:`building Arrow C++ <building-arrow-cpp>`.\n+\n+.. envvar:: ARROW_LIBHDFS_DIR\n+\n+   The directory containing the C HDFS library (``hdfs.dll`` on Windows,\n+   ``libhdfs.dylib`` on macOS, ``libhdfs.so`` on other platforms).\n+   Alternatively, one can set :envvar:`HADOOP_HOME`.\n+\n+.. envvar:: ARROW_TRACING_BACKEND\n+\n+   The backend where to export `OpenTelemetry <https://opentelemetry.io/>`_-based\n+   execution traces.  Possible values are:\n+\n+   - ``ostream``: emit textual log messages to stdout;\n+   - ``otlp_http``: emit JSON traces to a HTTP server (by default, the endpoint\n+     URL is \"http://localhost:4318/v1/traces\");\n+   - ``arrow_otlp_stdout``: emit JSON traces to stdout;\n+   - ``arrow_otlp_stderr``: emit JSON traces to stderr.\n+\n+   This environment variable has no effect if Arrow C++ was not built with\n+   tracing enabled.\n+\n+   .. seealso::\n+\n+      `OpenTelemetry configuration for remote endpoints\n+      <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md>`__\n+\n+.. envvar:: ARROW_USER_SIMD_LEVEL\n+\n+   The SIMD optimization level to select.  By default, Arrow C++ detects\n+   the capabilities of the current CPU at runtime and chooses the best\n+   execution paths based on that information.  One can override the detection\n+   by setting this environment variable to a well-defined value.\n+   Supported values are:\n+\n+   - ``NONE`` disables any runtime-selected SIMD optimization;\n+   - ``SSE4.2`` enables any SSE2-based optimizations until SSE4.2 (included);\n+   - ``AVX`` enables any AVX-based optimizations and earlier;\n+   - ``AVX2`` enables any AVX2-based optimizations and earlier;\n+   - ``AVX512`` enables any AVX512-based optimizations and earlier.\n+\n+   This environment variable only has an effect on x86 platforms.  Other\n+   platforms currently do not implement any form of runtime dispatch.\n+\n+   .. note::\n+      In addition to runtime dispatch, the compile-time SIMD level can\n+      be set using the ``ARROW_SIMD_LEVEL`` CMake configuration variable.\n+      Unlike runtime dispatch, compile-time SIMD optimizations cannot be\n+      changed at runtime (for example, if you compile Arrow C++ with AVX512\n+      enabled, the resulting binary will only run on AVX512-enabled CPUs).\n+\n+.. envvar:: GANDIVA_CACHE_SIZE\n+\n+   The number of entries to keep in the Gandiva JIT compilation cache.\n+   The cache is in-memory and does not persist accross processes.\n+\n+.. envvar:: HADOOP_HOME\n+\n+   The path to the Hadoop installation.\n+\n+.. envvar:: JAVA_HOME\n+\n+   The path to the Java Runtime Environment installation.  This may be\n+   required for HDFS support if Java is installed in a non-standard location.\n+\n+.. envvar:: OMP_NUM_THREADS\n+\n+   The number of worker threads in the global (process-wide) CPU thread pool.\n+   If this environment variable is not defined, the available hardware\n+   concurrency is determined using a platform-specific routine.\n\nReview comment:\n       At the moment I think it is very important this is configurable.  So I am +1 on being able to expose this via an environment variable.  We have had at least one customer that was using S3 and benefited from setting this larger than the initial default.\r\n   \r\n   At some point though I think we want to move towards having I/O context / thread pools specific to the filesystem.  A single global default doesn't make a lot of sense when you might have a mix of local and remote workloads.  Even then I suppose we might still have a global default as a fallback in case the user doesn't specify anything.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-15T15:09:19.919+0000",
                    "updated": "2022-03-15T15:09:19.919+0000",
                    "started": "2022-03-15T15:09:19.919+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "741676",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/741683",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#discussion_r827089976\n\n\n\n##########\nFile path: docs/source/cpp/env_vars.rst\n##########\n@@ -0,0 +1,128 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+=====================\n+Environment Variables\n+=====================\n+\n+The following environment variables can be used to affect the behavior of\n+Arrow C++ at runtime.  Many of these variables are inspected only once per\n+process (for example, when the Arrow C++ DLL is loaded), so you cannot assume\n+that changing their value later will have an effect.\n+\n+.. envvar:: ARROW_DEBUG_MEMORY_POOL\n+\n+   Enable rudimentary memory checks to guard against buffer overflows.\n+   The value of this environment variable selects the behavior when a\n+   buffer overflow is detected:\n+\n+   - ``abort`` exits the processus with a non-zero return value;\n\nReview comment:\n       ```suggestion\r\n      - ``abort`` exits the process with a non-zero return value;\r\n   ```\n\n##########\nFile path: docs/source/cpp/env_vars.rst\n##########\n@@ -0,0 +1,128 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+=====================\n+Environment Variables\n+=====================\n+\n+The following environment variables can be used to affect the behavior of\n+Arrow C++ at runtime.  Many of these variables are inspected only once per\n+process (for example, when the Arrow C++ DLL is loaded), so you cannot assume\n+that changing their value later will have an effect.\n+\n+.. envvar:: ARROW_DEBUG_MEMORY_POOL\n+\n+   Enable rudimentary memory checks to guard against buffer overflows.\n+   The value of this environment variable selects the behavior when a\n+   buffer overflow is detected:\n+\n+   - ``abort`` exits the processus with a non-zero return value;\n+   - ``trap`` issues a platform-specific debugger breakpoint / trap instruction;\n+   - ``warn`` prints a warning on stderr and continues execution;\n+   - an empty value disables memory checks.\n+\n+   .. note::\n+      While this functionality can be useful and has little overhead, it\n+      is not a replacement for more sophisticated memory checking utilities\n+      such as `Valgrind <https://valgrind.org/>`_ or\n+      `Address Sanitizer <https://clang.llvm.org/docs/AddressSanitizer.html>`_.\n+\n+.. envvar:: ARROW_DEFAULT_MEMORY_POOL\n+\n+   The backend to be used for the default :ref:`memory pool <cpp_memory_pool>`.\n+   Possible values are among ``jemalloc``, ``mimalloc`` and ``system``,\n+   depending on which backends were enabled when\n+   :ref:`building Arrow C++ <building-arrow-cpp>`.\n+\n+.. envvar:: ARROW_LIBHDFS_DIR\n+\n+   The directory containing the C HDFS library (``hdfs.dll`` on Windows,\n+   ``libhdfs.dylib`` on macOS, ``libhdfs.so`` on other platforms).\n+   Alternatively, one can set :envvar:`HADOOP_HOME`.\n+\n+.. envvar:: ARROW_TRACING_BACKEND\n+\n+   The backend where to export `OpenTelemetry <https://opentelemetry.io/>`_-based\n\nReview comment:\n       ```suggestion\r\n      The backend used to export `OpenTelemetry <https://opentelemetry.io/>`_-based\r\n   ```\n\n##########\nFile path: docs/source/cpp/env_vars.rst\n##########\n@@ -0,0 +1,128 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+=====================\n+Environment Variables\n+=====================\n+\n+The following environment variables can be used to affect the behavior of\n+Arrow C++ at runtime.  Many of these variables are inspected only once per\n+process (for example, when the Arrow C++ DLL is loaded), so you cannot assume\n+that changing their value later will have an effect.\n+\n+.. envvar:: ARROW_DEBUG_MEMORY_POOL\n+\n+   Enable rudimentary memory checks to guard against buffer overflows.\n+   The value of this environment variable selects the behavior when a\n+   buffer overflow is detected:\n+\n+   - ``abort`` exits the processus with a non-zero return value;\n+   - ``trap`` issues a platform-specific debugger breakpoint / trap instruction;\n+   - ``warn`` prints a warning on stderr and continues execution;\n+   - an empty value disables memory checks.\n+\n+   .. note::\n+      While this functionality can be useful and has little overhead, it\n+      is not a replacement for more sophisticated memory checking utilities\n+      such as `Valgrind <https://valgrind.org/>`_ or\n+      `Address Sanitizer <https://clang.llvm.org/docs/AddressSanitizer.html>`_.\n+\n+.. envvar:: ARROW_DEFAULT_MEMORY_POOL\n+\n+   The backend to be used for the default :ref:`memory pool <cpp_memory_pool>`.\n+   Possible values are among ``jemalloc``, ``mimalloc`` and ``system``,\n+   depending on which backends were enabled when\n+   :ref:`building Arrow C++ <building-arrow-cpp>`.\n+\n+.. envvar:: ARROW_LIBHDFS_DIR\n+\n+   The directory containing the C HDFS library (``hdfs.dll`` on Windows,\n+   ``libhdfs.dylib`` on macOS, ``libhdfs.so`` on other platforms).\n+   Alternatively, one can set :envvar:`HADOOP_HOME`.\n+\n+.. envvar:: ARROW_TRACING_BACKEND\n+\n+   The backend where to export `OpenTelemetry <https://opentelemetry.io/>`_-based\n+   execution traces.  Possible values are:\n+\n+   - ``ostream``: emit textual log messages to stdout;\n+   - ``otlp_http``: emit JSON traces to a HTTP server (by default, the endpoint\n+     URL is \"http://localhost:4318/v1/traces\");\n+   - ``arrow_otlp_stdout``: emit JSON traces to stdout;\n+   - ``arrow_otlp_stderr``: emit JSON traces to stderr.\n+\n+   This environment variable has no effect if Arrow C++ was not built with\n+   tracing enabled.\n+\n+   .. seealso::\n+\n+      `OpenTelemetry configuration for remote endpoints\n+      <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md>`__\n+\n+.. envvar:: ARROW_USER_SIMD_LEVEL\n+\n+   The SIMD optimization level to select.  By default, Arrow C++ detects\n+   the capabilities of the current CPU at runtime and chooses the best\n+   execution paths based on that information.  One can override the detection\n+   by setting this environment variable to a well-defined value.\n+   Supported values are:\n+\n+   - ``NONE`` disables any runtime-selected SIMD optimization;\n+   - ``SSE4.2`` enables any SSE2-based optimizations until SSE4.2 (included);\n+   - ``AVX`` enables any AVX-based optimizations and earlier;\n+   - ``AVX2`` enables any AVX2-based optimizations and earlier;\n+   - ``AVX512`` enables any AVX512-based optimizations and earlier.\n+\n+   This environment variable only has an effect on x86 platforms.  Other\n+   platforms currently do not implement any form of runtime dispatch.\n+\n+   .. note::\n+      In addition to runtime dispatch, the compile-time SIMD level can\n+      be set using the ``ARROW_SIMD_LEVEL`` CMake configuration variable.\n+      Unlike runtime dispatch, compile-time SIMD optimizations cannot be\n+      changed at runtime (for example, if you compile Arrow C++ with AVX512\n+      enabled, the resulting binary will only run on AVX512-enabled CPUs).\n\nReview comment:\n       I'm not sure this fully explains the interplay between runtime and compile time settings.  Would the user ever specify `ARROW_SIMD_LEVEL` at build time and still use `ARROW_USER_SIMD_LEVEL` at runtime?  Or does `ARROW_USER_SIMD_LEVEL` only make sense if `ARROW_SIMD_LEVEL` was not specified.\n\n##########\nFile path: docs/source/cpp/env_vars.rst\n##########\n@@ -0,0 +1,128 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+=====================\n+Environment Variables\n+=====================\n+\n+The following environment variables can be used to affect the behavior of\n+Arrow C++ at runtime.  Many of these variables are inspected only once per\n+process (for example, when the Arrow C++ DLL is loaded), so you cannot assume\n+that changing their value later will have an effect.\n+\n+.. envvar:: ARROW_DEBUG_MEMORY_POOL\n+\n+   Enable rudimentary memory checks to guard against buffer overflows.\n+   The value of this environment variable selects the behavior when a\n+   buffer overflow is detected:\n+\n+   - ``abort`` exits the processus with a non-zero return value;\n+   - ``trap`` issues a platform-specific debugger breakpoint / trap instruction;\n+   - ``warn`` prints a warning on stderr and continues execution;\n+   - an empty value disables memory checks.\n+\n+   .. note::\n+      While this functionality can be useful and has little overhead, it\n+      is not a replacement for more sophisticated memory checking utilities\n+      such as `Valgrind <https://valgrind.org/>`_ or\n+      `Address Sanitizer <https://clang.llvm.org/docs/AddressSanitizer.html>`_.\n+\n+.. envvar:: ARROW_DEFAULT_MEMORY_POOL\n+\n+   The backend to be used for the default :ref:`memory pool <cpp_memory_pool>`.\n+   Possible values are among ``jemalloc``, ``mimalloc`` and ``system``,\n+   depending on which backends were enabled when\n+   :ref:`building Arrow C++ <building-arrow-cpp>`.\n+\n+.. envvar:: ARROW_LIBHDFS_DIR\n+\n+   The directory containing the C HDFS library (``hdfs.dll`` on Windows,\n+   ``libhdfs.dylib`` on macOS, ``libhdfs.so`` on other platforms).\n+   Alternatively, one can set :envvar:`HADOOP_HOME`.\n+\n+.. envvar:: ARROW_TRACING_BACKEND\n+\n+   The backend where to export `OpenTelemetry <https://opentelemetry.io/>`_-based\n+   execution traces.  Possible values are:\n+\n+   - ``ostream``: emit textual log messages to stdout;\n+   - ``otlp_http``: emit JSON traces to a HTTP server (by default, the endpoint\n+     URL is \"http://localhost:4318/v1/traces\");\n+   - ``arrow_otlp_stdout``: emit JSON traces to stdout;\n+   - ``arrow_otlp_stderr``: emit JSON traces to stderr.\n+\n+   This environment variable has no effect if Arrow C++ was not built with\n+   tracing enabled.\n+\n+   .. seealso::\n+\n+      `OpenTelemetry configuration for remote endpoints\n+      <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md>`__\n+\n+.. envvar:: ARROW_USER_SIMD_LEVEL\n+\n+   The SIMD optimization level to select.  By default, Arrow C++ detects\n+   the capabilities of the current CPU at runtime and chooses the best\n+   execution paths based on that information.  One can override the detection\n+   by setting this environment variable to a well-defined value.\n+   Supported values are:\n+\n+   - ``NONE`` disables any runtime-selected SIMD optimization;\n+   - ``SSE4.2`` enables any SSE2-based optimizations until SSE4.2 (included);\n+   - ``AVX`` enables any AVX-based optimizations and earlier;\n+   - ``AVX2`` enables any AVX2-based optimizations and earlier;\n+   - ``AVX512`` enables any AVX512-based optimizations and earlier.\n+\n+   This environment variable only has an effect on x86 platforms.  Other\n+   platforms currently do not implement any form of runtime dispatch.\n+\n+   .. note::\n+      In addition to runtime dispatch, the compile-time SIMD level can\n+      be set using the ``ARROW_SIMD_LEVEL`` CMake configuration variable.\n+      Unlike runtime dispatch, compile-time SIMD optimizations cannot be\n+      changed at runtime (for example, if you compile Arrow C++ with AVX512\n+      enabled, the resulting binary will only run on AVX512-enabled CPUs).\n+\n+.. envvar:: GANDIVA_CACHE_SIZE\n+\n+   The number of entries to keep in the Gandiva JIT compilation cache.\n+   The cache is in-memory and does not persist accross processes.\n\nReview comment:\n       Do we have any other Gandiva documentation that we can link to for more information?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-15T15:22:13.481+0000",
                    "updated": "2022-03-15T15:22:13.481+0000",
                    "started": "2022-03-15T15:22:13.480+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "741683",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/741700",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#discussion_r827131659\n\n\n\n##########\nFile path: docs/source/cpp/env_vars.rst\n##########\n@@ -0,0 +1,128 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+=====================\n+Environment Variables\n+=====================\n+\n+The following environment variables can be used to affect the behavior of\n+Arrow C++ at runtime.  Many of these variables are inspected only once per\n+process (for example, when the Arrow C++ DLL is loaded), so you cannot assume\n+that changing their value later will have an effect.\n+\n+.. envvar:: ARROW_DEBUG_MEMORY_POOL\n+\n+   Enable rudimentary memory checks to guard against buffer overflows.\n+   The value of this environment variable selects the behavior when a\n+   buffer overflow is detected:\n+\n+   - ``abort`` exits the processus with a non-zero return value;\n+   - ``trap`` issues a platform-specific debugger breakpoint / trap instruction;\n+   - ``warn`` prints a warning on stderr and continues execution;\n+   - an empty value disables memory checks.\n+\n+   .. note::\n+      While this functionality can be useful and has little overhead, it\n+      is not a replacement for more sophisticated memory checking utilities\n+      such as `Valgrind <https://valgrind.org/>`_ or\n+      `Address Sanitizer <https://clang.llvm.org/docs/AddressSanitizer.html>`_.\n+\n+.. envvar:: ARROW_DEFAULT_MEMORY_POOL\n+\n+   The backend to be used for the default :ref:`memory pool <cpp_memory_pool>`.\n+   Possible values are among ``jemalloc``, ``mimalloc`` and ``system``,\n+   depending on which backends were enabled when\n+   :ref:`building Arrow C++ <building-arrow-cpp>`.\n+\n+.. envvar:: ARROW_LIBHDFS_DIR\n+\n+   The directory containing the C HDFS library (``hdfs.dll`` on Windows,\n+   ``libhdfs.dylib`` on macOS, ``libhdfs.so`` on other platforms).\n+   Alternatively, one can set :envvar:`HADOOP_HOME`.\n+\n+.. envvar:: ARROW_TRACING_BACKEND\n+\n+   The backend where to export `OpenTelemetry <https://opentelemetry.io/>`_-based\n+   execution traces.  Possible values are:\n+\n+   - ``ostream``: emit textual log messages to stdout;\n+   - ``otlp_http``: emit JSON traces to a HTTP server (by default, the endpoint\n+     URL is \"http://localhost:4318/v1/traces\");\n+   - ``arrow_otlp_stdout``: emit JSON traces to stdout;\n+   - ``arrow_otlp_stderr``: emit JSON traces to stderr.\n+\n+   This environment variable has no effect if Arrow C++ was not built with\n+   tracing enabled.\n+\n+   .. seealso::\n+\n+      `OpenTelemetry configuration for remote endpoints\n+      <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md>`__\n+\n+.. envvar:: ARROW_USER_SIMD_LEVEL\n+\n+   The SIMD optimization level to select.  By default, Arrow C++ detects\n+   the capabilities of the current CPU at runtime and chooses the best\n+   execution paths based on that information.  One can override the detection\n+   by setting this environment variable to a well-defined value.\n+   Supported values are:\n+\n+   - ``NONE`` disables any runtime-selected SIMD optimization;\n+   - ``SSE4.2`` enables any SSE2-based optimizations until SSE4.2 (included);\n+   - ``AVX`` enables any AVX-based optimizations and earlier;\n+   - ``AVX2`` enables any AVX2-based optimizations and earlier;\n+   - ``AVX512`` enables any AVX512-based optimizations and earlier.\n+\n+   This environment variable only has an effect on x86 platforms.  Other\n+   platforms currently do not implement any form of runtime dispatch.\n+\n+   .. note::\n+      In addition to runtime dispatch, the compile-time SIMD level can\n+      be set using the ``ARROW_SIMD_LEVEL`` CMake configuration variable.\n+      Unlike runtime dispatch, compile-time SIMD optimizations cannot be\n+      changed at runtime (for example, if you compile Arrow C++ with AVX512\n+      enabled, the resulting binary will only run on AVX512-enabled CPUs).\n+\n+.. envvar:: GANDIVA_CACHE_SIZE\n+\n+   The number of entries to keep in the Gandiva JIT compilation cache.\n+   The cache is in-memory and does not persist accross processes.\n\nReview comment:\n       Unfortunately there's no user-facing documentation for Gandiva.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-15T15:46:45.456+0000",
                    "updated": "2022-03-15T15:46:45.456+0000",
                    "started": "2022-03-15T15:46:45.456+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "741700",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/741702",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#discussion_r827133513\n\n\n\n##########\nFile path: docs/source/cpp/env_vars.rst\n##########\n@@ -0,0 +1,128 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+=====================\n+Environment Variables\n+=====================\n+\n+The following environment variables can be used to affect the behavior of\n+Arrow C++ at runtime.  Many of these variables are inspected only once per\n+process (for example, when the Arrow C++ DLL is loaded), so you cannot assume\n+that changing their value later will have an effect.\n+\n+.. envvar:: ARROW_DEBUG_MEMORY_POOL\n+\n+   Enable rudimentary memory checks to guard against buffer overflows.\n+   The value of this environment variable selects the behavior when a\n+   buffer overflow is detected:\n+\n+   - ``abort`` exits the processus with a non-zero return value;\n+   - ``trap`` issues a platform-specific debugger breakpoint / trap instruction;\n+   - ``warn`` prints a warning on stderr and continues execution;\n+   - an empty value disables memory checks.\n+\n+   .. note::\n+      While this functionality can be useful and has little overhead, it\n+      is not a replacement for more sophisticated memory checking utilities\n+      such as `Valgrind <https://valgrind.org/>`_ or\n+      `Address Sanitizer <https://clang.llvm.org/docs/AddressSanitizer.html>`_.\n+\n+.. envvar:: ARROW_DEFAULT_MEMORY_POOL\n+\n+   The backend to be used for the default :ref:`memory pool <cpp_memory_pool>`.\n+   Possible values are among ``jemalloc``, ``mimalloc`` and ``system``,\n+   depending on which backends were enabled when\n+   :ref:`building Arrow C++ <building-arrow-cpp>`.\n+\n+.. envvar:: ARROW_LIBHDFS_DIR\n+\n+   The directory containing the C HDFS library (``hdfs.dll`` on Windows,\n+   ``libhdfs.dylib`` on macOS, ``libhdfs.so`` on other platforms).\n+   Alternatively, one can set :envvar:`HADOOP_HOME`.\n+\n+.. envvar:: ARROW_TRACING_BACKEND\n+\n+   The backend where to export `OpenTelemetry <https://opentelemetry.io/>`_-based\n+   execution traces.  Possible values are:\n+\n+   - ``ostream``: emit textual log messages to stdout;\n+   - ``otlp_http``: emit JSON traces to a HTTP server (by default, the endpoint\n+     URL is \"http://localhost:4318/v1/traces\");\n+   - ``arrow_otlp_stdout``: emit JSON traces to stdout;\n+   - ``arrow_otlp_stderr``: emit JSON traces to stderr.\n+\n+   This environment variable has no effect if Arrow C++ was not built with\n+   tracing enabled.\n+\n+   .. seealso::\n+\n+      `OpenTelemetry configuration for remote endpoints\n+      <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md>`__\n+\n+.. envvar:: ARROW_USER_SIMD_LEVEL\n+\n+   The SIMD optimization level to select.  By default, Arrow C++ detects\n+   the capabilities of the current CPU at runtime and chooses the best\n+   execution paths based on that information.  One can override the detection\n+   by setting this environment variable to a well-defined value.\n+   Supported values are:\n+\n+   - ``NONE`` disables any runtime-selected SIMD optimization;\n+   - ``SSE4.2`` enables any SSE2-based optimizations until SSE4.2 (included);\n+   - ``AVX`` enables any AVX-based optimizations and earlier;\n+   - ``AVX2`` enables any AVX2-based optimizations and earlier;\n+   - ``AVX512`` enables any AVX512-based optimizations and earlier.\n+\n+   This environment variable only has an effect on x86 platforms.  Other\n+   platforms currently do not implement any form of runtime dispatch.\n+\n+   .. note::\n+      In addition to runtime dispatch, the compile-time SIMD level can\n+      be set using the ``ARROW_SIMD_LEVEL`` CMake configuration variable.\n+      Unlike runtime dispatch, compile-time SIMD optimizations cannot be\n+      changed at runtime (for example, if you compile Arrow C++ with AVX512\n+      enabled, the resulting binary will only run on AVX512-enabled CPUs).\n\nReview comment:\n       `ARROW_SIMD_LEVEL` determines the compiler flags used when building Arrow C++, so it functions as a baseline for the CPU requirements. Even if you set `ARROW_USER_SIMD_LEVEL` to a lower value, the compile-time optimizations enabled by `ARROW_SIMD_LEVEL` will still drive the CPU requirements (hence the example in parentheses).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-15T15:48:11.123+0000",
                    "updated": "2022-03-15T15:48:11.123+0000",
                    "started": "2022-03-15T15:48:11.123+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "741702",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/741719",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#discussion_r827162822\n\n\n\n##########\nFile path: docs/source/cpp/env_vars.rst\n##########\n@@ -0,0 +1,128 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+=====================\n+Environment Variables\n+=====================\n+\n+The following environment variables can be used to affect the behavior of\n+Arrow C++ at runtime.  Many of these variables are inspected only once per\n+process (for example, when the Arrow C++ DLL is loaded), so you cannot assume\n+that changing their value later will have an effect.\n+\n+.. envvar:: ARROW_DEBUG_MEMORY_POOL\n+\n+   Enable rudimentary memory checks to guard against buffer overflows.\n+   The value of this environment variable selects the behavior when a\n+   buffer overflow is detected:\n+\n+   - ``abort`` exits the processus with a non-zero return value;\n+   - ``trap`` issues a platform-specific debugger breakpoint / trap instruction;\n+   - ``warn`` prints a warning on stderr and continues execution;\n+   - an empty value disables memory checks.\n+\n+   .. note::\n+      While this functionality can be useful and has little overhead, it\n+      is not a replacement for more sophisticated memory checking utilities\n+      such as `Valgrind <https://valgrind.org/>`_ or\n+      `Address Sanitizer <https://clang.llvm.org/docs/AddressSanitizer.html>`_.\n+\n+.. envvar:: ARROW_DEFAULT_MEMORY_POOL\n+\n+   The backend to be used for the default :ref:`memory pool <cpp_memory_pool>`.\n+   Possible values are among ``jemalloc``, ``mimalloc`` and ``system``,\n+   depending on which backends were enabled when\n+   :ref:`building Arrow C++ <building-arrow-cpp>`.\n+\n+.. envvar:: ARROW_LIBHDFS_DIR\n+\n+   The directory containing the C HDFS library (``hdfs.dll`` on Windows,\n+   ``libhdfs.dylib`` on macOS, ``libhdfs.so`` on other platforms).\n+   Alternatively, one can set :envvar:`HADOOP_HOME`.\n+\n+.. envvar:: ARROW_TRACING_BACKEND\n+\n+   The backend where to export `OpenTelemetry <https://opentelemetry.io/>`_-based\n+   execution traces.  Possible values are:\n+\n+   - ``ostream``: emit textual log messages to stdout;\n+   - ``otlp_http``: emit JSON traces to a HTTP server (by default, the endpoint\n+     URL is \"http://localhost:4318/v1/traces\");\n+   - ``arrow_otlp_stdout``: emit JSON traces to stdout;\n+   - ``arrow_otlp_stderr``: emit JSON traces to stderr.\n+\n+   This environment variable has no effect if Arrow C++ was not built with\n+   tracing enabled.\n+\n+   .. seealso::\n+\n+      `OpenTelemetry configuration for remote endpoints\n+      <https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md>`__\n+\n+.. envvar:: ARROW_USER_SIMD_LEVEL\n+\n+   The SIMD optimization level to select.  By default, Arrow C++ detects\n+   the capabilities of the current CPU at runtime and chooses the best\n+   execution paths based on that information.  One can override the detection\n+   by setting this environment variable to a well-defined value.\n+   Supported values are:\n+\n+   - ``NONE`` disables any runtime-selected SIMD optimization;\n+   - ``SSE4.2`` enables any SSE2-based optimizations until SSE4.2 (included);\n+   - ``AVX`` enables any AVX-based optimizations and earlier;\n+   - ``AVX2`` enables any AVX2-based optimizations and earlier;\n+   - ``AVX512`` enables any AVX512-based optimizations and earlier.\n+\n+   This environment variable only has an effect on x86 platforms.  Other\n+   platforms currently do not implement any form of runtime dispatch.\n+\n+   .. note::\n+      In addition to runtime dispatch, the compile-time SIMD level can\n+      be set using the ``ARROW_SIMD_LEVEL`` CMake configuration variable.\n+      Unlike runtime dispatch, compile-time SIMD optimizations cannot be\n+      changed at runtime (for example, if you compile Arrow C++ with AVX512\n+      enabled, the resulting binary will only run on AVX512-enabled CPUs).\n+\n+.. envvar:: GANDIVA_CACHE_SIZE\n+\n+   The number of entries to keep in the Gandiva JIT compilation cache.\n+   The cache is in-memory and does not persist accross processes.\n+\n+.. envvar:: HADOOP_HOME\n+\n+   The path to the Hadoop installation.\n+\n+.. envvar:: JAVA_HOME\n+\n+   The path to the Java Runtime Environment installation.  This may be\n+   required for HDFS support if Java is installed in a non-standard location.\n+\n+.. envvar:: OMP_NUM_THREADS\n+\n+   The number of worker threads in the global (process-wide) CPU thread pool.\n+   If this environment variable is not defined, the available hardware\n+   concurrency is determined using a platform-specific routine.\n\nReview comment:\n       Ok, I created https://issues.apache.org/jira/browse/ARROW-15941 for an IO thread pool environment variable.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-15T16:14:21.421+0000",
                    "updated": "2022-03-15T16:14:21.421+0000",
                    "started": "2022-03-15T16:14:21.420+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "741719",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/741724",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#issuecomment-1068184926\n\n\n   > These environment variables apply when running python, R, etc. as well. Do we want to add a small snippet referencing this page in the documentation for those languages as well?\r\n   \r\n   Ideally but I'm not sure where to put that. The Python docs don't have a natural place for it currently. As for the R docs, I'd rather leave this to the R developers.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-15T16:21:22.447+0000",
                    "updated": "2022-03-15T16:21:22.447+0000",
                    "started": "2022-03-15T16:21:22.446+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "741724",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/741738",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#issuecomment-1068217658\n\n\n   Ok, I added a dedicated PyArrow doc page about environment variables as well.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-15T16:51:18.081+0000",
                    "updated": "2022-03-15T16:51:18.081+0000",
                    "started": "2022-03-15T16:51:18.080+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "741738",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/741739",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#discussion_r827204151\n\n\n\n##########\nFile path: docs/source/python/env_vars.rst\n##########\n@@ -0,0 +1,63 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. currentmodule:: pyarrow\n+\n+=====================\n+Environment Variables\n+=====================\n+\n+The following environment variables can be used to affect the behavior of\n+PyArrow.\n+\n+.. envvar:: ARROW_HOME\n+\n+   The base path to the PyArrow installation.  This variable overrides the\n+   default computation of library paths in introspection functions such\n+   as :func:`get_library_dirs`.\n+\n+.. envvar:: ARROW_PRE_0_15_IPC_FORMAT\n+\n+   If this environment variable is set to a non-zero integer value, the PyArrow\n+   IPC writer will default to the pre-0.15 Arrow IPC format.\n+   This behavior can also be enabled using :attr:`IpcWriteOptions.use_legacy_format`.\n+\n+.. envvar:: ARROW_PRE_1_0_METADATA_VERSION\n+\n+   If this environment variable is set to a non-zero integer value, the PyArrow\n+   IPC writer will write V4 Arrow metadata (corresponding to pre-1.0 Arrow\n+   with an incompatible Union data layout).\n+   This behavior can also be enabled using :attr:`IpcWriteOptions.metadata_version`.\n+\n+.. envvar:: PKG_CONFIG\n+\n+   The path to the ``pkg-config`` executable.  This may be required for\n+   proper functioning of introspection functions such as\n+   :func:`get_library_dirs` if ``pkg-config`` is not available on the system\n+   ``PATH``.\n+\n+.. envvar:: PYARROW_IGNORE_TIMEZONE\n+\n+   By default, PyArrow propagates the timezone value when converting\n+   Arrow data to/from Python datetime objects. If this environment variable\n+   is set to a non-empty value, the timezone is not propagated.\n\nReview comment:\n       @jorisvandenbossche Does this seem accurate or do you want to suggest a better wording?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-15T16:52:32.059+0000",
                    "updated": "2022-03-15T16:52:32.059+0000",
                    "started": "2022-03-15T16:52:32.059+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "741739",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/742509",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-16T16:37:38.595+0000",
                    "updated": "2022-03-16T16:37:38.595+0000",
                    "started": "2022-03-16T16:37:38.595+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "742509",
                    "issueId": "13427266"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/worklog/742555",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #12624:\nURL: https://github.com/apache/arrow/pull/12624#issuecomment-1069325871\n\n\n   Benchmark runs are scheduled for baseline = 3eaa7dd0e8b3dabc5438203331f05e3e6c011e37 and contender = 40d8e7ebf24540d64fe502de601e5cebcfc89a08. 40d8e7ebf24540d64fe502de601e5cebcfc89a08 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/3faee5232cba42e98cf9b14db0ca91a2...e5daa0567b94433c8e63553b9b5cc4e3/)\n   [Scheduled] [test-mac-arm](https://conbench.ursa.dev/compare/runs/063b62469e614538b0df38221f85e8f2...8d79bb6452394c5cb3eaa9a60ff6fe1a/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/a997da7d595e4b2e945f967115596008...4943bed4d24346a4b91a5efed181c2f6/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/ff3cf4c8cb6b45c894cfba3fab4c72f2...a4732ad8194b45e5a4be1b166c8e2c9a/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-16T17:04:40.492+0000",
                    "updated": "2022-03-16T17:04:40.492+0000",
                    "started": "2022-03-16T17:04:40.491+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "742555",
                    "issueId": "13427266"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
            "id": "5",
            "description": "General wishlist item.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Wish",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 16800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@733f54fe[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@607b8c5f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77db9492[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4b7ef742[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a7995ca[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@31205b2b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1af43699[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@260c1662[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@708d00ac[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@43c7f495[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@783c528a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3ec5e4e9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 16800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Mar 16 16:21:49 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-03-16T16:21:49.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15617/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2022-02-08T18:24:19.000+0000",
        "updated": "2022-03-18T14:57:47.000+0000",
        "timeoriginalestimate": null,
        "description": "A number of environment variables can be used to influence how Arrow C++ runs. We should create a dedicated documentation page listing them.\r\n\r\nNote that Sphinx has a dedicated directive:\r\nhttps://www.sphinx-doc.org/en/master/usage/restructuredtext/domains.html#directive-envvar\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 16800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Doc][C++] Centralize documentation for environment variables",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427266/comment/17507705",
                    "id": "17507705",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 12624\n[https://github.com/apache/arrow/pull/12624]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-03-16T16:21:49.824+0000",
                    "updated": "2022-03-16T16:21:49.824+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0zdbk:",
        "customfield_12314139": null
    }
}