{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13236554",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13236554",
    "key": "ARROW-5451",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
            "name": "pravindra",
            "key": "pravindra",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
            },
            "displayName": "Pindikura Ravindra",
            "active": true,
            "timeZone": "Asia/Kolkata"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
            "name": "pravindra",
            "key": "pravindra",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
            },
            "displayName": "Pindikura Ravindra",
            "active": true,
            "timeZone": "Asia/Kolkata"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
            "name": "pravindra",
            "key": "pravindra",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
            },
            "displayName": "Pindikura Ravindra",
            "active": true,
            "timeZone": "Asia/Kolkata"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5451/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 11,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13236554/worklog/251194",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #4418: ARROW-5451: [WIP][C++][Gandiva] Support cast/round functions for decimal\nURL: https://github.com/apache/arrow/pull/4418\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-30T17:57:58.073+0000",
                    "updated": "2019-05-30T17:57:58.073+0000",
                    "started": "2019-05-30T17:57:58.073+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "251194",
                    "issueId": "13236554"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13236554/worklog/256645",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on issue #4418: ARROW-5451: [C++][Gandiva] Support cast/round functions for decimal\nURL: https://github.com/apache/arrow/pull/4418#issuecomment-500298669\n \n \n   @praveenbingo can you please review too ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-10T05:44:43.283+0000",
                    "updated": "2019-06-10T05:44:43.283+0000",
                    "started": "2019-06-10T05:44:43.283+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256645",
                    "issueId": "13236554"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13236554/worklog/256691",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #4418: ARROW-5451: [C++][Gandiva] Support cast/round functions for decimal\nURL: https://github.com/apache/arrow/pull/4418#discussion_r291888496\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/decimal_ops.cc\n ##########\n @@ -463,5 +465,242 @@ int32_t Compare(const BasicDecimalScalar128& x, const BasicDecimalScalar128& y)\n   }\n }\n \n+#define DECIMAL_OVERFLOW_IF(condition, overflow) \\\n+  do {                                           \\\n+    if (condition) {                             \\\n+      *overflow = true;                          \\\n+      return 0;                                  \\\n+    }                                            \\\n+  } while (0)\n+\n+static BasicDecimal128 GetMaxValue(int32_t precision) {\n+  return BasicDecimal128::GetScaleMultiplier(precision) - 1;\n+}\n+\n+// Compute the double scale multipliers once.\n+static std::array<double, DecimalTypeUtil::kMaxPrecision + 1> kDoubleScaleMultipliers =\n+    ([]() -> std::array<double, DecimalTypeUtil::kMaxPrecision + 1> {\n+      std::array<double, DecimalTypeUtil::kMaxPrecision + 1> values;\n+      values[0] = 1.0;\n+      for (int32_t idx = 1; idx <= DecimalTypeUtil::kMaxPrecision; idx++) {\n+        values[idx] = values[idx - 1] * 10;\n+      }\n+      return values;\n+    })();\n+\n+BasicDecimal128 FromDouble(double in, int32_t precision, int32_t scale, bool* overflow) {\n+  // Multiply decimal with the scale\n+  auto unscaled = in * kDoubleScaleMultipliers[scale];\n+  unscaled = std::round(unscaled);\n \n Review comment:\n   will the std functions handle 128 bytes..for eg. in case of casting double to 38,0 or something of that kind..\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-10T07:28:51.512+0000",
                    "updated": "2019-06-10T07:28:51.512+0000",
                    "started": "2019-06-10T07:28:51.512+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256691",
                    "issueId": "13236554"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13236554/worklog/256692",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #4418: ARROW-5451: [C++][Gandiva] Support cast/round functions for decimal\nURL: https://github.com/apache/arrow/pull/4418#discussion_r291887397\n \n \n\n ##########\n File path: cpp/src/gandiva/decimal_ir.cc\n ##########\n @@ -531,6 +586,94 @@ Status DecimalIR::AddFunctions(Engine* engine) {\n                                                llvm::ICmpInst::ICMP_SGT));\n   ARROW_RETURN_NOT_OK(decimal_ir->BuildCompare(\n       \"greater_than_or_equal_to_decimal128_decimal128\", llvm::ICmpInst::ICMP_SGE));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"abs_decimal128\", i128,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"ceil_decimal128\", i128,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"floor_decimal128\", i128,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"round_decimal128\", i128,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"round_decimal128_int32\", i128,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                           {\"round_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"truncate_decimal128\", i128,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"truncate_decimal128_int32\", i128,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                           {\"round_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"castDECIMAL_int64\", i128,\n+                                                       {\n+                                                           {\"value\", i64},\n+                                                           {\"out_precision\", i32},\n+                                                           {\"out_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"castDECIMAL_float64\", i128,\n+                                                       {\n+                                                           {\"value\", f64},\n+                                                           {\"out_precision\", i32},\n+                                                           {\"out_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"castDECIMAL_decimal128\", i128,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                           {\"out_precision\", i32},\n+                                                           {\"out_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"castBIGINT_decimal128\", i64,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"castFLOAT8_decimal128\", f64,\n \n Review comment:\n   I think we would also need\r\n   \r\n   a. Decimal to Float4\r\n   b. Float4 to Decimal\r\n   c. Int to decimals\r\n   d. String to Decimal\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-10T07:28:51.646+0000",
                    "updated": "2019-06-10T07:28:51.646+0000",
                    "started": "2019-06-10T07:28:51.645+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256692",
                    "issueId": "13236554"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13236554/worklog/256693",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #4418: ARROW-5451: [C++][Gandiva] Support cast/round functions for decimal\nURL: https://github.com/apache/arrow/pull/4418#discussion_r291888101\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/decimal_ops.cc\n ##########\n @@ -463,5 +465,242 @@ int32_t Compare(const BasicDecimalScalar128& x, const BasicDecimalScalar128& y)\n   }\n }\n \n+#define DECIMAL_OVERFLOW_IF(condition, overflow) \\\n+  do {                                           \\\n+    if (condition) {                             \\\n+      *overflow = true;                          \\\n+      return 0;                                  \\\n+    }                                            \\\n \n Review comment:\n   should we not set false otherwise..or is the caller expected to init to false?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-10T07:28:51.714+0000",
                    "updated": "2019-06-10T07:28:51.714+0000",
                    "started": "2019-06-10T07:28:51.713+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256693",
                    "issueId": "13236554"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13236554/worklog/256755",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #4418: ARROW-5451: [C++][Gandiva] Support cast/round functions for decimal\nURL: https://github.com/apache/arrow/pull/4418#discussion_r291939044\n \n \n\n ##########\n File path: cpp/src/gandiva/decimal_ir.cc\n ##########\n @@ -531,6 +586,94 @@ Status DecimalIR::AddFunctions(Engine* engine) {\n                                                llvm::ICmpInst::ICMP_SGT));\n   ARROW_RETURN_NOT_OK(decimal_ir->BuildCompare(\n       \"greater_than_or_equal_to_decimal128_decimal128\", llvm::ICmpInst::ICMP_SGE));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"abs_decimal128\", i128,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"ceil_decimal128\", i128,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"floor_decimal128\", i128,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"round_decimal128\", i128,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"round_decimal128_int32\", i128,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                           {\"round_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"truncate_decimal128\", i128,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"truncate_decimal128_int32\", i128,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                           {\"round_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"castDECIMAL_int64\", i128,\n+                                                       {\n+                                                           {\"value\", i64},\n+                                                           {\"out_precision\", i32},\n+                                                           {\"out_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"castDECIMAL_float64\", i128,\n+                                                       {\n+                                                           {\"value\", f64},\n+                                                           {\"out_precision\", i32},\n+                                                           {\"out_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"castDECIMAL_decimal128\", i128,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                           {\"out_precision\", i32},\n+                                                           {\"out_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"castBIGINT_decimal128\", i64,\n+                                                       {\n+                                                           {\"x_value\", i128},\n+                                                           {\"x_precision\", i32},\n+                                                           {\"x_scale\", i32},\n+                                                       }));\n+\n+  ARROW_RETURN_NOT_OK(decimal_ir->BuildDecimalFunction(\"castFLOAT8_decimal128\", f64,\n \n Review comment:\n   a, b, c should work with casts. i'll add support for the string ones in a different PR.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-10T09:21:50.894+0000",
                    "updated": "2019-06-10T09:21:50.894+0000",
                    "started": "2019-06-10T09:21:50.893+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256755",
                    "issueId": "13236554"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13236554/worklog/256758",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #4418: ARROW-5451: [C++][Gandiva] Support cast/round functions for decimal\nURL: https://github.com/apache/arrow/pull/4418#discussion_r291941141\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/decimal_ops.cc\n ##########\n @@ -463,5 +465,242 @@ int32_t Compare(const BasicDecimalScalar128& x, const BasicDecimalScalar128& y)\n   }\n }\n \n+#define DECIMAL_OVERFLOW_IF(condition, overflow) \\\n+  do {                                           \\\n+    if (condition) {                             \\\n+      *overflow = true;                          \\\n+      return 0;                                  \\\n+    }                                            \\\n \n Review comment:\n   we are currently not using the overflow flag in the caller - to be done as part of ARROW-4570. but going forward, I see this to be a single shared flag that is used across an entire batch, involving multiple expressions.\r\n   \r\n   so, flag being set means there was an overflow for atleast one record in atleast one expression. That'll likely be most optimal (rather than examining the flag and saving state for each record in each expression).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-10T09:28:00.365+0000",
                    "updated": "2019-06-10T09:28:00.365+0000",
                    "started": "2019-06-10T09:28:00.364+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256758",
                    "issueId": "13236554"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13236554/worklog/256761",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #4418: ARROW-5451: [C++][Gandiva] Support cast/round functions for decimal\nURL: https://github.com/apache/arrow/pull/4418#discussion_r291942865\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/decimal_ops.cc\n ##########\n @@ -463,5 +465,242 @@ int32_t Compare(const BasicDecimalScalar128& x, const BasicDecimalScalar128& y)\n   }\n }\n \n+#define DECIMAL_OVERFLOW_IF(condition, overflow) \\\n+  do {                                           \\\n+    if (condition) {                             \\\n+      *overflow = true;                          \\\n+      return 0;                                  \\\n+    }                                            \\\n+  } while (0)\n+\n+static BasicDecimal128 GetMaxValue(int32_t precision) {\n+  return BasicDecimal128::GetScaleMultiplier(precision) - 1;\n+}\n+\n+// Compute the double scale multipliers once.\n+static std::array<double, DecimalTypeUtil::kMaxPrecision + 1> kDoubleScaleMultipliers =\n+    ([]() -> std::array<double, DecimalTypeUtil::kMaxPrecision + 1> {\n+      std::array<double, DecimalTypeUtil::kMaxPrecision + 1> values;\n+      values[0] = 1.0;\n+      for (int32_t idx = 1; idx <= DecimalTypeUtil::kMaxPrecision; idx++) {\n+        values[idx] = values[idx - 1] * 10;\n+      }\n+      return values;\n+    })();\n+\n+BasicDecimal128 FromDouble(double in, int32_t precision, int32_t scale, bool* overflow) {\n+  // Multiply decimal with the scale\n+  auto unscaled = in * kDoubleScaleMultipliers[scale];\n+  unscaled = std::round(unscaled);\n \n Review comment:\n   double max is > 10^38 even though it uses only 64-bit. so, the round should still work.\r\n   \r\n   I also have a check after this - that the value of the double after the round should be >= input.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-10T09:33:29.148+0000",
                    "updated": "2019-06-10T09:33:29.148+0000",
                    "started": "2019-06-10T09:33:29.147+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256761",
                    "issueId": "13236554"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13236554/worklog/258393",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on issue #4418: ARROW-5451: [C++][Gandiva] Support cast/round functions for decimal\nURL: https://github.com/apache/arrow/pull/4418#issuecomment-501132310\n \n \n   > looks good..should we add a java test too..\r\n   \r\n   the PR has already become too big. I'll add java tests in a follow-up PR.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-12T06:00:08.122+0000",
                    "updated": "2019-06-12T06:00:08.122+0000",
                    "started": "2019-06-12T06:00:08.109+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "258393",
                    "issueId": "13236554"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13236554/worklog/258420",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4418: ARROW-5451: [C++][Gandiva] Support cast/round functions for decimal\nURL: https://github.com/apache/arrow/pull/4418#issuecomment-501141883\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4418?src=pr&el=h1) Report\n   > Merging [#4418](https://codecov.io/gh/apache/arrow/pull/4418?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/9c753c4e88cbc4f2881d0c10213e947c3b9adf0c?src=pr&el=desc) will **increase** coverage by `1.27%`.\n   > The diff coverage is `97.17%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4418/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4418?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4418      +/-   ##\n   ==========================================\n   + Coverage   88.29%   89.56%   +1.27%     \n   ==========================================\n     Files         847      535     -312     \n     Lines      104639    68346   -36293     \n     Branches     1253        0    -1253     \n   ==========================================\n   - Hits        92386    61217   -31169     \n   + Misses      12008     7129    -4879     \n   + Partials      245        0     -245\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4418?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/gandiva/decimal\\_ir.h](https://codecov.io/gh/apache/arrow/pull/4418/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2RlY2ltYWxfaXIuaA==) | `73.33% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/decimal\\_xlarge.cc](https://codecov.io/gh/apache/arrow/pull/4418/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2RlY2ltYWxfeGxhcmdlLmNj) | `96.4% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/decimal\\_ir.cc](https://codecov.io/gh/apache/arrow/pull/4418/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2RlY2ltYWxfaXIuY2M=) | `76.6% <100%> (+3.81%)` | :arrow_up: |\n   | [cpp/src/gandiva/tests/decimal\\_test.cc](https://codecov.io/gh/apache/arrow/pull/4418/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3Rlc3RzL2RlY2ltYWxfdGVzdC5jYw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/function\\_registry\\_arithmetic.cc](https://codecov.io/gh/apache/arrow/pull/4418/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX3JlZ2lzdHJ5X2FyaXRobWV0aWMuY2M=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/function\\_registry\\_math\\_ops.cc](https://codecov.io/gh/apache/arrow/pull/4418/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX3JlZ2lzdHJ5X21hdGhfb3BzLmNj) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/precompiled/decimal\\_ops\\_test.cc](https://codecov.io/gh/apache/arrow/pull/4418/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3ByZWNvbXBpbGVkL2RlY2ltYWxfb3BzX3Rlc3QuY2M=) | `97.44% <94.28%> (-1.88%)` | :arrow_down: |\n   | [cpp/src/gandiva/precompiled/decimal\\_ops.cc](https://codecov.io/gh/apache/arrow/pull/4418/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3ByZWNvbXBpbGVkL2RlY2ltYWxfb3BzLmNj) | `97.18% <98.14%> (+0.5%)` | :arrow_up: |\n   | [cpp/src/arrow/array/builder\\_union.cc](https://codecov.io/gh/apache/arrow/pull/4418/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX3VuaW9uLmNj) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/reader.h](https://codecov.io/gh/apache/arrow/pull/4418/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcmVhZGVyLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | ... and [487 more](https://codecov.io/gh/apache/arrow/pull/4418/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4418?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4418?src=pr&el=footer). Last update [9c753c4...1f499df](https://codecov.io/gh/apache/arrow/pull/4418?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-12T06:41:32.618+0000",
                    "updated": "2019-06-12T06:41:32.618+0000",
                    "started": "2019-06-12T06:41:32.617+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "258420",
                    "issueId": "13236554"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13236554/worklog/258527",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #4418: ARROW-5451: [C++][Gandiva] Support cast/round functions for decimal\nURL: https://github.com/apache/arrow/pull/4418\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-12T08:45:42.897+0000",
                    "updated": "2019-06-12T08:45:42.897+0000",
                    "started": "2019-06-12T08:45:42.897+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "258527",
                    "issueId": "13236554"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5d37dd70[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@240a2f77[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@65d803d3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@10dcf988[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3bc4092b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1087ae3[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@24eb378a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@538c8a26[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@489a4c2d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@a87f8bf[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@772dd902[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4047b07b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jul 18 22:20:47 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-06-12T08:45:46.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5451/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-05-30T17:53:26.000+0000",
        "updated": "2019-07-18T22:20:47.000+0000",
        "timeoriginalestimate": null,
        "description": "Will use this Jira to add support for :\r\n * round\r\n * truncate\r\n * ceil\r\n * floor\r\n * cast decimal to double, double to decimal\r\n * cast decimal to long, long to decimal\r\n * convert (modify precision/scale)",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Add round functions for decimals",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13236554/comment/16861889",
                    "id": "16861889",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "Issue resolved by pull request 4418\n[https://github.com/apache/arrow/pull/4418]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2019-06-12T08:45:46.797+0000",
                    "updated": "2019-06-12T08:45:46.797+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13236554/comment/16888376",
                    "id": "16888376",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=sid-kap",
                        "name": "sid-kap",
                        "key": "sid-kap",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Sidharth Kapur",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~pravindra] Does this change mean that in newer releases of pyarrow, it will be possible to cast decimal types to floats? i.e., will it fix the following issue:\r\n\r\n{{ArrowNotImplementedError: No cast implemented from decimal(28, 6) to double}}\r\n\r\n?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=sid-kap",
                        "name": "sid-kap",
                        "key": "sid-kap",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Sidharth Kapur",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-07-18T22:17:55.870+0000",
                    "updated": "2019-07-18T22:17:55.870+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13236554/comment/16888378",
                    "id": "16888378",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=sid-kap",
                        "name": "sid-kap",
                        "key": "sid-kap",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Sidharth Kapur",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Oh, never mind, I think this change only applies to Gandiva, not to the base PyArrow library?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=sid-kap",
                        "name": "sid-kap",
                        "key": "sid-kap",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Sidharth Kapur",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-07-18T22:20:47.906+0000",
                    "updated": "2019-07-18T22:20:47.906+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z038q8:",
        "customfield_12314139": null
    }
}