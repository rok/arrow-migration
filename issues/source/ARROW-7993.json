{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13289113",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113",
    "key": "ARROW-7993",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=projjal",
            "name": "projjal",
            "key": "projjal",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Projjal Chanda",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=projjal",
            "name": "projjal",
            "key": "projjal",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Projjal Chanda",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=projjal",
            "name": "projjal",
            "key": "projjal",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Projjal Chanda",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7993/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/396662",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on pull request #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-03T06:24:57.639+0000",
                    "updated": "2020-03-03T06:24:57.639+0000",
                    "started": "2020-03-03T06:24:57.639+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "396662",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/396665",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523#issuecomment-593790979\n \n \n   https://issues.apache.org/jira/browse/ARROW-7993\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-03T06:31:36.391+0000",
                    "updated": "2020-03-03T06:31:36.391+0000",
                    "started": "2020-03-03T06:31:36.391+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "396665",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/398223",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523#discussion_r388150963\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/ComplexWriters.java\n ##########\n @@ -113,20 +114,84 @@ public void write(Nullable${minor.class}Holder h) {\n     vector.setSafe(idx(), 1<#list fields as field><#if field.include!true >, ${field.name}</#if></#list>);\n     vector.setValueCount(idx()+1);\n   }\n+  </#if>\n \n-  <#if minor.class == \"Decimal\" ||\n-       minor.class == \"VarChar\">\n+  <#if minor.class == \"VarChar\">\n   public void write${minor.class}(${friendlyType} value) {\n     vector.setSafe(idx(), value);\n     vector.setValueCount(idx()+1);\n   }\n   </#if>\n \n   <#if minor.class == \"Decimal\">\n-  public void writeBigEndianBytesToDecimal(byte[] value) {\n-    vector.setBigEndianSafe(idx(), value);\n+\n+  public void write(DecimalHolder h) {\n+    if (h.scale != vector.getScale()) {\n+      throw new UnsupportedOperationException(\"Decimal scale must equal that in the Arrow vector: \" +\n+          h.scale + \" != \" + vector.getScale());\n+    }\n+    if (h.precision > vector.getPrecision()) {\n+      throw new UnsupportedOperationException(\"Decimal precision can not be greater than that in the Arrow vector: \" +\n+          h.precision + \" > \" + vector.getPrecision());\n+    }\n+    vector.setSafe(idx(), h);\n     vector.setValueCount(idx()+1);\n   }\n+\n+  public void write(NullableDecimalHolder h) {\n+    if (h.isSet == 1) {\n+      if (h.scale != vector.getScale()) {\n \n Review comment:\n   this check is being duplicated in many places - can you please move it to a common function ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-05T09:00:44.115+0000",
                    "updated": "2020-03-05T09:00:44.115+0000",
                    "started": "2020-03-05T09:00:44.115+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398223",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/398224",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523#discussion_r388153206\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/impl/PromotableWriter.java\n ##########\n @@ -268,32 +270,18 @@ private FieldWriter promoteToUnion() {\n \n   @Override\n   public void write(DecimalHolder holder) {\n-    // Infer decimal scale and precision\n-    if (arrowType == null) {\n-      arrowType = new ArrowType.Decimal(MAX_DECIMAL_PRECISION, holder.scale);\n-    }\n-\n-    getWriter(MinorType.DECIMAL, arrowType).write(holder);\n+    getWriter(MinorType.DECIMAL, new ArrowType.Decimal(MAX_DECIMAL_PRECISION, holder.scale)).write(holder);\n \n Review comment:\n   why not holder.precision ? same question for other occurrences in this file.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-05T09:00:44.189+0000",
                    "updated": "2020-03-05T09:00:44.189+0000",
                    "started": "2020-03-05T09:00:44.188+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398224",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/398225",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523#discussion_r388154110\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/complex/impl/TestComplexCopier.java\n ##########\n @@ -199,4 +204,85 @@ public void testCopyListVector() {\n \n     }\n   }\n+\n+  @Test\n+  public void testCopyFixedSizedListOfDecimalsVector() {\n+    try (FixedSizeListVector from = FixedSizeListVector.empty(\"v\", 3, allocator);\n+         FixedSizeListVector to = FixedSizeListVector.empty(\"v\", 3, allocator)) {\n+      from.addOrGetVector(FieldType.nullable(new ArrowType.Decimal(3, 0)));\n+      to.addOrGetVector(FieldType.nullable(new ArrowType.Decimal(3, 0)));\n+\n+      DecimalHolder holder = new DecimalHolder();\n+      holder.buffer = allocator.buffer(DecimalUtility.DECIMAL_BYTE_LENGTH);\n+\n+      // populate from vector\n+      UnionFixedSizeListWriter writer = from.getWriter();\n+      for (int i = 0; i < COUNT; i++) {\n+        writer.startList();\n+        writer.decimal().writeDecimal(BigDecimal.valueOf(i));\n+\n+        DecimalUtility.writeBigDecimalToArrowBuf(new BigDecimal(i * 2), holder.buffer, 0);\n+        holder.start = 0;\n+        holder.scale = 0;\n+        holder.precision = 3;\n+        writer.decimal().write(holder);\n+\n+        DecimalUtility.writeBigDecimalToArrowBuf(new BigDecimal(i * 3), holder.buffer, 0);\n+        writer.decimal().writeDecimal(0, holder.buffer, new ArrowType.Decimal(3, 0));\n+\n+        writer.endList();\n+      }\n+      from.setValueCount(COUNT);\n+      to.setValueCount(COUNT);\n+\n+      // copy values\n+      FieldReader in = from.getReader();\n+      FieldWriter out = to.getWriter();\n+      for (int i = 0; i < COUNT; i++) {\n \n Review comment:\n   is the loop needed ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-05T09:00:44.475+0000",
                    "updated": "2020-03-05T09:00:44.475+0000",
                    "started": "2020-03-05T09:00:44.475+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398225",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/398226",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523#discussion_r388154681\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/complex/impl/TestComplexCopier.java\n ##########\n @@ -199,4 +204,85 @@ public void testCopyListVector() {\n \n     }\n   }\n+\n+  @Test\n+  public void testCopyFixedSizedListOfDecimalsVector() {\n \n Review comment:\n   can you please add more test cases ?\r\n   - structs, list-of-lists with decimals\r\n   - error cases\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-05T09:00:44.478+0000",
                    "updated": "2020-03-05T09:00:44.478+0000",
                    "started": "2020-03-05T09:00:44.478+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398226",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/398227",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523#discussion_r388155531\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionListWriter.java\n ##########\n @@ -178,8 +178,8 @@ public void write(DecimalHolder holder) {\n     writer.setPosition(writer.idx()+1);\n   }\n \n-  public void writeDecimal(int start, ArrowBuf buffer) {\n-    writer.writeDecimal(start, buffer);\n+  public void writeDecimal(int start, ArrowBuf buffer, ArrowType arrowType) {\n \n Review comment:\n   for the changes in public APIs, can you add a deprecated api for the old behavior ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-05T09:00:44.576+0000",
                    "updated": "2020-03-05T09:00:44.576+0000",
                    "started": "2020-03-05T09:00:44.576+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398227",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/398229",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on issue #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523#issuecomment-595109217\n \n \n   @praveenbingo can you please review too ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-05T09:01:36.472+0000",
                    "updated": "2020-03-05T09:01:36.472+0000",
                    "started": "2020-03-05T09:01:36.471+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398229",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/398244",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on pull request #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523#discussion_r388172244\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/impl/PromotableWriter.java\n ##########\n @@ -268,32 +270,18 @@ private FieldWriter promoteToUnion() {\n \n   @Override\n   public void write(DecimalHolder holder) {\n-    // Infer decimal scale and precision\n-    if (arrowType == null) {\n-      arrowType = new ArrowType.Decimal(MAX_DECIMAL_PRECISION, holder.scale);\n-    }\n-\n-    getWriter(MinorType.DECIMAL, arrowType).write(holder);\n+    getWriter(MinorType.DECIMAL, new ArrowType.Decimal(MAX_DECIMAL_PRECISION, holder.scale)).write(holder);\n \n Review comment:\n   If decimalVector is not already added, it will get added during the call to getWriter() which will create the vector based on the precision and scale of this arrowType. If the precision passed is holder.precision, any subsequent writes to this vector with precision greater than this precision will throw an error (eg, after adding writeDecimal(new BigDecimal(5)), writeDecimal(new BigDecimal(15)) will throw error due to precision mismatch). So its best to pass MAX_DECIMAL_PRECISION for such cases.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-05T09:31:07.902+0000",
                    "updated": "2020-03-05T09:31:07.902+0000",
                    "started": "2020-03-05T09:31:07.902+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398244",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/398943",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on pull request #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523#discussion_r388720155\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/complex/impl/TestComplexCopier.java\n ##########\n @@ -199,4 +204,85 @@ public void testCopyListVector() {\n \n     }\n   }\n+\n+  @Test\n+  public void testCopyFixedSizedListOfDecimalsVector() {\n+    try (FixedSizeListVector from = FixedSizeListVector.empty(\"v\", 3, allocator);\n+         FixedSizeListVector to = FixedSizeListVector.empty(\"v\", 3, allocator)) {\n+      from.addOrGetVector(FieldType.nullable(new ArrowType.Decimal(3, 0)));\n+      to.addOrGetVector(FieldType.nullable(new ArrowType.Decimal(3, 0)));\n+\n+      DecimalHolder holder = new DecimalHolder();\n+      holder.buffer = allocator.buffer(DecimalUtility.DECIMAL_BYTE_LENGTH);\n+\n+      // populate from vector\n+      UnionFixedSizeListWriter writer = from.getWriter();\n+      for (int i = 0; i < COUNT; i++) {\n+        writer.startList();\n+        writer.decimal().writeDecimal(BigDecimal.valueOf(i));\n+\n+        DecimalUtility.writeBigDecimalToArrowBuf(new BigDecimal(i * 2), holder.buffer, 0);\n+        holder.start = 0;\n+        holder.scale = 0;\n+        holder.precision = 3;\n+        writer.decimal().write(holder);\n+\n+        DecimalUtility.writeBigDecimalToArrowBuf(new BigDecimal(i * 3), holder.buffer, 0);\n+        writer.decimal().writeDecimal(0, holder.buffer, new ArrowType.Decimal(3, 0));\n+\n+        writer.endList();\n+      }\n+      from.setValueCount(COUNT);\n+      to.setValueCount(COUNT);\n+\n+      // copy values\n+      FieldReader in = from.getReader();\n+      FieldWriter out = to.getWriter();\n+      for (int i = 0; i < COUNT; i++) {\n \n Review comment:\n   yes since the reader and writers don't update the position after each read/write. Have to explicitly setPosition()\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T05:31:48.318+0000",
                    "updated": "2020-03-06T05:31:48.318+0000",
                    "started": "2020-03-06T05:31:48.318+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398943",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/398963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523#discussion_r388747194\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/util/DecimalUtility.java\n ##########\n @@ -95,6 +95,24 @@ public static boolean checkPrecisionAndScale(BigDecimal value, int vectorPrecisi\n     return true;\n   }\n \n+  /**\n+   * Check that the decimal scale equals the vectorScale and that the decimal precision is\n+   * less than or equal to the vectorPrecision. If not, then an UnsupportedOperationException is\n+   * thrown, otherwise returns true.\n+   */\n+  public static boolean checkPrecisionAndScale(int decimalPrecision, int decimalScale, int vectorPrecision,\n \n Review comment:\n   can be void..nothing to do with return status..\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T07:26:35.782+0000",
                    "updated": "2020-03-06T07:26:35.782+0000",
                    "started": "2020-03-06T07:26:35.781+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398963",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/398964",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523#discussion_r388746323\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/ComplexWriters.java\n ##########\n @@ -113,19 +114,59 @@ public void write(Nullable${minor.class}Holder h) {\n     vector.setSafe(idx(), 1<#list fields as field><#if field.include!true >, ${field.name}</#if></#list>);\n     vector.setValueCount(idx()+1);\n   }\n+  </#if>\n \n-  <#if minor.class == \"Decimal\" ||\n-       minor.class == \"VarChar\">\n+  <#if minor.class == \"VarChar\">\n   public void write${minor.class}(${friendlyType} value) {\n     vector.setSafe(idx(), value);\n     vector.setValueCount(idx()+1);\n   }\n   </#if>\n \n   <#if minor.class == \"Decimal\">\n-  public void writeBigEndianBytesToDecimal(byte[] value) {\n+\n+  public void write(DecimalHolder h){\n+    DecimalUtility.checkPrecisionAndScale(h.precision, h.scale, vector.getPrecision(), vector.getScale());\n+    vector.setSafe(idx(), h);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void write(NullableDecimalHolder h){\n+    if (h.isSet == 1) {\n+      DecimalUtility.checkPrecisionAndScale(h.precision, h.scale, vector.getPrecision(), vector.getScale());\n+    }\n+    vector.setSafe(idx(), h);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeDecimal(int start, ArrowBuf buffer){\n+    vector.setSafe(idx(), 1, start, buffer);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeDecimal(int start, ArrowBuf buffer, ArrowType arrowType){\n+    DecimalUtility.checkPrecisionAndScale(((ArrowType.Decimal) arrowType).getPrecision(),\n+      ((ArrowType.Decimal) arrowType).getScale(), vector.getPrecision(), vector.getScale());\n+    vector.setSafe(idx(), 1, start, buffer);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeDecimal(BigDecimal value){\n+    // vector.setSafe already does precision and scale checking\n+    vector.setSafe(idx(), value);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeBigEndianBytesToDecimal(byte[] value, ArrowType arrowType){\n+    DecimalUtility.checkPrecisionAndScale(((ArrowType.Decimal) arrowType).getPrecision(),\n+        ((ArrowType.Decimal) arrowType).getScale(), vector.getPrecision(), vector.getScale());\n     vector.setBigEndianSafe(idx(), value);\n-    vector.setValueCount(idx()+1);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeBigEndianBytesToDecimal(byte[] value){\n+    vector.setBigEndianSafe(idx(), value);\n \n Review comment:\n   do we want to support this method..\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T07:26:35.785+0000",
                    "updated": "2020-03-06T07:26:35.785+0000",
                    "started": "2020-03-06T07:26:35.785+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398964",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/398965",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523#discussion_r388726681\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/ComplexWriters.java\n ##########\n @@ -113,19 +114,59 @@ public void write(Nullable${minor.class}Holder h) {\n     vector.setSafe(idx(), 1<#list fields as field><#if field.include!true >, ${field.name}</#if></#list>);\n     vector.setValueCount(idx()+1);\n   }\n+  </#if>\n \n-  <#if minor.class == \"Decimal\" ||\n-       minor.class == \"VarChar\">\n+  <#if minor.class == \"VarChar\">\n   public void write${minor.class}(${friendlyType} value) {\n     vector.setSafe(idx(), value);\n     vector.setValueCount(idx()+1);\n   }\n   </#if>\n \n   <#if minor.class == \"Decimal\">\n-  public void writeBigEndianBytesToDecimal(byte[] value) {\n+\n+  public void write(DecimalHolder h){\n+    DecimalUtility.checkPrecisionAndScale(h.precision, h.scale, vector.getPrecision(), vector.getScale());\n+    vector.setSafe(idx(), h);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void write(NullableDecimalHolder h){\n+    if (h.isSet == 1) {\n+      DecimalUtility.checkPrecisionAndScale(h.precision, h.scale, vector.getPrecision(), vector.getScale());\n+    }\n+    vector.setSafe(idx(), h);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeDecimal(int start, ArrowBuf buffer){\n+    vector.setSafe(idx(), 1, start, buffer);\n \n Review comment:\n   do we want to support his method..\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T07:26:35.826+0000",
                    "updated": "2020-03-06T07:26:35.826+0000",
                    "started": "2020-03-06T07:26:35.826+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398965",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/398989",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on pull request #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523#discussion_r388774392\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/ComplexWriters.java\n ##########\n @@ -113,19 +114,59 @@ public void write(Nullable${minor.class}Holder h) {\n     vector.setSafe(idx(), 1<#list fields as field><#if field.include!true >, ${field.name}</#if></#list>);\n     vector.setValueCount(idx()+1);\n   }\n+  </#if>\n \n-  <#if minor.class == \"Decimal\" ||\n-       minor.class == \"VarChar\">\n+  <#if minor.class == \"VarChar\">\n   public void write${minor.class}(${friendlyType} value) {\n     vector.setSafe(idx(), value);\n     vector.setValueCount(idx()+1);\n   }\n   </#if>\n \n   <#if minor.class == \"Decimal\">\n-  public void writeBigEndianBytesToDecimal(byte[] value) {\n+\n+  public void write(DecimalHolder h){\n+    DecimalUtility.checkPrecisionAndScale(h.precision, h.scale, vector.getPrecision(), vector.getScale());\n+    vector.setSafe(idx(), h);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void write(NullableDecimalHolder h){\n+    if (h.isSet == 1) {\n+      DecimalUtility.checkPrecisionAndScale(h.precision, h.scale, vector.getPrecision(), vector.getScale());\n+    }\n+    vector.setSafe(idx(), h);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeDecimal(int start, ArrowBuf buffer){\n+    vector.setSafe(idx(), 1, start, buffer);\n \n Review comment:\n   This method was already there (code generated), so I didn't remove it to not break anything. Marked the method as deprecated in the interface.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T08:41:51.433+0000",
                    "updated": "2020-03-06T08:41:51.433+0000",
                    "started": "2020-03-06T08:41:51.433+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398989",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/398990",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on pull request #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523#discussion_r388774485\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/ComplexWriters.java\n ##########\n @@ -113,19 +114,59 @@ public void write(Nullable${minor.class}Holder h) {\n     vector.setSafe(idx(), 1<#list fields as field><#if field.include!true >, ${field.name}</#if></#list>);\n     vector.setValueCount(idx()+1);\n   }\n+  </#if>\n \n-  <#if minor.class == \"Decimal\" ||\n-       minor.class == \"VarChar\">\n+  <#if minor.class == \"VarChar\">\n   public void write${minor.class}(${friendlyType} value) {\n     vector.setSafe(idx(), value);\n     vector.setValueCount(idx()+1);\n   }\n   </#if>\n \n   <#if minor.class == \"Decimal\">\n-  public void writeBigEndianBytesToDecimal(byte[] value) {\n+\n+  public void write(DecimalHolder h){\n+    DecimalUtility.checkPrecisionAndScale(h.precision, h.scale, vector.getPrecision(), vector.getScale());\n+    vector.setSafe(idx(), h);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void write(NullableDecimalHolder h){\n+    if (h.isSet == 1) {\n+      DecimalUtility.checkPrecisionAndScale(h.precision, h.scale, vector.getPrecision(), vector.getScale());\n+    }\n+    vector.setSafe(idx(), h);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeDecimal(int start, ArrowBuf buffer){\n+    vector.setSafe(idx(), 1, start, buffer);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeDecimal(int start, ArrowBuf buffer, ArrowType arrowType){\n+    DecimalUtility.checkPrecisionAndScale(((ArrowType.Decimal) arrowType).getPrecision(),\n+      ((ArrowType.Decimal) arrowType).getScale(), vector.getPrecision(), vector.getScale());\n+    vector.setSafe(idx(), 1, start, buffer);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeDecimal(BigDecimal value){\n+    // vector.setSafe already does precision and scale checking\n+    vector.setSafe(idx(), value);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeBigEndianBytesToDecimal(byte[] value, ArrowType arrowType){\n+    DecimalUtility.checkPrecisionAndScale(((ArrowType.Decimal) arrowType).getPrecision(),\n+        ((ArrowType.Decimal) arrowType).getScale(), vector.getPrecision(), vector.getScale());\n     vector.setBigEndianSafe(idx(), value);\n-    vector.setValueCount(idx()+1);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeBigEndianBytesToDecimal(byte[] value){\n+    vector.setBigEndianSafe(idx(), value);\n \n Review comment:\n   This method was already there (code generated), so I didn't remove it to not break anything. Marked the method as deprecated in the interface.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T08:42:05.589+0000",
                    "updated": "2020-03-06T08:42:05.589+0000",
                    "started": "2020-03-06T08:42:05.588+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398990",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/398991",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on pull request #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523#discussion_r388774392\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/ComplexWriters.java\n ##########\n @@ -113,19 +114,59 @@ public void write(Nullable${minor.class}Holder h) {\n     vector.setSafe(idx(), 1<#list fields as field><#if field.include!true >, ${field.name}</#if></#list>);\n     vector.setValueCount(idx()+1);\n   }\n+  </#if>\n \n-  <#if minor.class == \"Decimal\" ||\n-       minor.class == \"VarChar\">\n+  <#if minor.class == \"VarChar\">\n   public void write${minor.class}(${friendlyType} value) {\n     vector.setSafe(idx(), value);\n     vector.setValueCount(idx()+1);\n   }\n   </#if>\n \n   <#if minor.class == \"Decimal\">\n-  public void writeBigEndianBytesToDecimal(byte[] value) {\n+\n+  public void write(DecimalHolder h){\n+    DecimalUtility.checkPrecisionAndScale(h.precision, h.scale, vector.getPrecision(), vector.getScale());\n+    vector.setSafe(idx(), h);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void write(NullableDecimalHolder h){\n+    if (h.isSet == 1) {\n+      DecimalUtility.checkPrecisionAndScale(h.precision, h.scale, vector.getPrecision(), vector.getScale());\n+    }\n+    vector.setSafe(idx(), h);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeDecimal(int start, ArrowBuf buffer){\n+    vector.setSafe(idx(), 1, start, buffer);\n \n Review comment:\n   This implementation was already there (code generated), so I didn't remove it to not break anything. Marked the method as deprecated in the interface.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T08:42:24.078+0000",
                    "updated": "2020-03-06T08:42:24.078+0000",
                    "started": "2020-03-06T08:42:24.077+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398991",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/398992",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on pull request #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523#discussion_r388774485\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/ComplexWriters.java\n ##########\n @@ -113,19 +114,59 @@ public void write(Nullable${minor.class}Holder h) {\n     vector.setSafe(idx(), 1<#list fields as field><#if field.include!true >, ${field.name}</#if></#list>);\n     vector.setValueCount(idx()+1);\n   }\n+  </#if>\n \n-  <#if minor.class == \"Decimal\" ||\n-       minor.class == \"VarChar\">\n+  <#if minor.class == \"VarChar\">\n   public void write${minor.class}(${friendlyType} value) {\n     vector.setSafe(idx(), value);\n     vector.setValueCount(idx()+1);\n   }\n   </#if>\n \n   <#if minor.class == \"Decimal\">\n-  public void writeBigEndianBytesToDecimal(byte[] value) {\n+\n+  public void write(DecimalHolder h){\n+    DecimalUtility.checkPrecisionAndScale(h.precision, h.scale, vector.getPrecision(), vector.getScale());\n+    vector.setSafe(idx(), h);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void write(NullableDecimalHolder h){\n+    if (h.isSet == 1) {\n+      DecimalUtility.checkPrecisionAndScale(h.precision, h.scale, vector.getPrecision(), vector.getScale());\n+    }\n+    vector.setSafe(idx(), h);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeDecimal(int start, ArrowBuf buffer){\n+    vector.setSafe(idx(), 1, start, buffer);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeDecimal(int start, ArrowBuf buffer, ArrowType arrowType){\n+    DecimalUtility.checkPrecisionAndScale(((ArrowType.Decimal) arrowType).getPrecision(),\n+      ((ArrowType.Decimal) arrowType).getScale(), vector.getPrecision(), vector.getScale());\n+    vector.setSafe(idx(), 1, start, buffer);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeDecimal(BigDecimal value){\n+    // vector.setSafe already does precision and scale checking\n+    vector.setSafe(idx(), value);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeBigEndianBytesToDecimal(byte[] value, ArrowType arrowType){\n+    DecimalUtility.checkPrecisionAndScale(((ArrowType.Decimal) arrowType).getPrecision(),\n+        ((ArrowType.Decimal) arrowType).getScale(), vector.getPrecision(), vector.getScale());\n     vector.setBigEndianSafe(idx(), value);\n-    vector.setValueCount(idx()+1);\n+    vector.setValueCount(idx() + 1);\n+  }\n+\n+  public void writeBigEndianBytesToDecimal(byte[] value){\n+    vector.setBigEndianSafe(idx(), value);\n \n Review comment:\n   This implementation was already there (code generated), so I didn't remove it to not break anything. Marked the method as deprecated in the interface.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T08:42:40.531+0000",
                    "updated": "2020-03-06T08:42:40.531+0000",
                    "started": "2020-03-06T08:42:40.530+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398992",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/398993",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on pull request #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523#discussion_r388775095\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/util/DecimalUtility.java\n ##########\n @@ -95,6 +95,24 @@ public static boolean checkPrecisionAndScale(BigDecimal value, int vectorPrecisi\n     return true;\n   }\n \n+  /**\n+   * Check that the decimal scale equals the vectorScale and that the decimal precision is\n+   * less than or equal to the vectorPrecision. If not, then an UnsupportedOperationException is\n+   * thrown, otherwise returns true.\n+   */\n+  public static boolean checkPrecisionAndScale(int decimalPrecision, int decimalScale, int vectorPrecision,\n \n Review comment:\n   tried to keep it consistent with the method above it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T08:43:31.967+0000",
                    "updated": "2020-03-06T08:43:31.967+0000",
                    "started": "2020-03-06T08:43:31.967+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398993",
                    "issueId": "13289113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289113/worklog/399058",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #6523: ARROW-7993: [Java] Support decimal type in ComplexCopier\nURL: https://github.com/apache/arrow/pull/6523\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T11:19:23.896+0000",
                    "updated": "2020-03-06T11:19:23.896+0000",
                    "started": "2020-03-06T11:19:23.895+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "399058",
                    "issueId": "13289113"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2bca3761[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77e59311[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@76485672[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2dee2eb1[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3cda4e7f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@28406e69[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c0f46d5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@40c87843[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2e8f6f93[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5176f0d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6348b894[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6041dede[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "2020-03-03 06:20:28.0",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-04-15T19:12:59.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7993/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-03-03T06:20:28.000+0000",
        "updated": "2020-04-15T19:12:59.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Support decimal type in ComplexCopier",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [],
            "maxResults": 0,
            "total": 0,
            "startAt": 0
        },
        "customfield_12311820": "0|z0c3rs:",
        "customfield_12314139": null
    }
}