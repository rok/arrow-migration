{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13186989",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13186989",
    "key": "ARROW-3318",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 3000,
            "total": 3000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3000,
            "total": 3000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3318/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 5,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13186989/worklog/172146",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm opened a new pull request #3097: ARROW-3318: [C++] Push down read-all-batches operation on RecordBatchReader into C++\nURL: https://github.com/apache/arrow/pull/3097\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T04:12:22.313+0000",
                    "updated": "2018-12-05T04:12:22.313+0000",
                    "started": "2018-12-05T04:12:22.312+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172146",
                    "issueId": "13186989"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13186989/worklog/172151",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3097: ARROW-3318: [C++] Push down read-all-batches operation on RecordBatchReader into C++\nURL: https://github.com/apache/arrow/pull/3097#issuecomment-444358920\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3097?src=pr&el=h1) Report\n   > Merging [#3097](https://codecov.io/gh/apache/arrow/pull/3097?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/a06624e634af72c9b7b24a548311785d99a4d4e7?src=pr&el=desc) will **increase** coverage by `1.09%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3097/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3097?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3097      +/-   ##\n   ==========================================\n   + Coverage   87.06%   88.15%   +1.09%     \n   ==========================================\n     Files         492      434      -58     \n     Lines       69104    65341    -3763     \n   ==========================================\n   - Hits        60164    57603    -2561     \n   + Misses       8843     7738    -1105     \n   + Partials       97        0      -97\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3097?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/record\\_batch.h](https://codecov.io/gh/apache/arrow/pull/3097/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9yZWNvcmRfYmF0Y2guaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/ipc-read-write-test.cc](https://codecov.io/gh/apache/arrow/pull/3097/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvaXBjLXJlYWQtd3JpdGUtdGVzdC5jYw==) | `99.12% <100%> (-0.01%)` | :arrow_down: |\n   | [cpp/src/arrow/record\\_batch.cc](https://codecov.io/gh/apache/arrow/pull/3097/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9yZWNvcmRfYmF0Y2guY2M=) | `90.57% <100%> (+0.89%)` | :arrow_up: |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/3097/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | `67.53% <100%> (-0.83%)` | :arrow_down: |\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/3097/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `72.03% <0%> (-0.95%)` | :arrow_down: |\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/3097/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `98.91% <0%> (-0.55%)` | :arrow_down: |\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/3097/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3097/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/3097/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/3097/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | ... and [54 more](https://codecov.io/gh/apache/arrow/pull/3097/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3097?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3097?src=pr&el=footer). Last update [a06624e...03216b3](https://codecov.io/gh/apache/arrow/pull/3097?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T04:56:56.698+0000",
                    "updated": "2018-12-05T04:56:56.698+0000",
                    "started": "2018-12-05T04:56:56.697+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172151",
                    "issueId": "13186989"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13186989/worklog/172191",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #3097: ARROW-3318: [C++] Push down read-all-batches operation on RecordBatchReader into C++\nURL: https://github.com/apache/arrow/pull/3097#discussion_r238972406\n \n \n\n ##########\n File path: cpp/src/arrow/record_batch.cc\n ##########\n @@ -249,4 +250,22 @@ Status RecordBatch::Validate() const {\n \n RecordBatchReader::~RecordBatchReader() {}\n \n+Status RecordBatchReader::ReadAll(std::vector<std::shared_ptr<RecordBatch>>* batches) {\n+  while (true) {\n+    std::shared_ptr<RecordBatch> batch;\n+    RETURN_NOT_OK(ReadNext(&batch));\n+    if (!batch) {\n+      break;\n+    }\n+    batches->emplace_back(std::move(batch));\n+  }\n+  return Status::OK();\n+}\n+\n+Status RecordBatchReader::ReadAll(std::shared_ptr<Table>* table) {\n+  std::vector<std::shared_ptr<RecordBatch>> batches;\n+  RETURN_NOT_OK(ReadAll(&batches));\n+  return Table::FromRecordBatches(this->schema(), batches, table);\n \n Review comment:\n   Should we use `this->` here?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T08:44:45.824+0000",
                    "updated": "2018-12-05T08:44:45.824+0000",
                    "started": "2018-12-05T08:44:45.824+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172191",
                    "issueId": "13186989"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13186989/worklog/172323",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3097: ARROW-3318: [C++] Push down read-all-batches operation on RecordBatchReader into C++\nURL: https://github.com/apache/arrow/pull/3097#discussion_r239111330\n \n \n\n ##########\n File path: cpp/src/arrow/record_batch.cc\n ##########\n @@ -249,4 +250,22 @@ Status RecordBatch::Validate() const {\n \n RecordBatchReader::~RecordBatchReader() {}\n \n+Status RecordBatchReader::ReadAll(std::vector<std::shared_ptr<RecordBatch>>* batches) {\n+  while (true) {\n+    std::shared_ptr<RecordBatch> batch;\n+    RETURN_NOT_OK(ReadNext(&batch));\n+    if (!batch) {\n+      break;\n+    }\n+    batches->emplace_back(std::move(batch));\n+  }\n+  return Status::OK();\n+}\n+\n+Status RecordBatchReader::ReadAll(std::shared_ptr<Table>* table) {\n+  std::vector<std::shared_ptr<RecordBatch>> batches;\n+  RETURN_NOT_OK(ReadAll(&batches));\n+  return Table::FromRecordBatches(this->schema(), batches, table);\n \n Review comment:\n   Not needed, will remove\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T15:27:29.006+0000",
                    "updated": "2018-12-05T15:27:29.006+0000",
                    "started": "2018-12-05T15:27:29.006+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172323",
                    "issueId": "13186989"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13186989/worklog/172382",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #3097: ARROW-3318: [C++] Push down read-all-batches operation on RecordBatchReader into C++\nURL: https://github.com/apache/arrow/pull/3097\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/ipc/ipc-read-write-test.cc b/cpp/src/arrow/ipc/ipc-read-write-test.cc\nindex 31a9d474fe..3a723badf3 100644\n--- a/cpp/src/arrow/ipc/ipc-read-write-test.cc\n+++ b/cpp/src/arrow/ipc/ipc-read-write-test.cc\n@@ -657,16 +657,7 @@ class TestStreamFormat : public ::testing::TestWithParam<MakeRecordBatch*> {\n \n     std::shared_ptr<RecordBatchReader> reader;\n     RETURN_NOT_OK(RecordBatchStreamReader::Open(&buf_reader, &reader));\n-\n-    std::shared_ptr<RecordBatch> chunk;\n-    while (true) {\n-      RETURN_NOT_OK(reader->ReadNext(&chunk));\n-      if (chunk == nullptr) {\n-        break;\n-      }\n-      out_batches->emplace_back(chunk);\n-    }\n-    return Status::OK();\n+    return reader->ReadAll(out_batches);\n   }\n \n  protected:\ndiff --git a/cpp/src/arrow/record_batch.cc b/cpp/src/arrow/record_batch.cc\nindex f295b864c0..33287c19ff 100644\n--- a/cpp/src/arrow/record_batch.cc\n+++ b/cpp/src/arrow/record_batch.cc\n@@ -26,6 +26,7 @@\n \n #include \"arrow/array.h\"\n #include \"arrow/status.h\"\n+#include \"arrow/table.h\"\n #include \"arrow/type.h\"\n #include \"arrow/util/logging.h\"\n #include \"arrow/util/stl.h\"\n@@ -249,4 +250,22 @@ Status RecordBatch::Validate() const {\n \n RecordBatchReader::~RecordBatchReader() {}\n \n+Status RecordBatchReader::ReadAll(std::vector<std::shared_ptr<RecordBatch>>* batches) {\n+  while (true) {\n+    std::shared_ptr<RecordBatch> batch;\n+    RETURN_NOT_OK(ReadNext(&batch));\n+    if (!batch) {\n+      break;\n+    }\n+    batches->emplace_back(std::move(batch));\n+  }\n+  return Status::OK();\n+}\n+\n+Status RecordBatchReader::ReadAll(std::shared_ptr<Table>* table) {\n+  std::vector<std::shared_ptr<RecordBatch>> batches;\n+  RETURN_NOT_OK(ReadAll(&batches));\n+  return Table::FromRecordBatches(schema(), batches, table);\n+}\n+\n }  // namespace arrow\ndiff --git a/cpp/src/arrow/record_batch.h b/cpp/src/arrow/record_batch.h\nindex f6538f9c40..674b68b40f 100644\n--- a/cpp/src/arrow/record_batch.h\n+++ b/cpp/src/arrow/record_batch.h\n@@ -170,12 +170,18 @@ class ARROW_EXPORT RecordBatchReader {\n   /// \\return the shared schema of the record batches in the stream\n   virtual std::shared_ptr<Schema> schema() const = 0;\n \n-  /// Read the next record batch in the stream. Return null for batch when\n-  /// reaching end of stream\n+  /// \\brief Read the next record batch in the stream. Return null for batch\n+  /// when reaching end of stream\n   ///\n   /// \\param[out] batch the next loaded batch, null at end of stream\n   /// \\return Status\n   virtual Status ReadNext(std::shared_ptr<RecordBatch>* batch) = 0;\n+\n+  /// \\brief Consume entire stream as a vector of record batches\n+  Status ReadAll(std::vector<std::shared_ptr<RecordBatch>>* batches);\n+\n+  /// \\brief Read all batches and concatenate as arrow::Table\n+  Status ReadAll(std::shared_ptr<Table>* table);\n };\n \n }  // namespace arrow\ndiff --git a/python/pyarrow/includes/libarrow.pxd b/python/pyarrow/includes/libarrow.pxd\nindex 3f533d9314..c5e7457083 100644\n--- a/python/pyarrow/includes/libarrow.pxd\n+++ b/python/pyarrow/includes/libarrow.pxd\n@@ -533,10 +533,12 @@ cdef extern from \"arrow/api.h\" namespace \"arrow\" nogil:\n         shared_ptr[CTable] ReplaceSchemaMetadata(\n             const shared_ptr[CKeyValueMetadata]& metadata)\n \n-    cdef cppclass RecordBatchReader:\n-        CStatus ReadNext(shared_ptr[CRecordBatch]* out)\n+    cdef cppclass CRecordBatchReader\" arrow::RecordBatchReader\":\n+        shared_ptr[CSchema] schema()\n+        CStatus ReadNext(shared_ptr[CRecordBatch]* batch)\n+        CStatus ReadAll(shared_ptr[CTable]* out)\n \n-    cdef cppclass TableBatchReader(RecordBatchReader):\n+    cdef cppclass TableBatchReader(CRecordBatchReader):\n         TableBatchReader(const CTable& table)\n         void set_chunksize(int64_t chunksize)\n \n@@ -825,10 +827,6 @@ cdef extern from \"arrow/ipc/api.h\" namespace \"arrow::ipc\" nogil:\n                                  c_bool allow_64bit)\n         CStatus WriteTable(const CTable& table, int64_t max_chunksize)\n \n-    cdef cppclass CRecordBatchReader\" arrow::ipc::RecordBatchReader\":\n-        shared_ptr[CSchema] schema()\n-        CStatus ReadNext(shared_ptr[CRecordBatch]* batch)\n-\n     cdef cppclass CRecordBatchStreamReader \\\n             \" arrow::ipc::RecordBatchStreamReader\"(CRecordBatchReader):\n         @staticmethod\ndiff --git a/python/pyarrow/ipc.pxi b/python/pyarrow/ipc.pxi\nindex c9898f020c..137d5261d2 100644\n--- a/python/pyarrow/ipc.pxi\n+++ b/python/pyarrow/ipc.pxi\n@@ -285,21 +285,9 @@ cdef class _RecordBatchReader:\n         \"\"\"\n         Read all record batches as a pyarrow.Table\n         \"\"\"\n-        cdef:\n-            vector[shared_ptr[CRecordBatch]] batches\n-            shared_ptr[CRecordBatch] batch\n-            shared_ptr[CTable] table\n-\n+        cdef shared_ptr[CTable] table\n         with nogil:\n-            while True:\n-                check_status(self.reader.get().ReadNext(&batch))\n-                if batch.get() == NULL:\n-                    break\n-                batches.push_back(batch)\n-\n-            check_status(CTable.FromRecordBatches(self.schema.sp_schema,\n-                                                  batches, &table))\n-\n+            check_status(self.reader.get().ReadAll(&table))\n         return pyarrow_wrap_table(table)\n \n \n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T16:49:03.711+0000",
                    "updated": "2018-12-05T16:49:03.711+0000",
                    "started": "2018-12-05T16:49:03.711+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172382",
                    "issueId": "13186989"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 3000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@389c9f0d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@229b9703[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22edcb9a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5c30734b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4b63f9b1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1fdf9ff0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53a2268a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@cd7ad9e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58ad63c4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3bee573e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@793ab0bf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@48b0595b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Dec 05 16:48:50 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-12-05T16:48:50.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3318/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-09-24T10:39:08.000+0000",
        "updated": "2018-12-05T16:49:03.000+0000",
        "timeoriginalestimate": null,
        "description": "This is being implemented more than once in binding layers",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Convenience method for reading all batches from an IPC stream or file as arrow::Table",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13186989/comment/16710327",
                    "id": "16710327",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 3097\n[https://github.com/apache/arrow/pull/3097]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-12-05T16:48:50.111+0000",
                    "updated": "2018-12-05T16:48:50.111+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3yexz:",
        "customfield_12314139": null
    }
}