{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13377860",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377860",
    "key": "ARROW-12735",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12615411",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12615411",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13354000",
                    "key": "ARROW-11348",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354000",
                    "fields": {
                        "summary": "[C++] Add pretty printing support for gdb",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
                            "id": "5",
                            "description": "General wishlist item.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Wish",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12631643",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12631643",
                "type": {
                    "id": "12310051",
                    "name": "Supercedes",
                    "inward": "is superceded by",
                    "outward": "supercedes",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310051"
                },
                "outwardIssue": {
                    "id": "13354000",
                    "key": "ARROW-11348",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354000",
                    "fields": {
                        "summary": "[C++] Add pretty printing support for gdb",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
                            "id": "5",
                            "description": "General wishlist item.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Wish",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12631641",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12631641",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "inwardIssue": {
                    "id": "13423766",
                    "key": "ARROW-15389",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766",
                    "fields": {
                        "summary": "[C++][Dev] Improve Array preview in GDB plugin",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
                            "id": "5",
                            "description": "General wishlist item.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Wish",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12631642",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12631642",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "inwardIssue": {
                    "id": "13423767",
                    "key": "ARROW-15390",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423767",
                    "fields": {
                        "summary": "[Doc][C++] Write documentation about the GDB plugin",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
                            "id": "3",
                            "description": "A task that needs to be done.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
                            "name": "Task",
                            "subtask": false,
                            "avatarId": 21148
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334506",
                "id": "12334506",
                "name": "Developer Tools"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12735/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 11,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377860/worklog/704701",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #12092:\nURL: https://github.com/apache/arrow/pull/12092\n\n\n   Add a GDB plugin (written in Python) that registers custom printers for common Arrow C++ types, and makes their values much more readable when printed on the GDB prompt.\r\n   The plugin is tested using a test harness in PyArrow, for convenience.\r\n   \r\n   Here is for example `arrow::util::Variant<int, bool, std::string>`:\r\n   * with the GDB plugin:\r\n   ```gdb\r\n   (gdb) p int_variant\r\n   $2 = arrow::util::Variant of index 0 (actual type int), value 42\r\n   ```\r\n   * without the GDB plugin:\r\n   ```gdb\r\n   (gdb) p int_variant\r\n   $1 = {\r\n     <arrow::util::detail::VariantImpl<arrow::util::Variant<int, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, int, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >> = {\r\n       <arrow::util::detail::VariantImpl<arrow::util::Variant<int, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >> = {\r\n         <arrow::util::detail::VariantImpl<arrow::util::Variant<int, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >> = {\r\n           <arrow::util::detail::VariantImpl<arrow::util::Variant<int, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> = {\r\n             <arrow::util::detail::VariantStorage<int, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >> = {\r\n   [ snip more lines of inscrutable implementation details ]\r\n   ```\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-06T18:37:52.597+0000",
                    "updated": "2022-01-06T18:37:52.597+0000",
                    "started": "2022-01-06T18:37:52.597+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704701",
                    "issueId": "13377860"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377860/worklog/704702",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12092:\nURL: https://github.com/apache/arrow/pull/12092#issuecomment-1006824489\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-06T18:38:17.524+0000",
                    "updated": "2022-01-06T18:38:17.524+0000",
                    "started": "2022-01-06T18:38:17.524+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704702",
                    "issueId": "13377860"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377860/worklog/712164",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #12092:\nURL: https://github.com/apache/arrow/pull/12092#discussion_r788920949\n\n\n\n##########\nFile path: cpp/gdb_arrow.py\n##########\n@@ -0,0 +1,1894 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+from collections import namedtuple\n+from collections.abc import Sequence\n+import decimal\n+import enum\n+from functools import lru_cache, partial\n+import struct\n+import sys\n+import warnings\n+\n+import gdb\n+from gdb.types import get_basic_type\n+\n+# gdb API docs at https://sourceware.org/gdb/onlinedocs/gdb/Python-API.html#Python-API\n+\n+# TODO check guidelines here: https://sourceware.org/gdb/onlinedocs/gdb/Writing-a-Pretty_002dPrinter.html\n+# TODO investigate auto-loading: https://sourceware.org/gdb/onlinedocs/gdb/Auto_002dloading-extensions.html#Auto_002dloading-extensions\n+\n+\n+_type_ids = [\n+    'NA', 'BOOL', 'UINT8', 'INT8', 'UINT16', 'INT16', 'UINT32', 'INT32',\n+    'UINT64', 'INT64', 'HALF_FLOAT', 'FLOAT', 'DOUBLE', 'STRING', 'BINARY',\n+    'FIXED_SIZE_BINARY', 'DATE32', 'DATE64', 'TIMESTAMP', 'TIME32', 'TIME64',\n+    'INTERVAL_MONTHS', 'INTERVAL_DAY_TIME', 'DECIMAL128', 'DECIMAL256',\n+    'LIST', 'STRUCT', 'SPARSE_UNION', 'DENSE_UNION', 'DICTIONARY', 'MAP',\n+    'EXTENSION', 'FIXED_SIZE_LIST', 'DURATION', 'LARGE_STRING',\n+    'LARGE_BINARY', 'LARGE_LIST', 'INTERVAL_MONTH_DAY_NANO']\n+\n+# Mirror the C++ Type::type enum\n+Type = enum.IntEnum('Type', _type_ids, start=0)\n+\n+\n+@lru_cache()\n+def byte_order():\n+    \"\"\"\n+    Get the target program (not the GDB host's) endianness.\n+    \"\"\"\n+    s = gdb.execute(\"show endian\", to_string=True).strip()\n+    if 'big' in s:\n+        return 'big'\n+    elif 'little' in s:\n+        return 'little'\n+    warnings.warn('Could not determine target endianness '\n+                  f'from GDB\\'s response:\\n\"\"\"{s}\"\"\"')\n+    # Fall back to host endianness\n+    return sys.byteorder\n+\n+\n+def for_evaluation(val, ty=None):\n+    \"\"\"\n+    Return a parsable form of gdb.Value `val`, optionally with gdb.Type `ty`.\n+    \"\"\"\n+    if ty is None:\n+        ty = get_basic_type(val.type)\n+    if ty.code == gdb.TYPE_CODE_PTR:\n+        # It's already a pointer, can represent it directly\n+        return f\"(({ty}) ({val}))\"\n+    if val.address is None:\n+        raise ValueError(f\"Cannot further evaluate rvalue: {val}\")\n+    return f\"(* ({ty}*) ({val.address}))\"\n+\n+\n+def is_char_star(ty):\n+    # Note that \"const char*\" can have TYPE_CODE_INT as target type...\n+    ty = get_basic_type(ty)\n+    return (ty.code == gdb.TYPE_CODE_PTR and\n+            get_basic_type(ty.target()).code\n+                in (gdb.TYPE_CODE_CHAR, gdb.TYPE_CODE_INT))\n+\n+\n+def deref(val):\n+    \"\"\"\n+    Dereference a raw or smart pointer.\n+    \"\"\"\n+    ty = get_basic_type(val.type)\n+    if ty.code == gdb.TYPE_CODE_PTR:\n+        return val.dereference()\n+    if ty.name.startswith('std::'):\n+        if \"shared\" in ty.name:\n+            return SharedPtr(val).value\n+        if \"unique\" in ty.name:\n+            return UniquePtr(val).value\n+    raise TypeError(f\"Cannot dereference value of type '{ty.name}'\")\n+\n+\n+_string_literal_mapping = {\n+    ord('\\\\'): r'\\\\',\n+    ord('\\n'): r'\\n',\n+    ord('\\r'): r'\\r',\n+    ord('\\t'): r'\\t',\n+    ord('\"'): r'\\\"',\n+}\n+\n+for c in range(0, 32):\n+    if c not in _string_literal_mapping:\n+        _string_literal_mapping[c] = f\"\\\\x{c:02x}\"\n+\n+\n+def string_literal(s):\n+    \"\"\"\n+    Format a Python string or gdb.Value for display as a literal.\n+    \"\"\"\n+    max_len = 50\n+    if isinstance(s, gdb.Value):\n+        s = s.string()\n+    if len(s) > max_len:\n+        s = s[:max_len]\n+        return '\"' + s.translate(_string_literal_mapping) + '\" [continued]'\n+    else:\n+        return '\"' + s.translate(_string_literal_mapping) + '\"'\n+\n+\n+def bytes_literal(val, size=None):\n+    \"\"\"\n+    Format a gdb.Value for display as a literal containing possibly\n+    unprintable characters.\n+    \"\"\"\n+    return val.lazy_string(length=size).value()\n+\n+\n+def utf8_literal(val, size=None):\n+    \"\"\"\n+    Format a gdb.Value for display as a utf-8 literal.\n+    \"\"\"\n+    if size is None:\n+        s = val.string(encoding='utf8', errors='backslashreplace')\n+    elif size != 0:\n+        s = val.string(encoding='utf8', errors='backslashreplace', length=size)\n+    else:\n+        s = \"\"\n+    return string_literal(s)\n+\n+\n+def half_float_value(val):\n+    \"\"\"\n+    Return a Python float of the given half-float (represented as a uint64_t\n+    gdb.Value).\n+    \"\"\"\n+    buf = gdb.selected_inferior().read_memory(val.address, 2)\n+    return struct.unpack(\"e\", buf)[0]\n+\n+\n+def load_atomic(val):\n+    \"\"\"\n+    Load a std::atomic<T>'s value.\n+    \"\"\"\n+    valty = val.type.template_argument(0)\n+    # XXX This assumes std::atomic<T> has the same layout as a raw T.\n+    return val.address.reinterpret_cast(valty.pointer()).dereference()\n+\n+\n+def load_null_count(val):\n+    \"\"\"\n+    Load a null count from a gdb.Value of an integer (either atomic or not).\n+    \"\"\"\n+    if get_basic_type(val.type).code != gdb.TYPE_CODE_INT:\n+        val = load_atomic(val)\n+    return val\n+\n+\n+def format_null_count(val):\n+    \"\"\"\n+    Format a null count value.\n+    \"\"\"\n+    if not isinstance(val, int):\n+        null_count = int(load_null_count(val))\n+    return (f\"null count {null_count}\" if null_count != -1\n+            else \"unknown null count\")\n+\n+\n+def short_time_unit(val):\n+    return ['s', 'ms', 'us', 'ns'][int(val)]\n+\n+\n+def format_month_interval(val):\n+    \"\"\"\n+    Format a MonthInterval value.\n+    \"\"\"\n+    return f\"{int(val)}M\"\n+\n+\n+def cast_to_concrete(val, ty):\n+    return (val.reference_value().reinterpret_cast(ty.reference())\n+            .referenced_value())\n+\n+\n+def scalar_class_from_type(name):\n+    \"\"\"\n+    Given a DataTypeClass class name (such as \"BooleanType\"), return the\n+    corresponding Scalar class name.\n+    \"\"\"\n+    assert name.endswith(\"Type\")\n+    return name[:-4] + \"Scalar\"\n+\n+\n+def array_class_from_type(name):\n+    \"\"\"\n+    Given a DataTypeClass class name (such as \"BooleanType\"), return the\n+    corresponding Array class name.\n+    \"\"\"\n+    assert name.endswith(\"Type\")\n+    return name[:-4] + \"Array\"\n+\n+\n+class CString:\n+    \"\"\"\n+    A `const char*` or similar value.\n+    \"\"\"\n+\n+    def __init__(self, val):\n+        self.val = val\n+\n+    def __bool__(self):\n+        return int(data) != 0 and int(data[0]) != 0\n+\n+    @property\n+    def data(self):\n+        return self.val\n+\n+    def bytes_literal(self):\n+        return self.val.lazy_string().value()\n+\n+    def string_literal(self):\n+        # XXX use lazy_string() as well?\n+        return string_literal(self.val)\n+\n+    def string(self):\n+        return self.val.string()\n+\n+    def __format__(self, fmt):\n+        return str(self.bytes_literal())\n+\n+\n+# NOTE: gdb.parse_and_eval() is *slow* and calling it multiple times\n+# may add noticeable latencies.  For standard C++ classes, we therefore\n+# try to fetch their properties from libstdc++ internals (which hopefully\n+# are stable), before falling back on calling the public API methods.\n+\n+class SharedPtr:\n+    \"\"\"\n+    A `std::shared_ptr<T>` value.\n+    \"\"\"\n+\n+    def __init__(self, val):\n+        self.val = val\n+        try:\n+            # libstdc++ internals\n+            self._ptr = val['_M_ptr']\n+        except gdb.error:\n+            # fallback for other C++ standard libraries\n+            self._ptr = gdb.parse_and_eval(f\"{for_evaluation(val)}.get()\")\n\nReview comment:\n       Would it be worth extracting a helper function like\r\n   ```suggestion\r\n           self._ptr = get_or_evaluate(lambda: val['_M_ptr'], # libstdc++\r\n                                       lambda: val['__ptr_'], # libcxx\r\n                                       f\"{for_evaluation(val)}.get()\")\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-20T16:18:23.745+0000",
                    "updated": "2022-01-20T16:18:23.745+0000",
                    "started": "2022-01-20T16:18:23.745+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "712164",
                    "issueId": "13377860"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377860/worklog/712212",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #12092:\nURL: https://github.com/apache/arrow/pull/12092#issuecomment-1017740010\n\n\n   Writing documentation is covered in https://issues.apache.org/jira/browse/ARROW-15390\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-20T17:22:44.716+0000",
                    "updated": "2022-01-20T17:22:44.716+0000",
                    "started": "2022-01-20T17:22:44.715+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "712212",
                    "issueId": "13377860"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377860/worklog/712214",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12092:\nURL: https://github.com/apache/arrow/pull/12092#discussion_r788987815\n\n\n\n##########\nFile path: cpp/gdb_arrow.py\n##########\n@@ -0,0 +1,1894 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+from collections import namedtuple\n+from collections.abc import Sequence\n+import decimal\n+import enum\n+from functools import lru_cache, partial\n+import struct\n+import sys\n+import warnings\n+\n+import gdb\n+from gdb.types import get_basic_type\n+\n+# gdb API docs at https://sourceware.org/gdb/onlinedocs/gdb/Python-API.html#Python-API\n+\n+# TODO check guidelines here: https://sourceware.org/gdb/onlinedocs/gdb/Writing-a-Pretty_002dPrinter.html\n+# TODO investigate auto-loading: https://sourceware.org/gdb/onlinedocs/gdb/Auto_002dloading-extensions.html#Auto_002dloading-extensions\n+\n+\n+_type_ids = [\n+    'NA', 'BOOL', 'UINT8', 'INT8', 'UINT16', 'INT16', 'UINT32', 'INT32',\n+    'UINT64', 'INT64', 'HALF_FLOAT', 'FLOAT', 'DOUBLE', 'STRING', 'BINARY',\n+    'FIXED_SIZE_BINARY', 'DATE32', 'DATE64', 'TIMESTAMP', 'TIME32', 'TIME64',\n+    'INTERVAL_MONTHS', 'INTERVAL_DAY_TIME', 'DECIMAL128', 'DECIMAL256',\n+    'LIST', 'STRUCT', 'SPARSE_UNION', 'DENSE_UNION', 'DICTIONARY', 'MAP',\n+    'EXTENSION', 'FIXED_SIZE_LIST', 'DURATION', 'LARGE_STRING',\n+    'LARGE_BINARY', 'LARGE_LIST', 'INTERVAL_MONTH_DAY_NANO']\n+\n+# Mirror the C++ Type::type enum\n+Type = enum.IntEnum('Type', _type_ids, start=0)\n+\n+\n+@lru_cache()\n+def byte_order():\n+    \"\"\"\n+    Get the target program (not the GDB host's) endianness.\n+    \"\"\"\n+    s = gdb.execute(\"show endian\", to_string=True).strip()\n+    if 'big' in s:\n+        return 'big'\n+    elif 'little' in s:\n+        return 'little'\n+    warnings.warn('Could not determine target endianness '\n+                  f'from GDB\\'s response:\\n\"\"\"{s}\"\"\"')\n+    # Fall back to host endianness\n+    return sys.byteorder\n+\n+\n+def for_evaluation(val, ty=None):\n+    \"\"\"\n+    Return a parsable form of gdb.Value `val`, optionally with gdb.Type `ty`.\n+    \"\"\"\n+    if ty is None:\n+        ty = get_basic_type(val.type)\n+    if ty.code == gdb.TYPE_CODE_PTR:\n+        # It's already a pointer, can represent it directly\n+        return f\"(({ty}) ({val}))\"\n+    if val.address is None:\n+        raise ValueError(f\"Cannot further evaluate rvalue: {val}\")\n+    return f\"(* ({ty}*) ({val.address}))\"\n+\n+\n+def is_char_star(ty):\n+    # Note that \"const char*\" can have TYPE_CODE_INT as target type...\n+    ty = get_basic_type(ty)\n+    return (ty.code == gdb.TYPE_CODE_PTR and\n+            get_basic_type(ty.target()).code\n+                in (gdb.TYPE_CODE_CHAR, gdb.TYPE_CODE_INT))\n+\n+\n+def deref(val):\n+    \"\"\"\n+    Dereference a raw or smart pointer.\n+    \"\"\"\n+    ty = get_basic_type(val.type)\n+    if ty.code == gdb.TYPE_CODE_PTR:\n+        return val.dereference()\n+    if ty.name.startswith('std::'):\n+        if \"shared\" in ty.name:\n+            return SharedPtr(val).value\n+        if \"unique\" in ty.name:\n+            return UniquePtr(val).value\n+    raise TypeError(f\"Cannot dereference value of type '{ty.name}'\")\n+\n+\n+_string_literal_mapping = {\n+    ord('\\\\'): r'\\\\',\n+    ord('\\n'): r'\\n',\n+    ord('\\r'): r'\\r',\n+    ord('\\t'): r'\\t',\n+    ord('\"'): r'\\\"',\n+}\n+\n+for c in range(0, 32):\n+    if c not in _string_literal_mapping:\n+        _string_literal_mapping[c] = f\"\\\\x{c:02x}\"\n+\n+\n+def string_literal(s):\n+    \"\"\"\n+    Format a Python string or gdb.Value for display as a literal.\n+    \"\"\"\n+    max_len = 50\n+    if isinstance(s, gdb.Value):\n+        s = s.string()\n+    if len(s) > max_len:\n+        s = s[:max_len]\n+        return '\"' + s.translate(_string_literal_mapping) + '\" [continued]'\n+    else:\n+        return '\"' + s.translate(_string_literal_mapping) + '\"'\n+\n+\n+def bytes_literal(val, size=None):\n+    \"\"\"\n+    Format a gdb.Value for display as a literal containing possibly\n+    unprintable characters.\n+    \"\"\"\n+    return val.lazy_string(length=size).value()\n+\n+\n+def utf8_literal(val, size=None):\n+    \"\"\"\n+    Format a gdb.Value for display as a utf-8 literal.\n+    \"\"\"\n+    if size is None:\n+        s = val.string(encoding='utf8', errors='backslashreplace')\n+    elif size != 0:\n+        s = val.string(encoding='utf8', errors='backslashreplace', length=size)\n+    else:\n+        s = \"\"\n+    return string_literal(s)\n+\n+\n+def half_float_value(val):\n+    \"\"\"\n+    Return a Python float of the given half-float (represented as a uint64_t\n+    gdb.Value).\n+    \"\"\"\n+    buf = gdb.selected_inferior().read_memory(val.address, 2)\n+    return struct.unpack(\"e\", buf)[0]\n+\n+\n+def load_atomic(val):\n+    \"\"\"\n+    Load a std::atomic<T>'s value.\n+    \"\"\"\n+    valty = val.type.template_argument(0)\n+    # XXX This assumes std::atomic<T> has the same layout as a raw T.\n+    return val.address.reinterpret_cast(valty.pointer()).dereference()\n+\n+\n+def load_null_count(val):\n+    \"\"\"\n+    Load a null count from a gdb.Value of an integer (either atomic or not).\n+    \"\"\"\n+    if get_basic_type(val.type).code != gdb.TYPE_CODE_INT:\n+        val = load_atomic(val)\n+    return val\n+\n+\n+def format_null_count(val):\n+    \"\"\"\n+    Format a null count value.\n+    \"\"\"\n+    if not isinstance(val, int):\n+        null_count = int(load_null_count(val))\n+    return (f\"null count {null_count}\" if null_count != -1\n+            else \"unknown null count\")\n+\n+\n+def short_time_unit(val):\n+    return ['s', 'ms', 'us', 'ns'][int(val)]\n+\n+\n+def format_month_interval(val):\n+    \"\"\"\n+    Format a MonthInterval value.\n+    \"\"\"\n+    return f\"{int(val)}M\"\n+\n+\n+def cast_to_concrete(val, ty):\n+    return (val.reference_value().reinterpret_cast(ty.reference())\n+            .referenced_value())\n+\n+\n+def scalar_class_from_type(name):\n+    \"\"\"\n+    Given a DataTypeClass class name (such as \"BooleanType\"), return the\n+    corresponding Scalar class name.\n+    \"\"\"\n+    assert name.endswith(\"Type\")\n+    return name[:-4] + \"Scalar\"\n+\n+\n+def array_class_from_type(name):\n+    \"\"\"\n+    Given a DataTypeClass class name (such as \"BooleanType\"), return the\n+    corresponding Array class name.\n+    \"\"\"\n+    assert name.endswith(\"Type\")\n+    return name[:-4] + \"Array\"\n+\n+\n+class CString:\n+    \"\"\"\n+    A `const char*` or similar value.\n+    \"\"\"\n+\n+    def __init__(self, val):\n+        self.val = val\n+\n+    def __bool__(self):\n+        return int(data) != 0 and int(data[0]) != 0\n+\n+    @property\n+    def data(self):\n+        return self.val\n+\n+    def bytes_literal(self):\n+        return self.val.lazy_string().value()\n+\n+    def string_literal(self):\n+        # XXX use lazy_string() as well?\n+        return string_literal(self.val)\n+\n+    def string(self):\n+        return self.val.string()\n+\n+    def __format__(self, fmt):\n+        return str(self.bytes_literal())\n+\n+\n+# NOTE: gdb.parse_and_eval() is *slow* and calling it multiple times\n+# may add noticeable latencies.  For standard C++ classes, we therefore\n+# try to fetch their properties from libstdc++ internals (which hopefully\n+# are stable), before falling back on calling the public API methods.\n+\n+class SharedPtr:\n+    \"\"\"\n+    A `std::shared_ptr<T>` value.\n+    \"\"\"\n+\n+    def __init__(self, val):\n+        self.val = val\n+        try:\n+            # libstdc++ internals\n+            self._ptr = val['_M_ptr']\n+        except gdb.error:\n+            # fallback for other C++ standard libraries\n+            self._ptr = gdb.parse_and_eval(f\"{for_evaluation(val)}.get()\")\n\nReview comment:\n       Hmm, as you can see in the `StdVector` constructor, there can be a bit more divergence, so I'm not sure a simple get/fallback function would suffice.\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-20T17:24:30.162+0000",
                    "updated": "2022-01-20T17:24:30.162+0000",
                    "started": "2022-01-20T17:24:30.162+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "712214",
                    "issueId": "13377860"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377860/worklog/712229",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #12092:\nURL: https://github.com/apache/arrow/pull/12092#issuecomment-1017755810\n\n\n   Crossbow Python builds at https://github.com/ursacomputing/crossbow/branches/all?page=1&query=build-591\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-20T17:40:19.757+0000",
                    "updated": "2022-01-20T17:40:19.757+0000",
                    "started": "2022-01-20T17:40:19.757+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "712229",
                    "issueId": "13377860"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377860/worklog/712242",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #12092:\nURL: https://github.com/apache/arrow/pull/12092\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-20T17:49:34.553+0000",
                    "updated": "2022-01-20T17:49:34.553+0000",
                    "started": "2022-01-20T17:49:34.553+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "712242",
                    "issueId": "13377860"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377860/worklog/712244",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #12092:\nURL: https://github.com/apache/arrow/pull/12092#issuecomment-1017765706\n\n\n   Benchmark runs are scheduled for baseline = b1b8728ee692359f6990ef8d188c88f482f632b6 and contender = a3efe72f99b1b9f23b1d11afc648f4306d32e330. a3efe72f99b1b9f23b1d11afc648f4306d32e330 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/4e6ed509334c43d784135bb1715b117e...dd608f6a1bda4922bef705ab08bbda9a/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/66846def44e44692b9d087781442d177...f58de9bb70fe4030a1a0ef40544d0969/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/3a66c0a7c9c148afbe323eda941a8d83...202c60eaf7714fb989ca8db120a552ed/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-20T17:52:05.330+0000",
                    "updated": "2022-01-20T17:52:05.330+0000",
                    "started": "2022-01-20T17:52:05.330+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "712244",
                    "issueId": "13377860"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377860/worklog/712260",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12092:\nURL: https://github.com/apache/arrow/pull/12092#issuecomment-1017765706\n\n\n   Benchmark runs are scheduled for baseline = b1b8728ee692359f6990ef8d188c88f482f632b6 and contender = a3efe72f99b1b9f23b1d11afc648f4306d32e330. a3efe72f99b1b9f23b1d11afc648f4306d32e330 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/4e6ed509334c43d784135bb1715b117e...dd608f6a1bda4922bef705ab08bbda9a/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/66846def44e44692b9d087781442d177...f58de9bb70fe4030a1a0ef40544d0969/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/3a66c0a7c9c148afbe323eda941a8d83...202c60eaf7714fb989ca8db120a552ed/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-20T18:12:04.135+0000",
                    "updated": "2022-01-20T18:12:04.135+0000",
                    "started": "2022-01-20T18:12:04.135+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "712260",
                    "issueId": "13377860"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377860/worklog/712976",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12092:\nURL: https://github.com/apache/arrow/pull/12092#issuecomment-1017765706\n\n\n   Benchmark runs are scheduled for baseline = b1b8728ee692359f6990ef8d188c88f482f632b6 and contender = a3efe72f99b1b9f23b1d11afc648f4306d32e330. a3efe72f99b1b9f23b1d11afc648f4306d32e330 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/4e6ed509334c43d784135bb1715b117e...dd608f6a1bda4922bef705ab08bbda9a/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/66846def44e44692b9d087781442d177...f58de9bb70fe4030a1a0ef40544d0969/)\n   [Finished :arrow_down:0.43% :arrow_up:0.13%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/3a66c0a7c9c148afbe323eda941a8d83...202c60eaf7714fb989ca8db120a552ed/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-21T16:51:49.057+0000",
                    "updated": "2022-01-21T16:51:49.057+0000",
                    "started": "2022-01-21T16:51:49.057+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "712976",
                    "issueId": "13377860"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377860/worklog/713230",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12092:\nURL: https://github.com/apache/arrow/pull/12092#issuecomment-1017765706\n\n\n   Benchmark runs are scheduled for baseline = b1b8728ee692359f6990ef8d188c88f482f632b6 and contender = a3efe72f99b1b9f23b1d11afc648f4306d32e330. a3efe72f99b1b9f23b1d11afc648f4306d32e330 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/4e6ed509334c43d784135bb1715b117e...dd608f6a1bda4922bef705ab08bbda9a/)\n   [Failed :arrow_down:0.0% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/66846def44e44692b9d087781442d177...f58de9bb70fe4030a1a0ef40544d0969/)\n   [Finished :arrow_down:0.43% :arrow_up:0.13%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/3a66c0a7c9c148afbe323eda941a8d83...202c60eaf7714fb989ca8db120a552ed/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-22T16:21:36.686+0000",
                    "updated": "2022-01-22T16:21:36.686+0000",
                    "started": "2022-01-22T16:21:36.685+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "713230",
                    "issueId": "13377860"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
            "id": "5",
            "description": "General wishlist item.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Wish",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6b2573e3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@50ba99f7[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@29220697[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2dd35765[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@23e0e884[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@cc68fa6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@35e92617[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2b637b0[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26365baa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1eb55b75[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62101f2a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@51a8af6f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jan 20 17:49:25 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-20T17:49:25.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12735/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2021-05-11T12:26:54.000+0000",
        "updated": "2022-01-22T16:21:37.000+0000",
        "timeoriginalestimate": null,
        "description": "One common issue when using gdb with Arrow is that it's non-trivial to explore and display Arrow data and metadata using built-in gdb functionality. One usually needs lots of hand typing of expressions.\r\n\r\nOne way to alleviate this would be to write a gdb plugin giving a higher-level view of Arrow C++ objects. This should be possible using the gdb Python API (though not trivial):\r\nhttps://sourceware.org/gdb/current/onlinedocs/gdb/Python.html#Python\r\n\r\nA simple example:\r\nhttps://github.com/nlohmann/json/tree/develop/third_party/gdb_pretty_printer\r\n\r\nA sophisticated example of this is the gdb plugin for Python itself:\r\nhttps://github.com/python/cpython/blob/main/Tools/gdb/libpython.py\r\n\r\nRelated:\r\nhttps://interrupt.memfault.com/blog/gdbundle-plugin-manager\r\nhttps://github.com/memfault/gdbundle\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dev] Write gdb plugin",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377860/comment/17342787",
                    "id": "17342787",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "+1\u00a0 for this.\u00a0 I played\u00a0 around with it a bit.\u00a0\u00a0 Some specific features that would be nice:\r\n\r\n\u00a0\r\n * Better pretty printing of `Datum`, right now I think it shows up as a giant variant blob\r\n * Ability to easily get at the buffers of an array and visualize them as hex\r\n * gdb functions that hook into the Arrow pretty print methods",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-05-11T18:16:54.164+0000",
                    "updated": "2021-05-11T18:16:54.164+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377860/comment/17479544",
                    "id": "17479544",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 12092\n[https://github.com/apache/arrow/pull/12092]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-01-20T17:49:25.213+0000",
                    "updated": "2022-01-20T17:49:25.213+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0qxk0:",
        "customfield_12314139": null
    }
}