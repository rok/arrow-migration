{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13305586",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586",
    "key": "ARROW-8841",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=frank.du",
            "name": "frank.du",
            "key": "frank.du",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Frank Du",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=frank.du",
            "name": "frank.du",
            "key": "frank.du",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Frank Du",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=frank.du",
            "name": "frank.du",
            "key": "frank.du",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Frank Du",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8841/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 22,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434294",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jianxind opened a new pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213\n\n\n   Benchmark(1%, 10%, 50% null probabilities) and unittest for future SIMD optimizations.\r\n   \r\n   Signed-off-by: Frank Du <frank.du@intel.com>\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-18T04:15:28.325+0000",
                    "updated": "2020-05-18T04:15:28.325+0000",
                    "started": "2020-05-18T04:15:28.325+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434294",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434296",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#issuecomment-629936118\n\n\n   https://issues.apache.org/jira/browse/ARROW-8841\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-18T04:16:57.026+0000",
                    "updated": "2020-05-18T04:16:57.026+0000",
                    "started": "2020-05-18T04:16:57.026+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434296",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434419",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#issuecomment-630226330\n\n\n   Suggestions:\r\n   * Either `Int32` and `Int64`, or `Float` and `Double`, are sufficient; I don't think both at the same time are useful (they should use the same respective code paths)\r\n   * It may be nice to add tests with null probability 90% and 99%\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-18T14:38:41.667+0000",
                    "updated": "2020-05-18T14:38:41.667+0000",
                    "started": "2020-05-18T14:38:41.667+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434419",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434543",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#discussion_r426827408\n\n\n\n##########\nFile path: cpp/src/parquet/encoding_benchmark.cc\n##########\n@@ -199,6 +200,153 @@ static void BM_PlainDecodingFloat(benchmark::State& state) {\n \n BENCHMARK(BM_PlainDecodingFloat)->Range(MIN_RANGE, MAX_RANGE);\n \n+static void BM_PlainSpacedArgs(benchmark::internal::Benchmark* bench) {\n+  static const auto BM_kPlainSpacedSize =\n+      arrow::internal::CpuInfo::GetInstance()->CacheSize(\n+          arrow::internal::CpuInfo::L1_CACHE);\n+\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/1});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/10});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/50});\n+}\n+\n+static void BM_PlainEncodingSpacedBoolean(benchmark::State& state) {\n+  const auto num_values = state.range(0);\n+  const double null_percent = static_cast<double>(state.range(1)) / 100.0;\n+\n+  const auto values = new bool[num_values];\n\nReview comment:\n       Use std::vector.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-18T18:50:06.096+0000",
                    "updated": "2020-05-18T18:50:06.096+0000",
                    "started": "2020-05-18T18:50:06.096+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434543",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434726",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jianxind commented on a change in pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#discussion_r426976016\n\n\n\n##########\nFile path: cpp/src/parquet/encoding_benchmark.cc\n##########\n@@ -199,6 +200,153 @@ static void BM_PlainDecodingFloat(benchmark::State& state) {\n \n BENCHMARK(BM_PlainDecodingFloat)->Range(MIN_RANGE, MAX_RANGE);\n \n+static void BM_PlainSpacedArgs(benchmark::internal::Benchmark* bench) {\n+  static const auto BM_kPlainSpacedSize =\n+      arrow::internal::CpuInfo::GetInstance()->CacheSize(\n+          arrow::internal::CpuInfo::L1_CACHE);\n+\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/1});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/10});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/50});\n+}\n+\n+static void BM_PlainEncodingSpacedBoolean(benchmark::State& state) {\n+  const auto num_values = state.range(0);\n+  const double null_percent = static_cast<double>(state.range(1)) / 100.0;\n+\n+  const auto values = new bool[num_values];\n\nReview comment:\n       Unlike the Put which support both T* and vector inputs, current PutSpaced only has interface to T*. I has to use bool[] here, it still need convert to bool* if using std::vector<bool>. \r\n     virtual void Put(const T* src, int num_values) = 0;\r\n     virtual void Put(const std::vector<T>& src, int num_values = -1);\r\n     virtual void PutSpaced(const T* src, int num_values, const uint8_t* valid_bits,\r\n                            int64_t valid_bits_offset) = 0;\r\n   \r\n   Another alternate way is std::vector<uint8_t> instead, and reinterpret_cast the data of std::vector<uint8_t> to bool?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T01:18:47.204+0000",
                    "updated": "2020-05-19T01:18:47.204+0000",
                    "started": "2020-05-19T01:18:47.204+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434726",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434731",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jianxind commented on pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#issuecomment-630520835\n\n\n   > Suggestions:\r\n   > \r\n   > * Either `Int32` and `Int64`, or `Float` and `Double`, are sufficient; I don't think both at the same time are useful (they should use the same respective code paths)\r\n   > * It may be nice to add tests with null probability 90% and 99%\r\n   \r\n   Thanks. Yes the int32/int64 are the same path to float/double, even for SIMD, I removed it. 90% and 99% added also.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T01:26:52.326+0000",
                    "updated": "2020-05-19T01:26:52.326+0000",
                    "started": "2020-05-19T01:26:52.326+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434731",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434734",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#discussion_r426979057\n\n\n\n##########\nFile path: cpp/src/parquet/encoding_benchmark.cc\n##########\n@@ -199,6 +200,153 @@ static void BM_PlainDecodingFloat(benchmark::State& state) {\n \n BENCHMARK(BM_PlainDecodingFloat)->Range(MIN_RANGE, MAX_RANGE);\n \n+static void BM_PlainSpacedArgs(benchmark::internal::Benchmark* bench) {\n+  static const auto BM_kPlainSpacedSize =\n+      arrow::internal::CpuInfo::GetInstance()->CacheSize(\n+          arrow::internal::CpuInfo::L1_CACHE);\n+\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/1});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/10});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/50});\n+}\n+\n+static void BM_PlainEncodingSpacedBoolean(benchmark::State& state) {\n+  const auto num_values = state.range(0);\n+  const double null_percent = static_cast<double>(state.range(1)) / 100.0;\n+\n+  const auto values = new bool[num_values];\n\nReview comment:\n       I forgot about the bit-packing of std::vector<bool>. But yes, a std::vector<char> with `static_cast<bool*>(values.data()) should work. Or just use Int8Array like the other benchmark. It might be worth adding a quick comment about this discrepancy.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T01:30:56.443+0000",
                    "updated": "2020-05-19T01:30:56.443+0000",
                    "started": "2020-05-19T01:30:56.443+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434734",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434735",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#discussion_r426979057\n\n\n\n##########\nFile path: cpp/src/parquet/encoding_benchmark.cc\n##########\n@@ -199,6 +200,153 @@ static void BM_PlainDecodingFloat(benchmark::State& state) {\n \n BENCHMARK(BM_PlainDecodingFloat)->Range(MIN_RANGE, MAX_RANGE);\n \n+static void BM_PlainSpacedArgs(benchmark::internal::Benchmark* bench) {\n+  static const auto BM_kPlainSpacedSize =\n+      arrow::internal::CpuInfo::GetInstance()->CacheSize(\n+          arrow::internal::CpuInfo::L1_CACHE);\n+\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/1});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/10});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/50});\n+}\n+\n+static void BM_PlainEncodingSpacedBoolean(benchmark::State& state) {\n+  const auto num_values = state.range(0);\n+  const double null_percent = static_cast<double>(state.range(1)) / 100.0;\n+\n+  const auto values = new bool[num_values];\n\nReview comment:\n       I forgot about the bit-packing of std::vector<bool>. But yes, a `std::vector<char>` with `static_cast<bool*>(values.data()) should work. Or just use Int8Array like the other benchmark. It might be worth adding a quick comment about this discrepancy.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T01:31:21.762+0000",
                    "updated": "2020-05-19T01:31:21.762+0000",
                    "started": "2020-05-19T01:31:21.762+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434735",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434736",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#discussion_r426979057\n\n\n\n##########\nFile path: cpp/src/parquet/encoding_benchmark.cc\n##########\n@@ -199,6 +200,153 @@ static void BM_PlainDecodingFloat(benchmark::State& state) {\n \n BENCHMARK(BM_PlainDecodingFloat)->Range(MIN_RANGE, MAX_RANGE);\n \n+static void BM_PlainSpacedArgs(benchmark::internal::Benchmark* bench) {\n+  static const auto BM_kPlainSpacedSize =\n+      arrow::internal::CpuInfo::GetInstance()->CacheSize(\n+          arrow::internal::CpuInfo::L1_CACHE);\n+\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/1});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/10});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/50});\n+}\n+\n+static void BM_PlainEncodingSpacedBoolean(benchmark::State& state) {\n+  const auto num_values = state.range(0);\n+  const double null_percent = static_cast<double>(state.range(1)) / 100.0;\n+\n+  const auto values = new bool[num_values];\n\nReview comment:\n       I forgot about the bit-packing of std::vector<bool>. But yes, a `std::vector<char>` with `static_cast<bool*>(values.data())` should work. Or just use Int8Array like the other benchmark. It might be worth adding a quick comment about this discrepancy.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T01:31:35.092+0000",
                    "updated": "2020-05-19T01:31:35.092+0000",
                    "started": "2020-05-19T01:31:35.092+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434736",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434778",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jianxind commented on a change in pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#discussion_r427009705\n\n\n\n##########\nFile path: cpp/src/parquet/encoding_benchmark.cc\n##########\n@@ -199,6 +200,153 @@ static void BM_PlainDecodingFloat(benchmark::State& state) {\n \n BENCHMARK(BM_PlainDecodingFloat)->Range(MIN_RANGE, MAX_RANGE);\n \n+static void BM_PlainSpacedArgs(benchmark::internal::Benchmark* bench) {\n+  static const auto BM_kPlainSpacedSize =\n+      arrow::internal::CpuInfo::GetInstance()->CacheSize(\n+          arrow::internal::CpuInfo::L1_CACHE);\n+\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/1});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/10});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/50});\n+}\n+\n+static void BM_PlainEncodingSpacedBoolean(benchmark::State& state) {\n+  const auto num_values = state.range(0);\n+  const double null_percent = static_cast<double>(state.range(1)) / 100.0;\n+\n+  const auto values = new bool[num_values];\n\nReview comment:\n       Good catch to use Int8Array thus we can reuse the template for bool also. Thanks. Uploaded the change.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T03:31:19.922+0000",
                    "updated": "2020-05-19T03:31:19.922+0000",
                    "started": "2020-05-19T03:31:19.921+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434778",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434821",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#discussion_r427099420\n\n\n\n##########\nFile path: cpp/src/parquet/encoding_benchmark.cc\n##########\n@@ -199,6 +200,130 @@ static void BM_PlainDecodingFloat(benchmark::State& state) {\n \n BENCHMARK(BM_PlainDecodingFloat)->Range(MIN_RANGE, MAX_RANGE);\n \n+template <typename ParquetType>\n+struct BM_SpacedEncodingTraits;\n+\n+template <>\n+struct BM_SpacedEncodingTraits<BooleanType> {\n+  // Leverage UInt8 vector array data for Boolean, the input src of PutSpaced is bool*\n+  using ArrowType = ::arrow::UInt8Type;\n+  using ArrayType = ::arrow::UInt8Array;\n+  using CType = bool;\n+};\n+\n+template <>\n+struct BM_SpacedEncodingTraits<FloatType> {\n+  using ArrowType = typename EncodingTraits<FloatType>::ArrowType;\n+  using ArrayType = typename arrow::TypeTraits<ArrowType>::ArrayType;\n+  using CType = typename FloatType::c_type;\n+};\n+\n+template <>\n+struct BM_SpacedEncodingTraits<DoubleType> {\n+  using ArrowType = typename EncodingTraits<DoubleType>::ArrowType;\n+  using ArrayType = typename arrow::TypeTraits<ArrowType>::ArrayType;\n+  using CType = typename DoubleType::c_type;\n+};\n+\n+static void BM_PlainSpacedArgs(benchmark::internal::Benchmark* bench) {\n+  static const auto BM_kPlainSpacedSize =\n+      arrow::internal::CpuInfo::GetInstance()->CacheSize(\n+          arrow::internal::CpuInfo::L1_CACHE);\n+\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/1});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/10});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/50});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/90});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/99});\n+}\n+\n+template <typename ParquetType>\n+static void BM_PlainEncodingSpaced(benchmark::State& state) {\n+  using ArrowType = typename BM_SpacedEncodingTraits<ParquetType>::ArrowType;\n+  using ArrayType = typename BM_SpacedEncodingTraits<ParquetType>::ArrayType;\n+  using CType = typename BM_SpacedEncodingTraits<ParquetType>::CType;\n+\n+  const auto num_values = state.range(0);\n+  const double null_percent = static_cast<double>(state.range(1)) / 100.0;\n+\n+  auto rand = ::arrow::random::RandomArrayGenerator(1923);\n+  const auto array = rand.Numeric<ArrowType>(num_values, -100, 100, null_percent);\n+  const auto valid_bits = array->null_bitmap_data();\n+  const auto array_actual = arrow::internal::checked_pointer_cast<ArrayType>(array);\n+\n+  auto encoder = MakeTypedEncoder<ParquetType>(Encoding::PLAIN);\n+  for (auto _ : state) {\n+    // Cast only happens for special BooleanType as it use UInt8 for the array data to\n+    // match a bool* input to PutSpaced.\n+    encoder->PutSpaced(reinterpret_cast<const CType*>(array_actual->raw_values()),\n+                       num_values, valid_bits, 0);\n+    encoder->FlushValues();\n+  }\n+  state.SetBytesProcessed(state.iterations() * num_values * sizeof(CType));\n+}\n+\n+static void BM_PlainEncodingSpacedBoolean(benchmark::State& state) {\n+  BM_PlainEncodingSpaced<BooleanType>(state);\n+}\n+BENCHMARK(BM_PlainEncodingSpacedBoolean)->Apply(BM_PlainSpacedArgs);\n+\n+static void BM_PlainEncodingSpacedFloat(benchmark::State& state) {\n+  BM_PlainEncodingSpaced<FloatType>(state);\n+}\n+BENCHMARK(BM_PlainEncodingSpacedFloat)->Apply(BM_PlainSpacedArgs);\n+\n+static void BM_PlainEncodingSpacedDouble(benchmark::State& state) {\n+  BM_PlainEncodingSpaced<DoubleType>(state);\n+}\n+BENCHMARK(BM_PlainEncodingSpacedDouble)->Apply(BM_PlainSpacedArgs);\n+\n+template <typename ParquetType>\n+static void BM_PlainDecodingSpaced(benchmark::State& state) {\n+  using ArrowType = typename BM_SpacedEncodingTraits<ParquetType>::ArrowType;\n+  using ArrayType = typename BM_SpacedEncodingTraits<ParquetType>::ArrayType;\n+  using CType = typename BM_SpacedEncodingTraits<ParquetType>::CType;\n+\n+  const auto num_values = state.range(0);\n+  const double null_percent = static_cast<double>(state.range(1)) / 100.0;\n+\n+  auto rand = ::arrow::random::RandomArrayGenerator(1923);\n+  const auto array = rand.Numeric<ArrowType>(num_values, -100, 100, null_percent);\n+  const auto valid_bits = array->null_bitmap_data();\n+  const auto null_count = array->null_count();\n+  const auto array_actual = arrow::internal::checked_pointer_cast<ArrayType>(array);\n+\n+  auto encoder = MakeTypedEncoder<ParquetType>(Encoding::PLAIN);\n+  // Cast only happens for special BooleanType as it use UInt8 for the array data to match\n+  // a bool* input to PutSpaced.\n\nReview comment:\n       Is `bool` guaranteed to be the same as `uint8_t`???\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T07:52:17.505+0000",
                    "updated": "2020-05-19T07:52:17.505+0000",
                    "started": "2020-05-19T07:52:17.505+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434821",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434822",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#discussion_r427099731\n\n\n\n##########\nFile path: cpp/src/parquet/encoding_benchmark.cc\n##########\n@@ -199,6 +200,130 @@ static void BM_PlainDecodingFloat(benchmark::State& state) {\n \n BENCHMARK(BM_PlainDecodingFloat)->Range(MIN_RANGE, MAX_RANGE);\n \n+template <typename ParquetType>\n+struct BM_SpacedEncodingTraits;\n+\n+template <>\n+struct BM_SpacedEncodingTraits<BooleanType> {\n+  // Leverage UInt8 vector array data for Boolean, the input src of PutSpaced is bool*\n+  using ArrowType = ::arrow::UInt8Type;\n+  using ArrayType = ::arrow::UInt8Array;\n+  using CType = bool;\n+};\n+\n+template <>\n+struct BM_SpacedEncodingTraits<FloatType> {\n+  using ArrowType = typename EncodingTraits<FloatType>::ArrowType;\n+  using ArrayType = typename arrow::TypeTraits<ArrowType>::ArrayType;\n+  using CType = typename FloatType::c_type;\n+};\n+\n+template <>\n+struct BM_SpacedEncodingTraits<DoubleType> {\n\nReview comment:\n       Instead of repeating yourself here, you could make this the default `BM_SpacedEncodingTraits`.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T07:52:50.698+0000",
                    "updated": "2020-05-19T07:52:50.698+0000",
                    "started": "2020-05-19T07:52:50.698+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434822",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434843",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jianxind commented on a change in pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#discussion_r427133113\n\n\n\n##########\nFile path: cpp/src/parquet/encoding_benchmark.cc\n##########\n@@ -199,6 +200,130 @@ static void BM_PlainDecodingFloat(benchmark::State& state) {\n \n BENCHMARK(BM_PlainDecodingFloat)->Range(MIN_RANGE, MAX_RANGE);\n \n+template <typename ParquetType>\n+struct BM_SpacedEncodingTraits;\n+\n+template <>\n+struct BM_SpacedEncodingTraits<BooleanType> {\n+  // Leverage UInt8 vector array data for Boolean, the input src of PutSpaced is bool*\n+  using ArrowType = ::arrow::UInt8Type;\n+  using ArrayType = ::arrow::UInt8Array;\n+  using CType = bool;\n+};\n+\n+template <>\n+struct BM_SpacedEncodingTraits<FloatType> {\n+  using ArrowType = typename EncodingTraits<FloatType>::ArrowType;\n+  using ArrayType = typename arrow::TypeTraits<ArrowType>::ArrayType;\n+  using CType = typename FloatType::c_type;\n+};\n+\n+template <>\n+struct BM_SpacedEncodingTraits<DoubleType> {\n\nReview comment:\n       Thanks, done.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T08:45:57.169+0000",
                    "updated": "2020-05-19T08:45:57.169+0000",
                    "started": "2020-05-19T08:45:57.169+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434843",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434844",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jianxind commented on a change in pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#discussion_r427133854\n\n\n\n##########\nFile path: cpp/src/parquet/encoding_benchmark.cc\n##########\n@@ -199,6 +200,130 @@ static void BM_PlainDecodingFloat(benchmark::State& state) {\n \n BENCHMARK(BM_PlainDecodingFloat)->Range(MIN_RANGE, MAX_RANGE);\n \n+template <typename ParquetType>\n+struct BM_SpacedEncodingTraits;\n+\n+template <>\n+struct BM_SpacedEncodingTraits<BooleanType> {\n+  // Leverage UInt8 vector array data for Boolean, the input src of PutSpaced is bool*\n+  using ArrowType = ::arrow::UInt8Type;\n+  using ArrayType = ::arrow::UInt8Array;\n+  using CType = bool;\n+};\n+\n+template <>\n+struct BM_SpacedEncodingTraits<FloatType> {\n+  using ArrowType = typename EncodingTraits<FloatType>::ArrowType;\n+  using ArrayType = typename arrow::TypeTraits<ArrowType>::ArrayType;\n+  using CType = typename FloatType::c_type;\n+};\n+\n+template <>\n+struct BM_SpacedEncodingTraits<DoubleType> {\n+  using ArrowType = typename EncodingTraits<DoubleType>::ArrowType;\n+  using ArrayType = typename arrow::TypeTraits<ArrowType>::ArrayType;\n+  using CType = typename DoubleType::c_type;\n+};\n+\n+static void BM_PlainSpacedArgs(benchmark::internal::Benchmark* bench) {\n+  static const auto BM_kPlainSpacedSize =\n+      arrow::internal::CpuInfo::GetInstance()->CacheSize(\n+          arrow::internal::CpuInfo::L1_CACHE);\n+\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/1});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/10});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/50});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/90});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/99});\n+}\n+\n+template <typename ParquetType>\n+static void BM_PlainEncodingSpaced(benchmark::State& state) {\n+  using ArrowType = typename BM_SpacedEncodingTraits<ParquetType>::ArrowType;\n+  using ArrayType = typename BM_SpacedEncodingTraits<ParquetType>::ArrayType;\n+  using CType = typename BM_SpacedEncodingTraits<ParquetType>::CType;\n+\n+  const auto num_values = state.range(0);\n+  const double null_percent = static_cast<double>(state.range(1)) / 100.0;\n+\n+  auto rand = ::arrow::random::RandomArrayGenerator(1923);\n+  const auto array = rand.Numeric<ArrowType>(num_values, -100, 100, null_percent);\n+  const auto valid_bits = array->null_bitmap_data();\n+  const auto array_actual = arrow::internal::checked_pointer_cast<ArrayType>(array);\n+\n+  auto encoder = MakeTypedEncoder<ParquetType>(Encoding::PLAIN);\n+  for (auto _ : state) {\n+    // Cast only happens for special BooleanType as it use UInt8 for the array data to\n+    // match a bool* input to PutSpaced.\n+    encoder->PutSpaced(reinterpret_cast<const CType*>(array_actual->raw_values()),\n+                       num_values, valid_bits, 0);\n+    encoder->FlushValues();\n+  }\n+  state.SetBytesProcessed(state.iterations() * num_values * sizeof(CType));\n+}\n+\n+static void BM_PlainEncodingSpacedBoolean(benchmark::State& state) {\n+  BM_PlainEncodingSpaced<BooleanType>(state);\n+}\n+BENCHMARK(BM_PlainEncodingSpacedBoolean)->Apply(BM_PlainSpacedArgs);\n+\n+static void BM_PlainEncodingSpacedFloat(benchmark::State& state) {\n+  BM_PlainEncodingSpaced<FloatType>(state);\n+}\n+BENCHMARK(BM_PlainEncodingSpacedFloat)->Apply(BM_PlainSpacedArgs);\n+\n+static void BM_PlainEncodingSpacedDouble(benchmark::State& state) {\n+  BM_PlainEncodingSpaced<DoubleType>(state);\n+}\n+BENCHMARK(BM_PlainEncodingSpacedDouble)->Apply(BM_PlainSpacedArgs);\n+\n+template <typename ParquetType>\n+static void BM_PlainDecodingSpaced(benchmark::State& state) {\n+  using ArrowType = typename BM_SpacedEncodingTraits<ParquetType>::ArrowType;\n+  using ArrayType = typename BM_SpacedEncodingTraits<ParquetType>::ArrayType;\n+  using CType = typename BM_SpacedEncodingTraits<ParquetType>::CType;\n+\n+  const auto num_values = state.range(0);\n+  const double null_percent = static_cast<double>(state.range(1)) / 100.0;\n+\n+  auto rand = ::arrow::random::RandomArrayGenerator(1923);\n+  const auto array = rand.Numeric<ArrowType>(num_values, -100, 100, null_percent);\n+  const auto valid_bits = array->null_bitmap_data();\n+  const auto null_count = array->null_count();\n+  const auto array_actual = arrow::internal::checked_pointer_cast<ArrayType>(array);\n+\n+  auto encoder = MakeTypedEncoder<ParquetType>(Encoding::PLAIN);\n+  // Cast only happens for special BooleanType as it use UInt8 for the array data to match\n+  // a bool* input to PutSpaced.\n\nReview comment:\n       I just added a static_assert to guarantee the size math between the cast\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T08:47:00.878+0000",
                    "updated": "2020-05-19T08:47:00.878+0000",
                    "started": "2020-05-19T08:47:00.878+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434844",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434845",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jianxind commented on a change in pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#discussion_r427133854\n\n\n\n##########\nFile path: cpp/src/parquet/encoding_benchmark.cc\n##########\n@@ -199,6 +200,130 @@ static void BM_PlainDecodingFloat(benchmark::State& state) {\n \n BENCHMARK(BM_PlainDecodingFloat)->Range(MIN_RANGE, MAX_RANGE);\n \n+template <typename ParquetType>\n+struct BM_SpacedEncodingTraits;\n+\n+template <>\n+struct BM_SpacedEncodingTraits<BooleanType> {\n+  // Leverage UInt8 vector array data for Boolean, the input src of PutSpaced is bool*\n+  using ArrowType = ::arrow::UInt8Type;\n+  using ArrayType = ::arrow::UInt8Array;\n+  using CType = bool;\n+};\n+\n+template <>\n+struct BM_SpacedEncodingTraits<FloatType> {\n+  using ArrowType = typename EncodingTraits<FloatType>::ArrowType;\n+  using ArrayType = typename arrow::TypeTraits<ArrowType>::ArrayType;\n+  using CType = typename FloatType::c_type;\n+};\n+\n+template <>\n+struct BM_SpacedEncodingTraits<DoubleType> {\n+  using ArrowType = typename EncodingTraits<DoubleType>::ArrowType;\n+  using ArrayType = typename arrow::TypeTraits<ArrowType>::ArrayType;\n+  using CType = typename DoubleType::c_type;\n+};\n+\n+static void BM_PlainSpacedArgs(benchmark::internal::Benchmark* bench) {\n+  static const auto BM_kPlainSpacedSize =\n+      arrow::internal::CpuInfo::GetInstance()->CacheSize(\n+          arrow::internal::CpuInfo::L1_CACHE);\n+\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/1});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/10});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/50});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/90});\n+  bench->Args({/*size*/ BM_kPlainSpacedSize, /*null_percentage=*/99});\n+}\n+\n+template <typename ParquetType>\n+static void BM_PlainEncodingSpaced(benchmark::State& state) {\n+  using ArrowType = typename BM_SpacedEncodingTraits<ParquetType>::ArrowType;\n+  using ArrayType = typename BM_SpacedEncodingTraits<ParquetType>::ArrayType;\n+  using CType = typename BM_SpacedEncodingTraits<ParquetType>::CType;\n+\n+  const auto num_values = state.range(0);\n+  const double null_percent = static_cast<double>(state.range(1)) / 100.0;\n+\n+  auto rand = ::arrow::random::RandomArrayGenerator(1923);\n+  const auto array = rand.Numeric<ArrowType>(num_values, -100, 100, null_percent);\n+  const auto valid_bits = array->null_bitmap_data();\n+  const auto array_actual = arrow::internal::checked_pointer_cast<ArrayType>(array);\n+\n+  auto encoder = MakeTypedEncoder<ParquetType>(Encoding::PLAIN);\n+  for (auto _ : state) {\n+    // Cast only happens for special BooleanType as it use UInt8 for the array data to\n+    // match a bool* input to PutSpaced.\n+    encoder->PutSpaced(reinterpret_cast<const CType*>(array_actual->raw_values()),\n+                       num_values, valid_bits, 0);\n+    encoder->FlushValues();\n+  }\n+  state.SetBytesProcessed(state.iterations() * num_values * sizeof(CType));\n+}\n+\n+static void BM_PlainEncodingSpacedBoolean(benchmark::State& state) {\n+  BM_PlainEncodingSpaced<BooleanType>(state);\n+}\n+BENCHMARK(BM_PlainEncodingSpacedBoolean)->Apply(BM_PlainSpacedArgs);\n+\n+static void BM_PlainEncodingSpacedFloat(benchmark::State& state) {\n+  BM_PlainEncodingSpaced<FloatType>(state);\n+}\n+BENCHMARK(BM_PlainEncodingSpacedFloat)->Apply(BM_PlainSpacedArgs);\n+\n+static void BM_PlainEncodingSpacedDouble(benchmark::State& state) {\n+  BM_PlainEncodingSpaced<DoubleType>(state);\n+}\n+BENCHMARK(BM_PlainEncodingSpacedDouble)->Apply(BM_PlainSpacedArgs);\n+\n+template <typename ParquetType>\n+static void BM_PlainDecodingSpaced(benchmark::State& state) {\n+  using ArrowType = typename BM_SpacedEncodingTraits<ParquetType>::ArrowType;\n+  using ArrayType = typename BM_SpacedEncodingTraits<ParquetType>::ArrayType;\n+  using CType = typename BM_SpacedEncodingTraits<ParquetType>::CType;\n+\n+  const auto num_values = state.range(0);\n+  const double null_percent = static_cast<double>(state.range(1)) / 100.0;\n+\n+  auto rand = ::arrow::random::RandomArrayGenerator(1923);\n+  const auto array = rand.Numeric<ArrowType>(num_values, -100, 100, null_percent);\n+  const auto valid_bits = array->null_bitmap_data();\n+  const auto null_count = array->null_count();\n+  const auto array_actual = arrow::internal::checked_pointer_cast<ArrayType>(array);\n+\n+  auto encoder = MakeTypedEncoder<ParquetType>(Encoding::PLAIN);\n+  // Cast only happens for special BooleanType as it use UInt8 for the array data to match\n+  // a bool* input to PutSpaced.\n\nReview comment:\n       I just added a static_assert to guarantee the size match between the cast\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T08:47:24.322+0000",
                    "updated": "2020-05-19T08:47:24.322+0000",
                    "started": "2020-05-19T08:47:24.322+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434845",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434847",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#discussion_r427138521\n\n\n\n##########\nFile path: cpp/src/parquet/encoding_benchmark.cc\n##########\n@@ -25,6 +25,7 @@\n #include \"arrow/testing/util.h\"\n #include \"arrow/type.h\"\n #include \"arrow/util/byte_stream_split.h\"\n+#include \"arrow/util/cpu_info.h\"\n\nReview comment:\n       Why did you need this by the way?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T08:53:26.074+0000",
                    "updated": "2020-05-19T08:53:26.074+0000",
                    "started": "2020-05-19T08:53:26.074+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434847",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434877",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jianxind commented on a change in pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#discussion_r427192686\n\n\n\n##########\nFile path: cpp/src/parquet/encoding_benchmark.cc\n##########\n@@ -25,6 +25,7 @@\n #include \"arrow/testing/util.h\"\n #include \"arrow/type.h\"\n #include \"arrow/util/byte_stream_split.h\"\n+#include \"arrow/util/cpu_info.h\"\n\nReview comment:\n       The size of test spaced block was set to L1 size. \r\n   arrow::internal::CpuInfo::GetInstance()->CacheSize(arrow::internal::CpuInfo::L1_CACHE);\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T10:20:56.294+0000",
                    "updated": "2020-05-19T10:20:56.294+0000",
                    "started": "2020-05-19T10:20:56.294+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434877",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434882",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#discussion_r427200565\n\n\n\n##########\nFile path: cpp/src/parquet/encoding_benchmark.cc\n##########\n@@ -25,6 +25,7 @@\n #include \"arrow/testing/util.h\"\n #include \"arrow/type.h\"\n #include \"arrow/util/byte_stream_split.h\"\n+#include \"arrow/util/cpu_info.h\"\n\nReview comment:\n       Using a hardcoded size would be just as good (or even better, to compare between machines).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T10:35:30.348+0000",
                    "updated": "2020-05-19T10:35:30.348+0000",
                    "started": "2020-05-19T10:35:30.348+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434882",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434894",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jianxind commented on a change in pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213#discussion_r427214775\n\n\n\n##########\nFile path: cpp/src/parquet/encoding_benchmark.cc\n##########\n@@ -25,6 +25,7 @@\n #include \"arrow/testing/util.h\"\n #include \"arrow/type.h\"\n #include \"arrow/util/byte_stream_split.h\"\n+#include \"arrow/util/cpu_info.h\"\n\nReview comment:\n       Done\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T11:02:12.018+0000",
                    "updated": "2020-05-19T11:02:12.018+0000",
                    "started": "2020-05-19T11:02:12.018+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434894",
                    "issueId": "13305586"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/worklog/434906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #7213:\nURL: https://github.com/apache/arrow/pull/7213\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-19T11:22:26.380+0000",
                    "updated": "2020-05-19T11:22:26.380+0000",
                    "started": "2020-05-19T11:22:26.380+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434906",
                    "issueId": "13305586"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@75141097[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@626ff4ed[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@66660344[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7bb35bf9[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@17d88188[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3db99d39[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b93d5e9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@a1e37f1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@599923fb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@28b82da4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5df189c7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@26ab9c37[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue May 19 11:22:16 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-05-19T11:22:16.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8841/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-05-18T04:13:34.000+0000",
        "updated": "2020-05-25T08:55:33.000+0000",
        "timeoriginalestimate": null,
        "description": "Create the benchmark and unittest of PLAIN spaced encoding and decoding for future SIMD implementation. Part of\u00a0https://issues.apache.org/jira/browse/ARROW-8579",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add benchmark and unittest for PLAIN spaced ",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305586/comment/17111084",
                    "id": "17111084",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 7213\n[https://github.com/apache/arrow/pull/7213]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-05-19T11:22:16.837+0000",
                    "updated": "2020-05-19T11:22:16.837+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0eulk:",
        "customfield_12314139": null
    }
}