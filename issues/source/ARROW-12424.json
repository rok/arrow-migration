{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13373054",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054",
    "key": "ARROW-12424",
    "fields": {
        "parent": {
            "id": "13286806",
            "key": "ARROW-7905",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13286806",
            "fields": {
                "summary": "[Go][Parquet] Port the C++ Parquet implementation to Go",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                    "name": "Minor",
                    "id": "4"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
            "name": "zeroshade",
            "key": "zeroshade",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
            },
            "displayName": "Matthew Topol",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333772",
                "id": "12333772",
                "name": "Go"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12337837",
                "id": "12337837",
                "name": "Parquet"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
            "name": "zeroshade",
            "key": "zeroshade",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
            },
            "displayName": "Matthew Topol",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
            "name": "zeroshade",
            "key": "zeroshade",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
            },
            "displayName": "Matthew Topol",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 43800,
            "total": 43800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 43800,
            "total": 43800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12424/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 73,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/584322",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade opened a new pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071\n\n\n   Following up from #9817  this is the next chunk of code for the Go Parquet port consisting of the Schema package, implementing the Converted and Logical types along with handling schema creation, manipulation, and printing.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-16T15:49:42.390+0000",
                    "updated": "2021-04-16T15:49:42.390+0000",
                    "started": "2021-04-16T15:49:42.390+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584322",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/584323",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#issuecomment-821269124\n\n\n   Tagging @emkornfield @sbinet @nickpoorman for visability\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-16T15:49:45.768+0000",
                    "updated": "2021-04-16T15:49:45.768+0000",
                    "started": "2021-04-16T15:49:45.768+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584323",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/584324",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#issuecomment-821270463\n\n\n   https://issues.apache.org/jira/browse/ARROW-12424\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-16T15:50:38.973+0000",
                    "updated": "2021-04-16T15:50:38.973+0000",
                    "started": "2021-04-16T15:50:38.973+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584324",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/585815",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#issuecomment-823296511\n\n\n   bumping for some visibility to beg for reviews :)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T13:58:18.616+0000",
                    "updated": "2021-04-20T13:58:18.616+0000",
                    "started": "2021-04-20T13:58:18.616+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585815",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/585933",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#discussion_r616817803\n\n\n\n##########\nFile path: go/parquet/internal/debug/log_off.go\n##########\n@@ -0,0 +1,21 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// +build !debug\n+\n+package debug\n+\n+func Log(interface{}) {}\n\nReview comment:\n       comment? Is this a logging interface?  does Go have a common library for this?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T15:49:25.261+0000",
                    "updated": "2021-04-20T15:49:25.261+0000",
                    "started": "2021-04-20T15:49:25.261+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585933",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/585935",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#discussion_r616819029\n\n\n\n##########\nFile path: go/parquet/schema/column.go\n##########\n@@ -0,0 +1,125 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package schema\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+\n+\t\"github.com/apache/arrow/go/parquet\"\n+\tformat \"github.com/apache/arrow/go/parquet/internal/gen-go/parquet\"\n+)\n+\n+// Column encapsulates the information necessary to interpret primitive\n+// column data in the context of a particular schema. We have to examine\n+// the node structure of a column's path to the root in the schema tree\n+// to be able to reassemble the nested structure from the repetition and\n+// definition levels.\n+type Column struct {\n+\tpnode     *PrimitiveNode\n+\tmaxDefLvl int16\n\nReview comment:\n       useful to comment maxDevLvl and maxRepLvl I might be misremembering but I think we might have renamed these simply to defLvl and RepLvl in the C++ code.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T15:50:54.687+0000",
                    "updated": "2021-04-20T15:50:54.687+0000",
                    "started": "2021-04-20T15:50:54.687+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585935",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/585936",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#discussion_r616819468\n\n\n\n##########\nFile path: go/parquet/schema/column.go\n##########\n@@ -0,0 +1,125 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package schema\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+\n+\t\"github.com/apache/arrow/go/parquet\"\n+\tformat \"github.com/apache/arrow/go/parquet/internal/gen-go/parquet\"\n+)\n+\n+// Column encapsulates the information necessary to interpret primitive\n+// column data in the context of a particular schema. We have to examine\n+// the node structure of a column's path to the root in the schema tree\n+// to be able to reassemble the nested structure from the repetition and\n+// definition levels.\n+type Column struct {\n+\tpnode     *PrimitiveNode\n+\tmaxDefLvl int16\n+\tmaxRepLvl int16\n+}\n+\n+func (c *Column) hasSpacedValues() bool {\n\nReview comment:\n       docs.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T15:51:28.061+0000",
                    "updated": "2021-04-20T15:51:28.061+0000",
                    "started": "2021-04-20T15:51:28.060+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585936",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/585944",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#discussion_r616822647\n\n\n\n##########\nFile path: go/parquet/schema/column.go\n##########\n@@ -0,0 +1,125 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package schema\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+\n+\t\"github.com/apache/arrow/go/parquet\"\n+\tformat \"github.com/apache/arrow/go/parquet/internal/gen-go/parquet\"\n+)\n+\n+// Column encapsulates the information necessary to interpret primitive\n+// column data in the context of a particular schema. We have to examine\n+// the node structure of a column's path to the root in the schema tree\n+// to be able to reassemble the nested structure from the repetition and\n+// definition levels.\n+type Column struct {\n+\tpnode     *PrimitiveNode\n+\tmaxDefLvl int16\n+\tmaxRepLvl int16\n+}\n+\n+func (c *Column) hasSpacedValues() bool {\n+\tif c.maxRepLvl > 0 {\n+\t\t// repeated + flat case\n+\t\treturn c.pnode.RepetitionType() != parquet.Repetitions.Required\n+\t}\n+\n+\t// non-repeated+nested case\n+\t// find if a node forces nulls in the lowest level along the hierarchy\n+\tvar n Node = c.pnode\n+\tfor n != nil {\n+\t\tif n.RepetitionType() == parquet.Repetitions.Optional {\n\nReview comment:\n       Does this mirror current C++ code.  I think once you hit a repeated field you can also stop.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T15:55:22.610+0000",
                    "updated": "2021-04-20T15:55:22.610+0000",
                    "started": "2021-04-20T15:55:22.610+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585944",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/585945",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#discussion_r616823330\n\n\n\n##########\nFile path: go/parquet/schema/column.go\n##########\n@@ -0,0 +1,125 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package schema\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+\n+\t\"github.com/apache/arrow/go/parquet\"\n+\tformat \"github.com/apache/arrow/go/parquet/internal/gen-go/parquet\"\n+)\n+\n+// Column encapsulates the information necessary to interpret primitive\n+// column data in the context of a particular schema. We have to examine\n+// the node structure of a column's path to the root in the schema tree\n+// to be able to reassemble the nested structure from the repetition and\n+// definition levels.\n+type Column struct {\n+\tpnode     *PrimitiveNode\n+\tmaxDefLvl int16\n+\tmaxRepLvl int16\n+}\n+\n+func (c *Column) hasSpacedValues() bool {\n+\tif c.maxRepLvl > 0 {\n+\t\t// repeated + flat case\n+\t\treturn c.pnode.RepetitionType() != parquet.Repetitions.Required\n+\t}\n+\n+\t// non-repeated+nested case\n+\t// find if a node forces nulls in the lowest level along the hierarchy\n+\tvar n Node = c.pnode\n+\tfor n != nil {\n+\t\tif n.RepetitionType() == parquet.Repetitions.Optional {\n\nReview comment:\n       ah NM there can be no repeated fields here.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T15:56:07.168+0000",
                    "updated": "2021-04-20T15:56:07.168+0000",
                    "started": "2021-04-20T15:56:07.167+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585945",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/585947",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#discussion_r616824254\n\n\n\n##########\nFile path: go/parquet/schema/column.go\n##########\n@@ -0,0 +1,125 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package schema\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+\n+\t\"github.com/apache/arrow/go/parquet\"\n+\tformat \"github.com/apache/arrow/go/parquet/internal/gen-go/parquet\"\n+)\n+\n+// Column encapsulates the information necessary to interpret primitive\n+// column data in the context of a particular schema. We have to examine\n+// the node structure of a column's path to the root in the schema tree\n+// to be able to reassemble the nested structure from the repetition and\n+// definition levels.\n+type Column struct {\n+\tpnode     *PrimitiveNode\n+\tmaxDefLvl int16\n+\tmaxRepLvl int16\n+}\n+\n+func (c *Column) hasSpacedValues() bool {\n+\tif c.maxRepLvl > 0 {\n+\t\t// repeated + flat case\n+\t\treturn c.pnode.RepetitionType() != parquet.Repetitions.Required\n+\t}\n+\n+\t// non-repeated+nested case\n+\t// find if a node forces nulls in the lowest level along the hierarchy\n+\tvar n Node = c.pnode\n+\tfor n != nil {\n+\t\tif n.RepetitionType() == parquet.Repetitions.Optional {\n+\t\t\treturn true\n+\t\t}\n+\t\tn = n.Parent()\n+\t}\n+\treturn false\n+}\n+\n+// NewColumn returns a new column object for the given node with the provided\n+// maximum definition and repetition levels.\n+//\n+// n MUST be a PrimitiveNode, otherwise this will panic.\n+func NewColumn(n Node, maxDefinitionLvl, maxRepetitionLvl int16) *Column {\n+\tif n.Type() != Primitive {\n+\t\tpanic(\"parquet: Column must be a primitive type\")\n\nReview comment:\n       Is it worth including details of Node here?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T15:57:14.788+0000",
                    "updated": "2021-04-20T15:57:14.788+0000",
                    "started": "2021-04-20T15:57:14.788+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585947",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/585949",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#discussion_r616825171\n\n\n\n##########\nFile path: go/parquet/schema/column.go\n##########\n@@ -0,0 +1,125 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package schema\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+\n+\t\"github.com/apache/arrow/go/parquet\"\n+\tformat \"github.com/apache/arrow/go/parquet/internal/gen-go/parquet\"\n+)\n+\n+// Column encapsulates the information necessary to interpret primitive\n+// column data in the context of a particular schema. We have to examine\n+// the node structure of a column's path to the root in the schema tree\n+// to be able to reassemble the nested structure from the repetition and\n+// definition levels.\n+type Column struct {\n+\tpnode     *PrimitiveNode\n+\tmaxDefLvl int16\n+\tmaxRepLvl int16\n+}\n+\n+func (c *Column) hasSpacedValues() bool {\n+\tif c.maxRepLvl > 0 {\n+\t\t// repeated + flat case\n+\t\treturn c.pnode.RepetitionType() != parquet.Repetitions.Required\n+\t}\n+\n+\t// non-repeated+nested case\n+\t// find if a node forces nulls in the lowest level along the hierarchy\n+\tvar n Node = c.pnode\n+\tfor n != nil {\n+\t\tif n.RepetitionType() == parquet.Repetitions.Optional {\n+\t\t\treturn true\n+\t\t}\n+\t\tn = n.Parent()\n+\t}\n+\treturn false\n+}\n+\n+// NewColumn returns a new column object for the given node with the provided\n+// maximum definition and repetition levels.\n+//\n+// n MUST be a PrimitiveNode, otherwise this will panic.\n+func NewColumn(n Node, maxDefinitionLvl, maxRepetitionLvl int16) *Column {\n+\tif n.Type() != Primitive {\n+\t\tpanic(\"parquet: Column must be a primitive type\")\n+\t}\n+\treturn &Column{n.(*PrimitiveNode), maxDefinitionLvl, maxRepetitionLvl}\n+}\n+\n+// Name is the column's name\n+func (c *Column) Name() string { return c.pnode.Name() }\n+\n+// ColumnPath returns the full path to this column from the root of the schema\n+func (c *Column) ColumnPath() parquet.ColumnPath { return c.pnode.columnPath() }\n+\n+// Path is equivalent to ColumnPath().String() returning the dot-string version of the path\n+func (c *Column) Path() string { return c.pnode.Path() }\n+\n+// TypeLength is -1 if not a FixedLenByteArray, otherwise it is the length for the column\n\nReview comment:\n       nit: elements in the column.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T15:58:11.731+0000",
                    "updated": "2021-04-20T15:58:11.731+0000",
                    "started": "2021-04-20T15:58:11.730+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585949",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/585950",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#discussion_r616825788\n\n\n\n##########\nFile path: go/parquet/schema/column.go\n##########\n@@ -0,0 +1,125 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package schema\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+\n+\t\"github.com/apache/arrow/go/parquet\"\n+\tformat \"github.com/apache/arrow/go/parquet/internal/gen-go/parquet\"\n+)\n+\n+// Column encapsulates the information necessary to interpret primitive\n+// column data in the context of a particular schema. We have to examine\n+// the node structure of a column's path to the root in the schema tree\n+// to be able to reassemble the nested structure from the repetition and\n+// definition levels.\n+type Column struct {\n+\tpnode     *PrimitiveNode\n+\tmaxDefLvl int16\n+\tmaxRepLvl int16\n+}\n+\n+func (c *Column) hasSpacedValues() bool {\n+\tif c.maxRepLvl > 0 {\n+\t\t// repeated + flat case\n+\t\treturn c.pnode.RepetitionType() != parquet.Repetitions.Required\n+\t}\n+\n+\t// non-repeated+nested case\n+\t// find if a node forces nulls in the lowest level along the hierarchy\n+\tvar n Node = c.pnode\n+\tfor n != nil {\n+\t\tif n.RepetitionType() == parquet.Repetitions.Optional {\n+\t\t\treturn true\n+\t\t}\n+\t\tn = n.Parent()\n+\t}\n+\treturn false\n+}\n+\n+// NewColumn returns a new column object for the given node with the provided\n+// maximum definition and repetition levels.\n+//\n+// n MUST be a PrimitiveNode, otherwise this will panic.\n+func NewColumn(n Node, maxDefinitionLvl, maxRepetitionLvl int16) *Column {\n+\tif n.Type() != Primitive {\n+\t\tpanic(\"parquet: Column must be a primitive type\")\n+\t}\n+\treturn &Column{n.(*PrimitiveNode), maxDefinitionLvl, maxRepetitionLvl}\n+}\n+\n+// Name is the column's name\n+func (c *Column) Name() string { return c.pnode.Name() }\n+\n+// ColumnPath returns the full path to this column from the root of the schema\n+func (c *Column) ColumnPath() parquet.ColumnPath { return c.pnode.columnPath() }\n+\n+// Path is equivalent to ColumnPath().String() returning the dot-string version of the path\n+func (c *Column) Path() string { return c.pnode.Path() }\n+\n+// TypeLength is -1 if not a FixedLenByteArray, otherwise it is the length for the column\n+func (c *Column) TypeLength() int { return c.pnode.TypeLength() }\n+\n+func (c *Column) MaxDefinitionLevel() int16        { return c.maxDefLvl }\n+func (c *Column) MaxRepetitionLevel() int16        { return c.maxRepLvl }\n+func (c *Column) PhysicalType() parquet.Type       { return c.pnode.PhysicalType() }\n+func (c *Column) ConvertedType() ConvertedType     { return c.pnode.convertedType }\n+func (c *Column) LogicalType() LogicalType         { return c.pnode.logicalType }\n+func (c *Column) ColumnOrder() parquet.ColumnOrder { return c.pnode.ColumnOrder }\n+func (c *Column) String() string {\n\nReview comment:\n       i'm surprised with Go's love of abreviations the String method is actually a full word :)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T15:58:56.744+0000",
                    "updated": "2021-04-20T15:58:56.744+0000",
                    "started": "2021-04-20T15:58:56.744+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585950",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/585951",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#issuecomment-823400210\n\n\n   Started reviewing, left some comments, will try to finish all files over the next few days.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T15:59:50.235+0000",
                    "updated": "2021-04-20T15:59:50.235+0000",
                    "started": "2021-04-20T15:59:50.235+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585951",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/585959",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#discussion_r616827828\n\n\n\n##########\nFile path: go/parquet/internal/debug/log_off.go\n##########\n@@ -0,0 +1,21 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// +build !debug\n+\n+package debug\n+\n+func Log(interface{}) {}\n\nReview comment:\n       this is using the build tags to have a debug logging interface that can be enabled by passing `-tags debug` when building so that they get optimized away in a build without that flag. It's the equivalent of using macros in C++ to check `#ifdef NDEBUG` etc. The go arrow library does the same.\r\n   \r\n   Go has a common library for logging, but it's designed to be used in conjunction with env vars controlling log level output rather than using the build tags to control optimizing away the debug logs like this.\n\n##########\nFile path: go/parquet/schema/column.go\n##########\n@@ -0,0 +1,125 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package schema\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+\n+\t\"github.com/apache/arrow/go/parquet\"\n+\tformat \"github.com/apache/arrow/go/parquet/internal/gen-go/parquet\"\n+)\n+\n+// Column encapsulates the information necessary to interpret primitive\n+// column data in the context of a particular schema. We have to examine\n+// the node structure of a column's path to the root in the schema tree\n+// to be able to reassemble the nested structure from the repetition and\n+// definition levels.\n+type Column struct {\n+\tpnode     *PrimitiveNode\n+\tmaxDefLvl int16\n\nReview comment:\n       sure i'll add those comments.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T16:01:39.650+0000",
                    "updated": "2021-04-20T16:01:39.650+0000",
                    "started": "2021-04-20T16:01:39.649+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585959",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/585960",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#discussion_r616828634\n\n\n\n##########\nFile path: go/parquet/schema/column.go\n##########\n@@ -0,0 +1,125 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package schema\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+\n+\t\"github.com/apache/arrow/go/parquet\"\n+\tformat \"github.com/apache/arrow/go/parquet/internal/gen-go/parquet\"\n+)\n+\n+// Column encapsulates the information necessary to interpret primitive\n+// column data in the context of a particular schema. We have to examine\n+// the node structure of a column's path to the root in the schema tree\n+// to be able to reassemble the nested structure from the repetition and\n+// definition levels.\n+type Column struct {\n+\tpnode     *PrimitiveNode\n+\tmaxDefLvl int16\n+\tmaxRepLvl int16\n+}\n+\n+func (c *Column) hasSpacedValues() bool {\n+\tif c.maxRepLvl > 0 {\n+\t\t// repeated + flat case\n+\t\treturn c.pnode.RepetitionType() != parquet.Repetitions.Required\n+\t}\n+\n+\t// non-repeated+nested case\n+\t// find if a node forces nulls in the lowest level along the hierarchy\n+\tvar n Node = c.pnode\n+\tfor n != nil {\n+\t\tif n.RepetitionType() == parquet.Repetitions.Optional {\n\nReview comment:\n       I'll take a look, I wrote this back in january so it's possible that the C++ has been improved since then and i missed it.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T16:02:27.453+0000",
                    "updated": "2021-04-20T16:02:27.453+0000",
                    "started": "2021-04-20T16:02:27.453+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585960",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/585961",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#discussion_r616828894\n\n\n\n##########\nFile path: go/parquet/schema/column.go\n##########\n@@ -0,0 +1,125 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package schema\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+\n+\t\"github.com/apache/arrow/go/parquet\"\n+\tformat \"github.com/apache/arrow/go/parquet/internal/gen-go/parquet\"\n+)\n+\n+// Column encapsulates the information necessary to interpret primitive\n+// column data in the context of a particular schema. We have to examine\n+// the node structure of a column's path to the root in the schema tree\n+// to be able to reassemble the nested structure from the repetition and\n+// definition levels.\n+type Column struct {\n+\tpnode     *PrimitiveNode\n+\tmaxDefLvl int16\n+\tmaxRepLvl int16\n+}\n+\n+func (c *Column) hasSpacedValues() bool {\n+\tif c.maxRepLvl > 0 {\n+\t\t// repeated + flat case\n+\t\treturn c.pnode.RepetitionType() != parquet.Repetitions.Required\n+\t}\n+\n+\t// non-repeated+nested case\n+\t// find if a node forces nulls in the lowest level along the hierarchy\n+\tvar n Node = c.pnode\n+\tfor n != nil {\n+\t\tif n.RepetitionType() == parquet.Repetitions.Optional {\n+\t\t\treturn true\n+\t\t}\n+\t\tn = n.Parent()\n+\t}\n+\treturn false\n+}\n+\n+// NewColumn returns a new column object for the given node with the provided\n+// maximum definition and repetition levels.\n+//\n+// n MUST be a PrimitiveNode, otherwise this will panic.\n+func NewColumn(n Node, maxDefinitionLvl, maxRepetitionLvl int16) *Column {\n+\tif n.Type() != Primitive {\n+\t\tpanic(\"parquet: Column must be a primitive type\")\n\nReview comment:\n       don't see why not, i'll add that to the message.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T16:02:42.077+0000",
                    "updated": "2021-04-20T16:02:42.077+0000",
                    "started": "2021-04-20T16:02:42.077+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585961",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/585986",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#discussion_r616853211\n\n\n\n##########\nFile path: go/parquet/schema/column.go\n##########\n@@ -0,0 +1,125 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package schema\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+\n+\t\"github.com/apache/arrow/go/parquet\"\n+\tformat \"github.com/apache/arrow/go/parquet/internal/gen-go/parquet\"\n+)\n+\n+// Column encapsulates the information necessary to interpret primitive\n+// column data in the context of a particular schema. We have to examine\n+// the node structure of a column's path to the root in the schema tree\n+// to be able to reassemble the nested structure from the repetition and\n+// definition levels.\n+type Column struct {\n+\tpnode     *PrimitiveNode\n+\tmaxDefLvl int16\n+\tmaxRepLvl int16\n+}\n+\n+func (c *Column) hasSpacedValues() bool {\n+\tif c.maxRepLvl > 0 {\n+\t\t// repeated + flat case\n+\t\treturn c.pnode.RepetitionType() != parquet.Repetitions.Required\n+\t}\n+\n+\t// non-repeated+nested case\n+\t// find if a node forces nulls in the lowest level along the hierarchy\n+\tvar n Node = c.pnode\n+\tfor n != nil {\n+\t\tif n.RepetitionType() == parquet.Repetitions.Optional {\n\nReview comment:\n       not sure if you saw comment above.  I think this is right since there is no repeated fields here.  I don't think this affects correctness but I think the check above isn't quite correct here or in C++.  really we need to walk the tree in both cases. Until either the top or a repeated field is hit\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T16:33:51.050+0000",
                    "updated": "2021-04-20T16:33:51.050+0000",
                    "started": "2021-04-20T16:33:51.050+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585986",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/585989",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#discussion_r616854812\n\n\n\n##########\nFile path: go/parquet/schema/column.go\n##########\n@@ -0,0 +1,125 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package schema\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+\n+\t\"github.com/apache/arrow/go/parquet\"\n+\tformat \"github.com/apache/arrow/go/parquet/internal/gen-go/parquet\"\n+)\n+\n+// Column encapsulates the information necessary to interpret primitive\n+// column data in the context of a particular schema. We have to examine\n+// the node structure of a column's path to the root in the schema tree\n+// to be able to reassemble the nested structure from the repetition and\n+// definition levels.\n+type Column struct {\n+\tpnode     *PrimitiveNode\n+\tmaxDefLvl int16\n+\tmaxRepLvl int16\n+}\n+\n+func (c *Column) hasSpacedValues() bool {\n+\tif c.maxRepLvl > 0 {\n+\t\t// repeated + flat case\n+\t\treturn c.pnode.RepetitionType() != parquet.Repetitions.Required\n+\t}\n+\n+\t// non-repeated+nested case\n+\t// find if a node forces nulls in the lowest level along the hierarchy\n+\tvar n Node = c.pnode\n+\tfor n != nil {\n+\t\tif n.RepetitionType() == parquet.Repetitions.Optional {\n\nReview comment:\n       although really, if this isn't related to arrow code, I don't think we need this method here, reading spaced values isn't something lower level parquet reading should really be concerned with\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T16:35:51.747+0000",
                    "updated": "2021-04-20T16:35:51.747+0000",
                    "started": "2021-04-20T16:35:51.747+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585989",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/585993",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#discussion_r616858908\n\n\n\n##########\nFile path: go/parquet/schema/column.go\n##########\n@@ -0,0 +1,125 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package schema\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+\n+\t\"github.com/apache/arrow/go/parquet\"\n+\tformat \"github.com/apache/arrow/go/parquet/internal/gen-go/parquet\"\n+)\n+\n+// Column encapsulates the information necessary to interpret primitive\n+// column data in the context of a particular schema. We have to examine\n+// the node structure of a column's path to the root in the schema tree\n+// to be able to reassemble the nested structure from the repetition and\n+// definition levels.\n+type Column struct {\n+\tpnode     *PrimitiveNode\n+\tmaxDefLvl int16\n+\tmaxRepLvl int16\n+}\n+\n+func (c *Column) hasSpacedValues() bool {\n+\tif c.maxRepLvl > 0 {\n+\t\t// repeated + flat case\n+\t\treturn c.pnode.RepetitionType() != parquet.Repetitions.Required\n+\t}\n+\n+\t// non-repeated+nested case\n+\t// find if a node forces nulls in the lowest level along the hierarchy\n+\tvar n Node = c.pnode\n+\tfor n != nil {\n+\t\tif n.RepetitionType() == parquet.Repetitions.Optional {\n\nReview comment:\n       Looking some more at the C++ code, it appears HasSpacedValues is only used in ReadBatchSpaced which is deprecated precisely because a lot of this logic is broken, and outside of Arrow (which no longer uses this code path) doesn't serve much value.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T16:41:21.860+0000",
                    "updated": "2021-04-20T16:41:21.860+0000",
                    "started": "2021-04-20T16:41:21.859+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585993",
                    "issueId": "13373054"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/worklog/586161",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #10071:\nURL: https://github.com/apache/arrow/pull/10071#discussion_r617006220\n\n\n\n##########\nFile path: go/parquet/schema/column.go\n##########\n@@ -0,0 +1,125 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package schema\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+\n+\t\"github.com/apache/arrow/go/parquet\"\n+\tformat \"github.com/apache/arrow/go/parquet/internal/gen-go/parquet\"\n+)\n+\n+// Column encapsulates the information necessary to interpret primitive\n+// column data in the context of a particular schema. We have to examine\n+// the node structure of a column's path to the root in the schema tree\n+// to be able to reassemble the nested structure from the repetition and\n+// definition levels.\n+type Column struct {\n+\tpnode     *PrimitiveNode\n+\tmaxDefLvl int16\n\nReview comment:\n       currently in the c++ code on master at least, they are still called `max_definition_level` and `max_repetition_level` https://github.com/apache/arrow/blob/master/cpp/src/parquet/schema.h#L406 which makes sense. They are the *max* definition and repetition level that exists in the column, since the individual levels would be on a per value basis.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T20:21:41.496+0000",
                    "updated": "2021-04-20T20:21:41.496+0000",
                    "started": "2021-04-20T20:21:41.496+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "586161",
                    "issueId": "13373054"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 43800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7277d65e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4629c3cf[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22cb01ef[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2af489c2[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@89b84ed[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@715a2a36[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@be4998b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5d0bbac[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5138fb17[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7193709c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e9497e4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5e994a41[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 43800,
        "customfield_12312520": null,
        "customfield_12312521": "Thu May 20 05:51:43 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-05-20T05:51:43.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12424/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-04-16T15:34:30.000+0000",
        "updated": "2021-05-20T05:51:43.000+0000",
        "timeoriginalestimate": null,
        "description": "Adding the ported code for the Schema module for Go Parquet library.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "12h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 43800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Go][Parquet] Add Schema Package",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373054/comment/17348069",
                    "id": "17348069",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 10071\n[https://github.com/apache/arrow/pull/10071]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-05-20T05:51:43.564+0000",
                    "updated": "2021-05-20T05:51:43.564+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0q3y0:",
        "customfield_12314139": null
    }
}