{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13185512",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185512",
    "key": "ARROW-3248",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3248/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 9,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185512/worklog/173737",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm opened a new pull request #3152: ARROW-3248: [C++] Add \"arrow\" prefix to Arrow core unit tests, use PREFIX instead of file name for io, ipc tests. Modular target cleanup\nURL: https://github.com/apache/arrow/pull/3152\n \n \n   I added a section to the cpp/README.md about the modular build targets.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-10T19:37:36.198+0000",
                    "updated": "2018-12-10T19:37:36.198+0000",
                    "started": "2018-12-10T19:37:36.197+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173737",
                    "issueId": "13185512"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185512/worklog/173739",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #3152: ARROW-3248: [C++] Add \"arrow\" prefix to Arrow core unit tests, use PREFIX instead of file name for csv, io, ipc tests. Modular target cleanup\nURL: https://github.com/apache/arrow/pull/3152#issuecomment-445947561\n \n \n   Shouldn't the CI scripts be updated to build the relevant targets? Or does plain \"make\" still build all enabled targets?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-10T19:46:45.313+0000",
                    "updated": "2018-12-10T19:46:45.313+0000",
                    "started": "2018-12-10T19:46:45.312+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173739",
                    "issueId": "13185512"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185512/worklog/173750",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3152: ARROW-3248: [C++] Add \"arrow\" prefix to Arrow core unit tests, use PREFIX instead of file name for csv, io, ipc tests. Modular target cleanup\nURL: https://github.com/apache/arrow/pull/3152#issuecomment-445953162\n \n \n   Yeah, a naked `make` still builds everything. I want to disable this and add an \"all\" target. That's https://issues.apache.org/jira/browse/ARROW-3184 so can do that in a separate patch\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-10T20:03:48.799+0000",
                    "updated": "2018-12-10T20:03:48.799+0000",
                    "started": "2018-12-10T20:03:48.798+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173750",
                    "issueId": "13185512"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185512/worklog/173796",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3152: ARROW-3248: [C++] Add \"arrow\" prefix to Arrow core unit tests, use PREFIX instead of file name for csv, io, ipc tests. Modular target cleanup\nURL: https://github.com/apache/arrow/pull/3152#issuecomment-445999543\n \n \n   OK to merge this once the build looks good?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-10T22:31:49.720+0000",
                    "updated": "2018-12-10T22:31:49.720+0000",
                    "started": "2018-12-10T22:31:49.719+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173796",
                    "issueId": "13185512"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185512/worklog/173797",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm edited a comment on issue #3152: ARROW-3248: [C++] Add \"arrow\" prefix to Arrow core unit tests, use PREFIX instead of file name for csv, io, ipc tests. Modular target cleanup\nURL: https://github.com/apache/arrow/pull/3152#issuecomment-445999543\n \n \n   OK to merge this once the build looks good? Don't want to let it sit long to reduce rebase conflicts\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-10T22:32:05.058+0000",
                    "updated": "2018-12-10T22:32:05.058+0000",
                    "started": "2018-12-10T22:32:05.057+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173797",
                    "issueId": "13185512"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185512/worklog/173819",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3152: ARROW-3248: [C++] Add \"arrow\" prefix to Arrow core unit tests, use PREFIX instead of file name for csv, io, ipc tests. Modular target cleanup\nURL: https://github.com/apache/arrow/pull/3152#issuecomment-446020105\n \n \n   @TheNeuralBit @trxcllnt the JS jobs are failing with\r\n   \r\n   ```\r\n   npm ERR! code ETARGET\r\n   npm ERR! notarget No matching version found for gulp@next\r\n   npm ERR! notarget In most cases you or one of your dependencies are requesting\r\n   npm ERR! notarget a package version that doesn't exist.\r\n   npm ERR! notarget \r\n   npm ERR! notarget It was specified as a dependency of 'apache-arrow'\r\n   npm ERR! notarget \r\n   npm ERR! A complete log of this run can be found in:\r\n   npm ERR!     /home/travis/.npm/_logs/2018-12-10T22_33_26_272Z-debug.log\r\n   The command \"$TRAVIS_BUILD_DIR/ci/travis_before_script_js.sh\" failed and exited with 1 during .\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-10T23:54:43.047+0000",
                    "updated": "2018-12-10T23:54:43.047+0000",
                    "started": "2018-12-10T23:54:43.046+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173819",
                    "issueId": "13185512"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185512/worklog/173820",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3152: ARROW-3248: [C++] Add \"arrow\" prefix to Arrow core unit tests, use PREFIX instead of file name for csv, io, ipc tests. Modular target cleanup\nURL: https://github.com/apache/arrow/pull/3152#issuecomment-446020200\n \n \n   Appveyor build https://ci.appveyor.com/project/wesm/arrow/builds/20910494.\r\n   \r\n   Merging this. I take responsibility for any fallout from this change =) \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-10T23:55:09.853+0000",
                    "updated": "2018-12-10T23:55:09.853+0000",
                    "started": "2018-12-10T23:55:09.852+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173820",
                    "issueId": "13185512"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185512/worklog/173822",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #3152: ARROW-3248: [C++] Add \"arrow\" prefix to Arrow core unit tests, use PREFIX instead of file name for csv, io, ipc tests. Modular target cleanup\nURL: https://github.com/apache/arrow/pull/3152\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/ci/cpp-msvc-build-main.bat b/ci/cpp-msvc-build-main.bat\nindex 7349f8d3ac..8703dc9631 100644\n--- a/ci/cpp-msvc-build-main.bat\n+++ b/ci/cpp-msvc-build-main.bat\n@@ -55,7 +55,7 @@ cmake -G \"%GENERATOR%\" %CMAKE_ARGS% ^\n       ..  || exit /B\n cmake --build . --target install --config %CONFIGURATION%  || exit /B\n \n-@rem Needed so python-test.exe works\n+@rem Needed so arrow-python-test.exe works\n set OLD_PYTHONHOME=%PYTHONHOME%\n set PYTHONHOME=%CONDA_PREFIX%\n \ndiff --git a/ci/travis_script_python.sh b/ci/travis_script_python.sh\nindex b316c81f3b..25bec262d8 100755\n--- a/ci/travis_script_python.sh\n+++ b/ci/travis_script_python.sh\n@@ -38,7 +38,7 @@ conda activate $CONDA_ENV_DIR\n # We should use zlib in the target Python directory to avoid loading\n # wrong libpython on macOS at run-time. If we use zlib in\n # $ARROW_BUILD_TOOLCHAIN and libpython3.6m.dylib exists in both\n-# $ARROW_BUILD_TOOLCHAIN and $CONDA_ENV_DIR, python-test uses\n+# $ARROW_BUILD_TOOLCHAIN and $CONDA_ENV_DIR, arrow-python-test uses\n # libpython3.6m.dylib on $ARROW_BUILD_TOOLCHAIN not $CONDA_ENV_DIR.\n # libpython3.6m.dylib on $ARROW_BUILD_TOOLCHAIN doesn't have NumPy. So\n # python-test fails.\n@@ -113,7 +113,7 @@ ninja install\n popd\n \n # python-test isn't run by travis_script_cpp.sh, exercise it here\n-$ARROW_CPP_BUILD_DIR/$ARROW_BUILD_TYPE/python-test\n+$ARROW_CPP_BUILD_DIR/$ARROW_BUILD_TYPE/arrow-python-test\n \n pushd $ARROW_PYTHON_DIR\n \ndiff --git a/cpp/CMakeLists.txt b/cpp/CMakeLists.txt\nindex 68ac84e42d..7140d05d57 100644\n--- a/cpp/CMakeLists.txt\n+++ b/cpp/CMakeLists.txt\n@@ -793,18 +793,6 @@ endif()\n \n add_subdirectory(src/arrow)\n \n-if(ARROW_FLIGHT)\n-  add_subdirectory(src/arrow/flight)\n-endif()\n-\n-if(ARROW_PYTHON)\n-  add_subdirectory(src/arrow/python)\n-endif()\n-\n-if(ARROW_HIVESERVER2)\n-  add_subdirectory(src/arrow/dbi/hiveserver2)\n-endif()\n-\n if(ARROW_PARQUET)\n   add_subdirectory(src/parquet)\n   add_subdirectory(tools/parquet)\ndiff --git a/cpp/README.md b/cpp/README.md\nindex 394b23d69f..7d0851762c 100644\n--- a/cpp/README.md\n+++ b/cpp/README.md\n@@ -82,7 +82,18 @@ environment variable (which requires the `locales` package or equivalent):\n export LC_ALL=\"en_US.UTF-8\"\n ```\n \n-## Building and Developing Parquet Libraries\n+## Modular Build Targets\n+\n+Since there are several major parts of the C++ project, we have provided\n+modular CMake targets for building each component along with its dependencies,\n+unit tests, and benchmarks (if enabled):\n+\n+* `make arrow` for Arrow core libraries\n+* `make parquet` for Parquet libraries\n+* `make gandiva` for Gandiva (LLVM expression compiler) libraries\n+* `make plasma` for Plasma libraries, server\n+\n+## Parquet Development Notes\n \n To build the C++ libraries for Apache Parquet, add the flag\n `-DARROW_PARQUET=ON` when invoking CMake. The Parquet libraries and unit tests\n@@ -120,7 +131,7 @@ with the `--ARROW_BUILD_BENCHMARKS` parameter set correctly:\n     cmake -DARROW_BUILD_BENCHMARKS=ON ..\n \n and instead of make unittest run either `make; ctest` to run both unit tests\n-and benchmarks or `make runbenchmark` to run only the benchmark tests.\n+and benchmarks or `make benchmark` to run only the benchmark tests.\n \n Benchmark logs will be placed in the build directory under `build/benchmark-logs`.\n \ndiff --git a/cpp/cmake_modules/BuildUtils.cmake b/cpp/cmake_modules/BuildUtils.cmake\nindex 916b9ebddb..bcf672823b 100644\n--- a/cpp/cmake_modules/BuildUtils.cmake\n+++ b/cpp/cmake_modules/BuildUtils.cmake\n@@ -290,7 +290,7 @@ endfunction()\n ############################################################\n # Add a new micro benchmark, with or without an executable that should be built.\n # If benchmarks are enabled then they will be run along side unit tests with ctest.\n-# 'make runbenchmark' and 'make unittest' to build/run only benchmark or unittests,\n+# 'make benchmark' and 'make unittest' to build/run only benchmark or unittests,\n # respectively.\n #\n # REL_BENCHMARK_NAME is the name of the benchmark app. It may be a single component\n@@ -306,10 +306,10 @@ endfunction()\n # \\arg PREFIX a string to append to the name of the benchmark executable. For\n # example, if you have src/arrow/foo/bar-benchmark.cc, then PREFIX \"foo\" will\n # create test executable foo-bar-benchmark\n-function(ADD_ARROW_BENCHMARK REL_BENCHMARK_NAME)\n+function(ADD_BENCHMARK REL_BENCHMARK_NAME)\n   set(options)\n   set(one_value_args)\n-  set(multi_value_args EXTRA_LINK_LIBS DEPENDENCIES PREFIX)\n+  set(multi_value_args EXTRA_LINK_LIBS DEPENDENCIES PREFIX LABELS)\n   cmake_parse_arguments(ARG \"${options}\" \"${one_value_args}\" \"${multi_value_args}\" ${ARGN})\n   if(ARG_UNPARSED_ARGUMENTS)\n     message(SEND_ERROR \"Error: unrecognized arguments: ${ARG_UNPARSED_ARGUMENTS}\")\n@@ -329,7 +329,7 @@ function(ADD_ARROW_BENCHMARK REL_BENCHMARK_NAME)\n     set(BENCHMARK_PATH \"${EXECUTABLE_OUTPUT_PATH}/${BENCHMARK_NAME}\")\n     add_executable(${BENCHMARK_NAME} \"${REL_BENCHMARK_NAME}.cc\")\n     target_link_libraries(${BENCHMARK_NAME} ${ARROW_BENCHMARK_LINK_LIBS})\n-    add_dependencies(runbenchmark ${BENCHMARK_NAME})\n+    add_dependencies(benchmark ${BENCHMARK_NAME})\n     set(NO_COLOR \"--color_print=false\")\n \n     if (ARG_EXTRA_LINK_LIBS)\n@@ -345,9 +345,21 @@ function(ADD_ARROW_BENCHMARK REL_BENCHMARK_NAME)\n     add_dependencies(${BENCHMARK_NAME} ${ARG_DEPENDENCIES})\n   endif()\n \n+  if (ARG_LABELS)\n+    set(ARG_LABELS \"${ARG_LABELS}\")\n+  else()\n+    set(ARG_LABELS benchmark)\n+  endif()\n+\n+  foreach (TEST_LABEL ${ARG_LABELS})\n+    add_dependencies(${TEST_LABEL} ${BENCHMARK_NAME})\n+  endforeach()\n+\n   add_test(${BENCHMARK_NAME}\n     ${BUILD_SUPPORT_DIR}/run-test.sh ${CMAKE_BINARY_DIR} benchmark ${BENCHMARK_PATH} ${NO_COLOR})\n-  set_tests_properties(${BENCHMARK_NAME} PROPERTIES LABELS \"benchmark\")\n+  set_property(TEST ${BENCHMARK_NAME}\n+    APPEND PROPERTY\n+    LABELS ${ARG_LABELS})\n endfunction()\n \n ############################################################\n@@ -377,7 +389,7 @@ endfunction()\n # multiple unit tests in some subgroup, you can assign a test to multiple\n # groups using the syntax unittest;GROUP2;GROUP3. Custom targets for the group\n # names must exist\n-function(ADD_ARROW_TEST REL_TEST_NAME)\n+function(ADD_TEST_CASE REL_TEST_NAME)\n   set(options NO_VALGRIND ENABLED)\n   set(one_value_args)\n   set(multi_value_args SOURCES STATIC_LINK_LIBS EXTRA_LINK_LIBS EXTRA_INCLUDES\ndiff --git a/cpp/cmake_modules/ThirdpartyToolchain.cmake b/cpp/cmake_modules/ThirdpartyToolchain.cmake\nindex 9829a4d3fb..6850b0bdde 100644\n--- a/cpp/cmake_modules/ThirdpartyToolchain.cmake\n+++ b/cpp/cmake_modules/ThirdpartyToolchain.cmake\n@@ -627,7 +627,7 @@ if(ARROW_BUILD_TESTS OR ARROW_BUILD_BENCHMARKS)\n endif()\n \n if(ARROW_BUILD_BENCHMARKS)\n-  add_custom_target(runbenchmark ctest -L benchmark)\n+  add_custom_target(benchmark ctest -L benchmark)\n \n   if(\"$ENV{GBENCHMARK_HOME}\" STREQUAL \"\")\n     if(NOT MSVC)\n@@ -664,11 +664,11 @@ if(ARROW_BUILD_BENCHMARKS)\n   message(STATUS \"GBenchmark include dir: ${GBENCHMARK_INCLUDE_DIR}\")\n   message(STATUS \"GBenchmark static library: ${GBENCHMARK_STATIC_LIB}\")\n   include_directories(SYSTEM ${GBENCHMARK_INCLUDE_DIR})\n-  ADD_THIRDPARTY_LIB(benchmark\n+  ADD_THIRDPARTY_LIB(gbenchmark\n     STATIC_LIB ${GBENCHMARK_STATIC_LIB})\n \n   if(GBENCHMARK_VENDORED)\n-    add_dependencies(benchmark_static gbenchmark_ep)\n+    add_dependencies(gbenchmark_static gbenchmark_ep)\n   endif()\n endif()\n \ndiff --git a/cpp/src/arrow/CMakeLists.txt b/cpp/src/arrow/CMakeLists.txt\nindex 8e932680de..13aaeab494 100644\n--- a/cpp/src/arrow/CMakeLists.txt\n+++ b/cpp/src/arrow/CMakeLists.txt\n@@ -15,6 +15,42 @@\n # specific language governing permissions and limitations\n # under the License.\n \n+add_custom_target(arrow)\n+\n+# Adding unit tests part of the \"arrow\" portion of the test suite\n+function(ADD_ARROW_TEST REL_TEST_NAME)\n+  set(options)\n+  set(one_value_args PREFIX)\n+  set(multi_value_args)\n+  cmake_parse_arguments(ARG \"${options}\" \"${one_value_args}\" \"${multi_value_args}\" ${ARGN})\n+\n+  if (ARG_PREFIX)\n+    set(PREFIX ${ARG_PREFIX})\n+  else()\n+    set(PREFIX \"arrow\")\n+  endif()\n+  ADD_TEST_CASE(${REL_TEST_NAME}\n+    PREFIX ${PREFIX}\n+    LABELS \"unittest;arrow\"\n+    ${ARG_UNPARSED_ARGUMENTS})\n+endfunction()\n+\n+function(ADD_ARROW_BENCHMARK REL_TEST_NAME)\n+  set(options)\n+  set(one_value_args PREFIX)\n+  set(multi_value_args)\n+  cmake_parse_arguments(ARG \"${options}\" \"${one_value_args}\" \"${multi_value_args}\" ${ARGN})\n+  if (ARG_PREFIX)\n+    set(PREFIX ${ARG_PREFIX})\n+  else()\n+    set(PREFIX \"arrow\")\n+  endif()\n+  ADD_BENCHMARK(${REL_TEST_NAME}\n+    PREFIX ${PREFIX}\n+    LABELS \"benchmark;arrow\"\n+    ${ARG_UNPARSED_ARGUMENTS})\n+endfunction()\n+\n set(ARROW_SRCS\n   array.cc\n   buffer.cc\n@@ -263,3 +299,15 @@ ADD_ARROW_BENCHMARK(column-benchmark)\n add_subdirectory(csv)\n add_subdirectory(io)\n add_subdirectory(util)\n+\n+if(ARROW_FLIGHT)\n+  add_subdirectory(flight)\n+endif()\n+\n+if(ARROW_PYTHON)\n+  add_subdirectory(python)\n+endif()\n+\n+if(ARROW_HIVESERVER2)\n+  add_subdirectory(dbi/hiveserver2)\n+endif()\ndiff --git a/cpp/src/arrow/csv/CMakeLists.txt b/cpp/src/arrow/csv/CMakeLists.txt\nindex 84b080b1ee..db23d6feff 100644\n--- a/cpp/src/arrow/csv/CMakeLists.txt\n+++ b/cpp/src/arrow/csv/CMakeLists.txt\n@@ -15,13 +15,19 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-ADD_ARROW_TEST(csv-chunker-test)\n-ADD_ARROW_TEST(csv-column-builder-test)\n-ADD_ARROW_TEST(csv-converter-test)\n-ADD_ARROW_TEST(csv-parser-test)\n+ADD_ARROW_TEST(chunker-test\n+  PREFIX \"arrow-csv\")\n+ADD_ARROW_TEST(column-builder-test\n+  PREFIX \"arrow-csv\")\n+ADD_ARROW_TEST(converter-test\n+  PREFIX \"arrow-csv\")\n+ADD_ARROW_TEST(parser-test\n+  PREFIX \"arrow-csv\")\n \n-ADD_ARROW_BENCHMARK(csv-converter-benchmark)\n-ADD_ARROW_BENCHMARK(csv-parser-benchmark)\n+ADD_ARROW_BENCHMARK(converter-benchmark\n+  PREFIX \"arrow-csv\")\n+ADD_ARROW_BENCHMARK(parser-benchmark\n+  PREFIX \"arrow-csv\")\n \n # Headers: top level\n file(GLOB_RECURSE ARROW_CSV_HEADERS \"*.h\")\ndiff --git a/cpp/src/arrow/csv/csv-chunker-test.cc b/cpp/src/arrow/csv/chunker-test.cc\nsimilarity index 100%\nrename from cpp/src/arrow/csv/csv-chunker-test.cc\nrename to cpp/src/arrow/csv/chunker-test.cc\ndiff --git a/cpp/src/arrow/csv/csv-column-builder-test.cc b/cpp/src/arrow/csv/column-builder-test.cc\nsimilarity index 100%\nrename from cpp/src/arrow/csv/csv-column-builder-test.cc\nrename to cpp/src/arrow/csv/column-builder-test.cc\ndiff --git a/cpp/src/arrow/csv/csv-converter-benchmark.cc b/cpp/src/arrow/csv/converter-benchmark.cc\nsimilarity index 100%\nrename from cpp/src/arrow/csv/csv-converter-benchmark.cc\nrename to cpp/src/arrow/csv/converter-benchmark.cc\ndiff --git a/cpp/src/arrow/csv/csv-converter-test.cc b/cpp/src/arrow/csv/converter-test.cc\nsimilarity index 100%\nrename from cpp/src/arrow/csv/csv-converter-test.cc\nrename to cpp/src/arrow/csv/converter-test.cc\ndiff --git a/cpp/src/arrow/csv/csv-parser-benchmark.cc b/cpp/src/arrow/csv/parser-benchmark.cc\nsimilarity index 100%\nrename from cpp/src/arrow/csv/csv-parser-benchmark.cc\nrename to cpp/src/arrow/csv/parser-benchmark.cc\ndiff --git a/cpp/src/arrow/csv/csv-parser-test.cc b/cpp/src/arrow/csv/parser-test.cc\nsimilarity index 100%\nrename from cpp/src/arrow/csv/csv-parser-test.cc\nrename to cpp/src/arrow/csv/parser-test.cc\ndiff --git a/cpp/src/arrow/dbi/hiveserver2/CMakeLists.txt b/cpp/src/arrow/dbi/hiveserver2/CMakeLists.txt\nindex 3a16a7834c..eb4446f05d 100644\n--- a/cpp/src/arrow/dbi/hiveserver2/CMakeLists.txt\n+++ b/cpp/src/arrow/dbi/hiveserver2/CMakeLists.txt\n@@ -115,7 +115,7 @@ if (ARROW_BUILD_TESTS)\n     STATIC_LINK_LIBS \"${ARROW_HIVESERVER2_TEST_LINK_LIBS}\"\n     LABELS \"arrow_hiveserver2\"\n   )\n-  set_property(TARGET hiveserver2-test\n+  set_property(TARGET arrow-hiveserver2-test\n     APPEND_STRING PROPERTY COMPILE_FLAGS\n     \" -Wno-shadow-field\")\n endif(ARROW_BUILD_TESTS)\ndiff --git a/cpp/src/arrow/io/CMakeLists.txt b/cpp/src/arrow/io/CMakeLists.txt\nindex d21bb16755..80d68fb503 100644\n--- a/cpp/src/arrow/io/CMakeLists.txt\n+++ b/cpp/src/arrow/io/CMakeLists.txt\n@@ -18,19 +18,27 @@\n # ----------------------------------------------------------------------\n # arrow_io : Arrow IO interfaces\n \n-ADD_ARROW_TEST(io-buffered-test)\n-ADD_ARROW_TEST(io-compressed-test)\n-ADD_ARROW_TEST(io-file-test)\n+ADD_ARROW_TEST(buffered-test\n+  PREFIX \"arrow-io\")\n+ADD_ARROW_TEST(compressed-test\n+  PREFIX \"arrow-io\")\n+ADD_ARROW_TEST(file-test\n+  PREFIX \"arrow-io\")\n \n if (ARROW_HDFS AND NOT ARROW_BOOST_HEADER_ONLY)\n-  ADD_ARROW_TEST(io-hdfs-test NO_VALGRIND)\n+  ADD_ARROW_TEST(hdfs-test NO_VALGRIND\n+    PREFIX \"arrow-io\")\n endif()\n \n-ADD_ARROW_TEST(io-memory-test)\n-ADD_ARROW_TEST(io-readahead-test)\n+ADD_ARROW_TEST(memory-test\n+  PREFIX \"arrow-io\")\n+ADD_ARROW_TEST(readahead-test\n+  PREFIX \"arrow-io\")\n \n-ADD_ARROW_BENCHMARK(io-file-benchmark)\n-ADD_ARROW_BENCHMARK(io-memory-benchmark)\n+ADD_ARROW_BENCHMARK(file-benchmark\n+  PREFIX \"arrow-io\")\n+ADD_ARROW_BENCHMARK(memory-benchmark\n+  PREFIX \"arrow-io\")\n \n # Headers: top level\n install(FILES\ndiff --git a/cpp/src/arrow/io/io-buffered-test.cc b/cpp/src/arrow/io/buffered-test.cc\nsimilarity index 100%\nrename from cpp/src/arrow/io/io-buffered-test.cc\nrename to cpp/src/arrow/io/buffered-test.cc\ndiff --git a/cpp/src/arrow/io/io-compressed-test.cc b/cpp/src/arrow/io/compressed-test.cc\nsimilarity index 100%\nrename from cpp/src/arrow/io/io-compressed-test.cc\nrename to cpp/src/arrow/io/compressed-test.cc\ndiff --git a/cpp/src/arrow/io/io-file-benchmark.cc b/cpp/src/arrow/io/file-benchmark.cc\nsimilarity index 100%\nrename from cpp/src/arrow/io/io-file-benchmark.cc\nrename to cpp/src/arrow/io/file-benchmark.cc\ndiff --git a/cpp/src/arrow/io/io-file-test.cc b/cpp/src/arrow/io/file-test.cc\nsimilarity index 100%\nrename from cpp/src/arrow/io/io-file-test.cc\nrename to cpp/src/arrow/io/file-test.cc\ndiff --git a/cpp/src/arrow/io/io-hdfs-test.cc b/cpp/src/arrow/io/hdfs-test.cc\nsimilarity index 100%\nrename from cpp/src/arrow/io/io-hdfs-test.cc\nrename to cpp/src/arrow/io/hdfs-test.cc\ndiff --git a/cpp/src/arrow/io/io-memory-benchmark.cc b/cpp/src/arrow/io/memory-benchmark.cc\nsimilarity index 100%\nrename from cpp/src/arrow/io/io-memory-benchmark.cc\nrename to cpp/src/arrow/io/memory-benchmark.cc\ndiff --git a/cpp/src/arrow/io/io-memory-test.cc b/cpp/src/arrow/io/memory-test.cc\nsimilarity index 100%\nrename from cpp/src/arrow/io/io-memory-test.cc\nrename to cpp/src/arrow/io/memory-test.cc\ndiff --git a/cpp/src/arrow/io/io-readahead-test.cc b/cpp/src/arrow/io/readahead-test.cc\nsimilarity index 100%\nrename from cpp/src/arrow/io/io-readahead-test.cc\nrename to cpp/src/arrow/io/readahead-test.cc\ndiff --git a/cpp/src/arrow/ipc/CMakeLists.txt b/cpp/src/arrow/ipc/CMakeLists.txt\nindex 40cebf1823..bda4ef3e41 100644\n--- a/cpp/src/arrow/ipc/CMakeLists.txt\n+++ b/cpp/src/arrow/ipc/CMakeLists.txt\n@@ -19,9 +19,12 @@\n # Messaging and interprocess communication\n \n ADD_ARROW_TEST(feather-test)\n-ADD_ARROW_TEST(ipc-read-write-test)\n-ADD_ARROW_TEST(ipc-json-simple-test)\n-ADD_ARROW_TEST(ipc-json-test)\n+ADD_ARROW_TEST(read-write-test\n+  PREFIX \"arrow-ipc\")\n+ADD_ARROW_TEST(json-simple-test\n+  PREFIX \"arrow-ipc\")\n+ADD_ARROW_TEST(json-test\n+  PREFIX \"arrow-ipc\")\n \n if (NOT ARROW_BOOST_HEADER_ONLY)\n   ADD_ARROW_TEST(json-integration-test\n@@ -116,6 +119,6 @@ if (ARROW_BUILD_UTILITIES)\n   target_link_libraries(stream-to-file ${UTIL_LINK_LIBS})\n endif()\n \n-ADD_ARROW_BENCHMARK(ipc-read-write-benchmark)\n-\n+ADD_ARROW_BENCHMARK(read-write-benchmark\n+  PREFIX \"arrow-ipc\")\n ADD_ARROW_FUZZING(ipc-fuzzing-test)\ndiff --git a/cpp/src/arrow/ipc/ipc-json-simple-test.cc b/cpp/src/arrow/ipc/json-simple-test.cc\nsimilarity index 100%\nrename from cpp/src/arrow/ipc/ipc-json-simple-test.cc\nrename to cpp/src/arrow/ipc/json-simple-test.cc\ndiff --git a/cpp/src/arrow/ipc/ipc-json-test.cc b/cpp/src/arrow/ipc/json-test.cc\nsimilarity index 100%\nrename from cpp/src/arrow/ipc/ipc-json-test.cc\nrename to cpp/src/arrow/ipc/json-test.cc\ndiff --git a/cpp/src/arrow/ipc/ipc-read-write-benchmark.cc b/cpp/src/arrow/ipc/read-write-benchmark.cc\nsimilarity index 100%\nrename from cpp/src/arrow/ipc/ipc-read-write-benchmark.cc\nrename to cpp/src/arrow/ipc/read-write-benchmark.cc\ndiff --git a/cpp/src/arrow/ipc/ipc-read-write-test.cc b/cpp/src/arrow/ipc/read-write-test.cc\nsimilarity index 100%\nrename from cpp/src/arrow/ipc/ipc-read-write-test.cc\nrename to cpp/src/arrow/ipc/read-write-test.cc\ndiff --git a/cpp/src/arrow/util/CMakeLists.txt b/cpp/src/arrow/util/CMakeLists.txt\nindex 6b9c3590b4..4f515b52e8 100644\n--- a/cpp/src/arrow/util/CMakeLists.txt\n+++ b/cpp/src/arrow/util/CMakeLists.txt\n@@ -68,16 +68,16 @@ if (ARROW_BUILD_BENCHMARKS)\n   add_library(arrow_benchmark_main benchmark_main.cc)\n   if (APPLE)\n     target_link_libraries(arrow_benchmark_main\n-      benchmark_static\n+      gbenchmark_static\n     )\n   elseif(MSVC)\n     target_link_libraries(arrow_benchmark_main\n-      benchmark_static\n+      gbenchmark_static\n       Shlwapi.lib\n   )\n   else()\n     target_link_libraries(arrow_benchmark_main\n-      benchmark_static\n+      gbenchmark_static\n       pthread\n     )\n   endif()\ndiff --git a/cpp/src/gandiva/CMakeLists.txt b/cpp/src/gandiva/CMakeLists.txt\nindex 1f76f78415..5d75aa2711 100644\n--- a/cpp/src/gandiva/CMakeLists.txt\n+++ b/cpp/src/gandiva/CMakeLists.txt\n@@ -153,11 +153,11 @@ function(ADD_GANDIVA_TEST REL_TEST_NAME)\n   # and uses less disk space, but in some cases we need to force static\n   # linking (see rationale below).\n   if (ARG_USE_STATIC_LINKING)\n-    ADD_ARROW_TEST(${REL_TEST_NAME}\n+    ADD_TEST_CASE(${REL_TEST_NAME}\n       ${TEST_ARGUMENTS}\n       STATIC_LINK_LIBS ${GANDIVA_STATIC_TEST_LINK_LIBS})\n   else()\n-    ADD_ARROW_TEST(${REL_TEST_NAME}\n+    ADD_TEST_CASE(${REL_TEST_NAME}\n       ${TEST_ARGUMENTS}\n       STATIC_LINK_LIBS ${GANDIVA_SHARED_TEST_LINK_LIBS})\n   endif()\ndiff --git a/cpp/src/gandiva/tests/CMakeLists.txt b/cpp/src/gandiva/tests/CMakeLists.txt\nindex 1fd30aac49..9558fc0757 100644\n--- a/cpp/src/gandiva/tests/CMakeLists.txt\n+++ b/cpp/src/gandiva/tests/CMakeLists.txt\n@@ -32,6 +32,6 @@ ADD_GANDIVA_TEST(projector_test_static\n   SOURCES projector_test.cc\n   USE_STATIC_LINKING)\n \n-ADD_ARROW_BENCHMARK(micro_benchmarks\n+ADD_BENCHMARK(micro_benchmarks\n   PREFIX \"gandiva\"\n   EXTRA_LINK_LIBS gandiva_static)\ndiff --git a/cpp/src/parquet/CMakeLists.txt b/cpp/src/parquet/CMakeLists.txt\nindex 1538b58164..246f69dcc0 100644\n--- a/cpp/src/parquet/CMakeLists.txt\n+++ b/cpp/src/parquet/CMakeLists.txt\n@@ -38,12 +38,12 @@ function(ADD_PARQUET_TEST REL_TEST_NAME)\n   # and uses less disk space, but in some cases we need to force static\n   # linking (see rationale below).\n   if (ARG_USE_STATIC_LINKING)\n-    ADD_ARROW_TEST(${REL_TEST_NAME}\n+    ADD_TEST_CASE(${REL_TEST_NAME}\n       STATIC_LINK_LIBS ${PARQUET_STATIC_TEST_LINK_LIBS}\n       PREFIX \"parquet\"\n       LABELS \"unittest;parquet\")\n   else()\n-    ADD_ARROW_TEST(${REL_TEST_NAME}\n+    ADD_TEST_CASE(${REL_TEST_NAME}\n       STATIC_LINK_LIBS ${PARQUET_SHARED_TEST_LINK_LIBS}\n       PREFIX \"parquet\"\n       LABELS \"unittest;parquet\")\ndiff --git a/cpp/src/plasma/CMakeLists.txt b/cpp/src/plasma/CMakeLists.txt\nindex 0f8916e6c4..4ea4b76066 100644\n--- a/cpp/src/plasma/CMakeLists.txt\n+++ b/cpp/src/plasma/CMakeLists.txt\n@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-cmake_minimum_required(VERSION 3.2)\n+add_custom_target(plasma)\n \n # For the moment, Plasma is versioned like Arrow\n project(plasma VERSION \"${ARROW_BASE_VERSION}\")\n@@ -198,8 +198,20 @@ endif()\n # Unit tests\n #######################################\n \n-ADD_ARROW_TEST(test/serialization_tests\n+# Adding unit tests part of the \"arrow\" portion of the test suite\n+function(ADD_PLASMA_TEST REL_TEST_NAME)\n+  set(options)\n+  set(one_value_args)\n+  set(multi_value_args)\n+  cmake_parse_arguments(ARG \"${options}\" \"${one_value_args}\" \"${multi_value_args}\" ${ARGN})\n+  ADD_TEST_CASE(${REL_TEST_NAME}\n+    PREFIX \"plasma\"\n+    LABELS \"unittest;plasma\"\n+    ${ARG_UNPARSED_ARGUMENTS})\n+endfunction()\n+\n+ADD_PLASMA_TEST(test/serialization_tests\n   EXTRA_LINK_LIBS plasma_shared ${PLASMA_LINK_LIBS})\n-ADD_ARROW_TEST(test/client_tests\n+ADD_PLASMA_TEST(test/client_tests\n   EXTRA_LINK_LIBS plasma_shared ${PLASMA_LINK_LIBS}\n   EXTRA_DEPENDENCIES plasma_store_server)\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-10T23:55:42.382+0000",
                    "updated": "2018-12-10T23:55:42.382+0000",
                    "started": "2018-12-10T23:55:42.381+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173822",
                    "issueId": "13185512"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185512/worklog/173880",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3152: ARROW-3248: [C++] Add \"arrow\" prefix to Arrow core unit tests, use PREFIX instead of file name for csv, io, ipc tests. Modular target cleanup\nURL: https://github.com/apache/arrow/pull/3152#issuecomment-446056652\n \n \n   I missed a small breakage in the protocol integration tests. I just pushed a fix in https://github.com/apache/arrow/pull/3153\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-11T03:09:59.366+0000",
                    "updated": "2018-12-11T03:09:59.366+0000",
                    "started": "2018-12-11T03:09:59.365+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173880",
                    "issueId": "13185512"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
            "id": "5",
            "description": "General wishlist item.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Wish",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 5400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6364323e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@230781ff[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@656b1b1f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7afc7634[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@57bf0f33[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@116561a4[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2c6b3374[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@35bfbd1b[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a56ea08[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2004c0a7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5501a740[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1d9e8f9e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 5400,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Dec 10 23:55:29 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-12-10T23:55:29.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3248/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-09-17T13:01:12.000+0000",
        "updated": "2018-12-11T03:09:59.000+0000",
        "timeoriginalestimate": null,
        "description": "It would help executing only them, not Parquet unit tests which for some reason are quite a bit longer to run.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 5400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Arrow tests should have label \"arrow\"",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185512/comment/16710394",
                    "id": "16710394",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I think the easiest thing would be to add a `ADD_CORE_TEST` function that applies the \"arrow\" prefix/label and passes through the rest of the arguments unmodified.\r\n\r\nSee https://github.com/apache/arrow/blob/master/cpp/src/gandiva/CMakeLists.txt#L140 -- though this can likely be even simpler",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-12-05T17:41:00.603+0000",
                    "updated": "2018-12-05T17:41:00.603+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185512/comment/16715800",
                    "id": "16715800",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 3152\n[https://github.com/apache/arrow/pull/3152]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-12-10T23:55:29.605+0000",
                    "updated": "2018-12-10T23:55:29.605+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|i3y5uv:",
        "customfield_12314139": null
    }
}