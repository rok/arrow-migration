{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13374535",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535",
    "key": "ARROW-12517",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
            "name": "zeroshade",
            "key": "zeroshade",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
            },
            "displayName": "Matthew Topol",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333772",
                "id": "12333772",
                "name": "Go"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pgwhalen",
            "name": "pgwhalen",
            "key": "pgwhalen",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paul Whalen",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pgwhalen",
            "name": "pgwhalen",
            "key": "pgwhalen",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paul Whalen",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12517/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 16,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535/worklog/587972",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade opened a new pull request #10142:\nURL: https://github.com/apache/arrow/pull/10142\n\n\n   Adding a convenient way to expose the Application Metadata field in the arrow flight client and server for Go.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-23T16:38:37.619+0000",
                    "updated": "2021-04-23T16:38:37.619+0000",
                    "started": "2021-04-23T16:38:37.619+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "587972",
                    "issueId": "13374535"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535/worklog/587973",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on pull request #10142:\nURL: https://github.com/apache/arrow/pull/10142#issuecomment-825779166\n\n\n   @sbinet @emkornfield \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-23T16:39:01.412+0000",
                    "updated": "2021-04-23T16:39:01.412+0000",
                    "started": "2021-04-23T16:39:01.412+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "587973",
                    "issueId": "13374535"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535/worklog/587974",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10142:\nURL: https://github.com/apache/arrow/pull/10142#issuecomment-825779175\n\n\n   https://issues.apache.org/jira/browse/ARROW-12517\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-23T16:39:14.601+0000",
                    "updated": "2021-04-23T16:39:14.601+0000",
                    "started": "2021-04-23T16:39:14.600+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "587974",
                    "issueId": "13374535"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535/worklog/588049",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pgwhalen commented on a change in pull request #10142:\nURL: https://github.com/apache/arrow/pull/10142#discussion_r619418953\n\n\n\n##########\nFile path: go/arrow/flight/record_batch_writer.go\n##########\n@@ -46,17 +47,39 @@ func (f *flightPayloadWriter) WritePayload(payload ipc.Payload) error {\n \n \tpayload.SerializeBody(&f.buf)\n \tf.fd.DataBody = f.buf.Bytes()\n+\n \treturn f.w.Send(&f.fd)\n }\n \n func (f *flightPayloadWriter) Close() error { return nil }\n \n+type Writer struct {\n+\t*ipc.Writer\n+\tpw *flightPayloadWriter\n+}\n+\n+// ClearAppMetadata sets the writers app metadata to nil so that subsequent records\n+// will not contain App Metadata until another call is made to WriteWithAppMetadata.\n+func (w *Writer) ClearAppMetadata() {\n+\tw.pw.fd.AppMetadata = nil\n+}\n\nReview comment:\n       Is the idea that you would call `ClearAppMetadata()` after calling `WriteWithAppMetadata()` but before calling `Write()` (with no metadata)?  If so, it might be nice to put this pattern in an integration test, since the tests are probably serving as documentation to most users for now (at least it did to me).\r\n   \r\n   That being said, what do you think about just setting `w.pw.fd.AppMetadata = nil` in `WriteWithAppMetadata()` after `w.Write(rec)`?  So that you don't have to remember calling `ClearAppMetadata()`.\r\n   \r\n   At least the way I've been using it, \"sticky\" metadata would be an unfortunate bug, and it would be nice to minimize the chances of that.  I suppose my mental model about non-sticky metadata could be wrong, but at least the Java client assumes it is not sticky.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-23T18:28:08.049+0000",
                    "updated": "2021-04-23T18:28:08.049+0000",
                    "started": "2021-04-23T18:28:08.048+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "588049",
                    "issueId": "13374535"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535/worklog/588054",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #10142:\nURL: https://github.com/apache/arrow/pull/10142#discussion_r619423782\n\n\n\n##########\nFile path: go/arrow/flight/record_batch_writer.go\n##########\n@@ -46,17 +47,39 @@ func (f *flightPayloadWriter) WritePayload(payload ipc.Payload) error {\n \n \tpayload.SerializeBody(&f.buf)\n \tf.fd.DataBody = f.buf.Bytes()\n+\n \treturn f.w.Send(&f.fd)\n }\n \n func (f *flightPayloadWriter) Close() error { return nil }\n \n+type Writer struct {\n+\t*ipc.Writer\n+\tpw *flightPayloadWriter\n+}\n+\n+// ClearAppMetadata sets the writers app metadata to nil so that subsequent records\n+// will not contain App Metadata until another call is made to WriteWithAppMetadata.\n+func (w *Writer) ClearAppMetadata() {\n+\tw.pw.fd.AppMetadata = nil\n+}\n\nReview comment:\n       fair point. I've updated this without the ClearAppMetadata and made it no longer \"sticky\". Metadata only sticks around for a single write.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-23T18:35:32.415+0000",
                    "updated": "2021-04-23T18:35:32.415+0000",
                    "started": "2021-04-23T18:35:32.415+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "588054",
                    "issueId": "13374535"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535/worklog/588574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10142:\nURL: https://github.com/apache/arrow/pull/10142#discussion_r619876276\n\n\n\n##########\nFile path: go/arrow/flight/record_batch_reader.go\n##########\n@@ -60,15 +68,41 @@ func (d *dataMessageReader) Release() {\n \t\tif d.msg != nil {\n \t\t\td.msg.Release()\n \t\t\td.msg = nil\n+\t\t\td.lastAppMetadata = nil\n \t\t}\n \t}\n }\n \n+type Reader struct {\n+\t*ipc.Reader\n+\tdmr *dataMessageReader\n+}\n+\n+func (r *Reader) Retain() {\n\nReview comment:\n       here and below, these are public methods?  It would be nice to add some documentation.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-25T20:53:03.404+0000",
                    "updated": "2021-04-25T20:53:03.404+0000",
                    "started": "2021-04-25T20:53:03.403+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "588574",
                    "issueId": "13374535"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535/worklog/588575",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10142:\nURL: https://github.com/apache/arrow/pull/10142#discussion_r619876590\n\n\n\n##########\nFile path: go/arrow/flight/flight_test.go\n##########\n@@ -311,3 +312,65 @@ func TestServer(t *testing.T) {\n \t\tt.Fatalf(\"got %d, want %d\", numRows, fi.TotalRecords)\n \t}\n }\n+\n+type flightMetadataWriterServer struct{}\n+\n+func (f *flightMetadataWriterServer) DoGet(tkt *flight.Ticket, fs flight.FlightService_DoGetServer) error {\n+\trecs := arrdata.Records[string(tkt.GetTicket())]\n+\n+\tw := flight.NewRecordWriter(fs, ipc.WithSchema(recs[0].Schema()))\n+\tdefer w.Close()\n+\tfor idx, r := range recs {\n+\t\tw.WriteWithAppMetadata(r, []byte(fmt.Sprintf(\"%d_%s\", idx, string(tkt.GetTicket()))))\n\nReview comment:\n       nit: not sure go convention here.  But in other langauges I find it useful to document literal like  parameters (the second parameter in this case indicating the second parameter name.\r\n   \r\n   i.e. `/*metadata=*/[]byte(fmt.Sprintf(\"%d_%s\", idx, string(tkt.GetTicket())`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-25T20:55:19.329+0000",
                    "updated": "2021-04-25T20:55:19.329+0000",
                    "started": "2021-04-25T20:55:19.329+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "588575",
                    "issueId": "13374535"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535/worklog/588576",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #10142:\nURL: https://github.com/apache/arrow/pull/10142#issuecomment-826388610\n\n\n   A few minor comments otherwise this looks reasonable.  thank you @zeroshade \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-25T20:56:02.503+0000",
                    "updated": "2021-04-25T20:56:02.503+0000",
                    "started": "2021-04-25T20:56:02.503+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "588576",
                    "issueId": "13374535"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535/worklog/588614",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #10142:\nURL: https://github.com/apache/arrow/pull/10142#discussion_r619888556\n\n\n\n##########\nFile path: go/arrow/flight/flight_test.go\n##########\n@@ -311,3 +312,65 @@ func TestServer(t *testing.T) {\n \t\tt.Fatalf(\"got %d, want %d\", numRows, fi.TotalRecords)\n \t}\n }\n+\n+type flightMetadataWriterServer struct{}\n+\n+func (f *flightMetadataWriterServer) DoGet(tkt *flight.Ticket, fs flight.FlightService_DoGetServer) error {\n+\trecs := arrdata.Records[string(tkt.GetTicket())]\n+\n+\tw := flight.NewRecordWriter(fs, ipc.WithSchema(recs[0].Schema()))\n+\tdefer w.Close()\n+\tfor idx, r := range recs {\n+\t\tw.WriteWithAppMetadata(r, []byte(fmt.Sprintf(\"%d_%s\", idx, string(tkt.GetTicket()))))\n\nReview comment:\n       Go doesn't particularly have a convention for that type of thing, most of the time it's handled by whatever IDE you're using which would be able to tell you what each argument was by hovering over the function. But it's easy to add some comments such as you described, i'll update\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-25T22:26:34.757+0000",
                    "updated": "2021-04-25T22:26:34.757+0000",
                    "started": "2021-04-25T22:26:34.757+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "588614",
                    "issueId": "13374535"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535/worklog/588615",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #10142:\nURL: https://github.com/apache/arrow/pull/10142#discussion_r619889834\n\n\n\n##########\nFile path: go/arrow/flight/flight_test.go\n##########\n@@ -311,3 +312,65 @@ func TestServer(t *testing.T) {\n \t\tt.Fatalf(\"got %d, want %d\", numRows, fi.TotalRecords)\n \t}\n }\n+\n+type flightMetadataWriterServer struct{}\n+\n+func (f *flightMetadataWriterServer) DoGet(tkt *flight.Ticket, fs flight.FlightService_DoGetServer) error {\n+\trecs := arrdata.Records[string(tkt.GetTicket())]\n+\n+\tw := flight.NewRecordWriter(fs, ipc.WithSchema(recs[0].Schema()))\n+\tdefer w.Close()\n+\tfor idx, r := range recs {\n+\t\tw.WriteWithAppMetadata(r, []byte(fmt.Sprintf(\"%d_%s\", idx, string(tkt.GetTicket()))))\n\nReview comment:\n       So when running `gofmt` after adding the `/*metadata*/` before `[]byte(fmt.Sprintf(\"%d_%s\", idx, string(tkt.GetTicket())))` it insisted on the comment being put after the `r` before the comma, so it appears that the convention for Go is for the comment identifying the literal to be *after* the value, rather than before it. So that's what i'll do.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-25T22:36:38.953+0000",
                    "updated": "2021-04-25T22:36:38.953+0000",
                    "started": "2021-04-25T22:36:38.953+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "588615",
                    "issueId": "13374535"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535/worklog/588652",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #10142:\nURL: https://github.com/apache/arrow/pull/10142#discussion_r619925679\n\n\n\n##########\nFile path: go/arrow/flight/record_batch_reader.go\n##########\n@@ -60,15 +68,41 @@ func (d *dataMessageReader) Release() {\n \t\tif d.msg != nil {\n \t\t\td.msg.Release()\n \t\t\td.msg = nil\n+\t\t\td.lastAppMetadata = nil\n \t\t}\n \t}\n }\n \n+type Reader struct {\n+\t*ipc.Reader\n+\tdmr *dataMessageReader\n+}\n+\n+func (r *Reader) Retain() {\n\nReview comment:\n       added\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-26T01:55:45.472+0000",
                    "updated": "2021-04-26T01:55:45.472+0000",
                    "started": "2021-04-26T01:55:45.472+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "588652",
                    "issueId": "13374535"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535/worklog/588792",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #10142:\nURL: https://github.com/apache/arrow/pull/10142#discussion_r619888556\n\n\n\n##########\nFile path: go/arrow/flight/flight_test.go\n##########\n@@ -311,3 +312,65 @@ func TestServer(t *testing.T) {\n \t\tt.Fatalf(\"got %d, want %d\", numRows, fi.TotalRecords)\n \t}\n }\n+\n+type flightMetadataWriterServer struct{}\n+\n+func (f *flightMetadataWriterServer) DoGet(tkt *flight.Ticket, fs flight.FlightService_DoGetServer) error {\n+\trecs := arrdata.Records[string(tkt.GetTicket())]\n+\n+\tw := flight.NewRecordWriter(fs, ipc.WithSchema(recs[0].Schema()))\n+\tdefer w.Close()\n+\tfor idx, r := range recs {\n+\t\tw.WriteWithAppMetadata(r, []byte(fmt.Sprintf(\"%d_%s\", idx, string(tkt.GetTicket()))))\n\nReview comment:\n       Go doesn't particularly have a convention for that type of thing, most of the time it's handled by whatever IDE you're using which would be able to tell you what each argument was by hovering over the function. But it's easy to add some comments such as you described, i'll update\n\n##########\nFile path: go/arrow/flight/flight_test.go\n##########\n@@ -311,3 +312,65 @@ func TestServer(t *testing.T) {\n \t\tt.Fatalf(\"got %d, want %d\", numRows, fi.TotalRecords)\n \t}\n }\n+\n+type flightMetadataWriterServer struct{}\n+\n+func (f *flightMetadataWriterServer) DoGet(tkt *flight.Ticket, fs flight.FlightService_DoGetServer) error {\n+\trecs := arrdata.Records[string(tkt.GetTicket())]\n+\n+\tw := flight.NewRecordWriter(fs, ipc.WithSchema(recs[0].Schema()))\n+\tdefer w.Close()\n+\tfor idx, r := range recs {\n+\t\tw.WriteWithAppMetadata(r, []byte(fmt.Sprintf(\"%d_%s\", idx, string(tkt.GetTicket()))))\n\nReview comment:\n       So when running `gofmt` after adding the `/*metadata*/` before `[]byte(fmt.Sprintf(\"%d_%s\", idx, string(tkt.GetTicket())))` it insisted on the comment being put after the `r` before the comma, so it appears that the convention for Go is for the comment identifying the literal to be *after* the value, rather than before it. So that's what i'll do.\n\n##########\nFile path: go/arrow/flight/record_batch_reader.go\n##########\n@@ -60,15 +68,41 @@ func (d *dataMessageReader) Release() {\n \t\tif d.msg != nil {\n \t\t\td.msg.Release()\n \t\t\td.msg = nil\n+\t\t\td.lastAppMetadata = nil\n \t\t}\n \t}\n }\n \n+type Reader struct {\n+\t*ipc.Reader\n+\tdmr *dataMessageReader\n+}\n+\n+func (r *Reader) Retain() {\n\nReview comment:\n       added\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-26T06:47:14.309+0000",
                    "updated": "2021-04-26T06:47:14.309+0000",
                    "started": "2021-04-26T06:47:14.309+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "588792",
                    "issueId": "13374535"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535/worklog/588892",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10142:\nURL: https://github.com/apache/arrow/pull/10142#discussion_r619876276\n\n\n\n##########\nFile path: go/arrow/flight/record_batch_reader.go\n##########\n@@ -60,15 +68,41 @@ func (d *dataMessageReader) Release() {\n \t\tif d.msg != nil {\n \t\t\td.msg.Release()\n \t\t\td.msg = nil\n+\t\t\td.lastAppMetadata = nil\n \t\t}\n \t}\n }\n \n+type Reader struct {\n+\t*ipc.Reader\n+\tdmr *dataMessageReader\n+}\n+\n+func (r *Reader) Retain() {\n\nReview comment:\n       here and below, these are public methods?  It would be nice to add some documentation.\n\n##########\nFile path: go/arrow/flight/flight_test.go\n##########\n@@ -311,3 +312,65 @@ func TestServer(t *testing.T) {\n \t\tt.Fatalf(\"got %d, want %d\", numRows, fi.TotalRecords)\n \t}\n }\n+\n+type flightMetadataWriterServer struct{}\n+\n+func (f *flightMetadataWriterServer) DoGet(tkt *flight.Ticket, fs flight.FlightService_DoGetServer) error {\n+\trecs := arrdata.Records[string(tkt.GetTicket())]\n+\n+\tw := flight.NewRecordWriter(fs, ipc.WithSchema(recs[0].Schema()))\n+\tdefer w.Close()\n+\tfor idx, r := range recs {\n+\t\tw.WriteWithAppMetadata(r, []byte(fmt.Sprintf(\"%d_%s\", idx, string(tkt.GetTicket()))))\n\nReview comment:\n       nit: not sure go convention here.  But in other langauges I find it useful to document literal like  parameters (the second parameter in this case indicating the second parameter name.\r\n   \r\n   i.e. `/*metadata=*/[]byte(fmt.Sprintf(\"%d_%s\", idx, string(tkt.GetTicket())`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-26T06:58:48.934+0000",
                    "updated": "2021-04-26T06:58:48.934+0000",
                    "started": "2021-04-26T06:58:48.933+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "588892",
                    "issueId": "13374535"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535/worklog/588992",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #10142:\nURL: https://github.com/apache/arrow/pull/10142#issuecomment-826388610\n\n\n   A few minor comments otherwise this looks reasonable.  thank you @zeroshade \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-26T07:11:25.178+0000",
                    "updated": "2021-04-26T07:11:25.178+0000",
                    "started": "2021-04-26T07:11:25.178+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "588992",
                    "issueId": "13374535"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535/worklog/589279",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on pull request #10142:\nURL: https://github.com/apache/arrow/pull/10142#issuecomment-826908506\n\n\n   @emkornfield I've updated based on your feedback and responded to the questions. Let me know if there's anything else needed\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-26T15:04:01.795+0000",
                    "updated": "2021-04-26T15:04:01.795+0000",
                    "started": "2021-04-26T15:04:01.795+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "589279",
                    "issueId": "13374535"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535/worklog/590485",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield closed pull request #10142:\nURL: https://github.com/apache/arrow/pull/10142\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-28T15:54:03.718+0000",
                    "updated": "2021-04-28T15:54:03.718+0000",
                    "started": "2021-04-28T15:54:03.718+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "590485",
                    "issueId": "13374535"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6a1f9a88[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@54fd5b05[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@92f58aa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@37340ff9[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6c57db0e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@61780ef8[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@12e1f075[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@53d6e17[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@57604a15[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@764e91cf[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6bb1b52b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@512239c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Apr 28 15:53:59 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-04-28T15:53:59.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12517/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-04-23T03:19:13.000+0000",
        "updated": "2021-04-28T15:54:04.000+0000",
        "timeoriginalestimate": null,
        "description": "There isn't a convenient way to access the App Metadata from a Flight stream via the Go client, because the `ipc.Reader` returned from calling `flight.NewRecordReader()` only exposes the `array.Record` as you read data from it.  This should expose a Flight-specific reader so the client can also access the metadata, perhaps.\r\n\r\nModified `record_batch_reader.go` workaround/idea [here|https://gist.github.com/pgwhalen/ed768e18917610b2de7942144068f205].\r\n\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Go] Expose App Metadata in Flight client",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374535/comment/17334824",
                    "id": "17334824",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 10142\n[https://github.com/apache/arrow/pull/10142]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-04-28T15:53:59.893+0000",
                    "updated": "2021-04-28T15:53:59.893+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0qd2w:",
        "customfield_12314139": null
    }
}