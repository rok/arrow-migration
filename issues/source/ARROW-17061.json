{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13471284",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471284",
    "key": "ARROW-17061",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
            "name": "vibhatha",
            "key": "vibhatha",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Vibhatha Lakmal Abeykoon",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=richtia",
            "name": "richtia",
            "key": "JIRAUSER291450",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Richard Tia",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=richtia",
            "name": "richtia",
            "key": "JIRAUSER291450",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Richard Tia",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17061/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 9,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471284/worklog/808751",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha opened a new pull request, #14123:\nURL: https://github.com/apache/arrow/pull/14123\n\n   This PR is **WORK IN PROGRESS**. \r\n   \r\n   Testing the functions integrated to the Acero-Substrait via Python test cases.\r\n   Started possibly to test out a bug, but planning on re-iterating this into a function test suite.\n\n\n",
                    "created": "2022-09-14T14:33:46.160+0000",
                    "updated": "2022-09-14T14:33:46.160+0000",
                    "started": "2022-09-14T14:33:46.160+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808751",
                    "issueId": "13471284"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471284/worklog/808790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14123:\nURL: https://github.com/apache/arrow/pull/14123#issuecomment-1246986888\n\n   https://issues.apache.org/jira/browse/ARROW-17061\n\n\n",
                    "created": "2022-09-14T16:04:22.529+0000",
                    "updated": "2022-09-14T16:04:22.529+0000",
                    "started": "2022-09-14T16:04:22.529+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808790",
                    "issueId": "13471284"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471284/worklog/808791",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14123:\nURL: https://github.com/apache/arrow/pull/14123#issuecomment-1246986917\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-09-14T16:04:24.024+0000",
                    "updated": "2022-09-14T16:04:24.024+0000",
                    "started": "2022-09-14T16:04:24.024+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808791",
                    "issueId": "13471284"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471284/worklog/808882",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "richtia commented on code in PR #14123:\nURL: https://github.com/apache/arrow/pull/14123#discussion_r971308357\n\n\n##########\npython/pyarrow/tests/test_substrait.py:\n##########\n@@ -165,3 +169,108 @@ def test_get_supported_functions():\n                         'functions_arithmetic.yaml', 'add')\n     assert has_function(supported_functions,\n                         'functions_arithmetic.yaml', 'sum')\n+\n+# TODO: add a test suite to check the integrated functions\n+\n+\n+@pytest.mark.skipif(sys.platform == 'win32',\n+                    reason=\"ARROW-16392: file based URI is\" +\n+                    \" not fully supported for Windows\")\n+def test_run_aggregate_query(tmpdir):\n+    substrait_query = \"\"\"\n+    {\n+        \"relations\": [{\n+        \"rel\": {\n+            \"aggregate\": {\n+            \"input\": {\n+                \"read\": {\n+                \"base_schema\": {\n+                    \"names\": [\"A\", \"B\", \"C\"],\n+                    \"struct\": {\n+                    \"types\": [{\n+                        \"i64\": {}\n+                    }, {\n+                        \"i64\": {}\n+                    }, {\n+                        \"i64\": {}\n+                    }]\n+                    }\n+                },\n+                \"local_files\": {\n+                    \"items\": [\n+                    {\n+                        \"uri_file\": \"file://FILENAME_PLACEHOLDER\",\n+                        \"arrow\": {}\n+                    }\n+                    ]\n+                }\n+                }\n+            },\n+            \"groupings\": [{\n+                \"groupingExpressions\": [{\n+                \"selection\": {\n+                    \"directReference\": {\n+                    \"structField\": {\n+                        \"field\": 0\n+                    }\n+                    }\n+                }\n+                }]\n+            }],\n+            \"measures\": [{\n+                \"measure\": {\n+                \"functionReference\": 0,\n+                \"arguments\": [{\n+                    \"value\": {\n+                    \"selection\": {\n+                        \"directReference\": {\n+                        \"structField\": {\n+                            \"field\": 1\n+                        }\n+                        }\n+                    }\n+                    }\n+                }],\n+                \"sorts\": [],\n+                \"phase\": \"AGGREGATION_PHASE_INITIAL_TO_RESULT\",\n+                \"invocation\": \"AGGREGATION_INVOCATION_ALL\",\n+                \"outputType\": {\n+                    \"i64\": {}\n+                }\n+                }\n+            }]\n+            }\n+        }\n+        }],\n+        \"extensionUris\": [{\n+        \"extension_uri_anchor\": 0,\n+        \"uri\": \"AGGREGATE_URI_PLACEHOLDER\"\n+        }],\n+        \"extensions\": [{\n+        \"extension_function\": {\n+            \"extension_uri_reference\": 0,\n+            \"function_anchor\": 0,\n+            \"name\": \"count\"\n+        }\n+        }]\n+    }\n+    \"\"\"\n+\n+    file_name = \"read_agg_data.arrow\"\n+    table = pa.Table.from_arrays([[1, 2, 3, 2, 3, 1, 1],\n+                                  [10, 20, 30, 40, 50, 60, 70],\n+                                  [3, 4, 5, 1, 2, 0, 20]],\n+                                 names=['A', 'B', 'C'])\n+    path = _write_dummy_data_to_disk(tmpdir, file_name, table)\n+\n+    query_with_path = substrait_query.replace(\"FILENAME_PLACEHOLDER\", path)\n+    query_with_ext_uri = query_with_path.replace(\n+        \"AGGREGATE_URI_PLACEHOLDER\", _kAggregateURI)\n\nReview Comment:\n   Are we going to need to do this for all of our substrait plans?  Shouldn't Acero be handling this part?\n\n\n\n",
                    "created": "2022-09-14T21:23:14.735+0000",
                    "updated": "2022-09-14T21:23:14.735+0000",
                    "started": "2022-09-14T21:23:14.734+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808882",
                    "issueId": "13471284"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471284/worklog/808912",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #14123:\nURL: https://github.com/apache/arrow/pull/14123#discussion_r971406616\n\n\n##########\npython/pyarrow/tests/test_substrait.py:\n##########\n@@ -165,3 +169,108 @@ def test_get_supported_functions():\n                         'functions_arithmetic.yaml', 'add')\n     assert has_function(supported_functions,\n                         'functions_arithmetic.yaml', 'sum')\n+\n+# TODO: add a test suite to check the integrated functions\n+\n+\n+@pytest.mark.skipif(sys.platform == 'win32',\n+                    reason=\"ARROW-16392: file based URI is\" +\n+                    \" not fully supported for Windows\")\n+def test_run_aggregate_query(tmpdir):\n+    substrait_query = \"\"\"\n+    {\n+        \"relations\": [{\n+        \"rel\": {\n+            \"aggregate\": {\n+            \"input\": {\n+                \"read\": {\n+                \"base_schema\": {\n+                    \"names\": [\"A\", \"B\", \"C\"],\n+                    \"struct\": {\n+                    \"types\": [{\n+                        \"i64\": {}\n+                    }, {\n+                        \"i64\": {}\n+                    }, {\n+                        \"i64\": {}\n+                    }]\n+                    }\n+                },\n+                \"local_files\": {\n+                    \"items\": [\n+                    {\n+                        \"uri_file\": \"file://FILENAME_PLACEHOLDER\",\n+                        \"arrow\": {}\n+                    }\n+                    ]\n+                }\n+                }\n+            },\n+            \"groupings\": [{\n+                \"groupingExpressions\": [{\n+                \"selection\": {\n+                    \"directReference\": {\n+                    \"structField\": {\n+                        \"field\": 0\n+                    }\n+                    }\n+                }\n+                }]\n+            }],\n+            \"measures\": [{\n+                \"measure\": {\n+                \"functionReference\": 0,\n+                \"arguments\": [{\n+                    \"value\": {\n+                    \"selection\": {\n+                        \"directReference\": {\n+                        \"structField\": {\n+                            \"field\": 1\n+                        }\n+                        }\n+                    }\n+                    }\n+                }],\n+                \"sorts\": [],\n+                \"phase\": \"AGGREGATION_PHASE_INITIAL_TO_RESULT\",\n+                \"invocation\": \"AGGREGATION_INVOCATION_ALL\",\n+                \"outputType\": {\n+                    \"i64\": {}\n+                }\n+                }\n+            }]\n+            }\n+        }\n+        }],\n+        \"extensionUris\": [{\n+        \"extension_uri_anchor\": 0,\n+        \"uri\": \"AGGREGATE_URI_PLACEHOLDER\"\n+        }],\n+        \"extensions\": [{\n+        \"extension_function\": {\n+            \"extension_uri_reference\": 0,\n+            \"function_anchor\": 0,\n+            \"name\": \"count\"\n+        }\n+        }]\n+    }\n+    \"\"\"\n+\n+    file_name = \"read_agg_data.arrow\"\n+    table = pa.Table.from_arrays([[1, 2, 3, 2, 3, 1, 1],\n+                                  [10, 20, 30, 40, 50, 60, 70],\n+                                  [3, 4, 5, 1, 2, 0, 20]],\n+                                 names=['A', 'B', 'C'])\n+    path = _write_dummy_data_to_disk(tmpdir, file_name, table)\n+\n+    query_with_path = substrait_query.replace(\"FILENAME_PLACEHOLDER\", path)\n+    query_with_ext_uri = query_with_path.replace(\n+        \"AGGREGATE_URI_PLACEHOLDER\", _kAggregateURI)\n\nReview Comment:\n   This is part of the Substrait query, right? You would stil have to reference it AFAIK.\n\n\n\n",
                    "created": "2022-09-15T00:23:42.341+0000",
                    "updated": "2022-09-15T00:23:42.341+0000",
                    "started": "2022-09-15T00:23:42.341+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808912",
                    "issueId": "13471284"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471284/worklog/808943",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "richtia commented on code in PR #14123:\nURL: https://github.com/apache/arrow/pull/14123#discussion_r971456421\n\n\n##########\npython/pyarrow/tests/test_substrait.py:\n##########\n@@ -165,3 +169,108 @@ def test_get_supported_functions():\n                         'functions_arithmetic.yaml', 'add')\n     assert has_function(supported_functions,\n                         'functions_arithmetic.yaml', 'sum')\n+\n+# TODO: add a test suite to check the integrated functions\n+\n+\n+@pytest.mark.skipif(sys.platform == 'win32',\n+                    reason=\"ARROW-16392: file based URI is\" +\n+                    \" not fully supported for Windows\")\n+def test_run_aggregate_query(tmpdir):\n+    substrait_query = \"\"\"\n+    {\n+        \"relations\": [{\n+        \"rel\": {\n+            \"aggregate\": {\n+            \"input\": {\n+                \"read\": {\n+                \"base_schema\": {\n+                    \"names\": [\"A\", \"B\", \"C\"],\n+                    \"struct\": {\n+                    \"types\": [{\n+                        \"i64\": {}\n+                    }, {\n+                        \"i64\": {}\n+                    }, {\n+                        \"i64\": {}\n+                    }]\n+                    }\n+                },\n+                \"local_files\": {\n+                    \"items\": [\n+                    {\n+                        \"uri_file\": \"file://FILENAME_PLACEHOLDER\",\n+                        \"arrow\": {}\n+                    }\n+                    ]\n+                }\n+                }\n+            },\n+            \"groupings\": [{\n+                \"groupingExpressions\": [{\n+                \"selection\": {\n+                    \"directReference\": {\n+                    \"structField\": {\n+                        \"field\": 0\n+                    }\n+                    }\n+                }\n+                }]\n+            }],\n+            \"measures\": [{\n+                \"measure\": {\n+                \"functionReference\": 0,\n+                \"arguments\": [{\n+                    \"value\": {\n+                    \"selection\": {\n+                        \"directReference\": {\n+                        \"structField\": {\n+                            \"field\": 1\n+                        }\n+                        }\n+                    }\n+                    }\n+                }],\n+                \"sorts\": [],\n+                \"phase\": \"AGGREGATION_PHASE_INITIAL_TO_RESULT\",\n+                \"invocation\": \"AGGREGATION_INVOCATION_ALL\",\n+                \"outputType\": {\n+                    \"i64\": {}\n+                }\n+                }\n+            }]\n+            }\n+        }\n+        }],\n+        \"extensionUris\": [{\n+        \"extension_uri_anchor\": 0,\n+        \"uri\": \"AGGREGATE_URI_PLACEHOLDER\"\n+        }],\n+        \"extensions\": [{\n+        \"extension_function\": {\n+            \"extension_uri_reference\": 0,\n+            \"function_anchor\": 0,\n+            \"name\": \"count\"\n+        }\n+        }]\n+    }\n+    \"\"\"\n+\n+    file_name = \"read_agg_data.arrow\"\n+    table = pa.Table.from_arrays([[1, 2, 3, 2, 3, 1, 1],\n+                                  [10, 20, 30, 40, 50, 60, 70],\n+                                  [3, 4, 5, 1, 2, 0, 20]],\n+                                 names=['A', 'B', 'C'])\n+    path = _write_dummy_data_to_disk(tmpdir, file_name, table)\n+\n+    query_with_path = substrait_query.replace(\"FILENAME_PLACEHOLDER\", path)\n+    query_with_ext_uri = query_with_path.replace(\n+        \"AGGREGATE_URI_PLACEHOLDER\", _kAggregateURI)\n\nReview Comment:\n   The substrait plan is generated with the name of the yaml file in it already.  I think @westonpace is actually going to submit a PR to automatically reference the proper URI given the name of the yaml.\n\n\n\n",
                    "created": "2022-09-15T02:19:44.801+0000",
                    "updated": "2022-09-15T02:19:44.801+0000",
                    "started": "2022-09-15T02:19:44.800+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808943",
                    "issueId": "13471284"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471284/worklog/808975",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #14123:\nURL: https://github.com/apache/arrow/pull/14123#discussion_r971568991\n\n\n##########\npython/pyarrow/tests/test_substrait.py:\n##########\n@@ -165,3 +169,108 @@ def test_get_supported_functions():\n                         'functions_arithmetic.yaml', 'add')\n     assert has_function(supported_functions,\n                         'functions_arithmetic.yaml', 'sum')\n+\n+# TODO: add a test suite to check the integrated functions\n+\n+\n+@pytest.mark.skipif(sys.platform == 'win32',\n+                    reason=\"ARROW-16392: file based URI is\" +\n+                    \" not fully supported for Windows\")\n+def test_run_aggregate_query(tmpdir):\n+    substrait_query = \"\"\"\n+    {\n+        \"relations\": [{\n+        \"rel\": {\n+            \"aggregate\": {\n+            \"input\": {\n+                \"read\": {\n+                \"base_schema\": {\n+                    \"names\": [\"A\", \"B\", \"C\"],\n+                    \"struct\": {\n+                    \"types\": [{\n+                        \"i64\": {}\n+                    }, {\n+                        \"i64\": {}\n+                    }, {\n+                        \"i64\": {}\n+                    }]\n+                    }\n+                },\n+                \"local_files\": {\n+                    \"items\": [\n+                    {\n+                        \"uri_file\": \"file://FILENAME_PLACEHOLDER\",\n+                        \"arrow\": {}\n+                    }\n+                    ]\n+                }\n+                }\n+            },\n+            \"groupings\": [{\n+                \"groupingExpressions\": [{\n+                \"selection\": {\n+                    \"directReference\": {\n+                    \"structField\": {\n+                        \"field\": 0\n+                    }\n+                    }\n+                }\n+                }]\n+            }],\n+            \"measures\": [{\n+                \"measure\": {\n+                \"functionReference\": 0,\n+                \"arguments\": [{\n+                    \"value\": {\n+                    \"selection\": {\n+                        \"directReference\": {\n+                        \"structField\": {\n+                            \"field\": 1\n+                        }\n+                        }\n+                    }\n+                    }\n+                }],\n+                \"sorts\": [],\n+                \"phase\": \"AGGREGATION_PHASE_INITIAL_TO_RESULT\",\n+                \"invocation\": \"AGGREGATION_INVOCATION_ALL\",\n+                \"outputType\": {\n+                    \"i64\": {}\n+                }\n+                }\n+            }]\n+            }\n+        }\n+        }],\n+        \"extensionUris\": [{\n+        \"extension_uri_anchor\": 0,\n+        \"uri\": \"AGGREGATE_URI_PLACEHOLDER\"\n+        }],\n+        \"extensions\": [{\n+        \"extension_function\": {\n+            \"extension_uri_reference\": 0,\n+            \"function_anchor\": 0,\n+            \"name\": \"count\"\n+        }\n+        }]\n+    }\n+    \"\"\"\n+\n+    file_name = \"read_agg_data.arrow\"\n+    table = pa.Table.from_arrays([[1, 2, 3, 2, 3, 1, 1],\n+                                  [10, 20, 30, 40, 50, 60, 70],\n+                                  [3, 4, 5, 1, 2, 0, 20]],\n+                                 names=['A', 'B', 'C'])\n+    path = _write_dummy_data_to_disk(tmpdir, file_name, table)\n+\n+    query_with_path = substrait_query.replace(\"FILENAME_PLACEHOLDER\", path)\n+    query_with_ext_uri = query_with_path.replace(\n+        \"AGGREGATE_URI_PLACEHOLDER\", _kAggregateURI)\n\nReview Comment:\n   https://issues.apache.org/jira/browse/ARROW-17736 explains what I'm thinking.\n\n\n\n",
                    "created": "2022-09-15T06:18:57.214+0000",
                    "updated": "2022-09-15T06:18:57.214+0000",
                    "started": "2022-09-15T06:18:57.213+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808975",
                    "issueId": "13471284"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471284/worklog/808983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #14123:\nURL: https://github.com/apache/arrow/pull/14123#discussion_r971623029\n\n\n##########\npython/pyarrow/tests/test_substrait.py:\n##########\n@@ -165,3 +169,108 @@ def test_get_supported_functions():\n                         'functions_arithmetic.yaml', 'add')\n     assert has_function(supported_functions,\n                         'functions_arithmetic.yaml', 'sum')\n+\n+# TODO: add a test suite to check the integrated functions\n+\n+\n+@pytest.mark.skipif(sys.platform == 'win32',\n+                    reason=\"ARROW-16392: file based URI is\" +\n+                    \" not fully supported for Windows\")\n+def test_run_aggregate_query(tmpdir):\n+    substrait_query = \"\"\"\n+    {\n+        \"relations\": [{\n+        \"rel\": {\n+            \"aggregate\": {\n+            \"input\": {\n+                \"read\": {\n+                \"base_schema\": {\n+                    \"names\": [\"A\", \"B\", \"C\"],\n+                    \"struct\": {\n+                    \"types\": [{\n+                        \"i64\": {}\n+                    }, {\n+                        \"i64\": {}\n+                    }, {\n+                        \"i64\": {}\n+                    }]\n+                    }\n+                },\n+                \"local_files\": {\n+                    \"items\": [\n+                    {\n+                        \"uri_file\": \"file://FILENAME_PLACEHOLDER\",\n+                        \"arrow\": {}\n+                    }\n+                    ]\n+                }\n+                }\n+            },\n+            \"groupings\": [{\n+                \"groupingExpressions\": [{\n+                \"selection\": {\n+                    \"directReference\": {\n+                    \"structField\": {\n+                        \"field\": 0\n+                    }\n+                    }\n+                }\n+                }]\n+            }],\n+            \"measures\": [{\n+                \"measure\": {\n+                \"functionReference\": 0,\n+                \"arguments\": [{\n+                    \"value\": {\n+                    \"selection\": {\n+                        \"directReference\": {\n+                        \"structField\": {\n+                            \"field\": 1\n+                        }\n+                        }\n+                    }\n+                    }\n+                }],\n+                \"sorts\": [],\n+                \"phase\": \"AGGREGATION_PHASE_INITIAL_TO_RESULT\",\n+                \"invocation\": \"AGGREGATION_INVOCATION_ALL\",\n+                \"outputType\": {\n+                    \"i64\": {}\n+                }\n+                }\n+            }]\n+            }\n+        }\n+        }],\n+        \"extensionUris\": [{\n+        \"extension_uri_anchor\": 0,\n+        \"uri\": \"AGGREGATE_URI_PLACEHOLDER\"\n+        }],\n+        \"extensions\": [{\n+        \"extension_function\": {\n+            \"extension_uri_reference\": 0,\n+            \"function_anchor\": 0,\n+            \"name\": \"count\"\n+        }\n+        }]\n+    }\n+    \"\"\"\n+\n+    file_name = \"read_agg_data.arrow\"\n+    table = pa.Table.from_arrays([[1, 2, 3, 2, 3, 1, 1],\n+                                  [10, 20, 30, 40, 50, 60, 70],\n+                                  [3, 4, 5, 1, 2, 0, 20]],\n+                                 names=['A', 'B', 'C'])\n+    path = _write_dummy_data_to_disk(tmpdir, file_name, table)\n+\n+    query_with_path = substrait_query.replace(\"FILENAME_PLACEHOLDER\", path)\n+    query_with_ext_uri = query_with_path.replace(\n+        \"AGGREGATE_URI_PLACEHOLDER\", _kAggregateURI)\n\nReview Comment:\n   I will work on this one. \n\n\n\n",
                    "created": "2022-09-15T07:26:04.341+0000",
                    "updated": "2022-09-15T07:26:04.341+0000",
                    "started": "2022-09-15T07:26:04.340+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808983",
                    "issueId": "13471284"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471284/worklog/809241",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #14123:\nURL: https://github.com/apache/arrow/pull/14123#discussion_r972292685\n\n\n##########\npython/pyarrow/tests/test_substrait.py:\n##########\n@@ -165,3 +169,108 @@ def test_get_supported_functions():\n                         'functions_arithmetic.yaml', 'add')\n     assert has_function(supported_functions,\n                         'functions_arithmetic.yaml', 'sum')\n+\n+# TODO: add a test suite to check the integrated functions\n+\n+\n+@pytest.mark.skipif(sys.platform == 'win32',\n+                    reason=\"ARROW-16392: file based URI is\" +\n+                    \" not fully supported for Windows\")\n+def test_run_aggregate_query(tmpdir):\n+    substrait_query = \"\"\"\n+    {\n+        \"relations\": [{\n+        \"rel\": {\n+            \"aggregate\": {\n+            \"input\": {\n+                \"read\": {\n+                \"base_schema\": {\n+                    \"names\": [\"A\", \"B\", \"C\"],\n+                    \"struct\": {\n+                    \"types\": [{\n+                        \"i64\": {}\n+                    }, {\n+                        \"i64\": {}\n+                    }, {\n+                        \"i64\": {}\n+                    }]\n+                    }\n+                },\n+                \"local_files\": {\n+                    \"items\": [\n+                    {\n+                        \"uri_file\": \"file://FILENAME_PLACEHOLDER\",\n+                        \"arrow\": {}\n+                    }\n+                    ]\n+                }\n+                }\n+            },\n+            \"groupings\": [{\n+                \"groupingExpressions\": [{\n+                \"selection\": {\n+                    \"directReference\": {\n+                    \"structField\": {\n+                        \"field\": 0\n+                    }\n+                    }\n+                }\n+                }]\n+            }],\n+            \"measures\": [{\n+                \"measure\": {\n+                \"functionReference\": 0,\n+                \"arguments\": [{\n+                    \"value\": {\n+                    \"selection\": {\n+                        \"directReference\": {\n+                        \"structField\": {\n+                            \"field\": 1\n+                        }\n+                        }\n+                    }\n+                    }\n+                }],\n+                \"sorts\": [],\n+                \"phase\": \"AGGREGATION_PHASE_INITIAL_TO_RESULT\",\n+                \"invocation\": \"AGGREGATION_INVOCATION_ALL\",\n+                \"outputType\": {\n+                    \"i64\": {}\n+                }\n+                }\n+            }]\n+            }\n+        }\n+        }],\n+        \"extensionUris\": [{\n+        \"extension_uri_anchor\": 0,\n+        \"uri\": \"AGGREGATE_URI_PLACEHOLDER\"\n+        }],\n+        \"extensions\": [{\n+        \"extension_function\": {\n+            \"extension_uri_reference\": 0,\n+            \"function_anchor\": 0,\n+            \"name\": \"count\"\n+        }\n+        }]\n+    }\n+    \"\"\"\n+\n+    file_name = \"read_agg_data.arrow\"\n+    table = pa.Table.from_arrays([[1, 2, 3, 2, 3, 1, 1],\n+                                  [10, 20, 30, 40, 50, 60, 70],\n+                                  [3, 4, 5, 1, 2, 0, 20]],\n+                                 names=['A', 'B', 'C'])\n+    path = _write_dummy_data_to_disk(tmpdir, file_name, table)\n+\n+    query_with_path = substrait_query.replace(\"FILENAME_PLACEHOLDER\", path)\n+    query_with_ext_uri = query_with_path.replace(\n+        \"AGGREGATE_URI_PLACEHOLDER\", _kAggregateURI)\n\nReview Comment:\n   Ah.  I might keep this one actually.  I already have a PR ready to go from a few weeks back when I was playing around with this.  I just didn't have time to submit it, which I will do now.  I would appreciate a review / opinions on the change however.\n\n\n\n",
                    "created": "2022-09-15T18:11:57.119+0000",
                    "updated": "2022-09-15T18:11:57.119+0000",
                    "started": "2022-09-15T18:11:57.119+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "809241",
                    "issueId": "13471284"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 5400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5cb6184d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@8b46e35[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5d9c2415[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@76722c55[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a80e8cf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7a24b761[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@462488bc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@21d304a9[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4c7856cc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@13b87f9d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@713b743e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4874d0fc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 5400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Sep 14 20:42:41 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17061/watchers",
            "watchCount": 5,
            "isWatching": false
        },
        "created": "2022-07-12T20:39:06.000+0000",
        "updated": "2022-09-15T18:11:57.000+0000",
        "timeoriginalestimate": null,
        "description": "SQL\r\n{code:java}\r\nSELECT\r\n    o_orderpriority,\r\n    count(*) AS order_count\r\nFROM\r\n    orders\r\nGROUP BY\r\n    o_orderpriority{code}\r\nThe substrait plan generated from SQL, using Isthmus.\r\n\r\n\u00a0\r\n\r\nsubstrait count:\u00a0\r\n\r\n[https://github.com/substrait-io/substrait/blob/main/extensions/functions_aggregate_generic.yaml]\r\n\r\n\u00a0\r\n\r\nRunning the substrait plan with Acero returns this error:\r\n{code:java}\r\nE \u00a0 pyarrow.lib.ArrowInvalid: JsonToBinaryStream returned INVALID_ARGUMENT:(relations[0].root.input.aggregate.measures[0].measure) arguments: Cannot find field. \u00a0{code}\r\n\u00a0\r\n\r\nFrom substrait query plan:\r\n\r\nrelations[0].root.input.aggregate.measures[0].measure\r\n{code:java}\r\n\"measure\": {\r\n  \"functionReference\": 0,\r\n  \"args\": [],\r\n  \"sorts\": [],\r\n  \"phase\": \"AGGREGATION_PHASE_INITIAL_TO_RESULT\",\r\n  \"outputType\": {\r\n    \"i64\": {\r\n      \"typeVariationReference\": 0,\r\n      \"nullability\": \"NULLABILITY_REQUIRED\"\r\n    }\r\n  },\r\n  \"invocation\": \"AGGREGATION_INVOCATION_ALL\",\r\n  \"arguments\": []\r\n}{code}\r\n{code:java}\r\n\"extensions\": [{\r\n  \"extensionFunction\": {\r\n    \"extensionUriReference\": 1,\r\n    \"functionAnchor\": 0,\r\n    \"name\": \"count:opt\"\r\n  }\r\n}],{code}\r\nCount is a unary function and should be consumable, but isn't in this case.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 5400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python][Substrait] Acero consumer is unable to consume count function from substrait query plan",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471284/comment/17604753",
                    "id": "17604753",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~richtia]\u00a0could you please try the following?\r\n\r\nhttps://github.com/vibhatha/arrow/blob/arrow-17061/python/pyarrow/tests/test_substrait.py#L177-L274\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-09-14T14:25:22.431+0000",
                    "updated": "2022-09-14T14:25:22.431+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471284/comment/17604965",
                    "id": "17604965",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=richtia",
                        "name": "richtia",
                        "key": "JIRAUSER291450",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Richard Tia",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "So I actually tried again using the example in the issue:\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n{code:java}\r\n> \u00a0 ???\r\nE \u00a0 pyarrow.lib.ArrowNotImplementedError: Only unary aggregate functions are currently supported {code}\r\nHere's the plan:\r\n{code:java}\r\n{\r\n  \"extensionUris\": [{\r\n    \"extensionUriAnchor\": 1,\r\n    \"uri\": \"AGGREGATE_URI_PLACEHOLDER\"\r\n  }],\r\n  \"extensions\": [{\r\n    \"extensionFunction\": {\r\n      \"extensionUriReference\": 1,\r\n      \"functionAnchor\": 0,\r\n      \"name\": \"count\"\r\n    }\r\n  }],\r\n  \"relations\": [{\r\n    \"root\": {\r\n      \"input\": {\r\n        \"aggregate\": {\r\n          \"common\": {\r\n            \"direct\": {\r\n            }\r\n          },\r\n          \"input\": {\r\n            \"project\": {\r\n              \"common\": {\r\n                \"emit\": {\r\n                  \"outputMapping\": [9]\r\n                }\r\n              },\r\n              \"input\": {\r\n                \"read\": {\r\n                  \"common\": {\r\n                    \"direct\": {\r\n                    }\r\n                  },\r\n                  \"baseSchema\": {\r\n                    \"names\": [\"O_ORDERKEY\", \"O_CUSTKEY\", \"O_ORDERSTATUS\", \"O_TOTALPRICE\", \"O_ORDERDATE\", \"O_ORDERPRIORITY\", \"O_CLERK\", \"O_SHIPPRIORITY\", \"O_COMMENT\"],\r\n                    \"struct\": {\r\n                      \"types\": [{\r\n                        \"i32\": {\r\n                          \"typeVariationReference\": 0,\r\n                          \"nullability\": \"NULLABILITY_REQUIRED\"\r\n                        }\r\n                      }, {\r\n                        \"i32\": {\r\n                          \"typeVariationReference\": 0,\r\n                          \"nullability\": \"NULLABILITY_REQUIRED\"\r\n                        }\r\n                      }, {\r\n                        \"string\": {\r\n                          \"typeVariationReference\": 0,\r\n                          \"nullability\": \"NULLABILITY_REQUIRED\"\r\n                        }\r\n                      }, {\r\n                        \"decimal\": {\r\n                          \"scale\": 2,\r\n                          \"precision\": 15,\r\n                          \"typeVariationReference\": 0,\r\n                          \"nullability\": \"NULLABILITY_REQUIRED\"\r\n                        }\r\n                      }, {\r\n                        \"date\": {\r\n                          \"typeVariationReference\": 0,\r\n                          \"nullability\": \"NULLABILITY_REQUIRED\"\r\n                        }\r\n                      }, {\r\n                        \"string\": {\r\n                          \"typeVariationReference\": 0,\r\n                          \"nullability\": \"NULLABILITY_REQUIRED\"\r\n                        }\r\n                      }, {\r\n                        \"string\": {\r\n                          \"typeVariationReference\": 0,\r\n                          \"nullability\": \"NULLABILITY_REQUIRED\"\r\n                        }\r\n                      }, {\r\n                        \"i32\": {\r\n                          \"typeVariationReference\": 0,\r\n                          \"nullability\": \"NULLABILITY_REQUIRED\"\r\n                        }\r\n                      }, {\r\n                        \"string\": {\r\n                          \"typeVariationReference\": 0,\r\n                          \"nullability\": \"NULLABILITY_REQUIRED\"\r\n                        }\r\n                      }],\r\n                      \"typeVariationReference\": 0,\r\n                      \"nullability\": \"NULLABILITY_REQUIRED\"\r\n                    }\r\n                  },\r\n                    \"local_files\": {\r\n                      \"items\": [\r\n                        {\r\n                          \"uri_file\": \"file://FILENAME_PLACEHOLDER_0\",\r\n                          \"parquet\": {}\r\n                        }\r\n                      ]\r\n                    }\r\n                }\r\n              },\r\n              \"expressions\": [{\r\n                \"selection\": {\r\n                  \"directReference\": {\r\n                    \"structField\": {\r\n                      \"field\": 5\r\n                    }\r\n                  },\r\n                  \"rootReference\": {\r\n                  }\r\n                }\r\n              }]\r\n            }\r\n          },\r\n          \"groupings\": [{\r\n            \"groupingExpressions\": [{\r\n              \"selection\": {\r\n                \"directReference\": {\r\n                  \"structField\": {\r\n                    \"field\": 0\r\n                  }\r\n                },\r\n                \"rootReference\": {\r\n                }\r\n              }\r\n            }]\r\n          }],\r\n          \"measures\": [{\r\n            \"measure\": {\r\n              \"functionReference\": 0,\r\n              \"args\": [],\r\n              \"sorts\": [],\r\n              \"phase\": \"AGGREGATION_PHASE_INITIAL_TO_RESULT\",\r\n              \"outputType\": {\r\n                \"i64\": {\r\n                  \"typeVariationReference\": 0,\r\n                  \"nullability\": \"NULLABILITY_REQUIRED\"\r\n                }\r\n              },\r\n              \"invocation\": \"AGGREGATION_INVOCATION_ALL\",\r\n              \"arguments\": []\r\n            }\r\n          }]\r\n        }\r\n      },\r\n      \"names\": [\"O_ORDERPRIORITY\", \"ORDER_COUNT\"]\r\n    }\r\n  }],\r\n  \"expectedTypeUrls\": []\r\n} {code}\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=richtia",
                        "name": "richtia",
                        "key": "JIRAUSER291450",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Richard Tia",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-09-14T20:42:41.340+0000",
                    "updated": "2022-09-14T20:42:41.340+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z16t8w:",
        "customfield_12314139": null
    }
}