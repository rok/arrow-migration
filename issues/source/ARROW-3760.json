{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13197660",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660",
    "key": "ARROW-3760",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3760/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 25,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/165373",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois opened a new pull request #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949\n \n \n   The main entry point is the `csv_read()` function, all it does is create a `csv::TableReader` with the `csv_table_reader()` generic and then `$Read()` from it. \r\n   \r\n   as in the #2947 for feather format, `csv_table_reader` is generic with the methods: \r\n    - arrow::io::InputStream: calls the TableReader actor with the other options\r\n    - character and fs_path: depending on the `mmap` option (TRUE by default) it opens the file with `mmap_open()` of `file_open()` and then calls the other method. \r\n   \r\n   ``` r\r\n   library(arrow)\r\n   tf <- tempfile()\r\n   readr::write_csv(iris, tf)\r\n   \r\n   tab1 <- csv_read(tf)\r\n   tab1\r\n   #> arrow::Table\r\n   as_tibble(tab1)\r\n   #> # A tibble: 150 x 5\r\n   #>    Sepal.Length Sepal.Width Petal.Length Petal.Width Species\r\n   #>           <dbl>       <dbl>        <dbl>       <dbl> <chr>  \r\n   #>  1          5.1         3.5          1.4         0.2 setosa \r\n   #>  2          4.9         3            1.4         0.2 setosa \r\n   #>  3          4.7         3.2          1.3         0.2 setosa \r\n   #>  4          4.6         3.1          1.5         0.2 setosa \r\n   #>  5          5           3.6          1.4         0.2 setosa \r\n   #>  6          5.4         3.9          1.7         0.4 setosa \r\n   #>  7          4.6         3.4          1.4         0.3 setosa \r\n   #>  8          5           3.4          1.5         0.2 setosa \r\n   #>  9          4.4         2.9          1.4         0.2 setosa \r\n   #> 10          4.9         3.1          1.5         0.1 setosa \r\n   #> # \u2026 with 140 more rows\r\n   ```\r\n   \r\n   <sup>Created on 2018-11-13 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1.9000)</sup>\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T11:20:40.779+0000",
                    "updated": "2018-11-13T11:20:40.779+0000",
                    "started": "2018-11-13T11:20:40.778+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165373",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/165410",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on issue #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#issuecomment-438254623\n \n \n   Tested this with default options against readr::read_csv and data.table::fread. \r\n    - readr::read_csv and data.table::fread read into a data frame\r\n    - arrow::csv_read reads into an arrow::Table\r\n   \r\n   I get this: \r\n   \r\n   ```\r\n   romain@purrplex /tmp $ Rscript csv-write.R\r\n   1,400,002,600 B\r\n   romain@purrplex /tmp $\r\n   romain@purrplex /tmp $ Rscript csv-read-readr.R\r\n   Parsed with column specification:\r\n   cols(\r\n     x = col_double(),\r\n     y = col_double(),\r\n     z = col_integer(),\r\n     a = col_character()\r\n   )\r\n      user  system elapsed\r\n    30.440   1.688  32.150\r\n   romain@purrplex /tmp $\r\n   romain@purrplex /tmp $ Rscript csv-read-datatable.R\r\n      user  system elapsed\r\n    11.794   1.251   2.028\r\n   romain@purrplex /tmp $\r\n   romain@purrplex /tmp $ Rscript csv-read-arrow.R\r\n      user  system elapsed\r\n    30.018   5.392   5.383\r\n   ```\r\n   \r\n   With: \r\n   \r\n   - csv-write.R\r\n   \r\n   ```r\r\n   library(lobstr)\r\n   library(tibble)\r\n   \r\n   n <- 5e7\r\n   tib <- tibble(x = rnorm(n), y = rnorm(n), z = 1:n + 1L, a = sample(letters, n, replace = TRUE))\r\n   lobstr::obj_size(tib)\r\n   \r\n   readr::write_csv(tib, \"data.csv\")\r\n   ```\r\n   \r\n   - csv-read-arrow.R: \r\n   \r\n   ```r\r\n   system.time(\r\n     arrow::csv_read(\"data.csv\")\r\n   )\r\n   ```\r\n   \r\n   - csv-read-readr.R: \r\n   \r\n   ```r\r\n   system.time(\r\n     readr::read_csv(\"data.csv\")\r\n   )\r\n   ```\r\n   \r\n   - cdv-read-datatable.R: \r\n   \r\n   ```r\r\n   system.time(\r\n     data.table::fread(\"data.csv\")\r\n   )\r\n   ```\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T12:50:40.255+0000",
                    "updated": "2018-11-13T12:50:40.255+0000",
                    "started": "2018-11-13T12:50:40.255+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165410",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/165411",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois edited a comment on issue #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#issuecomment-438254623\n \n \n   Tested this with default options against readr::read_csv and data.table::fread. \r\n    - readr::read_csv and data.table::fread read into a data frame\r\n    - arrow::csv_read reads into an arrow::Table\r\n   \r\n   I get this: \r\n   \r\n   ```\r\n   romain@purrplex /tmp $ Rscript csv-write.R\r\n   1,400,002,600 B\r\n   \r\n   romain@purrplex /tmp $ Rscript csv-read-readr.R\r\n   Parsed with column specification:\r\n   cols(\r\n     x = col_double(),\r\n     y = col_double(),\r\n     z = col_integer(),\r\n     a = col_character()\r\n   )\r\n      user  system elapsed\r\n    30.440   1.688  32.150\r\n   \r\n   romain@purrplex /tmp $ Rscript csv-read-datatable.R\r\n      user  system elapsed\r\n    11.794   1.251   2.028\r\n   \r\n   romain@purrplex /tmp $ Rscript csv-read-arrow.R\r\n      user  system elapsed\r\n    30.018   5.392   5.383\r\n   ```\r\n   \r\n   With: \r\n   \r\n   - csv-write.R\r\n   \r\n   ```r\r\n   library(lobstr)\r\n   library(tibble)\r\n   \r\n   n <- 5e7\r\n   tib <- tibble(x = rnorm(n), y = rnorm(n), z = 1:n + 1L, a = sample(letters, n, replace = TRUE))\r\n   lobstr::obj_size(tib)\r\n   \r\n   readr::write_csv(tib, \"data.csv\")\r\n   ```\r\n   \r\n   - csv-read-arrow.R: \r\n   \r\n   ```r\r\n   system.time(\r\n     arrow::csv_read(\"data.csv\")\r\n   )\r\n   ```\r\n   \r\n   - csv-read-readr.R: \r\n   \r\n   ```r\r\n   system.time(\r\n     readr::read_csv(\"data.csv\")\r\n   )\r\n   ```\r\n   \r\n   - cdv-read-datatable.R: \r\n   \r\n   ```r\r\n   system.time(\r\n     data.table::fread(\"data.csv\")\r\n   )\r\n   ```\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T12:50:57.084+0000",
                    "updated": "2018-11-13T12:50:57.084+0000",
                    "started": "2018-11-13T12:50:57.084+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165411",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/165412",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois edited a comment on issue #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#issuecomment-438254623\n \n \n   Tested this with default options against readr::read_csv and data.table::fread. \r\n    - readr::read_csv and data.table::fread read into a data frame\r\n    - arrow::csv_read reads into an arrow::Table\r\n   \r\n   I get this: \r\n   \r\n   ```\r\n   romain@purrplex /tmp $ Rscript csv-write.R\r\n   1,400,002,600 B\r\n   \r\n   romain@purrplex /tmp $ Rscript csv-read-readr.R\r\n   Parsed with column specification:\r\n   cols(\r\n     x = col_double(),\r\n     y = col_double(),\r\n     z = col_integer(),\r\n     a = col_character()\r\n   )\r\n      user  system elapsed\r\n    30.440   1.688  32.150\r\n   \r\n   romain@purrplex /tmp $ Rscript csv-read-datatable.R\r\n      user  system elapsed\r\n    11.794   1.251   2.028\r\n   \r\n   romain@purrplex /tmp $ Rscript csv-read-arrow.R\r\n      user  system elapsed\r\n    30.018   5.392   5.383\r\n   \r\n   \r\n   ```\r\n   \r\n   With: \r\n   \r\n   - csv-write.R\r\n   \r\n   ```r\r\n   library(lobstr)\r\n   library(tibble)\r\n   \r\n   n <- 5e7\r\n   tib <- tibble(x = rnorm(n), y = rnorm(n), z = 1:n + 1L, a = sample(letters, n, replace = TRUE))\r\n   lobstr::obj_size(tib)\r\n   \r\n   readr::write_csv(tib, \"data.csv\")\r\n   ```\r\n   \r\n   - csv-read-arrow.R: \r\n   \r\n   ```r\r\n   system.time(\r\n     arrow::csv_read(\"data.csv\")\r\n   )\r\n   ```\r\n   \r\n   - csv-read-readr.R: \r\n   \r\n   ```r\r\n   system.time(\r\n     readr::read_csv(\"data.csv\")\r\n   )\r\n   ```\r\n   \r\n   - cdv-read-datatable.R: \r\n   \r\n   ```r\r\n   system.time(\r\n     data.table::fread(\"data.csv\")\r\n   )\r\n   ```\r\n   \r\n   - csv-read-base.R: \r\n   \r\n   ```r\r\n   system.time(\r\n     read.csv(\"data.csv\")\r\n   )\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T12:59:28.236+0000",
                    "updated": "2018-11-13T12:59:28.236+0000",
                    "started": "2018-11-13T12:59:28.235+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165412",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/165434",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois edited a comment on issue #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#issuecomment-438254623\n \n \n   Tested this with default options against readr::read_csv and data.table::fread. \r\n    - readr::read_csv and data.table::fread read into a data frame\r\n    - arrow::csv_read reads into an arrow::Table\r\n   \r\n   I get this: \r\n   \r\n   ```\r\n   romain@purrplex /tmp $ Rscript csv-write.R\r\n   1,400,002,600 B\r\n   \r\n   romain@purrplex /tmp $ Rscript csv-read-readr.R\r\n   Parsed with column specification:\r\n   cols(\r\n     x = col_double(),\r\n     y = col_double(),\r\n     z = col_integer(),\r\n     a = col_character()\r\n   )\r\n      user  system elapsed\r\n    30.440   1.688  32.150\r\n   \r\n   romain@purrplex /tmp $ Rscript csv-read-datatable.R\r\n      user  system elapsed\r\n    11.794   1.251   2.028\r\n   \r\n   romain@purrplex /tmp $ Rscript csv-read-arrow.R\r\n      user  system elapsed\r\n    30.018   5.392   5.383\r\n   \r\n   romain@purrplex /tmp $ Rscript csv-read-base.R\r\n       user   system  elapsed\r\n    886.716 1355.421 2795.491\r\n   ```\r\n   \r\n   With: \r\n   \r\n   - csv-write.R\r\n   \r\n   ```r\r\n   library(lobstr)\r\n   library(tibble)\r\n   \r\n   n <- 5e7\r\n   tib <- tibble(x = rnorm(n), y = rnorm(n), z = 1:n + 1L, a = sample(letters, n, replace = TRUE))\r\n   lobstr::obj_size(tib)\r\n   \r\n   readr::write_csv(tib, \"data.csv\")\r\n   ```\r\n   \r\n   - csv-read-arrow.R: \r\n   \r\n   ```r\r\n   system.time(\r\n     arrow::csv_read(\"data.csv\")\r\n   )\r\n   ```\r\n   \r\n   - csv-read-readr.R: \r\n   \r\n   ```r\r\n   system.time(\r\n     readr::read_csv(\"data.csv\")\r\n   )\r\n   ```\r\n   \r\n   - cdv-read-datatable.R: \r\n   \r\n   ```r\r\n   system.time(\r\n     data.table::fread(\"data.csv\")\r\n   )\r\n   ```\r\n   \r\n   - csv-read-base.R: \r\n   \r\n   ```r\r\n   system.time(\r\n     read.csv(\"data.csv\")\r\n   )\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T13:50:48.288+0000",
                    "updated": "2018-11-13T13:50:48.288+0000",
                    "started": "2018-11-13T13:50:48.287+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165434",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/165446",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#discussion_r233049050\n \n \n\n ##########\n File path: r/R/csv.R\n ##########\n @@ -0,0 +1,136 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include R6.R\n+\n+`arrow::csv::TableReader` <- R6Class(\"arrow::csv::TableReader\", inherit = `arrow::Object`,\n+  public = list(\n+    Read = function() shared_ptr(`arrow::Table`, csv___TableReader__Read(self))\n+  )\n+)\n+\n+`arrow::csv::ReadOptions` <- R6Class(\"arrow::csv::ReadOptions\", inherit = `arrow::Object`)\n+`arrow::csv::ParseOptions` <- R6Class(\"arrow::csv::ParseOptions\", inherit = `arrow::Object`)\n+`arrow::csv::ConvertOptions` <- R6Class(\"arrow::csv::ConvertOptions\", inherit = `arrow::Object`)\n+\n+#' read options for the csv reader\n+#'\n+#' @param use_threads Whether to use the global CPU thread pool\n+#' @param block_size Block size we request from the IO layer; also determines the size of chunks when use_threads is `TRUE`\n+#'\n+#' @export\n+csv_read_options <- function(use_threads = TRUE, block_size = 1048576L) {\n+  shared_ptr(`arrow::csv::ReadOptions`, csv___ReadOptions__initialize(\n+    list(\n+      use_threads = use_threads,\n+      block_size = block_size\n+    )\n+  ))\n+}\n+\n+#' Parsing options\n+#'\n+#' @param delimiter Field delimiter\n+#' @param quoting Whether quoting is used\n+#' @param quote_char Quoting character (if `quoting` is `TRUE`)\n+#' @param double_quote Whether a quote inside a value is double-quoted\n+#' @param escaping Whether escaping is used\n+#' @param escape_char Escaping character (if `escaping` is `TRUE`)\n+#' @param newlines_in_values Whether values are allowed to contain CR (`0x0d``) and LF (`0x0a``) characters\n+#' @param ignore_empty_lines Whether empty lines are ignored.  If false, an empty line represents\n+#' @param header_rows Number of header rows to skip (including the first row containing column names)\n+#'\n+#' @export\n+csv_parse_options <- function(delimiter = \",\", quoting = TRUE, quote_char = '\"', double_quote = TRUE, escaping = FALSE, escape_char = '\\\\', newlines_in_values = FALSE, ignore_empty_lines = TRUE, header_rows = 1L){\n+  shared_ptr(`arrow::csv::ParseOptions`, csv___ParseOptions__initialize(\n+    list(\n+      delimiter = delimiter,\n+      quoting = quoting,\n+      quote_char = quote_char,\n+      double_quote = double_quote,\n+      escaping = escaping,\n+      escape_char = escape_char,\n+      newlines_in_values = newlines_in_values,\n+      ignore_empty_lines = ignore_empty_lines,\n+      header_rows = header_rows\n+    )\n+  ))\n+}\n+\n+#' Conversion Options for the csv reader\n+#'\n+#' @param check_utf8 Whether to check UTF8 validity of string columns\n+#'\n+#' @export\n+csv_convert_options <- function(check_utf8 = TRUE){\n+  shared_ptr(`arrow::csv::ConvertOptions`, csv___ConvertOptions__initialize(\n+    list(\n+      check_utf8 = check_utf8\n+    )\n+  ))\n+}\n+\n+#' CSV table reader\n+#'\n+#' @param file file\n+#' @param read_options, see [csv_read_options()]\n+#' @param parse_options, see [csv_parse_options()]\n+#' @param convert_options, see [csv_convert_options()]\n+#' @param ... additional parameters.\n+#'\n+#' @export\n+csv_table_reader <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), ...){\n+  UseMethod(\"csv_table_reader\")\n+}\n+\n+#' @importFrom rlang abort\n+#' @export\n+csv_table_reader.default <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), ...) {\n+  abort(\"unsupported\")\n+}\n+\n+#' @export\n+`csv_table_reader.character` <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), ...){\n+  csv_table_reader(fs::path_abs(file), read_options = read_options, parse_options = parse_options, convert_options = convert_options, ...)\n+}\n+\n+#' @export\n+`csv_table_reader.fs_path` <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), mmap = TRUE, ...){\n+  stream <- if (isTRUE(mmap)) mmap_open(file) else file_open(file)\n+  csv_table_reader(stream, read_options = read_options, parse_options = parse_options, convert_options = convert_options, ...)\n+}\n+\n+#' @export\n+`csv_table_reader.arrow::io::InputStream` <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), ...){\n+  shared_ptr(`arrow::csv::TableReader`, csv___TableReader__Make(file, read_options, parse_options, convert_options))\n+}\n+\n+#' @export\n+`csv_table_reader.arrow::csv::TableReader` <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), ...){\n+  file\n+}\n \n Review comment:\n   Various line breaks for readability?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T14:08:21.707+0000",
                    "updated": "2018-11-13T14:08:21.707+0000",
                    "started": "2018-11-13T14:08:21.706+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165446",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/165445",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#discussion_r233048811\n \n \n\n ##########\n File path: r/R/csv.R\n ##########\n @@ -0,0 +1,136 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include R6.R\n+\n+`arrow::csv::TableReader` <- R6Class(\"arrow::csv::TableReader\", inherit = `arrow::Object`,\n+  public = list(\n+    Read = function() shared_ptr(`arrow::Table`, csv___TableReader__Read(self))\n+  )\n+)\n+\n+`arrow::csv::ReadOptions` <- R6Class(\"arrow::csv::ReadOptions\", inherit = `arrow::Object`)\n+`arrow::csv::ParseOptions` <- R6Class(\"arrow::csv::ParseOptions\", inherit = `arrow::Object`)\n+`arrow::csv::ConvertOptions` <- R6Class(\"arrow::csv::ConvertOptions\", inherit = `arrow::Object`)\n+\n+#' read options for the csv reader\n+#'\n+#' @param use_threads Whether to use the global CPU thread pool\n+#' @param block_size Block size we request from the IO layer; also determines the size of chunks when use_threads is `TRUE`\n+#'\n+#' @export\n+csv_read_options <- function(use_threads = TRUE, block_size = 1048576L) {\n+  shared_ptr(`arrow::csv::ReadOptions`, csv___ReadOptions__initialize(\n+    list(\n+      use_threads = use_threads,\n+      block_size = block_size\n+    )\n+  ))\n+}\n+\n+#' Parsing options\n+#'\n+#' @param delimiter Field delimiter\n+#' @param quoting Whether quoting is used\n+#' @param quote_char Quoting character (if `quoting` is `TRUE`)\n+#' @param double_quote Whether a quote inside a value is double-quoted\n+#' @param escaping Whether escaping is used\n+#' @param escape_char Escaping character (if `escaping` is `TRUE`)\n+#' @param newlines_in_values Whether values are allowed to contain CR (`0x0d``) and LF (`0x0a``) characters\n+#' @param ignore_empty_lines Whether empty lines are ignored.  If false, an empty line represents\n+#' @param header_rows Number of header rows to skip (including the first row containing column names)\n+#'\n+#' @export\n+csv_parse_options <- function(delimiter = \",\", quoting = TRUE, quote_char = '\"', double_quote = TRUE, escaping = FALSE, escape_char = '\\\\', newlines_in_values = FALSE, ignore_empty_lines = TRUE, header_rows = 1L){\n \n Review comment:\n   Line break here maybe?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T14:08:21.707+0000",
                    "updated": "2018-11-13T14:08:21.707+0000",
                    "started": "2018-11-13T14:08:21.706+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165445",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/165447",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#discussion_r233049448\n \n \n\n ##########\n File path: r/R/csv.R\n ##########\n @@ -0,0 +1,136 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include R6.R\n+\n+`arrow::csv::TableReader` <- R6Class(\"arrow::csv::TableReader\", inherit = `arrow::Object`,\n+  public = list(\n+    Read = function() shared_ptr(`arrow::Table`, csv___TableReader__Read(self))\n+  )\n+)\n+\n+`arrow::csv::ReadOptions` <- R6Class(\"arrow::csv::ReadOptions\", inherit = `arrow::Object`)\n+`arrow::csv::ParseOptions` <- R6Class(\"arrow::csv::ParseOptions\", inherit = `arrow::Object`)\n+`arrow::csv::ConvertOptions` <- R6Class(\"arrow::csv::ConvertOptions\", inherit = `arrow::Object`)\n+\n+#' read options for the csv reader\n+#'\n+#' @param use_threads Whether to use the global CPU thread pool\n+#' @param block_size Block size we request from the IO layer; also determines the size of chunks when use_threads is `TRUE`\n+#'\n+#' @export\n+csv_read_options <- function(use_threads = TRUE, block_size = 1048576L) {\n+  shared_ptr(`arrow::csv::ReadOptions`, csv___ReadOptions__initialize(\n+    list(\n+      use_threads = use_threads,\n+      block_size = block_size\n+    )\n+  ))\n+}\n+\n+#' Parsing options\n+#'\n+#' @param delimiter Field delimiter\n+#' @param quoting Whether quoting is used\n+#' @param quote_char Quoting character (if `quoting` is `TRUE`)\n+#' @param double_quote Whether a quote inside a value is double-quoted\n+#' @param escaping Whether escaping is used\n+#' @param escape_char Escaping character (if `escaping` is `TRUE`)\n+#' @param newlines_in_values Whether values are allowed to contain CR (`0x0d``) and LF (`0x0a``) characters\n+#' @param ignore_empty_lines Whether empty lines are ignored.  If false, an empty line represents\n+#' @param header_rows Number of header rows to skip (including the first row containing column names)\n+#'\n+#' @export\n+csv_parse_options <- function(delimiter = \",\", quoting = TRUE, quote_char = '\"', double_quote = TRUE, escaping = FALSE, escape_char = '\\\\', newlines_in_values = FALSE, ignore_empty_lines = TRUE, header_rows = 1L){\n+  shared_ptr(`arrow::csv::ParseOptions`, csv___ParseOptions__initialize(\n+    list(\n+      delimiter = delimiter,\n+      quoting = quoting,\n+      quote_char = quote_char,\n+      double_quote = double_quote,\n+      escaping = escaping,\n+      escape_char = escape_char,\n+      newlines_in_values = newlines_in_values,\n+      ignore_empty_lines = ignore_empty_lines,\n+      header_rows = header_rows\n+    )\n+  ))\n+}\n+\n+#' Conversion Options for the csv reader\n+#'\n+#' @param check_utf8 Whether to check UTF8 validity of string columns\n+#'\n+#' @export\n+csv_convert_options <- function(check_utf8 = TRUE){\n+  shared_ptr(`arrow::csv::ConvertOptions`, csv___ConvertOptions__initialize(\n+    list(\n+      check_utf8 = check_utf8\n+    )\n+  ))\n+}\n+\n+#' CSV table reader\n+#'\n+#' @param file file\n+#' @param read_options, see [csv_read_options()]\n+#' @param parse_options, see [csv_parse_options()]\n+#' @param convert_options, see [csv_convert_options()]\n+#' @param ... additional parameters.\n+#'\n+#' @export\n+csv_table_reader <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), ...){\n+  UseMethod(\"csv_table_reader\")\n+}\n+\n+#' @importFrom rlang abort\n+#' @export\n+csv_table_reader.default <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), ...) {\n+  abort(\"unsupported\")\n+}\n+\n+#' @export\n+`csv_table_reader.character` <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), ...){\n+  csv_table_reader(fs::path_abs(file), read_options = read_options, parse_options = parse_options, convert_options = convert_options, ...)\n+}\n+\n+#' @export\n+`csv_table_reader.fs_path` <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), mmap = TRUE, ...){\n+  stream <- if (isTRUE(mmap)) mmap_open(file) else file_open(file)\n \n Review comment:\n   Unless I'm mistaken there may not be much benefit to using memory mapping, but should run the benchmarks for both cases. cc @pitrou \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T14:08:21.712+0000",
                    "updated": "2018-11-13T14:08:21.712+0000",
                    "started": "2018-11-13T14:08:21.711+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165447",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/165448",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#discussion_r233049879\n \n \n\n ##########\n File path: r/src/csv.cpp\n ##########\n @@ -0,0 +1,76 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow_types.h\"\n+\n+using namespace Rcpp;\n+\n+// [[Rcpp::export]]\n+std::shared_ptr<arrow::csv::ReadOptions> csv___ReadOptions__initialize(List_ options) {\n+  auto res =\n+      std::make_shared<arrow::csv::ReadOptions>(arrow::csv::ReadOptions::Defaults());\n+  res->use_threads = options[\"use_threads\"];\n+  res->block_size = options[\"block_size\"];\n \n Review comment:\n   How does List_ deal with type coercion? \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T14:08:21.757+0000",
                    "updated": "2018-11-13T14:08:21.757+0000",
                    "started": "2018-11-13T14:08:21.757+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165448",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/165467",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#discussion_r233072290\n \n \n\n ##########\n File path: r/R/csv.R\n ##########\n @@ -0,0 +1,136 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include R6.R\n+\n+`arrow::csv::TableReader` <- R6Class(\"arrow::csv::TableReader\", inherit = `arrow::Object`,\n+  public = list(\n+    Read = function() shared_ptr(`arrow::Table`, csv___TableReader__Read(self))\n+  )\n+)\n+\n+`arrow::csv::ReadOptions` <- R6Class(\"arrow::csv::ReadOptions\", inherit = `arrow::Object`)\n+`arrow::csv::ParseOptions` <- R6Class(\"arrow::csv::ParseOptions\", inherit = `arrow::Object`)\n+`arrow::csv::ConvertOptions` <- R6Class(\"arrow::csv::ConvertOptions\", inherit = `arrow::Object`)\n+\n+#' read options for the csv reader\n+#'\n+#' @param use_threads Whether to use the global CPU thread pool\n+#' @param block_size Block size we request from the IO layer; also determines the size of chunks when use_threads is `TRUE`\n+#'\n+#' @export\n+csv_read_options <- function(use_threads = TRUE, block_size = 1048576L) {\n+  shared_ptr(`arrow::csv::ReadOptions`, csv___ReadOptions__initialize(\n+    list(\n+      use_threads = use_threads,\n+      block_size = block_size\n+    )\n+  ))\n+}\n+\n+#' Parsing options\n+#'\n+#' @param delimiter Field delimiter\n+#' @param quoting Whether quoting is used\n+#' @param quote_char Quoting character (if `quoting` is `TRUE`)\n+#' @param double_quote Whether a quote inside a value is double-quoted\n+#' @param escaping Whether escaping is used\n+#' @param escape_char Escaping character (if `escaping` is `TRUE`)\n+#' @param newlines_in_values Whether values are allowed to contain CR (`0x0d``) and LF (`0x0a``) characters\n+#' @param ignore_empty_lines Whether empty lines are ignored.  If false, an empty line represents\n+#' @param header_rows Number of header rows to skip (including the first row containing column names)\n+#'\n+#' @export\n+csv_parse_options <- function(delimiter = \",\", quoting = TRUE, quote_char = '\"', double_quote = TRUE, escaping = FALSE, escape_char = '\\\\', newlines_in_values = FALSE, ignore_empty_lines = TRUE, header_rows = 1L){\n+  shared_ptr(`arrow::csv::ParseOptions`, csv___ParseOptions__initialize(\n+    list(\n+      delimiter = delimiter,\n+      quoting = quoting,\n+      quote_char = quote_char,\n+      double_quote = double_quote,\n+      escaping = escaping,\n+      escape_char = escape_char,\n+      newlines_in_values = newlines_in_values,\n+      ignore_empty_lines = ignore_empty_lines,\n+      header_rows = header_rows\n+    )\n+  ))\n+}\n+\n+#' Conversion Options for the csv reader\n+#'\n+#' @param check_utf8 Whether to check UTF8 validity of string columns\n+#'\n+#' @export\n+csv_convert_options <- function(check_utf8 = TRUE){\n+  shared_ptr(`arrow::csv::ConvertOptions`, csv___ConvertOptions__initialize(\n+    list(\n+      check_utf8 = check_utf8\n+    )\n+  ))\n+}\n+\n+#' CSV table reader\n+#'\n+#' @param file file\n+#' @param read_options, see [csv_read_options()]\n+#' @param parse_options, see [csv_parse_options()]\n+#' @param convert_options, see [csv_convert_options()]\n+#' @param ... additional parameters.\n+#'\n+#' @export\n+csv_table_reader <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), ...){\n+  UseMethod(\"csv_table_reader\")\n+}\n+\n+#' @importFrom rlang abort\n+#' @export\n+csv_table_reader.default <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), ...) {\n+  abort(\"unsupported\")\n+}\n+\n+#' @export\n+`csv_table_reader.character` <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), ...){\n+  csv_table_reader(fs::path_abs(file), read_options = read_options, parse_options = parse_options, convert_options = convert_options, ...)\n+}\n+\n+#' @export\n+`csv_table_reader.fs_path` <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), mmap = TRUE, ...){\n+  stream <- if (isTRUE(mmap)) mmap_open(file) else file_open(file)\n \n Review comment:\n   Actually it may be worse when passing a memory map.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T15:00:34.211+0000",
                    "updated": "2018-11-13T15:00:34.211+0000",
                    "started": "2018-11-13T15:00:34.210+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165467",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/165470",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#discussion_r233073195\n \n \n\n ##########\n File path: r/src/csv.cpp\n ##########\n @@ -0,0 +1,76 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow_types.h\"\n+\n+using namespace Rcpp;\n+\n+// [[Rcpp::export]]\n+std::shared_ptr<arrow::csv::ReadOptions> csv___ReadOptions__initialize(List_ options) {\n+  auto res =\n+      std::make_shared<arrow::csv::ReadOptions>(arrow::csv::ReadOptions::Defaults());\n+  res->use_threads = options[\"use_threads\"];\n+  res->block_size = options[\"block_size\"];\n \n Review comment:\n   It's taken care of, `List_::operator[]` gives you a proxy object that then goes through `Rcpp::as< {the type you want}>(.)`. \r\n   \r\n   There's no support for a single `char` so I had to add this : \r\n   \r\n   ```cpp\r\n   inline char get_char(SEXP x) { return CHAR(STRING_ELT(x, 0))[0]; }\r\n   ```\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T15:02:32.703+0000",
                    "updated": "2018-11-13T15:02:32.703+0000",
                    "started": "2018-11-13T15:02:32.702+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165470",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/165473",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#discussion_r233076332\n \n \n\n ##########\n File path: r/src/csv.cpp\n ##########\n @@ -0,0 +1,76 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow_types.h\"\n+\n+using namespace Rcpp;\n+\n+// [[Rcpp::export]]\n+std::shared_ptr<arrow::csv::ReadOptions> csv___ReadOptions__initialize(List_ options) {\n+  auto res =\n+      std::make_shared<arrow::csv::ReadOptions>(arrow::csv::ReadOptions::Defaults());\n+  res->use_threads = options[\"use_threads\"];\n+  res->block_size = options[\"block_size\"];\n \n Review comment:\n   Modified it is that we'd get an Rcpp error instead of an R error if for some reason something else than a character vector is given : \r\n   \r\n   ```r\r\n   inline char get_char(CharacterVector x) { return CHAR(STRING_ELT(x, 0))[0]; }\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T15:09:40.501+0000",
                    "updated": "2018-11-13T15:09:40.501+0000",
                    "started": "2018-11-13T15:09:40.501+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165473",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/165474",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#discussion_r233076332\n \n \n\n ##########\n File path: r/src/csv.cpp\n ##########\n @@ -0,0 +1,76 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow_types.h\"\n+\n+using namespace Rcpp;\n+\n+// [[Rcpp::export]]\n+std::shared_ptr<arrow::csv::ReadOptions> csv___ReadOptions__initialize(List_ options) {\n+  auto res =\n+      std::make_shared<arrow::csv::ReadOptions>(arrow::csv::ReadOptions::Defaults());\n+  res->use_threads = options[\"use_threads\"];\n+  res->block_size = options[\"block_size\"];\n \n Review comment:\n   Modified it is that we'd get an Rcpp error instead of an R error if for some reason something else than a character vector is given : \r\n   \r\n   ```cpp\r\n   inline char get_char(CharacterVector x) { return CHAR(STRING_ELT(x, 0))[0]; }\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T15:09:49.924+0000",
                    "updated": "2018-11-13T15:09:49.924+0000",
                    "started": "2018-11-13T15:09:49.923+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165474",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/165475",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#discussion_r233077494\n \n \n\n ##########\n File path: r/R/csv.R\n ##########\n @@ -0,0 +1,136 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include R6.R\n+\n+`arrow::csv::TableReader` <- R6Class(\"arrow::csv::TableReader\", inherit = `arrow::Object`,\n+  public = list(\n+    Read = function() shared_ptr(`arrow::Table`, csv___TableReader__Read(self))\n+  )\n+)\n+\n+`arrow::csv::ReadOptions` <- R6Class(\"arrow::csv::ReadOptions\", inherit = `arrow::Object`)\n+`arrow::csv::ParseOptions` <- R6Class(\"arrow::csv::ParseOptions\", inherit = `arrow::Object`)\n+`arrow::csv::ConvertOptions` <- R6Class(\"arrow::csv::ConvertOptions\", inherit = `arrow::Object`)\n+\n+#' read options for the csv reader\n+#'\n+#' @param use_threads Whether to use the global CPU thread pool\n+#' @param block_size Block size we request from the IO layer; also determines the size of chunks when use_threads is `TRUE`\n+#'\n+#' @export\n+csv_read_options <- function(use_threads = TRUE, block_size = 1048576L) {\n+  shared_ptr(`arrow::csv::ReadOptions`, csv___ReadOptions__initialize(\n+    list(\n+      use_threads = use_threads,\n+      block_size = block_size\n+    )\n+  ))\n+}\n+\n+#' Parsing options\n+#'\n+#' @param delimiter Field delimiter\n+#' @param quoting Whether quoting is used\n+#' @param quote_char Quoting character (if `quoting` is `TRUE`)\n+#' @param double_quote Whether a quote inside a value is double-quoted\n+#' @param escaping Whether escaping is used\n+#' @param escape_char Escaping character (if `escaping` is `TRUE`)\n+#' @param newlines_in_values Whether values are allowed to contain CR (`0x0d``) and LF (`0x0a``) characters\n+#' @param ignore_empty_lines Whether empty lines are ignored.  If false, an empty line represents\n+#' @param header_rows Number of header rows to skip (including the first row containing column names)\n+#'\n+#' @export\n+csv_parse_options <- function(delimiter = \",\", quoting = TRUE, quote_char = '\"', double_quote = TRUE, escaping = FALSE, escape_char = '\\\\', newlines_in_values = FALSE, ignore_empty_lines = TRUE, header_rows = 1L){\n+  shared_ptr(`arrow::csv::ParseOptions`, csv___ParseOptions__initialize(\n+    list(\n+      delimiter = delimiter,\n+      quoting = quoting,\n+      quote_char = quote_char,\n+      double_quote = double_quote,\n+      escaping = escaping,\n+      escape_char = escape_char,\n+      newlines_in_values = newlines_in_values,\n+      ignore_empty_lines = ignore_empty_lines,\n+      header_rows = header_rows\n+    )\n+  ))\n+}\n+\n+#' Conversion Options for the csv reader\n+#'\n+#' @param check_utf8 Whether to check UTF8 validity of string columns\n+#'\n+#' @export\n+csv_convert_options <- function(check_utf8 = TRUE){\n+  shared_ptr(`arrow::csv::ConvertOptions`, csv___ConvertOptions__initialize(\n+    list(\n+      check_utf8 = check_utf8\n+    )\n+  ))\n+}\n+\n+#' CSV table reader\n+#'\n+#' @param file file\n+#' @param read_options, see [csv_read_options()]\n+#' @param parse_options, see [csv_parse_options()]\n+#' @param convert_options, see [csv_convert_options()]\n+#' @param ... additional parameters.\n+#'\n+#' @export\n+csv_table_reader <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), ...){\n+  UseMethod(\"csv_table_reader\")\n+}\n+\n+#' @importFrom rlang abort\n+#' @export\n+csv_table_reader.default <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), ...) {\n+  abort(\"unsupported\")\n+}\n+\n+#' @export\n+`csv_table_reader.character` <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), ...){\n+  csv_table_reader(fs::path_abs(file), read_options = read_options, parse_options = parse_options, convert_options = convert_options, ...)\n+}\n+\n+#' @export\n+`csv_table_reader.fs_path` <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), mmap = TRUE, ...){\n+  stream <- if (isTRUE(mmap)) mmap_open(file) else file_open(file)\n \n Review comment:\n   ouch, let me quickly measure that and switch the default then\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T15:12:25.572+0000",
                    "updated": "2018-11-13T15:12:25.572+0000",
                    "started": "2018-11-13T15:12:25.571+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165475",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/165478",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#discussion_r233086714\n \n \n\n ##########\n File path: r/R/csv.R\n ##########\n @@ -0,0 +1,136 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include R6.R\n+\n+`arrow::csv::TableReader` <- R6Class(\"arrow::csv::TableReader\", inherit = `arrow::Object`,\n+  public = list(\n+    Read = function() shared_ptr(`arrow::Table`, csv___TableReader__Read(self))\n+  )\n+)\n+\n+`arrow::csv::ReadOptions` <- R6Class(\"arrow::csv::ReadOptions\", inherit = `arrow::Object`)\n+`arrow::csv::ParseOptions` <- R6Class(\"arrow::csv::ParseOptions\", inherit = `arrow::Object`)\n+`arrow::csv::ConvertOptions` <- R6Class(\"arrow::csv::ConvertOptions\", inherit = `arrow::Object`)\n+\n+#' read options for the csv reader\n+#'\n+#' @param use_threads Whether to use the global CPU thread pool\n+#' @param block_size Block size we request from the IO layer; also determines the size of chunks when use_threads is `TRUE`\n+#'\n+#' @export\n+csv_read_options <- function(use_threads = TRUE, block_size = 1048576L) {\n+  shared_ptr(`arrow::csv::ReadOptions`, csv___ReadOptions__initialize(\n+    list(\n+      use_threads = use_threads,\n+      block_size = block_size\n+    )\n+  ))\n+}\n+\n+#' Parsing options\n+#'\n+#' @param delimiter Field delimiter\n+#' @param quoting Whether quoting is used\n+#' @param quote_char Quoting character (if `quoting` is `TRUE`)\n+#' @param double_quote Whether a quote inside a value is double-quoted\n+#' @param escaping Whether escaping is used\n+#' @param escape_char Escaping character (if `escaping` is `TRUE`)\n+#' @param newlines_in_values Whether values are allowed to contain CR (`0x0d``) and LF (`0x0a``) characters\n+#' @param ignore_empty_lines Whether empty lines are ignored.  If false, an empty line represents\n+#' @param header_rows Number of header rows to skip (including the first row containing column names)\n+#'\n+#' @export\n+csv_parse_options <- function(delimiter = \",\", quoting = TRUE, quote_char = '\"', double_quote = TRUE, escaping = FALSE, escape_char = '\\\\', newlines_in_values = FALSE, ignore_empty_lines = TRUE, header_rows = 1L){\n+  shared_ptr(`arrow::csv::ParseOptions`, csv___ParseOptions__initialize(\n+    list(\n+      delimiter = delimiter,\n+      quoting = quoting,\n+      quote_char = quote_char,\n+      double_quote = double_quote,\n+      escaping = escaping,\n+      escape_char = escape_char,\n+      newlines_in_values = newlines_in_values,\n+      ignore_empty_lines = ignore_empty_lines,\n+      header_rows = header_rows\n+    )\n+  ))\n+}\n+\n+#' Conversion Options for the csv reader\n+#'\n+#' @param check_utf8 Whether to check UTF8 validity of string columns\n+#'\n+#' @export\n+csv_convert_options <- function(check_utf8 = TRUE){\n+  shared_ptr(`arrow::csv::ConvertOptions`, csv___ConvertOptions__initialize(\n+    list(\n+      check_utf8 = check_utf8\n+    )\n+  ))\n+}\n+\n+#' CSV table reader\n+#'\n+#' @param file file\n+#' @param read_options, see [csv_read_options()]\n+#' @param parse_options, see [csv_parse_options()]\n+#' @param convert_options, see [csv_convert_options()]\n+#' @param ... additional parameters.\n+#'\n+#' @export\n+csv_table_reader <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), ...){\n+  UseMethod(\"csv_table_reader\")\n+}\n+\n+#' @importFrom rlang abort\n+#' @export\n+csv_table_reader.default <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), ...) {\n+  abort(\"unsupported\")\n+}\n+\n+#' @export\n+`csv_table_reader.character` <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), ...){\n+  csv_table_reader(fs::path_abs(file), read_options = read_options, parse_options = parse_options, convert_options = convert_options, ...)\n+}\n+\n+#' @export\n+`csv_table_reader.fs_path` <- function(file, read_options = csv_read_options(), parse_options = csv_parse_options(), convert_options = csv_convert_options(), mmap = TRUE, ...){\n+  stream <- if (isTRUE(mmap)) mmap_open(file) else file_open(file)\n \n Review comment:\n   it's similar on this example, so I've remove the `mmap` argument, users can still use a memory mapped file if they like by using e.g.  `csv_read(mmap_open(<file>), ...)`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T15:31:48.452+0000",
                    "updated": "2018-11-13T15:31:48.452+0000",
                    "started": "2018-11-13T15:31:48.451+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165478",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/170306",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "russellpierce commented on issue #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#issuecomment-442521627\n \n \n   I'm so happy to see work moving forward on this. Thank you Romain and Wes for all the time and effort you are giving the community.\r\n   \r\n   Silly, possibly a bikeshed, comment / addressed elsewhere. Feel free to ignore.\r\n   \r\n   I can imagine this function name being one of those that drives me a bit nuts. `csv_read` means almost the same thing as read.csv and read_csv. I'm sensitive to masking issues, but do we need another confusable function name?  People can fully qualify as arrow::read_csv() or if we want to give in to the feeling that most folks do global imports in R we could do something like arrow_read_csv()?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T16:56:28.301+0000",
                    "updated": "2018-11-28T16:56:28.301+0000",
                    "started": "2018-11-28T16:56:28.300+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170306",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/170343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#issuecomment-442548720\n \n \n   It's unfortunate that `library(X)` in R is the moral equivalent of `from X import *` in Python (which is generally discouraged). Probably `arrow::read_csv` is best for consistency, and we will have to live with the readr name conflict\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T18:12:11.347+0000",
                    "updated": "2018-11-28T18:12:11.347+0000",
                    "started": "2018-11-28T18:12:11.346+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170343",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/170344",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#issuecomment-442548792\n \n \n   cc @hadley for any thoughts on this\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T18:12:24.613+0000",
                    "updated": "2018-11-28T18:12:24.613+0000",
                    "started": "2018-11-28T18:12:24.613+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170344",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/170390",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "hadley commented on issue #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#issuecomment-442577580\n \n \n   I think I'd have a mild preference for `read_csv_arrow()` (I think a suffix makes more sense because then it will appear in autocomplete in after typing `read_csv()`). \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T19:39:33.597+0000",
                    "updated": "2018-11-28T19:39:33.597+0000",
                    "started": "2018-11-28T19:39:33.596+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170390",
                    "issueId": "13197660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/worklog/170401",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2949: ARROW-3760: [R] Support Arrow CSV reader\nURL: https://github.com/apache/arrow/pull/2949#issuecomment-442586246\n \n \n   Sounds fine to me\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-28T20:05:54.700+0000",
                    "updated": "2018-11-28T20:05:54.700+0000",
                    "started": "2018-11-28T20:05:54.699+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170401",
                    "issueId": "13197660"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1dd3ebfb[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b5a16be[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6cf04df8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2754593e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@365f625f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2f47727c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@41b665e1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@442e5940[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9ae8600[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1d6ed1db[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f0536fa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@59d78603[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jan 04 21:37:04 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-01-04T21:37:04.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3760/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-11-11T19:45:52.000+0000",
        "updated": "2019-01-04T21:37:12.000+0000",
        "timeoriginalestimate": null,
        "description": "This should compose with any of the other file interfaces",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Support Arrow CSV reader ",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197660/comment/16734592",
                    "id": "16734592",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2949\n[https://github.com/apache/arrow/pull/2949]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-01-04T21:37:04.797+0000",
                    "updated": "2019-01-04T21:37:04.797+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s00d8w:",
        "customfield_12314139": null
    }
}