{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13405188",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188",
    "key": "ARROW-14236",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12624221",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12624221",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13087660",
                    "key": "ARROW-1231",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13087660",
                    "fields": {
                        "summary": "[C++] Add filesystem / IO implementation for Google Cloud Storage",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=coryan",
            "name": "coryan",
            "key": "coryan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Carlos O'Ryan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=coryan",
            "name": "coryan",
            "key": "coryan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Carlos O'Ryan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=coryan",
            "name": "coryan",
            "key": "coryan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Carlos O'Ryan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 30000,
            "total": 30000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 30000,
            "total": 30000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14236/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 50,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663190",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#issuecomment-939322652\n\n\n   https://issues.apache.org/jira/browse/ARROW-14236\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-09T16:22:56.048+0000",
                    "updated": "2021-10-09T16:22:56.048+0000",
                    "started": "2021-10-09T16:22:56.047+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663190",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663278",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#discussion_r725702791\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs_test.cc\n##########\n@@ -30,10 +34,58 @@ namespace arrow {\n namespace fs {\n namespace {\n \n+namespace bp = boost::process;\n+namespace gc = google::cloud;\n+namespace gcs = google::cloud::storage;\n+\n using ::testing::IsEmpty;\n using ::testing::Not;\n using ::testing::NotNull;\n \n+auto const* kPreexistingBucket = \"test-bucket-name\";\n+\n+class GcsIntegrationTest : public ::testing::Test {\n+ public:\n+  ~GcsIntegrationTest() override {\n+    if (server_process_.valid()) {\n+      // Brutal shutdown\n+      server_process_.terminate();\n+      server_process_.wait();\n+    }\n+  }\n+\n+ protected:\n+  void SetUp() override {\n+    port_ = std::to_string(GetListenPort());\n+    auto exe_path = bp::search_path(\"python3\");\n+    ASSERT_THAT(exe_path, Not(IsEmpty()));\n+\n+    server_process_ = bp::child(boost::this_process::environment(), exe_path, \"-m\",\n+                                \"testbench\", \"--port\", port_);\n+\n+    // Create a bucket in the testbench so additional\n+    auto client = gcs::Client(\n+        google::cloud::Options{}\n+            .set<gcs::RestEndpointOption>(\"http://127.0.0.1:\" + port_)\n+            .set<gc::UnifiedCredentialsOption>(gc::MakeInsecureCredentials()));\n+    auto metadata = client.CreateBucketForProject(\n+        kPreexistingBucket, \"ignored-by-testbench\", gcs::BucketMetadata{});\n+    EXPECT_TRUE(metadata.ok()) << \"Failed to create bucket <\" << kPreexistingBucket\n\nReview comment:\n       this should probably be ASSERT_TRUE since other tests can't succeed if it fails?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-10T21:43:38.397+0000",
                    "updated": "2021-10-10T21:43:38.397+0000",
                    "started": "2021-10-10T21:43:38.396+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663278",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663279",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#discussion_r725703135\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -35,19 +68,85 @@ google::cloud::Options AsGoogleCloudOptions(const GcsOptions& o) {\n   if (!o.endpoint_override.empty()) {\n     std::string scheme = o.scheme;\n     if (scheme.empty()) scheme = \"https\";\n+    if (scheme == \"https\") {\n+      options.set<google::cloud::UnifiedCredentialsOption>(\n+          google::cloud::MakeGoogleDefaultCredentials());\n+    } else {\n+      options.set<google::cloud::UnifiedCredentialsOption>(\n+          google::cloud::MakeInsecureCredentials());\n+    }\n     options.set<gcs::RestEndpointOption>(scheme + \"://\" + o.endpoint_override);\n   }\n   return options;\n }\n \n+Status ToArrowStatus(google::cloud::Status const& s) {\n\nReview comment:\n       there should probably be more detailed unit tests for this function?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-10T21:47:02.828+0000",
                    "updated": "2021-10-10T21:47:02.828+0000",
                    "started": "2021-10-10T21:47:02.828+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663279",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663281",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#discussion_r725703221\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -35,19 +68,85 @@ google::cloud::Options AsGoogleCloudOptions(const GcsOptions& o) {\n   if (!o.endpoint_override.empty()) {\n     std::string scheme = o.scheme;\n     if (scheme.empty()) scheme = \"https\";\n+    if (scheme == \"https\") {\n+      options.set<google::cloud::UnifiedCredentialsOption>(\n+          google::cloud::MakeGoogleDefaultCredentials());\n+    } else {\n+      options.set<google::cloud::UnifiedCredentialsOption>(\n+          google::cloud::MakeInsecureCredentials());\n+    }\n     options.set<gcs::RestEndpointOption>(scheme + \"://\" + o.endpoint_override);\n   }\n   return options;\n }\n \n+Status ToArrowStatus(google::cloud::Status const& s) {\n\nReview comment:\n       Do you think it will be important to retrieve the original status?  Arrow status has an opaque shared pointer that can be used for this.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-10T21:47:39.577+0000",
                    "updated": "2021-10-10T21:47:39.577+0000",
                    "started": "2021-10-10T21:47:39.577+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663281",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663282",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#discussion_r725703311\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -35,19 +68,85 @@ google::cloud::Options AsGoogleCloudOptions(const GcsOptions& o) {\n   if (!o.endpoint_override.empty()) {\n     std::string scheme = o.scheme;\n     if (scheme.empty()) scheme = \"https\";\n+    if (scheme == \"https\") {\n+      options.set<google::cloud::UnifiedCredentialsOption>(\n+          google::cloud::MakeGoogleDefaultCredentials());\n+    } else {\n+      options.set<google::cloud::UnifiedCredentialsOption>(\n+          google::cloud::MakeInsecureCredentials());\n+    }\n     options.set<gcs::RestEndpointOption>(scheme + \"://\" + o.endpoint_override);\n   }\n   return options;\n }\n \n+Status ToArrowStatus(google::cloud::Status const& s) {\n+  std::ostringstream os;\n+  os << \"google::cloud::Status(\" << s << \")\";\n+  switch (s.code()) {\n+    case google::cloud::StatusCode::kOk:\n+      break;\n+    case google::cloud::StatusCode::kCancelled:\n+      return Status::Cancelled(os.str());\n+    case google::cloud::StatusCode::kUnknown:\n+      return Status::UnknownError(os.str());\n+    case google::cloud::StatusCode::kInvalidArgument:\n+      return Status::Invalid(os.str());\n+    case google::cloud::StatusCode::kDeadlineExceeded:\n+    case google::cloud::StatusCode::kNotFound:\n+      // TODO: it is unclear if a better mapping would be possible.\n+      return Status::UnknownError(os.str());\n+    case google::cloud::StatusCode::kAlreadyExists:\n+      return Status::AlreadyExists(os.str());\n+    case google::cloud::StatusCode::kPermissionDenied:\n+    case google::cloud::StatusCode::kUnauthenticated:\n+      return Status::UnknownError(os.str());\n+    case google::cloud::StatusCode::kResourceExhausted:\n+      return Status::CapacityError(os.str());\n+    case google::cloud::StatusCode::kFailedPrecondition:\n+    case google::cloud::StatusCode::kAborted:\n+      return Status::UnknownError(os.str());\n+    case google::cloud::StatusCode::kOutOfRange:\n+      return Status::Invalid(os.str());\n+    case google::cloud::StatusCode::kUnimplemented:\n+      return Status::NotImplemented(os.str());\n+    case google::cloud::StatusCode::kInternal:\n+    case google::cloud::StatusCode::kUnavailable:\n+    case google::cloud::StatusCode::kDataLoss:\n+      return Status::UnknownError(os.str());\n+  }\n+  return Status::OK();\n+}\n+\n class GcsFileSystem::Impl {\n  public:\n   explicit Impl(GcsOptions o)\n       : options_(std::move(o)), client_(AsGoogleCloudOptions(options_)) {}\n \n   GcsOptions const& options() const { return options_; }\n \n+  Result<FileInfo> GetFileInfo(GcsPath const& path) {\n+    if (!path.object.empty()) {\n+      auto meta = client_.GetObjectMetadata(path.bucket, path.object);\n+      return GetFileInfoImpl(path, std::move(meta).status(), FileType::File);\n+    }\n+    auto meta = client_.GetBucketMetadata(path.bucket);\n+    return GetFileInfoImpl(path, std::move(meta).status(), FileType::Directory);\n+  }\n+\n  private:\n+  Result<FileInfo> GetFileInfoImpl(GcsPath const& path, google::cloud::Status status,\n\nReview comment:\n       should status be passed with const ref?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-10T21:48:23.197+0000",
                    "updated": "2021-10-10T21:48:23.197+0000",
                    "started": "2021-10-10T21:48:23.196+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663282",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663283",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#discussion_r725703331\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -35,19 +68,85 @@ google::cloud::Options AsGoogleCloudOptions(const GcsOptions& o) {\n   if (!o.endpoint_override.empty()) {\n     std::string scheme = o.scheme;\n     if (scheme.empty()) scheme = \"https\";\n+    if (scheme == \"https\") {\n+      options.set<google::cloud::UnifiedCredentialsOption>(\n+          google::cloud::MakeGoogleDefaultCredentials());\n+    } else {\n+      options.set<google::cloud::UnifiedCredentialsOption>(\n+          google::cloud::MakeInsecureCredentials());\n+    }\n     options.set<gcs::RestEndpointOption>(scheme + \"://\" + o.endpoint_override);\n   }\n   return options;\n }\n \n+Status ToArrowStatus(google::cloud::Status const& s) {\n+  std::ostringstream os;\n+  os << \"google::cloud::Status(\" << s << \")\";\n+  switch (s.code()) {\n+    case google::cloud::StatusCode::kOk:\n+      break;\n+    case google::cloud::StatusCode::kCancelled:\n+      return Status::Cancelled(os.str());\n+    case google::cloud::StatusCode::kUnknown:\n+      return Status::UnknownError(os.str());\n+    case google::cloud::StatusCode::kInvalidArgument:\n+      return Status::Invalid(os.str());\n+    case google::cloud::StatusCode::kDeadlineExceeded:\n+    case google::cloud::StatusCode::kNotFound:\n+      // TODO: it is unclear if a better mapping would be possible.\n+      return Status::UnknownError(os.str());\n+    case google::cloud::StatusCode::kAlreadyExists:\n+      return Status::AlreadyExists(os.str());\n+    case google::cloud::StatusCode::kPermissionDenied:\n+    case google::cloud::StatusCode::kUnauthenticated:\n+      return Status::UnknownError(os.str());\n+    case google::cloud::StatusCode::kResourceExhausted:\n+      return Status::CapacityError(os.str());\n+    case google::cloud::StatusCode::kFailedPrecondition:\n+    case google::cloud::StatusCode::kAborted:\n+      return Status::UnknownError(os.str());\n+    case google::cloud::StatusCode::kOutOfRange:\n+      return Status::Invalid(os.str());\n+    case google::cloud::StatusCode::kUnimplemented:\n+      return Status::NotImplemented(os.str());\n+    case google::cloud::StatusCode::kInternal:\n+    case google::cloud::StatusCode::kUnavailable:\n+    case google::cloud::StatusCode::kDataLoss:\n+      return Status::UnknownError(os.str());\n+  }\n+  return Status::OK();\n+}\n+\n class GcsFileSystem::Impl {\n  public:\n   explicit Impl(GcsOptions o)\n       : options_(std::move(o)), client_(AsGoogleCloudOptions(options_)) {}\n \n   GcsOptions const& options() const { return options_; }\n \n+  Result<FileInfo> GetFileInfo(GcsPath const& path) {\n\nReview comment:\n       muscle memory on const?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-10T21:48:36.343+0000",
                    "updated": "2021-10-10T21:48:36.343+0000",
                    "started": "2021-10-10T21:48:36.343+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663283",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663284",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#issuecomment-939558494\n\n\n   Left a few comments.  boost process seems like a new dependency on boost?  I don't know if there are any issue taking it (I guess this is only for tests)?  CC @pitrou @kou \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-10T21:51:31.282+0000",
                    "updated": "2021-10-10T21:51:31.282+0000",
                    "started": "2021-10-10T21:51:31.282+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663284",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663285",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#discussion_r725703839\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs_test.cc\n##########\n@@ -30,10 +34,58 @@ namespace arrow {\n namespace fs {\n namespace {\n \n+namespace bp = boost::process;\n+namespace gc = google::cloud;\n+namespace gcs = google::cloud::storage;\n+\n using ::testing::IsEmpty;\n using ::testing::Not;\n using ::testing::NotNull;\n \n+auto const* kPreexistingBucket = \"test-bucket-name\";\n+\n+class GcsIntegrationTest : public ::testing::Test {\n+ public:\n+  ~GcsIntegrationTest() override {\n+    if (server_process_.valid()) {\n+      // Brutal shutdown\n+      server_process_.terminate();\n+      server_process_.wait();\n+    }\n+  }\n+\n+ protected:\n+  void SetUp() override {\n+    port_ = std::to_string(GetListenPort());\n+    auto exe_path = bp::search_path(\"python3\");\n+    ASSERT_THAT(exe_path, Not(IsEmpty()));\n+\n+    server_process_ = bp::child(boost::this_process::environment(), exe_path, \"-m\",\n+                                \"testbench\", \"--port\", port_);\n+\n+    // Create a bucket in the testbench so additional\n+    auto client = gcs::Client(\n+        google::cloud::Options{}\n+            .set<gcs::RestEndpointOption>(\"http://127.0.0.1:\" + port_)\n+            .set<gc::UnifiedCredentialsOption>(gc::MakeInsecureCredentials()));\n+    auto metadata = client.CreateBucketForProject(\n\nReview comment:\n       nit: maybe spell out type here (its not clear how bucket relates to metadata)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-10T21:52:24.472+0000",
                    "updated": "2021-10-10T21:52:24.472+0000",
                    "started": "2021-10-10T21:52:24.472+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663285",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663286",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#discussion_r725704113\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/CMakeLists.txt\n##########\n@@ -31,7 +31,6 @@ add_arrow_test(filesystem-test\n if(ARROW_GCS)\n   add_arrow_test(gcsfs_test EXTRA_LABELS filesystem)\n endif()\n-\n\nReview comment:\n       nit: seems like this change is irrelevant?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-10T21:54:37.851+0000",
                    "updated": "2021-10-10T21:54:37.851+0000",
                    "started": "2021-10-10T21:54:37.851+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663286",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663298",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#discussion_r725747648\n\n\n\n##########\nFile path: ci/docker/debian-10-cpp.dockerfile\n##########\n@@ -65,15 +65,18 @@ RUN apt-get update -y -q && \\\n         ninja-build \\\n         pkg-config \\\n         protobuf-compiler \\\n+        python3-pip \\\n         rapidjson-dev \\\n         tzdata \\\n         zlib1g-dev && \\\n     apt-get clean && \\\n     rm -rf /var/lib/apt/lists/*\n \n COPY ci/scripts/install_minio.sh \\\n+     ci/scripts/install_gcs_testbench.sh \\\n      /arrow/ci/scripts/\n RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest /usr/local\n+RUN /arrow/ci/scripts/install_gcs_testbench.sh default\n\nReview comment:\n       Not unifying `COPY` is a bit better because we can omit installing minio when `install_gcs_testbench.sh` is only changed:\r\n   \r\n   ```suggestion\r\n   COPY ci/scripts/install_minio.sh \\\r\n        /arrow/ci/scripts/\r\n   RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest /usr/local\r\n   COPY ci/scripts/install_gcs_testbench.sh \\\r\n        /arrow/ci/scripts\r\n   RUN /arrow/ci/scripts/install_gcs_testbench.sh default\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-11T02:18:38.594+0000",
                    "updated": "2021-10-11T02:18:38.594+0000",
                    "started": "2021-10-11T02:18:38.594+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663298",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663550",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on a change in pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#discussion_r726160001\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs_test.cc\n##########\n@@ -30,10 +34,58 @@ namespace arrow {\n namespace fs {\n namespace {\n \n+namespace bp = boost::process;\n+namespace gc = google::cloud;\n+namespace gcs = google::cloud::storage;\n+\n using ::testing::IsEmpty;\n using ::testing::Not;\n using ::testing::NotNull;\n \n+auto const* kPreexistingBucket = \"test-bucket-name\";\n+\n+class GcsIntegrationTest : public ::testing::Test {\n+ public:\n+  ~GcsIntegrationTest() override {\n+    if (server_process_.valid()) {\n+      // Brutal shutdown\n+      server_process_.terminate();\n+      server_process_.wait();\n+    }\n+  }\n+\n+ protected:\n+  void SetUp() override {\n+    port_ = std::to_string(GetListenPort());\n+    auto exe_path = bp::search_path(\"python3\");\n+    ASSERT_THAT(exe_path, Not(IsEmpty()));\n+\n+    server_process_ = bp::child(boost::this_process::environment(), exe_path, \"-m\",\n+                                \"testbench\", \"--port\", port_);\n+\n+    // Create a bucket in the testbench so additional\n+    auto client = gcs::Client(\n+        google::cloud::Options{}\n+            .set<gcs::RestEndpointOption>(\"http://127.0.0.1:\" + port_)\n+            .set<gc::UnifiedCredentialsOption>(gc::MakeInsecureCredentials()));\n+    auto metadata = client.CreateBucketForProject(\n+        kPreexistingBucket, \"ignored-by-testbench\", gcs::BucketMetadata{});\n+    EXPECT_TRUE(metadata.ok()) << \"Failed to create bucket <\" << kPreexistingBucket\n\nReview comment:\n       Done.\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -35,19 +68,85 @@ google::cloud::Options AsGoogleCloudOptions(const GcsOptions& o) {\n   if (!o.endpoint_override.empty()) {\n     std::string scheme = o.scheme;\n     if (scheme.empty()) scheme = \"https\";\n+    if (scheme == \"https\") {\n+      options.set<google::cloud::UnifiedCredentialsOption>(\n+          google::cloud::MakeGoogleDefaultCredentials());\n+    } else {\n+      options.set<google::cloud::UnifiedCredentialsOption>(\n+          google::cloud::MakeInsecureCredentials());\n+    }\n     options.set<gcs::RestEndpointOption>(scheme + \"://\" + o.endpoint_override);\n   }\n   return options;\n }\n \n+Status ToArrowStatus(google::cloud::Status const& s) {\n\nReview comment:\n       > there should probably be more detailed unit tests for this function?\r\n   \r\n   Done.  I tried to make it as little of a \"change detection test\" as possible, but it is hard for these things.\r\n   \r\n   > Do you think it will be important to retrieve the original status? Arrow status has an opaque shared pointer that can be used for this.\r\n   \r\n   I doubt it.  The client library automatically retries (subject to policies set by the application), by the time it returns the most common action is to log the error.  We can always add this later in any case.\r\n   \n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -35,19 +68,85 @@ google::cloud::Options AsGoogleCloudOptions(const GcsOptions& o) {\n   if (!o.endpoint_override.empty()) {\n     std::string scheme = o.scheme;\n     if (scheme.empty()) scheme = \"https\";\n+    if (scheme == \"https\") {\n+      options.set<google::cloud::UnifiedCredentialsOption>(\n+          google::cloud::MakeGoogleDefaultCredentials());\n+    } else {\n+      options.set<google::cloud::UnifiedCredentialsOption>(\n+          google::cloud::MakeInsecureCredentials());\n+    }\n     options.set<gcs::RestEndpointOption>(scheme + \"://\" + o.endpoint_override);\n   }\n   return options;\n }\n \n+Status ToArrowStatus(google::cloud::Status const& s) {\n+  std::ostringstream os;\n+  os << \"google::cloud::Status(\" << s << \")\";\n+  switch (s.code()) {\n+    case google::cloud::StatusCode::kOk:\n+      break;\n+    case google::cloud::StatusCode::kCancelled:\n+      return Status::Cancelled(os.str());\n+    case google::cloud::StatusCode::kUnknown:\n+      return Status::UnknownError(os.str());\n+    case google::cloud::StatusCode::kInvalidArgument:\n+      return Status::Invalid(os.str());\n+    case google::cloud::StatusCode::kDeadlineExceeded:\n+    case google::cloud::StatusCode::kNotFound:\n+      // TODO: it is unclear if a better mapping would be possible.\n+      return Status::UnknownError(os.str());\n+    case google::cloud::StatusCode::kAlreadyExists:\n+      return Status::AlreadyExists(os.str());\n+    case google::cloud::StatusCode::kPermissionDenied:\n+    case google::cloud::StatusCode::kUnauthenticated:\n+      return Status::UnknownError(os.str());\n+    case google::cloud::StatusCode::kResourceExhausted:\n+      return Status::CapacityError(os.str());\n+    case google::cloud::StatusCode::kFailedPrecondition:\n+    case google::cloud::StatusCode::kAborted:\n+      return Status::UnknownError(os.str());\n+    case google::cloud::StatusCode::kOutOfRange:\n+      return Status::Invalid(os.str());\n+    case google::cloud::StatusCode::kUnimplemented:\n+      return Status::NotImplemented(os.str());\n+    case google::cloud::StatusCode::kInternal:\n+    case google::cloud::StatusCode::kUnavailable:\n+    case google::cloud::StatusCode::kDataLoss:\n+      return Status::UnknownError(os.str());\n+  }\n+  return Status::OK();\n+}\n+\n class GcsFileSystem::Impl {\n  public:\n   explicit Impl(GcsOptions o)\n       : options_(std::move(o)), client_(AsGoogleCloudOptions(options_)) {}\n \n   GcsOptions const& options() const { return options_; }\n \n+  Result<FileInfo> GetFileInfo(GcsPath const& path) {\n+    if (!path.object.empty()) {\n+      auto meta = client_.GetObjectMetadata(path.bucket, path.object);\n+      return GetFileInfoImpl(path, std::move(meta).status(), FileType::File);\n+    }\n+    auto meta = client_.GetBucketMetadata(path.bucket);\n+    return GetFileInfoImpl(path, std::move(meta).status(), FileType::Directory);\n+  }\n+\n  private:\n+  Result<FileInfo> GetFileInfoImpl(GcsPath const& path, google::cloud::Status status,\n\nReview comment:\n       Done.\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -35,19 +68,85 @@ google::cloud::Options AsGoogleCloudOptions(const GcsOptions& o) {\n   if (!o.endpoint_override.empty()) {\n     std::string scheme = o.scheme;\n     if (scheme.empty()) scheme = \"https\";\n+    if (scheme == \"https\") {\n+      options.set<google::cloud::UnifiedCredentialsOption>(\n+          google::cloud::MakeGoogleDefaultCredentials());\n+    } else {\n+      options.set<google::cloud::UnifiedCredentialsOption>(\n+          google::cloud::MakeInsecureCredentials());\n+    }\n     options.set<gcs::RestEndpointOption>(scheme + \"://\" + o.endpoint_override);\n   }\n   return options;\n }\n \n+Status ToArrowStatus(google::cloud::Status const& s) {\n+  std::ostringstream os;\n+  os << \"google::cloud::Status(\" << s << \")\";\n+  switch (s.code()) {\n+    case google::cloud::StatusCode::kOk:\n+      break;\n+    case google::cloud::StatusCode::kCancelled:\n+      return Status::Cancelled(os.str());\n+    case google::cloud::StatusCode::kUnknown:\n+      return Status::UnknownError(os.str());\n+    case google::cloud::StatusCode::kInvalidArgument:\n+      return Status::Invalid(os.str());\n+    case google::cloud::StatusCode::kDeadlineExceeded:\n+    case google::cloud::StatusCode::kNotFound:\n+      // TODO: it is unclear if a better mapping would be possible.\n+      return Status::UnknownError(os.str());\n+    case google::cloud::StatusCode::kAlreadyExists:\n+      return Status::AlreadyExists(os.str());\n+    case google::cloud::StatusCode::kPermissionDenied:\n+    case google::cloud::StatusCode::kUnauthenticated:\n+      return Status::UnknownError(os.str());\n+    case google::cloud::StatusCode::kResourceExhausted:\n+      return Status::CapacityError(os.str());\n+    case google::cloud::StatusCode::kFailedPrecondition:\n+    case google::cloud::StatusCode::kAborted:\n+      return Status::UnknownError(os.str());\n+    case google::cloud::StatusCode::kOutOfRange:\n+      return Status::Invalid(os.str());\n+    case google::cloud::StatusCode::kUnimplemented:\n+      return Status::NotImplemented(os.str());\n+    case google::cloud::StatusCode::kInternal:\n+    case google::cloud::StatusCode::kUnavailable:\n+    case google::cloud::StatusCode::kDataLoss:\n+      return Status::UnknownError(os.str());\n+  }\n+  return Status::OK();\n+}\n+\n class GcsFileSystem::Impl {\n  public:\n   explicit Impl(GcsOptions o)\n       : options_(std::move(o)), client_(AsGoogleCloudOptions(options_)) {}\n \n   GcsOptions const& options() const { return options_; }\n \n+  Result<FileInfo> GetFileInfo(GcsPath const& path) {\n\nReview comment:\n       Fixed here and elsewhere.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-11T14:17:51.895+0000",
                    "updated": "2021-10-11T14:17:51.895+0000",
                    "started": "2021-10-11T14:17:51.895+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663550",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663551",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on a change in pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#discussion_r726160674\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs_test.cc\n##########\n@@ -30,10 +34,58 @@ namespace arrow {\n namespace fs {\n namespace {\n \n+namespace bp = boost::process;\n+namespace gc = google::cloud;\n+namespace gcs = google::cloud::storage;\n+\n using ::testing::IsEmpty;\n using ::testing::Not;\n using ::testing::NotNull;\n \n+auto const* kPreexistingBucket = \"test-bucket-name\";\n+\n+class GcsIntegrationTest : public ::testing::Test {\n+ public:\n+  ~GcsIntegrationTest() override {\n+    if (server_process_.valid()) {\n+      // Brutal shutdown\n+      server_process_.terminate();\n+      server_process_.wait();\n+    }\n+  }\n+\n+ protected:\n+  void SetUp() override {\n+    port_ = std::to_string(GetListenPort());\n+    auto exe_path = bp::search_path(\"python3\");\n+    ASSERT_THAT(exe_path, Not(IsEmpty()));\n+\n+    server_process_ = bp::child(boost::this_process::environment(), exe_path, \"-m\",\n+                                \"testbench\", \"--port\", port_);\n+\n+    // Create a bucket in the testbench so additional\n+    auto client = gcs::Client(\n+        google::cloud::Options{}\n+            .set<gcs::RestEndpointOption>(\"http://127.0.0.1:\" + port_)\n+            .set<gc::UnifiedCredentialsOption>(gc::MakeInsecureCredentials()));\n+    auto metadata = client.CreateBucketForProject(\n\nReview comment:\n       Done, but these get super tedious really fast.  These APIs are far more ergonomic if you embrace `auto`.\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-11T14:18:05.063+0000",
                    "updated": "2021-10-11T14:18:05.063+0000",
                    "started": "2021-10-11T14:18:05.063+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663551",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on a change in pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#discussion_r726161535\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/CMakeLists.txt\n##########\n@@ -31,7 +31,6 @@ add_arrow_test(filesystem-test\n if(ARROW_GCS)\n   add_arrow_test(gcsfs_test EXTRA_LABELS filesystem)\n endif()\n-\n\nReview comment:\n       Fixed, thanks.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-11T14:19:01.615+0000",
                    "updated": "2021-10-11T14:19:01.615+0000",
                    "started": "2021-10-11T14:19:01.614+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663553",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663554",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on a change in pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#discussion_r726161653\n\n\n\n##########\nFile path: ci/docker/debian-10-cpp.dockerfile\n##########\n@@ -65,15 +65,18 @@ RUN apt-get update -y -q && \\\n         ninja-build \\\n         pkg-config \\\n         protobuf-compiler \\\n+        python3-pip \\\n         rapidjson-dev \\\n         tzdata \\\n         zlib1g-dev && \\\n     apt-get clean && \\\n     rm -rf /var/lib/apt/lists/*\n \n COPY ci/scripts/install_minio.sh \\\n+     ci/scripts/install_gcs_testbench.sh \\\n      /arrow/ci/scripts/\n RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest /usr/local\n+RUN /arrow/ci/scripts/install_gcs_testbench.sh default\n\nReview comment:\n       Done.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-11T14:19:24.893+0000",
                    "updated": "2021-10-11T14:19:24.893+0000",
                    "started": "2021-10-11T14:19:24.892+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663554",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663555",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#issuecomment-940077455\n\n\n   > We already use `boost::process` for S3 tests. So it's not a new dependency.\r\n   \r\n   Could you clarify what part of the change are you commenting on?  Is it the changes to `vcpkg.json`?  If so, while it is true that `boost::process` was used already, it was not declared as a vcpkg dependency and thus not built by default.\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-11T14:21:42.888+0000",
                    "updated": "2021-10-11T14:21:42.888+0000",
                    "started": "2021-10-11T14:21:42.888+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663555",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663763",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#issuecomment-940428465\n\n\n   > > We already use `boost::process` for S3 tests. So it's not a new dependency.\r\n   > \r\n   > Could you clarify what part of the change are you commenting on? Is it the changes to `vcpkg.json`? If so, while it is true that `boost::process` was used already, it was not declared as a vcpkg dependency and thus not built by default.\r\n   \r\n   Sure. This is an answer of\r\n   \r\n   https://github.com/apache/arrow/pull/11375#issuecomment-939558494\r\n   \r\n   > boost process seems like a new dependency on boost? I don't know if there are any issue taking it (I guess this is only for tests)?\r\n   \r\n   .\r\n   \r\n   I wanted to say that we don't need to think about `boost::process` in this pull request.\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-11T20:45:04.013+0000",
                    "updated": "2021-10-11T20:45:04.013+0000",
                    "started": "2021-10-11T20:45:04.013+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663763",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663772",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#issuecomment-940445020\n\n\n   > I wanted to say that we don't need to think about `boost::process` in this pull request.\r\n   \r\n   Thanks.  I removed the change to `vcpkg.json`.\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-11T21:15:12.319+0000",
                    "updated": "2021-10-11T21:15:12.319+0000",
                    "started": "2021-10-11T21:15:12.318+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663772",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663777",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#discussion_r726576287\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs_test.cc\n##########\n@@ -45,6 +99,48 @@ TEST(GcsFileSystem, OptionsCompare) {\n   EXPECT_FALSE(b.Equals(c));\n }\n \n+TEST(GcsFileSystem, ToArrowStatusOK) {\n+  Status actual = internal::ToArrowStatus(google::cloud::Status());\n+  EXPECT_TRUE(actual.ok());\n+}\n+\n+TEST(GcsFileSystem, ToArrowStatus) {\n+  struct {\n+    google::cloud::StatusCode input;\n+    arrow::StatusCode expected;\n+  } cases[] = {\n+      {google::cloud::StatusCode::kCancelled, StatusCode::Cancelled},\n+      {google::cloud::StatusCode::kUnknown, StatusCode::UnknownError},\n+      {google::cloud::StatusCode::kInvalidArgument, StatusCode::Invalid},\n+      {google::cloud::StatusCode::kDeadlineExceeded, StatusCode::UnknownError},\n+      {google::cloud::StatusCode::kNotFound, StatusCode::UnknownError},\n+      {google::cloud::StatusCode::kAlreadyExists, StatusCode::AlreadyExists},\n+      {google::cloud::StatusCode::kPermissionDenied, StatusCode::UnknownError},\n+      {google::cloud::StatusCode::kUnauthenticated, StatusCode::UnknownError},\n+      {google::cloud::StatusCode::kResourceExhausted, StatusCode::CapacityError},\n+      {google::cloud::StatusCode::kFailedPrecondition, StatusCode::UnknownError},\n+      {google::cloud::StatusCode::kAborted, StatusCode::UnknownError},\n+      {google::cloud::StatusCode::kOutOfRange, StatusCode::Invalid},\n+      {google::cloud::StatusCode::kUnimplemented, StatusCode::NotImplemented},\n+      {google::cloud::StatusCode::kInternal, StatusCode::UnknownError},\n+      {google::cloud::StatusCode::kUnavailable, StatusCode::UnknownError},\n+      {google::cloud::StatusCode::kDataLoss, StatusCode::UnknownError},\n+  };\n+\n+  for (const auto& test : cases) {\n+    auto status = google::cloud::Status(test.input, \"test-message\");\n+    auto message = [&] {\n+      std::ostringstream os;\n+      os << status;\n+      return os.str();\n+    }();\n+    SCOPED_TRACE(\"Testing with status=\" + message);\n\nReview comment:\n       nice, learned something new.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-11T21:24:22.759+0000",
                    "updated": "2021-10-11T21:24:22.759+0000",
                    "started": "2021-10-11T21:24:22.758+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663777",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663778",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#issuecomment-940453737\n\n\n   C++ LGTM, @kou any more concerns?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-11T21:24:48.221+0000",
                    "updated": "2021-10-11T21:24:48.221+0000",
                    "started": "2021-10-11T21:24:48.220+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663778",
                    "issueId": "13405188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/worklog/663826",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #11375:\nURL: https://github.com/apache/arrow/pull/11375#discussion_r726673562\n\n\n\n##########\nFile path: ci/docker/debian-10-cpp.dockerfile\n##########\n@@ -73,7 +74,10 @@ RUN apt-get update -y -q && \\\n \n COPY ci/scripts/install_minio.sh \\\n      /arrow/ci/scripts/\n+COPY ci/scripts/install_gcs_testbench.sh \\\n+     /arrow/ci/scripts/\n RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest /usr/local\n\nReview comment:\n       We can't reuse Docker cache with this order. We need to use the following order:\r\n   \r\n   ```suggestion\r\n   RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest /usr/local\r\n   COPY ci/scripts/install_gcs_testbench.sh \\\r\n        /arrow/ci/scripts/\r\n   ```\n\n##########\nFile path: ci/docker/ubuntu-20.04-cpp.dockerfile\n##########\n@@ -96,7 +97,10 @@ RUN apt-get update -y -q && \\\n \n COPY ci/scripts/install_minio.sh \\\n      /arrow/ci/scripts/\n+COPY ci/scripts/install_gcs_testbench.sh \\\n+     /arrow/ci/scripts/\n RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest /usr/local\n\nReview comment:\n       ```suggestion\r\n   RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest /usr/local\r\n   COPY ci/scripts/install_gcs_testbench.sh \\\r\n        /arrow/ci/scripts/\r\n   ```\n\n##########\nFile path: ci/docker/fedora-33-cpp.dockerfile\n##########\n@@ -64,7 +65,10 @@ RUN dnf update -y && \\\n \n COPY ci/scripts/install_minio.sh \\\n      /arrow/ci/scripts/\n+COPY ci/scripts/install_gcs_testbench.sh \\\n+     /arrow/ci/scripts/\n RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest /usr/local\n\nReview comment:\n       ```suggestion\r\n   RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest /usr/local\r\n   COPY ci/scripts/install_gcs_testbench.sh \\\r\n        /arrow/ci/scripts/\r\n   ```\n\n##########\nFile path: ci/docker/linux-apt-r.dockerfile\n##########\n@@ -87,7 +87,10 @@ RUN /arrow/ci/scripts/r_deps.sh /arrow\n \n COPY ci/scripts/install_minio.sh \\\n      /arrow/ci/scripts/\n+COPY ci/scripts/install_gcs_testbench.sh \\\n+     /arrow/ci/scripts/\n RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest /usr/local\n\nReview comment:\n       ```suggestion\r\n   RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest /usr/local\r\n   COPY ci/scripts/install_gcs_testbench.sh \\\r\n        /arrow/ci/scripts/\r\n   ```\n\n##########\nFile path: ci/docker/debian-11-cpp.dockerfile\n##########\n@@ -71,7 +72,10 @@ RUN apt-get update -y -q && \\\n \n COPY ci/scripts/install_minio.sh \\\n      /arrow/ci/scripts/\n+COPY ci/scripts/install_gcs_testbench.sh \\\n+     /arrow/ci/scripts/\n RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest /usr/local\n\nReview comment:\n       ```suggestion\r\n   RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest /usr/local\r\n   COPY ci/scripts/install_gcs_testbench.sh \\\r\n        /arrow/ci/scripts/\r\n   ```\n\n##########\nFile path: ci/docker/ubuntu-20.10-cpp.dockerfile\n##########\n@@ -98,7 +99,10 @@ RUN apt-get update -y -q && \\\n \n COPY ci/scripts/install_minio.sh \\\n      /arrow/ci/scripts/\n+COPY ci/scripts/install_gcs_testbench.sh \\\n+     /arrow/ci/scripts/\n RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest /usr/local\n\nReview comment:\n       ```suggestion\r\n   RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest /usr/local\r\n   COPY ci/scripts/install_gcs_testbench.sh \\\r\n        /arrow/ci/scripts/\r\n   ```\n\n##########\nFile path: ci/docker/ubuntu-21.04-cpp.dockerfile\n##########\n@@ -96,7 +97,10 @@ RUN apt-get update -y -q && \\\n \n COPY ci/scripts/install_minio.sh \\\n      /arrow/ci/scripts/\n+COPY ci/scripts/install_gcs_testbench.sh \\\n+     /arrow/ci/scripts/\n RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest /usr/local\n\nReview comment:\n       ```suggestion\r\n   RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest /usr/local\r\n   COPY ci/scripts/install_gcs_testbench.sh \\\r\n        /arrow/ci/scripts/\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-12T00:31:26.689+0000",
                    "updated": "2021-10-12T00:31:26.689+0000",
                    "started": "2021-10-12T00:31:26.689+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "663826",
                    "issueId": "13405188"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 30000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2b0652a4[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@491cd96e[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b5c9899[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@54a4f935[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6e0d2e17[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3fa2000e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2025df33[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@53bbf753[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@544116a5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7b4cde53[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@751e4a4e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@79933ad1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 30000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Oct 13 18:00:58 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-10-13T18:00:58.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14236/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-10-06T12:19:41.000+0000",
        "updated": "2021-10-14T03:18:28.000+0000",
        "timeoriginalestimate": null,
        "description": "To continue work on ARROW-1231 I will need to write integration tests for the GCS FileSystem against the GCS testbench. That requires creating a script to install the testbench, and I should write at least one test that uses it.\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "8h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 30000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Install GCS testbench for CI builds",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405188/comment/17428388",
                    "id": "17428388",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 11375\n[https://github.com/apache/arrow/pull/11375]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-10-13T18:00:58.108+0000",
                    "updated": "2021-10-13T18:00:58.108+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0vlzk:",
        "customfield_12314139": null
    }
}