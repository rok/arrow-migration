{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13327498",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498",
    "key": "ARROW-10003",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348647",
                "id": "12348647",
                "name": "1.0.1",
                "archived": false,
                "released": true,
                "releaseDate": "2020-08-21"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10003/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 27,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/484157",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz opened a new pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187\n\n\n   Previously only the parent directories of files to be copied to a different filesystem were created.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-14T18:11:53.467+0000",
                    "updated": "2020-09-14T18:11:53.467+0000",
                    "started": "2020-09-14T18:11:53.466+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "484157",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/484159",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#discussion_r488129044\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -448,6 +449,13 @@ Status CopyFiles(const std::vector<FileLocator>& sources,\n                            destinations.size(), \" paths.\");\n   }\n \n+  RETURN_NOT_OK(::arrow::internal::OptionalParallelFor(\n+      use_threads, static_cast<int>(sources.size()), [&](int i) {\n+        auto dest_dir = internal::GetAbstractPathParent(destinations[i].path).first;\n+        return dest_dir.empty() ? Status::OK()\n+                                : destinations[i].filesystem->CreateDir(dest_dir);\n\nReview comment:\n       This may be very redundant, for example when copying lots of files into a single destination directory. If we had FileLocator::ToUri or similar we could maintain an unordered_set to ensure each directory is created only once\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-14T18:14:10.549+0000",
                    "updated": "2020-09-14T18:14:10.549+0000",
                    "started": "2020-09-14T18:14:10.548+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "484159",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/484160",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#discussion_r488129142\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -16,6 +16,7 @@\n // under the License.\n \n #include <sstream>\n+#include <unordered_set>\n\nReview comment:\n       ```suggestion\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-14T18:14:23.528+0000",
                    "updated": "2020-09-14T18:14:23.528+0000",
                    "started": "2020-09-14T18:14:23.528+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "484160",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/484166",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#issuecomment-692231642\n\n\n   https://issues.apache.org/jira/browse/ARROW-10003\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-14T18:25:58.990+0000",
                    "updated": "2020-09-14T18:25:58.990+0000",
                    "started": "2020-09-14T18:25:58.989+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "484166",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/484574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#discussion_r488777111\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -448,6 +449,13 @@ Status CopyFiles(const std::vector<FileLocator>& sources,\n                            destinations.size(), \" paths.\");\n   }\n \n+  RETURN_NOT_OK(::arrow::internal::OptionalParallelFor(\n+      use_threads, static_cast<int>(sources.size()), [&](int i) {\n+        auto dest_dir = internal::GetAbstractPathParent(destinations[i].path).first;\n+        return dest_dir.empty() ? Status::OK()\n+                                : destinations[i].filesystem->CreateDir(dest_dir);\n\nReview comment:\n       Yes, this doesn't look terrific at all, especially on a remote filesystem. Why do you need to create target directories on the fly at all? That doesn't seem very useful, nor idiomatic.\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-15T15:52:13.578+0000",
                    "updated": "2020-09-15T15:52:13.578+0000",
                    "started": "2020-09-15T15:52:13.577+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "484574",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/485194",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#discussion_r489506318\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -448,6 +449,13 @@ Status CopyFiles(const std::vector<FileLocator>& sources,\n                            destinations.size(), \" paths.\");\n   }\n \n+  RETURN_NOT_OK(::arrow::internal::OptionalParallelFor(\n+      use_threads, static_cast<int>(sources.size()), [&](int i) {\n+        auto dest_dir = internal::GetAbstractPathParent(destinations[i].path).first;\n+        return dest_dir.empty() ? Status::OK()\n+                                : destinations[i].filesystem->CreateDir(dest_dir);\n\nReview comment:\n       Well, I could just remove the directory creation. @nealrichardson ?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-16T14:59:38.992+0000",
                    "updated": "2020-09-16T14:59:38.992+0000",
                    "started": "2020-09-16T14:59:38.992+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "485194",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/485261",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#discussion_r489598925\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -448,6 +449,13 @@ Status CopyFiles(const std::vector<FileLocator>& sources,\n                            destinations.size(), \" paths.\");\n   }\n \n+  RETURN_NOT_OK(::arrow::internal::OptionalParallelFor(\n+      use_threads, static_cast<int>(sources.size()), [&](int i) {\n+        auto dest_dir = internal::GetAbstractPathParent(destinations[i].path).first;\n+        return dest_dir.empty() ? Status::OK()\n+                                : destinations[i].filesystem->CreateDir(dest_dir);\n\nReview comment:\n       `cp file.ext new/path` fails if `new/path` doesn't exist. `cp dir newdir` fails if `dir` is a directory. But `cp -r dir newdir` works and makes nested directories. \r\n   \r\n   So maybe the idiomatic solution is either (1) add a \"recursive\" argument, or (2) have a version that takes a single fs+FileSelector and a single destination fs+path, and that does the `cp -r` case.\r\n   \r\n   The use case I'm interested in supporting is \"copy the contents of this S3 bucket locally\" and similar things.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-16T17:20:00.655+0000",
                    "updated": "2020-09-16T17:20:00.655+0000",
                    "started": "2020-09-16T17:20:00.655+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "485261",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/485367",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#discussion_r489734818\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -448,6 +449,13 @@ Status CopyFiles(const std::vector<FileLocator>& sources,\n                            destinations.size(), \" paths.\");\n   }\n \n+  RETURN_NOT_OK(::arrow::internal::OptionalParallelFor(\n+      use_threads, static_cast<int>(sources.size()), [&](int i) {\n+        auto dest_dir = internal::GetAbstractPathParent(destinations[i].path).first;\n+        return dest_dir.empty() ? Status::OK()\n+                                : destinations[i].filesystem->CreateDir(dest_dir);\n\nReview comment:\n       I'll add an argument to make directory creation optional, then\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-16T20:28:23.400+0000",
                    "updated": "2020-09-16T20:28:23.400+0000",
                    "started": "2020-09-16T20:28:23.400+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "485367",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/485375",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#discussion_r489737696\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -448,6 +449,13 @@ Status CopyFiles(const std::vector<FileLocator>& sources,\n                            destinations.size(), \" paths.\");\n   }\n \n+  RETURN_NOT_OK(::arrow::internal::OptionalParallelFor(\n+      use_threads, static_cast<int>(sources.size()), [&](int i) {\n+        auto dest_dir = internal::GetAbstractPathParent(destinations[i].path).first;\n+        return dest_dir.empty() ? Status::OK()\n+                                : destinations[i].filesystem->CreateDir(dest_dir);\n\nReview comment:\n       I would simply remove directory creation. A separate function for recursive copy can be implemented if desired.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-16T20:33:58.367+0000",
                    "updated": "2020-09-16T20:33:58.367+0000",
                    "started": "2020-09-16T20:33:58.367+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "485375",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/489788",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#issuecomment-697926431\n\n\n   @pitrou CI failure seems unrelated, PTAL\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-23T19:30:10.928+0000",
                    "updated": "2020-09-23T19:30:10.928+0000",
                    "started": "2020-09-23T19:30:10.927+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "489788",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/490213",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#discussion_r494324838\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -457,18 +458,52 @@ Status CopyFiles(const std::vector<FileLocator>& sources,\n         ARROW_ASSIGN_OR_RAISE(auto source,\n                               sources[i].filesystem->OpenInputStream(sources[i].path));\n \n-        auto dest_dir = internal::GetAbstractPathParent(destinations[i].path).first;\n-        if (!dest_dir.empty()) {\n-          RETURN_NOT_OK(destinations[i].filesystem->CreateDir(dest_dir));\n-        }\n-\n         ARROW_ASSIGN_OR_RAISE(\n             auto destination,\n             destinations[i].filesystem->OpenOutputStream(destinations[i].path));\n         return internal::CopyStream(source, destination, chunk_size);\n       });\n }\n \n+Status CopyFiles(const std::shared_ptr<FileSystem>& source_fs,\n+                 const FileSelector& source_sel,\n+                 const std::shared_ptr<FileSystem>& destination_fs,\n+                 const std::string& destination_base_dir, int64_t chunk_size,\n+                 bool use_threads) {\n+  ARROW_ASSIGN_OR_RAISE(auto source_infos, source_fs->GetFileInfo(source_sel));\n+  std::vector<FileLocator> sources, destinations;\n+\n+  std::unordered_set<std::string> destination_dirs;\n+  destination_dirs.insert(destination_base_dir);\n+\n+  for (const FileInfo& source_info : source_infos) {\n+    auto relative = internal::RemoveAncestor(source_sel.base_dir, source_info.path());\n+    if (!relative.has_value()) {\n+      return Status::Invalid(\"GetFileInfo() yielded path '\", source_info.path(),\n+                             \"', which is outside base dir '\", source_sel.base_dir, \"'\");\n+    }\n+\n+    auto destination_path =\n+        internal::ConcatAbstractPath(destination_base_dir, relative->to_string());\n+\n+    if (source_info.IsDirectory()) {\n+      destination_dirs.insert(destination_path);\n+    } else if (source_info.IsFile()) {\n+      sources.push_back({source_fs, source_info.path()});\n+      destinations.push_back({destination_fs, destination_path});\n+    }\n+  }\n+\n+  std::vector<std::string> dirs(destination_dirs.size());\n+  std::move(destination_dirs.begin(), destination_dirs.end(), dirs.begin());\n+  RETURN_NOT_OK(::arrow::internal::OptionalParallelFor(\n+      use_threads, static_cast<int>(dirs.size()), [&](int i) {\n+        return dirs[i].empty() ? Status::OK() : destination_fs->CreateDir(dirs[i]);\n\nReview comment:\n       This will call `CreateDir` separately for intermediate directories, even though `recursive = true` is passed. This seems a bit wasteful, though I'm not sure it matters much in practice (it could be annoying on remote filesystems such as S3).\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -457,18 +458,52 @@ Status CopyFiles(const std::vector<FileLocator>& sources,\n         ARROW_ASSIGN_OR_RAISE(auto source,\n                               sources[i].filesystem->OpenInputStream(sources[i].path));\n \n-        auto dest_dir = internal::GetAbstractPathParent(destinations[i].path).first;\n-        if (!dest_dir.empty()) {\n-          RETURN_NOT_OK(destinations[i].filesystem->CreateDir(dest_dir));\n-        }\n-\n         ARROW_ASSIGN_OR_RAISE(\n             auto destination,\n             destinations[i].filesystem->OpenOutputStream(destinations[i].path));\n         return internal::CopyStream(source, destination, chunk_size);\n       });\n }\n \n+Status CopyFiles(const std::shared_ptr<FileSystem>& source_fs,\n+                 const FileSelector& source_sel,\n+                 const std::shared_ptr<FileSystem>& destination_fs,\n+                 const std::string& destination_base_dir, int64_t chunk_size,\n+                 bool use_threads) {\n+  ARROW_ASSIGN_OR_RAISE(auto source_infos, source_fs->GetFileInfo(source_sel));\n+  std::vector<FileLocator> sources, destinations;\n+\n+  std::unordered_set<std::string> destination_dirs;\n+  destination_dirs.insert(destination_base_dir);\n+\n+  for (const FileInfo& source_info : source_infos) {\n+    auto relative = internal::RemoveAncestor(source_sel.base_dir, source_info.path());\n+    if (!relative.has_value()) {\n+      return Status::Invalid(\"GetFileInfo() yielded path '\", source_info.path(),\n+                             \"', which is outside base dir '\", source_sel.base_dir, \"'\");\n+    }\n+\n+    auto destination_path =\n+        internal::ConcatAbstractPath(destination_base_dir, relative->to_string());\n+\n+    if (source_info.IsDirectory()) {\n+      destination_dirs.insert(destination_path);\n+    } else if (source_info.IsFile()) {\n+      sources.push_back({source_fs, source_info.path()});\n+      destinations.push_back({destination_fs, destination_path});\n+    }\n+  }\n+\n+  std::vector<std::string> dirs(destination_dirs.size());\n+  std::move(destination_dirs.begin(), destination_dirs.end(), dirs.begin());\n\nReview comment:\n       Interesting, I didn't know this `std::move` override!\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T13:40:28.004+0000",
                    "updated": "2020-09-24T13:40:28.004+0000",
                    "started": "2020-09-24T13:40:28.004+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490213",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/490253",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#discussion_r494388617\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -457,18 +458,52 @@ Status CopyFiles(const std::vector<FileLocator>& sources,\n         ARROW_ASSIGN_OR_RAISE(auto source,\n                               sources[i].filesystem->OpenInputStream(sources[i].path));\n \n-        auto dest_dir = internal::GetAbstractPathParent(destinations[i].path).first;\n-        if (!dest_dir.empty()) {\n-          RETURN_NOT_OK(destinations[i].filesystem->CreateDir(dest_dir));\n-        }\n-\n         ARROW_ASSIGN_OR_RAISE(\n             auto destination,\n             destinations[i].filesystem->OpenOutputStream(destinations[i].path));\n         return internal::CopyStream(source, destination, chunk_size);\n       });\n }\n \n+Status CopyFiles(const std::shared_ptr<FileSystem>& source_fs,\n+                 const FileSelector& source_sel,\n+                 const std::shared_ptr<FileSystem>& destination_fs,\n+                 const std::string& destination_base_dir, int64_t chunk_size,\n+                 bool use_threads) {\n+  ARROW_ASSIGN_OR_RAISE(auto source_infos, source_fs->GetFileInfo(source_sel));\n+  std::vector<FileLocator> sources, destinations;\n+\n+  std::unordered_set<std::string> destination_dirs;\n+  destination_dirs.insert(destination_base_dir);\n+\n+  for (const FileInfo& source_info : source_infos) {\n+    auto relative = internal::RemoveAncestor(source_sel.base_dir, source_info.path());\n+    if (!relative.has_value()) {\n+      return Status::Invalid(\"GetFileInfo() yielded path '\", source_info.path(),\n+                             \"', which is outside base dir '\", source_sel.base_dir, \"'\");\n+    }\n+\n+    auto destination_path =\n+        internal::ConcatAbstractPath(destination_base_dir, relative->to_string());\n+\n+    if (source_info.IsDirectory()) {\n+      destination_dirs.insert(destination_path);\n+    } else if (source_info.IsFile()) {\n+      sources.push_back({source_fs, source_info.path()});\n+      destinations.push_back({destination_fs, destination_path});\n+    }\n+  }\n+\n+  std::vector<std::string> dirs(destination_dirs.size());\n+  std::move(destination_dirs.begin(), destination_dirs.end(), dirs.begin());\n+  RETURN_NOT_OK(::arrow::internal::OptionalParallelFor(\n+      use_threads, static_cast<int>(dirs.size()), [&](int i) {\n+        return dirs[i].empty() ? Status::OK() : destination_fs->CreateDir(dirs[i]);\n\nReview comment:\n       I'll remove any directories which have a descendant in the set, that should produce the minimal number of directories to create.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T14:58:01.376+0000",
                    "updated": "2020-09-24T14:58:01.376+0000",
                    "started": "2020-09-24T14:58:01.376+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490253",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/490295",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#discussion_r494450952\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -487,15 +489,27 @@ Status CopyFiles(const std::shared_ptr<FileSystem>& source_fs,\n         internal::ConcatAbstractPath(destination_base_dir, relative->to_string());\n \n     if (source_info.IsDirectory()) {\n-      destination_dirs.insert(destination_path);\n+      dirs.push_back(destination_path);\n     } else if (source_info.IsFile()) {\n       sources.push_back({source_fs, source_info.path()});\n       destinations.push_back({destination_fs, destination_path});\n     }\n   }\n \n-  std::vector<std::string> dirs(destination_dirs.size());\n-  std::move(destination_dirs.begin(), destination_dirs.end(), dirs.begin());\n+  // remove directories with descendants since recursive directory creation will create\n+  // them automatically\n+  std::sort(dirs.begin(), dirs.end());\n+  for (auto ancestor = dirs.begin(); ancestor != dirs.end(); ++ancestor) {\n+    auto descendants_end = ancestor + 1;\n+\n+    while (descendants_end != dirs.end() &&\n+           internal::IsAncestorOf(*ancestor, *descendants_end)) {\n+      ++descendants_end;\n+    }\n+\n+    dirs.erase(ancestor, descendants_end - 1);\n\nReview comment:\n       Hmm... if I have `{\"a\", \"a/b\", \"a/c\")`, it looks like this will remove `{\"a\", \"a/b\"}`?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T16:25:32.146+0000",
                    "updated": "2020-09-24T16:25:32.146+0000",
                    "started": "2020-09-24T16:25:32.146+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490295",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/490298",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#discussion_r494451602\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -487,15 +489,27 @@ Status CopyFiles(const std::shared_ptr<FileSystem>& source_fs,\n         internal::ConcatAbstractPath(destination_base_dir, relative->to_string());\n \n     if (source_info.IsDirectory()) {\n-      destination_dirs.insert(destination_path);\n+      dirs.push_back(destination_path);\n     } else if (source_info.IsFile()) {\n       sources.push_back({source_fs, source_info.path()});\n       destinations.push_back({destination_fs, destination_path});\n     }\n   }\n \n-  std::vector<std::string> dirs(destination_dirs.size());\n-  std::move(destination_dirs.begin(), destination_dirs.end(), dirs.begin());\n+  // remove directories with descendants since recursive directory creation will create\n+  // them automatically\n+  std::sort(dirs.begin(), dirs.end());\n+  for (auto ancestor = dirs.begin(); ancestor != dirs.end(); ++ancestor) {\n+    auto descendants_end = ancestor + 1;\n+\n+    while (descendants_end != dirs.end() &&\n+           internal::IsAncestorOf(*ancestor, *descendants_end)) {\n+      ++descendants_end;\n+    }\n+\n+    dirs.erase(ancestor, descendants_end - 1);\n\nReview comment:\n       no, `dirs.erase(ancestor, descendants_end)` would erase \"a/b\" too but I subtract 1 so it leaves the last descendant in place\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T16:26:32.330+0000",
                    "updated": "2020-09-24T16:26:32.330+0000",
                    "started": "2020-09-24T16:26:32.329+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490298",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/490300",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#discussion_r494453811\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -487,15 +489,27 @@ Status CopyFiles(const std::shared_ptr<FileSystem>& source_fs,\n         internal::ConcatAbstractPath(destination_base_dir, relative->to_string());\n \n     if (source_info.IsDirectory()) {\n-      destination_dirs.insert(destination_path);\n+      dirs.push_back(destination_path);\n     } else if (source_info.IsFile()) {\n       sources.push_back({source_fs, source_info.path()});\n       destinations.push_back({destination_fs, destination_path});\n     }\n   }\n \n-  std::vector<std::string> dirs(destination_dirs.size());\n-  std::move(destination_dirs.begin(), destination_dirs.end(), dirs.begin());\n+  // remove directories with descendants since recursive directory creation will create\n+  // them automatically\n+  std::sort(dirs.begin(), dirs.end());\n+  for (auto ancestor = dirs.begin(); ancestor != dirs.end(); ++ancestor) {\n+    auto descendants_end = ancestor + 1;\n+\n+    while (descendants_end != dirs.end() &&\n+           internal::IsAncestorOf(*ancestor, *descendants_end)) {\n+      ++descendants_end;\n+    }\n+\n+    dirs.erase(ancestor, descendants_end - 1);\n\nReview comment:\n       Perhaps `PathForest` can help. Though it's not obvious how to list the leaves.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T16:29:19.703+0000",
                    "updated": "2020-09-24T16:29:19.703+0000",
                    "started": "2020-09-24T16:29:19.703+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490300",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/490315",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#discussion_r494463542\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -487,15 +489,27 @@ Status CopyFiles(const std::shared_ptr<FileSystem>& source_fs,\n         internal::ConcatAbstractPath(destination_base_dir, relative->to_string());\n \n     if (source_info.IsDirectory()) {\n-      destination_dirs.insert(destination_path);\n+      dirs.push_back(destination_path);\n     } else if (source_info.IsFile()) {\n       sources.push_back({source_fs, source_info.path()});\n       destinations.push_back({destination_fs, destination_path});\n     }\n   }\n \n-  std::vector<std::string> dirs(destination_dirs.size());\n-  std::move(destination_dirs.begin(), destination_dirs.end(), dirs.begin());\n+  // remove directories with descendants since recursive directory creation will create\n+  // them automatically\n+  std::sort(dirs.begin(), dirs.end());\n+  for (auto ancestor = dirs.begin(); ancestor != dirs.end(); ++ancestor) {\n+    auto descendants_end = ancestor + 1;\n+\n+    while (descendants_end != dirs.end() &&\n+           internal::IsAncestorOf(*ancestor, *descendants_end)) {\n+      ++descendants_end;\n+    }\n+\n+    dirs.erase(ancestor, descendants_end - 1);\n\nReview comment:\n       In this example, `descendants_end` would be `dirs.end()`, though?\r\n   Perhaps you can fix this by using `internal::IsAncestorOf(*(descendants_end - 1), *descendants_end)` instead of `internal::IsAncestorOf(*ancestor, *descendants_end)`.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T16:45:09.071+0000",
                    "updated": "2020-09-24T16:45:09.071+0000",
                    "started": "2020-09-24T16:45:09.071+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490315",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/490319",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#discussion_r494464587\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -487,15 +489,27 @@ Status CopyFiles(const std::shared_ptr<FileSystem>& source_fs,\n         internal::ConcatAbstractPath(destination_base_dir, relative->to_string());\n \n     if (source_info.IsDirectory()) {\n-      destination_dirs.insert(destination_path);\n+      dirs.push_back(destination_path);\n     } else if (source_info.IsFile()) {\n       sources.push_back({source_fs, source_info.path()});\n       destinations.push_back({destination_fs, destination_path});\n     }\n   }\n \n-  std::vector<std::string> dirs(destination_dirs.size());\n-  std::move(destination_dirs.begin(), destination_dirs.end(), dirs.begin());\n+  // remove directories with descendants since recursive directory creation will create\n+  // them automatically\n+  std::sort(dirs.begin(), dirs.end());\n+  for (auto ancestor = dirs.begin(); ancestor != dirs.end(); ++ancestor) {\n+    auto descendants_end = ancestor + 1;\n+\n+    while (descendants_end != dirs.end() &&\n+           internal::IsAncestorOf(*ancestor, *descendants_end)) {\n+      ++descendants_end;\n+    }\n+\n+    dirs.erase(ancestor, descendants_end - 1);\n\nReview comment:\n       Another problem is that you're iterating on `dirs` while erasing from it. That's not safe, I think, unless you write `ancestor = dirs.erase(ancestor, descendants_end - 1)`.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T16:47:01.039+0000",
                    "updated": "2020-09-24T16:47:01.039+0000",
                    "started": "2020-09-24T16:47:01.039+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490319",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/490324",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#discussion_r494465714\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -487,15 +489,27 @@ Status CopyFiles(const std::shared_ptr<FileSystem>& source_fs,\n         internal::ConcatAbstractPath(destination_base_dir, relative->to_string());\n \n     if (source_info.IsDirectory()) {\n-      destination_dirs.insert(destination_path);\n+      dirs.push_back(destination_path);\n     } else if (source_info.IsFile()) {\n       sources.push_back({source_fs, source_info.path()});\n       destinations.push_back({destination_fs, destination_path});\n     }\n   }\n \n-  std::vector<std::string> dirs(destination_dirs.size());\n-  std::move(destination_dirs.begin(), destination_dirs.end(), dirs.begin());\n+  // remove directories with descendants since recursive directory creation will create\n+  // them automatically\n+  std::sort(dirs.begin(), dirs.end());\n+  for (auto ancestor = dirs.begin(); ancestor != dirs.end(); ++ancestor) {\n+    auto descendants_end = ancestor + 1;\n+\n+    while (descendants_end != dirs.end() &&\n+           internal::IsAncestorOf(*ancestor, *descendants_end)) {\n+      ++descendants_end;\n+    }\n+\n+    dirs.erase(ancestor, descendants_end - 1);\n\nReview comment:\n       Yet another issue is if you have `{\"a\", \"a/b/c\"}`, `\"a\"` won't be removed?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T16:48:45.119+0000",
                    "updated": "2020-09-24T16:48:45.119+0000",
                    "started": "2020-09-24T16:48:45.119+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490324",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/490367",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#discussion_r494537039\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -487,15 +489,27 @@ Status CopyFiles(const std::shared_ptr<FileSystem>& source_fs,\n         internal::ConcatAbstractPath(destination_base_dir, relative->to_string());\n \n     if (source_info.IsDirectory()) {\n-      destination_dirs.insert(destination_path);\n+      dirs.push_back(destination_path);\n     } else if (source_info.IsFile()) {\n       sources.push_back({source_fs, source_info.path()});\n       destinations.push_back({destination_fs, destination_path});\n     }\n   }\n \n-  std::vector<std::string> dirs(destination_dirs.size());\n-  std::move(destination_dirs.begin(), destination_dirs.end(), dirs.begin());\n+  // remove directories with descendants since recursive directory creation will create\n+  // them automatically\n+  std::sort(dirs.begin(), dirs.end());\n+  for (auto ancestor = dirs.begin(); ancestor != dirs.end(); ++ancestor) {\n+    auto descendants_end = ancestor + 1;\n+\n+    while (descendants_end != dirs.end() &&\n+           internal::IsAncestorOf(*ancestor, *descendants_end)) {\n+      ++descendants_end;\n+    }\n+\n+    dirs.erase(ancestor, descendants_end - 1);\n\nReview comment:\n       > Perhaps `PathForest` can help. Though it's not obvious how to list the leaves.\r\n   I don't think so; the intent of PathForest is to visit all ancestors efficiently so getting a minimal set of descendants would not be efficient\r\n   \r\n   > `internal::IsAncestorOf(*(descendants_end - 1), *descendants_end)`\r\n   You're right, thanks\r\n   \r\n   > Another problem is that you're iterating on dirs while erasing from it. That's not safe, I think, unless you write `ancestor = dirs.erase(ancestor, descendants_end - 1)`.\r\n   You're right; vector::erase invalidates iterators *at* or after the beginning of the range.\r\n   \r\n   > Yet another issue is if you have {\"a\", \"a/b/c\"}, \"a\" won't be removed?\r\n   No, I'd expect `IsAncestorOf(\"a\", \"a/b/c\") so \"a\" should be removed.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T18:45:12.453+0000",
                    "updated": "2020-09-24T18:45:12.453+0000",
                    "started": "2020-09-24T18:45:12.452+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490367",
                    "issueId": "13327498"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/worklog/490368",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #8187:\nURL: https://github.com/apache/arrow/pull/8187#discussion_r494537039\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.cc\n##########\n@@ -487,15 +489,27 @@ Status CopyFiles(const std::shared_ptr<FileSystem>& source_fs,\n         internal::ConcatAbstractPath(destination_base_dir, relative->to_string());\n \n     if (source_info.IsDirectory()) {\n-      destination_dirs.insert(destination_path);\n+      dirs.push_back(destination_path);\n     } else if (source_info.IsFile()) {\n       sources.push_back({source_fs, source_info.path()});\n       destinations.push_back({destination_fs, destination_path});\n     }\n   }\n \n-  std::vector<std::string> dirs(destination_dirs.size());\n-  std::move(destination_dirs.begin(), destination_dirs.end(), dirs.begin());\n+  // remove directories with descendants since recursive directory creation will create\n+  // them automatically\n+  std::sort(dirs.begin(), dirs.end());\n+  for (auto ancestor = dirs.begin(); ancestor != dirs.end(); ++ancestor) {\n+    auto descendants_end = ancestor + 1;\n+\n+    while (descendants_end != dirs.end() &&\n+           internal::IsAncestorOf(*ancestor, *descendants_end)) {\n+      ++descendants_end;\n+    }\n+\n+    dirs.erase(ancestor, descendants_end - 1);\n\nReview comment:\n       > Perhaps `PathForest` can help. Though it's not obvious how to list the leaves.\r\n   \r\n   I don't think so; the intent of PathForest is to visit all ancestors efficiently so getting a minimal set of descendants would not be efficient\r\n   \r\n   > `internal::IsAncestorOf(*(descendants_end - 1), *descendants_end)`\r\n   \r\n   You're right, thanks\r\n   \r\n   > Another problem is that you're iterating on dirs while erasing from it. That's not safe, I think, unless you write `ancestor = dirs.erase(ancestor, descendants_end - 1)`.\r\n   \r\n   You're right; vector::erase invalidates iterators *at* or after the beginning of the range.\r\n   \r\n   > Yet another issue is if you have {\"a\", \"a/b/c\"}, \"a\" won't be removed?\r\n   \r\n   No, I'd expect `IsAncestorOf(\"a\", \"a/b/c\") so \"a\" should be removed.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T18:45:25.534+0000",
                    "updated": "2020-09-24T18:45:25.534+0000",
                    "started": "2020-09-24T18:45:25.534+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490368",
                    "issueId": "13327498"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 16200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3cfc1b44[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2d4c509a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@78770c9a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@37704b8e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ee877a4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@428275a8[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@251a2be[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3748b541[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7a50b15b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2baea48c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2465a715[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@56f5fc65[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 16200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Sep 24 22:20:50 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-09-24T22:20:50.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10003/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-09-14T17:43:41.000+0000",
        "updated": "2020-09-25T13:39:58.000+0000",
        "timeoriginalestimate": null,
        "description": "CopyFiles creates parent directories for destination files, but only when copying between different filesystems. This behavior should be made consistent",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 16200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Create directories in CopyFiles when copying within the same filesystem",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327498/comment/17201803",
                    "id": "17201803",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 8187\n[https://github.com/apache/arrow/pull/8187]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-09-24T22:20:50.952+0000",
                    "updated": "2020-09-24T22:20:50.952+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ilao:",
        "customfield_12314139": null
    }
}