{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13401996",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996",
    "key": "ARROW-14034",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zhztheplayer",
            "name": "zhztheplayer",
            "key": "zhztheplayer",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Hongze Zhang",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/3",
            "description": "This issue is being actively worked on at the moment by the assignee.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/inprogress.png",
            "name": "In Progress",
            "id": "3",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4",
                "id": 4,
                "key": "indeterminate",
                "colorName": "yellow",
                "name": "In Progress"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zhztheplayer",
            "name": "zhztheplayer",
            "key": "zhztheplayer",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Hongze Zhang",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zhztheplayer",
            "name": "zhztheplayer",
            "key": "zhztheplayer",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Hongze Zhang",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14034/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/652586",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11182:\nURL: https://github.com/apache/arrow/pull/11182#issuecomment-922253350\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-18T10:10:15.186+0000",
                    "updated": "2021-09-18T10:10:15.186+0000",
                    "started": "2021-09-18T10:10:15.186+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652586",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/653072",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11182:\nURL: https://github.com/apache/arrow/pull/11182#discussion_r712315553\n\n\n\n##########\nFile path: java/memory/memory-core/src/main/java/org/apache/arrow/memory/BaseAllocator.java\n##########\n@@ -272,18 +282,37 @@ public ArrowBuf buffer(final long initialRequestSize, BufferManager manager) {\n     }\n \n     boolean success = false;\n+    final ArrowBuf buffer;\n     try {\n-      ArrowBuf buffer = bufferWithoutReservation(actualRequestSize, manager);\n+      buffer = bufferWithoutReservation(actualRequestSize, manager);\n       success = true;\n-      listener.onAllocation(actualRequestSize);\n-      return buffer;\n     } catch (OutOfMemoryError e) {\n       throw e;\n     } finally {\n       if (!success) {\n         releaseBytes(actualRequestSize);\n       }\n     }\n+\n+    final long grantedSize = buffer.getReferenceManager().getSize();\n+    if (grantedSize != actualRequestSize) {\n+      // reallocate bytes using the actual returned chunk size\n+      long diff = grantedSize - actualRequestSize;\n+      if (diff > 0) {\n+        AllocationOutcome reallocateOutcome = allocateBytes(diff);\n+        if (!reallocateOutcome.isOk()) {\n+          // forcibly allocate for remaining bytes, then release all\n+          forceAllocate(diff);\n+          buffer.close();\n+          throw new OutOfMemoryException(createErrorMsg(this, grantedSize, actualRequestSize,\n+              initialRequestSize), reallocateOutcome.getDetails());\n+        }\n+      } else {\n+        releaseBytes(-diff);\n\nReview comment:\n       it seems like getting less then requested should be an error?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T16:12:13.158+0000",
                    "updated": "2021-09-20T16:12:13.158+0000",
                    "started": "2021-09-20T16:12:13.158+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653072",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/653073",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11182:\nURL: https://github.com/apache/arrow/pull/11182#discussion_r712315892\n\n\n\n##########\nFile path: java/memory/memory-netty/src/test/java/org/apache/arrow/memory/TestBaseAllocator.java\n##########\n@@ -438,6 +441,99 @@ public ArrowBuf empty() {\n         }).build());\n   }\n \n+  @Test\n+  public void testAllocationManagerRequestedSizeAndGrantedSize1() {\n\nReview comment:\n       please renamed tests to not be numbered and instead describe what they are testing.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T16:12:46.424+0000",
                    "updated": "2021-09-20T16:12:46.424+0000",
                    "started": "2021-09-20T16:12:46.424+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653073",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/653074",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11182:\nURL: https://github.com/apache/arrow/pull/11182#discussion_r712316073\n\n\n\n##########\nFile path: java/memory/memory-netty/src/test/java/org/apache/arrow/memory/TestBaseAllocator.java\n##########\n@@ -438,6 +441,99 @@ public ArrowBuf empty() {\n         }).build());\n   }\n \n+  @Test\n+  public void testAllocationManagerRequestedSizeAndGrantedSize1() {\n+    // actual size is different from request size\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(16, MAX_ALLOCATION);\n+    final ArrowBuf arrowBuf = allocator.buffer(1024L);\n+    assertEquals(16L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(16L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(16L, allocator.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(arrowBuf, allocator));\n+  }\n+\n+  @Test\n+  public void testAllocationManagerRequestedSizeAndGrantedSize2() {\n+    // actual size is larger than request size\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1024, MAX_ALLOCATION);\n+    final ArrowBuf arrowBuf = allocator.buffer(16L);\n+    assertEquals(1024L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(1024L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(1024L, allocator.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(arrowBuf, allocator));\n+  }\n+\n+  @Test\n+  public void testAllocationManagerRequestedSizeAndGrantedSize3() {\n+    // actual size is larger than request size, and is beyond allocation limit\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1024, 1023);\n+    assertThrows(OutOfMemoryException.class, () -> {\n+      allocator.buffer(16L); // should throw exception\n+      fail();\n\nReview comment:\n       fail() should not be needed here.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T16:12:59.712+0000",
                    "updated": "2021-09-20T16:12:59.712+0000",
                    "started": "2021-09-20T16:12:59.711+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653074",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/653291",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on a change in pull request #11182:\nURL: https://github.com/apache/arrow/pull/11182#discussion_r712599015\n\n\n\n##########\nFile path: java/memory/memory-core/src/main/java/org/apache/arrow/memory/BaseAllocator.java\n##########\n@@ -272,18 +282,37 @@ public ArrowBuf buffer(final long initialRequestSize, BufferManager manager) {\n     }\n \n     boolean success = false;\n+    final ArrowBuf buffer;\n     try {\n-      ArrowBuf buffer = bufferWithoutReservation(actualRequestSize, manager);\n+      buffer = bufferWithoutReservation(actualRequestSize, manager);\n       success = true;\n-      listener.onAllocation(actualRequestSize);\n-      return buffer;\n     } catch (OutOfMemoryError e) {\n       throw e;\n     } finally {\n       if (!success) {\n         releaseBytes(actualRequestSize);\n       }\n     }\n+\n+    final long grantedSize = buffer.getReferenceManager().getSize();\n+    if (grantedSize != actualRequestSize) {\n+      // reallocate bytes using the actual returned chunk size\n+      long diff = grantedSize - actualRequestSize;\n+      if (diff > 0) {\n+        AllocationOutcome reallocateOutcome = allocateBytes(diff);\n+        if (!reallocateOutcome.isOk()) {\n+          // forcibly allocate for remaining bytes, then release all\n+          forceAllocate(diff);\n+          buffer.close();\n+          throw new OutOfMemoryException(createErrorMsg(this, grantedSize, actualRequestSize,\n+              initialRequestSize), reallocateOutcome.getDetails());\n+        }\n+      } else {\n+        releaseBytes(-diff);\n\nReview comment:\n       This is a great point... Should we consider the case that the return size is constantly set to zero by a customizied AM? I was trying to do something like this to make the allocator yield its local allocation limit to a user-defined global counter. That says, actually, the AM's size in Arrow is only used to account bytes to allocators.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T00:00:29.518+0000",
                    "updated": "2021-09-21T00:00:29.518+0000",
                    "started": "2021-09-21T00:00:29.518+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653291",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/653292",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on a change in pull request #11182:\nURL: https://github.com/apache/arrow/pull/11182#discussion_r712599673\n\n\n\n##########\nFile path: java/memory/memory-netty/src/test/java/org/apache/arrow/memory/TestBaseAllocator.java\n##########\n@@ -438,6 +441,99 @@ public ArrowBuf empty() {\n         }).build());\n   }\n \n+  @Test\n+  public void testAllocationManagerRequestedSizeAndGrantedSize1() {\n\nReview comment:\n       done\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T00:02:12.885+0000",
                    "updated": "2021-09-21T00:02:12.885+0000",
                    "started": "2021-09-21T00:02:12.885+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653292",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/653293",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on a change in pull request #11182:\nURL: https://github.com/apache/arrow/pull/11182#discussion_r712599834\n\n\n\n##########\nFile path: java/memory/memory-netty/src/test/java/org/apache/arrow/memory/TestBaseAllocator.java\n##########\n@@ -438,6 +441,99 @@ public ArrowBuf empty() {\n         }).build());\n   }\n \n+  @Test\n+  public void testAllocationManagerRequestedSizeAndGrantedSize1() {\n+    // actual size is different from request size\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(16, MAX_ALLOCATION);\n+    final ArrowBuf arrowBuf = allocator.buffer(1024L);\n+    assertEquals(16L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(16L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(16L, allocator.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(arrowBuf, allocator));\n+  }\n+\n+  @Test\n+  public void testAllocationManagerRequestedSizeAndGrantedSize2() {\n+    // actual size is larger than request size\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1024, MAX_ALLOCATION);\n+    final ArrowBuf arrowBuf = allocator.buffer(16L);\n+    assertEquals(1024L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(1024L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(1024L, allocator.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(arrowBuf, allocator));\n+  }\n+\n+  @Test\n+  public void testAllocationManagerRequestedSizeAndGrantedSize3() {\n+    // actual size is larger than request size, and is beyond allocation limit\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1024, 1023);\n+    assertThrows(OutOfMemoryException.class, () -> {\n+      allocator.buffer(16L); // should throw exception\n+      fail();\n\nReview comment:\n       Done, thanks for catching.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T00:02:36.067+0000",
                    "updated": "2021-09-21T00:02:36.067+0000",
                    "started": "2021-09-21T00:02:36.067+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653293",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/653352",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on a change in pull request #11182:\nURL: https://github.com/apache/arrow/pull/11182#discussion_r712599015\n\n\n\n##########\nFile path: java/memory/memory-core/src/main/java/org/apache/arrow/memory/BaseAllocator.java\n##########\n@@ -272,18 +282,37 @@ public ArrowBuf buffer(final long initialRequestSize, BufferManager manager) {\n     }\n \n     boolean success = false;\n+    final ArrowBuf buffer;\n     try {\n-      ArrowBuf buffer = bufferWithoutReservation(actualRequestSize, manager);\n+      buffer = bufferWithoutReservation(actualRequestSize, manager);\n       success = true;\n-      listener.onAllocation(actualRequestSize);\n-      return buffer;\n     } catch (OutOfMemoryError e) {\n       throw e;\n     } finally {\n       if (!success) {\n         releaseBytes(actualRequestSize);\n       }\n     }\n+\n+    final long grantedSize = buffer.getReferenceManager().getSize();\n+    if (grantedSize != actualRequestSize) {\n+      // reallocate bytes using the actual returned chunk size\n+      long diff = grantedSize - actualRequestSize;\n+      if (diff > 0) {\n+        AllocationOutcome reallocateOutcome = allocateBytes(diff);\n+        if (!reallocateOutcome.isOk()) {\n+          // forcibly allocate for remaining bytes, then release all\n+          forceAllocate(diff);\n+          buffer.close();\n+          throw new OutOfMemoryException(createErrorMsg(this, grantedSize, actualRequestSize,\n+              initialRequestSize), reallocateOutcome.getDetails());\n+        }\n+      } else {\n+        releaseBytes(-diff);\n\nReview comment:\n       This is a great point... Should we consider the case that the return size is constantly set to zero by a customizied AM? I was trying to do something like this to make the allocator yield its local allocation limit to a user-defined global counter. That says, actually, the AM's size in Arrow is only used to account for bytes from allocators.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T02:44:54.708+0000",
                    "updated": "2021-09-21T02:44:54.708+0000",
                    "started": "2021-09-21T02:44:54.708+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653352",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/709963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #11182:\nURL: https://github.com/apache/arrow/pull/11182#issuecomment-1014613271\n\n\n   ping @zhztheplayer @emkornfield \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-17T14:39:03.696+0000",
                    "updated": "2022-01-17T14:39:03.696+0000",
                    "started": "2022-01-17T14:39:03.696+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "709963",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/710224",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on pull request #11182:\nURL: https://github.com/apache/arrow/pull/11182#issuecomment-1015039619\n\n\n   > ping @zhztheplayer @emkornfield\r\n   \r\n   I'address @emkornfield's original suggestion about `#releaseBytes` since I don't need the zero byte allocation feature anymore.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-18T03:26:51.487+0000",
                    "updated": "2022-01-18T03:26:51.487+0000",
                    "started": "2022-01-18T03:26:51.487+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "710224",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/711214",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #11182:\nURL: https://github.com/apache/arrow/pull/11182#issuecomment-1016251891\n\n\n   Assuming that you meant to write \"I'll address\" I'm postponing it to 8.0 :)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-19T09:36:47.744+0000",
                    "updated": "2022-01-19T09:36:47.744+0000",
                    "started": "2022-01-19T09:36:47.744+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "711214",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/711215",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs edited a comment on pull request #11182:\nURL: https://github.com/apache/arrow/pull/11182#issuecomment-1016251891\n\n\n   Assuming that you meant to write \"I'll address\" I'm postponing it to 8.0 release :)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-19T09:37:00.429+0000",
                    "updated": "2022-01-19T09:37:00.429+0000",
                    "started": "2022-01-19T09:37:00.428+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "711215",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/711811",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on pull request #11182:\nURL: https://github.com/apache/arrow/pull/11182#issuecomment-1017027854\n\n\n   Sounds good to me. Thanks Kriszti\u00e1n.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-20T01:29:35.090+0000",
                    "updated": "2022-01-20T01:29:35.090+0000",
                    "started": "2022-01-20T01:29:35.089+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "711811",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/763252",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on PR #11182:\nURL: https://github.com/apache/arrow/pull/11182#issuecomment-1111663468\n\n   Refreshed the PR.\n\n\n",
                    "created": "2022-04-28T02:11:54.617+0000",
                    "updated": "2022-04-28T02:11:54.617+0000",
                    "started": "2022-04-28T02:11:54.617+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "763252",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/766084",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #11182:\nURL: https://github.com/apache/arrow/pull/11182#issuecomment-1117469865\n\n   @lwhite1 Would you like to try and review this PR?\n\n\n",
                    "created": "2022-05-04T15:16:09.253+0000",
                    "updated": "2022-05-04T15:16:09.253+0000",
                    "started": "2022-05-04T15:16:09.253+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "766084",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/770344",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lwhite1 commented on code in PR #11182:\nURL: https://github.com/apache/arrow/pull/11182#discussion_r872737943\n\n\n##########\njava/memory/memory-netty/src/test/java/org/apache/arrow/memory/TestBaseAllocator.java:\n##########\n@@ -438,6 +441,94 @@ public ArrowBuf empty() {\n         }).build());\n   }\n \n+  @Test\n+  public void testLargerGrantedSize() {\n+    // actual size is larger than request size\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1024, MAX_ALLOCATION);\n+    final ArrowBuf arrowBuf = allocator.buffer(16L);\n+    assertEquals(1024L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(1024L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(1024L, allocator.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(arrowBuf, allocator));\n+  }\n+\n+  @Test\n+  public void testLargerGrantedSizeOverLimit() {\n+    // actual size is larger than request size, and is beyond allocation limit\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1024, 1023);\n+    assertThrows(OutOfMemoryException.class, () -> {\n+      allocator.buffer(16L); // should throw exception\n+    });\n+    assertEquals(0L, allocator.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(allocator));\n+  }\n+\n+  @Test\n+  public void testDifferentGrantedSizeTransfer() {\n+    // actual size is different from request size, then transfer balance.\n+    final BaseAllocator root = createAllocatorWithFixedSizeAllocationManager(1024, MAX_ALLOCATION);\n+    final BufferAllocator c1 = root.newChildAllocator(\"child1\", 0, MAX_ALLOCATION);\n+    final BufferAllocator c2 = root.newChildAllocator(\"child2\", 0, MAX_ALLOCATION);\n+    final ArrowBuf arrowBuf = c1.buffer(16L);\n+    assertEquals(1024L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(1024L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(1024L, c1.getAllocatedMemory());\n+    assertEquals(1024L, root.getAllocatedMemory());\n+    OwnershipTransferResult r = arrowBuf.getReferenceManager().transferOwnership(arrowBuf, c2);\n+    assertTrue(r.getAllocationFit());\n+    final ArrowBuf transferredBuffer = r.getTransferredBuffer();\n+    assertEquals(1024L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(0L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(0L, c1.getAllocatedMemory());\n+    assertEquals(1024L, c2.getAllocatedMemory());\n+    assertEquals(1024L, root.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(arrowBuf, transferredBuffer, c1, c2, root));\n+  }\n+\n+  @Test\n+  public void testSmallerGrantedSize() {\n+    // actual size is larger than request size\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1, MAX_ALLOCATION);\n+    assertThrows(UnsupportedOperationException.class, () -> allocator.buffer(16L));\n\nReview Comment:\n   Since the error is caused by a request for an amount of memory that is larger than the allocated buffer, it might be more appropriate to throw IllegalOperationException than UnsupportedOperation, which indicates that the requested operation is never legal, as when adding an object to an ImmutableList. \n\n\n\n",
                    "created": "2022-05-13T19:54:44.093+0000",
                    "updated": "2022-05-13T19:54:44.093+0000",
                    "started": "2022-05-13T19:54:44.092+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "770344",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/775332",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on code in PR #11182:\nURL: https://github.com/apache/arrow/pull/11182#discussion_r883232645\n\n\n##########\njava/memory/memory-netty/src/test/java/org/apache/arrow/memory/TestBaseAllocator.java:\n##########\n@@ -438,6 +441,94 @@ public ArrowBuf empty() {\n         }).build());\n   }\n \n+  @Test\n+  public void testLargerGrantedSize() {\n+    // actual size is larger than request size\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1024, MAX_ALLOCATION);\n+    final ArrowBuf arrowBuf = allocator.buffer(16L);\n+    assertEquals(1024L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(1024L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(1024L, allocator.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(arrowBuf, allocator));\n+  }\n+\n+  @Test\n+  public void testLargerGrantedSizeOverLimit() {\n+    // actual size is larger than request size, and is beyond allocation limit\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1024, 1023);\n+    assertThrows(OutOfMemoryException.class, () -> {\n+      allocator.buffer(16L); // should throw exception\n+    });\n+    assertEquals(0L, allocator.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(allocator));\n+  }\n+\n+  @Test\n+  public void testDifferentGrantedSizeTransfer() {\n+    // actual size is different from request size, then transfer balance.\n+    final BaseAllocator root = createAllocatorWithFixedSizeAllocationManager(1024, MAX_ALLOCATION);\n+    final BufferAllocator c1 = root.newChildAllocator(\"child1\", 0, MAX_ALLOCATION);\n+    final BufferAllocator c2 = root.newChildAllocator(\"child2\", 0, MAX_ALLOCATION);\n+    final ArrowBuf arrowBuf = c1.buffer(16L);\n+    assertEquals(1024L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(1024L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(1024L, c1.getAllocatedMemory());\n+    assertEquals(1024L, root.getAllocatedMemory());\n+    OwnershipTransferResult r = arrowBuf.getReferenceManager().transferOwnership(arrowBuf, c2);\n+    assertTrue(r.getAllocationFit());\n+    final ArrowBuf transferredBuffer = r.getTransferredBuffer();\n+    assertEquals(1024L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(0L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(0L, c1.getAllocatedMemory());\n+    assertEquals(1024L, c2.getAllocatedMemory());\n+    assertEquals(1024L, root.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(arrowBuf, transferredBuffer, c1, c2, root));\n+  }\n+\n+  @Test\n+  public void testSmallerGrantedSize() {\n+    // actual size is larger than request size\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1, MAX_ALLOCATION);\n+    assertThrows(UnsupportedOperationException.class, () -> allocator.buffer(16L));\n\nReview Comment:\n   The comment `// actual size is larger than request size` was wrong here. I've corrected it.\r\n   \r\n   Java doesn't seem to provide a built-in `IllegalOperationException` definition. Would you think it is worth to create one?\n\n\n\n",
                    "created": "2022-05-27T02:56:49.340+0000",
                    "updated": "2022-05-27T02:56:49.340+0000",
                    "started": "2022-05-27T02:56:49.340+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "775332",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/776893",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lwhite1 commented on code in PR #11182:\nURL: https://github.com/apache/arrow/pull/11182#discussion_r886868265\n\n\n##########\njava/memory/memory-netty/src/test/java/org/apache/arrow/memory/TestBaseAllocator.java:\n##########\n@@ -438,6 +441,94 @@ public ArrowBuf empty() {\n         }).build());\n   }\n \n+  @Test\n+  public void testLargerGrantedSize() {\n+    // actual size is larger than request size\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1024, MAX_ALLOCATION);\n+    final ArrowBuf arrowBuf = allocator.buffer(16L);\n+    assertEquals(1024L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(1024L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(1024L, allocator.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(arrowBuf, allocator));\n+  }\n+\n+  @Test\n+  public void testLargerGrantedSizeOverLimit() {\n+    // actual size is larger than request size, and is beyond allocation limit\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1024, 1023);\n+    assertThrows(OutOfMemoryException.class, () -> {\n+      allocator.buffer(16L); // should throw exception\n+    });\n+    assertEquals(0L, allocator.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(allocator));\n+  }\n+\n+  @Test\n+  public void testDifferentGrantedSizeTransfer() {\n+    // actual size is different from request size, then transfer balance.\n+    final BaseAllocator root = createAllocatorWithFixedSizeAllocationManager(1024, MAX_ALLOCATION);\n+    final BufferAllocator c1 = root.newChildAllocator(\"child1\", 0, MAX_ALLOCATION);\n+    final BufferAllocator c2 = root.newChildAllocator(\"child2\", 0, MAX_ALLOCATION);\n+    final ArrowBuf arrowBuf = c1.buffer(16L);\n+    assertEquals(1024L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(1024L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(1024L, c1.getAllocatedMemory());\n+    assertEquals(1024L, root.getAllocatedMemory());\n+    OwnershipTransferResult r = arrowBuf.getReferenceManager().transferOwnership(arrowBuf, c2);\n+    assertTrue(r.getAllocationFit());\n+    final ArrowBuf transferredBuffer = r.getTransferredBuffer();\n+    assertEquals(1024L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(0L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(0L, c1.getAllocatedMemory());\n+    assertEquals(1024L, c2.getAllocatedMemory());\n+    assertEquals(1024L, root.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(arrowBuf, transferredBuffer, c1, c2, root));\n+  }\n+\n+  @Test\n+  public void testSmallerGrantedSize() {\n+    // actual size is larger than request size\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1, MAX_ALLOCATION);\n+    assertThrows(UnsupportedOperationException.class, () -> allocator.buffer(16L));\n\nReview Comment:\n   > Java doesn't seem to provide a built-in `IllegalOperationException` definition. Would you think it is worth to create one?\r\n   \r\n   My bad, IllegalStateException was what I was thinking of. https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html. \r\n   \n\n\n\n",
                    "created": "2022-06-01T14:21:19.480+0000",
                    "updated": "2022-06-01T14:21:19.480+0000",
                    "started": "2022-06-01T14:21:19.480+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "776893",
                    "issueId": "13401996"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/worklog/777250",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on code in PR #11182:\nURL: https://github.com/apache/arrow/pull/11182#discussion_r887444632\n\n\n##########\njava/memory/memory-netty/src/test/java/org/apache/arrow/memory/TestBaseAllocator.java:\n##########\n@@ -438,6 +441,94 @@ public ArrowBuf empty() {\n         }).build());\n   }\n \n+  @Test\n+  public void testLargerGrantedSize() {\n+    // actual size is larger than request size\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1024, MAX_ALLOCATION);\n+    final ArrowBuf arrowBuf = allocator.buffer(16L);\n+    assertEquals(1024L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(1024L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(1024L, allocator.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(arrowBuf, allocator));\n+  }\n+\n+  @Test\n+  public void testLargerGrantedSizeOverLimit() {\n+    // actual size is larger than request size, and is beyond allocation limit\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1024, 1023);\n+    assertThrows(OutOfMemoryException.class, () -> {\n+      allocator.buffer(16L); // should throw exception\n+    });\n+    assertEquals(0L, allocator.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(allocator));\n+  }\n+\n+  @Test\n+  public void testDifferentGrantedSizeTransfer() {\n+    // actual size is different from request size, then transfer balance.\n+    final BaseAllocator root = createAllocatorWithFixedSizeAllocationManager(1024, MAX_ALLOCATION);\n+    final BufferAllocator c1 = root.newChildAllocator(\"child1\", 0, MAX_ALLOCATION);\n+    final BufferAllocator c2 = root.newChildAllocator(\"child2\", 0, MAX_ALLOCATION);\n+    final ArrowBuf arrowBuf = c1.buffer(16L);\n+    assertEquals(1024L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(1024L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(1024L, c1.getAllocatedMemory());\n+    assertEquals(1024L, root.getAllocatedMemory());\n+    OwnershipTransferResult r = arrowBuf.getReferenceManager().transferOwnership(arrowBuf, c2);\n+    assertTrue(r.getAllocationFit());\n+    final ArrowBuf transferredBuffer = r.getTransferredBuffer();\n+    assertEquals(1024L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(0L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(0L, c1.getAllocatedMemory());\n+    assertEquals(1024L, c2.getAllocatedMemory());\n+    assertEquals(1024L, root.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(arrowBuf, transferredBuffer, c1, c2, root));\n+  }\n+\n+  @Test\n+  public void testSmallerGrantedSize() {\n+    // actual size is larger than request size\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1, MAX_ALLOCATION);\n+    assertThrows(UnsupportedOperationException.class, () -> allocator.buffer(16L));\n\nReview Comment:\n   done\n\n\n\n##########\njava/memory/memory-netty/src/test/java/org/apache/arrow/memory/TestBaseAllocator.java:\n##########\n@@ -438,6 +441,94 @@ public ArrowBuf empty() {\n         }).build());\n   }\n \n+  @Test\n+  public void testLargerGrantedSize() {\n+    // actual size is larger than request size\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1024, MAX_ALLOCATION);\n+    final ArrowBuf arrowBuf = allocator.buffer(16L);\n+    assertEquals(1024L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(1024L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(1024L, allocator.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(arrowBuf, allocator));\n+  }\n+\n+  @Test\n+  public void testLargerGrantedSizeOverLimit() {\n+    // actual size is larger than request size, and is beyond allocation limit\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1024, 1023);\n+    assertThrows(OutOfMemoryException.class, () -> {\n+      allocator.buffer(16L); // should throw exception\n+    });\n+    assertEquals(0L, allocator.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(allocator));\n+  }\n+\n+  @Test\n+  public void testDifferentGrantedSizeTransfer() {\n+    // actual size is different from request size, then transfer balance.\n+    final BaseAllocator root = createAllocatorWithFixedSizeAllocationManager(1024, MAX_ALLOCATION);\n+    final BufferAllocator c1 = root.newChildAllocator(\"child1\", 0, MAX_ALLOCATION);\n+    final BufferAllocator c2 = root.newChildAllocator(\"child2\", 0, MAX_ALLOCATION);\n+    final ArrowBuf arrowBuf = c1.buffer(16L);\n+    assertEquals(1024L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(1024L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(1024L, c1.getAllocatedMemory());\n+    assertEquals(1024L, root.getAllocatedMemory());\n+    OwnershipTransferResult r = arrowBuf.getReferenceManager().transferOwnership(arrowBuf, c2);\n+    assertTrue(r.getAllocationFit());\n+    final ArrowBuf transferredBuffer = r.getTransferredBuffer();\n+    assertEquals(1024L, arrowBuf.getPossibleMemoryConsumed());\n+    assertEquals(0L, arrowBuf.getActualMemoryConsumed());\n+    assertEquals(0L, c1.getAllocatedMemory());\n+    assertEquals(1024L, c2.getAllocatedMemory());\n+    assertEquals(1024L, root.getAllocatedMemory());\n+    assertDoesNotThrow(() -> AutoCloseables.close(arrowBuf, transferredBuffer, c1, c2, root));\n+  }\n+\n+  @Test\n+  public void testSmallerGrantedSize() {\n+    // actual size is larger than request size\n+    final BaseAllocator allocator = createAllocatorWithFixedSizeAllocationManager(1, MAX_ALLOCATION);\n+    assertThrows(UnsupportedOperationException.class, () -> allocator.buffer(16L));\n\nReview Comment:\n   done, thanks\n\n\n\n",
                    "created": "2022-06-02T02:28:22.429+0000",
                    "updated": "2022-06-02T02:28:22.429+0000",
                    "started": "2022-06-02T02:28:22.429+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "777250",
                    "issueId": "13401996"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3f7cb8d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@157ca0c2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@47758454[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@37ff56c8[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b827b38[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1d9e2d4d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@76a24d8e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3b260c84[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5395eb63[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3f0d4019[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b27a44b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@506ec187[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Oct 13 21:40:19 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14034/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-09-18T10:05:42.000+0000",
        "updated": "2022-10-20T05:00:03.000+0000",
        "timeoriginalestimate": null,
        "description": "If a buffer with altered AllocationManager size (which means, the size is different from request size) is created from a Allocator, then allocator still adds the request size rather than the altered size to its accountant. As a result inconsistency will be made once the buffer is getting destroyed because at that time the actual buffer size is used for releasing.\r\n\r\nThe predefined AllocationManager implementations don't make such inconsistencies since they always grant chunks within the request size. However we have [documented|https://github.com/apache/arrow/blob/e5f3e04b4b80c9b9c53f1f0f71f39d9f8308dced/java/memory/memory-core/src/main/java/org/apache/arrow/memory/AllocationManager.java#L184-L191] that the actual size can be altered from request size in custom implementations of AllocationManager. So this kind of customization should be supported.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Unexpected Allocator states created after allocating buffer whose AllocationManager has different size from the requested size",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401996/comment/17428512",
                    "id": "17428512",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "[~emkornfield] Postponing it to 7.0, feel free to put back if the patch can be merged.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2021-10-13T21:40:19.933+0000",
                    "updated": "2021-10-13T21:40:19.933+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0v2b4:",
        "customfield_12314139": null
    }
}