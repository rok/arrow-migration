{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13327733",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327733",
    "key": "ARROW-10019",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10019/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 11,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327733/worklog/484771",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8199:\nURL: https://github.com/apache/arrow/pull/8199#issuecomment-692986812\n\n\n   https://issues.apache.org/jira/browse/ARROW-10019\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-15T21:22:25.509+0000",
                    "updated": "2020-09-15T21:22:25.509+0000",
                    "started": "2020-09-15T21:22:25.509+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "484771",
                    "issueId": "13327733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327733/worklog/485117",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on a change in pull request #8199:\nURL: https://github.com/apache/arrow/pull/8199#discussion_r489406369\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/substring.rs\n##########\n@@ -0,0 +1,226 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Defines kernel to extract a substring of a StringArray\n+\n+use crate::{array::*, buffer::Buffer, datatypes::ToByteSlice};\n+use crate::{\n+    datatypes::DataType,\n+    error::{ArrowError, Result},\n+};\n+use std::sync::Arc;\n+\n+/// Returns an ArrayRef with a substring starting from `start` and with optional length `length` of each of the elements in `array`.\n+/// `start` can be negative, in which case the start counts from the end of the string.\n+pub fn substring(array: &Array, start: i32, length: &Option<u32>) -> Result<ArrayRef> {\n+    match array.data_type() {\n+        DataType::Utf8 => {\n+            // compute current offsets\n+            let offsets = array.data_ref().clone().buffers()[0].clone();\n+            let offsets: &[u32] = unsafe { offsets.typed_data::<u32>() };\n+\n+            // compute null bitmap (copy)\n+            let null_bit_buffer = array.data_ref().null_buffer().map(|e| e.clone());\n+\n+            // compute values\n+            let values = &array.data_ref().buffers()[1];\n+            let data = values.data();\n+\n+            let mut new_values = Vec::new(); // we have no way to estimate how much this will be.\n\nReview comment:\n       I think we can estimate the capacity as `length * array.len()` if the length is specified and `values.len() - (start*array.len())` otherwise.\r\n   \r\n   Hm, actually depends on the semantics of the `length` parameter, is it supposed to be a maximum length or should it be an error if `start+length` goes out of bounds of one entry?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-16T12:43:54.253+0000",
                    "updated": "2020-09-16T12:43:54.253+0000",
                    "started": "2020-09-16T12:43:54.253+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "485117",
                    "issueId": "13327733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327733/worklog/485222",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8199:\nURL: https://github.com/apache/arrow/pull/8199#discussion_r489554226\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/substring.rs\n##########\n@@ -0,0 +1,226 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Defines kernel to extract a substring of a StringArray\n+\n+use crate::{array::*, buffer::Buffer, datatypes::ToByteSlice};\n+use crate::{\n+    datatypes::DataType,\n+    error::{ArrowError, Result},\n+};\n+use std::sync::Arc;\n+\n+/// Returns an ArrayRef with a substring starting from `start` and with optional length `length` of each of the elements in `array`.\n+/// `start` can be negative, in which case the start counts from the end of the string.\n+pub fn substring(array: &Array, start: i32, length: &Option<u32>) -> Result<ArrayRef> {\n+    match array.data_type() {\n+        DataType::Utf8 => {\n+            // compute current offsets\n+            let offsets = array.data_ref().clone().buffers()[0].clone();\n+            let offsets: &[u32] = unsafe { offsets.typed_data::<u32>() };\n+\n+            // compute null bitmap (copy)\n+            let null_bit_buffer = array.data_ref().null_buffer().map(|e| e.clone());\n+\n+            // compute values\n+            let values = &array.data_ref().buffers()[1];\n+            let data = values.data();\n+\n+            let mut new_values = Vec::new(); // we have no way to estimate how much this will be.\n\nReview comment:\n       I think that this all depends on what assumptions we make about a typical query. Specifically:\r\n   \r\n   * what is the average start\r\n   * what is the average length\r\n   * what is the average string size\r\n   \r\n   from these 3, we could compute an initial estimation. For example: is this going to be used to treat texts, on which \"string size\" can go to Mbs, or is this going to be used on 10-12 character arrays?\r\n   \r\n   I considered this discussion beyond the scope of this PR and just went with the least memory-intensive/highest CPU-intensive approach, just because 100% memory usage usually has more nefarious implications than 100% CPU.\r\n   \r\n   The semantics is so that it does not error: it just goes to the maximum/minimum available for each entry. The rational here is that otherwise the user would have to perform some calculation on the side to ensure no errors at runtime, which are never fun. :)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-16T16:05:09.781+0000",
                    "updated": "2020-09-16T16:05:09.781+0000",
                    "started": "2020-09-16T16:05:09.780+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "485222",
                    "issueId": "13327733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327733/worklog/486658",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8199:\nURL: https://github.com/apache/arrow/pull/8199#discussion_r491702713\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/substring.rs\n##########\n@@ -0,0 +1,226 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Defines kernel to extract a substring of a StringArray\n+\n+use crate::{array::*, buffer::Buffer, datatypes::ToByteSlice};\n+use crate::{\n+    datatypes::DataType,\n+    error::{ArrowError, Result},\n+};\n+use std::sync::Arc;\n+\n+/// Returns an ArrayRef with a substring starting from `start` and with optional length `length` of each of the elements in `array`.\n+/// `start` can be negative, in which case the start counts from the end of the string.\n+pub fn substring(array: &Array, start: i32, length: &Option<u32>) -> Result<ArrayRef> {\n+    match array.data_type() {\n+        DataType::Utf8 => {\n+            // compute current offsets\n+            let offsets = array.data_ref().clone().buffers()[0].clone();\n+            let offsets: &[u32] = unsafe { offsets.typed_data::<u32>() };\n+\n+            // compute null bitmap (copy)\n+            let null_bit_buffer = array.data_ref().null_buffer().map(|e| e.clone());\n+\n+            // compute values\n+            let values = &array.data_ref().buffers()[1];\n+            let data = values.data();\n+\n+            let mut new_values = Vec::new(); // we have no way to estimate how much this will be.\n+            let mut new_offsets = Vec::with_capacity(array.len() + 1);\n+\n+            let mut length_so_far = 0i32;\n+            new_offsets.push(length_so_far);\n+            (0..array.len()).for_each(|i| {\n+                // the length of this entry\n+                let lenght_i = offsets[i + 1] - offsets[i];\n+                // compute where we should start slicing this entry\n+                let start = offsets[i] as i32\n+                    + if start >= 0 {\n+                        start\n+                    } else {\n+                        lenght_i as i32 + start\n+                    };\n+\n+                let start =\n+                    start.max(offsets[i] as i32).min(offsets[i + 1] as i32) as usize;\n+                // compute the lenght of the slice\n+                let length = length\n+                    .unwrap_or(lenght_i)\n+                    // .max(0) is not needed as it is guaranteed\n+                    .min(offsets[i + 1] - start as u32) // so we do not go beyond this entry\n+                    as i32;\n+\n+                length_so_far += length;\n+\n+                new_offsets.push(length_so_far);\n+                new_values.extend_from_slice(&data[start..start + length as usize]);\n+            });\n+\n+            let data = ArrayData::new(\n+                DataType::Utf8,\n+                array.len(),\n+                None,\n+                null_bit_buffer,\n+                0,\n+                vec![\n+                    Buffer::from(new_offsets.to_byte_slice()),\n+                    Buffer::from(&new_values[..]),\n+                ],\n+                vec![],\n+            );\n+            Ok(Arc::new(StringArray::from(Arc::new(data))))\n+        }\n+        _ => Err(ArrowError::ComputeError(format!(\n\nReview comment:\n       We should also support `DataType::LargeUtf8`. We're likely to get a scenario where Arrow users who deal with large data would want to use the `LargeList` and `LargeString` arrays by default (something I would also do), so it's ideal to support both string arrays from the onset going forward.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-20T15:34:58.844+0000",
                    "updated": "2020-09-20T15:34:58.844+0000",
                    "started": "2020-09-20T15:34:58.844+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "486658",
                    "issueId": "13327733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327733/worklog/487798",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8199:\nURL: https://github.com/apache/arrow/pull/8199#discussion_r491702713\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/substring.rs\n##########\n@@ -0,0 +1,226 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Defines kernel to extract a substring of a StringArray\n+\n+use crate::{array::*, buffer::Buffer, datatypes::ToByteSlice};\n+use crate::{\n+    datatypes::DataType,\n+    error::{ArrowError, Result},\n+};\n+use std::sync::Arc;\n+\n+/// Returns an ArrayRef with a substring starting from `start` and with optional length `length` of each of the elements in `array`.\n+/// `start` can be negative, in which case the start counts from the end of the string.\n+pub fn substring(array: &Array, start: i32, length: &Option<u32>) -> Result<ArrayRef> {\n+    match array.data_type() {\n+        DataType::Utf8 => {\n+            // compute current offsets\n+            let offsets = array.data_ref().clone().buffers()[0].clone();\n+            let offsets: &[u32] = unsafe { offsets.typed_data::<u32>() };\n+\n+            // compute null bitmap (copy)\n+            let null_bit_buffer = array.data_ref().null_buffer().map(|e| e.clone());\n+\n+            // compute values\n+            let values = &array.data_ref().buffers()[1];\n+            let data = values.data();\n+\n+            let mut new_values = Vec::new(); // we have no way to estimate how much this will be.\n+            let mut new_offsets = Vec::with_capacity(array.len() + 1);\n+\n+            let mut length_so_far = 0i32;\n+            new_offsets.push(length_so_far);\n+            (0..array.len()).for_each(|i| {\n+                // the length of this entry\n+                let lenght_i = offsets[i + 1] - offsets[i];\n+                // compute where we should start slicing this entry\n+                let start = offsets[i] as i32\n+                    + if start >= 0 {\n+                        start\n+                    } else {\n+                        lenght_i as i32 + start\n+                    };\n+\n+                let start =\n+                    start.max(offsets[i] as i32).min(offsets[i + 1] as i32) as usize;\n+                // compute the lenght of the slice\n+                let length = length\n+                    .unwrap_or(lenght_i)\n+                    // .max(0) is not needed as it is guaranteed\n+                    .min(offsets[i + 1] - start as u32) // so we do not go beyond this entry\n+                    as i32;\n+\n+                length_so_far += length;\n+\n+                new_offsets.push(length_so_far);\n+                new_values.extend_from_slice(&data[start..start + length as usize]);\n+            });\n+\n+            let data = ArrayData::new(\n+                DataType::Utf8,\n+                array.len(),\n+                None,\n+                null_bit_buffer,\n+                0,\n+                vec![\n+                    Buffer::from(new_offsets.to_byte_slice()),\n+                    Buffer::from(&new_values[..]),\n+                ],\n+                vec![],\n+            );\n+            Ok(Arc::new(StringArray::from(Arc::new(data))))\n+        }\n+        _ => Err(ArrowError::ComputeError(format!(\n\nReview comment:\n       We should also support `DataType::LargeUtf8`. We're likely to get a scenario where Arrow users who deal with large data would want to use the `LargeList` and `LargeString` arrays by default (something I would also do), so it's ideal to support both string arrays from the onset going forward.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-22T03:36:45.223+0000",
                    "updated": "2020-09-22T03:36:45.223+0000",
                    "started": "2020-09-22T03:36:45.223+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "487798",
                    "issueId": "13327733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327733/worklog/491321",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8199:\nURL: https://github.com/apache/arrow/pull/8199#discussion_r495116844\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/substring.rs\n##########\n@@ -0,0 +1,262 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Defines kernel to extract a substring of a StringArray\n+\n+use num::Zero;\n+use std::convert::TryInto;\n+\n+use crate::{array::*, buffer::Buffer, datatypes::ToByteSlice};\n+use crate::{\n+    datatypes::DataType,\n+    error::{ArrowError, Result},\n+};\n+use std::sync::Arc;\n+\n+macro_rules! substring {\n\nReview comment:\n       @jorgecarleitao it might be possible to write this as a generic after the refactoring that you did for strings and lists. Do you want to try that? If so, I'll keep this PR open\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-25T16:59:52.841+0000",
                    "updated": "2020-09-25T16:59:52.841+0000",
                    "started": "2020-09-25T16:59:52.840+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "491321",
                    "issueId": "13327733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327733/worklog/491511",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8199:\nURL: https://github.com/apache/arrow/pull/8199#discussion_r495409403\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/substring.rs\n##########\n@@ -0,0 +1,262 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Defines kernel to extract a substring of a StringArray\n+\n+use num::Zero;\n+use std::convert::TryInto;\n+\n+use crate::{array::*, buffer::Buffer, datatypes::ToByteSlice};\n+use crate::{\n+    datatypes::DataType,\n+    error::{ArrowError, Result},\n+};\n+use std::sync::Arc;\n+\n+macro_rules! substring {\n\nReview comment:\n       done :)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-26T03:37:28.375+0000",
                    "updated": "2020-09-26T03:37:28.375+0000",
                    "started": "2020-09-26T03:37:28.375+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "491511",
                    "issueId": "13327733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327733/worklog/491556",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #8199:\nURL: https://github.com/apache/arrow/pull/8199#issuecomment-699469333\n\n\n   Just checked out the PR and ran a clippy check. The PR and a few others before have introduced a few warnings and errors.\r\n   I find clearing lints helps me learn interesting shortcuts along the line, @jorgecarleitao do you mind checking the lints and clearing them (even those beyond the scope of this PR if you'd like)?\r\n   \r\n   The most interesting for me was learning that to clone an optional reference (`let some_struct_ref = Option<&MyStruct>`), you can use `let some_struct: Option<MyStruct> = some_struct_ref.cloned()` instead of `some_struct_ref.map(|s| s.clone())`.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-26T09:32:21.252+0000",
                    "updated": "2020-09-26T09:32:21.252+0000",
                    "started": "2020-09-26T09:32:21.251+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "491556",
                    "issueId": "13327733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327733/worklog/491557",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me edited a comment on pull request #8199:\nURL: https://github.com/apache/arrow/pull/8199#issuecomment-699469333\n\n\n   Apologies for the back & forth.\r\n   Just checked out the PR and ran a clippy check. The PR and a few others before have introduced a few warnings and errors.\r\n   I find clearing lints helps me learn interesting shortcuts along the line, @jorgecarleitao do you mind checking the lints and clearing them (even those beyond the scope of this PR if you'd like)?\r\n   \r\n   The most interesting for me was learning that to clone an optional reference (`let some_struct_ref = Option<&MyStruct>`), you can use `let some_struct: Option<MyStruct> = some_struct_ref.cloned()` instead of `some_struct_ref.map(|s| s.clone())`.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-26T09:32:55.421+0000",
                    "updated": "2020-09-26T09:32:55.421+0000",
                    "started": "2020-09-26T09:32:55.421+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "491557",
                    "issueId": "13327733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327733/worklog/491749",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #8199:\nURL: https://github.com/apache/arrow/pull/8199#issuecomment-699684954\n\n\n   @nevi-me , no problem, clippy is important. I fixed the ones that `cargo clippy` showed as a separate (last) commit in this PR.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-27T20:34:23.996+0000",
                    "updated": "2020-09-27T20:34:23.996+0000",
                    "started": "2020-09-27T20:34:23.996+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "491749",
                    "issueId": "13327733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327733/worklog/491764",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me closed pull request #8199:\nURL: https://github.com/apache/arrow/pull/8199\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-27T21:29:16.299+0000",
                    "updated": "2020-09-27T21:29:16.299+0000",
                    "started": "2020-09-27T21:29:16.299+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "491764",
                    "issueId": "13327733"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@41221745[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f9e4117[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@60c9e199[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7d42826e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@29c53717[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1a70ec34[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@359a03ca[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5ca2a6e5[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c5f5fe9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@41d3191a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@24b2c6b9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6d6ec944[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Sep 27 21:29:07 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-09-27T21:29:07.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10019/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-09-15T20:59:56.000+0000",
        "updated": "2020-09-27T21:29:17.000+0000",
        "timeoriginalestimate": null,
        "description": "substring returns a substring of a StringArray starting at a given index, and with a given optional length.\r\n\r\n{{fn substring(array: &Array, start: i32, length: &Option<u32>) -> Result<ArrayRef>}}\r\n\r\nThis operation is common in strings, and it is useful for string-based transformations",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Add substring kernel",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327733/comment/17202928",
                    "id": "17202928",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "Issue resolved by pull request 8199\n[https://github.com/apache/arrow/pull/8199]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2020-09-27T21:29:07.074+0000",
                    "updated": "2020-09-27T21:29:07.074+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0imqg:",
        "customfield_12314139": null
    }
}