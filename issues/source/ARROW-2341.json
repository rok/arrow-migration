{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13147164",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13147164",
    "key": "ARROW-2341",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2341/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4936cbbd[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@731d02f9[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f709108[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@64615ed5[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b86e53a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3d88c759[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@468be931[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@287290c3[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4711fc2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7fb8a21a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@66e30ebd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5a2b6e2a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Mar 22 17:49:25 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-03-22T17:49:19.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2341/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-03-22T14:30:24.000+0000",
        "updated": "2018-03-22T17:49:25.000+0000",
        "timeoriginalestimate": null,
        "description": "{code:python}\r\n>>> pa.union([pa.field('x', pa.int16())], 'sparse')\r\nUnionType(union[dense]<x: int16=0>)\r\n>>> pa.union([pa.field('x', pa.int16())], 'dense')\r\nUnionType(union[dense]<x: int16=0>)\r\n>>> pa.union([pa.field('x', pa.int16())], 42)\r\nUnionType(union[dense]<x: int16=0>)\r\n{code}\r\n\r\nI would suggest allowing \"sparse\" and \"dense\" strings as aliases to the internal enum values, and disallowing everything else.",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] pa.union() mode argument unintuitive",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13147164/comment/16409678",
                    "id": "16409678",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou opened a new pull request #1778: ARROW-2341: [Python] Improve pa.union() mode argument behaviour\nURL: https://github.com/apache/arrow/pull/1778\n \n \n   Also:\r\n   - make UnionType.mode return a string ('sparse' or 'dense')\r\n   - make UnionType indexing return fields, not types (like StructType)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-22T15:03:51.354+0000",
                    "updated": "2018-03-22T15:03:51.354+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13147164/comment/16409971",
                    "id": "16409971",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1778\n[https://github.com/apache/arrow/pull/1778]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-03-22T17:49:19.845+0000",
                    "updated": "2018-03-22T17:49:19.845+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13147164/comment/16409972",
                    "id": "16409972",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1778: ARROW-2341: [Python] Improve pa.union() mode argument behaviour\nURL: https://github.com/apache/arrow/pull/1778\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/lib.pxd b/python/pyarrow/lib.pxd\nindex e4d574f18..be103b354 100644\n--- a/python/pyarrow/lib.pxd\n+++ b/python/pyarrow/lib.pxd\n@@ -56,11 +56,6 @@ cdef class DictionaryType(DataType):\n         const CDictionaryType* dict_type\n \n \n-cdef class UnionType(DataType):\n-    cdef:\n-        list child_types\n-\n-\n cdef class TimestampType(DataType):\n     cdef:\n         const CTimestampType* ts_type\ndiff --git a/python/pyarrow/scalar.pxi b/python/pyarrow/scalar.pxi\nindex 2692ace40..a0f8480db 100644\n--- a/python/pyarrow/scalar.pxi\n+++ b/python/pyarrow/scalar.pxi\n@@ -334,9 +334,9 @@ cdef class UnionValue(ArrayValue):\n         cdef int8_t type_id = self.ap.raw_type_ids()[i]\n         cdef shared_ptr[CArray] child = self.ap.child(type_id)\n         if self.ap.mode() == _UnionMode_SPARSE:\n-            return box_scalar(self.type[type_id], child, i)\n+            return box_scalar(self.type[type_id].type, child, i)\n         else:\n-            return box_scalar(self.type[type_id], child,\n+            return box_scalar(self.type[type_id].type, child,\n                               self.ap.value_offset(i))\n \n     def as_py(self):\ndiff --git a/python/pyarrow/tests/test_types.py b/python/pyarrow/tests/test_types.py\nindex ad683e9a2..6459496f6 100644\n--- a/python/pyarrow/tests/test_types.py\n+++ b/python/pyarrow/tests/test_types.py\n@@ -88,10 +88,11 @@ def test_is_nested_or_struct():\n \n \n def test_is_union():\n-    assert types.is_union(pa.union([pa.field('a', pa.int32()),\n-                                    pa.field('b', pa.int8()),\n-                                    pa.field('c', pa.string())],\n-                                   pa.lib.UnionMode_SPARSE))\n+    for mode in [pa.lib.UnionMode_SPARSE, pa.lib.UnionMode_DENSE]:\n+        assert types.is_union(pa.union([pa.field('a', pa.int32()),\n+                                        pa.field('b', pa.int8()),\n+                                        pa.field('c', pa.string())],\n+                                       mode=mode))\n     assert not types.is_union(pa.list_(pa.int32()))\n \n \n@@ -141,6 +142,26 @@ def test_timestamp_type():\n     assert isinstance(pa.timestamp('ns'), pa.TimestampType)\n \n \n+def test_union_type():\n+    def check_fields(ty, fields):\n+        assert ty.num_children == len(fields)\n+        assert [ty[i] for i in range(ty.num_children)] == fields\n+\n+    fields = [pa.field('x', pa.list_(pa.int32())),\n+              pa.field('y', pa.binary())]\n+    for mode in ('sparse', pa.lib.UnionMode_SPARSE):\n+        ty = pa.union(fields, mode=mode)\n+        assert ty.mode == 'sparse'\n+        check_fields(ty, fields)\n+    for mode in ('dense', pa.lib.UnionMode_DENSE):\n+        ty = pa.union(fields, mode=mode)\n+        assert ty.mode == 'dense'\n+        check_fields(ty, fields)\n+    for mode in ('unknown', 2):\n+        with pytest.raises(ValueError, match='Invalid union mode'):\n+            pa.union(fields, mode=mode)\n+\n+\n def test_types_hashable():\n     types = [\n         pa.null(),\ndiff --git a/python/pyarrow/types.pxi b/python/pyarrow/types.pxi\nindex 5f962901c..129485008 100644\n--- a/python/pyarrow/types.pxi\n+++ b/python/pyarrow/types.pxi\n@@ -189,9 +189,6 @@ cdef class UnionType(DataType):\n \n     cdef void init(self, const shared_ptr[CDataType]& type):\n         DataType.init(self, type)\n-        self.child_types = [\n-            pyarrow_wrap_data_type(type.get().child(i).get().type())\n-            for i in range(self.num_children)]\n \n     property num_children:\n \n@@ -202,20 +199,25 @@ cdef class UnionType(DataType):\n \n         def __get__(self):\n             cdef CUnionType* type = <CUnionType*> self.sp_type.get()\n-            return type.mode()\n+            cdef int mode = type.mode()\n+            if mode == _UnionMode_DENSE:\n+                return 'dense'\n+            if mode == _UnionMode_SPARSE:\n+                return 'sparse'\n+            assert 0\n \n     def __getitem__(self, i):\n-        return self.child_types[i]\n+        return pyarrow_wrap_field(self.type.child(i))\n \n     def __getstate__(self):\n-        children = [pyarrow_wrap_field(self.type.child(i))\n-                    for i in range(self.num_children)]\n+        children = [self[i] for i in range(self.num_children)]\n         return children, self.mode\n \n     def __setstate__(self, state):\n         cdef DataType reconstituted = union(*state)\n         self.init(reconstituted.sp_type)\n \n+\n cdef class TimestampType(DataType):\n \n     cdef void init(self, const shared_ptr[CDataType]& type):\n@@ -1145,6 +1147,16 @@ def struct(fields):\n def union(children_fields, mode):\n     \"\"\"\n     Create UnionType from children fields.\n+\n+    Parameters\n+    ----------\n+    fields : sequence of Field values\n+    mode : str\n+        'dense' or 'sparse'\n+\n+    Returns\n+    -------\n+    type : DataType\n     \"\"\"\n     cdef:\n         Field child_field\n@@ -1153,16 +1165,27 @@ def union(children_fields, mode):\n         shared_ptr[CDataType] union_type\n         int i\n \n+    if isinstance(mode, int):\n+        if mode not in (_UnionMode_SPARSE, _UnionMode_DENSE):\n+            raise ValueError(\"Invalid union mode {0!r}\".format(mode))\n+    else:\n+        if mode == 'sparse':\n+            mode = _UnionMode_SPARSE\n+        elif mode == 'dense':\n+            mode = _UnionMode_DENSE\n+        else:\n+            raise ValueError(\"Invalid union mode {0!r}\".format(mode))\n+\n     for i, child_field in enumerate(children_fields):\n         type_codes.push_back(i)\n         c_fields.push_back(child_field.sp_field)\n \n-        if mode == UnionMode_SPARSE:\n-            union_type.reset(new CUnionType(c_fields, type_codes,\n-                                            _UnionMode_SPARSE))\n-        else:\n-            union_type.reset(new CUnionType(c_fields, type_codes,\n-                                            _UnionMode_DENSE))\n+    if mode == UnionMode_SPARSE:\n+        union_type.reset(new CUnionType(c_fields, type_codes,\n+                                        _UnionMode_SPARSE))\n+    else:\n+        union_type.reset(new CUnionType(c_fields, type_codes,\n+                                        _UnionMode_DENSE))\n \n     return pyarrow_wrap_data_type(union_type)\n \n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-22T17:49:25.481+0000",
                    "updated": "2018-03-22T17:49:25.481+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|i3rng7:",
        "customfield_12314139": null
    }
}