{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13406103",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103",
    "key": "ARROW-14292",
    "fields": {
        "parent": {
            "id": "13406105",
            "key": "ARROW-14293",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13406105",
            "fields": {
                "summary": "[Python]\u00a0Basic Join functionality in PyArrow",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "aggregateprogress": {
            "progress": 32400,
            "total": 32400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 32400,
            "total": 32400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14292/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 54,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/728981",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- opened a new pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452\n\n\n   This constitutes the foundation for the `Table.join` method that will be implemented in a future PR.\r\n   It provides the `tables_join` function that wraps the execplan machinery and tests to verify that join works as expected.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-17T14:44:10.278+0000",
                    "updated": "2022-02-17T14:44:10.278+0000",
                    "started": "2022-02-17T14:44:10.278+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "728981",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/728983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#issuecomment-1043024769\n\n\n   https://issues.apache.org/jira/browse/ARROW-14292\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-17T14:45:16.600+0000",
                    "updated": "2022-02-17T14:45:16.600+0000",
                    "started": "2022-02-17T14:45:16.600+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "728983",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/729734",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#issuecomment-1044786299\n\n\n   Not sure why getting in CI the error\r\n   ```\r\n   pyarrow._exec_plan.tables_join\r\n   -> pyarrow._exec_plan.tables_join(join_type, left_table, left_keys, right_table, right_keys)\r\n   PR01: Parameters {'left_keys', 'left_table', 'right_table', 'right_keys'} not documented\r\n   ```\r\n   That function has all arguments documented, will need to dive a bit more into why it's complaining.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T16:24:05.840+0000",
                    "updated": "2022-02-18T16:24:05.840+0000",
                    "started": "2022-02-18T16:24:05.840+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729734",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/731714",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#discussion_r813057027\n\n\n\n##########\nFile path: python/pyarrow/_exec_plan.pyx\n##########\n@@ -0,0 +1,199 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# ---------------------------------------------------------------------\n+# Implement Internal ExecPlan bindings\n+\n+# cython: profile=False\n+# distutils: language = c++\n+# cython: language_level = 3\n+\n+from cython.operator cimport dereference as deref, preincrement as inc\n+\n+from pyarrow.includes.common cimport *\n+from pyarrow.includes.libarrow cimport *\n+from pyarrow.lib cimport (Table, pyarrow_unwrap_table, pyarrow_wrap_table)\n+from pyarrow.lib import tobytes\n+\n+\n+cdef execplan(inputs, output_type, vector[CDeclaration] plan):\n+    \"\"\"\n+    Internal Function to create and ExecPlan and run it.\n\nReview comment:\n       ```suggestion\r\n       Internal Function to create an ExecPlan and run it.\r\n   ```\n\n##########\nFile path: python/pyarrow/_exec_plan.pyx\n##########\n@@ -0,0 +1,199 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# ---------------------------------------------------------------------\n+# Implement Internal ExecPlan bindings\n+\n+# cython: profile=False\n+# distutils: language = c++\n+# cython: language_level = 3\n+\n+from cython.operator cimport dereference as deref, preincrement as inc\n+\n+from pyarrow.includes.common cimport *\n+from pyarrow.includes.libarrow cimport *\n+from pyarrow.lib cimport (Table, pyarrow_unwrap_table, pyarrow_wrap_table)\n+from pyarrow.lib import tobytes\n+\n+\n+cdef execplan(inputs, output_type, vector[CDeclaration] plan):\n+    \"\"\"\n+    Internal Function to create and ExecPlan and run it.\n+\n+    Parameters\n+    ----------\n+    inputs : list of Table or Dataset\n+             The sources from which the ExecPlan should fetch data.\n+             In most cases this is only one, unless the first node of the\n+             plan is able to get data from multiple different sources.\n+    output_type : Table or Dataset\n+             In which format the output should be provided.\n+    plan : vector[CDeclaration]\n+             The nodes of the plan that should be applied to the sources\n+             to produce the output.\n+    \"\"\"\n+    cdef:\n+        CExecContext c_exec_context = CExecContext(c_default_memory_pool(),\n+                                                   GetCpuThreadPool())\n\nReview comment:\n       Do we want an option to not use threads for executing this plan? (I don't know if that is possible right now with the interface)\r\n   \r\n   In other places in pyarrow we use a `use_threads` keyword to toggle this\n\n##########\nFile path: python/pyarrow/_exec_plan.pyx\n##########\n@@ -0,0 +1,199 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# ---------------------------------------------------------------------\n+# Implement Internal ExecPlan bindings\n+\n+# cython: profile=False\n+# distutils: language = c++\n+# cython: language_level = 3\n+\n+from cython.operator cimport dereference as deref, preincrement as inc\n+\n+from pyarrow.includes.common cimport *\n+from pyarrow.includes.libarrow cimport *\n+from pyarrow.lib cimport (Table, pyarrow_unwrap_table, pyarrow_wrap_table)\n+from pyarrow.lib import tobytes\n+\n+\n+cdef execplan(inputs, output_type, vector[CDeclaration] plan):\n+    \"\"\"\n+    Internal Function to create and ExecPlan and run it.\n+\n+    Parameters\n+    ----------\n+    inputs : list of Table or Dataset\n\nReview comment:\n       At the moment it is only Table and not Dataset, right?\n\n##########\nFile path: python/pyarrow/includes/libarrow.pxd\n##########\n@@ -1784,11 +1788,26 @@ cdef extern from \"arrow/json/reader.h\" namespace \"arrow::json\" nogil:\n         CResult[shared_ptr[CTable]] Read()\n \n \n+cdef extern from \"arrow/util/thread_pool.h\" namespace \"arrow::internal\" nogil:\n\nReview comment:\n       We already have the declaration for `GetCpuThreadPoolCapacity` from `thread_pool.h` somewhere in this file, maybe move them together?\n\n##########\nFile path: python/pyarrow/_exec_plan.pyx\n##########\n@@ -0,0 +1,199 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# ---------------------------------------------------------------------\n+# Implement Internal ExecPlan bindings\n+\n+# cython: profile=False\n+# distutils: language = c++\n+# cython: language_level = 3\n+\n+from cython.operator cimport dereference as deref, preincrement as inc\n+\n+from pyarrow.includes.common cimport *\n+from pyarrow.includes.libarrow cimport *\n+from pyarrow.lib cimport (Table, pyarrow_unwrap_table, pyarrow_wrap_table)\n+from pyarrow.lib import tobytes\n+\n+\n+cdef execplan(inputs, output_type, vector[CDeclaration] plan):\n+    \"\"\"\n+    Internal Function to create and ExecPlan and run it.\n+\n+    Parameters\n+    ----------\n+    inputs : list of Table or Dataset\n+             The sources from which the ExecPlan should fetch data.\n+             In most cases this is only one, unless the first node of the\n+             plan is able to get data from multiple different sources.\n+    output_type : Table or Dataset\n+             In which format the output should be provided.\n+    plan : vector[CDeclaration]\n+             The nodes of the plan that should be applied to the sources\n+             to produce the output.\n+    \"\"\"\n+    cdef:\n+        CExecContext c_exec_context = CExecContext(c_default_memory_pool(),\n+                                                   GetCpuThreadPool())\n+        shared_ptr[CExecPlan] c_exec_plan = GetResultValue(CExecPlan.Make(&c_exec_context))\n+        vector[CDeclaration] c_decls\n+        vector[CExecNode*] _empty\n+        vector[CExecNode*] c_final_node_vec\n+        CExecNode *c_node\n+        CTable* c_table\n+        shared_ptr[CTable] c_out_table\n+        shared_ptr[CSourceNodeOptions] c_sourceopts\n+        shared_ptr[CSinkNodeOptions] c_sinkopts\n+        shared_ptr[CAsyncExecBatchGenerator] c_asyncexecbatchgen\n+        shared_ptr[CRecordBatchReader] c_recordbatchreader\n+        vector[CDeclaration].iterator plan_iter\n+\n+    plan_iter = plan.begin()\n+\n+    # Create source nodes for each input\n+    for ipt in inputs:\n+        if isinstance(ipt, Table):\n+            c_in_table = pyarrow_unwrap_table(ipt).get()\n+            c_sourceopts = GetResultValue(\n+                CSourceNodeOptions.FromTable(deref(c_in_table), c_exec_context.executor()))\n+        else:\n+            raise TypeError(\"Unsupproted type\")\n+\n+        if plan_iter != plan.end():\n+            # Flag the source as the input of the first plan node.\n+            deref(plan_iter).inputs.push_back(CDeclaration.Input(\n+                CDeclaration(tobytes(\"source\"), deref(c_sourceopts))\n+            ))\n+        else:\n+            # Empty plan, make the source the first plan node.\n+            c_decls.push_back(\n+                CDeclaration(tobytes(\"source\"), deref(c_sourceopts))\n+            )\n+\n+    # Add Here additional nodes\n+    while plan_iter != plan.end():\n+        c_decls.push_back(deref(plan_iter))\n+        inc(plan_iter)\n+\n+    # Add all CDeclarations to the plan\n+    c_node = GetResultValue(\n+        CDeclaration.Sequence(c_decls).AddToPlan(&deref(c_exec_plan))\n+    )\n+    c_final_node_vec.push_back(c_node)\n+\n+    # Create the output node\n+    c_asyncexecbatchgen = make_shared[CAsyncExecBatchGenerator]()\n+    c_sinkopts = make_shared[CSinkNodeOptions](c_asyncexecbatchgen.get())\n+    GetResultValue(\n+        MakeExecNode(tobytes(\"sink\"), &deref(c_exec_plan),\n+                     c_final_node_vec, deref(c_sinkopts))\n+    )\n+\n+    # Convert the asyncgenerator to a sync batch reader\n+    c_recordbatchreader = MakeGeneratorReader(c_node.output_schema(),\n+                                              deref(c_asyncexecbatchgen),\n+                                              c_exec_context.memory_pool())\n+\n+    # Start execution of the ExecPlan\n+    deref(c_exec_plan).Validate()\n+    deref(c_exec_plan).StartProducing()\n+\n+    # Convert output to the expected one.\n+    if output_type == Table:\n+        c_out_table = GetResultValue(\n+            CTable.FromRecordBatchReader(c_recordbatchreader.get()))\n+        output = pyarrow_wrap_table(c_out_table)\n+    else:\n+        raise TypeError(\"Unsupported output type\")\n+\n+    deref(c_exec_plan).StopProducing()\n+\n+    return output\n+\n+\n+def tables_join(join_type, left_table, left_keys, right_table, right_keys):\n\nReview comment:\n       `join_tables` sounds/reads more natural than `tables_join` IMO (subjective of course)\n\n##########\nFile path: python/pyarrow/_exec_plan.pyx\n##########\n@@ -0,0 +1,199 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# ---------------------------------------------------------------------\n+# Implement Internal ExecPlan bindings\n+\n+# cython: profile=False\n+# distutils: language = c++\n+# cython: language_level = 3\n+\n+from cython.operator cimport dereference as deref, preincrement as inc\n+\n+from pyarrow.includes.common cimport *\n+from pyarrow.includes.libarrow cimport *\n+from pyarrow.lib cimport (Table, pyarrow_unwrap_table, pyarrow_wrap_table)\n+from pyarrow.lib import tobytes\n+\n+\n+cdef execplan(inputs, output_type, vector[CDeclaration] plan):\n+    \"\"\"\n+    Internal Function to create and ExecPlan and run it.\n+\n+    Parameters\n+    ----------\n+    inputs : list of Table or Dataset\n+             The sources from which the ExecPlan should fetch data.\n\nReview comment:\n       small nit, but indentation is a bit off here\n\n##########\nFile path: python/pyarrow/_exec_plan.pyx\n##########\n@@ -0,0 +1,199 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# ---------------------------------------------------------------------\n+# Implement Internal ExecPlan bindings\n+\n+# cython: profile=False\n+# distutils: language = c++\n+# cython: language_level = 3\n+\n+from cython.operator cimport dereference as deref, preincrement as inc\n+\n+from pyarrow.includes.common cimport *\n+from pyarrow.includes.libarrow cimport *\n+from pyarrow.lib cimport (Table, pyarrow_unwrap_table, pyarrow_wrap_table)\n+from pyarrow.lib import tobytes\n+\n+\n+cdef execplan(inputs, output_type, vector[CDeclaration] plan):\n+    \"\"\"\n+    Internal Function to create and ExecPlan and run it.\n+\n+    Parameters\n+    ----------\n+    inputs : list of Table or Dataset\n+             The sources from which the ExecPlan should fetch data.\n+             In most cases this is only one, unless the first node of the\n+             plan is able to get data from multiple different sources.\n+    output_type : Table or Dataset\n+             In which format the output should be provided.\n+    plan : vector[CDeclaration]\n+             The nodes of the plan that should be applied to the sources\n+             to produce the output.\n+    \"\"\"\n+    cdef:\n+        CExecContext c_exec_context = CExecContext(c_default_memory_pool(),\n+                                                   GetCpuThreadPool())\n+        shared_ptr[CExecPlan] c_exec_plan = GetResultValue(CExecPlan.Make(&c_exec_context))\n+        vector[CDeclaration] c_decls\n+        vector[CExecNode*] _empty\n+        vector[CExecNode*] c_final_node_vec\n+        CExecNode *c_node\n+        CTable* c_table\n+        shared_ptr[CTable] c_out_table\n+        shared_ptr[CSourceNodeOptions] c_sourceopts\n+        shared_ptr[CSinkNodeOptions] c_sinkopts\n+        shared_ptr[CAsyncExecBatchGenerator] c_asyncexecbatchgen\n+        shared_ptr[CRecordBatchReader] c_recordbatchreader\n+        vector[CDeclaration].iterator plan_iter\n+\n+    plan_iter = plan.begin()\n+\n+    # Create source nodes for each input\n+    for ipt in inputs:\n+        if isinstance(ipt, Table):\n+            c_in_table = pyarrow_unwrap_table(ipt).get()\n+            c_sourceopts = GetResultValue(\n+                CSourceNodeOptions.FromTable(deref(c_in_table), c_exec_context.executor()))\n+        else:\n+            raise TypeError(\"Unsupproted type\")\n+\n+        if plan_iter != plan.end():\n+            # Flag the source as the input of the first plan node.\n+            deref(plan_iter).inputs.push_back(CDeclaration.Input(\n+                CDeclaration(tobytes(\"source\"), deref(c_sourceopts))\n+            ))\n+        else:\n+            # Empty plan, make the source the first plan node.\n+            c_decls.push_back(\n+                CDeclaration(tobytes(\"source\"), deref(c_sourceopts))\n+            )\n+\n+    # Add Here additional nodes\n+    while plan_iter != plan.end():\n+        c_decls.push_back(deref(plan_iter))\n+        inc(plan_iter)\n+\n+    # Add all CDeclarations to the plan\n+    c_node = GetResultValue(\n+        CDeclaration.Sequence(c_decls).AddToPlan(&deref(c_exec_plan))\n+    )\n+    c_final_node_vec.push_back(c_node)\n+\n+    # Create the output node\n+    c_asyncexecbatchgen = make_shared[CAsyncExecBatchGenerator]()\n+    c_sinkopts = make_shared[CSinkNodeOptions](c_asyncexecbatchgen.get())\n+    GetResultValue(\n+        MakeExecNode(tobytes(\"sink\"), &deref(c_exec_plan),\n+                     c_final_node_vec, deref(c_sinkopts))\n+    )\n+\n+    # Convert the asyncgenerator to a sync batch reader\n+    c_recordbatchreader = MakeGeneratorReader(c_node.output_schema(),\n+                                              deref(c_asyncexecbatchgen),\n+                                              c_exec_context.memory_pool())\n+\n+    # Start execution of the ExecPlan\n+    deref(c_exec_plan).Validate()\n+    deref(c_exec_plan).StartProducing()\n+\n+    # Convert output to the expected one.\n+    if output_type == Table:\n+        c_out_table = GetResultValue(\n+            CTable.FromRecordBatchReader(c_recordbatchreader.get()))\n+        output = pyarrow_wrap_table(c_out_table)\n+    else:\n+        raise TypeError(\"Unsupported output type\")\n+\n+    deref(c_exec_plan).StopProducing()\n+\n+    return output\n+\n+\n+def tables_join(join_type, left_table, left_keys, right_table, right_keys):\n+    \"\"\"\n+    Perform join of two tables.\n+\n+    The result will be an output table with the result of the join operation\n+\n+    Parameters\n+    ----------\n+    join_type : str\n+        One of supported join types.\n+    left_table : Table\n+        The left table for the join operation\n+    left_keys : str or list[str]\n+        The left table key (or keys) on which the join operation should be performed\n+    right_table : Table\n+        The right table for the join operation\n+    right_keys : str or list[str]\n+        The right table key (or keys) on which the join operation should be performed\n+\n+    Returns\n+    -------\n+    result_table : Table\n+    \"\"\"\n+    cdef:\n+        vector[CFieldRef] c_left_keys\n+        vector[CFieldRef] c_right_keys\n+        vector[CDeclaration] c_decl_plan\n+        CJoinType c_join_type\n+\n+    # Prepare left and right tables Keys to send them to the C++ function\n+    if isinstance(left_keys, str):\n+        left_keys = [left_keys]\n+    for key in left_keys:\n+        c_left_keys.push_back(CFieldRef(<c_string>tobytes(key)))\n+\n+    if isinstance(right_keys, str):\n+        right_keys = [right_keys]\n+    for key in right_keys:\n+        c_right_keys.push_back(CFieldRef(<c_string>tobytes(key)))\n+\n+    # Pick the join type\n+    if join_type == \"left semi\":\n+        c_join_type = CJoinType_LEFT_SEMI\n+    elif join_type == \"right semi\":\n+        c_join_type = CJoinType_RIGHT_SEMI\n+    elif join_type == \"left anti\":\n+        c_join_type = CJoinType_LEFT_ANTI\n+    elif join_type == \"right anti\":\n+        c_join_type = CJoinType_RIGHT_ANTI\n+    elif join_type == \"inner\":\n+        c_join_type = CJoinType_INNER\n+    elif join_type == \"left outer\":\n+        c_join_type = CJoinType_LEFT_OUTER\n+    elif join_type == \"right outer\":\n+        c_join_type = CJoinType_RIGHT_OUTER\n+    elif join_type == \"full outer\":\n+        c_join_type = CJoinType_FULL_OUTER\n+    else:\n+        raise ValueError(\"Unsupporter join type\")\n\nReview comment:\n       ```suggestion\r\n           raise ValueError(\"Unsupported join type\")\r\n   ```\n\n##########\nFile path: python/pyarrow/_exec_plan.pyx\n##########\n@@ -0,0 +1,199 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# ---------------------------------------------------------------------\n+# Implement Internal ExecPlan bindings\n+\n+# cython: profile=False\n+# distutils: language = c++\n+# cython: language_level = 3\n+\n+from cython.operator cimport dereference as deref, preincrement as inc\n+\n+from pyarrow.includes.common cimport *\n+from pyarrow.includes.libarrow cimport *\n+from pyarrow.lib cimport (Table, pyarrow_unwrap_table, pyarrow_wrap_table)\n+from pyarrow.lib import tobytes\n+\n+\n+cdef execplan(inputs, output_type, vector[CDeclaration] plan):\n+    \"\"\"\n+    Internal Function to create and ExecPlan and run it.\n+\n+    Parameters\n+    ----------\n+    inputs : list of Table or Dataset\n+             The sources from which the ExecPlan should fetch data.\n+             In most cases this is only one, unless the first node of the\n+             plan is able to get data from multiple different sources.\n+    output_type : Table or Dataset\n+             In which format the output should be provided.\n+    plan : vector[CDeclaration]\n+             The nodes of the plan that should be applied to the sources\n+             to produce the output.\n+    \"\"\"\n+    cdef:\n+        CExecContext c_exec_context = CExecContext(c_default_memory_pool(),\n+                                                   GetCpuThreadPool())\n+        shared_ptr[CExecPlan] c_exec_plan = GetResultValue(CExecPlan.Make(&c_exec_context))\n+        vector[CDeclaration] c_decls\n+        vector[CExecNode*] _empty\n+        vector[CExecNode*] c_final_node_vec\n+        CExecNode *c_node\n+        CTable* c_table\n+        shared_ptr[CTable] c_out_table\n+        shared_ptr[CSourceNodeOptions] c_sourceopts\n+        shared_ptr[CSinkNodeOptions] c_sinkopts\n+        shared_ptr[CAsyncExecBatchGenerator] c_asyncexecbatchgen\n+        shared_ptr[CRecordBatchReader] c_recordbatchreader\n+        vector[CDeclaration].iterator plan_iter\n+\n+    plan_iter = plan.begin()\n+\n+    # Create source nodes for each input\n+    for ipt in inputs:\n+        if isinstance(ipt, Table):\n+            c_in_table = pyarrow_unwrap_table(ipt).get()\n+            c_sourceopts = GetResultValue(\n+                CSourceNodeOptions.FromTable(deref(c_in_table), c_exec_context.executor()))\n+        else:\n+            raise TypeError(\"Unsupproted type\")\n\nReview comment:\n       ```suggestion\r\n               raise TypeError(\"Unsupported type\")\r\n   ```\n\n##########\nFile path: python/pyarrow/_exec_plan.pyx\n##########\n@@ -0,0 +1,199 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# ---------------------------------------------------------------------\n+# Implement Internal ExecPlan bindings\n+\n+# cython: profile=False\n+# distutils: language = c++\n+# cython: language_level = 3\n+\n+from cython.operator cimport dereference as deref, preincrement as inc\n+\n+from pyarrow.includes.common cimport *\n+from pyarrow.includes.libarrow cimport *\n+from pyarrow.lib cimport (Table, pyarrow_unwrap_table, pyarrow_wrap_table)\n+from pyarrow.lib import tobytes\n+\n+\n+cdef execplan(inputs, output_type, vector[CDeclaration] plan):\n\nReview comment:\n       Longer term, I think the question is to what extent we want to factor out this `execplan` function in a \"nicer\" interface (even for cython), eg class based, or .. But I suppose for this PR itself it is good enough.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-23T17:08:28.908+0000",
                    "updated": "2022-02-23T17:08:28.908+0000",
                    "started": "2022-02-23T17:08:28.908+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "731714",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/734485",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#discussion_r816642744\n\n\n\n##########\nFile path: python/pyarrow/_exec_plan.pyx\n##########\n@@ -0,0 +1,199 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# ---------------------------------------------------------------------\n+# Implement Internal ExecPlan bindings\n+\n+# cython: profile=False\n+# distutils: language = c++\n+# cython: language_level = 3\n+\n+from cython.operator cimport dereference as deref, preincrement as inc\n+\n+from pyarrow.includes.common cimport *\n+from pyarrow.includes.libarrow cimport *\n+from pyarrow.lib cimport (Table, pyarrow_unwrap_table, pyarrow_wrap_table)\n+from pyarrow.lib import tobytes\n+\n+\n+cdef execplan(inputs, output_type, vector[CDeclaration] plan):\n+    \"\"\"\n+    Internal Function to create and ExecPlan and run it.\n+\n+    Parameters\n+    ----------\n+    inputs : list of Table or Dataset\n\nReview comment:\n       Yes, but I will work on Dataset as the next step this quarter and I wanted to avoid forgetting to update the docstrings :D\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-01T10:30:27.777+0000",
                    "updated": "2022-03-01T10:30:27.777+0000",
                    "started": "2022-03-01T10:30:27.776+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "734485",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/734603",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#discussion_r816805696\n\n\n\n##########\nFile path: python/pyarrow/_exec_plan.pyx\n##########\n@@ -0,0 +1,199 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# ---------------------------------------------------------------------\n+# Implement Internal ExecPlan bindings\n+\n+# cython: profile=False\n+# distutils: language = c++\n+# cython: language_level = 3\n+\n+from cython.operator cimport dereference as deref, preincrement as inc\n+\n+from pyarrow.includes.common cimport *\n+from pyarrow.includes.libarrow cimport *\n+from pyarrow.lib cimport (Table, pyarrow_unwrap_table, pyarrow_wrap_table)\n+from pyarrow.lib import tobytes\n+\n+\n+cdef execplan(inputs, output_type, vector[CDeclaration] plan):\n+    \"\"\"\n+    Internal Function to create and ExecPlan and run it.\n+\n+    Parameters\n+    ----------\n+    inputs : list of Table or Dataset\n+             The sources from which the ExecPlan should fetch data.\n\nReview comment:\n       addressed\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-01T14:15:28.223+0000",
                    "updated": "2022-03-01T14:15:28.223+0000",
                    "started": "2022-03-01T14:15:28.223+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "734603",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/734610",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#discussion_r816812568\n\n\n\n##########\nFile path: python/pyarrow/includes/libarrow.pxd\n##########\n@@ -1784,11 +1788,26 @@ cdef extern from \"arrow/json/reader.h\" namespace \"arrow::json\" nogil:\n         CResult[shared_ptr[CTable]] Read()\n \n \n+cdef extern from \"arrow/util/thread_pool.h\" namespace \"arrow::internal\" nogil:\n\nReview comment:\n       They have different namespaces by the way, the `GetCpuThreadPoolCapacity` is `arrow::` while the `CExecutor` is `arrow:internal::`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-01T14:22:56.099+0000",
                    "updated": "2022-03-01T14:22:56.099+0000",
                    "started": "2022-03-01T14:22:56.099+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "734610",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/735861",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#issuecomment-1057928558\n\n\n   @github-actions crossbow submit test\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T11:01:58.861+0000",
                    "updated": "2022-03-03T11:01:58.861+0000",
                    "started": "2022-03-03T11:01:58.860+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735861",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/735862",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- edited a comment on pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#issuecomment-1057928558\n\n\n   @github-actions crossbow submit -g test\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T11:03:27.601+0000",
                    "updated": "2022-03-03T11:03:27.601+0000",
                    "started": "2022-03-03T11:03:27.601+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735862",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/735863",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#issuecomment-1057930284\n\n\n   ```\n   Unable to match any tasks for `test`\n   The Archery job run can be found at: https://github.com/apache/arrow/actions/runs/1927605537```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T11:03:50.300+0000",
                    "updated": "2022-03-03T11:03:50.300+0000",
                    "started": "2022-03-03T11:03:50.300+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735863",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/735864",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#issuecomment-1057931257\n\n\n   Revision: a9155f9fbbac2166894a69348347e5767ac48f36\n   \n   Submitted crossbow builds: [ursacomputing/crossbow @ actions-1716](https://github.com/ursacomputing/crossbow/branches/all?query=actions-1716)\n   \n   |Task|Status|\n   |----|------|\n   |test-build-cpp-fuzz|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-build-cpp-fuzz)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-build-cpp-fuzz)|\n   |test-build-vcpkg-win|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-build-vcpkg-win)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-build-vcpkg-win)|\n   |test-conda-cpp|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-cpp)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-cpp)|\n   |test-conda-cpp-valgrind|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-conda-cpp-valgrind)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-conda-cpp-valgrind)|\n   |test-conda-python-3.10|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.10)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.10)|\n   |test-conda-python-3.7|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.7)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.7)|\n   |test-conda-python-3.7-hdfs-2.9.2|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.7-hdfs-2.9.2)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.7-hdfs-2.9.2)|\n   |test-conda-python-3.7-hdfs-3.2.1|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.7-hdfs-3.2.1)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.7-hdfs-3.2.1)|\n   |test-conda-python-3.7-kartothek-latest|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.7-kartothek-latest)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.7-kartothek-latest)|\n   |test-conda-python-3.7-kartothek-master|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.7-kartothek-master)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.7-kartothek-master)|\n   |test-conda-python-3.7-pandas-0.24|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.7-pandas-0.24)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.7-pandas-0.24)|\n   |test-conda-python-3.7-pandas-latest|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.7-pandas-latest)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.7-pandas-latest)|\n   |test-conda-python-3.7-spark-v3.1.2|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.7-spark-v3.1.2)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.7-spark-v3.1.2)|\n   |test-conda-python-3.7-turbodbc-latest|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.7-turbodbc-latest)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.7-turbodbc-latest)|\n   |test-conda-python-3.7-turbodbc-master|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.7-turbodbc-master)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.7-turbodbc-master)|\n   |test-conda-python-3.8|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.8)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.8)|\n   |test-conda-python-3.8-hypothesis|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.8-hypothesis)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.8-hypothesis)|\n   |test-conda-python-3.8-pandas-latest|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.8-pandas-latest)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.8-pandas-latest)|\n   |test-conda-python-3.8-pandas-nightly|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.8-pandas-nightly)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.8-pandas-nightly)|\n   |test-conda-python-3.8-spark-v3.2.0|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.8-spark-v3.2.0)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.8-spark-v3.2.0)|\n   |test-conda-python-3.9|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.9)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.9)|\n   |test-conda-python-3.9-dask-latest|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.9-dask-latest)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.9-dask-latest)|\n   |test-conda-python-3.9-dask-master|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.9-dask-master)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.9-dask-master)|\n   |test-conda-python-3.9-pandas-master|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.9-pandas-master)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.9-pandas-master)|\n   |test-conda-python-3.9-spark-master|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-conda-python-3.9-spark-master)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-conda-python-3.9-spark-master)|\n   |test-debian-10-cpp-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-debian-10-cpp-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-debian-10-cpp-amd64)|\n   |test-debian-10-cpp-i386|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-debian-10-cpp-i386)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-debian-10-cpp-i386)|\n   |test-debian-11-cpp-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-debian-11-cpp-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-debian-11-cpp-amd64)|\n   |test-debian-11-cpp-i386|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-debian-11-cpp-i386)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-debian-11-cpp-i386)|\n   |test-debian-11-go-1.16|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-debian-11-go-1.16)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-debian-11-go-1.16)|\n   |test-debian-11-python-3|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-debian-11-python-3)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-debian-11-python-3)|\n   |test-debian-c-glib|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-debian-c-glib)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-debian-c-glib)|\n   |test-debian-ruby|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-debian-ruby)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-debian-ruby)|\n   |test-fedora-33-cpp|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-fedora-33-cpp)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-fedora-33-cpp)|\n   |test-fedora-33-python-3|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-fedora-33-python-3)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-fedora-33-python-3)|\n   |test-fedora-r-clang-sanitizer|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-fedora-r-clang-sanitizer)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-fedora-r-clang-sanitizer)|\n   |test-r-arrow-backwards-compatibility|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-r-arrow-backwards-compatibility)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-r-arrow-backwards-compatibility)|\n   |test-r-depsource-bundled|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-r-depsource-bundled)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-r-depsource-bundled)|\n   |test-r-depsource-system|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-r-depsource-system)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-r-depsource-system)|\n   |test-r-dev-duckdb|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-r-dev-duckdb)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-r-dev-duckdb)|\n   |test-r-devdocs|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-r-devdocs)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-r-devdocs)|\n   |test-r-gcc-11|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-r-gcc-11)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-r-gcc-11)|\n   |test-r-install-local|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-r-install-local)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-r-install-local)|\n   |test-r-linux-as-cran|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-r-linux-as-cran)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-r-linux-as-cran)|\n   |test-r-linux-rchk|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-r-linux-rchk)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-r-linux-rchk)|\n   |test-r-linux-valgrind|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-r-linux-valgrind)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-r-linux-valgrind)|\n   |test-r-minimal-build|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-r-minimal-build)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-r-minimal-build)|\n   |test-r-offline-maximal|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-r-offline-maximal)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-r-offline-maximal)|\n   |test-r-offline-minimal|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-r-offline-minimal)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-r-offline-minimal)|\n   |test-r-rhub-debian-gcc-devel-lto-latest|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-r-rhub-debian-gcc-devel-lto-latest)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-r-rhub-debian-gcc-devel-lto-latest)|\n   |test-r-rhub-ubuntu-gcc-release-latest|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-r-rhub-ubuntu-gcc-release-latest)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-r-rhub-ubuntu-gcc-release-latest)|\n   |test-r-rocker-r-base-latest|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-r-rocker-r-base-latest)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-r-rocker-r-base-latest)|\n   |test-r-rstudio-r-base-4.1-centos7-devtoolset-8|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-r-rstudio-r-base-4.1-centos7-devtoolset-8)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-r-rstudio-r-base-4.1-centos7-devtoolset-8)|\n   |test-r-rstudio-r-base-4.1-focal|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-r-rstudio-r-base-4.1-focal)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-r-rstudio-r-base-4.1-focal)|\n   |test-r-rstudio-r-base-4.1-opensuse15|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-r-rstudio-r-base-4.1-opensuse15)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-r-rstudio-r-base-4.1-opensuse15)|\n   |test-r-rstudio-r-base-4.1-opensuse42|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-r-rstudio-r-base-4.1-opensuse42)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-r-rstudio-r-base-4.1-opensuse42)|\n   |test-r-ubuntu-21.04|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-r-ubuntu-21.04)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-r-ubuntu-21.04)|\n   |test-r-versions|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-r-versions)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-r-versions)|\n   |test-skyhook-integration|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-skyhook-integration)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-skyhook-integration)|\n   |test-ubuntu-18.04-cpp|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-ubuntu-18.04-cpp)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-ubuntu-18.04-cpp)|\n   |test-ubuntu-18.04-cpp-release|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-ubuntu-18.04-cpp-release)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-ubuntu-18.04-cpp-release)|\n   |test-ubuntu-18.04-cpp-static|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-ubuntu-18.04-cpp-static)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-ubuntu-18.04-cpp-static)|\n   |test-ubuntu-18.04-r-sanitizer|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-ubuntu-18.04-r-sanitizer)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-ubuntu-18.04-r-sanitizer)|\n   |test-ubuntu-20.04-cpp|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-ubuntu-20.04-cpp)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-ubuntu-20.04-cpp)|\n   |test-ubuntu-20.04-cpp-14|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-ubuntu-20.04-cpp-14)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-ubuntu-20.04-cpp-14)|\n   |test-ubuntu-20.04-cpp-17|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-ubuntu-20.04-cpp-17)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-ubuntu-20.04-cpp-17)|\n   |test-ubuntu-20.04-cpp-bundled|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-ubuntu-20.04-cpp-bundled)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-ubuntu-20.04-cpp-bundled)|\n   |test-ubuntu-20.04-cpp-thread-sanitizer|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-ubuntu-20.04-cpp-thread-sanitizer)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-ubuntu-20.04-cpp-thread-sanitizer)|\n   |test-ubuntu-20.04-python-3|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-ubuntu-20.04-python-3)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-ubuntu-20.04-python-3)|\n   |test-ubuntu-21.04-cpp|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-ubuntu-21.04-cpp)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-ubuntu-21.04-cpp)|\n   |test-ubuntu-c-glib|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-ubuntu-c-glib)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-ubuntu-c-glib)|\n   |test-ubuntu-default-docs|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-1716-azure-test-ubuntu-default-docs)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-1716-azure-test-ubuntu-default-docs)|\n   |test-ubuntu-ruby|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1716-github-test-ubuntu-ruby)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1716-github-test-ubuntu-ruby)|\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T11:05:10.321+0000",
                    "updated": "2022-03-03T11:05:10.321+0000",
                    "started": "2022-03-03T11:05:10.320+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735864",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/735866",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] removed a comment on pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#issuecomment-1057930284\n\n\n   ```\n   Unable to match any tasks for `test`\n   The Archery job run can be found at: https://github.com/apache/arrow/actions/runs/1927605537```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T11:07:15.914+0000",
                    "updated": "2022-03-03T11:07:15.914+0000",
                    "started": "2022-03-03T11:07:15.914+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735866",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/735972",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#discussion_r818682805\n\n\n\n##########\nFile path: python/pyarrow/_exec_plan.pyx\n##########\n@@ -0,0 +1,199 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# ---------------------------------------------------------------------\n+# Implement Internal ExecPlan bindings\n+\n+# cython: profile=False\n+# distutils: language = c++\n+# cython: language_level = 3\n+\n+from cython.operator cimport dereference as deref, preincrement as inc\n+\n+from pyarrow.includes.common cimport *\n+from pyarrow.includes.libarrow cimport *\n+from pyarrow.lib cimport (Table, pyarrow_unwrap_table, pyarrow_wrap_table)\n+from pyarrow.lib import tobytes\n+\n+\n+cdef execplan(inputs, output_type, vector[CDeclaration] plan):\n+    \"\"\"\n+    Internal Function to create and ExecPlan and run it.\n+\n+    Parameters\n+    ----------\n+    inputs : list of Table or Dataset\n+             The sources from which the ExecPlan should fetch data.\n+             In most cases this is only one, unless the first node of the\n+             plan is able to get data from multiple different sources.\n+    output_type : Table or Dataset\n+             In which format the output should be provided.\n+    plan : vector[CDeclaration]\n+             The nodes of the plan that should be applied to the sources\n+             to produce the output.\n+    \"\"\"\n+    cdef:\n+        CExecContext c_exec_context = CExecContext(c_default_memory_pool(),\n+                                                   GetCpuThreadPool())\n\nReview comment:\n       added the use_threads option\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T14:00:25.943+0000",
                    "updated": "2022-03-03T14:00:25.943+0000",
                    "started": "2022-03-03T14:00:25.943+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735972",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/736792",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#issuecomment-1059342722\n\n\n   @jorisvandenbossche \r\n   \r\n   Added `use_threads` option and added support for excluding the left/right keys on specific joins.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-04T17:02:19.436+0000",
                    "updated": "2022-03-04T17:02:19.436+0000",
                    "started": "2022-03-04T17:02:19.436+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "736792",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/736870",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#issuecomment-1059480794\n\n\n   There seem to be a bunch of problems with CI unrelated to the PR, there are failures related to\r\n   ```\r\n   Error: getCacheEntry failed: connect ETIMEDOUT 13.107.42.16:443\r\n   ```\r\n   and\r\n   ```\r\n   CMake Error at /opt/conda/envs/arrow/lib/cmake/AWSSDK/AWSSDKConfig.cmake:119 (while):\r\n     had incorrect arguments:\r\n   \r\n       \"NOT\" \"TEMP_NAME\" \"STREQUAL\"\r\n   \r\n     Unknown arguments specified\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-04T20:09:22.343+0000",
                    "updated": "2022-03-04T20:09:22.343+0000",
                    "started": "2022-03-04T20:09:22.343+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "736870",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/738617",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#discussion_r822422219\n\n\n\n##########\nFile path: python/pyarrow/_exec_plan.pyx\n##########\n@@ -0,0 +1,199 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# ---------------------------------------------------------------------\n+# Implement Internal ExecPlan bindings\n+\n+# cython: profile=False\n+# distutils: language = c++\n+# cython: language_level = 3\n+\n+from cython.operator cimport dereference as deref, preincrement as inc\n+\n+from pyarrow.includes.common cimport *\n+from pyarrow.includes.libarrow cimport *\n+from pyarrow.lib cimport (Table, pyarrow_unwrap_table, pyarrow_wrap_table)\n+from pyarrow.lib import tobytes\n+\n+\n+cdef execplan(inputs, output_type, vector[CDeclaration] plan):\n\nReview comment:\n       For now the plan is to avoid exposing `execplan` to end user, so the interface is low level. \r\n   \r\n   We should discuss in the near future about what we want to expose given that I think it would be reasonable to have an interface to lazily evaluate expressions (compared to doing `table.join().group_by()` which evaluates them step by step). But that shouldn't probably expose `execplan` itself, it should instead build one.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-09T08:59:02.801+0000",
                    "updated": "2022-03-09T08:59:02.801+0000",
                    "started": "2022-03-09T08:59:02.800+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738617",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/738619",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#discussion_r822422779\n\n\n\n##########\nFile path: python/pyarrow/_exec_plan.pyx\n##########\n@@ -0,0 +1,199 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# ---------------------------------------------------------------------\n+# Implement Internal ExecPlan bindings\n+\n+# cython: profile=False\n+# distutils: language = c++\n+# cython: language_level = 3\n+\n+from cython.operator cimport dereference as deref, preincrement as inc\n+\n+from pyarrow.includes.common cimport *\n+from pyarrow.includes.libarrow cimport *\n+from pyarrow.lib cimport (Table, pyarrow_unwrap_table, pyarrow_wrap_table)\n+from pyarrow.lib import tobytes\n+\n+\n+cdef execplan(inputs, output_type, vector[CDeclaration] plan):\n+    \"\"\"\n+    Internal Function to create and ExecPlan and run it.\n+\n+    Parameters\n+    ----------\n+    inputs : list of Table or Dataset\n+             The sources from which the ExecPlan should fetch data.\n+             In most cases this is only one, unless the first node of the\n+             plan is able to get data from multiple different sources.\n+    output_type : Table or Dataset\n+             In which format the output should be provided.\n+    plan : vector[CDeclaration]\n+             The nodes of the plan that should be applied to the sources\n+             to produce the output.\n+    \"\"\"\n+    cdef:\n+        CExecContext c_exec_context = CExecContext(c_default_memory_pool(),\n+                                                   GetCpuThreadPool())\n+        shared_ptr[CExecPlan] c_exec_plan = GetResultValue(CExecPlan.Make(&c_exec_context))\n+        vector[CDeclaration] c_decls\n+        vector[CExecNode*] _empty\n+        vector[CExecNode*] c_final_node_vec\n+        CExecNode *c_node\n+        CTable* c_table\n+        shared_ptr[CTable] c_out_table\n+        shared_ptr[CSourceNodeOptions] c_sourceopts\n+        shared_ptr[CSinkNodeOptions] c_sinkopts\n+        shared_ptr[CAsyncExecBatchGenerator] c_asyncexecbatchgen\n+        shared_ptr[CRecordBatchReader] c_recordbatchreader\n+        vector[CDeclaration].iterator plan_iter\n+\n+    plan_iter = plan.begin()\n+\n+    # Create source nodes for each input\n+    for ipt in inputs:\n+        if isinstance(ipt, Table):\n+            c_in_table = pyarrow_unwrap_table(ipt).get()\n+            c_sourceopts = GetResultValue(\n+                CSourceNodeOptions.FromTable(deref(c_in_table), c_exec_context.executor()))\n+        else:\n+            raise TypeError(\"Unsupproted type\")\n+\n+        if plan_iter != plan.end():\n+            # Flag the source as the input of the first plan node.\n+            deref(plan_iter).inputs.push_back(CDeclaration.Input(\n+                CDeclaration(tobytes(\"source\"), deref(c_sourceopts))\n+            ))\n+        else:\n+            # Empty plan, make the source the first plan node.\n+            c_decls.push_back(\n+                CDeclaration(tobytes(\"source\"), deref(c_sourceopts))\n+            )\n+\n+    # Add Here additional nodes\n+    while plan_iter != plan.end():\n+        c_decls.push_back(deref(plan_iter))\n+        inc(plan_iter)\n+\n+    # Add all CDeclarations to the plan\n+    c_node = GetResultValue(\n+        CDeclaration.Sequence(c_decls).AddToPlan(&deref(c_exec_plan))\n+    )\n+    c_final_node_vec.push_back(c_node)\n+\n+    # Create the output node\n+    c_asyncexecbatchgen = make_shared[CAsyncExecBatchGenerator]()\n+    c_sinkopts = make_shared[CSinkNodeOptions](c_asyncexecbatchgen.get())\n+    GetResultValue(\n+        MakeExecNode(tobytes(\"sink\"), &deref(c_exec_plan),\n+                     c_final_node_vec, deref(c_sinkopts))\n+    )\n+\n+    # Convert the asyncgenerator to a sync batch reader\n+    c_recordbatchreader = MakeGeneratorReader(c_node.output_schema(),\n+                                              deref(c_asyncexecbatchgen),\n+                                              c_exec_context.memory_pool())\n+\n+    # Start execution of the ExecPlan\n+    deref(c_exec_plan).Validate()\n+    deref(c_exec_plan).StartProducing()\n+\n+    # Convert output to the expected one.\n+    if output_type == Table:\n+        c_out_table = GetResultValue(\n+            CTable.FromRecordBatchReader(c_recordbatchreader.get()))\n+        output = pyarrow_wrap_table(c_out_table)\n+    else:\n+        raise TypeError(\"Unsupported output type\")\n+\n+    deref(c_exec_plan).StopProducing()\n+\n+    return output\n+\n+\n+def tables_join(join_type, left_table, left_keys, right_table, right_keys):\n\nReview comment:\n       This is the internal helper, so the plan is not to expose it to endusers. Users will rely on `Table.join` and `Dataset.join`.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-09T08:59:37.429+0000",
                    "updated": "2022-03-09T08:59:37.429+0000",
                    "started": "2022-03-09T08:59:37.428+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738619",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/738620",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#issuecomment-1062696609\n\n\n   > @jorisvandenbossche\r\n   > \r\n   > Added `use_threads` option and added support for excluding the left/right keys on specific joins.\r\n   \r\n   @jorisvandenbossche mind confirming if the PR is now good enough to go? I'd like to start working on support for Datasets and docs.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-09T09:00:10.491+0000",
                    "updated": "2022-03-09T09:00:10.491+0000",
                    "started": "2022-03-09T09:00:10.491+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "738620",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/739559",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#issuecomment-1064207086\n\n\n   @amol- Can you rebase?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-10T15:50:49.522+0000",
                    "updated": "2022-03-10T15:50:49.522+0000",
                    "started": "2022-03-10T15:50:49.522+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "739559",
                    "issueId": "13406103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/worklog/739569",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #12452:\nURL: https://github.com/apache/arrow/pull/12452#issuecomment-1064231559\n\n\n   I would personally prefer to see this comment addressed as well (or at least get some thoughts on it):\r\n   \r\n   > You also need to specify the key column for both left and right table separate. While this is certainly the most generic (since it can handle different names in left and right table), I think it could also be nice to give the user the possibility to just give one name (or list of names) in case it is the same in left/right table (for better ergonomics when using this method)\r\n   \r\n   For the join keys columns in the output: you now selected one of the columns for most joins, but not for outer join, I think? I am not fully sure if we should do something different here for outer join (for example, both pandas and dplyr will only have a single key column in the output also in the case of an outer join)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-10T16:13:08.336+0000",
                    "updated": "2022-03-10T16:13:08.336+0000",
                    "started": "2022-03-10T16:13:08.336+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "739569",
                    "issueId": "13406103"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 32400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5511246[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55757158[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@fa471fc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@71252ee1[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@18060aaa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4e3cddd7[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62bb6e7d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3a3106ed[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@124a085b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3a30bda0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3c1e41d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@31759ce6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 32400,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Mar 29 15:59:20 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-03-29T15:59:19.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14292/watchers",
            "watchCount": 7,
            "isWatching": false
        },
        "created": "2021-10-12T08:24:22.000+0000",
        "updated": "2022-04-01T10:01:29.000+0000",
        "timeoriginalestimate": null,
        "description": "At the moment pyarrow doesn't provide any way to leverage the query execution engine that the C++ layer provides. The goal is to allow a minimal implementation (unexposed to end users) that permits to create an exec plan with multiple inputs and that produces a single output. In between. It should allow to inject as intermediate steps one of the nodes to perform data manipulation.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "9h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 32400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Minimal ExecPlan bindings to perform Table joins in pyarrow",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/comment/17462691",
                    "id": "17462691",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
                        "name": "amol-",
                        "key": "amol-",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
                        },
                        "displayName": "Alessandro Molina",
                        "active": true,
                        "timeZone": "Europe/Rome"
                    },
                    "body": "ARROW-14082 is probably a clone of this one",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-12-20T16:01:12.117+0000",
                    "updated": "2022-02-07T16:11:53.931+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406103/comment/17514166",
                    "id": "17514166",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Issue resolved by pull request 12452\n[https://github.com/apache/arrow/pull/12452]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2022-03-29T15:59:20.002+0000",
                    "updated": "2022-03-29T15:59:20.002+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0vrmw:",
        "customfield_12314139": null
    }
}