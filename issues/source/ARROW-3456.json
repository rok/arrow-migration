{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13189961",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189961",
    "key": "ARROW-3456",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333244",
                "id": "12333244",
                "name": "Continuous Integration"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "aggregateprogress": {
            "progress": 1200,
            "total": 1200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 1200,
            "total": 1200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3456/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 2,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189961/worklog/154026",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2751: ARROW-3456: [CI] Reuse docker images and optimize docker-compose containers\nURL: https://github.com/apache/arrow/pull/2751#issuecomment-429458473\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2751?src=pr&el=h1) Report\n   > Merging [#2751](https://codecov.io/gh/apache/arrow/pull/2751?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/146e7df80cbc316c55a4e63534193dce7271125a?src=pr&el=desc) will **decrease** coverage by `0.08%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2751/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2751?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2751      +/-   ##\n   ==========================================\n   - Coverage   87.65%   87.56%   -0.09%     \n   ==========================================\n     Files         403      403              \n     Lines       61483    61483              \n   ==========================================\n   - Hits        53891    53838      -53     \n   - Misses       7520     7571      +51     \n   - Partials       72       74       +2\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2751?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/math/int64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2751/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hdngyX2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2751/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/float64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2751/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X2F2eDJfYW1kNjQuZ28=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2751/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYXZ4Ml9hbWQ2NC5nbw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/float64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2751/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X2FtZDY0Lmdv) | `33.33% <0%> (-33.34%)` | :arrow_down: |\n   | [go/arrow/math/int64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2751/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hbWQ2NC5nbw==) | `33.33% <0%> (-33.34%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2751/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | `33.33% <0%> (-33.34%)` | :arrow_down: |\n   | [go/arrow/math/math\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2751/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9tYXRoX2FtZDY0Lmdv) | `31.57% <0%> (-31.58%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2751/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hbWQ2NC5nbw==) | `28.57% <0%> (-28.58%)` | :arrow_down: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2751?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2751?src=pr&el=footer). Last update [146e7df...649c49f](https://codecov.io/gh/apache/arrow/pull/2751?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-12T20:51:14.539+0000",
                    "updated": "2018-10-12T20:51:14.539+0000",
                    "started": "2018-10-12T20:51:14.538+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "154026",
                    "issueId": "13189961"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189961/worklog/154126",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2751: ARROW-3456: [CI] Reuse docker images and optimize docker-compose containers\nURL: https://github.com/apache/arrow/pull/2751\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/.dockerignore b/.dockerignore\nindex 61f42f0b44..1c6bc1e124 100644\n--- a/.dockerignore\n+++ b/.dockerignore\n@@ -16,9 +16,11 @@\n # under the License.\n \n .git\n+docker_cache\n \n # IDE\n .vscode\n+*/.vscode\n \n # c_glib\n c_glib/build\n@@ -34,7 +36,12 @@ c_glib/*/.libs\n cpp/.idea\n cpp/build\n cpp/*-build\n+cpp/*_build\n cpp/Testing\n+cpp/thirdparty\n+!cpp/thirdparty/jemalloc\n+!cpp/thirdparty/versions.txt\n+!cpp/thirdparty/hadoop/include\n \n # python\n python/build\ndiff --git a/.gitignore b/.gitignore\nindex e54be5f821..79a2a8e13d 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -41,4 +41,4 @@ python/.eggs/\n pkgs\n .Rproj.user\n arrow.Rcheck/\n-\n+docker_cache\ndiff --git a/c_glib/Dockerfile b/c_glib/Dockerfile\nindex 76fc8cfe13..5d64a5f154 100644\n--- a/c_glib/Dockerfile\n+++ b/c_glib/Dockerfile\n@@ -15,37 +15,19 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-FROM ubuntu:18.04\n+FROM arrow:cpp\n \n ENV DEBIAN_FRONTEND=noninteractive\n-RUN apt-get -q update && \\\n-    apt-get -q install --no-install-recommends -y \\\n-        gcc \\\n-        g++ \\\n-        git \\\n-        wget \\\n+RUN apt-get -q install --no-install-recommends -y \\\n         tzdata \\\n         ruby-dev \\\n         pkg-config \\\n-        ninja-build \\\n         autoconf-archive \\\n         gtk-doc-tools \\\n         libgirepository1.0-dev\n \n-ENV CC=gcc \\\n-    CXX=g++ \\\n-    PATH=/opt/conda/bin:$PATH \\\n-    CONDA_PREFIX=/opt/conda\n-\n-# install dependencies\n-ADD ci/docker_install_conda.sh \\\n-    ci/conda_env_cpp.yml \\\n-    /arrow/ci/\n ADD c_glib/Gemfile /arrow/c_glib/\n-RUN arrow/ci/docker_install_conda.sh && \\\n-    conda install -c conda-forge \\\n-        --file arrow/ci/conda_env_cpp.yml \\\n-        meson=0.47.1 && \\\n+RUN conda install -c conda-forge meson=0.47.1 && \\\n     conda clean --all && \\\n     gem install bundler && \\\n     bundle install --gemfile arrow/c_glib/Gemfile\n@@ -53,20 +35,12 @@ RUN arrow/ci/docker_install_conda.sh && \\\n # build cpp\n ENV ARROW_BUILD_TESTS=OFF \\\n     ARROW_BUILD_UTILITIES=OFF \\\n-    ARROW_INSTALL_NAME_RPATH=OFF\n-ADD ci/docker_build_cpp.sh /arrow/ci/\n-ADD cpp /arrow/cpp\n-ADD format /arrow/format\n-ADD java/pom.xml /arrow/java/pom.xml\n-RUN arrow/ci/docker_build_cpp.sh\n-\n-# build c_glib\n-ENV LD_LIBRARY_PATH=\"${CONDA_PREFIX}/lib\" \\\n+    ARROW_INSTALL_NAME_RPATH=OFF \\\n+    LD_LIBRARY_PATH=\"${CONDA_PREFIX}/lib\" \\\n     PKG_CONFIG_PATH=\"${CONDA_PREFIX}/lib/pkgconfig\" \\\n     GI_TYPELIB_PATH=\"${CONDA_PREFIX}/lib/girepository-1.0\"\n-ADD ci/docker_build_c_glib.sh /arrow/ci/\n-ADD c_glib /arrow/c_glib\n-RUN arrow/ci/docker_build_c_glib.sh\n \n-WORKDIR arrow/c_glib\n-CMD test/run-test.rb\n+# build, install and test\n+CMD arrow/ci/docker_build_cpp.sh && \\\n+    arrow/ci/docker_build_c_glib.sh && \\\n+    arrow/c_glib/test/run-test.rb\ndiff --git a/ci/conda_env_python.yml b/ci/conda_env_python.yml\nindex 43022ae024..37ec65496e 100644\n--- a/ci/conda_env_python.yml\n+++ b/ci/conda_env_python.yml\n@@ -16,7 +16,6 @@\n # under the License.\n \n cython\n-ipython\n nomkl\n numpy\n pandas\ndiff --git a/ci/docker_build_c_glib.sh b/ci/docker_build_c_glib.sh\nindex 7390e79369..28ef9011f1 100755\n--- a/ci/docker_build_c_glib.sh\n+++ b/ci/docker_build_c_glib.sh\n@@ -24,14 +24,15 @@ export ARROW_C_GLIB_HOME=$CONDA_PREFIX\n export CFLAGS=\"-DARROW_NO_DEPRECATED_API\"\n export CXXFLAGS=\"-DARROW_NO_DEPRECATED_API -D_GLIBCXX_USE_CXX11_ABI=0\"\n \n-pushd arrow/c_glib\n-  mkdir build\n+mkdir -p /build/c_glib\n \n-  # Build with Meson\n-  meson build --prefix=$ARROW_C_GLIB_HOME --libdir=lib\n+# Build with Meson\n+meson --prefix=$ARROW_C_GLIB_HOME \\\n+      --libdir=lib \\\n+      /build/c_glib \\\n+      /arrow/c_glib\n \n-  pushd build\n-    ninja\n-    ninja install\n-  popd\n+pushd /build/c_glib\n+  ninja\n+  ninja install\n popd\ndiff --git a/ci/docker_build_cpp.sh b/ci/docker_build_cpp.sh\nindex 16a09f3b0a..f1cf43fd1c 100755\n--- a/ci/docker_build_cpp.sh\n+++ b/ci/docker_build_cpp.sh\n@@ -17,6 +17,7 @@\n # under the License.\n \n set -e\n+set -o xtrace\n \n # Arrow specific environment variables\n export ARROW_BUILD_TOOLCHAIN=$CONDA_PREFIX\n@@ -26,8 +27,8 @@ export PARQUET_HOME=$CONDA_PREFIX\n # https://arrow.apache.org/docs/python/development.html#known-issues\n export CXXFLAGS=\"-D_GLIBCXX_USE_CXX11_ABI=0\"\n \n-mkdir -p arrow/cpp/build\n-pushd arrow/cpp/build\n+mkdir -p /build/cpp\n+pushd /build/cpp\n \n cmake -GNinja \\\n       -DCMAKE_BUILD_TYPE=${ARROW_BUILD_TYPE:-debug} \\\n@@ -42,7 +43,7 @@ cmake -GNinja \\\n       -DARROW_INSTALL_NAME_RPATH=${ARROW_INSTALL_NAME_RPATH:-ON} \\\n       -DARROW_EXTRA_ERROR_CONTEXT=ON \\\n       -DCMAKE_CXX_FLAGS=$CXXFLAGS \\\n-      ..\n+      /arrow/cpp\n ninja\n ninja install\n \ndiff --git a/ci/docker_build_python.sh b/ci/docker_build_python.sh\nindex f145694d25..e89a0b44d6 100755\n--- a/ci/docker_build_python.sh\n+++ b/ci/docker_build_python.sh\n@@ -27,12 +27,13 @@ export PYARROW_CXXFLAGS=$CXXFLAGS\n export PYARROW_CMAKE_GENERATOR=Ninja\n \n # Build pyarrow\n-pushd arrow/python\n+pushd /arrow/python\n \n python setup.py build_ext \\\n-    --build-type=${ARROW_BUILD_TYPE:-debug} \\\n+    --build-temp=/build/python \\\n+    --build-type=${PYARROW_BUILD_TYPE:-debug} \\\n     --with-parquet \\\n     --with-plasma \\\n-    --inplace\n+    install\n \n popd\ndiff --git a/ci/docker_install_conda.sh b/ci/docker_install_conda.sh\nindex 81d5256e08..427ee76e8e 100755\n--- a/ci/docker_install_conda.sh\n+++ b/ci/docker_install_conda.sh\n@@ -20,9 +20,9 @@\n # Exit on any error\n set -e\n \n-wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh\n-bash miniconda.sh -b -q -p ${CONDA_PREFIX:=/opt/conda}\n-rm miniconda.sh\n+wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh\n+bash /tmp/miniconda.sh -b -q -p ${CONDA_PREFIX:=/opt/conda}\n+rm /tmp/miniconda.sh\n \n ln -s ${CONDA_PREFIX}/etc/profile.d/conda.sh /etc/profile.d/conda.sh\n echo \". ${CONDA_PREFIX}/etc/profile.d/conda.sh\" >> ~/.bashrc\ndiff --git a/cpp/Dockerfile b/cpp/Dockerfile\nindex de5b40ec77..2cd0e01785 100644\n--- a/cpp/Dockerfile\n+++ b/cpp/Dockerfile\n@@ -17,20 +17,23 @@\n \n FROM ubuntu:18.04\n \n-RUN apt-get update && \\\n-    apt-get install -y \\\n-        gcc \\\n-        g++ \\\n-        git \\\n-        wget \\\n-        pkg-config \\\n-        ninja-build\n+# install build essentials\n+RUN apt-get update -y -q && \\\n+    apt-get install -y -q --no-install-recommends \\\n+      autoconf \\\n+      automake \\\n+      ca-certificates \\\n+      ccache \\\n+      g++ \\\n+      gcc \\\n+      git \\\n+      ninja-build \\\n+      pkg-config \\\n+      wget\n \n-ENV CC=gcc \\\n-    CXX=g++ \\\n-    PATH=/opt/conda/bin:$PATH \\\n+# install conda and required packages\n+ENV PATH=/opt/conda/bin:$PATH \\\n     CONDA_PREFIX=/opt/conda\n-\n ADD ci/docker_install_conda.sh \\\n     ci/conda_env_cpp.yml \\\n     /arrow/ci/\n@@ -39,15 +42,10 @@ RUN arrow/ci/docker_install_conda.sh && \\\n         --file arrow/ci/conda_env_cpp.yml && \\\n     conda clean --all\n \n-# build cpp with tests\n-ENV ARROW_BUILD_TESTS=ON\n-ADD ci/docker_build_cpp.sh /arrow/ci/\n-ADD cpp /arrow/cpp\n-ADD format /arrow/format\n-ADD java/pom.xml /arrow/java/pom.xml\n-RUN arrow/ci/docker_build_cpp.sh\n+ENV CC=gcc \\\n+    CXX=g++ \\\n+    ARROW_BUILD_TESTS=ON\n \n-# execute the tests\n-WORKDIR arrow/cpp/build\n-ENV PARQUET_TEST_DATA=/arrow/cpp/submodules/parquet-testing/data\n-CMD ninja test\n+# build, install and test\n+CMD arrow/ci/docker_build_cpp.sh && \\\n+    ninja -C /build/cpp test\ndiff --git a/cpp/build-support/iwyu/iwyu.sh b/cpp/build-support/iwyu/iwyu.sh\nindex 865ac8ef59..b970e13976 100755\n--- a/cpp/build-support/iwyu/iwyu.sh\n+++ b/cpp/build-support/iwyu/iwyu.sh\n@@ -33,12 +33,12 @@ IWYU_ARGS=\"--mapping_file=$IWYU_MAPPINGS_PATH/boost-all.imp \\\n     --mapping_file=$IWYU_MAPPINGS_PATH/gflags.imp \\\n     --mapping_file=$IWYU_MAPPINGS_PATH/glog.imp \\\n     --mapping_file=$IWYU_MAPPINGS_PATH/gtest.imp \\\n-     --mapping_file=$IWYU_MAPPINGS_PATH/arrow-misc.imp\"\n+    --mapping_file=$IWYU_MAPPINGS_PATH/arrow-misc.imp\"\n \n set -e\n \n if [ \"$1\" == \"all\" ]; then\n-    python $ROOT/cpp/build-support/iwyu/iwyu_tool.py -p . \\\n+    python $ROOT/cpp/build-support/iwyu/iwyu_tool.py -p ${IWYU_COMPILATION_DATABASE_PATH:-.} \\\n         -- $IWYU_ARGS | awk -f $ROOT/cpp/build-support/iwyu/iwyu-filter.awk\n else\n   # Build the list of updated files which are of IWYU interest.\n@@ -56,7 +56,7 @@ else\n     IWYU_FILE_LIST=\"$IWYU_FILE_LIST $ROOT/$p\"\n   done\n \n-  python $ROOT/cpp/build-support/iwyu/iwyu_tool.py -p . $IWYU_FILE_LIST  -- \\\n+  python $ROOT/cpp/build-support/iwyu/iwyu_tool.py -p ${IWYU_COMPILATION_DATABASE_PATH:-.} $IWYU_FILE_LIST  -- \\\n        $IWYU_ARGS | awk -f $ROOT/cpp/build-support/iwyu/iwyu-filter.awk | \\\n        tee $IWYU_LOG\n fi\ndiff --git a/dev/iwyu/run_iwyu.sh b/dev/iwyu/run_iwyu.sh\ndeleted file mode 100755\nindex 9e2bd7e80a..0000000000\n--- a/dev/iwyu/run_iwyu.sh\n+++ /dev/null\n@@ -1,72 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one or more\n-# contributor license agreements.  See the NOTICE file distributed with\n-# this work for additional information regarding copyright ownership.\n-# The ASF licenses this file to You under the Apache License, Version 2.0\n-# (the \"License\"); you may not use this file except in compliance with\n-# the License.  You may obtain a copy of the License at\n-#\n-#    http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing, software\n-# distributed under the License is distributed on an \"AS IS\" BASIS,\n-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-# See the License for the specific language governing permissions and\n-# limitations under the License.\n-#\n-\n-# Set up environment and working directory\n-CLANG_VERSION=6.0\n-IWYU_BUILD_DIR=/arrow/cpp/docker-iwyu\n-IWYU_SH=/arrow/cpp/build-support/iwyu/iwyu.sh\n-IWYU_URL=https://github.com/include-what-you-use/include-what-you-use/archive/clang_$CLANG_VERSION.tar.gz\n-\n-rm -rf $IWYU_BUILD_DIR\n-mkdir -p $IWYU_BUILD_DIR\n-pushd $IWYU_BUILD_DIR\n-\n-function cleanup {\n-    popd\n-    rm -rf $IWYU_BUILD_DIR\n-}\n-\n-trap cleanup EXIT\n-\n-# Build IWYU\n-wget -O iwyu.tar.gz $IWYU_URL\n-tar xzf iwyu.tar.gz\n-rm -f iwyu.tar.gz\n-\n-IWYU_SRC=`pwd`/include-what-you-use-clang_$CLANG_VERSION\n-\n-export CC=clang-$CLANG_VERSION\n-export CXX=clang++-$CLANG_VERSION\n-\n-mkdir -p iwyu-build\n-pushd iwyu-build\n-\n-# iwyu needs this\n-apt-get install -y zlib1g-dev\n-\n-source activate pyarrow-dev\n-\n-cmake -G \"Unix Makefiles\" -DIWYU_LLVM_ROOT_PATH=/usr/lib/llvm-$CLANG_VERSION $IWYU_SRC\n-make -j4\n-popd\n-\n-# Add iwyu and iwyu_tool.py to path\n-export PATH=$IWYU_BUILD_DIR/iwyu-build:$PATH\n-\n-export ARROW_BUILD_TOOLCHAIN=$CONDA_PREFIX\n-\n-cmake -GNinja \\\n-      -DARROW_PARQUET=ON \\\n-      -DARROW_PYTHON=ON \\\n-      -DCMAKE_CXX_FLAGS='-D_GLIBCXX_USE_CXX11_ABI=0' \\\n-      -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..\n-\n-# Make so that vendored bits are built\n-ninja arrow_shared\n-\n-$IWYU_SH all\ndiff --git a/dev/lint/Dockerfile b/dev/lint/Dockerfile\nindex 9b9d2c564c..71d7ec85a8 100644\n--- a/dev/lint/Dockerfile\n+++ b/dev/lint/Dockerfile\n@@ -15,34 +15,17 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-FROM ubuntu:18.04\n+FROM arrow:python-3.6\n \n-RUN apt-get update && \\\n-    apt-get install -y \\\n-        gcc \\\n-        g++ \\\n-        git \\\n-        wget \\\n-        pkg-config \\\n-        ninja-build \\\n-        clang-format \\\n-        clang-tidy\n+RUN apt-get install -y -q \\\n+      libclang-dev \\\n+      clang \\\n+      clang-format \\\n+      clang-tidy \\\n+      iwyu\n \n-ENV CC=gcc \\\n-    CXX=g++ \\\n-    PATH=/opt/conda/bin:$PATH \\\n-    CONDA_PREFIX=/opt/conda\n-\n-ADD ci/docker_install_conda.sh \\\n-    ci/conda_env_cpp.yml \\\n-    /arrow/ci/\n-RUN arrow/ci/docker_install_conda.sh && \\\n-    conda install -c conda-forge \\\n-        --file arrow/ci/conda_env_cpp.yml flake8 && \\\n+RUN conda install -c conda-forge flake8 && \\\n     conda clean --all -y\n \n-ADD dev/lint/run_checks.sh /run_checks.sh\n-ADD dev/lint/run_clang_format.sh /run_clang_format.sh\n-\n-WORKDIR /tmp\n-CMD /run_checks.sh\n+# https://bugs.launchpad.net/ubuntu/+source/iwyu/+bug/1769334\n+RUN ln -sv /usr/lib/clang/6.0 /usr/lib/clang/5.0.1\ndiff --git a/dev/lint/run_clang_format.sh b/dev/lint/run_clang_format.sh\nindex 2f70836c28..1f0f28b26b 100755\n--- a/dev/lint/run_clang_format.sh\n+++ b/dev/lint/run_clang_format.sh\n@@ -18,8 +18,8 @@\n \n set -ex\n \n-mkdir build_cpp\n-pushd build_cpp\n-cmake -GNinja /arrow/cpp\n-ninja format\n+mkdir -p /build/lint\n+pushd /build/lint\n+  cmake -GNinja /arrow/cpp\n+  ninja format\n popd\ndiff --git a/dev/iwyu/Dockerfile b/dev/lint/run_iwyu.sh\nold mode 100644\nnew mode 100755\nsimilarity index 63%\nrename from dev/iwyu/Dockerfile\nrename to dev/lint/run_iwyu.sh\nindex 817472056b..3f39357ae3\n--- a/dev/iwyu/Dockerfile\n+++ b/dev/lint/run_iwyu.sh\n@@ -1,3 +1,4 @@\n+#!/usr/bin/env bash\n #\n # Licensed to the Apache Software Foundation (ASF) under one or more\n # contributor license agreements.  See the NOTICE file distributed with\n@@ -15,9 +16,21 @@\n # limitations under the License.\n #\n \n-FROM arrow_integration_xenial_base\n+export ARROW_BUILD_TOOLCHAIN=$CONDA_PREFIX\n \n-ADD dev/iwyu/run_iwyu.sh /run_iwyu.sh\n+mkdir -p /build/lint\n+pushd /build/lint\n \n-WORKDIR /tmp\n-CMD /run_iwyu.sh\n\\ No newline at end of file\n+cmake -GNinja \\\n+      -DARROW_PARQUET=ON \\\n+      -DARROW_PYTHON=ON \\\n+      -DCMAKE_CXX_FLAGS='-D_GLIBCXX_USE_CXX11_ABI=0' \\\n+      -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\\n+      /arrow/cpp\n+# Make so that vendored bits are built\n+ninja arrow_shared\n+\n+popd\n+\n+export IWYU_COMPILATION_DATABASE_PATH=/build/lint\n+/arrow/cpp/build-support/iwyu/iwyu.sh all\ndiff --git a/dev/lint/run_checks.sh b/dev/lint/run_linters.sh\nsimilarity index 82%\nrename from dev/lint/run_checks.sh\nrename to dev/lint/run_linters.sh\nindex 6e7a63d8ee..1b549aa40e 100755\n--- a/dev/lint/run_checks.sh\n+++ b/dev/lint/run_linters.sh\n@@ -18,14 +18,14 @@\n \n set -ex\n \n-mkdir build_cpp\n-pushd build_cpp\n-cmake -GNinja /arrow/cpp\n-ninja check-format\n-ninja lint\n+mkdir -p /build/lint\n+pushd /build/lint\n+  cmake -GNinja /arrow/cpp\n+  ninja check-format\n+  ninja lint\n popd\n \n pushd /arrow/python\n-flake8 --count pyarrow\n-flake8 --count --config=.flake8.cython pyarrow\n+  flake8 --count pyarrow\n+  flake8 --count --config=.flake8.cython pyarrow\n popd\ndiff --git a/docker-compose.yml b/docker-compose.yml\nindex 62c300328c..9ee2b445d7 100644\n--- a/docker-compose.yml\n+++ b/docker-compose.yml\n@@ -15,33 +15,54 @@\n # specific language governing permissions and limitations\n # under the License.\n \n+# Development containers for Arrow\n+\n version: '3.5'\n-services:\n \n-  # we can further improve the caching mechanism for go rust and js via\n-  # early adding the dependencies explicitly (cargo.toml etc) to prevent\n-  # reinstalling the dependencies on each modification\n+x-volumes:\n+  &volumes\n+  - .:/arrow:delegated\n+  - ${ARROW_DOCKER_CACHE_DIR:-./docker_cache}:/build:delegated\n+\n+services:\n \n   ######################### Language Containers ###############################\n \n+  #TODO(kszucs): R\n+\n   c_glib:\n+    # Usage:\n+    #   docker-compose build cpp\n+    #   docker-compose build c_glib\n+    #   docker-compose run c_glib\n     image: arrow:c_glib\n     build:\n       context: .\n       dockerfile: c_glib/Dockerfile\n+    volumes: *volumes\n \n   cpp:\n+    # Usage:\n+    #   docker-compose build cpp\n+    #   docker-compose run cpp\n     image: arrow:cpp\n     shm_size: 2G\n     build:\n       context: .\n       dockerfile: cpp/Dockerfile\n+    environment:\n+      PARQUET_TEST_DATA: /arrow/cpp/submodules/parquet-testing/data\n+    volumes: *volumes\n \n   go:\n+    # Usage:\n+    #   docker-compose build go\n+    #   docker-compose run go\n     image: arrow:go\n     build:\n       context: .\n       dockerfile: go/Dockerfile\n+    volumes: *volumes\n \n   java:\n     image: arrow:java\n@@ -56,6 +77,11 @@ services:\n       dockerfile: js/Dockerfile\n \n   python:\n+    # Usage:\n+    #   export PYTHON_VERSION=3.6\n+    #   docker-compose build cpp\n+    #   docker-compose build python\n+    #   docker-compose run python\n     image: arrow:python-${PYTHON_VERSION:-3.6}\n     shm_size: 2G\n     build:\n@@ -63,14 +89,52 @@ services:\n       dockerfile: python/Dockerfile\n       args:\n         PYTHON_VERSION: ${PYTHON_VERSION:-3.6}\n-\n-  #TODO(kszucs): R\n+    volumes: *volumes\n \n   rust:\n+    # Usage:\n+    #   docker-compose build rust\n+    #   docker-compose run rust\n     image: arrow:rust\n     build:\n       context: .\n       dockerfile: rust/Dockerfile\n+    volumes: *volumes\n+\n+  ######################### Tools and Linters #################################\n+\n+  # TODO(kszucs): site\n+  # TODO(kszucs): apidoc\n+\n+  lint:\n+    # Usage:\n+    #   docker-compose build lint\n+    #   docker-compose run lint\n+    image: arrow:lint\n+    build:\n+      context: .\n+      dockerfile: dev/lint/Dockerfile\n+    command: arrow/dev/lint/run_linters.sh\n+    volumes: *volumes\n+\n+  iwyu:\n+    # Usage:\n+    #   docker-compose build lint\n+    #   docker-compose run iwyu\n+    image: arrow:lint\n+    environment:\n+      CC: clang\n+      CXX: clang++\n+    command: arrow/dev/lint/run_iwyu.sh\n+    volumes: *volumes\n+\n+  clang-format:\n+    # Usage:\n+    #   docker-compose build lint\n+    #   docker-compose run clang-format\n+    image: arrow:lint\n+    command: arrow/dev/lint/run_clang_format.sh\n+    volumes: *volumes\n \n   ######################### Integration Tests #################################\n \n@@ -100,6 +164,12 @@ services:\n       - hdfs-namenode:hdfs-namenode\n \n   hdfs-integration:\n+    # Usage:\n+    #   export PYTHON_VERSION=3.6\n+    #   docker-compose build cpp\n+    #   docker-compose build python\n+    #   docker-compose build hdfs-integration\n+    #   docker-compose run hdfs-integration\n     links:\n       - hdfs-namenode:hdfs-namenode\n       - hdfs-datanode:hdfs-datanode\n@@ -111,39 +181,6 @@ services:\n       context: .\n       dockerfile: integration/hdfs/Dockerfile\n \n-  lint:\n-    image: arrow:lint\n-    shm_size: 2G\n-    build:\n-      context: .\n-      dockerfile: dev/lint/Dockerfile\n-    volumes:\n-      - .:/arrow:delegated\n-\n-  # Depends on xenial base image, see dev/README.md\n-  iwyu:\n-    image: arrow:iwyu\n-    build:\n-      context: .\n-      dockerfile: dev/iwyu/Dockerfile\n-    volumes:\n-      - .:/arrow:delegated\n-\n-  clang-format:\n-    image: arrow:lint\n-    shm_size: 2G\n-    command: '/run_clang_format.sh'\n-    build:\n-      context: .\n-      dockerfile: dev/lint/Dockerfile\n-    volumes:\n-      - .:/arrow:delegated\n-\n   # TODO(kszucs): dask-integration\n   # TODO(kszucs): hive-integration\n   # TODO(kszucs): spark-integration\n-\n-  ######################### Documentation #####################################\n-\n-  # TODO(kszucs): site\n-  # TODO(kszucs): apidoc\ndiff --git a/go/Dockerfile b/go/Dockerfile\nindex 860f7d6098..8261e1f0e0 100644\n--- a/go/Dockerfile\n+++ b/go/Dockerfile\n@@ -17,9 +17,12 @@\n \n FROM golang\n \n-ADD go /arrow/go\n+ADD go/arrow/Gopkg.lock \\\n+    go/arrow/Gopkg.toml \\\n+    /arrow/go/arrow/\n WORKDIR /arrow/go/arrow\n \n-RUN go get -d -t -v ./... && \\\n-    go install -v ./...\n-CMD go test\n+RUN go get -d -t -v ./...\n+\n+CMD go install -v ./... && \\\n+    for d in $(go list ./... | grep -v vendor); do go test $d; done\ndiff --git a/integration/hdfs/Dockerfile b/integration/hdfs/Dockerfile\nindex 87d4e31489..a1d3e4eb0a 100644\n--- a/integration/hdfs/Dockerfile\n+++ b/integration/hdfs/Dockerfile\n@@ -19,6 +19,9 @@ FROM gelog/hadoop\n \n RUN apt-get update && \\\n     apt-get install -y \\\n+        autoconf \\\n+        automake \\\n+        make \\\n         gcc \\\n         g++ \\\n         git \\\ndiff --git a/python/Dockerfile b/python/Dockerfile\nindex f143ccab33..41d0441884 100644\n--- a/python/Dockerfile\n+++ b/python/Dockerfile\n@@ -15,48 +15,21 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-FROM ubuntu:18.04\n+FROM arrow:cpp\n \n-RUN apt-get update && \\\n-    apt-get install -y \\\n-        gcc \\\n-        g++ \\\n-        git \\\n-        wget \\\n-        pkg-config \\\n-        ninja-build\n-\n-ENV CC=gcc \\\n-    CXX=g++ \\\n-    PATH=/opt/conda/bin:$PATH \\\n-    CONDA_PREFIX=/opt/conda\n-\n-# install dependencies\n+# install python specific packages\n ARG PYTHON_VERSION=3.6\n-ADD ci/docker_install_conda.sh \\\n-    ci/conda_env_cpp.yml \\\n-    ci/conda_env_python.yml \\\n-    /arrow/ci/\n-RUN arrow/ci/docker_install_conda.sh && \\\n-    conda install -c conda-forge \\\n-        --file arrow/ci/conda_env_cpp.yml \\\n-        --file arrow/ci/conda_env_python.yml \\\n+ADD ci/conda_env_python.yml /arrow/ci/\n+RUN conda install -c conda-forge \\\n+        --file arrow/ci/conda_env_python.yml && \\\n         python=$PYTHON_VERSION && \\\n     conda clean --all\n \n-# build cpp without tests\n-ENV ARROW_PYTHON=ON \\\n-    ARROW_BUILD_TESTS=OFF\n-ADD ci/docker_build_cpp.sh /arrow/ci/\n-ADD cpp /arrow/cpp\n-ADD format /arrow/format\n-ADD java/pom.xml /arrow/java/pom.xml\n-RUN arrow/ci/docker_build_cpp.sh\n-\n-# build python\n-ADD ci/docker_build_python.sh /arrow/ci/\n-ADD python /arrow/python\n-RUN arrow/ci/docker_build_python.sh\n+ENV CC=gcc \\\n+    CXX=g++ \\\n+    ARROW_PYTHON=ON\n \n-WORKDIR arrow/python\n-CMD pytest -v pyarrow\n+# build and test\n+CMD arrow/ci/docker_build_cpp.sh && \\\n+    arrow/ci/docker_build_python.sh && \\\n+    pytest -v --pyargs pyarrow\ndiff --git a/rust/Dockerfile b/rust/Dockerfile\nindex 6ad57c3e2a..c63dcda79d 100644\n--- a/rust/Dockerfile\n+++ b/rust/Dockerfile\n@@ -17,8 +17,10 @@\n \n FROM rust\n \n-ADD rust /arrow/rust\n+# sadly cargo doesn't have a command to fetch and build the\n+# dependencies without building the library itself\n+ENV CARGO_TARGET_DIR=/build/rust\n+ADD rust/Cargo.toml /arrow/rust/Cargo.toml\n WORKDIR /arrow/rust\n \n-RUN cargo build\n CMD cargo test\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-13T21:42:03.467+0000",
                    "updated": "2018-10-13T21:42:03.467+0000",
                    "started": "2018-10-13T21:42:03.467+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "154126",
                    "issueId": "13189961"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 1200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4aa58b15[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5cb04cbc[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3bf56ee0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@657e008e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@38a71f5c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@10bacec0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@282059[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@15472aa2[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@151a8aa9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@53108a04[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@127b52d7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3e456800[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 1200,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Oct 13 21:41:53 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-10-13T21:41:53.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3456/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-10-07T18:13:29.000+0000",
        "updated": "2018-10-13T21:42:03.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 1200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[CI] Reuse docker images and optimize docker-compose containers",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189961/comment/16646358",
                    "id": "16646358",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "[~wesmckinn] Do We need the most recent iwyu, thus building from source?\r\n\r\nUbuntu 18.04 ships:\r\n{code:bash}\r\nroot@a20dc552bc25:/# iwyu --version\r\ninclude-what-you-use 0.9 based on clang version 5.0.1-2 (tags/RELEASE_501/final)\r\n{code}\r\n\r\nUbuntu 18.10 ships:\r\n{code:bash}\r\nroot@79e22d520a56:/# iwyu --version\r\ninclude-what-you-use 0.10 based on clang version 7.0.0-2 (tags/RELEASE_700/final)\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2018-10-11T12:11:02.367+0000",
                    "updated": "2018-10-11T12:11:24.026+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189961/comment/16646362",
                    "id": "16646362",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I think we need to use the iwyu branch corresponding to the version of libclang we are using. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-10-11T12:16:58.823+0000",
                    "updated": "2018-10-11T12:16:58.823+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189961/comment/16646371",
                    "id": "16646371",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "On 18.04 they are not corresponding:\r\n{code:bash}\r\nroot@a20dc552bc25:/# iwyu --version\r\ninclude-what-you-use 0.9 based on clang version 5.0.1-2 (tags/RELEASE_501/final)\r\nroot@a20dc552bc25:/# clang -v\r\nclang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)\r\nTarget: x86_64-pc-linux-gnu\r\nThread model: posix\r\nInstalledDir: /usr/bin\r\nFound candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/7\r\nFound candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/7.3.0\r\nFound candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/8\r\nFound candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7\r\nFound candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7.3.0\r\nFound candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/8\r\nSelected GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/7.3.0\r\nCandidate multilib: .;@m64\r\nSelected multilib: .;@m64\r\nroot@a20dc552bc25:/#\r\n{code}\r\n\r\nin contrary of 18.10\r\n{code:bash}\r\nroot@79e22d520a56:/# iwyu --version\r\ninclude-what-you-use 0.10 based on clang version 7.0.0-2 (tags/RELEASE_700/final)\r\nroot@79e22d520a56:/# clang -v\r\nclang version 7.0.0-3 (tags/RELEASE_700/final)\r\nTarget: x86_64-pc-linux-gnu\r\nThread model: posix\r\nInstalledDir: /usr/bin\r\nFound candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/8\r\nFound candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/8\r\nSelected GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/8\r\nCandidate multilib: .;@m64\r\nSelected multilib: .;@m64\r\n{code}\r\n\r\nWhich clang version shoulw We prefer in the docker builds? ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2018-10-11T12:25:51.724+0000",
                    "updated": "2018-10-11T12:25:51.724+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189961/comment/16646732",
                    "id": "16646732",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "We should use clang 6 until the whole project moves to clang 7 / LLVM 7",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-10-11T16:34:38.970+0000",
                    "updated": "2018-10-11T16:34:38.970+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189961/comment/16649130",
                    "id": "16649130",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2751\n[https://github.com/apache/arrow/pull/2751]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-10-13T21:41:53.275+0000",
                    "updated": "2018-10-13T21:41:53.275+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|i3yx7j:",
        "customfield_12314139": null
    }
}