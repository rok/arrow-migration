{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13366826",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366826",
    "key": "ARROW-12050",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12050/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 12,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366826/worklog/596323",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request #10318:\nURL: https://github.com/apache/arrow/pull/10318\n\n\n   This uses a stop token to let interactive users interrupt a long-running Flight operation. It's not perfect: the operation won't be cancelled until the server delivers a message, so this doesn't protect against very slow servers. (In that case, we'd need some way for the stop source to call TryCancel() on the gRPC RPC object, which would be tricky.) But so long as the server is being responsive, this means Ctrl-C should do what people expect in Python.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T19:22:00.099+0000",
                    "updated": "2021-05-13T19:22:00.099+0000",
                    "started": "2021-05-13T19:22:00.098+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596323",
                    "issueId": "13366826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366826/worklog/596324",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10318:\nURL: https://github.com/apache/arrow/pull/10318#issuecomment-840778565\n\n\n   https://issues.apache.org/jira/browse/ARROW-12050\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T19:22:13.838+0000",
                    "updated": "2021-05-13T19:22:13.838+0000",
                    "started": "2021-05-13T19:22:13.838+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596324",
                    "issueId": "13366826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366826/worklog/598982",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on pull request #10318:\nURL: https://github.com/apache/arrow/pull/10318#issuecomment-843705951\n\n\n   Not quite sure of the issue addressed.\r\n   Is it possible to reproduce the issue on my local host and verify the fix?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T02:59:01.968+0000",
                    "updated": "2021-05-19T02:59:01.968+0000",
                    "started": "2021-05-19T02:59:01.967+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "598982",
                    "issueId": "13366826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366826/worklog/599165",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10318:\nURL: https://github.com/apache/arrow/pull/10318#issuecomment-844030751\n\n\n   It solves a problem for Python users: if you Ctrl-C in something like read_all(), nothing will happen because control is in C++/Flight code, and then you're stuck waiting for the call to complete. \r\n   \r\n   If you apply this diff to python/examples/flight/server.py:\r\n   ```diff\r\n   diff --git a/python/examples/flight/server.py b/python/examples/flight/server.py\r\n   index 7a6b6697e..bc1df21d1 100644\r\n   --- a/python/examples/flight/server.py\r\n   +++ b/python/examples/flight/server.py\r\n   @@ -73,6 +73,7 @@ class FlightServer(pyarrow.flight.FlightServerBase):\r\n                yield self._make_flight_info(key, descriptor, table)\r\n    \r\n        def get_flight_info(self, context, descriptor):\r\n   +        return self._make_flight_info(\"\", descriptor, pyarrow.schema([]).empty_table())\r\n            key = FlightServer.descriptor_to_key(descriptor)\r\n            if key in self.flights:\r\n                table = self.flights[key]\r\n   @@ -86,10 +87,10 @@ class FlightServer(pyarrow.flight.FlightServerBase):\r\n            print(self.flights[key])\r\n    \r\n        def do_get(self, context, ticket):\r\n   -        key = ast.literal_eval(ticket.ticket.decode())\r\n   -        if key not in self.flights:\r\n   -            return None\r\n   -        return pyarrow.flight.RecordBatchStream(self.flights[key])\r\n   +        import itertools\r\n   +        schema = pyarrow.schema([])\r\n   +        rb = pyarrow.RecordBatch.from_arrays([], schema=schema)\r\n   +        return pyarrow.flight.GeneratorStream(schema, itertools.repeat(rb))\r\n    \r\n        def list_actions(self, context):\r\n            return [\r\n   ```\r\n   \r\n   Then you can start the server:\r\n   \r\n   ```sh\r\n   arrow/python$ env PYTHONPATH=$(pwd) python examples/flight/server.py --port 2000 &\r\n   arrow/python$ env PYTHONPATH=(pwd) python examples/flight/client.py get localhost:2000 -c foo\r\n   ```\r\n   \r\n   Without this patch, if you Ctrl-C, your client will still be stuck forever. With this patch you'll interrupt the call as expected.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T11:56:11.018+0000",
                    "updated": "2021-05-19T11:56:11.018+0000",
                    "started": "2021-05-19T11:56:11.017+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599165",
                    "issueId": "13366826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366826/worklog/605277",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10318:\nURL: https://github.com/apache/arrow/pull/10318#discussion_r644072551\n\n\n\n##########\nFile path: cpp/src/arrow/flight/client.h\n##########\n@@ -129,6 +133,12 @@ class ARROW_FLIGHT_EXPORT FlightStreamReader : public MetadataRecordBatchReader\n  public:\n   /// \\brief Try to cancel the call.\n   virtual void Cancel() = 0;\n+  using MetadataRecordBatchReader::ReadAll;\n+  /// \\brief Consume entire stream as a vector of record batches\n+  virtual Status ReadAll(std::vector<std::shared_ptr<RecordBatch>>* batches,\n+                         const StopToken& stop_token) = 0;\n+  /// \\brief Consume entire stream as a Table\n+  virtual Status ReadAll(std::shared_ptr<Table>* table, const StopToken& stop_token) = 0;\n\nReview comment:\n       Is there a reason for the `Table` version to be virtual? It seems it can simply be implemented in the base class...?\r\n   \r\n   Of course, it doesn't matter much as long as we have only one implementation of this.\n\n##########\nFile path: python/pyarrow/tests/test_flight.py\n##########\n@@ -1810,3 +1813,62 @@ def test_generic_options():\n                                 generic_options=options)\n         with pytest.raises(pa.ArrowInvalid):\n             client.do_get(flight.Ticket(b'ints'))\n+\n+\n+class CancelFlightServer(FlightServerBase):\n+    \"\"\"A server for testing StopToken.\"\"\"\n+\n+    def do_get(self, context, ticket):\n+        schema = pa.schema([])\n+        rb = pa.RecordBatch.from_arrays([], schema=schema)\n+        return flight.GeneratorStream(schema, itertools.repeat(rb))\n+\n+    def do_exchange(self, context, descriptor, reader, writer):\n+        schema = pa.schema([])\n+        rb = pa.RecordBatch.from_arrays([], schema=schema)\n+        writer.begin(schema)\n+        while not context.is_cancelled():\n+            # TODO: writing schema.empty_table() here hangs/fails\n+            writer.write_batch(rb)\n\nReview comment:\n       Would this raise an exception if the context is cancelled, or just succeed immediately?\n\n##########\nFile path: python/pyarrow/tests/test_flight.py\n##########\n@@ -1810,3 +1813,62 @@ def test_generic_options():\n                                 generic_options=options)\n         with pytest.raises(pa.ArrowInvalid):\n             client.do_get(flight.Ticket(b'ints'))\n+\n+\n+class CancelFlightServer(FlightServerBase):\n+    \"\"\"A server for testing StopToken.\"\"\"\n+\n+    def do_get(self, context, ticket):\n+        schema = pa.schema([])\n+        rb = pa.RecordBatch.from_arrays([], schema=schema)\n+        return flight.GeneratorStream(schema, itertools.repeat(rb))\n+\n+    def do_exchange(self, context, descriptor, reader, writer):\n+        schema = pa.schema([])\n+        rb = pa.RecordBatch.from_arrays([], schema=schema)\n+        writer.begin(schema)\n+        while not context.is_cancelled():\n+            # TODO: writing schema.empty_table() here hangs/fails\n+            writer.write_batch(rb)\n+            time.sleep(0.5)\n+\n+\n+def test_interrupt():\n+    if threading.current_thread().ident != threading.main_thread().ident:\n+        pytest.skip(\"test only works from main Python thread\")\n+    # Skips test if not available\n+    raise_signal = util.get_raise_signal()\n+\n+    def signal_from_thread():\n+        time.sleep(0.5)\n+        raise_signal(signal.SIGINT)\n+\n+    exc_types = (KeyboardInterrupt, pa.ArrowCancelled)\n+\n+    def test(read_all):\n+        try:\n+            try:\n+                t = threading.Thread(target=signal_from_thread)\n+                with pytest.raises(exc_types) as exc_info:\n+                    t.start()\n+                    read_all()\n+            finally:\n+                t.join()\n+        except KeyboardInterrupt:\n+            # In case KeyboardInterrupt didn't interrupt read_all\n+            # above, at least prevent it from stopping the test suite\n+            # pytest.fail(\"KeyboardInterrupt didn't interrupt Flight read_all\")\n+            raise\n+        e = exc_info.value.__context__\n+        assert isinstance(e, pa.ArrowCancelled) or isinstance(\n+            e, pa.ArrowCancelled)\n\nReview comment:\n       Am I reading this wrong, or is this twice the same condition?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-02T15:36:35.094+0000",
                    "updated": "2021-06-02T15:36:35.094+0000",
                    "started": "2021-06-02T15:36:35.093+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "605277",
                    "issueId": "13366826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366826/worklog/605278",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #10318:\nURL: https://github.com/apache/arrow/pull/10318#issuecomment-853132348\n\n\n   As a sidenote, I think we'll need to allow adding a callback on a StopToken, so that arbitrary callables such as gRPC's `TryCancel` can be called. I'll open a JIRA for it.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-02T15:37:48.510+0000",
                    "updated": "2021-06-02T15:37:48.510+0000",
                    "started": "2021-06-02T15:37:48.510+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "605278",
                    "issueId": "13366826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366826/worklog/605290",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou edited a comment on pull request #10318:\nURL: https://github.com/apache/arrow/pull/10318#issuecomment-853132348\n\n\n   As a sidenote, I think we'll need to allow adding a callback on a StopToken, so that arbitrary callables such as gRPC's `TryCancel` can be called. I'll open a JIRA for it: https://issues.apache.org/jira/browse/ARROW-12938\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-02T15:46:52.199+0000",
                    "updated": "2021-06-02T15:46:52.199+0000",
                    "started": "2021-06-02T15:46:52.199+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "605290",
                    "issueId": "13366826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366826/worklog/605291",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou edited a comment on pull request #10318:\nURL: https://github.com/apache/arrow/pull/10318#issuecomment-853132348\n\n\n   As a sidenote, I think we'll need to allow adding a callback on a StopToken, so that arbitrary callables such as gRPC's `TryCancel` can be called. I opened a JIRA for it: https://issues.apache.org/jira/browse/ARROW-12938\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-02T15:47:06.836+0000",
                    "updated": "2021-06-02T15:47:06.836+0000",
                    "started": "2021-06-02T15:47:06.835+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "605291",
                    "issueId": "13366826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366826/worklog/605345",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10318:\nURL: https://github.com/apache/arrow/pull/10318#discussion_r644146344\n\n\n\n##########\nFile path: python/pyarrow/tests/test_flight.py\n##########\n@@ -1810,3 +1813,62 @@ def test_generic_options():\n                                 generic_options=options)\n         with pytest.raises(pa.ArrowInvalid):\n             client.do_get(flight.Ticket(b'ints'))\n+\n+\n+class CancelFlightServer(FlightServerBase):\n+    \"\"\"A server for testing StopToken.\"\"\"\n+\n+    def do_get(self, context, ticket):\n+        schema = pa.schema([])\n+        rb = pa.RecordBatch.from_arrays([], schema=schema)\n+        return flight.GeneratorStream(schema, itertools.repeat(rb))\n+\n+    def do_exchange(self, context, descriptor, reader, writer):\n+        schema = pa.schema([])\n+        rb = pa.RecordBatch.from_arrays([], schema=schema)\n+        writer.begin(schema)\n+        while not context.is_cancelled():\n+            # TODO: writing schema.empty_table() here hangs/fails\n+            writer.write_batch(rb)\n\nReview comment:\n       It should raise an exception, but either way, the client is gone at this point so there's not much the server can do.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-02T16:44:44.389+0000",
                    "updated": "2021-06-02T16:44:44.389+0000",
                    "started": "2021-06-02T16:44:44.389+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "605345",
                    "issueId": "13366826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366826/worklog/605353",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10318:\nURL: https://github.com/apache/arrow/pull/10318#discussion_r644150016\n\n\n\n##########\nFile path: python/pyarrow/tests/test_flight.py\n##########\n@@ -1810,3 +1813,62 @@ def test_generic_options():\n                                 generic_options=options)\n         with pytest.raises(pa.ArrowInvalid):\n             client.do_get(flight.Ticket(b'ints'))\n+\n+\n+class CancelFlightServer(FlightServerBase):\n+    \"\"\"A server for testing StopToken.\"\"\"\n+\n+    def do_get(self, context, ticket):\n+        schema = pa.schema([])\n+        rb = pa.RecordBatch.from_arrays([], schema=schema)\n+        return flight.GeneratorStream(schema, itertools.repeat(rb))\n+\n+    def do_exchange(self, context, descriptor, reader, writer):\n+        schema = pa.schema([])\n+        rb = pa.RecordBatch.from_arrays([], schema=schema)\n+        writer.begin(schema)\n+        while not context.is_cancelled():\n+            # TODO: writing schema.empty_table() here hangs/fails\n+            writer.write_batch(rb)\n\nReview comment:\n       Ok, I was just wondering if the server could end up spending more time than necessary here :-)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-02T16:50:07.806+0000",
                    "updated": "2021-06-02T16:50:07.806+0000",
                    "started": "2021-06-02T16:50:07.806+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "605353",
                    "issueId": "13366826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366826/worklog/605358",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10318:\nURL: https://github.com/apache/arrow/pull/10318#discussion_r644153441\n\n\n\n##########\nFile path: cpp/src/arrow/flight/client.h\n##########\n@@ -129,6 +133,12 @@ class ARROW_FLIGHT_EXPORT FlightStreamReader : public MetadataRecordBatchReader\n  public:\n   /// \\brief Try to cancel the call.\n   virtual void Cancel() = 0;\n+  using MetadataRecordBatchReader::ReadAll;\n+  /// \\brief Consume entire stream as a vector of record batches\n+  virtual Status ReadAll(std::vector<std::shared_ptr<RecordBatch>>* batches,\n+                         const StopToken& stop_token) = 0;\n+  /// \\brief Consume entire stream as a Table\n+  virtual Status ReadAll(std::shared_ptr<Table>* table, const StopToken& stop_token) = 0;\n\nReview comment:\n       I made this non-virtual.\n\n##########\nFile path: python/pyarrow/tests/test_flight.py\n##########\n@@ -1810,3 +1813,62 @@ def test_generic_options():\n                                 generic_options=options)\n         with pytest.raises(pa.ArrowInvalid):\n             client.do_get(flight.Ticket(b'ints'))\n+\n+\n+class CancelFlightServer(FlightServerBase):\n+    \"\"\"A server for testing StopToken.\"\"\"\n+\n+    def do_get(self, context, ticket):\n+        schema = pa.schema([])\n+        rb = pa.RecordBatch.from_arrays([], schema=schema)\n+        return flight.GeneratorStream(schema, itertools.repeat(rb))\n+\n+    def do_exchange(self, context, descriptor, reader, writer):\n+        schema = pa.schema([])\n+        rb = pa.RecordBatch.from_arrays([], schema=schema)\n+        writer.begin(schema)\n+        while not context.is_cancelled():\n+            # TODO: writing schema.empty_table() here hangs/fails\n+            writer.write_batch(rb)\n+            time.sleep(0.5)\n+\n+\n+def test_interrupt():\n+    if threading.current_thread().ident != threading.main_thread().ident:\n+        pytest.skip(\"test only works from main Python thread\")\n+    # Skips test if not available\n+    raise_signal = util.get_raise_signal()\n+\n+    def signal_from_thread():\n+        time.sleep(0.5)\n+        raise_signal(signal.SIGINT)\n+\n+    exc_types = (KeyboardInterrupt, pa.ArrowCancelled)\n+\n+    def test(read_all):\n+        try:\n+            try:\n+                t = threading.Thread(target=signal_from_thread)\n+                with pytest.raises(exc_types) as exc_info:\n+                    t.start()\n+                    read_all()\n+            finally:\n+                t.join()\n+        except KeyboardInterrupt:\n+            # In case KeyboardInterrupt didn't interrupt read_all\n+            # above, at least prevent it from stopping the test suite\n+            # pytest.fail(\"KeyboardInterrupt didn't interrupt Flight read_all\")\n+            raise\n+        e = exc_info.value.__context__\n+        assert isinstance(e, pa.ArrowCancelled) or isinstance(\n+            e, pa.ArrowCancelled)\n\nReview comment:\n       I meant for the second to be KeyboardInterrupt.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-02T16:54:56.945+0000",
                    "updated": "2021-06-02T16:54:56.945+0000",
                    "started": "2021-06-02T16:54:56.944+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "605358",
                    "issueId": "13366826"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366826/worklog/607973",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #10318:\nURL: https://github.com/apache/arrow/pull/10318\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-07T16:27:52.706+0000",
                    "updated": "2021-06-07T16:27:52.706+0000",
                    "started": "2021-06-07T16:27:52.706+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "607973",
                    "issueId": "13366826"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": 7200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@c2931fb[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@33fe7bbb[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@49106865[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@9f3e15f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6bae32d7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7eff8525[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@346699df[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@22896f15[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@382bc919[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3a7fb594[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3a576b65[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@534f5afd[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7200,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Jun 07 16:27:40 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-06-07T16:27:40.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12050/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-03-22T21:52:36.000+0000",
        "updated": "2021-06-07T16:27:53.000+0000",
        "timeoriginalestimate": null,
        "description": "For example, calling do_get().read_all() can't be interrupted with Ctrl+C in Python.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Python][FlightRPC] Use StopToken to enable interrupting long Flight operations",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366826/comment/17358710",
                    "id": "17358710",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 10318\n[https://github.com/apache/arrow/pull/10318]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-06-07T16:27:40.473+0000",
                    "updated": "2021-06-07T16:27:40.473+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0p28w:",
        "customfield_12314139": null
    }
}