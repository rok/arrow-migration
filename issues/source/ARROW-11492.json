{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13356651",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651",
    "key": "ARROW-11492",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/6",
            "id": "6",
            "description": "The problem isn't valid and it can't be fixed.",
            "name": "Invalid"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 18600,
            "total": 18600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 18600,
            "total": 18600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11492/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 31,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/547441",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] removed a comment on pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#issuecomment-773050748\n\n\n   <!--\n     Licensed to the Apache Software Foundation (ASF) under one\n     or more contributor license agreements.  See the NOTICE file\n     distributed with this work for additional information\n     regarding copyright ownership.  The ASF licenses this file\n     to you under the Apache License, Version 2.0 (the\n     \"License\"); you may not use this file except in compliance\n     with the License.  You may obtain a copy of the License at\n   \n       http://www.apache.org/licenses/LICENSE-2.0\n   \n     Unless required by applicable law or agreed to in writing,\n     software distributed under the License is distributed on an\n     \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     KIND, either express or implied.  See the License for the\n     specific language governing permissions and limitations\n     under the License.\n   -->\n   \n   Thanks for opening a pull request!\n   \n   Could you open an issue for this pull request on JIRA?\n   https://issues.apache.org/jira/browse/ARROW\n   \n   Then could you also rename pull request title in the following format?\n   \n       ARROW-${JIRA_ID}: [${COMPONENT}] ${SUMMARY}\n   \n   See also:\n   \n     * [Other pull requests](https://github.com/apache/arrow/pulls/)\n     * [Contribution Guidelines - How to contribute patches](https://arrow.apache.org/docs/developers/contributing.html#how-to-contribute-patches)\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-04T06:03:58.494+0000",
                    "updated": "2021-02-04T06:03:58.494+0000",
                    "started": "2021-02-04T06:03:58.494+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "547441",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/547442",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#issuecomment-773054929\n\n\n   <!--\n     Licensed to the Apache Software Foundation (ASF) under one\n     or more contributor license agreements.  See the NOTICE file\n     distributed with this work for additional information\n     regarding copyright ownership.  The ASF licenses this file\n     to you under the Apache License, Version 2.0 (the\n     \"License\"); you may not use this file except in compliance\n     with the License.  You may obtain a copy of the License at\n   \n       http://www.apache.org/licenses/LICENSE-2.0\n   \n     Unless required by applicable law or agreed to in writing,\n     software distributed under the License is distributed on an\n     \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     KIND, either express or implied.  See the License for the\n     specific language governing permissions and limitations\n     under the License.\n   -->\n   \n   Thanks for opening a pull request!\n   \n   Could you open an issue for this pull request on JIRA?\n   https://issues.apache.org/jira/browse/ARROW\n   \n   Then could you also rename pull request title in the following format?\n   \n       ARROW-${JIRA_ID}: [${COMPONENT}] ${SUMMARY}\n   \n   See also:\n   \n     * [Other pull requests](https://github.com/apache/arrow/pulls/)\n     * [Contribution Guidelines - How to contribute patches](https://arrow.apache.org/docs/developers/contributing.html#how-to-contribute-patches)\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-04T06:04:22.021+0000",
                    "updated": "2021-02-04T06:04:22.021+0000",
                    "started": "2021-02-04T06:04:22.021+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "547442",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/547444",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#issuecomment-773055803\n\n\n   https://issues.apache.org/jira/browse/ARROW-11492\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-04T06:06:26.866+0000",
                    "updated": "2021-02-04T06:06:26.866+0000",
                    "started": "2021-02-04T06:06:26.865+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "547444",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/547445",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] removed a comment on pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#issuecomment-773054929\n\n\n   <!--\n     Licensed to the Apache Software Foundation (ASF) under one\n     or more contributor license agreements.  See the NOTICE file\n     distributed with this work for additional information\n     regarding copyright ownership.  The ASF licenses this file\n     to you under the Apache License, Version 2.0 (the\n     \"License\"); you may not use this file except in compliance\n     with the License.  You may obtain a copy of the License at\n   \n       http://www.apache.org/licenses/LICENSE-2.0\n   \n     Unless required by applicable law or agreed to in writing,\n     software distributed under the License is distributed on an\n     \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     KIND, either express or implied.  See the License for the\n     specific language governing permissions and limitations\n     under the License.\n   -->\n   \n   Thanks for opening a pull request!\n   \n   Could you open an issue for this pull request on JIRA?\n   https://issues.apache.org/jira/browse/ARROW\n   \n   Then could you also rename pull request title in the following format?\n   \n       ARROW-${JIRA_ID}: [${COMPONENT}] ${SUMMARY}\n   \n   See also:\n   \n     * [Other pull requests](https://github.com/apache/arrow/pulls/)\n     * [Contribution Guidelines - How to contribute patches](https://arrow.apache.org/docs/developers/contributing.html#how-to-contribute-patches)\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-04T06:09:10.790+0000",
                    "updated": "2021-02-04T06:09:10.790+0000",
                    "started": "2021-02-04T06:09:10.790+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "547445",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/547446",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#issuecomment-773057258\n\n\n   Any thoughts here, @alamb @nevi-me @vertexclique @troels @Dandandan @jhorstmann ?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-04T06:09:33.874+0000",
                    "updated": "2021-02-04T06:09:33.874+0000",
                    "started": "2021-02-04T06:09:33.873+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "547446",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/547559",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#issuecomment-773207915\n\n\n   I think the compiler should be able to prove most of those assertions statically, so maybe we don't need an unsafe variant and could leave the assertions in.\r\n   \r\n   For example, when the buffer is created via `from_trusted_len_iter`, that method calculates the length by multiplying with `size_of::<T>()` and allocates and writes into a suitable aligned buffer. This knowledge should allow the compiler to remove the corresponding assertions in `ArrayData::new_primitive`.\r\n   \r\n   For further simplification, we could maybe remove the `offset` parameter here, I see it is 0 in all usages of this PR. If we leave it in, we should add a test with a non-zero offset, as I'm not convinced the logic is correct.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-04T10:36:56.028+0000",
                    "updated": "2021-02-04T10:36:56.028+0000",
                    "started": "2021-02-04T10:36:56.028+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "547559",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/547561",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on a change in pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#discussion_r570120445\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -467,6 +467,87 @@ impl ArrayData {\n     }\n }\n \n+#[inline]\n+fn debug_check_primitive<T: ArrowNativeType>(\n+    values: &Buffer,\n+    nulls: &Option<Buffer>,\n+    offset: usize,\n+) -> usize {\n+    debug_assert_eq!(values.len() % std::mem::size_of::<T>(), 0,\n+            \"The length of the values buffer must be multiple of the size_of of the primitive type\");\n+    debug_assert_eq!(\n+        values.as_ptr().align_offset(std::mem::align_of::<T>()),\n+        0,\n+        \"The values `buffer` pointer must be aligned with the primitive type\"\n+    );\n+    let len = values.len() / std::mem::size_of::<T>();\n+    debug_assert!(\n+        offset <= len,\n+        \"the offset must be smaller than the buffers' length\"\n+    );\n+    if let Some(ref nulls) = nulls {\n+        debug_assert!(nulls.len() == (len - offset).saturating_add(7) / 8);\n+    }\n+    len\n+}\n+\n+impl ArrayData {\n+    /// Creates a new [`ArrayData`] for a primitive type, verifying all assumptions for consumers to\n+    /// soundly:\n+    /// * transmute `values` to `&[T]`\n+    /// * read bits from the null bitmap up to `ArrayData::len`.\n+    /// `ArrayData::len` will be set to be `values / size_of::<T::Native>`.\n+    /// # Panic\n+    /// This function panics iff any of the following:\n+    /// * `values.len()` is not a multiple of `size_of::<T::Native>`\n+    /// * `values.as_ptr()` is not aligned with `T::Native`\n+    /// * when `nulls` is `Some`, `nulls.len` is not equal to `(ArrayData::len + 7) / 8`.\n+    /// * `offset > ArrayData::len`\n+    #[inline]\n+    pub fn new_primitive<T: ArrowPrimitiveType>(\n+        values: Buffer,\n+        nulls: Option<Buffer>,\n+        offset: usize,\n+    ) -> Self {\n+        assert_eq!(values.len() % std::mem::size_of::<T::Native>(), 0,\n+            \"The length of the values buffer must be multiple of the size_of of the primitive type\");\n+        assert_eq!(\n+            values\n+                .as_ptr()\n+                .align_offset(std::mem::align_of::<T::Native>()),\n+            0,\n+            \"The values `buffer` pointer must be aligned with the primitive type\"\n+        );\n+        let len = values.len() / std::mem::size_of::<T::Native>();\n+        assert!(\n+            offset <= len,\n+            \"the offset must be smaller than the buffers' length\"\n+        );\n+        if let Some(ref nulls) = nulls {\n+            assert!(nulls.len() == (len - offset).saturating_add(7) / 8);\n\nReview comment:\n       Not sure this should substract the offset. The arrays offset is later uses to index into the logical elements of both null and data buffers, so they should have the same length (rounded up to full bytes for the null buffer).\r\n   \r\n   Rather the len of the array below should be `len - offset`.\r\n   \r\n   But even better would be if we don't need the offset parameter at all and avoid all this confusion ;)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-04T10:40:38.198+0000",
                    "updated": "2021-02-04T10:40:38.198+0000",
                    "started": "2021-02-04T10:40:38.198+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "547561",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/547913",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "yordan-pavlov commented on a change in pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#discussion_r570570772\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -467,6 +467,87 @@ impl ArrayData {\n     }\n }\n \n+#[inline]\n+fn debug_check_primitive<T: ArrowNativeType>(\n+    values: &Buffer,\n+    nulls: &Option<Buffer>,\n+    offset: usize,\n+) -> usize {\n+    debug_assert_eq!(values.len() % std::mem::size_of::<T>(), 0,\n+            \"The length of the values buffer must be multiple of the size_of of the primitive type\");\n+    debug_assert_eq!(\n+        values.as_ptr().align_offset(std::mem::align_of::<T>()),\n+        0,\n+        \"The values `buffer` pointer must be aligned with the primitive type\"\n+    );\n+    let len = values.len() / std::mem::size_of::<T>();\n+    debug_assert!(\n+        offset <= len,\n+        \"the offset must be smaller than the buffers' length\"\n+    );\n+    if let Some(ref nulls) = nulls {\n+        debug_assert!(nulls.len() == (len - offset).saturating_add(7) / 8);\n+    }\n+    len\n+}\n+\n+impl ArrayData {\n+    /// Creates a new [`ArrayData`] for a primitive type, verifying all assumptions for consumers to\n+    /// soundly:\n+    /// * transmute `values` to `&[T]`\n+    /// * read bits from the null bitmap up to `ArrayData::len`.\n+    /// `ArrayData::len` will be set to be `values / size_of::<T::Native>`.\n+    /// # Panic\n+    /// This function panics iff any of the following:\n+    /// * `values.len()` is not a multiple of `size_of::<T::Native>`\n+    /// * `values.as_ptr()` is not aligned with `T::Native`\n+    /// * when `nulls` is `Some`, `nulls.len` is not equal to `(ArrayData::len + 7) / 8`.\n+    /// * `offset > ArrayData::len`\n+    #[inline]\n+    pub fn new_primitive<T: ArrowPrimitiveType>(\n+        values: Buffer,\n+        nulls: Option<Buffer>,\n+        offset: usize,\n+    ) -> Self {\n+        assert_eq!(values.len() % std::mem::size_of::<T::Native>(), 0,\n+            \"The length of the values buffer must be multiple of the size_of of the primitive type\");\n+        assert_eq!(\n+            values\n+                .as_ptr()\n+                .align_offset(std::mem::align_of::<T::Native>()),\n+            0,\n+            \"The values `buffer` pointer must be aligned with the primitive type\"\n+        );\n+        let len = values.len() / std::mem::size_of::<T::Native>();\n+        assert!(\n+            offset <= len,\n+            \"the offset must be smaller than the buffers' length\"\n+        );\n+        if let Some(ref nulls) = nulls {\n+            assert!(nulls.len() == (len - offset).saturating_add(7) / 8);\n+        }\n+        ArrayData::new(T::DATA_TYPE, len, None, nulls, offset, vec![values], vec![])\n+    }\n+\n+    /// Creates a new [`ArrayData`] for a primitive type.\n+    /// `ArrayData::len` will be set to `values / size_of::<T::Native>`.\n+    /// # Safety\n+    /// The caller must ensure that:\n+    /// * `values.len()` is a multiple of `size_of::<T::Native>`\n+    /// * `values.as_ptr()` is aligned with `T::Native`\n+    /// * when `nulls` is `Some`, `nulls.len` is equal to `(ArrayData::len + 7) / 8`.\n+    /// * `offset <= ArrayData::len`\n+    #[inline]\n+    pub unsafe fn new_primitive_unchecked<T: ArrowPrimitiveType>(\n+        values: Buffer,\n+        nulls: Option<Buffer>,\n+        offset: usize,\n\nReview comment:\n       @jorgecarleitao in this PR the `offset` parameter is always 0; why not remove it in order to further simplify the code?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-04T21:56:36.827+0000",
                    "updated": "2021-02-04T21:56:36.827+0000",
                    "started": "2021-02-04T21:56:36.827+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "547913",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/547999",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#discussion_r570666451\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -467,6 +467,87 @@ impl ArrayData {\n     }\n }\n \n+#[inline]\n+fn debug_check_primitive<T: ArrowNativeType>(\n+    values: &Buffer,\n+    nulls: &Option<Buffer>,\n+    offset: usize,\n+) -> usize {\n+    debug_assert_eq!(values.len() % std::mem::size_of::<T>(), 0,\n+            \"The length of the values buffer must be multiple of the size_of of the primitive type\");\n+    debug_assert_eq!(\n+        values.as_ptr().align_offset(std::mem::align_of::<T>()),\n+        0,\n+        \"The values `buffer` pointer must be aligned with the primitive type\"\n+    );\n+    let len = values.len() / std::mem::size_of::<T>();\n+    debug_assert!(\n+        offset <= len,\n+        \"the offset must be smaller than the buffers' length\"\n+    );\n+    if let Some(ref nulls) = nulls {\n+        debug_assert!(nulls.len() == (len - offset).saturating_add(7) / 8);\n+    }\n+    len\n+}\n+\n+impl ArrayData {\n+    /// Creates a new [`ArrayData`] for a primitive type, verifying all assumptions for consumers to\n+    /// soundly:\n+    /// * transmute `values` to `&[T]`\n+    /// * read bits from the null bitmap up to `ArrayData::len`.\n+    /// `ArrayData::len` will be set to be `values / size_of::<T::Native>`.\n+    /// # Panic\n+    /// This function panics iff any of the following:\n+    /// * `values.len()` is not a multiple of `size_of::<T::Native>`\n+    /// * `values.as_ptr()` is not aligned with `T::Native`\n+    /// * when `nulls` is `Some`, `nulls.len` is not equal to `(ArrayData::len + 7) / 8`.\n+    /// * `offset > ArrayData::len`\n+    #[inline]\n+    pub fn new_primitive<T: ArrowPrimitiveType>(\n+        values: Buffer,\n+        nulls: Option<Buffer>,\n+        offset: usize,\n+    ) -> Self {\n+        assert_eq!(values.len() % std::mem::size_of::<T::Native>(), 0,\n+            \"The length of the values buffer must be multiple of the size_of of the primitive type\");\n+        assert_eq!(\n+            values\n+                .as_ptr()\n+                .align_offset(std::mem::align_of::<T::Native>()),\n+            0,\n+            \"The values `buffer` pointer must be aligned with the primitive type\"\n+        );\n+        let len = values.len() / std::mem::size_of::<T::Native>();\n+        assert!(\n+            offset <= len,\n+            \"the offset must be smaller than the buffers' length\"\n+        );\n+        if let Some(ref nulls) = nulls {\n+            assert!(nulls.len() == (len - offset).saturating_add(7) / 8);\n\nReview comment:\n       Good point. I removed the offset. \ud83d\udc4d \n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -467,6 +467,87 @@ impl ArrayData {\n     }\n }\n \n+#[inline]\n+fn debug_check_primitive<T: ArrowNativeType>(\n+    values: &Buffer,\n+    nulls: &Option<Buffer>,\n+    offset: usize,\n+) -> usize {\n+    debug_assert_eq!(values.len() % std::mem::size_of::<T>(), 0,\n+            \"The length of the values buffer must be multiple of the size_of of the primitive type\");\n+    debug_assert_eq!(\n+        values.as_ptr().align_offset(std::mem::align_of::<T>()),\n+        0,\n+        \"The values `buffer` pointer must be aligned with the primitive type\"\n+    );\n+    let len = values.len() / std::mem::size_of::<T>();\n+    debug_assert!(\n+        offset <= len,\n+        \"the offset must be smaller than the buffers' length\"\n+    );\n+    if let Some(ref nulls) = nulls {\n+        debug_assert!(nulls.len() == (len - offset).saturating_add(7) / 8);\n+    }\n+    len\n+}\n+\n+impl ArrayData {\n+    /// Creates a new [`ArrayData`] for a primitive type, verifying all assumptions for consumers to\n+    /// soundly:\n+    /// * transmute `values` to `&[T]`\n+    /// * read bits from the null bitmap up to `ArrayData::len`.\n+    /// `ArrayData::len` will be set to be `values / size_of::<T::Native>`.\n+    /// # Panic\n+    /// This function panics iff any of the following:\n+    /// * `values.len()` is not a multiple of `size_of::<T::Native>`\n+    /// * `values.as_ptr()` is not aligned with `T::Native`\n+    /// * when `nulls` is `Some`, `nulls.len` is not equal to `(ArrayData::len + 7) / 8`.\n+    /// * `offset > ArrayData::len`\n+    #[inline]\n+    pub fn new_primitive<T: ArrowPrimitiveType>(\n+        values: Buffer,\n+        nulls: Option<Buffer>,\n+        offset: usize,\n+    ) -> Self {\n+        assert_eq!(values.len() % std::mem::size_of::<T::Native>(), 0,\n+            \"The length of the values buffer must be multiple of the size_of of the primitive type\");\n+        assert_eq!(\n+            values\n+                .as_ptr()\n+                .align_offset(std::mem::align_of::<T::Native>()),\n+            0,\n+            \"The values `buffer` pointer must be aligned with the primitive type\"\n+        );\n+        let len = values.len() / std::mem::size_of::<T::Native>();\n+        assert!(\n+            offset <= len,\n+            \"the offset must be smaller than the buffers' length\"\n+        );\n+        if let Some(ref nulls) = nulls {\n+            assert!(nulls.len() == (len - offset).saturating_add(7) / 8);\n+        }\n+        ArrayData::new(T::DATA_TYPE, len, None, nulls, offset, vec![values], vec![])\n+    }\n+\n+    /// Creates a new [`ArrayData`] for a primitive type.\n+    /// `ArrayData::len` will be set to `values / size_of::<T::Native>`.\n+    /// # Safety\n+    /// The caller must ensure that:\n+    /// * `values.len()` is a multiple of `size_of::<T::Native>`\n+    /// * `values.as_ptr()` is aligned with `T::Native`\n+    /// * when `nulls` is `Some`, `nulls.len` is equal to `(ArrayData::len + 7) / 8`.\n+    /// * `offset <= ArrayData::len`\n+    #[inline]\n+    pub unsafe fn new_primitive_unchecked<T: ArrowPrimitiveType>(\n+        values: Buffer,\n+        nulls: Option<Buffer>,\n+        offset: usize,\n\nReview comment:\n       Good point. I removed the offset. \ud83d\udc4d \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T01:49:46.641+0000",
                    "updated": "2021-02-05T01:49:46.641+0000",
                    "started": "2021-02-05T01:49:46.640+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "547999",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/548000",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#issuecomment-773725629\n\n\n   > I think the compiler should be able to prove most of those assertions statically, so maybe we don't need an unsafe variant and could leave the assertions in.\r\n   > \r\n   > For example, when the buffer is created via `from_trusted_len_iter`, that method calculates the length by multiplying with `size_of::<T>()` and allocates and writes into a suitable aligned buffer. This knowledge should allow the compiler to remove the corresponding assertions in `ArrayData::new_primitive`.\r\n   \r\n   That is a good hypothesis. I will do some benchmarking to test it, and if it holds, I will replace them.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T01:52:41.032+0000",
                    "updated": "2021-02-05T01:52:41.032+0000",
                    "started": "2021-02-05T01:52:41.031+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548000",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/548008",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#issuecomment-773732420\n\n\n   You were right, @jhorstmann , it has no significant impact and I thus removed the `unsafe` version and made all checks happen. Thanks a lot for that idea!\r\n   \r\n   ```\r\n   add 512                 time:   [1.0077 us 1.0126 us 1.0181 us]                     \r\n                           change: [+5.0339% +6.3889% +7.6813%] (p = 0.00 < 0.05)\r\n                           Performance has regressed.\r\n   Found 7 outliers among 100 measurements (7.00%)\r\n     1 (1.00%) low mild\r\n     3 (3.00%) high mild\r\n     3 (3.00%) high severe\r\n   \r\n   subtract 512            time:   [962.12 ns 968.88 ns 976.54 ns]                          \r\n                           change: [+2.2544% +3.6466% +4.9816%] (p = 0.00 < 0.05)\r\n                           Performance has regressed.\r\n   Found 8 outliers among 100 measurements (8.00%)\r\n     6 (6.00%) high mild\r\n     2 (2.00%) high severe\r\n   \r\n   multiply 512            time:   [964.18 ns 967.85 ns 971.69 ns]                          \r\n                           change: [-0.1040% +1.4543% +2.7701%] (p = 0.04 < 0.05)\r\n                           Change within noise threshold.\r\n   Found 6 outliers among 100 measurements (6.00%)\r\n     1 (1.00%) low mild\r\n     3 (3.00%) high mild\r\n     2 (2.00%) high severe\r\n   \r\n   divide 512              time:   [2.8418 us 2.8454 us 2.8492 us]                        \r\n                           change: [-0.8891% -0.2418% +0.3257%] (p = 0.45 > 0.05)\r\n                           No change in performance detected.\r\n   Found 12 outliers among 100 measurements (12.00%)\r\n     2 (2.00%) low mild\r\n     4 (4.00%) high mild\r\n     6 (6.00%) high severe\r\n   \r\n   limit 512, 512          time:   [400.88 ns 402.76 ns 404.82 ns]                           \r\n                           change: [-2.9396% -1.4390% -0.1617%] (p = 0.04 < 0.05)\r\n                           Change within noise threshold.\r\n   Found 5 outliers among 100 measurements (5.00%)\r\n     4 (4.00%) high mild\r\n     1 (1.00%) high severe\r\n   \r\n   add_nulls_512           time:   [974.42 ns 976.84 ns 979.38 ns]                           \r\n                           change: [-4.7016% -3.1536% -1.6052%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 7 outliers among 100 measurements (7.00%)\r\n     1 (1.00%) low mild\r\n     2 (2.00%) high mild\r\n     4 (4.00%) high severe\r\n   \r\n   divide_nulls_512        time:   [2.8035 us 2.8104 us 2.8175 us]                              \r\n                           change: [-2.5459% -1.3916% -0.4130%] (p = 0.01 < 0.05)\r\n                           Change within noise threshold.\r\n   Found 5 outliers among 100 measurements (5.00%)\r\n     1 (1.00%) low mild\r\n     4 (4.00%) high severe\r\n   ```\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T02:11:46.218+0000",
                    "updated": "2021-02-05T02:11:46.218+0000",
                    "started": "2021-02-05T02:11:46.217+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548008",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/548025",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#issuecomment-773769701\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=h1) Report\n   > Merging [#9413](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=desc) (11856d3) into [master](https://codecov.io/gh/apache/arrow/commit/77ae93d6ecaac8fb5f4a18ca5287b7456cd88784?el=desc) (77ae93d) will **increase** coverage by `0.09%`.\n   > The diff coverage is `83.53%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9413/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9413      +/-   ##\n   ==========================================\n   + Coverage   82.00%   82.10%   +0.09%     \n   ==========================================\n     Files         230      230              \n     Lines       53487    54006     +519     \n   ==========================================\n   + Hits        43864    44340     +476     \n   - Misses       9623     9666      +43     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/util/bench\\_util.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvdXRpbC9iZW5jaF91dGlsLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/examples/simple\\_udaf.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL2V4YW1wbGVzL3NpbXBsZV91ZGFmLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/datasource/memory.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9kYXRhc291cmNlL21lbW9yeS5ycw==) | `80.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/datasource/parquet.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9kYXRhc291cmNlL3BhcnF1ZXQucnM=) | `94.33% <\u00f8> (-0.24%)` | :arrow_down: |\n   | [rust/datafusion/src/logical\\_plan/extension.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vZXh0ZW5zaW9uLnJz) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/group\\_scalar.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2dyb3VwX3NjYWxhci5ycw==) | `67.10% <0.00%> (-0.90%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/parquet.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BhcnF1ZXQucnM=) | `88.10% <0.00%> (-0.14%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/planner.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BsYW5uZXIucnM=) | `79.16% <\u00f8> (+0.37%)` | :arrow_up: |\n   | [rust/datafusion/src/physical\\_plan/projection.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3Byb2plY3Rpb24ucnM=) | `84.93% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/udaf.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3VkYWYucnM=) | `78.94% <\u00f8> (\u00f8)` | |\n   | ... and [49 more](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=footer). Last update [5e5c2b4...b4099ef](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T03:55:08.286+0000",
                    "updated": "2021-02-05T03:55:08.286+0000",
                    "started": "2021-02-05T03:55:08.285+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548025",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/548154",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on a change in pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#discussion_r570120445\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -467,6 +467,87 @@ impl ArrayData {\n     }\n }\n \n+#[inline]\n+fn debug_check_primitive<T: ArrowNativeType>(\n+    values: &Buffer,\n+    nulls: &Option<Buffer>,\n+    offset: usize,\n+) -> usize {\n+    debug_assert_eq!(values.len() % std::mem::size_of::<T>(), 0,\n+            \"The length of the values buffer must be multiple of the size_of of the primitive type\");\n+    debug_assert_eq!(\n+        values.as_ptr().align_offset(std::mem::align_of::<T>()),\n+        0,\n+        \"The values `buffer` pointer must be aligned with the primitive type\"\n+    );\n+    let len = values.len() / std::mem::size_of::<T>();\n+    debug_assert!(\n+        offset <= len,\n+        \"the offset must be smaller than the buffers' length\"\n+    );\n+    if let Some(ref nulls) = nulls {\n+        debug_assert!(nulls.len() == (len - offset).saturating_add(7) / 8);\n+    }\n+    len\n+}\n+\n+impl ArrayData {\n+    /// Creates a new [`ArrayData`] for a primitive type, verifying all assumptions for consumers to\n+    /// soundly:\n+    /// * transmute `values` to `&[T]`\n+    /// * read bits from the null bitmap up to `ArrayData::len`.\n+    /// `ArrayData::len` will be set to be `values / size_of::<T::Native>`.\n+    /// # Panic\n+    /// This function panics iff any of the following:\n+    /// * `values.len()` is not a multiple of `size_of::<T::Native>`\n+    /// * `values.as_ptr()` is not aligned with `T::Native`\n+    /// * when `nulls` is `Some`, `nulls.len` is not equal to `(ArrayData::len + 7) / 8`.\n+    /// * `offset > ArrayData::len`\n+    #[inline]\n+    pub fn new_primitive<T: ArrowPrimitiveType>(\n+        values: Buffer,\n+        nulls: Option<Buffer>,\n+        offset: usize,\n+    ) -> Self {\n+        assert_eq!(values.len() % std::mem::size_of::<T::Native>(), 0,\n+            \"The length of the values buffer must be multiple of the size_of of the primitive type\");\n+        assert_eq!(\n+            values\n+                .as_ptr()\n+                .align_offset(std::mem::align_of::<T::Native>()),\n+            0,\n+            \"The values `buffer` pointer must be aligned with the primitive type\"\n+        );\n+        let len = values.len() / std::mem::size_of::<T::Native>();\n+        assert!(\n+            offset <= len,\n+            \"the offset must be smaller than the buffers' length\"\n+        );\n+        if let Some(ref nulls) = nulls {\n+            assert!(nulls.len() == (len - offset).saturating_add(7) / 8);\n\nReview comment:\n       Not sure this should substract the offset. The arrays offset is later uses to index into the logical elements of both null and data buffers, so they should have the same length (rounded up to full bytes for the null buffer).\r\n   \r\n   Rather the len of the array below should be `len - offset`.\r\n   \r\n   But even better would be if we don't need the offset parameter at all and avoid all this confusion ;)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T09:50:30.692+0000",
                    "updated": "2021-02-05T09:50:30.692+0000",
                    "started": "2021-02-05T09:50:30.692+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548154",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/548381",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#discussion_r570666451\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -467,6 +467,87 @@ impl ArrayData {\n     }\n }\n \n+#[inline]\n+fn debug_check_primitive<T: ArrowNativeType>(\n+    values: &Buffer,\n+    nulls: &Option<Buffer>,\n+    offset: usize,\n+) -> usize {\n+    debug_assert_eq!(values.len() % std::mem::size_of::<T>(), 0,\n+            \"The length of the values buffer must be multiple of the size_of of the primitive type\");\n+    debug_assert_eq!(\n+        values.as_ptr().align_offset(std::mem::align_of::<T>()),\n+        0,\n+        \"The values `buffer` pointer must be aligned with the primitive type\"\n+    );\n+    let len = values.len() / std::mem::size_of::<T>();\n+    debug_assert!(\n+        offset <= len,\n+        \"the offset must be smaller than the buffers' length\"\n+    );\n+    if let Some(ref nulls) = nulls {\n+        debug_assert!(nulls.len() == (len - offset).saturating_add(7) / 8);\n+    }\n+    len\n+}\n+\n+impl ArrayData {\n+    /// Creates a new [`ArrayData`] for a primitive type, verifying all assumptions for consumers to\n+    /// soundly:\n+    /// * transmute `values` to `&[T]`\n+    /// * read bits from the null bitmap up to `ArrayData::len`.\n+    /// `ArrayData::len` will be set to be `values / size_of::<T::Native>`.\n+    /// # Panic\n+    /// This function panics iff any of the following:\n+    /// * `values.len()` is not a multiple of `size_of::<T::Native>`\n+    /// * `values.as_ptr()` is not aligned with `T::Native`\n+    /// * when `nulls` is `Some`, `nulls.len` is not equal to `(ArrayData::len + 7) / 8`.\n+    /// * `offset > ArrayData::len`\n+    #[inline]\n+    pub fn new_primitive<T: ArrowPrimitiveType>(\n+        values: Buffer,\n+        nulls: Option<Buffer>,\n+        offset: usize,\n+    ) -> Self {\n+        assert_eq!(values.len() % std::mem::size_of::<T::Native>(), 0,\n+            \"The length of the values buffer must be multiple of the size_of of the primitive type\");\n+        assert_eq!(\n+            values\n+                .as_ptr()\n+                .align_offset(std::mem::align_of::<T::Native>()),\n+            0,\n+            \"The values `buffer` pointer must be aligned with the primitive type\"\n+        );\n+        let len = values.len() / std::mem::size_of::<T::Native>();\n+        assert!(\n+            offset <= len,\n+            \"the offset must be smaller than the buffers' length\"\n+        );\n+        if let Some(ref nulls) = nulls {\n+            assert!(nulls.len() == (len - offset).saturating_add(7) / 8);\n\nReview comment:\n       Good point. I removed the offset. \ud83d\udc4d \n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -467,6 +467,87 @@ impl ArrayData {\n     }\n }\n \n+#[inline]\n+fn debug_check_primitive<T: ArrowNativeType>(\n+    values: &Buffer,\n+    nulls: &Option<Buffer>,\n+    offset: usize,\n+) -> usize {\n+    debug_assert_eq!(values.len() % std::mem::size_of::<T>(), 0,\n+            \"The length of the values buffer must be multiple of the size_of of the primitive type\");\n+    debug_assert_eq!(\n+        values.as_ptr().align_offset(std::mem::align_of::<T>()),\n+        0,\n+        \"The values `buffer` pointer must be aligned with the primitive type\"\n+    );\n+    let len = values.len() / std::mem::size_of::<T>();\n+    debug_assert!(\n+        offset <= len,\n+        \"the offset must be smaller than the buffers' length\"\n+    );\n+    if let Some(ref nulls) = nulls {\n+        debug_assert!(nulls.len() == (len - offset).saturating_add(7) / 8);\n+    }\n+    len\n+}\n+\n+impl ArrayData {\n+    /// Creates a new [`ArrayData`] for a primitive type, verifying all assumptions for consumers to\n+    /// soundly:\n+    /// * transmute `values` to `&[T]`\n+    /// * read bits from the null bitmap up to `ArrayData::len`.\n+    /// `ArrayData::len` will be set to be `values / size_of::<T::Native>`.\n+    /// # Panic\n+    /// This function panics iff any of the following:\n+    /// * `values.len()` is not a multiple of `size_of::<T::Native>`\n+    /// * `values.as_ptr()` is not aligned with `T::Native`\n+    /// * when `nulls` is `Some`, `nulls.len` is not equal to `(ArrayData::len + 7) / 8`.\n+    /// * `offset > ArrayData::len`\n+    #[inline]\n+    pub fn new_primitive<T: ArrowPrimitiveType>(\n+        values: Buffer,\n+        nulls: Option<Buffer>,\n+        offset: usize,\n+    ) -> Self {\n+        assert_eq!(values.len() % std::mem::size_of::<T::Native>(), 0,\n+            \"The length of the values buffer must be multiple of the size_of of the primitive type\");\n+        assert_eq!(\n+            values\n+                .as_ptr()\n+                .align_offset(std::mem::align_of::<T::Native>()),\n+            0,\n+            \"The values `buffer` pointer must be aligned with the primitive type\"\n+        );\n+        let len = values.len() / std::mem::size_of::<T::Native>();\n+        assert!(\n+            offset <= len,\n+            \"the offset must be smaller than the buffers' length\"\n+        );\n+        if let Some(ref nulls) = nulls {\n+            assert!(nulls.len() == (len - offset).saturating_add(7) / 8);\n+        }\n+        ArrayData::new(T::DATA_TYPE, len, None, nulls, offset, vec![values], vec![])\n+    }\n+\n+    /// Creates a new [`ArrayData`] for a primitive type.\n+    /// `ArrayData::len` will be set to `values / size_of::<T::Native>`.\n+    /// # Safety\n+    /// The caller must ensure that:\n+    /// * `values.len()` is a multiple of `size_of::<T::Native>`\n+    /// * `values.as_ptr()` is aligned with `T::Native`\n+    /// * when `nulls` is `Some`, `nulls.len` is equal to `(ArrayData::len + 7) / 8`.\n+    /// * `offset <= ArrayData::len`\n+    #[inline]\n+    pub unsafe fn new_primitive_unchecked<T: ArrowPrimitiveType>(\n+        values: Buffer,\n+        nulls: Option<Buffer>,\n+        offset: usize,\n\nReview comment:\n       Good point. I removed the offset. \ud83d\udc4d \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T10:15:22.530+0000",
                    "updated": "2021-02-05T10:15:22.530+0000",
                    "started": "2021-02-05T10:15:22.529+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548381",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/548405",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#issuecomment-773207915\n\n\n   I think the compiler should be able to prove most of those assertions statically, so maybe we don't need an unsafe variant and could leave the assertions in.\r\n   \r\n   For example, when the buffer is created via `from_trusted_len_iter`, that method calculates the length by multiplying with `size_of::<T>()` and allocates and writes into a suitable aligned buffer. This knowledge should allow the compiler to remove the corresponding assertions in `ArrayData::new_primitive`.\r\n   \r\n   For further simplification, we could maybe remove the `offset` parameter here, I see it is 0 in all usages of this PR. If we leave it in, we should add a test with a non-zero offset, as I'm not convinced the logic is correct.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T10:18:13.421+0000",
                    "updated": "2021-02-05T10:18:13.421+0000",
                    "started": "2021-02-05T10:18:13.420+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548405",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/548487",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "yordan-pavlov commented on a change in pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#discussion_r570570772\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -467,6 +467,87 @@ impl ArrayData {\n     }\n }\n \n+#[inline]\n+fn debug_check_primitive<T: ArrowNativeType>(\n+    values: &Buffer,\n+    nulls: &Option<Buffer>,\n+    offset: usize,\n+) -> usize {\n+    debug_assert_eq!(values.len() % std::mem::size_of::<T>(), 0,\n+            \"The length of the values buffer must be multiple of the size_of of the primitive type\");\n+    debug_assert_eq!(\n+        values.as_ptr().align_offset(std::mem::align_of::<T>()),\n+        0,\n+        \"The values `buffer` pointer must be aligned with the primitive type\"\n+    );\n+    let len = values.len() / std::mem::size_of::<T>();\n+    debug_assert!(\n+        offset <= len,\n+        \"the offset must be smaller than the buffers' length\"\n+    );\n+    if let Some(ref nulls) = nulls {\n+        debug_assert!(nulls.len() == (len - offset).saturating_add(7) / 8);\n+    }\n+    len\n+}\n+\n+impl ArrayData {\n+    /// Creates a new [`ArrayData`] for a primitive type, verifying all assumptions for consumers to\n+    /// soundly:\n+    /// * transmute `values` to `&[T]`\n+    /// * read bits from the null bitmap up to `ArrayData::len`.\n+    /// `ArrayData::len` will be set to be `values / size_of::<T::Native>`.\n+    /// # Panic\n+    /// This function panics iff any of the following:\n+    /// * `values.len()` is not a multiple of `size_of::<T::Native>`\n+    /// * `values.as_ptr()` is not aligned with `T::Native`\n+    /// * when `nulls` is `Some`, `nulls.len` is not equal to `(ArrayData::len + 7) / 8`.\n+    /// * `offset > ArrayData::len`\n+    #[inline]\n+    pub fn new_primitive<T: ArrowPrimitiveType>(\n+        values: Buffer,\n+        nulls: Option<Buffer>,\n+        offset: usize,\n+    ) -> Self {\n+        assert_eq!(values.len() % std::mem::size_of::<T::Native>(), 0,\n+            \"The length of the values buffer must be multiple of the size_of of the primitive type\");\n+        assert_eq!(\n+            values\n+                .as_ptr()\n+                .align_offset(std::mem::align_of::<T::Native>()),\n+            0,\n+            \"The values `buffer` pointer must be aligned with the primitive type\"\n+        );\n+        let len = values.len() / std::mem::size_of::<T::Native>();\n+        assert!(\n+            offset <= len,\n+            \"the offset must be smaller than the buffers' length\"\n+        );\n+        if let Some(ref nulls) = nulls {\n+            assert!(nulls.len() == (len - offset).saturating_add(7) / 8);\n+        }\n+        ArrayData::new(T::DATA_TYPE, len, None, nulls, offset, vec![values], vec![])\n+    }\n+\n+    /// Creates a new [`ArrayData`] for a primitive type.\n+    /// `ArrayData::len` will be set to `values / size_of::<T::Native>`.\n+    /// # Safety\n+    /// The caller must ensure that:\n+    /// * `values.len()` is a multiple of `size_of::<T::Native>`\n+    /// * `values.as_ptr()` is aligned with `T::Native`\n+    /// * when `nulls` is `Some`, `nulls.len` is equal to `(ArrayData::len + 7) / 8`.\n+    /// * `offset <= ArrayData::len`\n+    #[inline]\n+    pub unsafe fn new_primitive_unchecked<T: ArrowPrimitiveType>(\n+        values: Buffer,\n+        nulls: Option<Buffer>,\n+        offset: usize,\n\nReview comment:\n       @jorgecarleitao in this PR the `offset` parameter is always 0; why not remove it in order to further simplify the code?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T10:26:32.219+0000",
                    "updated": "2021-02-05T10:26:32.219+0000",
                    "started": "2021-02-05T10:26:32.219+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548487",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/548499",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#issuecomment-773769701\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=h1) Report\n   > Merging [#9413](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=desc) (11856d3) into [master](https://codecov.io/gh/apache/arrow/commit/77ae93d6ecaac8fb5f4a18ca5287b7456cd88784?el=desc) (77ae93d) will **increase** coverage by `0.09%`.\n   > The diff coverage is `83.53%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9413/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9413      +/-   ##\n   ==========================================\n   + Coverage   82.00%   82.10%   +0.09%     \n   ==========================================\n     Files         230      230              \n     Lines       53487    54006     +519     \n   ==========================================\n   + Hits        43864    44340     +476     \n   - Misses       9623     9666      +43     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/util/bench\\_util.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvdXRpbC9iZW5jaF91dGlsLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/examples/simple\\_udaf.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL2V4YW1wbGVzL3NpbXBsZV91ZGFmLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/datasource/memory.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9kYXRhc291cmNlL21lbW9yeS5ycw==) | `80.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/datasource/parquet.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9kYXRhc291cmNlL3BhcnF1ZXQucnM=) | `94.33% <\u00f8> (-0.24%)` | :arrow_down: |\n   | [rust/datafusion/src/logical\\_plan/extension.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vZXh0ZW5zaW9uLnJz) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/group\\_scalar.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2dyb3VwX3NjYWxhci5ycw==) | `67.10% <0.00%> (-0.90%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/parquet.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BhcnF1ZXQucnM=) | `88.10% <0.00%> (-0.14%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/planner.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BsYW5uZXIucnM=) | `79.16% <\u00f8> (+0.37%)` | :arrow_up: |\n   | [rust/datafusion/src/physical\\_plan/projection.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3Byb2plY3Rpb24ucnM=) | `84.93% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/udaf.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3VkYWYucnM=) | `78.94% <\u00f8> (\u00f8)` | |\n   | ... and [49 more](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=footer). Last update [5e5c2b4...b4099ef](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T10:27:35.177+0000",
                    "updated": "2021-02-05T10:27:35.177+0000",
                    "started": "2021-02-05T10:27:35.176+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548499",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/548553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#issuecomment-773725629\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T10:33:45.882+0000",
                    "updated": "2021-02-05T10:33:45.882+0000",
                    "started": "2021-02-05T10:33:45.882+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548553",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/548589",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#issuecomment-773963971\n\n\n   This one looks like it has lots of eyes already, so I am going to defer to those reviewers unless you think it is also worth another look by me too -- I am struggling to keep up with so much (great) stuff going on\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T11:04:15.828+0000",
                    "updated": "2021-02-05T11:04:15.828+0000",
                    "started": "2021-02-05T11:04:15.828+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548589",
                    "issueId": "13356651"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/worklog/548760",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9413:\nURL: https://github.com/apache/arrow/pull/9413#issuecomment-773769701\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=h1) Report\n   > Merging [#9413](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=desc) (a037c29) into [master](https://codecov.io/gh/apache/arrow/commit/77ae93d6ecaac8fb5f4a18ca5287b7456cd88784?el=desc) (77ae93d) will **increase** coverage by `0.08%`.\n   > The diff coverage is `84.71%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9413/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9413      +/-   ##\n   ==========================================\n   + Coverage   82.00%   82.09%   +0.08%     \n   ==========================================\n     Files         230      230              \n     Lines       53487    54006     +519     \n   ==========================================\n   + Hits        43864    44336     +472     \n   - Misses       9623     9670      +47     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/util/bench\\_util.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvdXRpbC9iZW5jaF91dGlsLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/examples/simple\\_udaf.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL2V4YW1wbGVzL3NpbXBsZV91ZGFmLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/datasource/memory.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9kYXRhc291cmNlL21lbW9yeS5ycw==) | `80.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/datasource/parquet.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9kYXRhc291cmNlL3BhcnF1ZXQucnM=) | `94.33% <\u00f8> (-0.24%)` | :arrow_down: |\n   | [rust/datafusion/src/logical\\_plan/extension.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vZXh0ZW5zaW9uLnJz) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/group\\_scalar.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2dyb3VwX3NjYWxhci5ycw==) | `67.10% <0.00%> (-0.90%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/parquet.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BhcnF1ZXQucnM=) | `88.10% <0.00%> (-0.14%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/planner.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BsYW5uZXIucnM=) | `79.16% <\u00f8> (+0.37%)` | :arrow_up: |\n   | [rust/datafusion/src/physical\\_plan/projection.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3Byb2plY3Rpb24ucnM=) | `84.93% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/udaf.rs](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3VkYWYucnM=) | `78.94% <\u00f8> (\u00f8)` | |\n   | ... and [57 more](https://codecov.io/gh/apache/arrow/pull/9413/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=footer). Last update [9e88889...a037c29](https://codecov.io/gh/apache/arrow/pull/9413?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T16:52:52.517+0000",
                    "updated": "2021-02-05T16:52:52.517+0000",
                    "started": "2021-02-05T16:52:52.517+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548760",
                    "issueId": "13356651"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 18600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@58150f9e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@64e38f2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@357ed06d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4280e798[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@d8413fe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@72e9ceb0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@31578538[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@742e18ad[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5998fe35[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@653827f8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@68cb1022[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6ca496e6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 18600,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Apr 26 12:46:44 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-04-26T12:46:47.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11492/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-02-04T06:03:30.000+0000",
        "updated": "2021-04-26T12:46:47.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 18600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Mark certain operations as `unsafe`",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13356651/comment/17332207",
                    "id": "17332207",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Migrated to github: https://github.com/apache/arrow-rs/issues/176",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-04-26T12:46:44.440+0000",
                    "updated": "2021-04-26T12:46:44.440+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0nc94:",
        "customfield_12314139": null
    }
}