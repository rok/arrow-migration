{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13126989",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13126989",
    "key": "ARROW-1947",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wapaul",
            "name": "wapaul",
            "key": "wapaul",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "William Paul",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332956",
                "id": "12332956",
                "name": "C++ - Plasma"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wapaul",
            "name": "wapaul",
            "key": "wapaul",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "William Paul",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wapaul",
            "name": "wapaul",
            "key": "wapaul",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "William Paul",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1947/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@32fb2f01[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4b4f2335[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@38359f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@325ce826[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e88c2a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6a313ed0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2b647ac4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7eacba56[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3f64f075[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5cc09ef7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@547a6df1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4f9f0322[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Dec 29 22:20:05 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-12-29T22:20:05.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1947/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2017-12-23T18:30:29.000+0000",
        "updated": "2018-01-24T04:00:03.000+0000",
        "timeoriginalestimate": null,
        "description": "This is primarily preparation for ARROW-1394 for returning CudaBuffers, but also allows Arrow buffer tools to be used with Plasma.",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Plasma] Change Client Create and Get to use Buffers",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13126989/comment/16302542",
                    "id": "16302542",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Wapaul1 opened a new pull request #1444: ARROW-1947: [Plasma] Change Client Create and Get to use Buffers\nURL: https://github.com/apache/arrow/pull/1444\n \n \n   - Create now takes in a pointer to a shared pointer of Buffer and returns a MutableBuffer.\r\n   - Object Buffers data and metadata are pointers to shared pointers of Buffer.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-23T18:41:06.106+0000",
                    "updated": "2017-12-23T18:41:06.106+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13126989/comment/16305841",
                    "id": "16305841",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pcmoritz commented on issue #1444: ARROW-1947: [Plasma] Change Client Create and Get to use Buffers\nURL: https://github.com/apache/arrow/pull/1444#issuecomment-354379063\n \n \n   This introduces a small change in the client API that prepares GPU support for Plasma.\r\n   \r\n   cc @robertnishihara \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-29T00:21:13.863+0000",
                    "updated": "2017-12-29T00:21:13.863+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13126989/comment/16305842",
                    "id": "16305842",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pcmoritz commented on a change in pull request #1444: ARROW-1947: [Plasma] Change Client Create and Get to use Buffers\nURL: https://github.com/apache/arrow/pull/1444#discussion_r159014116\n \n \n\n ##########\n File path: cpp/src/plasma/client.cc\n ##########\n @@ -162,14 +166,16 @@ Status PlasmaClient::Create(const ObjectID& object_id, int64_t data_size,\n   ARROW_CHECK(object.metadata_size == metadata_size);\n   // The metadata should come right after the data.\n   ARROW_CHECK(object.metadata_offset == object.data_offset + data_size);\n-  *data = lookup_or_mmap(fd, object.handle.store_fd, object.handle.mmap_size) +\n-          object.data_offset;\n+  *data = std::make_shared<MutableBuffer>(\n+      lookup_or_mmap(fd, object.handle.store_fd, object.handle.mmap_size) +\n+          object.data_offset,\n+      data_size + metadata_size);\n \n Review comment:\n   should be data_size, also should add a test\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-29T00:23:40.586+0000",
                    "updated": "2017-12-29T00:23:40.586+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13126989/comment/16305844",
                    "id": "16305844",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pcmoritz commented on a change in pull request #1444: ARROW-1947: [Plasma] Change Client Create and Get to use Buffers\nURL: https://github.com/apache/arrow/pull/1444#discussion_r159014116\n \n \n\n ##########\n File path: cpp/src/plasma/client.cc\n ##########\n @@ -162,14 +166,16 @@ Status PlasmaClient::Create(const ObjectID& object_id, int64_t data_size,\n   ARROW_CHECK(object.metadata_size == metadata_size);\n   // The metadata should come right after the data.\n   ARROW_CHECK(object.metadata_offset == object.data_offset + data_size);\n-  *data = lookup_or_mmap(fd, object.handle.store_fd, object.handle.mmap_size) +\n-          object.data_offset;\n+  *data = std::make_shared<MutableBuffer>(\n+      lookup_or_mmap(fd, object.handle.store_fd, object.handle.mmap_size) +\n+          object.data_offset,\n+      data_size + metadata_size);\n \n Review comment:\n   should be data_size, also should add a test\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-29T00:24:28.788+0000",
                    "updated": "2017-12-29T00:24:28.788+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13126989/comment/16305861",
                    "id": "16305861",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pcmoritz commented on a change in pull request #1444: ARROW-1947: [Plasma] Change Client Create and Get to use Buffers\nURL: https://github.com/apache/arrow/pull/1444#discussion_r159014629\n \n \n\n ##########\n File path: cpp/src/plasma/client.cc\n ##########\n @@ -162,14 +166,16 @@ Status PlasmaClient::Create(const ObjectID& object_id, int64_t data_size,\n   ARROW_CHECK(object.metadata_size == metadata_size);\n   // The metadata should come right after the data.\n   ARROW_CHECK(object.metadata_offset == object.data_offset + data_size);\n-  *data = lookup_or_mmap(fd, object.handle.store_fd, object.handle.mmap_size) +\n-          object.data_offset;\n+  *data = std::make_shared<MutableBuffer>(\n+      lookup_or_mmap(fd, object.handle.store_fd, object.handle.mmap_size) +\n+          object.data_offset,\n+      data_size + metadata_size);\n \n Review comment:\n   I think it's more natural to have data_size here, because the metadata is never modified through this buffer and always passed in through the metadata pointer. In fact the metadata being stored as part of the object buffer is an implementation detail.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-29T00:32:24.477+0000",
                    "updated": "2017-12-29T00:32:24.477+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13126989/comment/16306013",
                    "id": "16306013",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pcmoritz commented on issue #1444: ARROW-1947: [Plasma] Change Client Create and Get to use Buffers\nURL: https://github.com/apache/arrow/pull/1444#issuecomment-354401800\n \n \n   +1 LGTM, will merge unless there are objections (this breaks the plasma C++ API but is important in preparation for the GPU support)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-29T05:58:36.422+0000",
                    "updated": "2017-12-29T05:58:36.422+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13126989/comment/16306574",
                    "id": "16306574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pcmoritz closed pull request #1444: ARROW-1947: [Plasma] Change Client Create and Get to use Buffers\nURL: https://github.com/apache/arrow/pull/1444\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/plasma/client.cc b/cpp/src/plasma/client.cc\nindex 9bbafac38..0dd1c44d7 100644\n--- a/cpp/src/plasma/client.cc\n+++ b/cpp/src/plasma/client.cc\n@@ -40,6 +40,7 @@\n #include <thread>\n #include <vector>\n \n+#include \"arrow/buffer.h\"\n #include \"plasma/common.h\"\n #include \"plasma/fling.h\"\n #include \"plasma/io.h\"\n@@ -53,6 +54,8 @@\n \n namespace plasma {\n \n+using arrow::MutableBuffer;\n+\n // Number of threads used for memcopy and hash computations.\n constexpr int64_t kThreadPoolSize = 8;\n constexpr int64_t kBytesInMB = 1 << 20;\n@@ -145,7 +148,8 @@ void PlasmaClient::increment_object_count(const ObjectID& object_id, PlasmaObjec\n }\n \n Status PlasmaClient::Create(const ObjectID& object_id, int64_t data_size,\n-                            uint8_t* metadata, int64_t metadata_size, uint8_t** data) {\n+                            uint8_t* metadata, int64_t metadata_size,\n+                            std::shared_ptr<Buffer>* data) {\n   ARROW_LOG(DEBUG) << \"called plasma_create on conn \" << store_conn_ << \" with size \"\n                    << data_size << \" and metadata size \" << metadata_size;\n   RETURN_NOT_OK(SendCreateRequest(store_conn_, object_id, data_size, metadata_size));\n@@ -162,14 +166,16 @@ Status PlasmaClient::Create(const ObjectID& object_id, int64_t data_size,\n   ARROW_CHECK(object.metadata_size == metadata_size);\n   // The metadata should come right after the data.\n   ARROW_CHECK(object.metadata_offset == object.data_offset + data_size);\n-  *data = lookup_or_mmap(fd, object.handle.store_fd, object.handle.mmap_size) +\n-          object.data_offset;\n+  *data = std::make_shared<MutableBuffer>(\n+      lookup_or_mmap(fd, object.handle.store_fd, object.handle.mmap_size) +\n+          object.data_offset,\n+      data_size);\n   // If plasma_create is being called from a transfer, then we will not copy the\n   // metadata here. The metadata will be written along with the data streamed\n   // from the transfer.\n   if (metadata != NULL) {\n     // Copy the metadata to the buffer.\n-    memcpy(*data + object.data_size, metadata, metadata_size);\n+    memcpy((*data)->mutable_data() + object.data_size, metadata, metadata_size);\n   }\n   // Increment the count of the number of instances of this object that this\n   // client is using. A call to PlasmaClient::Release is required to decrement\n@@ -203,10 +209,12 @@ Status PlasmaClient::Get(const ObjectID* object_ids, int64_t num_objects,\n       ARROW_CHECK(object_entry->second->is_sealed)\n           << \"Plasma client called get on an unsealed object that it created\";\n       PlasmaObject* object = &object_entry->second->object;\n-      object_buffers[i].data = lookup_mmapped_file(object->handle.store_fd);\n-      object_buffers[i].data = object_buffers[i].data + object->data_offset;\n+      uint8_t* data = lookup_mmapped_file(object->handle.store_fd);\n+      object_buffers[i].data =\n+          std::make_shared<Buffer>(data + object->data_offset, object->data_size);\n+      object_buffers[i].metadata = std::make_shared<Buffer>(\n+          data + object->data_offset + object->data_size, object->metadata_size);\n       object_buffers[i].data_size = object->data_size;\n-      object_buffers[i].metadata = object_buffers[i].data + object->data_size;\n       object_buffers[i].metadata_size = object->metadata_size;\n       // Increment the count of the number of instances of this object that this\n       // client is using. A call to PlasmaClient::Release is required to\n@@ -254,13 +262,15 @@ Status PlasmaClient::Get(const ObjectID* object_ids, int64_t num_objects,\n       // The object was retrieved. The user will be responsible for releasing\n       // this object.\n       int fd = recv_fd(store_conn_);\n-      ARROW_CHECK(fd >= 0);\n-      object_buffers[i].data =\n+      uint8_t* data =\n           lookup_or_mmap(fd, object->handle.store_fd, object->handle.mmap_size);\n+      ARROW_CHECK(fd >= 0);\n       // Finish filling out the return values.\n-      object_buffers[i].data = object_buffers[i].data + object->data_offset;\n+      object_buffers[i].data =\n+          std::make_shared<Buffer>(data + object->data_offset, object->data_size);\n+      object_buffers[i].metadata = std::make_shared<Buffer>(\n+          data + object->data_offset + object->data_size, object->metadata_size);\n       object_buffers[i].data_size = object->data_size;\n-      object_buffers[i].metadata = object_buffers[i].data + object->data_size;\n       object_buffers[i].metadata_size = object->metadata_size;\n       // Increment the count of the number of instances of this object that this\n       // client is using. A call to PlasmaClient::Release is required to\n@@ -438,14 +448,16 @@ static uint64_t compute_object_hash(const ObjectBuffer& obj_buffer) {\n   XXH64_state_t hash_state;\n   XXH64_reset(&hash_state, XXH64_DEFAULT_SEED);\n   if (obj_buffer.data_size >= kBytesInMB) {\n-    compute_object_hash_parallel(&hash_state,\n-                                 reinterpret_cast<unsigned char*>(obj_buffer.data),\n-                                 obj_buffer.data_size);\n+    compute_object_hash_parallel(\n+        &hash_state, reinterpret_cast<const unsigned char*>(obj_buffer.data->data()),\n+        obj_buffer.data_size);\n   } else {\n-    XXH64_update(&hash_state, reinterpret_cast<unsigned char*>(obj_buffer.data),\n+    XXH64_update(&hash_state,\n+                 reinterpret_cast<const unsigned char*>(obj_buffer.data->data()),\n                  obj_buffer.data_size);\n   }\n-  XXH64_update(&hash_state, reinterpret_cast<unsigned char*>(obj_buffer.metadata),\n+  XXH64_update(&hash_state,\n+               reinterpret_cast<const unsigned char*>(obj_buffer.metadata->data()),\n                obj_buffer.metadata_size);\n   return XXH64_digest(&hash_state);\n }\ndiff --git a/cpp/src/plasma/client.h b/cpp/src/plasma/client.h\nindex cfd11c16d..78793f1a7 100644\n--- a/cpp/src/plasma/client.h\n+++ b/cpp/src/plasma/client.h\n@@ -26,11 +26,13 @@\n #include <string>\n #include <unordered_map>\n \n+#include \"arrow/buffer.h\"\n #include \"arrow/status.h\"\n #include \"arrow/util/visibility.h\"\n #include \"plasma/common.h\"\n \n using arrow::Status;\n+using arrow::Buffer;\n \n namespace plasma {\n \n@@ -41,14 +43,16 @@ constexpr int64_t kL3CacheSizeBytes = 100000000;\n \n /// Object buffer data structure.\n struct ObjectBuffer {\n+  /// The data buffer.\n+  std::shared_ptr<Buffer> data;\n   /// The size in bytes of the data object.\n   int64_t data_size;\n-  /// The address of the data object.\n-  uint8_t* data;\n+  /// The metadata buffer.\n+  std::shared_ptr<Buffer> metadata;\n   /// The metadata size in bytes.\n   int64_t metadata_size;\n-  /// The address of the metadata.\n-  uint8_t* metadata;\n+  /// The device number.\n+  int device_num;\n };\n \n /// Configuration options for the plasma client.\n@@ -107,11 +111,11 @@ class ARROW_EXPORT PlasmaClient {\n   ///        should be NULL.\n   /// \\param metadata_size The size in bytes of the metadata. If there is no\n   ///        metadata, this should be 0.\n-  /// \\param data The address of the newly created object will be written here.\n+  /// \\param data A buffer containing the address of the newly created object\n+  ///        will be written here.\n   /// \\return The return status.\n   Status Create(const ObjectID& object_id, int64_t data_size, uint8_t* metadata,\n-                int64_t metadata_size, uint8_t** data);\n-\n+                int64_t metadata_size, std::shared_ptr<Buffer>* data);\n   /// Get some objects from the Plasma Store. This function will block until the\n   /// objects have all been created and sealed in the Plasma Store or the\n   /// timeout\ndiff --git a/cpp/src/plasma/test/client_tests.cc b/cpp/src/plasma/test/client_tests.cc\nindex f44ed2510..5cd3063bb 100644\n--- a/cpp/src/plasma/test/client_tests.cc\n+++ b/cpp/src/plasma/test/client_tests.cc\n@@ -71,7 +71,7 @@ TEST_F(TestPlasmaStore, ContainsTest) {\n   int64_t data_size = 100;\n   uint8_t metadata[] = {5};\n   int64_t metadata_size = sizeof(metadata);\n-  uint8_t* data;\n+  std::shared_ptr<Buffer> data;\n   ARROW_CHECK_OK(client_.Create(object_id, data_size, metadata, metadata_size, &data));\n   ARROW_CHECK_OK(client_.Seal(object_id));\n   // Avoid race condition of Plasma Manager waiting for notification.\n@@ -94,16 +94,20 @@ TEST_F(TestPlasmaStore, GetTest) {\n   int64_t data_size = 4;\n   uint8_t metadata[] = {5};\n   int64_t metadata_size = sizeof(metadata);\n+  std::shared_ptr<Buffer> data_buffer;\n   uint8_t* data;\n-  ARROW_CHECK_OK(client_.Create(object_id, data_size, metadata, metadata_size, &data));\n+  ARROW_CHECK_OK(\n+      client_.Create(object_id, data_size, metadata, metadata_size, &data_buffer));\n+  data = data_buffer->mutable_data();\n   for (int64_t i = 0; i < data_size; i++) {\n     data[i] = static_cast<uint8_t>(i % 4);\n   }\n   ARROW_CHECK_OK(client_.Seal(object_id));\n \n   ARROW_CHECK_OK(client_.Get(&object_id, 1, -1, &object_buffer));\n+  const uint8_t* object_data = object_buffer.data->data();\n   for (int64_t i = 0; i < data_size; i++) {\n-    ASSERT_EQ(data[i], object_buffer.data[i]);\n+    ASSERT_EQ(data[i], object_data[i]);\n   }\n }\n \n@@ -116,18 +120,18 @@ TEST_F(TestPlasmaStore, MultipleGetTest) {\n   int64_t data_size = 4;\n   uint8_t metadata[] = {5};\n   int64_t metadata_size = sizeof(metadata);\n-  uint8_t* data;\n+  std::shared_ptr<Buffer> data;\n   ARROW_CHECK_OK(client_.Create(object_id1, data_size, metadata, metadata_size, &data));\n-  data[0] = 1;\n+  data->mutable_data()[0] = 1;\n   ARROW_CHECK_OK(client_.Seal(object_id1));\n \n   ARROW_CHECK_OK(client_.Create(object_id2, data_size, metadata, metadata_size, &data));\n-  data[0] = 2;\n+  data->mutable_data()[0] = 2;\n   ARROW_CHECK_OK(client_.Seal(object_id2));\n \n   ARROW_CHECK_OK(client_.Get(object_ids, 2, -1, object_buffer));\n-  ASSERT_EQ(object_buffer[0].data[0], 1);\n-  ASSERT_EQ(object_buffer[1].data[0], 2);\n+  ASSERT_EQ(object_buffer[0].data->data()[0], 1);\n+  ASSERT_EQ(object_buffer[1].data->data()[0], 2);\n }\n \n TEST_F(TestPlasmaStore, AbortTest) {\n@@ -143,11 +147,13 @@ TEST_F(TestPlasmaStore, AbortTest) {\n   int64_t data_size = 4;\n   uint8_t metadata[] = {5};\n   int64_t metadata_size = sizeof(metadata);\n-  uint8_t* data;\n+  std::shared_ptr<Buffer> data;\n+  uint8_t* data_ptr;\n   ARROW_CHECK_OK(client_.Create(object_id, data_size, metadata, metadata_size, &data));\n+  data_ptr = data->mutable_data();\n   // Write some data.\n   for (int64_t i = 0; i < data_size / 2; i++) {\n-    data[i] = static_cast<uint8_t>(i % 4);\n+    data_ptr[i] = static_cast<uint8_t>(i % 4);\n   }\n   // Attempt to abort. Test that this fails before the first release.\n   Status status = client_.Abort(object_id);\n@@ -162,15 +168,17 @@ TEST_F(TestPlasmaStore, AbortTest) {\n \n   // Create the object successfully this time.\n   ARROW_CHECK_OK(client_.Create(object_id, data_size, metadata, metadata_size, &data));\n+  data_ptr = data->mutable_data();\n   for (int64_t i = 0; i < data_size; i++) {\n-    data[i] = static_cast<uint8_t>(i % 4);\n+    data_ptr[i] = static_cast<uint8_t>(i % 4);\n   }\n   ARROW_CHECK_OK(client_.Seal(object_id));\n \n   // Test that we can get the object.\n   ARROW_CHECK_OK(client_.Get(&object_id, 1, -1, &object_buffer));\n+  const uint8_t* buffer_ptr = object_buffer.data->data();\n   for (int64_t i = 0; i < data_size; i++) {\n-    ASSERT_EQ(data[i], object_buffer.data[i]);\n+    ASSERT_EQ(data_ptr[i], buffer_ptr[i]);\n   }\n }\n \n@@ -187,7 +195,7 @@ TEST_F(TestPlasmaStore, MultipleClientTest) {\n   int64_t data_size = 100;\n   uint8_t metadata[] = {5};\n   int64_t metadata_size = sizeof(metadata);\n-  uint8_t* data;\n+  std::shared_ptr<Buffer> data;\n   ARROW_CHECK_OK(client2_.Create(object_id, data_size, metadata, metadata_size, &data));\n   ARROW_CHECK_OK(client2_.Seal(object_id));\n   // Test that the first client can get the object.\n@@ -227,7 +235,7 @@ TEST_F(TestPlasmaStore, ManyObjectTest) {\n     int64_t data_size = 100;\n     uint8_t metadata[] = {5};\n     int64_t metadata_size = sizeof(metadata);\n-    uint8_t* data;\n+    std::shared_ptr<Buffer> data;\n     ARROW_CHECK_OK(client_.Create(object_id, data_size, metadata, metadata_size, &data));\n \n     if (i % 3 == 0) {\ndiff --git a/python/pyarrow/plasma.pyx b/python/pyarrow/plasma.pyx\nindex f2e8653d8..2d42eb0a3 100644\n--- a/python/pyarrow/plasma.pyx\n+++ b/python/pyarrow/plasma.pyx\n@@ -81,7 +81,7 @@ cdef extern from \"plasma/client.h\" nogil:\n \n         CStatus Create(const CUniqueID& object_id, int64_t data_size,\n                        const uint8_t* metadata, int64_t metadata_size,\n-                       uint8_t** data)\n+                       const shared_ptr[CBuffer]* data)\n \n         CStatus Get(const CUniqueID* object_ids, int64_t num_objects,\n                     int64_t timeout_ms, CObjectBuffer* object_buffers)\n@@ -118,9 +118,9 @@ cdef extern from \"plasma/client.h\" nogil:\n \n     cdef struct CObjectBuffer\" plasma::ObjectBuffer\":\n         int64_t data_size\n-        uint8_t* data\n+        shared_ptr[CBuffer] data\n         int64_t metadata_size\n-        uint8_t* metadata\n+        shared_ptr[CBuffer] metadata\n \n \n def make_object_id(object_id):\n@@ -245,10 +245,8 @@ cdef class PlasmaClient:\n             check_status(self.client.get().Get(ids.data(), ids.size(),\n                          timeout_ms, result[0].data()))\n \n-    cdef _make_plasma_buffer(self, ObjectID object_id, uint8_t* data,\n+    cdef _make_plasma_buffer(self, ObjectID object_id, shared_ptr[CBuffer] buffer,\n                              int64_t size):\n-        cdef shared_ptr[CBuffer] buffer\n-        buffer.reset(new CBuffer(data, size))\n         result = PlasmaBuffer(object_id, self)\n         result.init(buffer)\n         return result\n@@ -296,12 +294,12 @@ cdef class PlasmaClient:\n                 not be created because the plasma store is unable to evict\n                 enough objects to create room for it.\n         \"\"\"\n-        cdef uint8_t* data\n+        cdef shared_ptr[CBuffer] data\n         with nogil:\n             check_status(self.client.get().Create(object_id.data, data_size,\n                                                   <uint8_t*>(metadata.data()),\n                                                   metadata.size(), &data))\n-        return self._make_mutable_plasma_buffer(object_id, data, data_size)\n+        return self._make_mutable_plasma_buffer(object_id, data.get().mutable_data(), data_size)\n \n     def get_buffers(self, object_ids, timeout_ms=-1):\n         \"\"\"\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-29T22:19:55.779+0000",
                    "updated": "2017-12-29T22:19:55.779+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13126989/comment/16306575",
                    "id": "16306575",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
                        "name": "pcmoritz",
                        "key": "pcmoritz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Philipp Moritz",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 1444\n[https://github.com/apache/arrow/pull/1444]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
                        "name": "pcmoritz",
                        "key": "pcmoritz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Philipp Moritz",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-29T22:20:05.837+0000",
                    "updated": "2017-12-29T22:20:05.837+0000"
                }
            ],
            "maxResults": 8,
            "total": 8,
            "startAt": 0
        },
        "customfield_12311820": "0|i3o92n:",
        "customfield_12314139": null
    }
}