{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13112830",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112830",
    "key": "ARROW-1748",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332430",
                "id": "12332430",
                "name": "GLib"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1748/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@29dbdc3b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@692735e7[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e7c240a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@e24ba2f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b29e201[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1ac1ab60[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25a29046[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@e7cb31f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7a31713b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6d3c5fb6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5cadd2f7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@37226636[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Oct 30 15:34:50 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-10-30T15:34:50.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1748/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-10-28T16:16:40.000+0000",
        "updated": "2017-10-30T15:34:50.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[GLib] Add GArrowRecordBatchBuilder",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112830/comment/16223628",
                    "id": "16223628",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "kou opened a new pull request #1265: ARROW-1748: [GLib] Add GArrowRecordBatchBuilder\nURL: https://github.com/apache/arrow/pull/1265\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-28T16:17:25.879+0000",
                    "updated": "2017-10-28T16:17:25.879+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112830/comment/16224252",
                    "id": "16224252",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "kou commented on issue #1265: ARROW-1748: [GLib] Add GArrowRecordBatchBuilder\nURL: https://github.com/apache/arrow/pull/1265#issuecomment-340314202\n \n \n   I don't know why C++ and Python tests are failed on Linux and macOS.\r\n   Is #1268 related?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-30T00:02:32.822+0000",
                    "updated": "2017-10-30T00:02:32.822+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112830/comment/16224254",
                    "id": "16224254",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1265: ARROW-1748: [GLib] Add GArrowRecordBatchBuilder\nURL: https://github.com/apache/arrow/pull/1265#issuecomment-340314454\n \n \n   @kou Not sure about c++ but #1268 fixes python tests. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-30T00:06:14.926+0000",
                    "updated": "2017-10-30T00:06:14.926+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112830/comment/16224261",
                    "id": "16224261",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "kou commented on issue #1265: ARROW-1748: [GLib] Add GArrowRecordBatchBuilder\nURL: https://github.com/apache/arrow/pull/1265#issuecomment-340315543\n \n \n   @cpcloud Thanks. I'll rebase on master and confirm Travis CI result after #1268 is merged.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-30T00:23:45.555+0000",
                    "updated": "2017-10-30T00:23:45.555+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112830/comment/16224311",
                    "id": "16224311",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "kou commented on issue #1265: ARROW-1748: [GLib] Add GArrowRecordBatchBuilder\nURL: https://github.com/apache/arrow/pull/1265#issuecomment-340326103\n \n \n   I rebased and confirmed all tests on Travis CI are green.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-30T02:16:25.508+0000",
                    "updated": "2017-10-30T02:16:25.508+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112830/comment/16224313",
                    "id": "16224313",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1265\n[https://github.com/apache/arrow/pull/1265]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-10-30T02:18:56.279+0000",
                    "updated": "2017-10-30T02:18:56.279+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112830/comment/16224314",
                    "id": "16224314",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1265: ARROW-1748: [GLib] Add GArrowRecordBatchBuilder\nURL: https://github.com/apache/arrow/pull/1265\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/c_glib/arrow-glib/Makefile.am b/c_glib/arrow-glib/Makefile.am\nindex 2066fa77c..bf68ec491 100644\n--- a/c_glib/arrow-glib/Makefile.am\n+++ b/c_glib/arrow-glib/Makefile.am\n@@ -57,6 +57,7 @@ libarrow_glib_la_headers =\t\t\t\\\n \trecord-batch.h\t\t\t\t\\\n \tschema.h\t\t\t\t\\\n \ttable.h\t\t\t\t\t\\\n+\ttable-builder.h\t\t\t\t\\\n \ttensor.h\t\t\t\t\\\n \ttype.h\n \n@@ -97,6 +98,7 @@ libarrow_glib_la_sources =\t\t\t\\\n \trecord-batch.cpp\t\t\t\\\n \tschema.cpp\t\t\t\t\\\n \ttable.cpp\t\t\t\t\\\n+\ttable-builder.cpp\t\t\t\\\n \ttensor.cpp\t\t\t\t\\\n \ttype.cpp\t\t\t\t\\\n \t$(libarrow_glib_la_headers)\t\t\\\n@@ -133,6 +135,7 @@ libarrow_glib_la_cpp_headers =\t\t\t\\\n \trecord-batch.hpp\t\t\t\\\n \tschema.hpp\t\t\t\t\\\n \ttable.hpp\t\t\t\t\\\n+\ttable-builder.hpp\t\t\t\\\n \ttensor.hpp\t\t\t\t\\\n \ttype.hpp\n \ndiff --git a/c_glib/arrow-glib/array-builder.cpp b/c_glib/arrow-glib/array-builder.cpp\nindex bea7e8342..86e7f985b 100644\n--- a/c_glib/arrow-glib/array-builder.cpp\n+++ b/c_glib/arrow-glib/array-builder.cpp\n@@ -202,6 +202,7 @@ G_BEGIN_DECLS\n \n typedef struct GArrowArrayBuilderPrivate_ {\n   arrow::ArrayBuilder *array_builder;\n+  gboolean have_ownership;\n } GArrowArrayBuilderPrivate;\n \n enum {\n@@ -225,7 +226,9 @@ garrow_array_builder_finalize(GObject *object)\n \n   priv = GARROW_ARRAY_BUILDER_GET_PRIVATE(object);\n \n-  delete priv->array_builder;\n+  if (priv->have_ownership) {\n+    delete priv->array_builder;\n+  }\n \n   G_OBJECT_CLASS(garrow_array_builder_parent_class)->finalize(object);\n }\n@@ -267,6 +270,10 @@ garrow_array_builder_get_property(GObject *object,\n static void\n garrow_array_builder_init(GArrowArrayBuilder *builder)\n {\n+  GArrowArrayBuilderPrivate *priv;\n+\n+  priv = GARROW_ARRAY_BUILDER_GET_PRIVATE(builder);\n+  priv->have_ownership = TRUE;\n }\n \n static void\n@@ -301,7 +308,24 @@ garrow_array_builder_new(const std::shared_ptr<arrow::DataType> &type,\n     return NULL;\n   }\n   return garrow_array_builder_new_raw(arrow_builder.release());\n-};\n+}\n+\n+/**\n+ * garrow_array_builder_release_ownership: (skip)\n+ * @builder: A #GArrowArrayBuilder.\n+ *\n+ * Release ownership of `arrow::ArrayBuilder` in `builder`.\n+ *\n+ * Since: 0.8.8\n+ */\n+void\n+garrow_array_builder_release_ownership(GArrowArrayBuilder *builder)\n+{\n+  GArrowArrayBuilderPrivate *priv;\n+\n+  priv = GARROW_ARRAY_BUILDER_GET_PRIVATE(builder);\n+  priv->have_ownership = FALSE;\n+}\n \n /**\n  * garrow_array_builder_finish:\ndiff --git a/c_glib/arrow-glib/array-builder.h b/c_glib/arrow-glib/array-builder.h\nindex d9e91212e..19dadb309 100644\n--- a/c_glib/arrow-glib/array-builder.h\n+++ b/c_glib/arrow-glib/array-builder.h\n@@ -35,6 +35,8 @@ struct _GArrowArrayBuilderClass\n   GObjectClass parent_class;\n };\n \n+void garrow_array_builder_release_ownership(GArrowArrayBuilder *builder);\n+\n GArrowArray        *garrow_array_builder_finish   (GArrowArrayBuilder *builder,\n                                                    GError **error);\n \ndiff --git a/c_glib/arrow-glib/arrow-glib.h b/c_glib/arrow-glib/arrow-glib.h\nindex 47f324dc0..fb1b37e2c 100644\n--- a/c_glib/arrow-glib/arrow-glib.h\n+++ b/c_glib/arrow-glib/arrow-glib.h\n@@ -33,6 +33,7 @@\n #include <arrow-glib/record-batch.h>\n #include <arrow-glib/schema.h>\n #include <arrow-glib/table.h>\n+#include <arrow-glib/table-builder.h>\n #include <arrow-glib/tensor.h>\n #include <arrow-glib/type.h>\n \ndiff --git a/c_glib/arrow-glib/arrow-glib.hpp b/c_glib/arrow-glib/arrow-glib.hpp\nindex 7fc6c4828..0c411346a 100644\n--- a/c_glib/arrow-glib/arrow-glib.hpp\n+++ b/c_glib/arrow-glib/arrow-glib.hpp\n@@ -32,6 +32,7 @@\n #include <arrow-glib/record-batch.hpp>\n #include <arrow-glib/schema.hpp>\n #include <arrow-glib/table.hpp>\n+#include <arrow-glib/table-builder.hpp>\n #include <arrow-glib/tensor.hpp>\n #include <arrow-glib/type.hpp>\n \ndiff --git a/c_glib/arrow-glib/meson.build b/c_glib/arrow-glib/meson.build\nindex 226c696bd..464a002e7 100644\n--- a/c_glib/arrow-glib/meson.build\n+++ b/c_glib/arrow-glib/meson.build\n@@ -30,6 +30,7 @@ sources = files(\n   'record-batch.cpp',\n   'schema.cpp',\n   'table.cpp',\n+  'table-builder.cpp',\n   'tensor.cpp',\n   'type.cpp',\n )\n@@ -70,6 +71,7 @@ c_headers = files(\n   'record-batch.h',\n   'schema.h',\n   'table.h',\n+  'table-builder.h',\n   'tensor.h',\n   'type.h',\n )\n@@ -110,6 +112,7 @@ cpp_headers = files(\n   'record-batch.hpp',\n   'schema.hpp',\n   'table.hpp',\n+  'table-builder.hpp',\n   'tensor.hpp',\n   'type.hpp',\n )\ndiff --git a/c_glib/arrow-glib/table-builder.cpp b/c_glib/arrow-glib/table-builder.cpp\nnew file mode 100644\nindex 000000000..e87314bf5\n--- /dev/null\n+++ b/c_glib/arrow-glib/table-builder.cpp\n@@ -0,0 +1,303 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#ifdef HAVE_CONFIG_H\n+#  include <config.h>\n+#endif\n+\n+#include <arrow-glib/array-builder.hpp>\n+#include <arrow-glib/error.hpp>\n+#include <arrow-glib/record-batch.hpp>\n+#include <arrow-glib/schema.hpp>\n+#include <arrow-glib/table-builder.hpp>\n+\n+G_BEGIN_DECLS\n+\n+/**\n+ * SECTION: table-builder\n+ * @section_id: table-builder-classes\n+ * @title: Table builder classes\n+ * @include: arrow-glib/arrow-glib.h\n+ *\n+ * #GArrowRecordBatchBuilder is a class to create\n+ * new #GArrowRecordBatch.\n+ */\n+\n+typedef struct GArrowRecordBatchBuilderPrivate_ {\n+  arrow::RecordBatchBuilder *record_batch_builder;\n+  GPtrArray *fields;\n+} GArrowRecordBatchBuilderPrivate;\n+\n+enum {\n+  PROP_0,\n+  PROP_RECORD_BATCH_BUILDER\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GArrowRecordBatchBuilder,\n+                           garrow_record_batch_builder,\n+                           G_TYPE_OBJECT)\n+\n+#define GARROW_RECORD_BATCH_BUILDER_GET_PRIVATE(object)            \\\n+  static_cast<GArrowRecordBatchBuilderPrivate *>(                  \\\n+    garrow_record_batch_builder_get_instance_private(              \\\n+      GARROW_RECORD_BATCH_BUILDER(object)))\n+\n+static void\n+garrow_record_batch_builder_constructed(GObject *object)\n+{\n+  auto priv = GARROW_RECORD_BATCH_BUILDER_GET_PRIVATE(object);\n+  auto arrow_builder = priv->record_batch_builder;\n+  auto n_fields = arrow_builder->num_fields();\n+  priv->fields = g_ptr_array_new_full(n_fields, g_object_unref);\n+  for (int i = 0; i < n_fields; ++i) {\n+    auto arrow_array_builder = arrow_builder->GetField(i);\n+    auto array_builder = garrow_array_builder_new_raw(arrow_array_builder);\n+    garrow_array_builder_release_ownership(array_builder);\n+    g_ptr_array_add(priv->fields, array_builder);\n+  }\n+\n+  G_OBJECT_CLASS(garrow_record_batch_builder_parent_class)->constructed(object);\n+}\n+\n+static void\n+garrow_record_batch_builder_finalize(GObject *object)\n+{\n+  auto priv = GARROW_RECORD_BATCH_BUILDER_GET_PRIVATE(object);\n+\n+  g_ptr_array_free(priv->fields, TRUE);\n+  delete priv->record_batch_builder;\n+\n+  G_OBJECT_CLASS(garrow_record_batch_builder_parent_class)->finalize(object);\n+}\n+\n+static void\n+garrow_record_batch_builder_set_property(GObject *object,\n+                                         guint prop_id,\n+                                         const GValue *value,\n+                                         GParamSpec *pspec)\n+{\n+  auto priv = GARROW_RECORD_BATCH_BUILDER_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_RECORD_BATCH_BUILDER:\n+    priv->record_batch_builder =\n+      static_cast<arrow::RecordBatchBuilder *>(g_value_get_pointer(value));\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_record_batch_builder_get_property(GObject *object,\n+                                         guint prop_id,\n+                                         GValue *value,\n+                                         GParamSpec *pspec)\n+{\n+  switch (prop_id) {\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_record_batch_builder_init(GArrowRecordBatchBuilder *builder)\n+{\n+}\n+\n+static void\n+garrow_record_batch_builder_class_init(GArrowRecordBatchBuilderClass *klass)\n+{\n+  auto gobject_class = G_OBJECT_CLASS(klass);\n+\n+  gobject_class->constructed  = garrow_record_batch_builder_constructed;\n+  gobject_class->finalize     = garrow_record_batch_builder_finalize;\n+  gobject_class->set_property = garrow_record_batch_builder_set_property;\n+  gobject_class->get_property = garrow_record_batch_builder_get_property;\n+\n+  GParamSpec *spec;\n+  spec = g_param_spec_pointer(\"record-batch-builder\",\n+                              \"RecordBatch builder\",\n+                              \"The raw arrow::RecordBatchBuilder *\",\n+                              static_cast<GParamFlags>(G_PARAM_WRITABLE |\n+                                                       G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class,\n+                                  PROP_RECORD_BATCH_BUILDER,\n+                                  spec);\n+}\n+\n+/**\n+ * garrow_record_batch_builder_new:\n+ * @schema: A #GArrowSchema.\n+ * @error: (nullable): Return location for a #GError or %NULL.\n+ *\n+ * Returns: A newly created #GArrowRecordBatchBuilder on success,\n+ *   %NULL on error.\n+ *\n+ * Since: 0.8.0\n+ */\n+GArrowRecordBatchBuilder *\n+garrow_record_batch_builder_new(GArrowSchema *schema, GError **error)\n+{\n+  auto arrow_schema = garrow_schema_get_raw(schema);\n+  auto memory_pool = arrow::default_memory_pool();\n+  std::unique_ptr<arrow::RecordBatchBuilder> arrow_builder;\n+  auto status = arrow::RecordBatchBuilder::Make(arrow_schema,\n+                                                memory_pool,\n+                                                &arrow_builder);\n+  if (garrow_error_check(error, status, \"[record-batch-builder][new]\")) {\n+    return garrow_record_batch_builder_new_raw(arrow_builder.release());\n+  } else {\n+    return NULL;\n+  }\n+}\n+\n+/**\n+ * garrow_record_batch_builder_get_initial_capacity:\n+ * @builder: A #GArrowRecordBatchBuilder.\n+ *\n+ * Returns: The initial capacity for array builders.\n+ *\n+ * Since: 0.8.0\n+ */\n+gint64\n+garrow_record_batch_builder_get_initial_capacity(GArrowRecordBatchBuilder *builder)\n+{\n+  auto arrow_builder = garrow_record_batch_builder_get_raw(builder);\n+  return arrow_builder->initial_capacity();\n+}\n+\n+/**\n+ * garrow_record_batch_builder_set_initial_capacity:\n+ * @builder: A #GArrowRecordBatchBuilder.\n+ * @capacity: The new initial capacity for array builders.\n+ *\n+ * Since: 0.8.0\n+ */\n+void\n+garrow_record_batch_builder_set_initial_capacity(GArrowRecordBatchBuilder *builder,\n+                                                 gint64 capacity)\n+{\n+  auto arrow_builder = garrow_record_batch_builder_get_raw(builder);\n+  arrow_builder->SetInitialCapacity(capacity);\n+}\n+\n+/**\n+ * garrow_record_batch_builder_get_schema:\n+ * @builder: A #GArrowRecordBatchBuilder.\n+ *\n+ * Returns: (transfer full): The #GArrowSchema of the record batch builder.\n+ *\n+ * Since: 0.8.0\n+ */\n+GArrowSchema *\n+garrow_record_batch_builder_get_schema(GArrowRecordBatchBuilder *builder)\n+{\n+  auto arrow_builder = garrow_record_batch_builder_get_raw(builder);\n+  auto arrow_schema = arrow_builder->schema();\n+  return garrow_schema_new_raw(&arrow_schema);\n+}\n+\n+/**\n+ * garrow_record_batch_builder_get_n_fields:\n+ * @builder: A #GArrowRecordBatchBuilder.\n+ *\n+ * Returns: The number of fields.\n+ *\n+ * Since: 0.8.0\n+ */\n+gint\n+garrow_record_batch_builder_get_n_fields(GArrowRecordBatchBuilder *builder)\n+{\n+  auto arrow_builder = garrow_record_batch_builder_get_raw(builder);\n+  return arrow_builder->num_fields();\n+}\n+\n+/**\n+ * garrow_record_batch_builder_get_field:\n+ * @builder: A #GArrowRecordBatchBuilder.\n+ * @i: The field index. If it's negative, index is counted backward\n+ *   from the end of the fields. `-1` means the last field.\n+ *\n+ * Returns: (transfer none) (nullable): The #GArrowArrayBuilder for\n+ *   the `i`-th field on success, %NULL on out of index.\n+ *\n+ * Since: 0.8.0\n+ */\n+GArrowArrayBuilder *\n+garrow_record_batch_builder_get_field(GArrowRecordBatchBuilder *builder,\n+                                      gint i)\n+{\n+  auto priv = GARROW_RECORD_BATCH_BUILDER_GET_PRIVATE(builder);\n+  if (i < 0) {\n+    i += priv->fields->len;\n+  }\n+  if (i < 0) {\n+    return NULL;\n+  }\n+  if (static_cast<guint>(i) >= priv->fields->len) {\n+    return NULL;\n+  }\n+\n+  return GARROW_ARRAY_BUILDER(g_ptr_array_index(priv->fields, i));\n+}\n+\n+/**\n+ * garrow_record_batch_builder_flush:\n+ * @builder: A #GArrowRecordBatchBuilder.\n+ * @error: (nullable): Return location for a #GError or %NULL.\n+ *\n+ * Returns: (transfer full): The built #GArrowRecordBatch on success,\n+ *   %NULL on error.\n+ *\n+ * Since: 0.8.0\n+ */\n+GArrowRecordBatch *\n+garrow_record_batch_builder_flush(GArrowRecordBatchBuilder *builder,\n+                                  GError **error)\n+{\n+  auto arrow_builder = garrow_record_batch_builder_get_raw(builder);\n+  std::shared_ptr<arrow::RecordBatch> arrow_record_batch;\n+  auto status = arrow_builder->Flush(&arrow_record_batch);\n+  if (garrow_error_check(error, status, \"[record-batch-builder][flush]\")) {\n+    return garrow_record_batch_new_raw(&arrow_record_batch);\n+  } else {\n+    return NULL;\n+  }\n+}\n+\n+G_END_DECLS\n+\n+GArrowRecordBatchBuilder *\n+garrow_record_batch_builder_new_raw(arrow::RecordBatchBuilder *arrow_builder)\n+{\n+  auto builder = g_object_new(GARROW_TYPE_RECORD_BATCH_BUILDER,\n+                              \"record-batch-builder\", arrow_builder,\n+                              NULL);\n+  return GARROW_RECORD_BATCH_BUILDER(builder);\n+}\n+\n+arrow::RecordBatchBuilder *\n+garrow_record_batch_builder_get_raw(GArrowRecordBatchBuilder *builder)\n+{\n+  auto priv = GARROW_RECORD_BATCH_BUILDER_GET_PRIVATE(builder);\n+  return priv->record_batch_builder;\n+}\ndiff --git a/c_glib/arrow-glib/table-builder.h b/c_glib/arrow-glib/table-builder.h\nnew file mode 100644\nindex 000000000..d05525e54\n--- /dev/null\n+++ b/c_glib/arrow-glib/table-builder.h\n@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#pragma once\n+\n+#include <arrow-glib/array-builder.h>\n+#include <arrow-glib/gobject-type.h>\n+#include <arrow-glib/record-batch.h>\n+#include <arrow-glib/schema.h>\n+\n+G_BEGIN_DECLS\n+\n+#define GARROW_TYPE_RECORD_BATCH_BUILDER (garrow_record_batch_builder_get_type())\n+G_DECLARE_DERIVABLE_TYPE(GArrowRecordBatchBuilder,\n+                         garrow_record_batch_builder,\n+                         GARROW,\n+                         RECORD_BATCH_BUILDER,\n+                         GObject)\n+struct _GArrowRecordBatchBuilderClass\n+{\n+  GObjectClass parent_class;\n+};\n+\n+GArrowRecordBatchBuilder *garrow_record_batch_builder_new(GArrowSchema *schema,\n+                                                          GError **error);\n+\n+gint64 garrow_record_batch_builder_get_initial_capacity(GArrowRecordBatchBuilder *builder);\n+void garrow_record_batch_builder_set_initial_capacity(GArrowRecordBatchBuilder *builder,\n+                                                      gint64 capacity);\n+GArrowSchema *garrow_record_batch_builder_get_schema(GArrowRecordBatchBuilder *builder);\n+\n+gint garrow_record_batch_builder_get_n_fields(GArrowRecordBatchBuilder *builder);\n+GArrowArrayBuilder *garrow_record_batch_builder_get_field(GArrowRecordBatchBuilder *builder,\n+                                                          gint i);\n+\n+GArrowRecordBatch *garrow_record_batch_builder_flush(GArrowRecordBatchBuilder *builder,\n+                                                     GError **error);\n+\n+\n+G_END_DECLS\ndiff --git a/c_glib/arrow-glib/table-builder.hpp b/c_glib/arrow-glib/table-builder.hpp\nnew file mode 100644\nindex 000000000..cf93ded9b\n--- /dev/null\n+++ b/c_glib/arrow-glib/table-builder.hpp\n@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#pragma once\n+\n+#include <arrow/api.h>\n+\n+#include <arrow-glib/table-builder.h>\n+\n+GArrowRecordBatchBuilder *garrow_record_batch_builder_new_raw(arrow::RecordBatchBuilder *arrow_builder);\n+arrow::RecordBatchBuilder *garrow_record_batch_builder_get_raw(GArrowRecordBatchBuilder *builder);\ndiff --git a/c_glib/doc/reference/arrow-glib-docs.sgml b/c_glib/doc/reference/arrow-glib-docs.sgml\nindex fc161a586..a504ef114 100644\n--- a/c_glib/doc/reference/arrow-glib-docs.sgml\n+++ b/c_glib/doc/reference/arrow-glib-docs.sgml\n@@ -72,6 +72,10 @@\n       <xi:include href=\"xml/column.xml\"/>\n       <xi:include href=\"xml/chunked-array.xml\"/>\n     </chapter>\n+    <chapter id=\"table-builder\">\n+      <title>Table builder</title>\n+      <xi:include href=\"xml/table-builder.xml\"/>\n+    </chapter>\n     <chapter id=\"buffer\">\n       <title>Buffer</title>\n       <xi:include href=\"xml/buffer.xml\"/>\ndiff --git a/c_glib/test/test-record-batch-builder.rb b/c_glib/test/test-record-batch-builder.rb\nnew file mode 100644\nindex 000000000..1bb72820a\n--- /dev/null\n+++ b/c_glib/test/test-record-batch-builder.rb\n@@ -0,0 +1,84 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+class TestRecordBatchBuilder < Test::Unit::TestCase\n+  include Helper::Buildable\n+\n+  def setup\n+    @fields = [\n+      Arrow::Field.new(\"visible\", Arrow::BooleanDataType.new),\n+      Arrow::Field.new(\"point\", Arrow::Int32DataType.new),\n+    ]\n+    @schema = Arrow::Schema.new(@fields)\n+    @builder = Arrow::RecordBatchBuilder.new(@schema)\n+  end\n+\n+  def test_initial_capacity\n+    @builder.initial_capacity = 128\n+    assert_equal(128, @builder.initial_capacity)\n+  end\n+\n+  def test_schema\n+    assert_equal(@schema, @builder.schema)\n+  end\n+\n+  def test_n_fields\n+    assert_equal(@fields.size, @builder.n_fields)\n+  end\n+\n+  sub_test_case(\"#get_field\") do\n+    def test_valid\n+      assert_equal(Arrow::BooleanArrayBuilder,\n+                   @builder.get_field(0).class)\n+    end\n+\n+    def test_negative\n+      assert_equal(Arrow::Int32ArrayBuilder,\n+                   @builder.get_field(-1).class)\n+    end\n+\n+    def test_too_negative\n+      assert_nil(@builder.get_field(-@fields.size - 1))\n+    end\n+\n+    def test_too_large\n+      assert_nil(@builder.get_field(@fields.size))\n+    end\n+  end\n+\n+  def test_flush\n+    arrays = {\n+      \"visible\" => build_boolean_array([true, false, true]),\n+      \"point\"   => build_int32_array([1, -1, 0]),\n+    }\n+    arrays.each_with_index do |(_, array), i|\n+      @builder.get_field(i).append_values(array.values, [])\n+    end\n+    assert_equal(build_record_batch(arrays),\n+                 @builder.flush)\n+\n+    arrays = {\n+      \"visible\" => build_boolean_array([false, true]),\n+      \"point\"   => build_int32_array([10, -10]),\n+    }\n+    arrays.each_with_index do |(_, array), i|\n+      @builder.get_field(i).append_values(array.values, [])\n+    end\n+    assert_equal(build_record_batch(arrays),\n+                 @builder.flush)\n+  end\n+end\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-30T02:18:56.532+0000",
                    "updated": "2017-10-30T02:18:56.532+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112830/comment/16225156",
                    "id": "16225156",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Resolved by PR https://github.com/apache/arrow/commit/1d36dd2543e7dc5d1084d8f9552e851438b1c80a",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-10-30T15:34:50.637+0000",
                    "updated": "2017-10-30T15:34:50.637+0000"
                }
            ],
            "maxResults": 8,
            "total": 8,
            "startAt": 0
        },
        "customfield_12311820": "0|i3lu0f:",
        "customfield_12314139": null
    }
}