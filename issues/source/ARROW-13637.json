{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13395500",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500",
    "key": "ARROW-13637",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "1.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12621190",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12621190",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13390911",
                    "key": "ARROW-13407",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390911",
                    "fields": {
                        "summary": "[Documentation] Documentation Improvements",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "aggregateprogress": {
            "progress": 22800,
            "total": 22800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 22800,
            "total": 22800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13637/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 38,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/655485",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#issuecomment-927844484\n\n\n   https://issues.apache.org/jira/browse/ARROW-13637\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-27T12:54:56.000+0000",
                    "updated": "2021-09-27T12:54:56.000+0000",
                    "started": "2021-09-27T12:54:56.000+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655485",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/656097",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r717435829\n\n\n\n##########\nFile path: python/pyarrow/_fs.pyx\n##########\n@@ -934,36 +934,42 @@ class FileSystemHandler(ABC):\n         \"\"\"\n         Implement PyFileSystem.type_name.\n         \"\"\"\n+    get_type_name.__doc__ = FileSystem.get_type_name.__doc__\n \n     @abstractmethod\n     def get_file_info(self, paths):\n         \"\"\"\n         Implement PyFileSystem.get_file_info(paths).\n         \"\"\"\n+    get_file_info.__doc__ = FileSystem.get_file_info.__doc__\n \n     @abstractmethod\n     def get_file_info_selector(self, selector):\n         \"\"\"\n         Implement PyFileSystem.get_file_info(selector).\n         \"\"\"\n+    get_file_info_selector.__doc__ = FileSystem.get_file_info_selector.__doc__\n\nReview comment:\n       `FileSystem.get_file_info_selector` doesn't exist. In general, there is not necessarily a 1:1 mapping between FileSystemHandler and FileSystem methods, so I would maybe leave those docstrings as is. \r\n   I think the \"Implement ...\" is actually also useful to keep (while now the docstring gets overwritten).\n\n##########\nFile path: python/pyarrow/_fs.pyx\n##########\n@@ -934,36 +934,42 @@ class FileSystemHandler(ABC):\n         \"\"\"\n         Implement PyFileSystem.type_name.\n         \"\"\"\n+    get_type_name.__doc__ = FileSystem.get_type_name.__doc__\n \n     @abstractmethod\n     def get_file_info(self, paths):\n         \"\"\"\n         Implement PyFileSystem.get_file_info(paths).\n         \"\"\"\n+    get_file_info.__doc__ = FileSystem.get_file_info.__doc__\n \n     @abstractmethod\n     def get_file_info_selector(self, selector):\n         \"\"\"\n         Implement PyFileSystem.get_file_info(selector).\n         \"\"\"\n+    get_file_info_selector.__doc__ = FileSystem.get_file_info_selector.__doc__\n \n     @abstractmethod\n     def create_dir(self, path, recursive):\n         \"\"\"\n         Implement PyFileSystem.create_dir(...).\n         \"\"\"\n+    create_dir.__doc__ = FileSystem.create_dir.__doc__\n \n     @abstractmethod\n     def delete_dir(self, path):\n         \"\"\"\n         Implement PyFileSystem.delete_dir(...).\n         \"\"\"\n+    delete_dir.__doc__ = FileSystem.delete_dir.__doc__\n \n     @abstractmethod\n     def delete_dir_contents(self, path):\n         \"\"\"\n         Implement PyFileSystem.delete_dir_contents(...).\n         \"\"\"\n+    delete_dir_contents.__doc__ = FileSystem.delete_dir_contents.__doc__\n\nReview comment:\n       Another example here of what I commented above: the docstring of `FileSystem.delete_dir_contents` won't actually be fully correct, since it has more keywords than `FileSystemHandler.delete_dir_contents`. \n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -38,6 +38,16 @@ strides: {0.strides}\"\"\".format(self)\n \n     @staticmethod\n     def from_numpy(obj, dim_names=None):\n+        \"\"\"\n+        Create a Tensor from a numpy array.\n+\n+        Parameters\n+        ----------\n+        obj : numpy.ndarray\n+            The source numpy array\n+        dim_names : list\n\nReview comment:\n       ```suggestion\r\n           dim_names : list, optional\r\n   ```\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1307,6 +1307,18 @@ ctypedef CRandomAccessFile* _RandomAccessFilePtr\n \n \n cdef class BufferedInputStream(NativeFile):\n+    \"\"\"\n+    Wraps an input stream making it buffered.\n+\n\nReview comment:\n       We could maybe add some extra explanation of what \"buffered\" means / why it's used. From the C++ doc comment:\r\n   \r\n   > An InputStream that performs buffered reads from an unbuffered InputStream, which can mitigate the overhead of many small reads in some cases\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1307,6 +1307,18 @@ ctypedef CRandomAccessFile* _RandomAccessFilePtr\n \n \n cdef class BufferedInputStream(NativeFile):\n+    \"\"\"\n+    Wraps an input stream making it buffered.\n+\n+    Parameters\n+    ----------\n+    stream : NativeFile\n+        The stream to wrap with the buffer\n+    buffer_size : int\n+        Size of the buffer that should be added.\n\nReview comment:\n       \"added\" sounds a bit strange in this context? (the C++ version says \"the size of the temporary read buffer\")\n\n##########\nFile path: python/pyarrow/compute.py\n##########\n@@ -132,11 +132,15 @@ def _decorate_compute_function(wrapper, exposed_name, func, option_class):\n     if option_class is not None:\n         doc_pieces.append(\"\"\"\\\n             options : pyarrow.compute.{0}, optional\n-                Parameters altering compute function semantics\n-            **kwargs : optional\n-                Parameters for {0} constructor. Either `options`\n-                or `**kwargs` can be passed, but not both at the same time.\n+                Parameters altering compute function semantics.\n             \"\"\".format(option_class.__name__))\n+        options_sig = inspect.signature(option_class)\n+        for p in options_sig.parameters.values():\n+            doc_pieces.append(\"\"\"\\\n+            {0} : optional\n+                Parameter for {1} constructor. Either `options`\n+                or `{0}` can be passed, but not both at the same time.\n+            \"\"\".format(p.name, option_class.__name__))\n\nReview comment:\n       Nice! (now we should still have a way to automatically add actual explanation of the keyword, but that's for another JIRA :))\n\n##########\nFile path: python/pyarrow/parquet.py\n##########\n@@ -214,6 +214,8 @@ class ParquetFile:\n         Coalesce and issue file reads in parallel to improve performance on\n         high-latency filesystems (e.g. S3). If True, Arrow will use a\n         background I/O thread pool.\n+    read_dictionary : list\n+        List of names to read directly as DictionaryArray\n\nReview comment:\n       ```suggestion\r\n           List of names to read directly as DictionaryArray.\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-28T11:45:16.871+0000",
                    "updated": "2021-09-28T11:45:16.871+0000",
                    "started": "2021-09-28T11:45:16.871+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "656097",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/656833",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r717435829\n\n\n\n##########\nFile path: python/pyarrow/_fs.pyx\n##########\n@@ -934,36 +934,42 @@ class FileSystemHandler(ABC):\n         \"\"\"\n         Implement PyFileSystem.type_name.\n         \"\"\"\n+    get_type_name.__doc__ = FileSystem.get_type_name.__doc__\n \n     @abstractmethod\n     def get_file_info(self, paths):\n         \"\"\"\n         Implement PyFileSystem.get_file_info(paths).\n         \"\"\"\n+    get_file_info.__doc__ = FileSystem.get_file_info.__doc__\n \n     @abstractmethod\n     def get_file_info_selector(self, selector):\n         \"\"\"\n         Implement PyFileSystem.get_file_info(selector).\n         \"\"\"\n+    get_file_info_selector.__doc__ = FileSystem.get_file_info_selector.__doc__\n\nReview comment:\n       `FileSystem.get_file_info_selector` doesn't exist. In general, there is not necessarily a 1:1 mapping between FileSystemHandler and FileSystem methods, so I would maybe leave those docstrings as is. \r\n   I think the \"Implement ...\" is actually also useful to keep (while now the docstring gets overwritten).\n\n##########\nFile path: python/pyarrow/_fs.pyx\n##########\n@@ -934,36 +934,42 @@ class FileSystemHandler(ABC):\n         \"\"\"\n         Implement PyFileSystem.type_name.\n         \"\"\"\n+    get_type_name.__doc__ = FileSystem.get_type_name.__doc__\n \n     @abstractmethod\n     def get_file_info(self, paths):\n         \"\"\"\n         Implement PyFileSystem.get_file_info(paths).\n         \"\"\"\n+    get_file_info.__doc__ = FileSystem.get_file_info.__doc__\n \n     @abstractmethod\n     def get_file_info_selector(self, selector):\n         \"\"\"\n         Implement PyFileSystem.get_file_info(selector).\n         \"\"\"\n+    get_file_info_selector.__doc__ = FileSystem.get_file_info_selector.__doc__\n \n     @abstractmethod\n     def create_dir(self, path, recursive):\n         \"\"\"\n         Implement PyFileSystem.create_dir(...).\n         \"\"\"\n+    create_dir.__doc__ = FileSystem.create_dir.__doc__\n \n     @abstractmethod\n     def delete_dir(self, path):\n         \"\"\"\n         Implement PyFileSystem.delete_dir(...).\n         \"\"\"\n+    delete_dir.__doc__ = FileSystem.delete_dir.__doc__\n \n     @abstractmethod\n     def delete_dir_contents(self, path):\n         \"\"\"\n         Implement PyFileSystem.delete_dir_contents(...).\n         \"\"\"\n+    delete_dir_contents.__doc__ = FileSystem.delete_dir_contents.__doc__\n\nReview comment:\n       Another example here of what I commented above: the docstring of `FileSystem.delete_dir_contents` won't actually be fully correct, since it has more keywords than `FileSystemHandler.delete_dir_contents`. \n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -38,6 +38,16 @@ strides: {0.strides}\"\"\".format(self)\n \n     @staticmethod\n     def from_numpy(obj, dim_names=None):\n+        \"\"\"\n+        Create a Tensor from a numpy array.\n+\n+        Parameters\n+        ----------\n+        obj : numpy.ndarray\n+            The source numpy array\n+        dim_names : list\n\nReview comment:\n       ```suggestion\r\n           dim_names : list, optional\r\n   ```\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1307,6 +1307,18 @@ ctypedef CRandomAccessFile* _RandomAccessFilePtr\n \n \n cdef class BufferedInputStream(NativeFile):\n+    \"\"\"\n+    Wraps an input stream making it buffered.\n+\n\nReview comment:\n       We could maybe add some extra explanation of what \"buffered\" means / why it's used. From the C++ doc comment:\r\n   \r\n   > An InputStream that performs buffered reads from an unbuffered InputStream, which can mitigate the overhead of many small reads in some cases\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1307,6 +1307,18 @@ ctypedef CRandomAccessFile* _RandomAccessFilePtr\n \n \n cdef class BufferedInputStream(NativeFile):\n+    \"\"\"\n+    Wraps an input stream making it buffered.\n+\n+    Parameters\n+    ----------\n+    stream : NativeFile\n+        The stream to wrap with the buffer\n+    buffer_size : int\n+        Size of the buffer that should be added.\n\nReview comment:\n       \"added\" sounds a bit strange in this context? (the C++ version says \"the size of the temporary read buffer\")\n\n##########\nFile path: python/pyarrow/compute.py\n##########\n@@ -132,11 +132,15 @@ def _decorate_compute_function(wrapper, exposed_name, func, option_class):\n     if option_class is not None:\n         doc_pieces.append(\"\"\"\\\n             options : pyarrow.compute.{0}, optional\n-                Parameters altering compute function semantics\n-            **kwargs : optional\n-                Parameters for {0} constructor. Either `options`\n-                or `**kwargs` can be passed, but not both at the same time.\n+                Parameters altering compute function semantics.\n             \"\"\".format(option_class.__name__))\n+        options_sig = inspect.signature(option_class)\n+        for p in options_sig.parameters.values():\n+            doc_pieces.append(\"\"\"\\\n+            {0} : optional\n+                Parameter for {1} constructor. Either `options`\n+                or `{0}` can be passed, but not both at the same time.\n+            \"\"\".format(p.name, option_class.__name__))\n\nReview comment:\n       Nice! (now we should still have a way to automatically add actual explanation of the keyword, but that's for another JIRA :))\n\n##########\nFile path: python/pyarrow/parquet.py\n##########\n@@ -214,6 +214,8 @@ class ParquetFile:\n         Coalesce and issue file reads in parallel to improve performance on\n         high-latency filesystems (e.g. S3). If True, Arrow will use a\n         background I/O thread pool.\n+    read_dictionary : list\n+        List of names to read directly as DictionaryArray\n\nReview comment:\n       ```suggestion\r\n           List of names to read directly as DictionaryArray.\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-28T20:23:11.236+0000",
                    "updated": "2021-09-28T20:23:11.236+0000",
                    "started": "2021-09-28T20:23:11.236+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "656833",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/657258",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r718555472\n\n\n\n##########\nFile path: python/pyarrow/_fs.pyx\n##########\n@@ -934,36 +934,42 @@ class FileSystemHandler(ABC):\n         \"\"\"\n         Implement PyFileSystem.type_name.\n         \"\"\"\n+    get_type_name.__doc__ = FileSystem.get_type_name.__doc__\n \n     @abstractmethod\n     def get_file_info(self, paths):\n         \"\"\"\n         Implement PyFileSystem.get_file_info(paths).\n         \"\"\"\n+    get_file_info.__doc__ = FileSystem.get_file_info.__doc__\n \n     @abstractmethod\n     def get_file_info_selector(self, selector):\n         \"\"\"\n         Implement PyFileSystem.get_file_info(selector).\n         \"\"\"\n+    get_file_info_selector.__doc__ = FileSystem.get_file_info_selector.__doc__\n\nReview comment:\n       :+1: removed all docs copies between FileSystem and FileSystemHandler\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T14:10:00.167+0000",
                    "updated": "2021-09-29T14:10:00.167+0000",
                    "started": "2021-09-29T14:10:00.166+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657258",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/657263",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r718557072\n\n\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1307,6 +1307,18 @@ ctypedef CRandomAccessFile* _RandomAccessFilePtr\n \n \n cdef class BufferedInputStream(NativeFile):\n+    \"\"\"\n+    Wraps an input stream making it buffered.\n+\n\nReview comment:\n       :+1:\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1307,6 +1307,18 @@ ctypedef CRandomAccessFile* _RandomAccessFilePtr\n \n \n cdef class BufferedInputStream(NativeFile):\n+    \"\"\"\n+    Wraps an input stream making it buffered.\n+\n+    Parameters\n+    ----------\n+    stream : NativeFile\n+        The stream to wrap with the buffer\n+    buffer_size : int\n+        Size of the buffer that should be added.\n\nReview comment:\n       :+1:\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T14:11:43.653+0000",
                    "updated": "2021-09-29T14:11:43.653+0000",
                    "started": "2021-09-29T14:11:43.653+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657263",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/657699",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r718555472\n\n\n\n##########\nFile path: python/pyarrow/_fs.pyx\n##########\n@@ -934,36 +934,42 @@ class FileSystemHandler(ABC):\n         \"\"\"\n         Implement PyFileSystem.type_name.\n         \"\"\"\n+    get_type_name.__doc__ = FileSystem.get_type_name.__doc__\n \n     @abstractmethod\n     def get_file_info(self, paths):\n         \"\"\"\n         Implement PyFileSystem.get_file_info(paths).\n         \"\"\"\n+    get_file_info.__doc__ = FileSystem.get_file_info.__doc__\n \n     @abstractmethod\n     def get_file_info_selector(self, selector):\n         \"\"\"\n         Implement PyFileSystem.get_file_info(selector).\n         \"\"\"\n+    get_file_info_selector.__doc__ = FileSystem.get_file_info_selector.__doc__\n\nReview comment:\n       :+1: removed all docs copies between FileSystem and FileSystemHandler\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1307,6 +1307,18 @@ ctypedef CRandomAccessFile* _RandomAccessFilePtr\n \n \n cdef class BufferedInputStream(NativeFile):\n+    \"\"\"\n+    Wraps an input stream making it buffered.\n+\n\nReview comment:\n       :+1:\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1307,6 +1307,18 @@ ctypedef CRandomAccessFile* _RandomAccessFilePtr\n \n \n cdef class BufferedInputStream(NativeFile):\n+    \"\"\"\n+    Wraps an input stream making it buffered.\n+\n+    Parameters\n+    ----------\n+    stream : NativeFile\n+        The stream to wrap with the buffer\n+    buffer_size : int\n+        Size of the buffer that should be added.\n\nReview comment:\n       :+1:\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-30T00:16:39.901+0000",
                    "updated": "2021-09-30T00:16:39.901+0000",
                    "started": "2021-09-30T00:16:39.901+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657699",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/658174",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r719163970\n\n\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -670,13 +699,29 @@ class CastOptions(_CastOptions):\n \n     @staticmethod\n     def safe(target_type=None):\n+        \"\"\"\"\n+        Cast operation options.\n\nReview comment:\n       I would mention on this line that this creates a \"safe\" cast (although that might of course be obvious from the name of the method)\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2945,6 +2999,32 @@ cdef class Scanner(_Weakrefable):\n                      object columns=None, Expression filter=None,\n                      int batch_size=_DEFAULT_BATCH_SIZE,\n                      FragmentScanOptions fragment_scan_options=None):\n+        \"\"\"\n+        Create Scanner from Dataset\n+\n+        Parameters\n+        ----------\n+        dataset : Dataset\n+            Dataset to scan.\n+        columns : list of str or dict, default None\n+                The columns to project.\n\nReview comment:\n       ```suggestion\r\n               The columns to project.\r\n   ```\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -508,12 +508,13 @@ cdef class Dataset(_Weakrefable):\n \n \n cdef class InMemoryDataset(Dataset):\n-    \"\"\"A Dataset wrapping in-memory data.\n+    \"\"\"\n+    A Dataset wrapping in-memory data.\n \n     Parameters\n     ----------\n-    source\n-        The data for this dataset. Can be a RecordBatch, Table, list of\n+    source : The data for this dataset.\n+        Can be a RecordBatch, Table, list of\n\nReview comment:\n       ```suggestion\r\n       source : \r\n           The data for this dataset. Can be a RecordBatch, Table, list of\r\n   ```\r\n   \r\n   If some content for the type description is needed, I would add something like \"table-like\"\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2945,6 +2999,32 @@ cdef class Scanner(_Weakrefable):\n                      object columns=None, Expression filter=None,\n                      int batch_size=_DEFAULT_BATCH_SIZE,\n                      FragmentScanOptions fragment_scan_options=None):\n+        \"\"\"\n+        Create Scanner from Dataset\n\nReview comment:\n       The Scanner class docstring itself has mostly the same parameters, but a more detailed explanation. Either we can refer to that docstring for more details, or we could share the content in some way to avoid duplication.\n\n##########\nFile path: python/pyarrow/ipc.pxi\n##########\n@@ -54,6 +54,14 @@ _WriteStats = namedtuple(\n \n class WriteStats(_WriteStats):\n     \"\"\"IPC write statistics\n+\n+    Parameters\n+    ----------\n+    num_messages : number of messages.\n+    num_record_batches : number of record batches.\n+    num_dictionary_batches : number of dictionary batches.\n+    num_dictionary_deltas : delta of dictionaries.\n+    num_replaced_dictionaries : number of replaced dictionaries.\n\nReview comment:\n       Although those can of course still be accessed by the user (so strictly speaking it might actually be more logical to list those as \"Attributes\" instead of \"Parameters\", but OK :))\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1430,6 +1441,16 @@ cdef void _cb_transform(transform_func, const shared_ptr[CBuffer]& src,\n \n \n cdef class TransformInputStream(NativeFile):\n+    \"\"\"\n+    Transform and input stream.\n\nReview comment:\n       ```suggestion\r\n       Transform an input stream.\r\n   ```\n\n##########\nFile path: python/pyarrow/ipc.pxi\n##########\n@@ -54,6 +54,14 @@ _WriteStats = namedtuple(\n \n class WriteStats(_WriteStats):\n     \"\"\"IPC write statistics\n+\n+    Parameters\n+    ----------\n+    num_messages : number of messages.\n+    num_record_batches : number of record batches.\n+    num_dictionary_batches : number of dictionary batches.\n+    num_dictionary_deltas : delta of dictionaries.\n+    num_replaced_dictionaries : number of replaced dictionaries.\n\nReview comment:\n       In practice those are never created by the user, so not sure how useful such a docstring is (except for passing the check ..)\n\n##########\nFile path: python/pyarrow/fs.py\n##########\n@@ -256,6 +256,12 @@ class FSSpecHandler(FileSystemHandler):\n \n     https://filesystem-spec.readthedocs.io/en/latest/index.html\n \n+    Parameters\n+    ----------\n+    fs : The file system implementation according to FSSpec.\n+\n+    Example\n+    -------\n\nReview comment:\n       ```suggestion\r\n       Examples\r\n       --------\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-30T08:29:32.873+0000",
                    "updated": "2021-09-30T08:29:32.873+0000",
                    "started": "2021-09-30T08:29:32.872+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658174",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/658315",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r719253766\n\n\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -670,13 +699,29 @@ class CastOptions(_CastOptions):\n \n     @staticmethod\n     def safe(target_type=None):\n+        \"\"\"\"\n+        Cast operation options.\n+\n+        Parameters\n+        ----------\n+        target_type : optional\n+            Target type for the safe cast.\n\nReview comment:\n       \"Target cast type\"\n\n##########\nFile path: python/pyarrow/_csv.pyx\n##########\n@@ -59,26 +59,26 @@ cdef class ReadOptions(_Weakrefable):\n         This will determine multi-threading granularity as well as\n         the size of individual record batches or table chunks.\n         Minimum valid value for block size is 1\n-    skip_rows: int, optional (default 0)\n+    skip_rows : int, optional (default 0)\n\nReview comment:\n       Just for the record, did you have to do these by hand or is there a mechanical fixer?\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -502,6 +512,17 @@ def call_function(name, args, options=None, memory_pool=None):\n \n     The function is looked up in the global registry\n     (as returned by `function_registry()`).\n+\n+    Parameters\n+    ----------\n+    name : str\n+        The name of the function to call.\n+    args : list\n+        The arguments to the function.\n+    options : optional\n+        options provided to the function.\n+    memory_pool : MemoryPool, optional\n+        memory pool to use for allocations during function.\n\nReview comment:\n       \"during function execution\"?\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -670,13 +699,29 @@ class CastOptions(_CastOptions):\n \n     @staticmethod\n     def safe(target_type=None):\n+        \"\"\"\"\n+        Cast operation options.\n+\n+        Parameters\n+        ----------\n+        target_type : optional\n+            Target type for the safe cast.\n+        \"\"\"\n         self = CastOptions()\n         self._set_safe()\n         self._set_type(target_type)\n         return self\n \n     @staticmethod\n     def unsafe(target_type=None):\n+        \"\"\"\"\n+        Cast operation options.\n\nReview comment:\n       Same remarks here.\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1436,6 +1481,20 @@ class Transcoder:\n \n \n def transcoding_input_stream(stream, src_encoding, dest_encoding):\n+    \"\"\"\n+    Add a transcoding transformation to the stream.\n+    Incoming data will be decoded according to ``src_encoding`` and\n+    emitted data will be encoded according to ``dest_encoding``.\n\nReview comment:\n       I would say \"decoded according to ... and then re-encoded according to ...\".\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1357,6 +1380,18 @@ cdef class BufferedInputStream(NativeFile):\n \n \n cdef class BufferedOutputStream(NativeFile):\n+    \"\"\"\n+    Wraps an output stream making it buffered.\n+\n+    Parameters\n+    ----------\n+    stream : NativeFile\n+        The stream to wrap with the buffer\n\nReview comment:\n       Perhaps \"writable stream\" or \"output stream\"?\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1307,6 +1317,19 @@ ctypedef CRandomAccessFile* _RandomAccessFilePtr\n \n \n cdef class BufferedInputStream(NativeFile):\n+    \"\"\"\n+    An InputStream that performs buffered reads from an unbuffered InputStream,\n+    which can mitigate the overhead of many small reads in some cases\n+\n+    Parameters\n+    ----------\n+    stream : NativeFile\n\nReview comment:\n       There is a bit of terminology confusion between \"NativeFile\" and \"InputStream\". Perhaps \"InputStream\" should be spelled \"input stream\" to make it clear it doesn't name a base class.\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1478,6 +1542,18 @@ def foreign_buffer(address, size, base=None):\n     The *base* object will be kept alive as long as this buffer is alive,\n     including across language boundaries (for example if the buffer is\n     referenced by C++ code).\n+\n+    Parameters\n+    ----------\n+    address : int\n+        Specify the starting address of the buffer. The address can\n+        refer to both device or host memory but it must be\n+        accessible from device after mapping it with\n+        `get_device_address` method.\n+    size : int\n+        Specify the size of device buffer in bytes.\n+    base : {None, object}\n+        Specify object that owns the referenced memory.\n\nReview comment:\n       I don't think it's necessary to add \"Specify\" at the start of each parameter description.\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -252,6 +287,11 @@ shape: {0.shape}\"\"\".format(self)\n     def from_tensor(obj):\n         \"\"\"\n         Convert arrow::Tensor to arrow::SparseCOOTensor.\n+\n+        Parameters\n+        ----------\n+        obj : Tensor\n+            The tensor that should be converted.\n\nReview comment:\n       \"The dense tensor\", perhaps?\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -225,6 +253,13 @@ shape: {0.shape}\"\"\".format(self)\n     def from_pydata_sparse(obj, dim_names=None):\n         \"\"\"\n         Convert pydata/sparse.COO to arrow::SparseCOOTensor.\n\nReview comment:\n       \"sparse.COO\"?\n\n##########\nFile path: python/pyarrow/parquet.py\n##########\n@@ -214,6 +214,8 @@ class ParquetFile:\n         Coalesce and issue file reads in parallel to improve performance on\n         high-latency filesystems (e.g. S3). If True, Arrow will use a\n         background I/O thread pool.\n+    read_dictionary : list\n+        List of names to read directly as DictionaryArray.\n\nReview comment:\n       \"column names\"\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -395,13 +435,34 @@ shape: {0.shape}\"\"\".format(self)\n     def from_dense_numpy(cls, obj, dim_names=None):\n         \"\"\"\n         Convert numpy.ndarray to arrow::SparseCSRMatrix\n+\n+        Parameters\n+        ----------\n+        obj : numpy.ndarray\n+            The source numpy array\n\nReview comment:\n       \"The dense numpy array that should be converted\"?\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -585,6 +658,20 @@ shape: {0.shape}\"\"\".format(self)\n     def from_numpy(data, indptr, indices, shape, dim_names=None):\n         \"\"\"\n         Create arrow::SparseCSCMatrix from numpy.ndarrays\n+\n+        Parameters\n+        ----------\n+        data : numpy.ndarray\n+            Data used to populate the rows.\n+        indptr : numpy.ndarray\n+            Range of the rows,\n+            The i-th row spans from `indptr[i]` to `indptr[i+1]` in the data.\n\nReview comment:\n       \"i-th column\"?\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -462,6 +530,11 @@ shape: {0.shape}\"\"\".format(self)\n     def from_tensor(obj):\n         \"\"\"\n         Convert arrow::Tensor to arrow::SparseCSRMatrix.\n+\n+        Parameters\n+        ----------\n+        obj : Tensor\n+            The tensor that should be converted.\n\nReview comment:\n       \"dense tensor\"\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -771,6 +870,22 @@ shape: {0.shape}\"\"\".format(self)\n                    dim_names=None):\n         \"\"\"\n         Create arrow::SparseCSFTensor from numpy.ndarrays\n+\n+        Parameters\n+        ----------\n+        data : numpy.ndarray\n+            Data used to populate the rows.\n\nReview comment:\n       \"to populate the sparse tensor\"\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -771,6 +870,22 @@ shape: {0.shape}\"\"\".format(self)\n                    dim_names=None):\n         \"\"\"\n         Create arrow::SparseCSFTensor from numpy.ndarrays\n+\n+        Parameters\n+        ----------\n+        data : numpy.ndarray\n+            Data used to populate the rows.\n+        indptr : numpy.ndarray\n+            Range of the rows,\n+            The i-th row spans from `indptr[i]` to `indptr[i+1]` in the data.\n+        indices : numpy.ndarray\n+            Column indices of the corresponding non-zero values.\n\nReview comment:\n       It seems you have copy-pasted all this from the previous `from_numpy` methods, but it doesn't really correspond to what's expected. Below you can see that these are lists of ndarrays (CSF is a n-dimensional generalization of the idea behind CSR and CSC, there's an explanation here: https://www.boristhebrave.com/2021/01/01/compressed-sparse-fibers-explained/).\n\n##########\nFile path: python/pyarrow/compute.py\n##########\n@@ -132,11 +132,15 @@ def _decorate_compute_function(wrapper, exposed_name, func, option_class):\n     if option_class is not None:\n         doc_pieces.append(\"\"\"\\\n             options : pyarrow.compute.{0}, optional\n-                Parameters altering compute function semantics\n-            **kwargs : optional\n-                Parameters for {0} constructor. Either `options`\n-                or `**kwargs` can be passed, but not both at the same time.\n+                Parameters altering compute function semantics.\n             \"\"\".format(option_class.__name__))\n+        options_sig = inspect.signature(option_class)\n+        for p in options_sig.parameters.values():\n+            doc_pieces.append(\"\"\"\\\n+            {0} : optional\n+                Parameter for {1} constructor. Either `options`\n+                or `{0}` can be passed, but not both at the same time.\n+            \"\"\".format(p.name, option_class.__name__))\n\nReview comment:\n       See https://issues.apache.org/jira/browse/ARROW-10317\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -670,13 +699,29 @@ class CastOptions(_CastOptions):\n \n     @staticmethod\n     def safe(target_type=None):\n+        \"\"\"\"\n+        Cast operation options.\n\nReview comment:\n       Right, the current description is a bit cryptic. Perhaps `Create a CastOptions with \"safe\" defaults`?\n\n##########\nFile path: python/pyarrow/fs.py\n##########\n@@ -256,6 +256,12 @@ class FSSpecHandler(FileSystemHandler):\n \n     https://filesystem-spec.readthedocs.io/en/latest/index.html\n \n+    Parameters\n+    ----------\n+    fs : The file system implementation according to FSSpec.\n+\n+    Example\n+    -------\n\nReview comment:\n       Well, there is a single example, isn't there?\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -1795,6 +1819,20 @@ cdef class IpcFileFormat(FileFormat):\n \n \n cdef class CsvFileFormat(FileFormat):\n+    \"\"\"\n+    FileFormat for CSV files.\n+\n+    Parameters\n+    ----------\n+    parse_options : ParseOptions\n+        Options regarding parsing of CSV.\n\nReview comment:\n       \"CSV parsing\"?\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2791,7 +2838,14 @@ cdef class RecordBatchIterator(_Weakrefable):\n \n class TaggedRecordBatch(collections.namedtuple(\n         \"TaggedRecordBatch\", [\"record_batch\", \"fragment\"])):\n-    \"\"\"A combination of a record batch and the fragment it came from.\"\"\"\n+    \"\"\"\n+    A combination of a record batch and the fragment it came from.\n+\n+    Parameters\n+    ----------\n+    record_batch : The record batch.\n+    fragment : fragment of the record batch.\n\nReview comment:\n       Speaking of which, is describing the parameters mandatory? Some classes may not be meant to be instantiated by the user.\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -1795,6 +1819,20 @@ cdef class IpcFileFormat(FileFormat):\n \n \n cdef class CsvFileFormat(FileFormat):\n+    \"\"\"\n+    FileFormat for CSV files.\n+\n+    Parameters\n+    ----------\n+    parse_options : ParseOptions\n+        Options regarding parsing of CSV.\n+    convert_options : ConvertOptions\n+        Options regarding value conversion.\n+    read_options : ReadOptions\n+        Options regarding the CSV file read operation.\n\nReview comment:\n       \"General read options\"?\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1307,6 +1317,19 @@ ctypedef CRandomAccessFile* _RandomAccessFilePtr\n \n \n cdef class BufferedInputStream(NativeFile):\n+    \"\"\"\n+    An InputStream that performs buffered reads from an unbuffered InputStream,\n+    which can mitigate the overhead of many small reads in some cases\n+\n+    Parameters\n+    ----------\n+    stream : NativeFile\n+        The stream to wrap with the buffer\n\nReview comment:\n       \"readable stream\" or \"input stream\" perhaps?\n\n##########\nFile path: python/pyarrow/fs.py\n##########\n@@ -256,6 +256,12 @@ class FSSpecHandler(FileSystemHandler):\n \n     https://filesystem-spec.readthedocs.io/en/latest/index.html\n \n+    Parameters\n+    ----------\n+    fs : The file system implementation according to FSSpec.\n\nReview comment:\n       I would say \"The FSSpec-compliant filesystem instance\"\n\n##########\nFile path: python/pyarrow/lib.pyx\n##########\n@@ -60,6 +60,11 @@ def set_cpu_count(int count):\n     \"\"\"\n     Set the number of threads to use in parallel operations.\n \n+    Parameters\n+    ----------\n+    count : int\n+        The number of concurrent cpu that should be set.\n\nReview comment:\n       \"The number of threads that should be used\"?\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1357,6 +1380,18 @@ cdef class BufferedInputStream(NativeFile):\n \n \n cdef class BufferedOutputStream(NativeFile):\n+    \"\"\"\n+    Wraps an output stream making it buffered.\n\nReview comment:\n       Hmm, why not re-use a similar phrasing as for BufferedInputStream?\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -508,12 +508,13 @@ cdef class Dataset(_Weakrefable):\n \n \n cdef class InMemoryDataset(Dataset):\n-    \"\"\"A Dataset wrapping in-memory data.\n+    \"\"\"\n+    A Dataset wrapping in-memory data.\n \n     Parameters\n     ----------\n-    source\n-        The data for this dataset. Can be a RecordBatch, Table, list of\n+    source : The data for this dataset.\n\nReview comment:\n       I would say \"data source\"\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1724,6 +1800,12 @@ cdef class Codec(_Weakrefable):\n         \"\"\"\n         Returns true if the compression level parameter is supported\n         for the given codec.\n+\n+        Parameters\n+        ----------\n+        compression : str\n+            Type of compression codec, valid values are: gzip, bz2, brotli,\n+            lz4, zstd and snappy.\n\nReview comment:\n       Is there a way we can make it easier to maintain the list of valid values?\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -160,6 +170,17 @@ shape: {0.shape}\"\"\".format(self)\n     def from_numpy(data, coords, shape, dim_names=None):\n         \"\"\"\n         Create arrow::SparseCOOTensor from numpy.ndarrays\n\nReview comment:\n       \"arrow::\" is not really a Python convention. Just keep \"SparseCOOTensor\"?\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -160,6 +170,17 @@ shape: {0.shape}\"\"\".format(self)\n     def from_numpy(data, coords, shape, dim_names=None):\n         \"\"\"\n         Create arrow::SparseCOOTensor from numpy.ndarrays\n+\n+        Parameters\n+        ----------\n+        data : numpy.ndarray\n+            Data used to populate the rows.\n+        coords : numpy.ndarray\n+            Coordinates of the data.\n+        shape : tuple\n+            Shape of the tensor.\n+        dim_names : list\n\nReview comment:\n       Add \"optional\"?\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -585,6 +658,20 @@ shape: {0.shape}\"\"\".format(self)\n     def from_numpy(data, indptr, indices, shape, dim_names=None):\n         \"\"\"\n         Create arrow::SparseCSCMatrix from numpy.ndarrays\n+\n+        Parameters\n+        ----------\n+        data : numpy.ndarray\n+            Data used to populate the rows.\n+        indptr : numpy.ndarray\n+            Range of the rows,\n\nReview comment:\n       \"columns\"?\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -225,6 +253,13 @@ shape: {0.shape}\"\"\".format(self)\n     def from_pydata_sparse(obj, dim_names=None):\n         \"\"\"\n         Convert pydata/sparse.COO to arrow::SparseCOOTensor.\n+\n+        Parameters\n+        ----------\n+        obj : pydata.sparse.COO\n+            The object that should be converted.\n\nReview comment:\n       \"The sparse multidimensional array that should be converted\"?\r\n   (see https://sparse.pydata.org/en/stable/generated/sparse.COO.html#sparse.COO )\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -615,6 +702,13 @@ shape: {0.shape}\"\"\".format(self)\n     def from_scipy(obj, dim_names=None):\n         \"\"\"\n         Convert scipy.sparse.csc_matrix to arrow::SparseCSCMatrix\n+\n+        Parameters\n+        ----------\n+        obj : scipy.sparse.csc_matrix\n+            The SciPy matrix that should be converted.\n\nReview comment:\n       \"scipy\" (lowercased) is used elsewhere\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -585,6 +658,20 @@ shape: {0.shape}\"\"\".format(self)\n     def from_numpy(data, indptr, indices, shape, dim_names=None):\n         \"\"\"\n         Create arrow::SparseCSCMatrix from numpy.ndarrays\n+\n+        Parameters\n+        ----------\n+        data : numpy.ndarray\n+            Data used to populate the rows.\n\nReview comment:\n       \"to populate the sparse matrix\"\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -585,6 +658,20 @@ shape: {0.shape}\"\"\".format(self)\n     def from_numpy(data, indptr, indices, shape, dim_names=None):\n         \"\"\"\n         Create arrow::SparseCSCMatrix from numpy.ndarrays\n+\n+        Parameters\n+        ----------\n+        data : numpy.ndarray\n+            Data used to populate the rows.\n+        indptr : numpy.ndarray\n+            Range of the rows,\n+            The i-th row spans from `indptr[i]` to `indptr[i+1]` in the data.\n+        indices : numpy.ndarray\n+            Column indices of the corresponding non-zero values.\n\nReview comment:\n       \"Row indices\"?\n\n##########\nFile path: python/pyarrow/types.py\n##########\n@@ -44,209 +44,359 @@\n def is_null(t):\n     \"\"\"\n     Return True if value is an instance of a null type.\n+\n+    Parameters\n+    ----------\n+    t : DataType\n+        type to check\n\nReview comment:\n       To be honest, this is the kind of example of a rather pointless description (\"type to check\" does not say anything very useful). Can we just omit it?\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -395,13 +435,34 @@ shape: {0.shape}\"\"\".format(self)\n     def from_dense_numpy(cls, obj, dim_names=None):\n         \"\"\"\n         Convert numpy.ndarray to arrow::SparseCSRMatrix\n+\n+        Parameters\n+        ----------\n+        obj : numpy.ndarray\n+            The source numpy array\n+        dim_names : list, optional\n+            The names of the dimensions.\n         \"\"\"\n         return cls.from_tensor(Tensor.from_numpy(obj, dim_names=dim_names))\n \n     @staticmethod\n     def from_numpy(data, indptr, indices, shape, dim_names=None):\n         \"\"\"\n-        Create arrow::SparseCSRMatrix from numpy.ndarrays\n+        Create arrow::SparseCSRMatrix from numpy.ndarrays.\n+\n+        Parameters\n+        ----------\n+        data : numpy.ndarray\n+            Data used to populate the rows.\n\nReview comment:\n       \"to populate the sparse matrix\"\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -817,6 +932,11 @@ shape: {0.shape}\"\"\".format(self)\n     def from_tensor(obj):\n         \"\"\"\n         Convert arrow::Tensor to arrow::SparseCSFTensor\n+\n+        Parameters\n+        ----------\n+        obj : Tensor\n+            The tensor that should be converted.\n\nReview comment:\n       \"dense tensor\"\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -645,6 +739,11 @@ shape: {0.shape}\"\"\".format(self)\n     def from_tensor(obj):\n         \"\"\"\n         Convert arrow::Tensor to arrow::SparseCSCMatrix\n+\n+        Parameters\n+        ----------\n+        obj : Tensor\n+            The tensor that should be converted.\n\nReview comment:\n       \"dense tensor\"\n\n##########\nFile path: python/pyarrow/tensor.pxi\n##########\n@@ -771,6 +870,22 @@ shape: {0.shape}\"\"\".format(self)\n                    dim_names=None):\n         \"\"\"\n         Create arrow::SparseCSFTensor from numpy.ndarrays\n+\n+        Parameters\n+        ----------\n+        data : numpy.ndarray\n+            Data used to populate the rows.\n+        indptr : numpy.ndarray\n+            Range of the rows,\n+            The i-th row spans from `indptr[i]` to `indptr[i+1]` in the data.\n+        indices : numpy.ndarray\n+            Column indices of the corresponding non-zero values.\n+        shape : tuple\n+            Shape of the matrix.\n+        axis_order : list, optional\n+            The order of the axis.\n\nReview comment:\n       I would say for example \"The dimensions corresponding to each array in `indptr` and `indices`\"\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1430,6 +1441,16 @@ cdef void _cb_transform(transform_func, const shared_ptr[CBuffer]& src,\n \n \n cdef class TransformInputStream(NativeFile):\n+    \"\"\"\n+    Transform and input stream.\n\nReview comment:\n       \"An input stream that applies a function to an underlying input stream's contents\"\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-30T13:04:09.561+0000",
                    "updated": "2021-09-30T13:04:09.561+0000",
                    "started": "2021-09-30T13:04:09.561+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658315",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/658335",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r719400237\n\n\n\n##########\nFile path: python/pyarrow/_csv.pyx\n##########\n@@ -59,26 +59,26 @@ cdef class ReadOptions(_Weakrefable):\n         This will determine multi-threading granularity as well as\n         the size of individual record batches or table chunks.\n         Minimum valid value for block size is 1\n-    skip_rows: int, optional (default 0)\n+    skip_rows : int, optional (default 0)\n\nReview comment:\n       Did those by hand, I wanted to check what issues the docstrings had and thus had to look at them anyway. At that point fixing them was a minor deal.\r\n   \r\n   If it doesn't already exist I guess that an automation to fix them wouldn't be too hard to build, but given that @kszucs has a PR to prevent broken/missing docstrings from happening again I hope this is the only time we have to do this work.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-30T13:22:27.775+0000",
                    "updated": "2021-09-30T13:22:27.775+0000",
                    "started": "2021-09-30T13:22:27.775+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658335",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/658339",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r719402220\n\n\n\n##########\nFile path: python/pyarrow/_csv.pyx\n##########\n@@ -59,26 +59,26 @@ cdef class ReadOptions(_Weakrefable):\n         This will determine multi-threading granularity as well as\n         the size of individual record batches or table chunks.\n         Minimum valid value for block size is 1\n-    skip_rows: int, optional (default 0)\n+    skip_rows : int, optional (default 0)\n\nReview comment:\n       @amol- yes, https://github.com/apache/arrow/pull/7732 should be ready depending on which rules do we want to enable at first.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-30T13:24:37.754+0000",
                    "updated": "2021-09-30T13:24:37.754+0000",
                    "started": "2021-09-30T13:24:37.754+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658339",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/658340",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r719403795\n\n\n\n##########\nFile path: python/pyarrow/types.py\n##########\n@@ -44,209 +44,359 @@\n def is_null(t):\n     \"\"\"\n     Return True if value is an instance of a null type.\n+\n+    Parameters\n+    ----------\n+    t : DataType\n+        type to check\n\nReview comment:\n       Numpydoc would complain otherwise. I agree that it is not extremely useful, but it doesn't hurt either.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-30T13:26:04.329+0000",
                    "updated": "2021-09-30T13:26:04.329+0000",
                    "started": "2021-09-30T13:26:04.328+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658340",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/658342",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r719405550\n\n\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -502,6 +512,17 @@ def call_function(name, args, options=None, memory_pool=None):\n \n     The function is looked up in the global registry\n     (as returned by `function_registry()`).\n+\n+    Parameters\n+    ----------\n+    name : str\n+        The name of the function to call.\n+    args : list\n+        The arguments to the function.\n+    options : optional\n+        options provided to the function.\n+    memory_pool : MemoryPool, optional\n+        memory pool to use for allocations during function.\n\nReview comment:\n       :+1:\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-30T13:27:56.189+0000",
                    "updated": "2021-09-30T13:27:56.189+0000",
                    "started": "2021-09-30T13:27:56.189+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658342",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/658343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r719406296\n\n\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1357,6 +1380,18 @@ cdef class BufferedInputStream(NativeFile):\n \n \n cdef class BufferedOutputStream(NativeFile):\n+    \"\"\"\n+    Wraps an output stream making it buffered.\n\nReview comment:\n       Also, maybe use \"writable output stream\" (in the beginning I always found it confusing to know which of InputStream / OutputStream was meant for reading / writing, since for writing your put something in a stream ..)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-30T13:28:41.809+0000",
                    "updated": "2021-09-30T13:28:41.809+0000",
                    "started": "2021-09-30T13:28:41.809+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658343",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/658345",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r719407250\n\n\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -670,13 +699,29 @@ class CastOptions(_CastOptions):\n \n     @staticmethod\n     def safe(target_type=None):\n+        \"\"\"\"\n+        Cast operation options.\n\nReview comment:\n       reworded, should look better now.\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -670,13 +699,29 @@ class CastOptions(_CastOptions):\n \n     @staticmethod\n     def safe(target_type=None):\n+        \"\"\"\"\n+        Cast operation options.\n+\n+        Parameters\n+        ----------\n+        target_type : optional\n+            Target type for the safe cast.\n\nReview comment:\n       :+1:\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-30T13:29:48.528+0000",
                    "updated": "2021-09-30T13:29:48.528+0000",
                    "started": "2021-09-30T13:29:48.528+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658345",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/658346",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r719408269\n\n\n\n##########\nFile path: python/pyarrow/types.py\n##########\n@@ -44,209 +44,359 @@\n def is_null(t):\n     \"\"\"\n     Return True if value is an instance of a null type.\n+\n+    Parameters\n+    ----------\n+    t : DataType\n+        type to check\n\nReview comment:\n       We can say to numpydoc to not complain about it (I _think_ it should be possible to let it complain about a missing parameter in general, but not a missing description. That would make it possible to only keep the `t : DataType`, which I think has all informatio)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-30T13:30:42.467+0000",
                    "updated": "2021-09-30T13:30:42.467+0000",
                    "started": "2021-09-30T13:30:42.467+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658346",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/658348",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r719408879\n\n\n\n##########\nFile path: python/pyarrow/types.py\n##########\n@@ -44,209 +44,359 @@\n def is_null(t):\n     \"\"\"\n     Return True if value is an instance of a null type.\n+\n+    Parameters\n+    ----------\n+    t : DataType\n+        type to check\n\nReview comment:\n       Indeed, it would be nice if parameter descriptions were optional.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-30T13:31:20.046+0000",
                    "updated": "2021-09-30T13:31:20.046+0000",
                    "started": "2021-09-30T13:31:20.046+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658348",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/658353",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r719424962\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2791,7 +2838,14 @@ cdef class RecordBatchIterator(_Weakrefable):\n \n class TaggedRecordBatch(collections.namedtuple(\n         \"TaggedRecordBatch\", [\"record_batch\", \"fragment\"])):\n-    \"\"\"A combination of a record batch and the fragment it came from.\"\"\"\n+    \"\"\"\n+    A combination of a record batch and the fragment it came from.\n+\n+    Parameters\n+    ----------\n+    record_batch : The record batch.\n+    fragment : fragment of the record batch.\n\nReview comment:\n       Yes, it is mandatory or numpydoc will complain that the class isn't documented.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-30T13:47:38.129+0000",
                    "updated": "2021-09-30T13:47:38.129+0000",
                    "started": "2021-09-30T13:47:38.128+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658353",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/658354",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r719426277\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2945,6 +2999,32 @@ cdef class Scanner(_Weakrefable):\n                      object columns=None, Expression filter=None,\n                      int batch_size=_DEFAULT_BATCH_SIZE,\n                      FragmentScanOptions fragment_scan_options=None):\n+        \"\"\"\n+        Create Scanner from Dataset\n\nReview comment:\n       added a reference to the class in the docstring.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-30T13:48:51.935+0000",
                    "updated": "2021-09-30T13:48:51.935+0000",
                    "started": "2021-09-30T13:48:51.935+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658354",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/658355",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r719428243\n\n\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1307,6 +1317,19 @@ ctypedef CRandomAccessFile* _RandomAccessFilePtr\n \n \n cdef class BufferedInputStream(NativeFile):\n+    \"\"\"\n+    An InputStream that performs buffered reads from an unbuffered InputStream,\n+    which can mitigate the overhead of many small reads in some cases\n+\n+    Parameters\n+    ----------\n+    stream : NativeFile\n\nReview comment:\n       renamed `InputStream` to `input stream` in the class description\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-30T13:50:48.245+0000",
                    "updated": "2021-09-30T13:50:48.245+0000",
                    "started": "2021-09-30T13:50:48.244+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658355",
                    "issueId": "13395500"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/worklog/658356",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11245:\nURL: https://github.com/apache/arrow/pull/11245#discussion_r719430131\n\n\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1357,6 +1380,18 @@ cdef class BufferedInputStream(NativeFile):\n \n \n cdef class BufferedOutputStream(NativeFile):\n+    \"\"\"\n+    Wraps an output stream making it buffered.\n\nReview comment:\n       reworded\n\n##########\nFile path: python/pyarrow/io.pxi\n##########\n@@ -1357,6 +1380,18 @@ cdef class BufferedInputStream(NativeFile):\n \n \n cdef class BufferedOutputStream(NativeFile):\n+    \"\"\"\n+    Wraps an output stream making it buffered.\n+\n+    Parameters\n+    ----------\n+    stream : NativeFile\n+        The stream to wrap with the buffer\n\nReview comment:\n       :+1:\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-30T13:52:52.657+0000",
                    "updated": "2021-09-30T13:52:52.657+0000",
                    "started": "2021-09-30T13:52:52.657+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658356",
                    "issueId": "13395500"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 22800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@10002074[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@be9dd63[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a0539cf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4f42ef29[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ee4056e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@389f3a8a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1bf7b717[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@431438e7[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7de58a9e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3c6fa4c2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a06f357[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@783733f0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 22800,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Oct 04 09:44:47 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-10-04T09:44:47.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13637/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2021-08-16T16:21:27.000+0000",
        "updated": "2021-10-04T09:44:58.000+0000",
        "timeoriginalestimate": null,
        "description": "Probably all docstrings should conform to numpy style",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 22800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/attachment/13034097",
                "id": "13034097",
                "filename": "undocumented.txt",
                "author": {
                    "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
                    "name": "amol-",
                    "key": "amol-",
                    "avatarUrls": {
                        "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                        "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                        "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                        "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
                    },
                    "displayName": "Alessandro Molina",
                    "active": true,
                    "timeZone": "Europe/Rome"
                },
                "created": "2021-09-24T08:55:07.804+0000",
                "size": 40472,
                "mimeType": "text/plain",
                "content": "https://issues.apache.org/jira/secure/attachment/13034097/undocumented.txt"
            }
        ],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python][Doc] Make docstrings conform to same style",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/comment/17400193",
                    "id": "17400193",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "AFAIK, all our docstrings are already written in the \"numpydoc standard\" format (https://numpydoc.readthedocs.io/en/latest/format.html). \r\n\r\nWe might certainly not follow it strictly everywhere, but I think fixing this / checking for this is covered by eg ARROW-12718 or ARROW-13208 ? (see also ARROW-12645, ARROW-7898, ARROW-7874 for other closed issues related to fixing numpydoc aspects)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-08-17T07:26:34.140+0000",
                    "updated": "2021-08-17T07:26:34.140+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/comment/17403642",
                    "id": "17403642",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
                        "name": "amol-",
                        "key": "amol-",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
                        },
                        "displayName": "Alessandro Molina",
                        "active": true,
                        "timeZone": "Europe/Rome"
                    },
                    "body": "[~apitrou] you originally mentioned this one, do you have any example of docstring that needs to be fixed that you can share?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
                        "name": "amol-",
                        "key": "amol-",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
                        },
                        "displayName": "Alessandro Molina",
                        "active": true,
                        "timeZone": "Europe/Rome"
                    },
                    "created": "2021-08-24T08:29:47.476+0000",
                    "updated": "2021-08-24T08:29:47.476+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/comment/17403731",
                    "id": "17403731",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Isn't there a bunch of examples in https://github.com/apache/arrow/pull/7732 ?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-08-24T10:27:49.184+0000",
                    "updated": "2021-08-24T10:27:49.184+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/comment/17419704",
                    "id": "17419704",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~amol-] is your goal for this issue to document more arguments? (for which now documentation is missing) If so maybe update the title of the issue to reflect that?\r\n\r\nFor the pyarrow.compute cases in the list you added in the attachment, for most of those the docstring is autogenerated. And we don't yet automatically include the docstring for the parameters from the options class (I thought we had a separate JIRA for that, but don't directly find it)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-09-24T10:10:31.581+0000",
                    "updated": "2021-09-24T10:10:31.581+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13395500/comment/17423863",
                    "id": "17423863",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 11245\n[https://github.com/apache/arrow/pull/11245]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-10-04T09:44:47.760+0000",
                    "updated": "2021-10-04T09:44:47.760+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ty8g:",
        "customfield_12314139": null
    }
}