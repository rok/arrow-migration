{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13204660",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204660",
    "key": "ARROW-4038",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "aggregateprogress": {
            "progress": 1200,
            "total": 1200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 1200,
            "total": 1200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4038/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 2,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204660/worklog/177257",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove closed pull request #3189: ARROW-4038: [Rust] Implement boolean AND, OR, NOT array ops\nURL: https://github.com/apache/arrow/pull/3189\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/rust/src/array_ops.rs b/rust/src/array_ops.rs\nindex e73a858e95..59145754f0 100644\n--- a/rust/src/array_ops.rs\n+++ b/rust/src/array_ops.rs\n@@ -15,6 +15,8 @@\n // specific language governing permissions and limitations\n // under the License.\n \n+//! Defines primitive computations on arrays\n+\n use std::ops::{Add, Div, Mul, Sub};\n \n use num::Zero;\n@@ -25,6 +27,7 @@ use crate::datatypes;\n use crate::datatypes::ArrowNumericType;\n use crate::error::{ArrowError, Result};\n \n+/// Perform `left + right` operation on two arrays. If either left or right value is null then the result is also null.\n pub fn add<T>(left: &PrimitiveArray<T>, right: &PrimitiveArray<T>) -> Result<PrimitiveArray<T>>\n where\n     T: datatypes::ArrowNumericType,\n@@ -37,6 +40,7 @@ where\n     math_op(left, right, |a, b| Ok(a + b))\n }\n \n+/// Perform `left - right` operation on two arrays. If either left or right value is null then the result is also null.\n pub fn subtract<T>(left: &PrimitiveArray<T>, right: &PrimitiveArray<T>) -> Result<PrimitiveArray<T>>\n where\n     T: datatypes::ArrowNumericType,\n@@ -49,6 +53,7 @@ where\n     math_op(left, right, |a, b| Ok(a - b))\n }\n \n+/// Perform `left * right` operation on two arrays. If either left or right value is null then the result is also null.\n pub fn multiply<T>(left: &PrimitiveArray<T>, right: &PrimitiveArray<T>) -> Result<PrimitiveArray<T>>\n where\n     T: datatypes::ArrowNumericType,\n@@ -61,6 +66,8 @@ where\n     math_op(left, right, |a, b| Ok(a * b))\n }\n \n+/// Perform `left / right` operation on two arrays. If either left or right value is null then the result is also null.\n+/// If any right hand value is zero then the result of this operation will be `Err(ArrowError::DivideByZero)`.\n pub fn divide<T>(left: &PrimitiveArray<T>, right: &PrimitiveArray<T>) -> Result<PrimitiveArray<T>>\n where\n     T: datatypes::ArrowNumericType,\n@@ -79,6 +86,8 @@ where\n     })\n }\n \n+/// Helper function to perform math lambda function on values from two arrays. If either left or\n+/// right value is null then the output value is also null, so `1 + null` is `null`.\n fn math_op<T, F>(\n     left: &PrimitiveArray<T>,\n     right: &PrimitiveArray<T>,\n@@ -90,16 +99,16 @@ where\n {\n     if left.len() != right.len() {\n         return Err(ArrowError::ComputeError(\n-            \"Cannot perform math operation on two batches of different length\".to_string(),\n+            \"Cannot perform math operation on arrays of different length\".to_string(),\n         ));\n     }\n     let mut b = PrimitiveArrayBuilder::<T>::new(left.len());\n     for i in 0..left.len() {\n         let index = i;\n         if left.is_null(i) || right.is_null(i) {\n-            b.push_null().unwrap();\n+            b.push_null()?;\n         } else {\n-            b.push(op(left.value(index), right.value(index))?).unwrap();\n+            b.push(op(left.value(index), right.value(index))?)?;\n         }\n     }\n     Ok(b.finish())\n@@ -121,6 +130,7 @@ where\n     min_max_helper(array, |a, b| a > b)\n }\n \n+/// Helper function to perform min/max lambda function on values from a numeric array.\n fn min_max_helper<T, F>(array: &PrimitiveArray<T>, cmp: F) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n@@ -145,6 +155,7 @@ where\n     n\n }\n \n+/// Perform `left == right` operation on two arrays.\n pub fn eq<T>(left: &PrimitiveArray<T>, right: &PrimitiveArray<T>) -> Result<BooleanArray>\n where\n     T: ArrowNumericType,\n@@ -152,6 +163,7 @@ where\n     bool_op(left, right, |a, b| a == b)\n }\n \n+/// Perform `left != right` operation on two arrays.\n pub fn neq<T>(left: &PrimitiveArray<T>, right: &PrimitiveArray<T>) -> Result<BooleanArray>\n where\n     T: ArrowNumericType,\n@@ -159,50 +171,59 @@ where\n     bool_op(left, right, |a, b| a != b)\n }\n \n+/// Perform `left < right` operation on two arrays. Null values are less than non-null values.\n pub fn lt<T>(left: &PrimitiveArray<T>, right: &PrimitiveArray<T>) -> Result<BooleanArray>\n where\n     T: ArrowNumericType,\n {\n     bool_op(left, right, |a, b| match (a, b) {\n+        (None, None) => false,\n         (None, _) => true,\n         (_, None) => false,\n         (Some(aa), Some(bb)) => aa < bb,\n     })\n }\n \n+/// Perform `left <= right` operation on two arrays. Null values are less than non-null values.\n pub fn lt_eq<T>(left: &PrimitiveArray<T>, right: &PrimitiveArray<T>) -> Result<BooleanArray>\n where\n     T: ArrowNumericType,\n {\n     bool_op(left, right, |a, b| match (a, b) {\n+        (None, None) => true,\n         (None, _) => true,\n         (_, None) => false,\n         (Some(aa), Some(bb)) => aa <= bb,\n     })\n }\n \n+/// Perform `left > right` operation on two arrays. Non-null values are greater than null values.\n pub fn gt<T>(left: &PrimitiveArray<T>, right: &PrimitiveArray<T>) -> Result<BooleanArray>\n where\n     T: ArrowNumericType,\n {\n     bool_op(left, right, |a, b| match (a, b) {\n+        (None, None) => false,\n         (None, _) => false,\n         (_, None) => true,\n         (Some(aa), Some(bb)) => aa > bb,\n     })\n }\n \n+/// Perform `left >= right` operation on two arrays. Non-null values are greater than null values.\n pub fn gt_eq<T>(left: &PrimitiveArray<T>, right: &PrimitiveArray<T>) -> Result<BooleanArray>\n where\n     T: ArrowNumericType,\n {\n     bool_op(left, right, |a, b| match (a, b) {\n+        (None, None) => true,\n         (None, _) => false,\n         (_, None) => true,\n         (Some(aa), Some(bb)) => aa >= bb,\n     })\n }\n \n+/// Helper function to perform boolean lambda function on values from two arrays.\n fn bool_op<T, F>(left: &PrimitiveArray<T>, right: &PrimitiveArray<T>, op: F) -> Result<BooleanArray>\n where\n     T: ArrowNumericType,\n@@ -210,7 +231,7 @@ where\n {\n     if left.len() != right.len() {\n         return Err(ArrowError::ComputeError(\n-            \"Cannot perform math operation on two batches of different length\".to_string(),\n+            \"Cannot perform math operation on arrays of different length\".to_string(),\n         ));\n     }\n     let mut b = BooleanArray::builder(left.len());\n@@ -226,7 +247,56 @@ where\n         } else {\n             Some(right.value(index))\n         };\n-        b.push(op(l, r)).unwrap();\n+        b.push(op(l, r))?;\n+    }\n+    Ok(b.finish())\n+}\n+\n+/// Perform `AND` operation on two arrays. If either left or right value is null then the result is also null.\n+pub fn and(left: &BooleanArray, right: &BooleanArray) -> Result<BooleanArray> {\n+    if left.len() != right.len() {\n+        return Err(ArrowError::ComputeError(\n+            \"Cannot perform boolean operation on arrays of different length\".to_string(),\n+        ));\n+    }\n+    let mut b = BooleanArray::builder(left.len());\n+    for i in 0..left.len() {\n+        if left.is_null(i) || right.is_null(i) {\n+            b.push_null()?;\n+        } else {\n+            b.push(left.value(i) && right.value(i))?;\n+        }\n+    }\n+    Ok(b.finish())\n+}\n+\n+/// Perform `OR` operation on two arrays. If either left or right value is null then the result is also null.\n+pub fn or(left: &BooleanArray, right: &BooleanArray) -> Result<BooleanArray> {\n+    if left.len() != right.len() {\n+        return Err(ArrowError::ComputeError(\n+            \"Cannot perform boolean operation on arrays of different length\".to_string(),\n+        ));\n+    }\n+    let mut b = BooleanArray::builder(left.len());\n+    for i in 0..left.len() {\n+        if left.is_null(i) || right.is_null(i) {\n+            b.push_null()?;\n+        } else {\n+            b.push(left.value(i) || right.value(i))?;\n+        }\n+    }\n+    Ok(b.finish())\n+}\n+\n+/// Perform unary `NOT` operation on an arrays. If value is null then the result is also null.\n+pub fn not(left: &BooleanArray) -> Result<BooleanArray> {\n+    let mut b = BooleanArray::builder(left.len());\n+    for i in 0..left.len() {\n+        if left.is_null(i) {\n+            b.push_null()?;\n+        } else {\n+            b.push(!left.value(i))?;\n+        }\n     }\n     Ok(b.finish())\n }\n@@ -256,7 +326,7 @@ mod tests {\n             .err()\n             .expect(\"should have failed due to different lengths\");\n         assert_eq!(\n-            \"ComputeError(\\\"Cannot perform math operation on two batches of different length\\\")\",\n+            \"ComputeError(\\\"Cannot perform math operation on arrays of different length\\\")\",\n             format!(\"{:?}\", e)\n         );\n     }\n@@ -365,6 +435,16 @@ mod tests {\n         assert_eq!(true, c.value(4));\n     }\n \n+    #[test]\n+    fn test_primitive_array_lt_nulls() {\n+        let a = Int32Array::from(vec![None, None, Some(1)]);\n+        let b = Int32Array::from(vec![None, Some(1), None]);\n+        let c = lt(&a, &b).unwrap();\n+        assert_eq!(false, c.value(0));\n+        assert_eq!(true, c.value(1));\n+        assert_eq!(false, c.value(2));\n+    }\n+\n     #[test]\n     fn test_primitive_array_lt_eq() {\n         let a = Int32Array::from(vec![8, 8, 8, 8, 8]);\n@@ -377,6 +457,16 @@ mod tests {\n         assert_eq!(true, c.value(4));\n     }\n \n+    #[test]\n+    fn test_primitive_array_lt_eq_nulls() {\n+        let a = Int32Array::from(vec![None, None, Some(1)]);\n+        let b = Int32Array::from(vec![None, Some(1), None]);\n+        let c = lt_eq(&a, &b).unwrap();\n+        assert_eq!(true, c.value(0));\n+        assert_eq!(true, c.value(1));\n+        assert_eq!(false, c.value(2));\n+    }\n+\n     #[test]\n     fn test_primitive_array_gt() {\n         let a = Int32Array::from(vec![8, 8, 8, 8, 8]);\n@@ -389,6 +479,16 @@ mod tests {\n         assert_eq!(false, c.value(4));\n     }\n \n+    #[test]\n+    fn test_primitive_array_gt_nulls() {\n+        let a = Int32Array::from(vec![None, None, Some(1)]);\n+        let b = Int32Array::from(vec![None, Some(1), None]);\n+        let c = gt(&a, &b).unwrap();\n+        assert_eq!(false, c.value(0));\n+        assert_eq!(false, c.value(1));\n+        assert_eq!(true, c.value(2));\n+    }\n+\n     #[test]\n     fn test_primitive_array_gt_eq() {\n         let a = Int32Array::from(vec![8, 8, 8, 8, 8]);\n@@ -401,6 +501,16 @@ mod tests {\n         assert_eq!(false, c.value(4));\n     }\n \n+    #[test]\n+    fn test_primitive_array_gt_eq_nulls() {\n+        let a = Int32Array::from(vec![None, None, Some(1)]);\n+        let b = Int32Array::from(vec![None, Some(1), None]);\n+        let c = gt_eq(&a, &b).unwrap();\n+        assert_eq!(true, c.value(0));\n+        assert_eq!(false, c.value(1));\n+        assert_eq!(true, c.value(2));\n+    }\n+\n     #[test]\n     fn test_buffer_array_min_max() {\n         let a = Int32Array::from(vec![5, 6, 7, 8, 9]);\n@@ -415,4 +525,57 @@ mod tests {\n         assert_eq!(9, max(&a).unwrap());\n     }\n \n+    #[test]\n+    fn test_bool_array_and() {\n+        let a = BooleanArray::from(vec![false, false, true, true]);\n+        let b = BooleanArray::from(vec![false, true, false, true]);\n+        let c = and(&a, &b).unwrap();\n+        assert_eq!(false, c.value(0));\n+        assert_eq!(false, c.value(1));\n+        assert_eq!(false, c.value(2));\n+        assert_eq!(true, c.value(3));\n+    }\n+\n+    #[test]\n+    fn test_bool_array_or() {\n+        let a = BooleanArray::from(vec![false, false, true, true]);\n+        let b = BooleanArray::from(vec![false, true, false, true]);\n+        let c = or(&a, &b).unwrap();\n+        assert_eq!(false, c.value(0));\n+        assert_eq!(true, c.value(1));\n+        assert_eq!(true, c.value(2));\n+        assert_eq!(true, c.value(3));\n+    }\n+\n+    #[test]\n+    fn test_bool_array_or_nulls() {\n+        let a = BooleanArray::from(vec![None, Some(false), None, Some(false)]);\n+        let b = BooleanArray::from(vec![None, None, Some(false), Some(false)]);\n+        let c = or(&a, &b).unwrap();\n+        assert_eq!(true, c.is_null(0));\n+        assert_eq!(true, c.is_null(1));\n+        assert_eq!(true, c.is_null(2));\n+        assert_eq!(false, c.is_null(3));\n+    }\n+\n+    #[test]\n+    fn test_bool_array_not() {\n+        let a = BooleanArray::from(vec![false, false, true, true]);\n+        let c = not(&a).unwrap();\n+        assert_eq!(true, c.value(0));\n+        assert_eq!(true, c.value(1));\n+        assert_eq!(false, c.value(2));\n+        assert_eq!(false, c.value(3));\n+    }\n+\n+    #[test]\n+    fn test_bool_array_and_nulls() {\n+        let a = BooleanArray::from(vec![None, Some(false), None, Some(false)]);\n+        let b = BooleanArray::from(vec![None, None, Some(false), Some(false)]);\n+        let c = and(&a, &b).unwrap();\n+        assert_eq!(true, c.is_null(0));\n+        assert_eq!(true, c.is_null(1));\n+        assert_eq!(true, c.is_null(2));\n+        assert_eq!(false, c.is_null(3));\n+    }\n }\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-20T01:01:37.054+0000",
                    "updated": "2018-12-20T01:01:37.054+0000",
                    "started": "2018-12-20T01:01:37.053+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177257",
                    "issueId": "13204660"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204660/worklog/177298",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me removed a comment on issue #3189: ARROW-4038: [Rust] Implement boolean AND, OR, NOT array ops\nURL: https://github.com/apache/arrow/pull/3189#issuecomment-447846073\n \n \n   An unrelated question @andygrove , do you know if Rust vectorises array ops automatically?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-20T02:36:26.201+0000",
                    "updated": "2018-12-20T02:36:26.201+0000",
                    "started": "2018-12-20T02:36:26.200+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177298",
                    "issueId": "13204660"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 1200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2f4654d0[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ffb836f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@464d598a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@56e5ad7[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@380131b3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@60de177d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4cf383e5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3b3cd04e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a81f233[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1af469e1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ac82df1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@17ab2a46[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 1200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Dec 20 01:01:45 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-12-20T01:01:45.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4038/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-12-15T16:18:53.000+0000",
        "updated": "2018-12-20T02:36:26.000+0000",
        "timeoriginalestimate": null,
        "description": "We have math and comparison operations and I would now like to add boolean unary and binary operators such as AND, OR, NOT for use in predicates against arrow data.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 1200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Add array_ops methods for boolean AND, OR, NOT",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204660/comment/16722962",
                    "id": "16722962",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "PR: https://github.com/apache/arrow/pull/3189",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2018-12-17T13:09:25.112+0000",
                    "updated": "2018-12-17T13:09:25.112+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204660/comment/16725485",
                    "id": "16725485",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Issue resolved by pull request 3189\n[https://github.com/apache/arrow/pull/3189]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2018-12-20T01:01:45.209+0000",
                    "updated": "2018-12-20T01:01:45.209+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|u000c8:",
        "customfield_12314139": null
    }
}