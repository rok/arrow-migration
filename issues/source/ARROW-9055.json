{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13309900",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900",
    "key": "ARROW-9055",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12590689",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12590689",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13306872",
                    "key": "ARROW-8894",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13306872",
                    "fields": {
                        "summary": "[C++] C++ array kernels framework and execution buildout (umbrella issue)",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            },
            {
                "id": "12591373",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12591373",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13311705",
                    "key": "ARROW-9145",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13311705",
                    "fields": {
                        "summary": "[C++] Add true_count / false_count methods to BooleanArray",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 19200,
            "total": 19200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 19200,
            "total": 19200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9055/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 32,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/447813",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs opened a new pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-18T13:37:51.274+0000",
                    "updated": "2020-06-18T13:37:51.274+0000",
                    "started": "2020-06-18T13:37:51.273+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "447813",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/447817",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#discussion_r442233159\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic.cc\n##########\n@@ -255,6 +255,28 @@ struct SumState {\n   }\n };\n \n+template <>\n+struct SumState<BooleanType> {\n+  using SumType = typename FindAccumulatorType<BooleanType>::Type;\n+  using ThisType = SumState<BooleanType, SumType>;\n+\n+  ThisType& operator+=(const ThisType& rhs) {\n\nReview comment:\n       I chose to specialize SumState since the required machinery is already implemented. \r\n   \r\n   I could factor out the common parts to a SumStateBase or something. Let me know if there is a nicer solution.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-18T13:40:04.345+0000",
                    "updated": "2020-06-18T13:40:04.345+0000",
                    "started": "2020-06-18T13:40:04.344+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "447817",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/447824",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#issuecomment-646027414\n\n\n   https://issues.apache.org/jira/browse/ARROW-9055\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-18T13:46:54.532+0000",
                    "updated": "2020-06-18T13:46:54.532+0000",
                    "started": "2020-06-18T13:46:54.532+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "447824",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/447833",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#discussion_r442233159\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic.cc\n##########\n@@ -255,6 +255,28 @@ struct SumState {\n   }\n };\n \n+template <>\n+struct SumState<BooleanType> {\n+  using SumType = typename FindAccumulatorType<BooleanType>::Type;\n+  using ThisType = SumState<BooleanType, SumType>;\n+\n+  ThisType& operator+=(const ThisType& rhs) {\n\nReview comment:\n       I chose to specialize SumState since the required machinery has been already implemented. \r\n   \r\n   I could factor out the common parts to a SumStateBase or something. Let me know if there is a nicer solution.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-18T14:00:56.792+0000",
                    "updated": "2020-06-18T14:00:56.792+0000",
                    "started": "2020-06-18T14:00:56.792+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "447833",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/447851",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#discussion_r442274099\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_test.cc\n##########\n@@ -127,6 +127,41 @@ void ValidateSum(const Array& array) {\n   ValidateSum<ArrowType>(array, NaiveSum<ArrowType>(array));\n }\n \n+using UnaryOp = Result<Datum>(const Datum&, ExecContext*);\n+\n+template <UnaryOp& Op, typename ScalarType>\n+void ValidateBooleanAgg(const std::string& json,\n+                        const std::shared_ptr<ScalarType>& expected) {\n+  auto array = ArrayFromJSON(boolean(), json);\n+  auto exp = Datum(expected);\n+  ASSERT_OK_AND_ASSIGN(Datum result, Op(array, nullptr));\n+  ASSERT_TRUE(result.Equals(exp));\n+}\n+\n+TEST(TestBooleanAggregation, Sum) {\n+  ValidateBooleanAgg<Sum>(\"[]\", std::make_shared<UInt64Scalar>());\n\nReview comment:\n       Why isn't it 0 here?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-18T14:34:26.579+0000",
                    "updated": "2020-06-18T14:34:26.579+0000",
                    "started": "2020-06-18T14:34:26.578+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "447851",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/447860",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#discussion_r442285685\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_test.cc\n##########\n@@ -127,6 +127,41 @@ void ValidateSum(const Array& array) {\n   ValidateSum<ArrowType>(array, NaiveSum<ArrowType>(array));\n }\n \n+using UnaryOp = Result<Datum>(const Datum&, ExecContext*);\n+\n+template <UnaryOp& Op, typename ScalarType>\n+void ValidateBooleanAgg(const std::string& json,\n+                        const std::shared_ptr<ScalarType>& expected) {\n+  auto array = ArrayFromJSON(boolean(), json);\n+  auto exp = Datum(expected);\n+  ASSERT_OK_AND_ASSIGN(Datum result, Op(array, nullptr));\n+  ASSERT_TRUE(result.Equals(exp));\n+}\n+\n+TEST(TestBooleanAggregation, Sum) {\n+  ValidateBooleanAgg<Sum>(\"[]\", std::make_shared<UInt64Scalar>());\n+  ValidateBooleanAgg<Sum>(\"[null]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[null, false]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[true]\", std::make_shared<UInt64Scalar>(1));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true]\", std::make_shared<UInt64Scalar>(2));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true, true, null]\",\n+                          std::make_shared<UInt64Scalar>(3));\n+}\n+\n+TEST(TestBooleanAggregation, Mean) {\n+  ValidateBooleanAgg<Mean>(\"[]\", std::make_shared<DoubleScalar>());\n+  ValidateBooleanAgg<Mean>(\"[null]\", std::make_shared<DoubleScalar>(0));\n+  ValidateBooleanAgg<Mean>(\"[null, false]\", std::make_shared<DoubleScalar>(0));\n+  ValidateBooleanAgg<Mean>(\"[true]\", std::make_shared<DoubleScalar>(1));\n+  ValidateBooleanAgg<Mean>(\"[true, false, true, false]\",\n+                           std::make_shared<DoubleScalar>(0.5));\n+  ValidateBooleanAgg<Mean>(\"[true, null]\", std::make_shared<DoubleScalar>(0.5));\n\nReview comment:\n       I don't this is right. It should probably be 1.0:\r\n   ```python\r\n   >>> pa.compute.call_function(\"mean\", [pa.array([1, None])])                                                                                                              \r\n   1.0\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-18T14:49:20.558+0000",
                    "updated": "2020-06-18T14:49:20.558+0000",
                    "started": "2020-06-18T14:49:20.558+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "447860",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/447861",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#discussion_r442286180\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_test.cc\n##########\n@@ -127,6 +127,41 @@ void ValidateSum(const Array& array) {\n   ValidateSum<ArrowType>(array, NaiveSum<ArrowType>(array));\n }\n \n+using UnaryOp = Result<Datum>(const Datum&, ExecContext*);\n+\n+template <UnaryOp& Op, typename ScalarType>\n+void ValidateBooleanAgg(const std::string& json,\n+                        const std::shared_ptr<ScalarType>& expected) {\n+  auto array = ArrayFromJSON(boolean(), json);\n+  auto exp = Datum(expected);\n+  ASSERT_OK_AND_ASSIGN(Datum result, Op(array, nullptr));\n+  ASSERT_TRUE(result.Equals(exp));\n+}\n+\n+TEST(TestBooleanAggregation, Sum) {\n+  ValidateBooleanAgg<Sum>(\"[]\", std::make_shared<UInt64Scalar>());\n+  ValidateBooleanAgg<Sum>(\"[null]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[null, false]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[true]\", std::make_shared<UInt64Scalar>(1));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true]\", std::make_shared<UInt64Scalar>(2));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true, true, null]\",\n+                          std::make_shared<UInt64Scalar>(3));\n+}\n+\n+TEST(TestBooleanAggregation, Mean) {\n+  ValidateBooleanAgg<Mean>(\"[]\", std::make_shared<DoubleScalar>());\n+  ValidateBooleanAgg<Mean>(\"[null]\", std::make_shared<DoubleScalar>(0));\n\nReview comment:\n       Should probably be Null instead:\r\n   ```python\r\n   >>> pa.compute.call_function(\"mean\", [pa.array([None], type=pa.int64())])                                                                                                \r\n   None\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-18T14:50:03.675+0000",
                    "updated": "2020-06-18T14:50:03.675+0000",
                    "started": "2020-06-18T14:50:03.675+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "447861",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/447862",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#discussion_r442286604\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_test.cc\n##########\n@@ -127,6 +127,41 @@ void ValidateSum(const Array& array) {\n   ValidateSum<ArrowType>(array, NaiveSum<ArrowType>(array));\n }\n \n+using UnaryOp = Result<Datum>(const Datum&, ExecContext*);\n+\n+template <UnaryOp& Op, typename ScalarType>\n+void ValidateBooleanAgg(const std::string& json,\n+                        const std::shared_ptr<ScalarType>& expected) {\n+  auto array = ArrayFromJSON(boolean(), json);\n+  auto exp = Datum(expected);\n+  ASSERT_OK_AND_ASSIGN(Datum result, Op(array, nullptr));\n+  ASSERT_TRUE(result.Equals(exp));\n+}\n+\n+TEST(TestBooleanAggregation, Sum) {\n+  ValidateBooleanAgg<Sum>(\"[]\", std::make_shared<UInt64Scalar>());\n+  ValidateBooleanAgg<Sum>(\"[null]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[null, false]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[true]\", std::make_shared<UInt64Scalar>(1));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true]\", std::make_shared<UInt64Scalar>(2));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true, true, null]\",\n+                          std::make_shared<UInt64Scalar>(3));\n+}\n+\n+TEST(TestBooleanAggregation, Mean) {\n+  ValidateBooleanAgg<Mean>(\"[]\", std::make_shared<DoubleScalar>());\n+  ValidateBooleanAgg<Mean>(\"[null]\", std::make_shared<DoubleScalar>(0));\n+  ValidateBooleanAgg<Mean>(\"[null, false]\", std::make_shared<DoubleScalar>(0));\n+  ValidateBooleanAgg<Mean>(\"[true]\", std::make_shared<DoubleScalar>(1));\n+  ValidateBooleanAgg<Mean>(\"[true, false, true, false]\",\n+                           std::make_shared<DoubleScalar>(0.5));\n+  ValidateBooleanAgg<Mean>(\"[true, null]\", std::make_shared<DoubleScalar>(0.5));\n+  ValidateBooleanAgg<Mean>(\"[true, null, false, true]\",\n+                           std::make_shared<DoubleScalar>(0.5));\n\nReview comment:\n       Should be 2/3...\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-18T14:50:36.784+0000",
                    "updated": "2020-06-18T14:50:36.784+0000",
                    "started": "2020-06-18T14:50:36.784+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "447862",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/447863",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#discussion_r442286764\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_test.cc\n##########\n@@ -127,6 +127,41 @@ void ValidateSum(const Array& array) {\n   ValidateSum<ArrowType>(array, NaiveSum<ArrowType>(array));\n }\n \n+using UnaryOp = Result<Datum>(const Datum&, ExecContext*);\n+\n+template <UnaryOp& Op, typename ScalarType>\n+void ValidateBooleanAgg(const std::string& json,\n+                        const std::shared_ptr<ScalarType>& expected) {\n+  auto array = ArrayFromJSON(boolean(), json);\n+  auto exp = Datum(expected);\n+  ASSERT_OK_AND_ASSIGN(Datum result, Op(array, nullptr));\n+  ASSERT_TRUE(result.Equals(exp));\n+}\n+\n+TEST(TestBooleanAggregation, Sum) {\n+  ValidateBooleanAgg<Sum>(\"[]\", std::make_shared<UInt64Scalar>());\n+  ValidateBooleanAgg<Sum>(\"[null]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[null, false]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[true]\", std::make_shared<UInt64Scalar>(1));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true]\", std::make_shared<UInt64Scalar>(2));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true, true, null]\",\n+                          std::make_shared<UInt64Scalar>(3));\n+}\n+\n+TEST(TestBooleanAggregation, Mean) {\n+  ValidateBooleanAgg<Mean>(\"[]\", std::make_shared<DoubleScalar>());\n+  ValidateBooleanAgg<Mean>(\"[null]\", std::make_shared<DoubleScalar>(0));\n+  ValidateBooleanAgg<Mean>(\"[null, false]\", std::make_shared<DoubleScalar>(0));\n+  ValidateBooleanAgg<Mean>(\"[true]\", std::make_shared<DoubleScalar>(1));\n+  ValidateBooleanAgg<Mean>(\"[true, false, true, false]\",\n+                           std::make_shared<DoubleScalar>(0.5));\n+  ValidateBooleanAgg<Mean>(\"[true, null]\", std::make_shared<DoubleScalar>(0.5));\n+  ValidateBooleanAgg<Mean>(\"[true, null, false, true]\",\n+                           std::make_shared<DoubleScalar>(0.5));\n+  ValidateBooleanAgg<Mean>(\"[true, null, false, false]\",\n+                           std::make_shared<DoubleScalar>(0.25));\n\nReview comment:\n       Should be 0.5.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_test.cc\n##########\n@@ -127,6 +127,41 @@ void ValidateSum(const Array& array) {\n   ValidateSum<ArrowType>(array, NaiveSum<ArrowType>(array));\n }\n \n+using UnaryOp = Result<Datum>(const Datum&, ExecContext*);\n+\n+template <UnaryOp& Op, typename ScalarType>\n+void ValidateBooleanAgg(const std::string& json,\n+                        const std::shared_ptr<ScalarType>& expected) {\n+  auto array = ArrayFromJSON(boolean(), json);\n+  auto exp = Datum(expected);\n+  ASSERT_OK_AND_ASSIGN(Datum result, Op(array, nullptr));\n+  ASSERT_TRUE(result.Equals(exp));\n+}\n+\n+TEST(TestBooleanAggregation, Sum) {\n+  ValidateBooleanAgg<Sum>(\"[]\", std::make_shared<UInt64Scalar>());\n+  ValidateBooleanAgg<Sum>(\"[null]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[null, false]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[true]\", std::make_shared<UInt64Scalar>(1));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true]\", std::make_shared<UInt64Scalar>(2));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true, true, null]\",\n+                          std::make_shared<UInt64Scalar>(3));\n+}\n+\n+TEST(TestBooleanAggregation, Mean) {\n+  ValidateBooleanAgg<Mean>(\"[]\", std::make_shared<DoubleScalar>());\n+  ValidateBooleanAgg<Mean>(\"[null]\", std::make_shared<DoubleScalar>(0));\n+  ValidateBooleanAgg<Mean>(\"[null, false]\", std::make_shared<DoubleScalar>(0));\n+  ValidateBooleanAgg<Mean>(\"[true]\", std::make_shared<DoubleScalar>(1));\n+  ValidateBooleanAgg<Mean>(\"[true, false, true, false]\",\n+                           std::make_shared<DoubleScalar>(0.5));\n+  ValidateBooleanAgg<Mean>(\"[true, null]\", std::make_shared<DoubleScalar>(0.5));\n+  ValidateBooleanAgg<Mean>(\"[true, null, false, true]\",\n+                           std::make_shared<DoubleScalar>(0.5));\n+  ValidateBooleanAgg<Mean>(\"[true, null, false, false]\",\n+                           std::make_shared<DoubleScalar>(0.25));\n\nReview comment:\n       Should be 1/3.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-18T14:50:59.783+0000",
                    "updated": "2020-06-18T14:50:59.783+0000",
                    "started": "2020-06-18T14:50:59.783+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "447863",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/447865",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#discussion_r442290638\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic.cc\n##########\n@@ -255,6 +255,28 @@ struct SumState {\n   }\n };\n \n+template <>\n+struct SumState<BooleanType> {\n+  using SumType = typename FindAccumulatorType<BooleanType>::Type;\n+  using ThisType = SumState<BooleanType, SumType>;\n+\n+  ThisType& operator+=(const ThisType& rhs) {\n+    this->count += rhs.count;\n+    this->sum += rhs.sum;\n+    return *this;\n+  }\n+\n+ public:\n+  void Consume(const Array& input) {\n+    const BooleanArray& array = static_cast<const BooleanArray&>(input);\n+    count += array.length();\n\nReview comment:\n       Fails to subtract null count \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-18T14:56:02.622+0000",
                    "updated": "2020-06-18T14:56:02.622+0000",
                    "started": "2020-06-18T14:56:02.622+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "447865",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/448033",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#issuecomment-646305615\n\n\n   I pushed some changes to the R bindings to take advantage of this. I'll note that MinMax also doesn't support boolean and probably should.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-18T21:06:23.866+0000",
                    "updated": "2020-06-18T21:06:23.866+0000",
                    "started": "2020-06-18T21:06:23.866+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "448033",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/448452",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#discussion_r442823957\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_test.cc\n##########\n@@ -127,6 +127,41 @@ void ValidateSum(const Array& array) {\n   ValidateSum<ArrowType>(array, NaiveSum<ArrowType>(array));\n }\n \n+using UnaryOp = Result<Datum>(const Datum&, ExecContext*);\n+\n+template <UnaryOp& Op, typename ScalarType>\n+void ValidateBooleanAgg(const std::string& json,\n+                        const std::shared_ptr<ScalarType>& expected) {\n+  auto array = ArrayFromJSON(boolean(), json);\n+  auto exp = Datum(expected);\n+  ASSERT_OK_AND_ASSIGN(Datum result, Op(array, nullptr));\n+  ASSERT_TRUE(result.Equals(exp));\n+}\n+\n+TEST(TestBooleanAggregation, Sum) {\n+  ValidateBooleanAgg<Sum>(\"[]\", std::make_shared<UInt64Scalar>());\n+  ValidateBooleanAgg<Sum>(\"[null]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[null, false]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[true]\", std::make_shared<UInt64Scalar>(1));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true]\", std::make_shared<UInt64Scalar>(2));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true, true, null]\",\n+                          std::make_shared<UInt64Scalar>(3));\n+}\n+\n+TEST(TestBooleanAggregation, Mean) {\n+  ValidateBooleanAgg<Mean>(\"[]\", std::make_shared<DoubleScalar>());\n+  ValidateBooleanAgg<Mean>(\"[null]\", std::make_shared<DoubleScalar>(0));\n+  ValidateBooleanAgg<Mean>(\"[null, false]\", std::make_shared<DoubleScalar>(0));\n+  ValidateBooleanAgg<Mean>(\"[true]\", std::make_shared<DoubleScalar>(1));\n+  ValidateBooleanAgg<Mean>(\"[true, false, true, false]\",\n+                           std::make_shared<DoubleScalar>(0.5));\n+  ValidateBooleanAgg<Mean>(\"[true, null]\", std::make_shared<DoubleScalar>(0.5));\n\nReview comment:\n       Done.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-19T12:55:48.326+0000",
                    "updated": "2020-06-19T12:55:48.326+0000",
                    "started": "2020-06-19T12:55:48.326+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "448452",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/448453",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#discussion_r442824056\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_test.cc\n##########\n@@ -127,6 +127,41 @@ void ValidateSum(const Array& array) {\n   ValidateSum<ArrowType>(array, NaiveSum<ArrowType>(array));\n }\n \n+using UnaryOp = Result<Datum>(const Datum&, ExecContext*);\n+\n+template <UnaryOp& Op, typename ScalarType>\n+void ValidateBooleanAgg(const std::string& json,\n+                        const std::shared_ptr<ScalarType>& expected) {\n+  auto array = ArrayFromJSON(boolean(), json);\n+  auto exp = Datum(expected);\n+  ASSERT_OK_AND_ASSIGN(Datum result, Op(array, nullptr));\n+  ASSERT_TRUE(result.Equals(exp));\n+}\n+\n+TEST(TestBooleanAggregation, Sum) {\n+  ValidateBooleanAgg<Sum>(\"[]\", std::make_shared<UInt64Scalar>());\n+  ValidateBooleanAgg<Sum>(\"[null]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[null, false]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[true]\", std::make_shared<UInt64Scalar>(1));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true]\", std::make_shared<UInt64Scalar>(2));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true, true, null]\",\n+                          std::make_shared<UInt64Scalar>(3));\n+}\n+\n+TEST(TestBooleanAggregation, Mean) {\n+  ValidateBooleanAgg<Mean>(\"[]\", std::make_shared<DoubleScalar>());\n+  ValidateBooleanAgg<Mean>(\"[null]\", std::make_shared<DoubleScalar>(0));\n\nReview comment:\n       Done.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_test.cc\n##########\n@@ -127,6 +127,41 @@ void ValidateSum(const Array& array) {\n   ValidateSum<ArrowType>(array, NaiveSum<ArrowType>(array));\n }\n \n+using UnaryOp = Result<Datum>(const Datum&, ExecContext*);\n+\n+template <UnaryOp& Op, typename ScalarType>\n+void ValidateBooleanAgg(const std::string& json,\n+                        const std::shared_ptr<ScalarType>& expected) {\n+  auto array = ArrayFromJSON(boolean(), json);\n+  auto exp = Datum(expected);\n+  ASSERT_OK_AND_ASSIGN(Datum result, Op(array, nullptr));\n+  ASSERT_TRUE(result.Equals(exp));\n+}\n+\n+TEST(TestBooleanAggregation, Sum) {\n+  ValidateBooleanAgg<Sum>(\"[]\", std::make_shared<UInt64Scalar>());\n+  ValidateBooleanAgg<Sum>(\"[null]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[null, false]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[true]\", std::make_shared<UInt64Scalar>(1));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true]\", std::make_shared<UInt64Scalar>(2));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true, true, null]\",\n+                          std::make_shared<UInt64Scalar>(3));\n+}\n+\n+TEST(TestBooleanAggregation, Mean) {\n+  ValidateBooleanAgg<Mean>(\"[]\", std::make_shared<DoubleScalar>());\n+  ValidateBooleanAgg<Mean>(\"[null]\", std::make_shared<DoubleScalar>(0));\n+  ValidateBooleanAgg<Mean>(\"[null, false]\", std::make_shared<DoubleScalar>(0));\n+  ValidateBooleanAgg<Mean>(\"[true]\", std::make_shared<DoubleScalar>(1));\n+  ValidateBooleanAgg<Mean>(\"[true, false, true, false]\",\n+                           std::make_shared<DoubleScalar>(0.5));\n+  ValidateBooleanAgg<Mean>(\"[true, null]\", std::make_shared<DoubleScalar>(0.5));\n+  ValidateBooleanAgg<Mean>(\"[true, null, false, true]\",\n+                           std::make_shared<DoubleScalar>(0.5));\n\nReview comment:\n       Done.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_test.cc\n##########\n@@ -127,6 +127,41 @@ void ValidateSum(const Array& array) {\n   ValidateSum<ArrowType>(array, NaiveSum<ArrowType>(array));\n }\n \n+using UnaryOp = Result<Datum>(const Datum&, ExecContext*);\n+\n+template <UnaryOp& Op, typename ScalarType>\n+void ValidateBooleanAgg(const std::string& json,\n+                        const std::shared_ptr<ScalarType>& expected) {\n+  auto array = ArrayFromJSON(boolean(), json);\n+  auto exp = Datum(expected);\n+  ASSERT_OK_AND_ASSIGN(Datum result, Op(array, nullptr));\n+  ASSERT_TRUE(result.Equals(exp));\n+}\n+\n+TEST(TestBooleanAggregation, Sum) {\n+  ValidateBooleanAgg<Sum>(\"[]\", std::make_shared<UInt64Scalar>());\n+  ValidateBooleanAgg<Sum>(\"[null]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[null, false]\", std::make_shared<UInt64Scalar>(0));\n+  ValidateBooleanAgg<Sum>(\"[true]\", std::make_shared<UInt64Scalar>(1));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true]\", std::make_shared<UInt64Scalar>(2));\n+  ValidateBooleanAgg<Sum>(\"[true, false, true, true, null]\",\n+                          std::make_shared<UInt64Scalar>(3));\n+}\n+\n+TEST(TestBooleanAggregation, Mean) {\n+  ValidateBooleanAgg<Mean>(\"[]\", std::make_shared<DoubleScalar>());\n+  ValidateBooleanAgg<Mean>(\"[null]\", std::make_shared<DoubleScalar>(0));\n+  ValidateBooleanAgg<Mean>(\"[null, false]\", std::make_shared<DoubleScalar>(0));\n+  ValidateBooleanAgg<Mean>(\"[true]\", std::make_shared<DoubleScalar>(1));\n+  ValidateBooleanAgg<Mean>(\"[true, false, true, false]\",\n+                           std::make_shared<DoubleScalar>(0.5));\n+  ValidateBooleanAgg<Mean>(\"[true, null]\", std::make_shared<DoubleScalar>(0.5));\n+  ValidateBooleanAgg<Mean>(\"[true, null, false, true]\",\n+                           std::make_shared<DoubleScalar>(0.5));\n+  ValidateBooleanAgg<Mean>(\"[true, null, false, false]\",\n+                           std::make_shared<DoubleScalar>(0.25));\n\nReview comment:\n       Done.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-19T12:56:11.270+0000",
                    "updated": "2020-06-19T12:56:11.270+0000",
                    "started": "2020-06-19T12:56:11.270+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "448453",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/448505",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#discussion_r442863137\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic.cc\n##########\n@@ -397,24 +452,26 @@ struct MinMaxImpl : public ScalarAggregator {\n \n     ArrayType arr(batch[0].array());\n \n-    local.has_nulls = arr.null_count() > 0;\n+    const auto null_count = arr.null_count();\n+    local.has_nulls = null_count > 0;\n+    local.has_values = (arr.length() - null_count) > 0;\n+\n     if (local.has_nulls && options.null_handling == MinMaxOptions::OUTPUT_NULL) {\n       this->state = local;\n       return;\n     }\n \n-    const auto values = arr.raw_values();\n\nReview comment:\n       BooleanArray has no `raw_values()` method.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-19T14:10:48.463+0000",
                    "updated": "2020-06-19T14:10:48.463+0000",
                    "started": "2020-06-19T14:10:48.463+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "448505",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/448509",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#discussion_r442864422\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic.cc\n##########\n@@ -339,13 +366,38 @@ std::unique_ptr<KernelState> MeanInit(KernelContext* ctx, const KernelInitArgs&\n template <typename ArrowType, typename Enable = void>\n struct MinMaxState {};\n \n+template <typename ArrowType>\n+struct MinMaxState<ArrowType, enable_if_boolean<ArrowType>> {\n+  using ThisType = MinMaxState<ArrowType>;\n+  using T = typename ArrowType::c_type;\n+\n+  ThisType& operator+=(const ThisType& rhs) {\n+    this->has_nulls |= rhs.has_nulls;\n+    this->has_values |= rhs.has_values;\n\nReview comment:\n       @wesm I had to introduce a flag to check whether any of the arrays have valid values, otherwise the default inverse extreme values were returned instead of null.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-19T14:13:14.590+0000",
                    "updated": "2020-06-19T14:13:14.590+0000",
                    "started": "2020-06-19T14:13:14.590+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "448509",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/448510",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#discussion_r442864766\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_test.cc\n##########\n@@ -399,15 +434,59 @@ class TestNumericMinMaxKernel : public ::testing::Test {\n };\n \n template <typename ArrowType>\n-class TestFloatingMinMaxKernel : public TestNumericMinMaxKernel<ArrowType> {};\n+class TestBooleanMinMaxKernel : public TestPrimitiveMinMaxKernel<ArrowType> {};\n+\n+template <typename ArrowType>\n+class TestIntegerMinMaxKernel : public TestPrimitiveMinMaxKernel<ArrowType> {};\n+\n+template <typename ArrowType>\n+class TestFloatingMinMaxKernel : public TestPrimitiveMinMaxKernel<ArrowType> {};\n+\n+TYPED_TEST_SUITE(TestBooleanMinMaxKernel, BooleanArrowType);\n+TYPED_TEST(TestBooleanMinMaxKernel, Basics) {\n+  MinMaxOptions options;\n+  std::vector<std::string> chunked_input0 = {\"[]\", \"[]\"};\n+  std::vector<std::string> chunked_input1 = {\"[true, true, null]\", \"[true, null]\"};\n+  std::vector<std::string> chunked_input2 = {\"[false, false, false]\", \"[false]\"};\n+  std::vector<std::string> chunked_input3 = {\"[true, null]\", \"[null, false]\"};\n+\n+  // SKIP nulls by default\n+  this->AssertMinMaxIsNull(\"[]\", options);\n+  this->AssertMinMaxIsNull(\"[null, null, null]\", options);\n+  this->AssertMinMaxIs(\"[false, false, false]\", false, false, options);\n+  this->AssertMinMaxIs(\"[false, false, false, null]\", false, false, options);\n+  this->AssertMinMaxIs(\"[true, null, true, true]\", true, true, options);\n+  this->AssertMinMaxIs(\"[true, null, true, true]\", true, true, options);\n+  this->AssertMinMaxIs(\"[true, null, false, true]\", false, true, options);\n+  this->AssertMinMaxIsNull(chunked_input0, options);\n+  this->AssertMinMaxIs(chunked_input1, true, true, options);\n+  this->AssertMinMaxIs(chunked_input2, false, false, options);\n+  this->AssertMinMaxIs(chunked_input3, false, true, options);\n+\n+  options = MinMaxOptions(MinMaxOptions::OUTPUT_NULL);\n+  this->AssertMinMaxIsNull(\"[]\", options);\n+  this->AssertMinMaxIsNull(\"[null, null, null]\", options);\n+  this->AssertMinMaxIsNull(\"[false, null, false]\", options);\n+  this->AssertMinMaxIsNull(\"[true, null]\", options);\n+  this->AssertMinMaxIs(\"[true, true, true]\", true, true, options);\n+  this->AssertMinMaxIs(\"[false, false]\", false, false, options);\n+  this->AssertMinMaxIs(\"[false, true]\", false, true, options);\n+  this->AssertMinMaxIsNull(chunked_input0, options);\n+  this->AssertMinMaxIsNull(chunked_input1, options);\n+  this->AssertMinMaxIs(chunked_input2, false, false, options);\n+  this->AssertMinMaxIsNull(chunked_input3, options);\n+}\n \n-TYPED_TEST_SUITE(TestNumericMinMaxKernel, IntegralArrowTypes);\n-TYPED_TEST(TestNumericMinMaxKernel, Basics) {\n+TYPED_TEST_SUITE(TestIntegerMinMaxKernel, IntegralArrowTypes);\n+TYPED_TEST(TestIntegerMinMaxKernel, Basics) {\n   MinMaxOptions options;\n   std::vector<std::string> chunked_input1 = {\"[5, 1, 2, 3, 4]\", \"[9, 1, null, 3, 4]\"};\n   std::vector<std::string> chunked_input2 = {\"[5, null, 2, 3, 4]\", \"[9, 1, 2, 3, 4]\"};\n   std::vector<std::string> chunked_input3 = {\"[5, 1, 2, 3, null]\", \"[9, 1, null, 3, 4]\"};\n \n+  // SKIP nulls by default\n+  this->AssertMinMaxIsNull(\"[]\", options);\n+  this->AssertMinMaxIsNull(\"[null, null, null]\", options);\n\nReview comment:\n       So these were returning the types' extreme values.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-19T14:13:49.646+0000",
                    "updated": "2020-06-19T14:13:49.646+0000",
                    "started": "2020-06-19T14:13:49.646+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "448510",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/448511",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#discussion_r442864942\n\n\n\n##########\nFile path: r/R/compute.R\n##########\n@@ -58,13 +58,12 @@ scalar_aggregate <- function(FUN, ..., na.rm = FALSE) {\n     if (FUN %in% c(\"mean\", \"sum\")) {\n       # Arrow sum/mean function always drops NAs so handle that here\n       # https://issues.apache.org/jira/browse/ARROW-9054\n-      return(Scalar$create(NA_integer_, type = a$type))\n+      return(Scalar$create(NA_real_))\n     }\n   }\n \n-  if (inherits(a$type, \"Boolean\")) {\n-    # Bool sum/mean not implemented so cast to int\n-    # https://issues.apache.org/jira/browse/ARROW-9055\n+  if (inherits(a$type, \"Boolean\") && FUN %in% \"minmax\") {\n+    # Bool minmax not implemented so cast to int\n\nReview comment:\n       @nealrichardson just added support for minmax\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-19T14:14:12.602+0000",
                    "updated": "2020-06-19T14:14:12.602+0000",
                    "started": "2020-06-19T14:14:12.602+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "448511",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/448548",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#discussion_r442905880\n\n\n\n##########\nFile path: r/R/compute.R\n##########\n@@ -58,13 +58,12 @@ scalar_aggregate <- function(FUN, ..., na.rm = FALSE) {\n     if (FUN %in% c(\"mean\", \"sum\")) {\n       # Arrow sum/mean function always drops NAs so handle that here\n       # https://issues.apache.org/jira/browse/ARROW-9054\n-      return(Scalar$create(NA_integer_, type = a$type))\n+      return(Scalar$create(NA_real_))\n     }\n   }\n \n-  if (inherits(a$type, \"Boolean\")) {\n-    # Bool sum/mean not implemented so cast to int\n-    # https://issues.apache.org/jira/browse/ARROW-9055\n+  if (inherits(a$type, \"Boolean\") && FUN %in% \"minmax\") {\n+    # Bool minmax not implemented so cast to int\n\nReview comment:\n       \ud83d\udc4d I removed this special case altogether now, thanks.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-19T15:29:18.781+0000",
                    "updated": "2020-06-19T15:29:18.781+0000",
                    "started": "2020-06-19T15:29:18.781+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "448548",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/450464",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#issuecomment-648856803\n\n\n   ping @wesm \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-24T14:30:50.265+0000",
                    "updated": "2020-06-24T14:30:50.265+0000",
                    "started": "2020-06-24T14:30:50.264+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "450464",
                    "issueId": "13309900"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/worklog/450479",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #7478:\nURL: https://github.com/apache/arrow/pull/7478#issuecomment-648879878\n\n\n   Looking\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-24T15:08:35.912+0000",
                    "updated": "2020-06-24T15:08:35.912+0000",
                    "started": "2020-06-24T15:08:35.912+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "450479",
                    "issueId": "13309900"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 19200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@142bbdff[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4395c0d4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@46b3fbbb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2bcd10d9[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71ba679d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@da74317[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@54901f3b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@179896a8[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@353c8d49[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@234df02[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@560971b8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5778007[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 19200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jul 01 01:59:33 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-07-01T01:59:33.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9055/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-06-06T22:08:09.000+0000",
        "updated": "2020-07-01T15:59:30.000+0000",
        "timeoriginalestimate": null,
        "description": "See https://github.com/apache/arrow/pull/7308 (ARROW-6978)",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 19200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add sum/mean kernels for Boolean type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13309900/comment/17149043",
                    "id": "17149043",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 7478\n[https://github.com/apache/arrow/pull/7478]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-07-01T01:59:33.912+0000",
                    "updated": "2020-07-01T01:59:33.912+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0fl54:",
        "customfield_12314139": null
    }
}