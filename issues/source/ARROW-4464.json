{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13213592",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592",
    "key": "ARROW-4464",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ntrinquier",
            "name": "ntrinquier",
            "key": "ntrinquier",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Nicolas Trinquier",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4464/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 14,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/worklog/199649",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ntrinquier commented on pull request #3669: ARROW-4464: [Rust] [DataFusion] Add support for LIMIT\nURL: https://github.com/apache/arrow/pull/3669\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-16T22:17:51.610+0000",
                    "updated": "2019-02-16T22:17:51.610+0000",
                    "started": "2019-02-16T22:17:51.610+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199649",
                    "issueId": "13213592"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/worklog/199650",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3669: ARROW-4464: [Rust] [DataFusion] Add support for LIMIT\nURL: https://github.com/apache/arrow/pull/3669#discussion_r257480190\n \n \n\n ##########\n File path: rust/datafusion/src/execution/limit.rs\n ##########\n @@ -0,0 +1,205 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Execution of a limit (predicate)\n+\n+use std::cell::RefCell;\n+use std::rc::Rc;\n+use std::sync::Arc;\n+\n+use arrow::array::*;\n+use arrow::datatypes::{DataType, Schema};\n+use arrow::record_batch::RecordBatch;\n+\n+use super::error::{ExecutionError, Result};\n+use super::expression::RuntimeExpr;\n+use super::relation::Relation;\n+\n+pub struct LimitRelation {\n+    input: Rc<RefCell<Relation>>,\n+    expr: RuntimeExpr,\n+    schema: Arc<Schema>,\n+    num_consumed_rows: i64,\n+}\n+\n+impl LimitRelation {\n+    pub fn new(\n+        input: Rc<RefCell<Relation>>,\n+        expr: RuntimeExpr,\n+        schema: Arc<Schema>,\n+    ) -> Self {\n+        Self {\n+            input,\n+            expr,\n+            schema,\n+            num_consumed_rows: 0,\n+        }\n+    }\n+}\n+\n+impl Relation for LimitRelation {\n+    fn next(&mut self) -> Result<Option<RecordBatch>> {\n+        match self.input.borrow_mut().next()? {\n+            Some(batch) => {\n+                match self.expr.get_func()(&batch)?\n \n Review comment:\n   no need to evaluate the expression, use `limit` field from struct\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-16T22:35:20.635+0000",
                    "updated": "2019-02-16T22:35:20.635+0000",
                    "started": "2019-02-16T22:35:20.634+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199650",
                    "issueId": "13213592"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/worklog/199651",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3669: ARROW-4464: [Rust] [DataFusion] Add support for LIMIT\nURL: https://github.com/apache/arrow/pull/3669#discussion_r257480215\n \n \n\n ##########\n File path: rust/datafusion/src/execution/limit.rs\n ##########\n @@ -0,0 +1,205 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Execution of a limit (predicate)\n+\n+use std::cell::RefCell;\n+use std::rc::Rc;\n+use std::sync::Arc;\n+\n+use arrow::array::*;\n+use arrow::datatypes::{DataType, Schema};\n+use arrow::record_batch::RecordBatch;\n+\n+use super::error::{ExecutionError, Result};\n+use super::expression::RuntimeExpr;\n+use super::relation::Relation;\n+\n+pub struct LimitRelation {\n+    input: Rc<RefCell<Relation>>,\n+    expr: RuntimeExpr,\n+    schema: Arc<Schema>,\n+    num_consumed_rows: i64,\n+}\n+\n+impl LimitRelation {\n+    pub fn new(\n+        input: Rc<RefCell<Relation>>,\n+        expr: RuntimeExpr,\n+        schema: Arc<Schema>,\n+    ) -> Self {\n+        Self {\n+            input,\n+            expr,\n+            schema,\n+            num_consumed_rows: 0,\n+        }\n+    }\n+}\n+\n+impl Relation for LimitRelation {\n+    fn next(&mut self) -> Result<Option<RecordBatch>> {\n+        match self.input.borrow_mut().next()? {\n+            Some(batch) => {\n+                match self.expr.get_func()(&batch)?\n+                    .as_any()\n+                    .downcast_ref::<Int64Array>() {\n+                    Some(limits) => {\n+                        if limits.len() == 0 {\n+                            return Ok(None)\n+                        }\n+                        let limit_value: i64 = limits.value(0);\n+                        let capacity = limit_value - self.num_consumed_rows;\n+\n+                        if capacity <= 0 {\n+                            return Ok(None)\n+                        }\n+\n+                        let num_batch_rows = batch.num_rows() as i64;\n+                        if num_batch_rows >= capacity {\n+                            let num_rows_to_read = limit_value - self.num_consumed_rows;\n+                            let limited_columns: Result<Vec<ArrayRef>> = (0..batch\n+                                .num_columns())\n+                                .map(|i| filter(batch.column(i).as_ref(), num_rows_to_read))\n+                                .collect();\n+\n+                            let filtered_batch: RecordBatch = RecordBatch::new(\n+                                Arc::new(Schema::empty()),\n+                                limited_columns?,\n+                            );\n+                            self.num_consumed_rows += capacity;\n+\n+                            Ok(Some(filtered_batch))\n+                        } else {\n+                            self.num_consumed_rows += num_batch_rows;\n+                            Ok(Some(batch))\n+                        }\n+                    }\n+                    None => Err(ExecutionError::ExecutionError(\n+                        \"Limit expression could not be evaluated\".to_string(),\n+                    )),\n+                }\n+            }\n+            None => Ok(None)\n+        }\n+    }\n+\n+    fn schema(&self) -> &Arc<Schema> {\n+        &self.schema\n+    }\n+}\n+\n+//TODO: move into Arrow array_ops\n+fn filter(a: &Array, num_rows_to_read: i64) -> Result<ArrayRef> {\n \n Review comment:\n   rename `filter` to `limit`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-16T22:35:20.642+0000",
                    "updated": "2019-02-16T22:35:20.642+0000",
                    "started": "2019-02-16T22:35:20.640+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199651",
                    "issueId": "13213592"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/worklog/199652",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3669: ARROW-4464: [Rust] [DataFusion] Add support for LIMIT\nURL: https://github.com/apache/arrow/pull/3669#discussion_r257480177\n \n \n\n ##########\n File path: rust/datafusion/src/execution/limit.rs\n ##########\n @@ -0,0 +1,205 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Execution of a limit (predicate)\n+\n+use std::cell::RefCell;\n+use std::rc::Rc;\n+use std::sync::Arc;\n+\n+use arrow::array::*;\n+use arrow::datatypes::{DataType, Schema};\n+use arrow::record_batch::RecordBatch;\n+\n+use super::error::{ExecutionError, Result};\n+use super::expression::RuntimeExpr;\n+use super::relation::Relation;\n+\n+pub struct LimitRelation {\n+    input: Rc<RefCell<Relation>>,\n+    expr: RuntimeExpr,\n+    schema: Arc<Schema>,\n+    num_consumed_rows: i64,\n \n Review comment:\n   `num_consumed_rows` should be `usize`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-16T22:35:20.704+0000",
                    "updated": "2019-02-16T22:35:20.704+0000",
                    "started": "2019-02-16T22:35:20.703+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199652",
                    "issueId": "13213592"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/worklog/199653",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3669: ARROW-4464: [Rust] [DataFusion] Add support for LIMIT\nURL: https://github.com/apache/arrow/pull/3669#discussion_r257480154\n \n \n\n ##########\n File path: rust/datafusion/src/execution/context.rs\n ##########\n @@ -160,6 +161,21 @@ impl ExecutionContext {\n \n                 Ok(Rc::new(RefCell::new(rel)))\n             }\n+            LogicalPlan::Limit {\n+                ref expr,\n+                ref input,\n+                ..\n+            } => {\n+                let input_rel = self.execute(input)?;\n+\n+                let input_schema = input_rel.as_ref().borrow().schema().clone();\n+\n+                let compiled_expr = compile_scalar_expr(&self, expr, &input_schema)?;\n \n Review comment:\n   The LIMIT expression will be a literal e.g. `LIMIT 10` so I don't think we need to compile and evaluate the expression but just use pattern matching to extract the number.\r\n   \r\n   ```\r\n   match expr {\r\n           &Expr::Literal(ref value) => /* extract value */,\r\n           _ => /* error - only literals are supported */\r\n   }\r\n   ```\r\n   ``\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-16T22:35:20.704+0000",
                    "updated": "2019-02-16T22:35:20.704+0000",
                    "started": "2019-02-16T22:35:20.704+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199653",
                    "issueId": "13213592"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/worklog/199654",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3669: ARROW-4464: [Rust] [DataFusion] Add support for LIMIT\nURL: https://github.com/apache/arrow/pull/3669#discussion_r257480163\n \n \n\n ##########\n File path: rust/datafusion/src/execution/limit.rs\n ##########\n @@ -0,0 +1,205 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Execution of a limit (predicate)\n+\n+use std::cell::RefCell;\n+use std::rc::Rc;\n+use std::sync::Arc;\n+\n+use arrow::array::*;\n+use arrow::datatypes::{DataType, Schema};\n+use arrow::record_batch::RecordBatch;\n+\n+use super::error::{ExecutionError, Result};\n+use super::expression::RuntimeExpr;\n+use super::relation::Relation;\n+\n+pub struct LimitRelation {\n+    input: Rc<RefCell<Relation>>,\n+    expr: RuntimeExpr,\n+    schema: Arc<Schema>,\n+    num_consumed_rows: i64,\n \n Review comment:\n   add `limit: usize`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-16T22:35:20.710+0000",
                    "updated": "2019-02-16T22:35:20.710+0000",
                    "started": "2019-02-16T22:35:20.709+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199654",
                    "issueId": "13213592"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/worklog/199655",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ntrinquier commented on issue #3669: ARROW-4464: [Rust] [DataFusion] Add support for LIMIT\nURL: https://github.com/apache/arrow/pull/3669#issuecomment-464399478\n \n \n   Thanks a lot @andygrove\r\n   \r\n   I extracted the limit and cast it with `as`, I don't know if there is a safer alternative though.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-16T23:30:17.003+0000",
                    "updated": "2019-02-16T23:30:17.003+0000",
                    "started": "2019-02-16T23:30:17.002+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199655",
                    "issueId": "13213592"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/worklog/199742",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3669: ARROW-4464: [Rust] [DataFusion] Add support for LIMIT\nURL: https://github.com/apache/arrow/pull/3669#issuecomment-464444812\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3669?src=pr&el=h1) Report\n   > Merging [#3669](https://codecov.io/gh/apache/arrow/pull/3669?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/a374c3c3af0a2524c51a7a1f53d6c838f7806de7?src=pr&el=desc) will **decrease** coverage by `0.08%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3669/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3669?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3669      +/-   ##\n   ==========================================\n   - Coverage   87.85%   87.76%   -0.09%     \n   ==========================================\n     Files         689      689              \n     Lines       84012    84023      +11     \n     Branches     1081     1081              \n   ==========================================\n   - Hits        73805    73745      -60     \n   - Misses      10094    10163      +69     \n   - Partials      113      115       +2\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3669?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/math/int64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3669/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hdngyX2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3669/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/float64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3669/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X2F2eDJfYW1kNjQuZ28=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3669/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYXZ4Ml9hbWQ2NC5nbw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/float64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3669/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X2FtZDY0Lmdv) | `33.33% <0%> (-33.34%)` | :arrow_down: |\n   | [go/arrow/math/int64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3669/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hbWQ2NC5nbw==) | `33.33% <0%> (-33.34%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3669/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | `33.33% <0%> (-33.34%)` | :arrow_down: |\n   | [go/arrow/math/math\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3669/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9tYXRoX2FtZDY0Lmdv) | `31.57% <0%> (-31.58%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3669/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hbWQ2NC5nbw==) | `28.57% <0%> (-28.58%)` | :arrow_down: |\n   | [js/src/ipc/metadata/json.ts](https://codecov.io/gh/apache/arrow/pull/3669/diff?src=pr&el=tree#diff-anMvc3JjL2lwYy9tZXRhZGF0YS9qc29uLnRz) | `92.39% <0%> (-4.35%)` | :arrow_down: |\n   | ... and [15 more](https://codecov.io/gh/apache/arrow/pull/3669/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3669?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3669?src=pr&el=footer). Last update [a374c3c...e93df93](https://codecov.io/gh/apache/arrow/pull/3669?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T11:26:54.329+0000",
                    "updated": "2019-02-17T11:26:54.329+0000",
                    "started": "2019-02-17T11:26:54.328+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199742",
                    "issueId": "13213592"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/worklog/199804",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3669: ARROW-4464: [Rust] [DataFusion] Add support for LIMIT\nURL: https://github.com/apache/arrow/pull/3669#discussion_r257518861\n \n \n\n ##########\n File path: rust/datafusion/src/execution/limit.rs\n ##########\n @@ -0,0 +1,182 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Execution of a limit (predicate)\n+\n+use std::cell::RefCell;\n+use std::rc::Rc;\n+use std::sync::Arc;\n+\n+use arrow::array::*;\n+use arrow::datatypes::{DataType, Schema};\n+use arrow::record_batch::RecordBatch;\n+\n+use super::error::{ExecutionError, Result};\n+use super::relation::Relation;\n+\n+pub struct LimitRelation {\n+    input: Rc<RefCell<Relation>>,\n+    schema: Arc<Schema>,\n+    limit: usize,\n+    num_consumed_rows: usize,\n+}\n+\n+impl LimitRelation {\n+    pub fn new(input: Rc<RefCell<Relation>>, limit: usize, schema: Arc<Schema>) -> Self {\n+        Self {\n+            input,\n+            schema,\n+            limit,\n+            num_consumed_rows: 0,\n+        }\n+    }\n+}\n+\n+impl Relation for LimitRelation {\n+    fn next(&mut self) -> Result<Option<RecordBatch>> {\n+        match self.input.borrow_mut().next()? {\n+            Some(batch) => {\n+                let capacity = self.limit - self.num_consumed_rows;\n+\n+                if capacity <= 0 {\n+                    return Ok(None);\n+                }\n+\n+                if batch.num_rows() >= capacity {\n+                    let limited_columns: Result<Vec<ArrayRef>> = (0..batch.num_columns())\n+                        .map(|i| limit(batch.column(i).as_ref(), capacity))\n+                        .collect();\n+\n+                    let limited_batch: RecordBatch =\n+                        RecordBatch::new(Arc::new(Schema::empty()), limited_columns?);\n \n Review comment:\n   The new batch needs the same schema as the original, not an empty schema\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T19:23:25.209+0000",
                    "updated": "2019-02-17T19:23:25.209+0000",
                    "started": "2019-02-17T19:23:25.208+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199804",
                    "issueId": "13213592"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/worklog/199805",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3669: ARROW-4464: [Rust] [DataFusion] Add support for LIMIT\nURL: https://github.com/apache/arrow/pull/3669#discussion_r257519007\n \n \n\n ##########\n File path: rust/datafusion/src/execution/limit.rs\n ##########\n @@ -0,0 +1,182 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Execution of a limit (predicate)\n+\n+use std::cell::RefCell;\n+use std::rc::Rc;\n+use std::sync::Arc;\n+\n+use arrow::array::*;\n+use arrow::datatypes::{DataType, Schema};\n+use arrow::record_batch::RecordBatch;\n+\n+use super::error::{ExecutionError, Result};\n+use super::relation::Relation;\n+\n+pub struct LimitRelation {\n+    input: Rc<RefCell<Relation>>,\n+    schema: Arc<Schema>,\n+    limit: usize,\n+    num_consumed_rows: usize,\n+}\n+\n+impl LimitRelation {\n+    pub fn new(input: Rc<RefCell<Relation>>, limit: usize, schema: Arc<Schema>) -> Self {\n+        Self {\n+            input,\n+            schema,\n+            limit,\n+            num_consumed_rows: 0,\n+        }\n+    }\n+}\n+\n+impl Relation for LimitRelation {\n+    fn next(&mut self) -> Result<Option<RecordBatch>> {\n+        match self.input.borrow_mut().next()? {\n+            Some(batch) => {\n+                let capacity = self.limit - self.num_consumed_rows;\n+\n+                if capacity <= 0 {\n+                    return Ok(None);\n+                }\n+\n+                if batch.num_rows() >= capacity {\n+                    let limited_columns: Result<Vec<ArrayRef>> = (0..batch.num_columns())\n+                        .map(|i| limit(batch.column(i).as_ref(), capacity))\n+                        .collect();\n+\n+                    let limited_batch: RecordBatch =\n+                        RecordBatch::new(Arc::new(Schema::empty()), limited_columns?);\n \n Review comment:\n   Once this is fixed, I'm ready to approve. Thanks @ntrinquier !\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T19:23:49.396+0000",
                    "updated": "2019-02-17T19:23:49.396+0000",
                    "started": "2019-02-17T19:23:49.394+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199805",
                    "issueId": "13213592"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/worklog/199809",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ntrinquier commented on pull request #3669: ARROW-4464: [Rust] [DataFusion] Add support for LIMIT\nURL: https://github.com/apache/arrow/pull/3669#discussion_r257519653\n \n \n\n ##########\n File path: rust/datafusion/src/execution/limit.rs\n ##########\n @@ -0,0 +1,182 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Execution of a limit (predicate)\n+\n+use std::cell::RefCell;\n+use std::rc::Rc;\n+use std::sync::Arc;\n+\n+use arrow::array::*;\n+use arrow::datatypes::{DataType, Schema};\n+use arrow::record_batch::RecordBatch;\n+\n+use super::error::{ExecutionError, Result};\n+use super::relation::Relation;\n+\n+pub struct LimitRelation {\n+    input: Rc<RefCell<Relation>>,\n+    schema: Arc<Schema>,\n+    limit: usize,\n+    num_consumed_rows: usize,\n+}\n+\n+impl LimitRelation {\n+    pub fn new(input: Rc<RefCell<Relation>>, limit: usize, schema: Arc<Schema>) -> Self {\n+        Self {\n+            input,\n+            schema,\n+            limit,\n+            num_consumed_rows: 0,\n+        }\n+    }\n+}\n+\n+impl Relation for LimitRelation {\n+    fn next(&mut self) -> Result<Option<RecordBatch>> {\n+        match self.input.borrow_mut().next()? {\n+            Some(batch) => {\n+                let capacity = self.limit - self.num_consumed_rows;\n+\n+                if capacity <= 0 {\n+                    return Ok(None);\n+                }\n+\n+                if batch.num_rows() >= capacity {\n+                    let limited_columns: Result<Vec<ArrayRef>> = (0..batch.num_columns())\n+                        .map(|i| limit(batch.column(i).as_ref(), capacity))\n+                        .collect();\n+\n+                    let limited_batch: RecordBatch =\n+                        RecordBatch::new(Arc::new(Schema::empty()), limited_columns?);\n \n Review comment:\n   Indeed that makes more sense. [filter](https://github.com/apache/arrow/blob/125d1f190e1b570192b9883f0081d0a438de1c04/rust/datafusion/src/execution/filter.rs#L68) is also creating the new batch with an empty schema, so I guess this would have to be changed there too?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T19:41:18.847+0000",
                    "updated": "2019-02-17T19:41:18.847+0000",
                    "started": "2019-02-17T19:41:18.846+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199809",
                    "issueId": "13213592"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/worklog/199811",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3669: ARROW-4464: [Rust] [DataFusion] Add support for LIMIT\nURL: https://github.com/apache/arrow/pull/3669#discussion_r257519946\n \n \n\n ##########\n File path: rust/datafusion/src/execution/limit.rs\n ##########\n @@ -0,0 +1,182 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Execution of a limit (predicate)\n+\n+use std::cell::RefCell;\n+use std::rc::Rc;\n+use std::sync::Arc;\n+\n+use arrow::array::*;\n+use arrow::datatypes::{DataType, Schema};\n+use arrow::record_batch::RecordBatch;\n+\n+use super::error::{ExecutionError, Result};\n+use super::relation::Relation;\n+\n+pub struct LimitRelation {\n+    input: Rc<RefCell<Relation>>,\n+    schema: Arc<Schema>,\n+    limit: usize,\n+    num_consumed_rows: usize,\n+}\n+\n+impl LimitRelation {\n+    pub fn new(input: Rc<RefCell<Relation>>, limit: usize, schema: Arc<Schema>) -> Self {\n+        Self {\n+            input,\n+            schema,\n+            limit,\n+            num_consumed_rows: 0,\n+        }\n+    }\n+}\n+\n+impl Relation for LimitRelation {\n+    fn next(&mut self) -> Result<Option<RecordBatch>> {\n+        match self.input.borrow_mut().next()? {\n+            Some(batch) => {\n+                let capacity = self.limit - self.num_consumed_rows;\n+\n+                if capacity <= 0 {\n+                    return Ok(None);\n+                }\n+\n+                if batch.num_rows() >= capacity {\n+                    let limited_columns: Result<Vec<ArrayRef>> = (0..batch.num_columns())\n+                        .map(|i| limit(batch.column(i).as_ref(), capacity))\n+                        .collect();\n+\n+                    let limited_batch: RecordBatch =\n+                        RecordBatch::new(Arc::new(Schema::empty()), limited_columns?);\n \n Review comment:\n   oops, good catch, yes I'll file a bug for that\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T19:47:03.543+0000",
                    "updated": "2019-02-17T19:47:03.543+0000",
                    "started": "2019-02-17T19:47:03.543+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199811",
                    "issueId": "13213592"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/worklog/199896",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #3669: ARROW-4464: [Rust] [DataFusion] Add support for LIMIT\nURL: https://github.com/apache/arrow/pull/3669\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-17T23:15:13.569+0000",
                    "updated": "2019-02-17T23:15:13.569+0000",
                    "started": "2019-02-17T23:15:13.568+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199896",
                    "issueId": "13213592"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/worklog/206043",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ntrinquier commented on pull request #3669: ARROW-4464: [Rust] [DataFusion] Add support for LIMIT\nURL: https://github.com/apache/arrow/pull/3669#discussion_r261376440\n \n \n\n ##########\n File path: rust/datafusion/src/execution/limit.rs\n ##########\n @@ -0,0 +1,182 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Execution of a limit (predicate)\n+\n+use std::cell::RefCell;\n+use std::rc::Rc;\n+use std::sync::Arc;\n+\n+use arrow::array::*;\n+use arrow::datatypes::{DataType, Schema};\n+use arrow::record_batch::RecordBatch;\n+\n+use super::error::{ExecutionError, Result};\n+use super::relation::Relation;\n+\n+pub struct LimitRelation {\n+    input: Rc<RefCell<Relation>>,\n+    schema: Arc<Schema>,\n+    limit: usize,\n+    num_consumed_rows: usize,\n+}\n+\n+impl LimitRelation {\n+    pub fn new(input: Rc<RefCell<Relation>>, limit: usize, schema: Arc<Schema>) -> Self {\n+        Self {\n+            input,\n+            schema,\n+            limit,\n+            num_consumed_rows: 0,\n+        }\n+    }\n+}\n+\n+impl Relation for LimitRelation {\n+    fn next(&mut self) -> Result<Option<RecordBatch>> {\n+        match self.input.borrow_mut().next()? {\n+            Some(batch) => {\n+                let capacity = self.limit - self.num_consumed_rows;\n+\n+                if capacity <= 0 {\n+                    return Ok(None);\n+                }\n+\n+                if batch.num_rows() >= capacity {\n+                    let limited_columns: Result<Vec<ArrayRef>> = (0..batch.num_columns())\n+                        .map(|i| limit(batch.column(i).as_ref(), capacity))\n+                        .collect();\n+\n+                    let limited_batch: RecordBatch =\n+                        RecordBatch::new(Arc::new(Schema::empty()), limited_columns?);\n \n Review comment:\n   @andygrove I created it: https://issues.apache.org/jira/browse/ARROW-4721\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-28T20:47:51.383+0000",
                    "updated": "2019-02-28T20:47:51.383+0000",
                    "started": "2019-02-28T20:47:51.382+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "206043",
                    "issueId": "13213592"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6ee87eb3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a103db6[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2d8da60c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@66bbc386[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2d334218[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@478ebdcd[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f3def6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3fec8a7d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@8f83c1a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3a2a981d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@23b7f5c0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@78d33ca9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Feb 17 23:15:06 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-02-17T23:15:06.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4464/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2019-02-03T17:22:25.000+0000",
        "updated": "2019-02-28T20:47:51.000+0000",
        "timeoriginalestimate": null,
        "description": "As a user, I would like to be able to specify a LIMIT clause on my SQL queries.\r\n\r\nWork involved:\r\n * Add Limit to LogicalPlan enum\r\n * Write query planner code to translate SQL AST to Limit (SQL parser that we use already supports LIMIT)\r\n * Implement LimitRelation (look at filter.rs as a guide since it is quite similar)",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [DataFusion] Add support for LIMIT",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/comment/16766517",
                    "id": "16766517",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ntrinquier",
                        "name": "ntrinquier",
                        "key": "ntrinquier",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Nicolas Trinquier",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hey [~andygrove], I'd like to give this a try. Can I, or has someone already started to work on it?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ntrinquier",
                        "name": "ntrinquier",
                        "key": "ntrinquier",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Nicolas Trinquier",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-02-12T21:51:00.134+0000",
                    "updated": "2019-02-12T21:51:00.134+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/comment/16766563",
                    "id": "16766563",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Awesome! We should be using JIRA to track who is working on what so ideally please assign to yourself and mark as \"In Progress\".",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2019-02-12T23:10:58.981+0000",
                    "updated": "2019-02-12T23:10:58.981+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/comment/16766585",
                    "id": "16766585",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~andygrove] to be assigned an issue, contributors must be added to the Contributor role in JIRA. I just made you an Administrator since you're a PMC member now so you can add him.\r\n\r\nProjects (see the wheel in the top right) \r\n--> Apache Arrow \r\n--> Users and Roles (left side) \r\n--> Add users to role\r\n--> Type contributor's name\r\n--> Select Contributor role\r\n\r\nIf you accidentally add someone to Admin be sure to fix =) ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-02-12T23:45:24.194+0000",
                    "updated": "2019-02-12T23:45:24.194+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/comment/16767825",
                    "id": "16767825",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Thanks [~wesmckinn] ... OK [~ntrinquier] I assigned this to you, let me know if you have questions",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2019-02-14T02:44:31.435+0000",
                    "updated": "2019-02-14T02:44:31.435+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/comment/16769811",
                    "id": "16769811",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ntrinquier",
                        "name": "ntrinquier",
                        "key": "ntrinquier",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Nicolas Trinquier",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Thank you [~andygrove]. I do have some questions!\r\n\r\nI have a working branch [here|https://github.com/apache/arrow/compare/master...ntrinquier:arrow-4464?expand=1], but there's a couple of things I couldn't figure out:\r\n * batch.num_rows() is an usize but when evaluating the limit I get a PrimitiveType. Right now I hard-coded i64 and I am not sure how to safely cast.\r\n * I'm evaluating the limit expression multiple times but I should only need to do that once.\r\n * (Also as a note to myself there's this big filter function that I copied and adapted from Filter and that needs refactoring)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ntrinquier",
                        "name": "ntrinquier",
                        "key": "ntrinquier",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Nicolas Trinquier",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-02-15T22:37:10.147+0000",
                    "updated": "2019-02-15T22:37:10.147+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/comment/16770241",
                    "id": "16770241",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "[~ntrinquier] please go ahead and create the PR so that I can add comments there. Please prefix the PR name with \"ARROW-4464: [Rust] \" so that it gets linked to this JIRA.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2019-02-16T22:15:29.718+0000",
                    "updated": "2019-02-16T22:15:29.718+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213592/comment/16770681",
                    "id": "16770681",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Issue resolved by pull request 3669\n[https://github.com/apache/arrow/pull/3669]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2019-02-17T23:15:06.140+0000",
                    "updated": "2019-02-17T23:15:06.140+0000"
                }
            ],
            "maxResults": 7,
            "total": 7,
            "startAt": 0
        },
        "customfield_12311820": "0|yi0m68:",
        "customfield_12314139": null
    }
}