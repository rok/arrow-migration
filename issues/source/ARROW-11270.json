{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13352694",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694",
    "key": "ARROW-11270",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tyrelr",
            "name": "tyrelr",
            "key": "tyrelr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Tyrel Rink",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tyrelr",
            "name": "tyrelr",
            "key": "tyrelr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Tyrel Rink",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tyrelr",
            "name": "tyrelr",
            "key": "tyrelr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Tyrel Rink",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 23400,
            "total": 23400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 23400,
            "total": 23400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11270/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 39,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/536852",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr opened a new pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215\n\n\n   Using an approach similar to ARROW-10989, migrate typed array API's to use slices where they can.\r\n   \r\n   This impacts the API of GenericBinaryArray<>,  GenericListArray<>,  GenericStringArray<>\r\n   \r\n   This also enables bounds checking in every value() function on each of the above arrays, as well as PrimitiveArray<>.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-16T19:17:03.920+0000",
                    "updated": "2021-01-16T19:17:03.920+0000",
                    "started": "2021-01-16T19:17:03.920+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "536852",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/536853",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#issuecomment-761618600\n\n\n   https://issues.apache.org/jira/browse/ARROW-11270\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-16T19:17:27.568+0000",
                    "updated": "2021-01-16T19:17:27.568+0000",
                    "started": "2021-01-16T19:17:27.568+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "536853",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/536855",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#issuecomment-761621256\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=h1) Report\n   > Merging [#9215](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=desc) (47086b8) into [master](https://codecov.io/gh/apache/arrow/commit/1393188e1aa1b3d59993ce7d4ade7f7ac8570959?el=desc) (1393188) will **increase** coverage by `0.03%`.\n   > The diff coverage is `100.00%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9215/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9215      +/-   ##\n   ==========================================\n   + Coverage   81.61%   81.64%   +0.03%     \n   ==========================================\n     Files         215      215              \n     Lines       51867    51950      +83     \n   ==========================================\n   + Hits        42329    42415      +86     \n   + Misses       9538     9535       -3     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/array/array\\_binary.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfYmluYXJ5LnJz) | `91.75% <100.00%> (+0.76%)` | :arrow_up: |\n   | [rust/arrow/src/array/array\\_list.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfbGlzdC5ycw==) | `93.90% <100.00%> (+0.80%)` | :arrow_up: |\n   | [rust/arrow/src/array/array\\_primitive.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfcHJpbWl0aXZlLnJz) | `92.89% <100.00%> (+0.31%)` | :arrow_up: |\n   | [rust/arrow/src/array/array\\_string.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfc3RyaW5nLnJz) | `90.62% <100.00%> (+1.73%)` | :arrow_up: |\n   | [rust/arrow/src/array/builder.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYnVpbGRlci5ycw==) | `85.89% <100.00%> (\u00f8)` | |\n   | [rust/arrow/src/compute/kernels/cast.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2Nhc3QucnM=) | `96.97% <100.00%> (-0.03%)` | :arrow_down: |\n   | [rust/arrow/src/compute/kernels/limit.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2xpbWl0LnJz) | `100.00% <100.00%> (\u00f8)` | |\n   | [rust/arrow/src/compute/util.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS91dGlsLnJz) | `98.93% <100.00%> (\u00f8)` | |\n   | [rust/parquet/src/encodings/encoding.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9lbmNvZGluZ3MvZW5jb2RpbmcucnM=) | `94.86% <0.00%> (-0.20%)` | :arrow_down: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=footer). Last update [eaa7b7a...47086b8](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-16T19:39:17.467+0000",
                    "updated": "2021-01-16T19:39:17.467+0000",
                    "started": "2021-01-16T19:39:17.467+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "536855",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/537051",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#issuecomment-761773323\n\n\n   I apologize for the delay in merging Rust PRs -- the 3.0 release is being finalized now and are planning to minimize entropy by postponing merging  changes not critical for the release until the process was complete. I hope the process is complete in the next few days. There is more [discussion](https://lists.apache.org/list.html?dev@arrow.apache.org) in the mailing list \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-17T11:13:39.343+0000",
                    "updated": "2021-01-17T11:13:39.343+0000",
                    "started": "2021-01-17T11:13:39.342+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "537051",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/538362",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#issuecomment-763554846\n\n\n   @jorgecarleitao  do you think this PR is ready to merge? Does it need any additional review or rebasing?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-20T11:57:27.220+0000",
                    "updated": "2021-01-20T11:57:27.220+0000",
                    "started": "2021-01-20T11:57:27.219+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "538362",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/538364",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#issuecomment-763555725\n\n\n   Ready to merge. Note that it has some backward incompatible changes, so PRs on top need to be merged carefully.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-20T11:58:57.586+0000",
                    "updated": "2021-01-20T11:58:57.586+0000",
                    "started": "2021-01-20T11:58:57.585+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "538364",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/538376",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#issuecomment-763561370\n\n\n   Roger -- I'll plan to merge it later today (after the current round of merges have gotten through CI)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-20T12:09:14.826+0000",
                    "updated": "2021-01-20T12:09:14.826+0000",
                    "started": "2021-01-20T12:09:14.826+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "538376",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/538799",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#issuecomment-764164139\n\n\n   Rebased.  But I didn't hit the merge conflicts during...  I can see that a number of tests were swapped to use Buffer::from_slice_ref()... so I'll add another commit to switch to that function just to be safe.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-21T01:34:57.977+0000",
                    "updated": "2021-01-21T01:34:57.977+0000",
                    "started": "2021-01-21T01:34:57.977+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "538799",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/538808",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#issuecomment-761621256\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=h1) Report\n   > Merging [#9215](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=desc) (5cd8075) into [master](https://codecov.io/gh/apache/arrow/commit/a0e12445cc8689befe40c20e2fac6e6df252bef6?el=desc) (a0e1244) will **increase** coverage by `0.03%`.\n   > The diff coverage is `100.00%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9215/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9215      +/-   ##\n   ==========================================\n   + Coverage   81.64%   81.68%   +0.03%     \n   ==========================================\n     Files         215      215              \n     Lines       52489    52572      +83     \n   ==========================================\n   + Hits        42857    42945      +88     \n   + Misses       9632     9627       -5     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/array/array\\_binary.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfYmluYXJ5LnJz) | `91.75% <100.00%> (+0.76%)` | :arrow_up: |\n   | [rust/arrow/src/array/array\\_list.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfbGlzdC5ycw==) | `84.84% <100.00%> (+1.62%)` | :arrow_up: |\n   | [rust/arrow/src/array/array\\_primitive.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfcHJpbWl0aXZlLnJz) | `94.76% <100.00%> (+0.23%)` | :arrow_up: |\n   | [rust/arrow/src/array/array\\_string.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfc3RyaW5nLnJz) | `91.66% <100.00%> (+1.66%)` | :arrow_up: |\n   | [rust/arrow/src/array/builder.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYnVpbGRlci5ycw==) | `85.51% <100.00%> (\u00f8)` | |\n   | [rust/arrow/src/compute/kernels/cast.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2Nhc3QucnM=) | `96.96% <100.00%> (-0.03%)` | :arrow_down: |\n   | [rust/arrow/src/compute/kernels/limit.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2xpbWl0LnJz) | `100.00% <100.00%> (\u00f8)` | |\n   | [rust/arrow/src/compute/util.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS91dGlsLnJz) | `98.92% <100.00%> (\u00f8)` | |\n   | [rust/parquet/src/encodings/encoding.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9lbmNvZGluZ3MvZW5jb2RpbmcucnM=) | `95.43% <0.00%> (+0.19%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=footer). Last update [a0e1244...9ca08d7](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-21T01:55:51.591+0000",
                    "updated": "2021-01-21T01:55:51.591+0000",
                    "started": "2021-01-21T01:55:51.590+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "538808",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/538882",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#discussion_r561618199\n\n\n\n##########\nFile path: rust/arrow/src/array/array_primitive.rs\n##########\n@@ -86,13 +86,9 @@ impl<T: ArrowPrimitiveType> PrimitiveArray<T> {\n     }\n \n     /// Returns the primitive value at index `i`.\n-    ///\n-    /// Note this doesn't do any bound checking, for performance reason.\n-    /// # Safety\n-    /// caller must ensure that the passed in offset is less than the array len()\n+    #[inline]\n     pub fn value(&self, i: usize) -> T::Native {\n-        let offset = i + self.offset();\n-        unsafe { *self.raw_values.as_ptr().add(offset) }\n+        self.values()[i]\n\nReview comment:\n       Thinking about it, I am not sure we want this: this will have severe implications to almost all uses of `value()`. Could you run the benches before and after this PR?\r\n   \r\n   My suggestion is that we mark this method as `unsafe`, so that it is clear that people need to be conscious about it. Since this will impact a large part of our code base (and likely others), I suggest that we do this change on a separate PR\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-21T05:49:56.728+0000",
                    "updated": "2021-01-21T05:49:56.728+0000",
                    "started": "2021-01-21T05:49:56.728+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "538882",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/538883",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#discussion_r561618199\n\n\n\n##########\nFile path: rust/arrow/src/array/array_primitive.rs\n##########\n@@ -86,13 +86,9 @@ impl<T: ArrowPrimitiveType> PrimitiveArray<T> {\n     }\n \n     /// Returns the primitive value at index `i`.\n-    ///\n-    /// Note this doesn't do any bound checking, for performance reason.\n-    /// # Safety\n-    /// caller must ensure that the passed in offset is less than the array len()\n+    #[inline]\n     pub fn value(&self, i: usize) -> T::Native {\n-        let offset = i + self.offset();\n-        unsafe { *self.raw_values.as_ptr().add(offset) }\n+        self.values()[i]\n\nReview comment:\n       Thinking about it, I am not sure we want this: this will have severe implications to almost all uses of `value()`. Could you run the benches before and after this PR?\r\n   \r\n   My suggestion is that we mark this method as `unsafe`, so that it is clear that people need to be conscious about it. Since this will impact a large part of our code base (and likely others), I suggest that we do this change on a separate PR.\r\n   \r\n   I think that we would like to instruct users of this API to switch to `values()`. This change will not trigger that change (as the code continues to run), but will have an amazing performance implication.\r\n   \r\n   Think \r\n   \r\n   ```rust\r\n   for i in 0..array.len() {\r\n       if array.value(i) > 2 {\r\n           // do x\r\n       };\r\n   }\r\n   ```\r\n   this loop will suffer a lot from this change.\r\n   \r\n   we would like users to change it to \r\n   \r\n   ```\r\n   array.values().for_each(|value| {\r\n       if value > 2 {\r\n           // do x\r\n       };\r\n   });\r\n   ```\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-21T05:53:40.675+0000",
                    "updated": "2021-01-21T05:53:40.675+0000",
                    "started": "2021-01-21T05:53:40.675+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "538883",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/538884",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#discussion_r561618199\n\n\n\n##########\nFile path: rust/arrow/src/array/array_primitive.rs\n##########\n@@ -86,13 +86,9 @@ impl<T: ArrowPrimitiveType> PrimitiveArray<T> {\n     }\n \n     /// Returns the primitive value at index `i`.\n-    ///\n-    /// Note this doesn't do any bound checking, for performance reason.\n-    /// # Safety\n-    /// caller must ensure that the passed in offset is less than the array len()\n+    #[inline]\n     pub fn value(&self, i: usize) -> T::Native {\n-        let offset = i + self.offset();\n-        unsafe { *self.raw_values.as_ptr().add(offset) }\n+        self.values()[i]\n\nReview comment:\n       Thinking about it, I am not sure we want this: this will have severe implications to almost all uses of `value()`. Could you run the benches before and after this PR?\r\n   \r\n   My suggestion is that we mark this method as `unsafe`, so that it is clear that people need to be conscious about it. Since this will impact a large part of our code base (and likely others), I suggest that we do this change on a separate PR.\r\n   \r\n   I think that we would like to instruct users of this API to switch to `values()`. This change will not trigger that change (as the code continues to run), but will have an amazing performance implication.\r\n   \r\n   Think \r\n   \r\n   ```rust\r\n   for i in 0..array.len() {\r\n       if array.value(i) > 2 {\r\n           // do x\r\n       };\r\n   }\r\n   ```\r\n   this loop will suffer a lot from this change.\r\n   \r\n   we would like users to change it to \r\n   \r\n   ```rust\r\n   array.values().for_each(|value| {\r\n       if value > 2 {\r\n           // do x\r\n       };\r\n   });\r\n   ```\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-21T05:53:54.153+0000",
                    "updated": "2021-01-21T05:53:54.153+0000",
                    "started": "2021-01-21T05:53:54.152+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "538884",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/538885",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#discussion_r561618199\n\n\n\n##########\nFile path: rust/arrow/src/array/array_primitive.rs\n##########\n@@ -86,13 +86,9 @@ impl<T: ArrowPrimitiveType> PrimitiveArray<T> {\n     }\n \n     /// Returns the primitive value at index `i`.\n-    ///\n-    /// Note this doesn't do any bound checking, for performance reason.\n-    /// # Safety\n-    /// caller must ensure that the passed in offset is less than the array len()\n+    #[inline]\n     pub fn value(&self, i: usize) -> T::Native {\n-        let offset = i + self.offset();\n-        unsafe { *self.raw_values.as_ptr().add(offset) }\n+        self.values()[i]\n\nReview comment:\n       Thinking about it, I am not sure we want this: this will have severe implications to almost all uses of `value()`. Could you run the benches before and after this PR?\r\n   \r\n   My suggestion is that we mark this method as `unsafe`, so that it is clear that people need to be conscious about it. Since this will impact a large part of our code base (and likely others), I suggest that we do this change on a separate PR.\r\n   \r\n   I think that we would like to instruct users of this API to switch to `values()`. This change will not trigger that change (as the code continues to run), but will have an amazing performance implication.\r\n   \r\n   Think \r\n   \r\n   ```rust\r\n   for i in 0..array.len() {\r\n       if array.value(i) > 2 {\r\n           // do x\r\n       };\r\n   }\r\n   ```\r\n   this loop will suffer a lot from this change.\r\n   \r\n   we would like users to change it to \r\n   \r\n   ```rust\r\n   array.values().for_each(|value| {\r\n       if value > 2 {\r\n           // do x\r\n       };\r\n   });\r\n   ```\r\n   \r\n   For that, we need to mark `array.value(i)` as `unsafe` to indicate that yes, you can use that method, yes, it is fast, _but_ you need to be careful about `i`.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-21T06:08:03.444+0000",
                    "updated": "2021-01-21T06:08:03.444+0000",
                    "started": "2021-01-21T06:08:03.444+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "538885",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/539082",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#discussion_r561918229\n\n\n\n##########\nFile path: rust/arrow/src/array/array_primitive.rs\n##########\n@@ -86,13 +86,9 @@ impl<T: ArrowPrimitiveType> PrimitiveArray<T> {\n     }\n \n     /// Returns the primitive value at index `i`.\n-    ///\n-    /// Note this doesn't do any bound checking, for performance reason.\n-    /// # Safety\n-    /// caller must ensure that the passed in offset is less than the array len()\n+    #[inline]\n     pub fn value(&self, i: usize) -> T::Native {\n-        let offset = i + self.offset();\n-        unsafe { *self.raw_values.as_ptr().add(offset) }\n+        self.values()[i]\n\nReview comment:\n       I agree, that we want to guide API users to switch to values().  My hesitancy with making/leaving it unsafe is that I think it's the only Array value(x) method when combined with the other changes in this PR (which is why it got added as a followon commit).  That leads to awkwardness in macros, such as the comparison kernel, where it effectively calls \"$left.value(x)\",  it could be a papercut for macro-style invocation.  \r\n   \r\n   (There may be an argument that a trait could abstract away the need for macros altogether... but my experiments to rework the comparison kernel to that effect are incomplete - and partly sidelined with various other experiments I'm toying with)\r\n   \r\n   I would expect that in the exact for loop you mention, the compiler could recognize the satisfied loop bound since both len() and .value(i) are inlinable and use the same underlying field, but I expect it is also easy to complicate on that loop to defeat that by having a less direct relationship between i & array.len().  The pretty printing logic probably would do additional bounds checks now, as it iterates based on  len() from the record batch, which is semantically equal, but nothing in the code enforces that in a way I would expect the compiler to understand.\r\n   \r\n   I'll launch some benchmarks of head, master, and the commit just before the PrimitiveArray safety change.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-21T14:22:58.374+0000",
                    "updated": "2021-01-21T14:22:58.374+0000",
                    "started": "2021-01-21T14:22:58.374+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "539082",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/539087",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#discussion_r561918229\n\n\n\n##########\nFile path: rust/arrow/src/array/array_primitive.rs\n##########\n@@ -86,13 +86,9 @@ impl<T: ArrowPrimitiveType> PrimitiveArray<T> {\n     }\n \n     /// Returns the primitive value at index `i`.\n-    ///\n-    /// Note this doesn't do any bound checking, for performance reason.\n-    /// # Safety\n-    /// caller must ensure that the passed in offset is less than the array len()\n+    #[inline]\n     pub fn value(&self, i: usize) -> T::Native {\n-        let offset = i + self.offset();\n-        unsafe { *self.raw_values.as_ptr().add(offset) }\n+        self.values()[i]\n\nReview comment:\n       I agree, that we want to guide API users to switch to values().  My hesitancy with making/leaving it unsafe is that I think it's the only Array value(x) method when combined with the other changes in this PR (which is why it got added as a followon commit).  That leads to awkwardness in macros, such as the comparison kernel, where it effectively calls \"$left.value(x)\".  Making macro style invocation sometimes-need-unsafe is a bit unfortunate.\r\n   \r\n   (There may be an argument that a trait could abstract away the need for macros altogether... but my experiments to rework the comparison kernel to that effect are incomplete - and partly sidelined with various other experiments I'm toying with... most of which somehow relate to removing direct calls to __Array.value(i) )\r\n   \r\n   I would expect that in the exact for loop you mention, the compiler could recognize the satisfied loop bound since both len() and .value(i) are inlinable and use the same underlying field, but I expect it is also easy to complicate on that loop to defeat that by having a less direct relationship between i & array.len().  The pretty printing logic probably would do additional bounds checks now, as it iterates based on  len() from the record batch, which is semantically equal, but nothing in the code enforces that in a way I would expect the compiler to understand.\r\n   \r\n   I'll launch some benchmarks of head, master, and the commit just before the PrimitiveArray safety change.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-21T14:25:27.039+0000",
                    "updated": "2021-01-21T14:25:27.039+0000",
                    "started": "2021-01-21T14:25:27.039+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "539087",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/539524",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#discussion_r561918229\n\n\n\n##########\nFile path: rust/arrow/src/array/array_primitive.rs\n##########\n@@ -86,13 +86,9 @@ impl<T: ArrowPrimitiveType> PrimitiveArray<T> {\n     }\n \n     /// Returns the primitive value at index `i`.\n-    ///\n-    /// Note this doesn't do any bound checking, for performance reason.\n-    /// # Safety\n-    /// caller must ensure that the passed in offset is less than the array len()\n+    #[inline]\n     pub fn value(&self, i: usize) -> T::Native {\n-        let offset = i + self.offset();\n-        unsafe { *self.raw_values.as_ptr().add(offset) }\n+        self.values()[i]\n\nReview comment:\n       I agree, that we want to guide API users to switch to values().  My hesitancy with making/leaving it unsafe is that I think it's the only Array value(x) method when combined with the other changes in this PR (which is why it got added as a followon commit).  That leads to awkwardness in macros, such as the comparison kernel, where it effectively calls \"$left.value(x)\",  it could be a papercut for macro-style invocation.  \r\n   \r\n   (There may be an argument that a trait could abstract away the need for macros altogether... but my experiments to rework the comparison kernel to that effect are incomplete - and partly sidelined with various other experiments I'm toying with)\r\n   \r\n   I would expect that in the exact for loop you mention, the compiler could recognize the satisfied loop bound since both len() and .value(i) are inlinable and use the same underlying field, but I expect it is also easy to complicate on that loop to defeat that by having a less direct relationship between i & array.len().  The pretty printing logic probably would do additional bounds checks now, as it iterates based on  len() from the record batch, which is semantically equal, but nothing in the code enforces that in a way I would expect the compiler to understand.\r\n   \r\n   I'll launch some benchmarks of head, master, and the commit just before the PrimitiveArray safety change.\n\n##########\nFile path: rust/arrow/src/array/array_primitive.rs\n##########\n@@ -86,13 +86,9 @@ impl<T: ArrowPrimitiveType> PrimitiveArray<T> {\n     }\n \n     /// Returns the primitive value at index `i`.\n-    ///\n-    /// Note this doesn't do any bound checking, for performance reason.\n-    /// # Safety\n-    /// caller must ensure that the passed in offset is less than the array len()\n+    #[inline]\n     pub fn value(&self, i: usize) -> T::Native {\n-        let offset = i + self.offset();\n-        unsafe { *self.raw_values.as_ptr().add(offset) }\n+        self.values()[i]\n\nReview comment:\n       I agree, that we want to guide API users to switch to values().  My hesitancy with making/leaving it unsafe is that I think it's the only Array value(x) method when combined with the other changes in this PR (which is why it got added as a followon commit).  That leads to awkwardness in macros, such as the comparison kernel, where it effectively calls \"$left.value(x)\".  Making macro style invocation sometimes-need-unsafe is a bit unfortunate.\r\n   \r\n   (There may be an argument that a trait could abstract away the need for macros altogether... but my experiments to rework the comparison kernel to that effect are incomplete - and partly sidelined with various other experiments I'm toying with... most of which somehow relate to removing direct calls to __Array.value(i) )\r\n   \r\n   I would expect that in the exact for loop you mention, the compiler could recognize the satisfied loop bound since both len() and .value(i) are inlinable and use the same underlying field, but I expect it is also easy to complicate on that loop to defeat that by having a less direct relationship between i & array.len().  The pretty printing logic probably would do additional bounds checks now, as it iterates based on  len() from the record batch, which is semantically equal, but nothing in the code enforces that in a way I would expect the compiler to understand.\r\n   \r\n   I'll launch some benchmarks of head, master, and the commit just before the PrimitiveArray safety change.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-22T05:37:16.156+0000",
                    "updated": "2021-01-22T05:37:16.156+0000",
                    "started": "2021-01-22T05:37:16.156+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "539524",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/539599",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#issuecomment-761621256\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=h1) Report\n   > Merging [#9215](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=desc) (5cd8075) into [master](https://codecov.io/gh/apache/arrow/commit/a0e12445cc8689befe40c20e2fac6e6df252bef6?el=desc) (a0e1244) will **increase** coverage by `0.03%`.\n   > The diff coverage is `100.00%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9215/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9215      +/-   ##\n   ==========================================\n   + Coverage   81.64%   81.68%   +0.03%     \n   ==========================================\n     Files         215      215              \n     Lines       52489    52572      +83     \n   ==========================================\n   + Hits        42857    42945      +88     \n   + Misses       9632     9627       -5     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/array/array\\_binary.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfYmluYXJ5LnJz) | `91.75% <100.00%> (+0.76%)` | :arrow_up: |\n   | [rust/arrow/src/array/array\\_list.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfbGlzdC5ycw==) | `84.84% <100.00%> (+1.62%)` | :arrow_up: |\n   | [rust/arrow/src/array/array\\_primitive.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfcHJpbWl0aXZlLnJz) | `94.76% <100.00%> (+0.23%)` | :arrow_up: |\n   | [rust/arrow/src/array/array\\_string.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfc3RyaW5nLnJz) | `91.66% <100.00%> (+1.66%)` | :arrow_up: |\n   | [rust/arrow/src/array/builder.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYnVpbGRlci5ycw==) | `85.51% <100.00%> (\u00f8)` | |\n   | [rust/arrow/src/compute/kernels/cast.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2Nhc3QucnM=) | `96.96% <100.00%> (-0.03%)` | :arrow_down: |\n   | [rust/arrow/src/compute/kernels/limit.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2xpbWl0LnJz) | `100.00% <100.00%> (\u00f8)` | |\n   | [rust/arrow/src/compute/util.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS91dGlsLnJz) | `98.92% <100.00%> (\u00f8)` | |\n   | [rust/parquet/src/encodings/encoding.rs](https://codecov.io/gh/apache/arrow/pull/9215/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9lbmNvZGluZ3MvZW5jb2RpbmcucnM=) | `95.43% <0.00%> (+0.19%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=footer). Last update [a0e1244...9ca08d7](https://codecov.io/gh/apache/arrow/pull/9215?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-22T05:47:52.797+0000",
                    "updated": "2021-01-22T05:47:52.797+0000",
                    "started": "2021-01-22T05:47:52.796+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "539599",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/539769",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#issuecomment-764164139\n\n\n   Rebased.  But I didn't hit the merge conflicts during...  I can see that a number of tests were swapped to use Buffer::from_slice_ref()... so I'll add another commit to switch to that function just to be safe.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-22T06:12:45.923+0000",
                    "updated": "2021-01-22T06:12:45.923+0000",
                    "started": "2021-01-22T06:12:45.922+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "539769",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/539966",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#discussion_r561618199\n\n\n\n##########\nFile path: rust/arrow/src/array/array_primitive.rs\n##########\n@@ -86,13 +86,9 @@ impl<T: ArrowPrimitiveType> PrimitiveArray<T> {\n     }\n \n     /// Returns the primitive value at index `i`.\n-    ///\n-    /// Note this doesn't do any bound checking, for performance reason.\n-    /// # Safety\n-    /// caller must ensure that the passed in offset is less than the array len()\n+    #[inline]\n     pub fn value(&self, i: usize) -> T::Native {\n-        let offset = i + self.offset();\n-        unsafe { *self.raw_values.as_ptr().add(offset) }\n+        self.values()[i]\n\nReview comment:\n       Thinking about it, I am not sure we want this: this will have severe implications to almost all uses of `value()`. Could you run the benches before and after this PR?\r\n   \r\n   My suggestion is that we mark this method as `unsafe`, so that it is clear that people need to be conscious about it. Since this will impact a large part of our code base (and likely others), I suggest that we do this change on a separate PR\n\n##########\nFile path: rust/arrow/src/array/array_primitive.rs\n##########\n@@ -86,13 +86,9 @@ impl<T: ArrowPrimitiveType> PrimitiveArray<T> {\n     }\n \n     /// Returns the primitive value at index `i`.\n-    ///\n-    /// Note this doesn't do any bound checking, for performance reason.\n-    /// # Safety\n-    /// caller must ensure that the passed in offset is less than the array len()\n+    #[inline]\n     pub fn value(&self, i: usize) -> T::Native {\n-        let offset = i + self.offset();\n-        unsafe { *self.raw_values.as_ptr().add(offset) }\n+        self.values()[i]\n\nReview comment:\n       Thinking about it, I am not sure we want this: this will have severe implications to almost all uses of `value()`. Could you run the benches before and after this PR?\r\n   \r\n   My suggestion is that we mark this method as `unsafe`, so that it is clear that people need to be conscious about it. Since this will impact a large part of our code base (and likely others), I suggest that we do this change on a separate PR.\r\n   \r\n   I think that we would like to instruct users of this API to switch to `values()`. This change will not trigger that change (as the code continues to run), but will have an amazing performance implication.\r\n   \r\n   Think \r\n   \r\n   ```rust\r\n   for i in 0..array.len() {\r\n       if array.value(i) > 2 {\r\n           // do x\r\n       };\r\n   }\r\n   ```\r\n   this loop will suffer a lot from this change.\r\n   \r\n   we would like users to change it to \r\n   \r\n   ```\r\n   array.values().for_each(|value| {\r\n       if value > 2 {\r\n           // do x\r\n       };\r\n   });\r\n   ```\r\n   \n\n##########\nFile path: rust/arrow/src/array/array_primitive.rs\n##########\n@@ -86,13 +86,9 @@ impl<T: ArrowPrimitiveType> PrimitiveArray<T> {\n     }\n \n     /// Returns the primitive value at index `i`.\n-    ///\n-    /// Note this doesn't do any bound checking, for performance reason.\n-    /// # Safety\n-    /// caller must ensure that the passed in offset is less than the array len()\n+    #[inline]\n     pub fn value(&self, i: usize) -> T::Native {\n-        let offset = i + self.offset();\n-        unsafe { *self.raw_values.as_ptr().add(offset) }\n+        self.values()[i]\n\nReview comment:\n       Thinking about it, I am not sure we want this: this will have severe implications to almost all uses of `value()`. Could you run the benches before and after this PR?\r\n   \r\n   My suggestion is that we mark this method as `unsafe`, so that it is clear that people need to be conscious about it. Since this will impact a large part of our code base (and likely others), I suggest that we do this change on a separate PR.\r\n   \r\n   I think that we would like to instruct users of this API to switch to `values()`. This change will not trigger that change (as the code continues to run), but will have an amazing performance implication.\r\n   \r\n   Think \r\n   \r\n   ```rust\r\n   for i in 0..array.len() {\r\n       if array.value(i) > 2 {\r\n           // do x\r\n       };\r\n   }\r\n   ```\r\n   this loop will suffer a lot from this change.\r\n   \r\n   we would like users to change it to \r\n   \r\n   ```rust\r\n   array.values().for_each(|value| {\r\n       if value > 2 {\r\n           // do x\r\n       };\r\n   });\r\n   ```\r\n   \n\n##########\nFile path: rust/arrow/src/array/array_primitive.rs\n##########\n@@ -86,13 +86,9 @@ impl<T: ArrowPrimitiveType> PrimitiveArray<T> {\n     }\n \n     /// Returns the primitive value at index `i`.\n-    ///\n-    /// Note this doesn't do any bound checking, for performance reason.\n-    /// # Safety\n-    /// caller must ensure that the passed in offset is less than the array len()\n+    #[inline]\n     pub fn value(&self, i: usize) -> T::Native {\n-        let offset = i + self.offset();\n-        unsafe { *self.raw_values.as_ptr().add(offset) }\n+        self.values()[i]\n\nReview comment:\n       Thinking about it, I am not sure we want this: this will have severe implications to almost all uses of `value()`. Could you run the benches before and after this PR?\r\n   \r\n   My suggestion is that we mark this method as `unsafe`, so that it is clear that people need to be conscious about it. Since this will impact a large part of our code base (and likely others), I suggest that we do this change on a separate PR.\r\n   \r\n   I think that we would like to instruct users of this API to switch to `values()`. This change will not trigger that change (as the code continues to run), but will have an amazing performance implication.\r\n   \r\n   Think \r\n   \r\n   ```rust\r\n   for i in 0..array.len() {\r\n       if array.value(i) > 2 {\r\n           // do x\r\n       };\r\n   }\r\n   ```\r\n   this loop will suffer a lot from this change.\r\n   \r\n   we would like users to change it to \r\n   \r\n   ```rust\r\n   array.values().for_each(|value| {\r\n       if value > 2 {\r\n           // do x\r\n       };\r\n   });\r\n   ```\r\n   \r\n   For that, we need to mark `array.value(i)` as `unsafe` to indicate that yes, you can use that method, yes, it is fast, _but_ you need to be careful about `i`.\n\n##########\nFile path: rust/arrow/src/array/array_primitive.rs\n##########\n@@ -86,13 +86,9 @@ impl<T: ArrowPrimitiveType> PrimitiveArray<T> {\n     }\n \n     /// Returns the primitive value at index `i`.\n-    ///\n-    /// Note this doesn't do any bound checking, for performance reason.\n-    /// # Safety\n-    /// caller must ensure that the passed in offset is less than the array len()\n+    #[inline]\n     pub fn value(&self, i: usize) -> T::Native {\n-        let offset = i + self.offset();\n-        unsafe { *self.raw_values.as_ptr().add(offset) }\n+        self.values()[i]\n\nReview comment:\n       I think that we may need to park this change until we migrate our code base to use `values()` whenever possible. \r\n   \r\n   If we merge this one, we get a major performance degradation. If we add `unsafe`, we need to add `unsafe` in a lot of places. Neither are great options :)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-22T06:41:58.157+0000",
                    "updated": "2021-01-22T06:41:58.157+0000",
                    "started": "2021-01-22T06:41:58.157+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "539966",
                    "issueId": "13352694"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/worklog/539983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9215:\nURL: https://github.com/apache/arrow/pull/9215#discussion_r562406187\n\n\n\n##########\nFile path: rust/arrow/src/array/array_primitive.rs\n##########\n@@ -86,13 +86,9 @@ impl<T: ArrowPrimitiveType> PrimitiveArray<T> {\n     }\n \n     /// Returns the primitive value at index `i`.\n-    ///\n-    /// Note this doesn't do any bound checking, for performance reason.\n-    /// # Safety\n-    /// caller must ensure that the passed in offset is less than the array len()\n+    #[inline]\n     pub fn value(&self, i: usize) -> T::Native {\n-        let offset = i + self.offset();\n-        unsafe { *self.raw_values.as_ptr().add(offset) }\n+        self.values()[i]\n\nReview comment:\n       That makes sense.  I'll rebase dropping that commit.\n\n##########\nFile path: rust/arrow/src/array/array_primitive.rs\n##########\n@@ -86,13 +86,9 @@ impl<T: ArrowPrimitiveType> PrimitiveArray<T> {\n     }\n \n     /// Returns the primitive value at index `i`.\n-    ///\n-    /// Note this doesn't do any bound checking, for performance reason.\n-    /// # Safety\n-    /// caller must ensure that the passed in offset is less than the array len()\n+    #[inline]\n     pub fn value(&self, i: usize) -> T::Native {\n-        let offset = i + self.offset();\n-        unsafe { *self.raw_values.as_ptr().add(offset) }\n+        self.values()[i]\n\nReview comment:\n       safety overhead on a few benchmarks seems to be 15-30%\r\n   ```\r\n   group                           master-                                safe-prim-                             unsafe-prim-\r\n   -----                           -------                                ----------                             ------------\r\n   add 512                         1.00    307.4\u00b14.79ns        ? B/sec    1.07    327.7\u00b16.48ns        ? B/sec    1.30    400.5\u00b17.09ns        ? B/sec\r\n   add_nulls_512                   1.20    447.8\u00b18.09ns        ? B/sec    1.32    490.9\u00b13.41ns        ? B/sec    1.00    372.2\u00b15.96ns        ? B/sec\r\n   buffer_bit_ops or               1.17   731.0\u00b120.02ns        ? B/sec    1.19    743.7\u00b15.43ns        ? B/sec    1.00   624.0\u00b110.86ns        ? B/sec\r\n   cast date64 to date32 512       1.00      7.4\u00b10.22\u00b5s        ? B/sec    1.10      8.2\u00b10.07\u00b5s        ? B/sec    1.03      7.7\u00b10.22\u00b5s        ? B/sec\r\n   cast i64 to string 512          1.00     24.8\u00b10.33\u00b5s        ? B/sec    1.09     27.1\u00b10.79\u00b5s        ? B/sec    1.10     27.3\u00b10.41\u00b5s        ? B/sec\r\n   cast time32s to time32ms 512    1.00   917.0\u00b119.20ns        ? B/sec    1.21  1113.0\u00b122.04ns        ? B/sec    1.07    984.5\u00b17.53ns        ? B/sec\r\n   equal_512                       1.00     44.1\u00b10.81ns        ? B/sec    1.13     49.9\u00b10.65ns        ? B/sec    1.01     44.4\u00b10.27ns        ? B/sec\r\n   min nulls string 512            1.04      6.4\u00b10.12\u00b5s        ? B/sec    1.14      7.0\u00b10.15\u00b5s        ? B/sec    1.00      6.2\u00b10.09\u00b5s        ? B/sec\r\n   multiply 512                    1.14   471.5\u00b110.15ns        ? B/sec    1.18    487.0\u00b14.72ns        ? B/sec    1.00    413.4\u00b16.16ns        ? B/sec\r\n   not                             1.00  1102.3\u00b114.55ns        ? B/sec    1.12  1235.9\u00b119.91ns        ? B/sec    1.02  1120.3\u00b119.83ns        ? B/sec\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-22T06:43:56.684+0000",
                    "updated": "2021-01-22T06:43:56.684+0000",
                    "started": "2021-01-22T06:43:56.684+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "539983",
                    "issueId": "13352694"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 23400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7ac350b4[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4eecfd3e[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71a18f0a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@580d990d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2b574c14[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3a3ce5b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e87d8fa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4a76e3d6[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b503160[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@461cfd47[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@61cad76[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7b898630[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 23400,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jan 28 18:04:15 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-01-28T18:04:15.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11270/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-01-16T18:22:59.000+0000",
        "updated": "2021-01-28T18:04:25.000+0000",
        "timeoriginalestimate": null,
        "description": "Using an approach similar to ARROW-10989, migrate typed array API's to use slices where they can.\r\n\r\nThis impacts the API of:\r\n * GenericBinaryArray<>\r\n * GenericListArray<>\r\n * GenericStringArray<>\r\n\r\nThis also enables bounds checking in every value() function on each of the above arrays (as well as PrimitiveArray<> ).\r\n\r\nThe new PrimitiveArray.value() bounds check\u00a0 has a negative performance impact on various benchmarks that still use the .Value(...) function on PrimitiveArray.\u00a0 But that should be resolvable by using the PrimitiveArray.values() instead (whether within this PR or a future PR).",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 23400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Use slices for simple array data buffer access",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352694/comment/17273905",
                    "id": "17273905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 9215\n[https://github.com/apache/arrow/pull/9215]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-01-28T18:04:15.460+0000",
                    "updated": "2021-01-28T18:04:15.460+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0mnuo:",
        "customfield_12314139": null
    }
}