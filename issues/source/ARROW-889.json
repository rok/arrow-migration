{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13066524",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524",
    "key": "ARROW-889",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "beginner",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-889/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 26,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/124211",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy opened a new pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278\n \n \n   My main intention was only to have `PrettyPrint` for `ChunkedArray` instance but as the Python and C++ output was quite diverging, I have attempted to unify both. During that I came across many untested and unimplemented edge cases that I also fixed. Thus this turned out slightly larger than expected.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-17T20:57:37.893+0000",
                    "updated": "2018-07-17T20:57:37.893+0000",
                    "started": "2018-07-17T20:57:37.893+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "124211",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/124504",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203461759\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print.cc\n ##########\n @@ -84,121 +100,120 @@ void PrettyPrinter::Indent() {\n \n class ArrayPrinter : public PrettyPrinter {\n  public:\n-  ArrayPrinter(const Array& array, int indent, std::ostream* sink)\n-      : PrettyPrinter(indent, sink), array_(array) {}\n+  ArrayPrinter(const Array& array, int indent, int window, std::ostream* sink)\n+      : PrettyPrinter(indent, window, sink), array_(array) {}\n \n-  template <typename T>\n-  inline typename std::enable_if<IsInteger<T>::value, void>::type WriteDataValues(\n-      const T& array) {\n-    const auto data = array.raw_values();\n+  void WriteValues(const Array& array, std::function<void(int)> func) {\n+    bool skip_comma = true;\n     for (int i = 0; i < array.length(); ++i) {\n \n Review comment:\n   We should use `int64_t` for indexing.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-18T17:28:56.102+0000",
                    "updated": "2018-07-18T17:28:56.102+0000",
                    "started": "2018-07-18T17:28:56.102+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "124504",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/124505",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203460119\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print.cc\n ##########\n @@ -84,121 +100,120 @@ void PrettyPrinter::Indent() {\n \n class ArrayPrinter : public PrettyPrinter {\n  public:\n-  ArrayPrinter(const Array& array, int indent, std::ostream* sink)\n-      : PrettyPrinter(indent, sink), array_(array) {}\n+  ArrayPrinter(const Array& array, int indent, int window, std::ostream* sink)\n+      : PrettyPrinter(indent, window, sink), array_(array) {}\n \n-  template <typename T>\n-  inline typename std::enable_if<IsInteger<T>::value, void>::type WriteDataValues(\n-      const T& array) {\n-    const auto data = array.raw_values();\n+  void WriteValues(const Array& array, std::function<void(int)> func) {\n+    bool skip_comma = true;\n     for (int i = 0; i < array.length(); ++i) {\n-      if (i > 0) {\n-        (*sink_) << \", \";\n+      if (skip_comma) {\n+        skip_comma = false;\n+      } else {\n+        (*sink_) << \",\\n\";\n       }\n-      if (array.IsNull(i)) {\n-        (*sink_) << \"null\";\n+      Indent();\n+      if ((i >= window_) && (i < (array.length() - window_))) {\n+        (*sink_) << \"...\\n\";\n+        i = array.length() - window_ - 1;\n+        skip_comma = true;\n+      } else if (array.IsNull(i)) {\n+        (*sink_) << \"NA\";\n       } else {\n-        (*sink_) << static_cast<int64_t>(data[i]);\n+        func(i);\n       }\n     }\n+    (*sink_) << \"\\n\";\n   }\n \n   template <typename T>\n-  inline typename std::enable_if<IsFloatingPoint<T>::value, void>::type WriteDataValues(\n+  inline typename std::enable_if<IsInteger<T>::value, Status>::type WriteDataValues(\n       const T& array) {\n     const auto data = array.raw_values();\n-    for (int i = 0; i < array.length(); ++i) {\n-      if (i > 0) {\n-        (*sink_) << \", \";\n-      }\n-      if (array.IsNull(i)) {\n-        Write(\"null\");\n-      } else {\n-        (*sink_) << data[i];\n-      }\n-    }\n+    WriteValues(array, [&](int i) { (*sink_) << static_cast<int64_t>(data[i]); });\n \n Review comment:\n   Why is the `int64_t` cast needed? What happens if the array type is uint64 and one of the elements is larger than 2**63?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-18T17:28:56.127+0000",
                    "updated": "2018-07-18T17:28:56.127+0000",
                    "started": "2018-07-18T17:28:56.127+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "124505",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/124506",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203458792\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print.cc\n ##########\n @@ -36,27 +37,42 @@ namespace arrow {\n \n class PrettyPrinter {\n  public:\n-  PrettyPrinter(int indent, std::ostream* sink) : indent_(indent), sink_(sink) {}\n+  PrettyPrinter(int indent, int window, std::ostream* sink)\n+      : indent_(indent), window_(window), sink_(sink) {}\n \n   void Write(const char* data);\n   void Write(const std::string& data);\n   void WriteIndented(const char* data);\n   void WriteIndented(const std::string& data);\n   void Newline();\n   void Indent();\n-  void OpenArray();\n-  void CloseArray();\n+  void OpenArray(const Array& array);\n+  void CloseArray(const Array& array);\n \n   void Flush() { (*sink_) << std::flush; }\n \n  protected:\n   int indent_;\n+  int window_;\n   std::ostream* sink_;\n };\n \n-void PrettyPrinter::OpenArray() { (*sink_) << \"[\"; }\n+void PrettyPrinter::OpenArray(const Array& array) {\n+  Indent();\n+  (*sink_) << \"[\";\n+  if (array.length() > 0) {\n+    (*sink_) << \"\\n\";\n+    indent_ += 2;\n \n Review comment:\n   At some point, I suppose we may want to customize this indent width as well? Though not needed for this PR.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-18T17:28:56.128+0000",
                    "updated": "2018-07-18T17:28:56.128+0000",
                    "started": "2018-07-18T17:28:56.128+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "124506",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/124507",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203462788\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print.cc\n ##########\n @@ -84,121 +100,120 @@ void PrettyPrinter::Indent() {\n \n class ArrayPrinter : public PrettyPrinter {\n  public:\n-  ArrayPrinter(const Array& array, int indent, std::ostream* sink)\n-      : PrettyPrinter(indent, sink), array_(array) {}\n+  ArrayPrinter(const Array& array, int indent, int window, std::ostream* sink)\n+      : PrettyPrinter(indent, window, sink), array_(array) {}\n \n-  template <typename T>\n-  inline typename std::enable_if<IsInteger<T>::value, void>::type WriteDataValues(\n-      const T& array) {\n-    const auto data = array.raw_values();\n+  void WriteValues(const Array& array, std::function<void(int)> func) {\n \n Review comment:\n   I'm not sure performance here is important, but I think the recommended idiom to pass a callable is to templatize the callable type, e.g.:\r\n   ```c++\r\n   template <typename DataPrintFunc>\r\n   void WriteValues(const Array& array, DataPrintFunc&& print_data) {\r\n   ...\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-18T17:28:56.141+0000",
                    "updated": "2018-07-18T17:28:56.141+0000",
                    "started": "2018-07-18T17:28:56.140+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "124507",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/124508",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203457090\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print.h\n ##########\n @@ -27,10 +27,18 @@\n namespace arrow {\n \n class Array;\n+class ChunkedArray;\n class Status;\n \n struct PrettyPrintOptions {\n+  PrettyPrintOptions(int indent_arg, int window_arg = 10)\n+      : indent(indent_arg), window(window_arg) {}\n+\n+  /// Number of spaces used for indentation on the currently highest level.\n \n Review comment:\n   \"highest\" means \"outermost\"?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-18T17:28:56.164+0000",
                    "updated": "2018-07-18T17:28:56.164+0000",
                    "started": "2018-07-18T17:28:56.163+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "124508",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/124760",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#issuecomment-406136613\n \n \n   Wanted to look at this today but it's getting late; will endeavor to review tomorrow as early in the day as I can\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T02:41:57.073+0000",
                    "updated": "2018-07-19T02:41:57.073+0000",
                    "started": "2018-07-19T02:41:57.072+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "124760",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/125125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203804589\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print-test.cc\n ##########\n @@ -64,36 +73,82 @@ void Check(const T& obj, const PrettyPrintOptions& options, const char* expected\n }\n \n template <typename TYPE, typename C_TYPE>\n-void CheckPrimitive(int indent, const std::vector<bool>& is_valid,\n+void CheckPrimitive(const PrettyPrintOptions& options, const std::vector<bool>& is_valid,\n                     const std::vector<C_TYPE>& values, const char* expected) {\n   std::shared_ptr<Array> array;\n   ArrayFromVector<TYPE, C_TYPE>(is_valid, values, &array);\n-  CheckArray(*array, indent, expected);\n+  CheckArray(*array, options, expected);\n }\n \n TEST_F(TestPrettyPrint, PrimitiveType) {\n   std::vector<bool> is_valid = {true, true, false, true, false};\n \n   std::vector<int32_t> values = {0, 1, 2, 3, 4};\n-  static const char* expected = R\"expected([0, 1, null, 3, null])expected\";\n-  CheckPrimitive<Int32Type, int32_t>(0, is_valid, values, expected);\n-\n-  std::vector<std::string> values2 = {\"foo\", \"bar\", \"\", \"baz\", \"\"};\n-  static const char* ex2 = R\"expected([\"foo\", \"bar\", null, \"baz\", null])expected\";\n-  CheckPrimitive<StringType, std::string>(0, is_valid, values2, ex2);\n+  static const char* expected = \"[\\n  0,\\n  1,\\n  NA,\\n  3,\\n  NA\\n]\";\n+  CheckPrimitive<Int32Type, int32_t>({0, 10}, is_valid, values, expected);\n+  static const char* ex_in2 = \"  [\\n    0,\\n    1,\\n    NA,\\n    3,\\n    NA\\n  ]\";\n+  CheckPrimitive<Int32Type, int32_t>({2, 10}, is_valid, values, ex_in2);\n+  static const char* ex_in2_w2 = \"  [\\n    0,\\n    1,\\n    ...\\n    3,\\n    NA\\n  ]\";\n+  CheckPrimitive<Int32Type, int32_t>({2, 2}, is_valid, values, ex_in2_w2);\n+\n+  std::vector<double> values2 = {0., 1., 2., 3., 4.};\n+  static const char* ex2 = \"[\\n  0,\\n  1,\\n  NA,\\n  3,\\n  NA\\n]\";\n+  CheckPrimitive<DoubleType, double>({0, 10}, is_valid, values2, ex2);\n+  static const char* ex2_in2 = \"  [\\n    0,\\n    1,\\n    NA,\\n    3,\\n    NA\\n  ]\";\n+  CheckPrimitive<DoubleType, double>({2, 10}, is_valid, values2, ex2_in2);\n+\n+  std::vector<std::string> values3 = {\"foo\", \"bar\", \"\", \"baz\", \"\"};\n+  static const char* ex3 = \"[\\n  \\\"foo\\\",\\n  \\\"bar\\\",\\n  NA,\\n  \\\"baz\\\",\\n  NA\\n]\";\n+  CheckPrimitive<StringType, std::string>({0, 10}, is_valid, values3, ex3);\n+  static const char* ex3_in2 =\n+      \"  [\\n    \\\"foo\\\",\\n    \\\"bar\\\",\\n    NA,\\n    \\\"baz\\\",\\n    NA\\n  ]\";\n+  CheckPrimitive<StringType, std::string>({2, 10}, is_valid, values3, ex3_in2);\n }\n \n TEST_F(TestPrettyPrint, BinaryType) {\n   std::vector<bool> is_valid = {true, true, false, true, false};\n   std::vector<std::string> values = {\"foo\", \"bar\", \"\", \"baz\", \"\"};\n-  static const char* ex = R\"expected([666F6F, 626172, null, 62617A, null])expected\";\n-  CheckPrimitive<BinaryType, std::string>(0, is_valid, values, ex);\n+  static const char* ex = \"[\\n  666F6F,\\n  626172,\\n  NA,\\n  62617A,\\n  NA\\n]\";\n+  CheckPrimitive<BinaryType, std::string>({0}, is_valid, values, ex);\n+  static const char* ex_in2 =\n+      \"  [\\n    666F6F,\\n    626172,\\n    NA,\\n    62617A,\\n    NA\\n  ]\";\n+  CheckPrimitive<BinaryType, std::string>({2}, is_valid, values, ex_in2);\n+}\n+\n+TEST_F(TestPrettyPrint, ListType) {\n+  Int64Builder* int_builder = new Int64Builder();\n+  ListBuilder list_builder(default_memory_pool(),\n+                           std::unique_ptr<ArrayBuilder>(int_builder));\n+\n+  ASSERT_OK(list_builder.Append());\n+  ASSERT_OK(int_builder->AppendNull());\n+  ASSERT_OK(list_builder.Append());\n+  ASSERT_OK(list_builder.Append(false));\n+  ASSERT_OK(list_builder.Append());\n+  ASSERT_OK(int_builder->Append(4));\n+  ASSERT_OK(int_builder->Append(6));\n+  ASSERT_OK(int_builder->Append(7));\n+  ASSERT_OK(list_builder.Append());\n+  ASSERT_OK(int_builder->Append(2));\n+  ASSERT_OK(int_builder->Append(3));\n+\n+  std::shared_ptr<Array> array;\n+  ASSERT_OK(list_builder.Finish(&array));\n+  static const char* ex =\n+      \"[\\n  [\\n    NA\\n  ],\\n  [],\\n  NA,\\n  [\\n    4,\\n    6,\\n    7\\n  ],\\n  [\\n    \"\n+      \"2,\\n    3\\n  ]\\n]\";\n+  CheckArray(*array, {0, 10}, ex);\n+  static const char* ex_2 =\n+      \"  [\\n    [\\n      NA\\n    ],\\n    [],\\n    NA,\\n    [\\n      4,\\n      6,\\n      \"\n+      \"7\\n    ],\\n    [\\n      2,\\n      3\\n    ]\\n  ]\";\n \n Review comment:\n   Should we try to use the `R\"` syntax for multiline output for readability (I see some used below)? No big deal here\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T17:22:36.321+0000",
                    "updated": "2018-07-19T17:22:36.321+0000",
                    "started": "2018-07-19T17:22:36.321+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125125",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/125126",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203805022\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print-test.cc\n ##########\n @@ -144,11 +202,72 @@ TEST_F(TestPrettyPrint, DictionaryType) {\n   auto arr = std::make_shared<DictionaryArray>(dict_type, indices);\n \n   static const char* expected = R\"expected(\n--- is_valid: [true, true, false, true, true, true]\n--- dictionary: [\"foo\", \"bar\", \"baz\"]\n--- indices: [1, 2, null, 0, 2, 0])expected\";\n+-- is_valid:\n+  [\n+    true,\n+    true,\n+    false,\n+    true,\n+    true,\n+    true\n+  ]\n \n Review comment:\n   Seeing this again it seems like the `is_valid` is redundant since the nulls appear in the indices\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T17:22:36.378+0000",
                    "updated": "2018-07-19T17:22:36.378+0000",
                    "started": "2018-07-19T17:22:36.378+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125126",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/125127",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203805457\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print-test.cc\n ##########\n @@ -64,36 +73,82 @@ void Check(const T& obj, const PrettyPrintOptions& options, const char* expected\n }\n \n template <typename TYPE, typename C_TYPE>\n-void CheckPrimitive(int indent, const std::vector<bool>& is_valid,\n+void CheckPrimitive(const PrettyPrintOptions& options, const std::vector<bool>& is_valid,\n                     const std::vector<C_TYPE>& values, const char* expected) {\n   std::shared_ptr<Array> array;\n   ArrayFromVector<TYPE, C_TYPE>(is_valid, values, &array);\n-  CheckArray(*array, indent, expected);\n+  CheckArray(*array, options, expected);\n }\n \n TEST_F(TestPrettyPrint, PrimitiveType) {\n   std::vector<bool> is_valid = {true, true, false, true, false};\n \n   std::vector<int32_t> values = {0, 1, 2, 3, 4};\n-  static const char* expected = R\"expected([0, 1, null, 3, null])expected\";\n-  CheckPrimitive<Int32Type, int32_t>(0, is_valid, values, expected);\n-\n-  std::vector<std::string> values2 = {\"foo\", \"bar\", \"\", \"baz\", \"\"};\n-  static const char* ex2 = R\"expected([\"foo\", \"bar\", null, \"baz\", null])expected\";\n-  CheckPrimitive<StringType, std::string>(0, is_valid, values2, ex2);\n+  static const char* expected = \"[\\n  0,\\n  1,\\n  NA,\\n  3,\\n  NA\\n]\";\n \n Review comment:\n   I think we ought to use `null` or `NULL` for nulls by default -- it even might be better to use this in Python. I originally used `NA` as a nod to R but I think it introduces some domain-specific ideas that don't really fit (we use \"null\" to describe this concept everywhere else in the codebase)\r\n   \r\n   We can also make this configurable in `PrettyPrintOptions`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T17:22:36.469+0000",
                    "updated": "2018-07-19T17:22:36.469+0000",
                    "started": "2018-07-19T17:22:36.469+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125127",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/125128",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203805825\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print-test.cc\n ##########\n @@ -144,11 +202,72 @@ TEST_F(TestPrettyPrint, DictionaryType) {\n   auto arr = std::make_shared<DictionaryArray>(dict_type, indices);\n \n   static const char* expected = R\"expected(\n--- is_valid: [true, true, false, true, true, true]\n--- dictionary: [\"foo\", \"bar\", \"baz\"]\n--- indices: [1, 2, null, 0, 2, 0])expected\";\n+-- is_valid:\n+  [\n+    true,\n+    true,\n+    false,\n+    true,\n+    true,\n+    true\n+  ]\n+-- dictionary:\n+  [\n+    \"foo\",\n+    \"bar\",\n+    \"baz\"\n+  ]\n+-- indices:\n+  [\n+    1,\n+    2,\n+    NA,\n \n Review comment:\n   We may want to change these to be right justified at some point for readability \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T17:22:36.469+0000",
                    "updated": "2018-07-19T17:22:36.469+0000",
                    "started": "2018-07-19T17:22:36.468+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125128",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/125129",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203805940\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print.cc\n ##########\n @@ -36,27 +37,42 @@ namespace arrow {\n \n class PrettyPrinter {\n  public:\n-  PrettyPrinter(int indent, std::ostream* sink) : indent_(indent), sink_(sink) {}\n+  PrettyPrinter(int indent, int window, std::ostream* sink)\n+      : indent_(indent), window_(window), sink_(sink) {}\n \n   void Write(const char* data);\n   void Write(const std::string& data);\n   void WriteIndented(const char* data);\n   void WriteIndented(const std::string& data);\n   void Newline();\n   void Indent();\n-  void OpenArray();\n-  void CloseArray();\n+  void OpenArray(const Array& array);\n+  void CloseArray(const Array& array);\n \n   void Flush() { (*sink_) << std::flush; }\n \n  protected:\n   int indent_;\n+  int window_;\n   std::ostream* sink_;\n };\n \n-void PrettyPrinter::OpenArray() { (*sink_) << \"[\"; }\n+void PrettyPrinter::OpenArray(const Array& array) {\n+  Indent();\n+  (*sink_) << \"[\";\n+  if (array.length() > 0) {\n+    (*sink_) << \"\\n\";\n+    indent_ += 2;\n \n Review comment:\n   +1\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T17:22:36.472+0000",
                    "updated": "2018-07-19T17:22:36.472+0000",
                    "started": "2018-07-19T17:22:36.471+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125129",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/125130",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203807113\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print.h\n ##########\n @@ -27,10 +27,18 @@\n namespace arrow {\n \n class Array;\n+class ChunkedArray;\n class Status;\n \n struct PrettyPrintOptions {\n+  PrettyPrintOptions(int indent_arg, int window_arg = 10)\n+      : indent(indent_arg), window(window_arg) {}\n+\n+  /// Number of spaces used for indentation on the currently highest level.\n \n Review comment:\n   Is this maybe \"The number of extra spaces to pre-indent all lines in the output\"?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T17:22:36.513+0000",
                    "updated": "2018-07-19T17:22:36.513+0000",
                    "started": "2018-07-19T17:22:36.513+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125130",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/125131",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203806677\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print.cc\n ##########\n @@ -331,10 +330,71 @@ Status ArrayPrinter::WriteValidityBitmap(const Array& array) {\n }\n \n Status PrettyPrint(const Array& arr, int indent, std::ostream* sink) {\n-  ArrayPrinter printer(arr, indent, sink);\n+  ArrayPrinter printer(arr, indent, 10, sink);\n   return printer.Print();\n }\n \n+Status PrettyPrint(const Array& arr, const PrettyPrintOptions& options,\n+                   std::ostream* sink) {\n+  ArrayPrinter printer(arr, options.indent, options.window, sink);\n+  return printer.Print();\n+}\n+\n+Status PrettyPrint(const Array& arr, const PrettyPrintOptions& options,\n+                   std::string* result) {\n+  std::ostringstream sink;\n+  RETURN_NOT_OK(PrettyPrint(arr, options, &sink));\n+  *result = sink.str();\n+  return Status::OK();\n+}\n+\n+Status PrettyPrint(const ChunkedArray& chunked_arr, const PrettyPrintOptions& options,\n+                   std::ostream* sink) {\n+  int num_chunks = chunked_arr.num_chunks();\n+  int indent = options.indent;\n+  int window = options.window;\n+\n+  for (int i = 0; i < indent; ++i) {\n+    (*sink) << \" \";\n+  }\n+  (*sink) << \"[\\n\";\n+  bool skip_comma = true;\n+  for (int i = 0; i < num_chunks; ++i) {\n+    if (skip_comma) {\n+      skip_comma = false;\n+    } else {\n+      (*sink) << \",\\n\";\n+    }\n+    if ((i >= window) && (i < (num_chunks - window))) {\n+      for (int i = 0; i < indent; ++i) {\n+        (*sink) << \" \";\n+      }\n+      (*sink) << \"...\\n\";\n+      i = num_chunks - window - 1;\n+      skip_comma = true;\n+    } else {\n+      ArrayPrinter printer(*chunked_arr.chunk(i), indent + 2, window, sink);\n \n Review comment:\n   Should probably pass in `options` here and use `options.indent_size` internally when we make that configurable\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T17:22:36.580+0000",
                    "updated": "2018-07-19T17:22:36.580+0000",
                    "started": "2018-07-19T17:22:36.580+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125131",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/125132",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203806140\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print.cc\n ##########\n @@ -84,121 +100,120 @@ void PrettyPrinter::Indent() {\n \n class ArrayPrinter : public PrettyPrinter {\n  public:\n-  ArrayPrinter(const Array& array, int indent, std::ostream* sink)\n-      : PrettyPrinter(indent, sink), array_(array) {}\n+  ArrayPrinter(const Array& array, int indent, int window, std::ostream* sink)\n+      : PrettyPrinter(indent, window, sink), array_(array) {}\n \n-  template <typename T>\n-  inline typename std::enable_if<IsInteger<T>::value, void>::type WriteDataValues(\n-      const T& array) {\n-    const auto data = array.raw_values();\n+  void WriteValues(const Array& array, std::function<void(int)> func) {\n+    bool skip_comma = true;\n     for (int i = 0; i < array.length(); ++i) {\n \n Review comment:\n   This probably will cause Windows to error anyway =) \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T17:22:36.676+0000",
                    "updated": "2018-07-19T17:22:36.676+0000",
                    "started": "2018-07-19T17:22:36.675+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125132",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/125225",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203856760\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print-test.cc\n ##########\n @@ -64,36 +73,82 @@ void Check(const T& obj, const PrettyPrintOptions& options, const char* expected\n }\n \n template <typename TYPE, typename C_TYPE>\n-void CheckPrimitive(int indent, const std::vector<bool>& is_valid,\n+void CheckPrimitive(const PrettyPrintOptions& options, const std::vector<bool>& is_valid,\n                     const std::vector<C_TYPE>& values, const char* expected) {\n   std::shared_ptr<Array> array;\n   ArrayFromVector<TYPE, C_TYPE>(is_valid, values, &array);\n-  CheckArray(*array, indent, expected);\n+  CheckArray(*array, options, expected);\n }\n \n TEST_F(TestPrettyPrint, PrimitiveType) {\n   std::vector<bool> is_valid = {true, true, false, true, false};\n \n   std::vector<int32_t> values = {0, 1, 2, 3, 4};\n-  static const char* expected = R\"expected([0, 1, null, 3, null])expected\";\n-  CheckPrimitive<Int32Type, int32_t>(0, is_valid, values, expected);\n-\n-  std::vector<std::string> values2 = {\"foo\", \"bar\", \"\", \"baz\", \"\"};\n-  static const char* ex2 = R\"expected([\"foo\", \"bar\", null, \"baz\", null])expected\";\n-  CheckPrimitive<StringType, std::string>(0, is_valid, values2, ex2);\n+  static const char* expected = \"[\\n  0,\\n  1,\\n  NA,\\n  3,\\n  NA\\n]\";\n \n Review comment:\n   We could add an `enum` or a `std::string` in `PrettyPrintOptions`. @wesm Feel free to do what you think works best.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T20:20:30.963+0000",
                    "updated": "2018-07-19T20:20:30.963+0000",
                    "started": "2018-07-19T20:20:30.963+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125225",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/125226",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203857668\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print-test.cc\n ##########\n @@ -144,11 +202,72 @@ TEST_F(TestPrettyPrint, DictionaryType) {\n   auto arr = std::make_shared<DictionaryArray>(dict_type, indices);\n \n   static const char* expected = R\"expected(\n--- is_valid: [true, true, false, true, true, true]\n--- dictionary: [\"foo\", \"bar\", \"baz\"]\n--- indices: [1, 2, null, 0, 2, 0])expected\";\n+-- is_valid:\n+  [\n+    true,\n+    true,\n+    false,\n+    true,\n+    true,\n+    true\n+  ]\n+-- dictionary:\n+  [\n+    \"foo\",\n+    \"bar\",\n+    \"baz\"\n+  ]\n+-- indices:\n+  [\n+    1,\n+    2,\n+    NA,\n \n Review comment:\n   Sure, opened https://issues.apache.org/jira/browse/ARROW-2885 for that\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T20:20:31.210+0000",
                    "updated": "2018-07-19T20:20:31.210+0000",
                    "started": "2018-07-19T20:20:31.209+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125226",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/125227",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203857912\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print.cc\n ##########\n @@ -84,121 +100,120 @@ void PrettyPrinter::Indent() {\n \n class ArrayPrinter : public PrettyPrinter {\n  public:\n-  ArrayPrinter(const Array& array, int indent, std::ostream* sink)\n-      : PrettyPrinter(indent, sink), array_(array) {}\n+  ArrayPrinter(const Array& array, int indent, int window, std::ostream* sink)\n+      : PrettyPrinter(indent, window, sink), array_(array) {}\n \n-  template <typename T>\n-  inline typename std::enable_if<IsInteger<T>::value, void>::type WriteDataValues(\n-      const T& array) {\n-    const auto data = array.raw_values();\n+  void WriteValues(const Array& array, std::function<void(int)> func) {\n \n Review comment:\n   We should treat all code the same to always have good examples. Even though this is not performance-critical, I will do the change.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T20:20:31.227+0000",
                    "updated": "2018-07-19T20:20:31.227+0000",
                    "started": "2018-07-19T20:20:31.227+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125227",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/125228",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203857017\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print-test.cc\n ##########\n @@ -144,11 +202,72 @@ TEST_F(TestPrettyPrint, DictionaryType) {\n   auto arr = std::make_shared<DictionaryArray>(dict_type, indices);\n \n   static const char* expected = R\"expected(\n--- is_valid: [true, true, false, true, true, true]\n--- dictionary: [\"foo\", \"bar\", \"baz\"]\n--- indices: [1, 2, null, 0, 2, 0])expected\";\n+-- is_valid:\n+  [\n+    true,\n+    true,\n+    false,\n+    true,\n+    true,\n+    true\n+  ]\n \n Review comment:\n   Yes, this should go.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T20:20:31.251+0000",
                    "updated": "2018-07-19T20:20:31.251+0000",
                    "started": "2018-07-19T20:20:31.251+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125228",
                    "issueId": "13066524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/worklog/125229",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on a change in pull request #2278: ARROW-889: [Python/C++] Unify PrettyPrints between Python and C++\nURL: https://github.com/apache/arrow/pull/2278#discussion_r203858167\n \n \n\n ##########\n File path: cpp/src/arrow/pretty_print.cc\n ##########\n @@ -84,121 +100,120 @@ void PrettyPrinter::Indent() {\n \n class ArrayPrinter : public PrettyPrinter {\n  public:\n-  ArrayPrinter(const Array& array, int indent, std::ostream* sink)\n-      : PrettyPrinter(indent, sink), array_(array) {}\n+  ArrayPrinter(const Array& array, int indent, int window, std::ostream* sink)\n+      : PrettyPrinter(indent, window, sink), array_(array) {}\n \n-  template <typename T>\n-  inline typename std::enable_if<IsInteger<T>::value, void>::type WriteDataValues(\n-      const T& array) {\n-    const auto data = array.raw_values();\n+  void WriteValues(const Array& array, std::function<void(int)> func) {\n+    bool skip_comma = true;\n     for (int i = 0; i < array.length(); ++i) {\n-      if (i > 0) {\n-        (*sink_) << \", \";\n+      if (skip_comma) {\n+        skip_comma = false;\n+      } else {\n+        (*sink_) << \",\\n\";\n       }\n-      if (array.IsNull(i)) {\n-        (*sink_) << \"null\";\n+      Indent();\n+      if ((i >= window_) && (i < (array.length() - window_))) {\n+        (*sink_) << \"...\\n\";\n+        i = array.length() - window_ - 1;\n+        skip_comma = true;\n+      } else if (array.IsNull(i)) {\n+        (*sink_) << \"NA\";\n       } else {\n-        (*sink_) << static_cast<int64_t>(data[i]);\n+        func(i);\n       }\n     }\n+    (*sink_) << \"\\n\";\n   }\n \n   template <typename T>\n-  inline typename std::enable_if<IsFloatingPoint<T>::value, void>::type WriteDataValues(\n+  inline typename std::enable_if<IsInteger<T>::value, Status>::type WriteDataValues(\n       const T& array) {\n     const auto data = array.raw_values();\n-    for (int i = 0; i < array.length(); ++i) {\n-      if (i > 0) {\n-        (*sink_) << \", \";\n-      }\n-      if (array.IsNull(i)) {\n-        Write(\"null\");\n-      } else {\n-        (*sink_) << data[i];\n-      }\n-    }\n+    WriteValues(array, [&](int i) { (*sink_) << static_cast<int64_t>(data[i]); });\n \n Review comment:\n   Not sure why we have the cast. I kept it as we had it in the original code I have refactored. I will remove it and see if it makes problems for the Windows build.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T20:20:31.271+0000",
                    "updated": "2018-07-19T20:20:31.271+0000",
                    "started": "2018-07-19T20:20:31.270+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125229",
                    "issueId": "13066524"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7b1e7ac2[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4d1ee98b[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@779e5f93[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4d76a25a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f5def1a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@779d5ac3[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72fae164[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@a66e913[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ad3f27a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@785e8a1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2251c8f4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1f4283dc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13200,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Jul 21 17:25:27 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-07-21T17:25:27.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-889/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2017-04-24T23:40:02.000+0000",
        "updated": "2018-07-21T17:25:37.000+0000",
        "timeoriginalestimate": null,
        "description": "At the moment {{repr}} only outputs the default {{\"<pyarrow.lib.ChunkedArray at 0x7ff48e1d9c30>\"}} whereas the underlying {{pyarrow.Array}} class has an informative output.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Implement arrow::PrettyPrint for ChunkedArray",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/comment/15982126",
                    "id": "15982126",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "I hope that it's implemented in C++. If it's implemented in C++, GLib bindings (and Ruby bindings) can also use it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2017-04-24T23:45:26.986+0000",
                    "updated": "2017-04-24T23:45:26.986+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/comment/16088791",
                    "id": "16088791",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Let me see if I can extend PrettyPrint to column, and add some limit to truncate long output (e.g. showing only first 25 and last 25 values with ellipsis in the middle)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-07-16T03:28:20.297+0000",
                    "updated": "2017-07-16T03:28:20.297+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/comment/16089169",
                    "id": "16089169",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Taking this off the 0.5.0 release. [~kou] feel free to tackle this one if you have time. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-07-16T22:47:30.527+0000",
                    "updated": "2017-07-16T22:47:30.527+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/comment/16089873",
                    "id": "16089873",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "bq. [~kou] feel free to tackle this one if you have time.\n\nOK but I don't have time for now.\nIf someone doesn't try this until I have time, I'll try this.\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2017-07-17T14:00:24.335+0000",
                    "updated": "2017-07-17T14:00:24.335+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/comment/16442686",
                    "id": "16442686",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Currently the repr output looks like the following:\r\n\r\n{code}\r\n<pyarrow.lib.Column object at 0x10996da20>\r\nchunk 0: <pyarrow.lib.Int64Array object at 0x115a21bd8>\r\n[\r\n  1,\r\n  2\r\n]\r\n{code}\r\n\r\nFor me, this would be sufficient.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-04-18T15:23:12.362+0000",
                    "updated": "2018-04-18T15:23:12.362+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/comment/16527538",
                    "id": "16527538",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "[~wesmckinn] This seems like an already resolved one",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2018-06-29T12:17:28.932+0000",
                    "updated": "2018-06-29T12:17:28.932+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/comment/16527544",
                    "id": "16527544",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Perhaps let's implement {{PrettyPrint}} for ChunkedArray, then GLib can also use this. I will rename the issue",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-06-29T12:20:16.171+0000",
                    "updated": "2018-06-29T12:20:16.171+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/comment/16527546",
                    "id": "16527546",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Moved out of 0.10.0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-06-29T12:20:48.637+0000",
                    "updated": "2018-06-29T12:20:48.637+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13066524/comment/16551783",
                    "id": "16551783",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 2278\n[https://github.com/apache/arrow/pull/2278]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-07-21T17:25:27.328+0000",
                    "updated": "2018-07-21T17:25:27.328+0000"
                }
            ],
            "maxResults": 9,
            "total": 9,
            "startAt": 0
        },
        "customfield_12311820": "0|i3e1gn:",
        "customfield_12314139": null
    }
}