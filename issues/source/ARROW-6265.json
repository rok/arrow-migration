{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13251160",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160",
    "key": "ARROW-6265",
    "fields": {
        "parent": {
            "id": "13243176",
            "key": "ARROW-5845",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13243176",
            "fields": {
                "summary": "[Java] Implement converter between Arrow record batches and Avro records",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/4",
                    "description": "This issue was once resolved, but the resolution was deemed incorrect. From here issues are either marked assigned or resolved.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/reopened.png",
                    "name": "Reopened",
                    "id": "4",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                        "id": 2,
                        "key": "new",
                        "colorName": "blue-gray",
                        "name": "To Do"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "name": "Critical",
            "id": "2"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "aggregateprogress": {
            "progress": 44400,
            "total": 44400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 44400,
            "total": 44400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6265/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 79,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/296079",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099\n \n \n   Related to [ARROW-6225](https://issues.apache.org/jira/browse/ARROW-6265).\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-16T05:33:36.617+0000",
                    "updated": "2019-08-16T05:33:36.617+0000",
                    "started": "2019-08-16T05:33:36.616+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296079",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/296083",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#issuecomment-521890447\n \n \n   cc @emkornfield \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-16T05:35:42.951+0000",
                    "updated": "2019-08-16T05:35:42.951+0000",
                    "started": "2019-08-16T05:35:42.950+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296083",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/296700",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#discussion_r314932165\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -164,6 +182,33 @@ private static Consumer createConsumer(\n     return consumer;\n   }\n \n+  private static Consumer createArrayConsumer(Schema schema, String name, BufferAllocator allocator) {\n+\n+    Consumer delegate = createConsumer(schema.getElementType(), schema.getElementType().getName(), allocator);\n+    ListVector listVector = ListVector.empty(name, allocator);\n+    listVector.setDataVector(delegate.getVector());\n+\n+    return new AvroArraysConsumer(listVector, delegate);\n+  }\n+\n+  private static Consumer createMapConsumer(Schema schema, String name, BufferAllocator allocator) {\n+\n+    StructVector structVector =\n+        new StructVector(name, allocator, FieldType.nullable(ArrowType.Struct.INSTANCE), null);\n \n Review comment:\n   comment.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-17T02:56:13.914+0000",
                    "updated": "2019-08-17T02:56:13.914+0000",
                    "started": "2019-08-17T02:56:13.914+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296700",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/296701",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#discussion_r314932172\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -164,6 +182,33 @@ private static Consumer createConsumer(\n     return consumer;\n   }\n \n+  private static Consumer createArrayConsumer(Schema schema, String name, BufferAllocator allocator) {\n+\n+    Consumer delegate = createConsumer(schema.getElementType(), schema.getElementType().getName(), allocator);\n+    ListVector listVector = ListVector.empty(name, allocator);\n+    listVector.setDataVector(delegate.getVector());\n+\n+    return new AvroArraysConsumer(listVector, delegate);\n+  }\n+\n+  private static Consumer createMapConsumer(Schema schema, String name, BufferAllocator allocator) {\n+\n+    StructVector structVector =\n+        new StructVector(name, allocator, FieldType.nullable(ArrowType.Struct.INSTANCE), null);\n+\n+    Consumer keyConsumer = new AvroStringConsumer(new VarCharVector(\"key\", allocator));\n+    Consumer valueConsumer = createConsumer(schema.getValueType(), schema.getValueType().getName(), allocator);\n+\n+    structVector.putChild(keyConsumer.getVector().getField().getName(), keyConsumer.getVector());\n+    structVector.putChild(valueConsumer.getVector().getField().getName(), valueConsumer.getVector());\n+    structVector.allocateNewSafe();\n+\n+    MapVector mapVector = MapVector.empty(name, allocator, false);\n \n Review comment:\n   comment\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-17T02:56:22.955+0000",
                    "updated": "2019-08-17T02:56:22.955+0000",
                    "started": "2019-08-17T02:56:22.955+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296701",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/296704",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#discussion_r314932417\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroArraysConsumer.java\n ##########\n @@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.avro.io.Decoder;\n+\n+/**\n+ * Consumer which consume int type values from avro decoder.\n+ * Write the data to {@link ListVector}.\n+ */\n+public class AvroArraysConsumer implements Consumer {\n+\n+  private final ListVector vector;\n+\n+  private final Consumer delegate;\n+\n+  /**\n+   * Instantiate a ArrayConsumer.\n+   */\n+  public AvroArraysConsumer(ListVector vector, Consumer delegete) {\n+    this.vector = vector;\n+    this.delegate = delegete;\n+  }\n+\n+  @Override\n+  public void consume(Decoder decoder) throws IOException {\n+    int count = (int) decoder.arrayNext();\n+\n+    int idx = vector.getValueCount();\n+    vector.startNewValue(idx);\n+    for (int i = 0; i < count; i++) {\n+      delegate.consume(decoder);\n+    }\n+    decoder.skipArray();\n+\n+    int end = vector.getOffsetBuffer().getInt(idx * 4) + count;\n+    vector.getOffsetBuffer().setInt((idx + 1) * 4, end);\n+    BitVectorHelper.setValidityBitToOne(vector.getValidityBuffer(), vector.getValueCount());\n+\n+    vector.setValueCount(idx + 1);\n+  }\n+\n+  @Override\n+  public void addNull() {\n+    vector.setValueCount(vector.getValueCount() + 1);\n \n Review comment:\n   Just a note, I rediscored today that setValueCount is not cheap.. we aren't focused on performance yet so this is OK. However, we should come up with a strategy to pre-allocate and avoid this call till the end of a batch (we should similarly not use writer since it calls setValueCount under the hood) this also assumes we add a benchmark for avro at some point.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-17T03:09:25.131+0000",
                    "updated": "2019-08-17T03:09:25.131+0000",
                    "started": "2019-08-17T03:09:25.131+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296704",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/296706",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#discussion_r314932451\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroArraysConsumer.java\n ##########\n @@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.avro.io.Decoder;\n+\n+/**\n+ * Consumer which consume int type values from avro decoder.\n+ * Write the data to {@link ListVector}.\n+ */\n+public class AvroArraysConsumer implements Consumer {\n+\n+  private final ListVector vector;\n+\n+  private final Consumer delegate;\n+\n+  /**\n+   * Instantiate a ArrayConsumer.\n+   */\n+  public AvroArraysConsumer(ListVector vector, Consumer delegete) {\n+    this.vector = vector;\n+    this.delegate = delegete;\n+  }\n+\n+  @Override\n+  public void consume(Decoder decoder) throws IOException {\n+    int count = (int) decoder.arrayNext();\n \n Review comment:\n   this doesn't look right, at least accoding to the docs, \r\n   https://avro.apache.org/docs/1.8.1/api/java/org/apache/avro/io/ValidatingDecoder.html#readArrayStart()\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-17T03:11:28.118+0000",
                    "updated": "2019-08-17T03:11:28.118+0000",
                    "started": "2019-08-17T03:11:28.118+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296706",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/296713",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#discussion_r314933583\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -164,6 +182,33 @@ private static Consumer createConsumer(\n     return consumer;\n   }\n \n+  private static Consumer createArrayConsumer(Schema schema, String name, BufferAllocator allocator) {\n+\n+    Consumer delegate = createConsumer(schema.getElementType(), schema.getElementType().getName(), allocator);\n+    ListVector listVector = ListVector.empty(name, allocator);\n+    listVector.setDataVector(delegate.getVector());\n+\n+    return new AvroArraysConsumer(listVector, delegate);\n+  }\n+\n+  private static Consumer createMapConsumer(Schema schema, String name, BufferAllocator allocator) {\n+\n+    StructVector structVector =\n+        new StructVector(name, allocator, FieldType.nullable(ArrowType.Struct.INSTANCE), null);\n \n Review comment:\n   fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-17T04:09:32.674+0000",
                    "updated": "2019-08-17T04:09:32.674+0000",
                    "started": "2019-08-17T04:09:32.674+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296713",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/296714",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#discussion_r314933586\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -164,6 +182,33 @@ private static Consumer createConsumer(\n     return consumer;\n   }\n \n+  private static Consumer createArrayConsumer(Schema schema, String name, BufferAllocator allocator) {\n+\n+    Consumer delegate = createConsumer(schema.getElementType(), schema.getElementType().getName(), allocator);\n+    ListVector listVector = ListVector.empty(name, allocator);\n+    listVector.setDataVector(delegate.getVector());\n+\n+    return new AvroArraysConsumer(listVector, delegate);\n+  }\n+\n+  private static Consumer createMapConsumer(Schema schema, String name, BufferAllocator allocator) {\n+\n+    StructVector structVector =\n+        new StructVector(name, allocator, FieldType.nullable(ArrowType.Struct.INSTANCE), null);\n+\n+    Consumer keyConsumer = new AvroStringConsumer(new VarCharVector(\"key\", allocator));\n+    Consumer valueConsumer = createConsumer(schema.getValueType(), schema.getValueType().getName(), allocator);\n+\n+    structVector.putChild(keyConsumer.getVector().getField().getName(), keyConsumer.getVector());\n+    structVector.putChild(valueConsumer.getVector().getField().getName(), valueConsumer.getVector());\n+    structVector.allocateNewSafe();\n+\n+    MapVector mapVector = MapVector.empty(name, allocator, false);\n \n Review comment:\n   fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-17T04:09:41.576+0000",
                    "updated": "2019-08-17T04:09:41.576+0000",
                    "started": "2019-08-17T04:09:41.576+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296714",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/296716",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#discussion_r314933633\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroArraysConsumer.java\n ##########\n @@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.avro.io.Decoder;\n+\n+/**\n+ * Consumer which consume int type values from avro decoder.\n+ * Write the data to {@link ListVector}.\n+ */\n+public class AvroArraysConsumer implements Consumer {\n+\n+  private final ListVector vector;\n+\n+  private final Consumer delegate;\n+\n+  /**\n+   * Instantiate a ArrayConsumer.\n+   */\n+  public AvroArraysConsumer(ListVector vector, Consumer delegete) {\n+    this.vector = vector;\n+    this.delegate = delegete;\n+  }\n+\n+  @Override\n+  public void consume(Decoder decoder) throws IOException {\n+    int count = (int) decoder.arrayNext();\n+\n+    int idx = vector.getValueCount();\n+    vector.startNewValue(idx);\n+    for (int i = 0; i < count; i++) {\n+      delegate.consume(decoder);\n+    }\n+    decoder.skipArray();\n+\n+    int end = vector.getOffsetBuffer().getInt(idx * 4) + count;\n+    vector.getOffsetBuffer().setInt((idx + 1) * 4, end);\n+    BitVectorHelper.setValidityBitToOne(vector.getValidityBuffer(), vector.getValueCount());\n+\n+    vector.setValueCount(idx + 1);\n+  }\n+\n+  @Override\n+  public void addNull() {\n+    vector.setValueCount(vector.getValueCount() + 1);\n \n Review comment:\n   Ok, I would think about this as a follow up, thanks.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-17T04:11:19.221+0000",
                    "updated": "2019-08-17T04:11:19.221+0000",
                    "started": "2019-08-17T04:11:19.221+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296716",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/296717",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#discussion_r314933643\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroArraysConsumer.java\n ##########\n @@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.avro.io.Decoder;\n+\n+/**\n+ * Consumer which consume int type values from avro decoder.\n+ * Write the data to {@link ListVector}.\n+ */\n+public class AvroArraysConsumer implements Consumer {\n+\n+  private final ListVector vector;\n+\n+  private final Consumer delegate;\n+\n+  /**\n+   * Instantiate a ArrayConsumer.\n+   */\n+  public AvroArraysConsumer(ListVector vector, Consumer delegete) {\n+    this.vector = vector;\n+    this.delegate = delegete;\n+  }\n+\n+  @Override\n+  public void consume(Decoder decoder) throws IOException {\n+    int count = (int) decoder.arrayNext();\n \n Review comment:\n   Right, fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-17T04:11:53.391+0000",
                    "updated": "2019-08-17T04:11:53.391+0000",
                    "started": "2019-08-17T04:11:53.390+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296717",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/297378",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#issuecomment-522727864\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5099?src=pr&el=h1) Report\n   > Merging [#5099](https://codecov.io/gh/apache/arrow/pull/5099?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/2ba0566b29312e84fafc987fd8dc9664748be96a?src=pr&el=desc) will **increase** coverage by `2.08%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5099/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5099?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5099      +/-   ##\n   ==========================================\n   + Coverage   87.64%   89.72%   +2.08%     \n   ==========================================\n     Files        1014      674     -340     \n     Lines      145922   101411   -44511     \n     Branches     1437        0    -1437     \n   ==========================================\n   - Hits       127887    90996   -36891     \n   + Misses      17673    10415    -7258     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5099?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/5099/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `97.66% <0%> (-0.94%)` | :arrow_down: |\n   | [python/pyarrow/tests/test\\_array.py](https://codecov.io/gh/apache/arrow/pull/5099/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9hcnJheS5weQ==) | `96% <0%> (-0.36%)` | :arrow_down: |\n   | [cpp/src/arrow/python/python\\_to\\_arrow.cc](https://codecov.io/gh/apache/arrow/pull/5099/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vcHl0aG9uX3RvX2Fycm93LmNj) | `91.04% <0%> (-0.26%)` | :arrow_down: |\n   | [cpp/src/arrow/ipc/reader.cc](https://codecov.io/gh/apache/arrow/pull/5099/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvcmVhZGVyLmNj) | `89.09% <0%> (-0.18%)` | :arrow_down: |\n   | [python/pyarrow/tests/test\\_parquet.py](https://codecov.io/gh/apache/arrow/pull/5099/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wYXJxdWV0LnB5) | `96.4% <0%> (-0.04%)` | :arrow_down: |\n   | [cpp/src/arrow/stl.h](https://codecov.io/gh/apache/arrow/pull/5099/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zdGwuaA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/stl-test.cc](https://codecov.io/gh/apache/arrow/pull/5099/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zdGwtdGVzdC5jYw==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/5099/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/5099/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/5099/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | ... and [340 more](https://codecov.io/gh/apache/arrow/pull/5099/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5099?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5099?src=pr&el=footer). Last update [2ba0566...bb5346e](https://codecov.io/gh/apache/arrow/pull/5099?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-19T19:50:50.039+0000",
                    "updated": "2019-08-19T19:50:50.039+0000",
                    "started": "2019-08-19T19:50:50.038+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297378",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/297582",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#discussion_r315493680\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -164,6 +182,33 @@ private static Consumer createConsumer(\n     return consumer;\n   }\n \n+  private static Consumer createArrayConsumer(Schema schema, String name, BufferAllocator allocator) {\n+\n+    Consumer delegate = createConsumer(schema.getElementType(), schema.getElementType().getName(), allocator);\n+    ListVector listVector = ListVector.empty(name, allocator);\n+    listVector.setDataVector(delegate.getVector());\n+\n+    return new AvroArraysConsumer(listVector, delegate);\n+  }\n+\n+  private static Consumer createMapConsumer(Schema schema, String name, BufferAllocator allocator) {\n+\n+    StructVector structVector =\n+        new StructVector(name, allocator, FieldType.nullable(ArrowType.Struct.INSTANCE), null);\n \n Review comment:\n   sorry I forget that github doesn't support highlighting code, I meant comment what the null value is.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T03:28:08.436+0000",
                    "updated": "2019-08-20T03:28:08.436+0000",
                    "started": "2019-08-20T03:28:08.436+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297582",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/297583",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#discussion_r315493806\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroArraysConsumer.java\n ##########\n @@ -0,0 +1,95 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.avro.io.Decoder;\n+\n+/**\n+ * Consumer which consume int type values from avro decoder.\n \n Review comment:\n   copy/paste error?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T03:28:57.319+0000",
                    "updated": "2019-08-20T03:28:57.319+0000",
                    "started": "2019-08-20T03:28:57.319+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297583",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/297584",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#discussion_r315494119\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroArraysConsumer.java\n ##########\n @@ -0,0 +1,95 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.avro.io.Decoder;\n+\n+/**\n+ * Consumer which consume int type values from avro decoder.\n+ * Write the data to {@link ListVector}.\n+ */\n+public class AvroArraysConsumer implements Consumer {\n+\n+  private final ListVector vector;\n+\n+  private final Consumer delegate;\n+\n+  /**\n+   * Indicated whether has read the first block of this array.\n+   */\n+  private boolean firstRead;\n+\n+  /**\n+   * Instantiate a ArrayConsumer.\n+   */\n+  public AvroArraysConsumer(ListVector vector, Consumer delegete) {\n+    this.vector = vector;\n+    this.delegate = delegete;\n+  }\n+\n+  @Override\n+  public void consume(Decoder decoder) throws IOException {\n+\n+    long count;\n+    if (!firstRead) {\n \n Review comment:\n   I think this needs to be in a loop?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T03:30:56.630+0000",
                    "updated": "2019-08-20T03:30:56.630+0000",
                    "started": "2019-08-20T03:30:56.630+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297584",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/297587",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#discussion_r315494308\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroFixedConsumer.java\n ##########\n @@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.FixedSizeBinaryVector;\n+import org.apache.arrow.vector.complex.impl.FixedSizeBinaryWriterImpl;\n+import org.apache.arrow.vector.complex.writer.FixedSizeBinaryWriter;\n+import org.apache.avro.io.Decoder;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Consumer which consume fixed type values from avro decoder.\n+ * Write the data to {@link org.apache.arrow.vector.FixedSizeBinaryVector}.\n+ */\n+public class AvroFixedConsumer implements Consumer {\n+\n+  private final FixedSizeBinaryWriter writer;\n+  private final FixedSizeBinaryVector vector;\n+\n+  private final ArrowBuf cacheBuffer;\n+  private final byte[] reuseBytes;\n+\n+  /**\n+   * Instantiate a AvroFixedConsumer.\n+   */\n+  public AvroFixedConsumer(FixedSizeBinaryVector vector, int size) {\n+    this.vector = vector;\n+    this.writer = new FixedSizeBinaryWriterImpl(vector);\n+    cacheBuffer = vector.getAllocator().buffer(size);\n+    reuseBytes = new byte[size];\n+  }\n+\n+  @Override\n+  public void consume(Decoder decoder) throws IOException {\n+    decoder.readFixed(reuseBytes);\n+    cacheBuffer.setBytes(0, reuseBytes);\n \n Review comment:\n   I think I keep asking this, but is it possible to avoid the cachebuffer and instead copy the bytes directly into  the FixedSizedBinaryVector?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T03:32:16.634+0000",
                    "updated": "2019-08-20T03:32:16.634+0000",
                    "started": "2019-08-20T03:32:16.633+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297587",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/297588",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#discussion_r315494413\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroMapConsumer.java\n ##########\n @@ -0,0 +1,106 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.complex.MapVector;\n+import org.apache.avro.io.Decoder;\n+\n+/**\n+ * Consumer which consume map type values from avro decoder.\n+ * Write the data to {@link MapVector}.\n+ */\n+public class AvroMapConsumer implements Consumer {\n+\n+  private final MapVector vector;\n+\n+  private final Consumer keyDelegate;\n+  private final Consumer valueDelegate;\n+\n+  /**\n+   * Indicated whether has read the first block of this map.\n+   */\n+  private boolean firstRead;\n+\n+  /**\n+   * Instantiate a AvroMapConsumer.\n+   */\n+  public AvroMapConsumer(MapVector vector, Consumer keyDelegate, Consumer valueDelegate) {\n+    this.vector = vector;\n+    this.keyDelegate = keyDelegate;\n+    this.valueDelegate = valueDelegate;\n+  }\n+\n+  @Override\n+  public void consume(Decoder decoder) throws IOException {\n+    long count;\n+    if (!firstRead) {\n \n Review comment:\n   I think you need to loop here inside of consume.  I believe the logic is one call to consume should read one row worth of data.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T03:33:03.404+0000",
                    "updated": "2019-08-20T03:33:03.404+0000",
                    "started": "2019-08-20T03:33:03.403+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297588",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/297589",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#discussion_r315494445\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroArraysConsumer.java\n ##########\n @@ -0,0 +1,95 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.avro.io.Decoder;\n+\n+/**\n+ * Consumer which consume int type values from avro decoder.\n+ * Write the data to {@link ListVector}.\n+ */\n+public class AvroArraysConsumer implements Consumer {\n+\n+  private final ListVector vector;\n+\n+  private final Consumer delegate;\n+\n+  /**\n+   * Indicated whether has read the first block of this array.\n+   */\n+  private boolean firstRead;\n+\n+  /**\n+   * Instantiate a ArrayConsumer.\n+   */\n+  public AvroArraysConsumer(ListVector vector, Consumer delegete) {\n+    this.vector = vector;\n+    this.delegate = delegete;\n+  }\n+\n+  @Override\n+  public void consume(Decoder decoder) throws IOException {\n+\n+    long count;\n+    if (!firstRead) {\n \n Review comment:\n   something like this?\r\n   \r\n   >if (!firstRead) {\r\n         count = decoder.readMapStart();\r\n         firstRead = true;\r\n       } else {\r\n         do {\r\n           count = decoder.mapNext();\r\n         } while (count == 0);\r\n       }\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T03:33:17.501+0000",
                    "updated": "2019-08-20T03:33:17.501+0000",
                    "started": "2019-08-20T03:33:17.501+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297589",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/297591",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#issuecomment-522839770\n \n \n   sorry haven't gotten all the way through the review, will try to so later.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T03:38:59.790+0000",
                    "updated": "2019-08-20T03:38:59.790+0000",
                    "started": "2019-08-20T03:38:59.789+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297591",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/297668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#discussion_r315551215\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroMapConsumer.java\n ##########\n @@ -0,0 +1,106 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.complex.MapVector;\n+import org.apache.avro.io.Decoder;\n+\n+/**\n+ * Consumer which consume map type values from avro decoder.\n+ * Write the data to {@link MapVector}.\n+ */\n+public class AvroMapConsumer implements Consumer {\n+\n+  private final MapVector vector;\n+\n+  private final Consumer keyDelegate;\n+  private final Consumer valueDelegate;\n+\n+  /**\n+   * Indicated whether has read the first block of this map.\n+   */\n+  private boolean firstRead;\n+\n+  /**\n+   * Instantiate a AvroMapConsumer.\n+   */\n+  public AvroMapConsumer(MapVector vector, Consumer keyDelegate, Consumer valueDelegate) {\n+    this.vector = vector;\n+    this.keyDelegate = keyDelegate;\n+    this.valueDelegate = valueDelegate;\n+  }\n+\n+  @Override\n+  public void consume(Decoder decoder) throws IOException {\n+    long count;\n+    if (!firstRead) {\n \n Review comment:\n   Not quite understand here, can you prototype something in you mind? thanks\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T07:53:12.752+0000",
                    "updated": "2019-08-20T07:53:12.752+0000",
                    "started": "2019-08-20T07:53:12.752+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297668",
                    "issueId": "13251160"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/worklog/297863",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5099: ARROW-6265: [Java] Avro adapter implement Array/Map/Fixed type\nURL: https://github.com/apache/arrow/pull/5099#discussion_r315494445\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroArraysConsumer.java\n ##########\n @@ -0,0 +1,95 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.avro.io.Decoder;\n+\n+/**\n+ * Consumer which consume int type values from avro decoder.\n+ * Write the data to {@link ListVector}.\n+ */\n+public class AvroArraysConsumer implements Consumer {\n+\n+  private final ListVector vector;\n+\n+  private final Consumer delegate;\n+\n+  /**\n+   * Indicated whether has read the first block of this array.\n+   */\n+  private boolean firstRead;\n+\n+  /**\n+   * Instantiate a ArrayConsumer.\n+   */\n+  public AvroArraysConsumer(ListVector vector, Consumer delegete) {\n+    this.vector = vector;\n+    this.delegate = delegete;\n+  }\n+\n+  @Override\n+  public void consume(Decoder decoder) throws IOException {\n+\n+    long count;\n+    if (!firstRead) {\n \n Review comment:\n   something like this?\r\n   \r\n   >if (!firstRead) {\r\n         count = decoder.readMapStart();\r\n         firstRead = true;\r\n       } else {\r\n         do {\r\n           count = decoder.mapNext();\r\n         } while (count == 0);\r\n       }\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T13:28:12.442+0000",
                    "updated": "2019-08-20T13:28:12.442+0000",
                    "started": "2019-08-20T13:28:12.441+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297863",
                    "issueId": "13251160"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 44400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3af6b1eb[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@719f5334[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5cbbf320[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@57360d70[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7568fce4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4d575423[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ef69c5a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@29cc4579[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b711378[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6cf0aa79[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@161efff1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5db287c6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 44400,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Aug 31 04:03:14 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-31T04:03:14.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6265/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-08-16T05:31:15.000+0000",
        "updated": "2019-08-31T04:03:14.000+0000",
        "timeoriginalestimate": null,
        "description": "Support Array/Map/Fixed type in avro adapter.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "12h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 44400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Avro adapter implement Array/Map/Fixed type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251160/comment/16920006",
                    "id": "16920006",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 5099\n[https://github.com/apache/arrow/pull/5099]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-31T04:03:14.662+0000",
                    "updated": "2019-08-31T04:03:14.662+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z05q34:",
        "customfield_12314139": null
    }
}