{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13165620",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620",
    "key": "ARROW-2701",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
            "name": "alendit",
            "key": "alendit",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dimitri Vorona",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
            "name": "alendit",
            "key": "alendit",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dimitri Vorona",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
            "name": "alendit",
            "key": "alendit",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dimitri Vorona",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 40800,
            "total": 40800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/customFieldOption/10430",
                "value": "Patch",
                "id": "10430",
                "disabled": false
            }
        ],
        "progress": {
            "progress": 40800,
            "total": 40800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2701/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 74,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/112036",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r195551352\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -402,6 +404,35 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n     return Status::OK();\n   }\n \n+  Status Resize(const int64_t new_size, bool shrink_to_fit = false) {\n+    if (!shrink_to_fit || (new_size > capacity_)) {\n+      RETURN_NOT_OK(Reserve(new_size));\n+    } else {\n+      // shrink\n+      if (new_size == 0) {\n+        return Status::IOError(\"Cannot resize mmap to zero size\");\n+      }\n+      void* result;\n+      RETURN_NOT_OK(resizeMap(new_size, result));\n \n Review comment:\n   I'm surprised this works having not looked at the implementation yet. Shouldn't this be `&result`?\r\n   \r\n   Also, please rename function `ResizeMap` (to conform with project style guide) \r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-14T20:12:46.556+0000",
                    "updated": "2018-06-14T20:12:46.556+0000",
                    "started": "2018-06-14T20:12:46.556+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112036",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/112214",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r195651510\n \n \n\n ##########\n File path: cpp/src/arrow/io/mremap.h\n ##########\n @@ -0,0 +1,80 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+#ifdef _WIN32\n+#include \"arrow/io/mman.h\"\n+#undef Realloc\n+#undef Free\n+#else\n+#include <sys/mman.h>\n+#include <unistd.h>\n+#endif\n+\n+// define a wrapper around mremap which the same arguments on linux and on windows\n+// should only be called with writable files\n+static void* arrow_mremap(void* addr, size_t old_size, size_t new_size, int fildes) {\n+#ifdef _WIN32\n+  // flags are ignored on windows\n+  void* new_addr = MAP_FAILED;\n+  HANDLE fm, h;\n+  DWORD dwErrCode = 0;\n+\n+  /* First, unmap the file view */\n \n Review comment:\n   Good eye! As I mentioned in the JIRA ticket, the windows logic came form [Python mmap module](https://github.com/python/cpython/blob/master/Modules/mmapmodule.c#L472). I've changed it line for line and overlooked the initial comment. I think it's sufficiently different, but please take a look.I'll remove the comment, since it doesn't add anything of value.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T07:24:33.817+0000",
                    "updated": "2018-06-15T07:24:33.817+0000",
                    "started": "2018-06-15T07:24:33.817+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112214",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/112215",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r195652036\n \n \n\n ##########\n File path: cpp/src/arrow/io/mremap.h\n ##########\n @@ -0,0 +1,80 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+#ifdef _WIN32\n+#include \"arrow/io/mman.h\"\n \n Review comment:\n   Since `mman.h` ist a kind of 3rd party library and deals specifically with mmap on windows, I thought it would be better to have a separate file for `mremap` functionality on all three systems. This way it's easier to update `mman.h` should the need ever arise.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T07:27:24.102+0000",
                    "updated": "2018-06-15T07:27:24.102+0000",
                    "started": "2018-06-15T07:27:24.102+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112215",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/112278",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r195689566\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -402,6 +404,35 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n     return Status::OK();\n   }\n \n+  Status Resize(const int64_t new_size, bool shrink_to_fit = false) {\n+    if (!shrink_to_fit || (new_size > capacity_)) {\n+      RETURN_NOT_OK(Reserve(new_size));\n+    } else {\n+      // shrink\n+      if (new_size == 0) {\n+        return Status::IOError(\"Cannot resize mmap to zero size\");\n+      }\n+      void* result;\n+      RETURN_NOT_OK(resizeMap(new_size, result));\n+      data_ = mutable_data_ = reinterpret_cast<uint8_t*>(result);\n+      if (position_ >= size_) {\n+        position_ = size_ - 1;\n \n Review comment:\n   You're right, I was confused about the correct position placement.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T10:11:09.414+0000",
                    "updated": "2018-06-15T10:11:09.414+0000",
                    "started": "2018-06-15T10:11:09.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112278",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/112280",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r195690175\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -526,13 +574,14 @@ Status MemoryMappedFile::Write(const void* data, int64_t nbytes) {\n   if (!memory_map_->opened() || !memory_map_->writable()) {\n     return Status::IOError(\"Unable to write\");\n   }\n-  if (nbytes + memory_map_->position() > memory_map_->size()) {\n-    return Status::Invalid(\"Cannot write past end of memory map\");\n-  }\n   return WriteInternal(data, nbytes);\n }\n \n Status MemoryMappedFile::WriteInternal(const void* data, int64_t nbytes) {\n+  if (nbytes + memory_map_->position() > memory_map_->capacity()) {\n+    int64_t new_capacity = BitUtil::NextPower2(nbytes + memory_map_->position());\n+    RETURN_NOT_OK(memory_map_->Resize(new_capacity));\n \n Review comment:\n   Do you mean that power of 2 growth is too fast? I added `Resize` method so the user can truncate the file afterwards. Note that I hide the difference between `size` and `capacity` on the file level, so there is no `Reserve` method. \r\n   \r\n   May be we'd need an `ResizableFile` interface. Then we could think about adding resizing functionality to other types of files.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T10:14:10.991+0000",
                    "updated": "2018-06-15T10:14:10.991+0000",
                    "started": "2018-06-15T10:14:10.991+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112280",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/112281",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r195690371\n \n \n\n ##########\n File path: cpp/src/arrow/io/io-file-test.cc\n ##########\n @@ -614,6 +614,31 @@ TEST_F(TestMemoryMappedFile, WriteRead) {\n   }\n }\n \n+TEST_F(TestMemoryMappedFile, WriteResizeRead) {\n+  const int64_t buffer_size = 1024;\n+  const int reps = 5;\n+  std::vector<std::vector<uint8_t>> buffers(reps);\n+  for (auto& b : buffers) {\n+    b.resize(buffer_size);\n+    test::random_bytes(buffer_size, 0, b.data());\n+  }\n+\n+  std::string path = \"io-memory-map-write-read-test\";\n+  std::shared_ptr<MemoryMappedFile> result;\n+  ASSERT_OK(InitMemoryMap(buffer_size, path, &result));\n+\n+  int64_t position = 0;\n+  std::shared_ptr<Buffer> out_buffer;\n+  for (int i = 0; i < reps; ++i) {\n+    ASSERT_OK(result->Write(buffers[i].data(), buffer_size));\n \n Review comment:\n   Done in `WriteThenShrinkToHaldThenWrite`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T10:15:11.556+0000",
                    "updated": "2018-06-15T10:15:11.556+0000",
                    "started": "2018-06-15T10:15:11.556+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112281",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/112282",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r195690371\n \n \n\n ##########\n File path: cpp/src/arrow/io/io-file-test.cc\n ##########\n @@ -614,6 +614,31 @@ TEST_F(TestMemoryMappedFile, WriteRead) {\n   }\n }\n \n+TEST_F(TestMemoryMappedFile, WriteResizeRead) {\n+  const int64_t buffer_size = 1024;\n+  const int reps = 5;\n+  std::vector<std::vector<uint8_t>> buffers(reps);\n+  for (auto& b : buffers) {\n+    b.resize(buffer_size);\n+    test::random_bytes(buffer_size, 0, b.data());\n+  }\n+\n+  std::string path = \"io-memory-map-write-read-test\";\n+  std::shared_ptr<MemoryMappedFile> result;\n+  ASSERT_OK(InitMemoryMap(buffer_size, path, &result));\n+\n+  int64_t position = 0;\n+  std::shared_ptr<Buffer> out_buffer;\n+  for (int i = 0; i < reps; ++i) {\n+    ASSERT_OK(result->Write(buffers[i].data(), buffer_size));\n \n Review comment:\n   Done in `WriteThenShrinkToHaldThenWrite` and `WriteReadZeroInitSize`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T10:18:59.665+0000",
                    "updated": "2018-06-15T10:18:59.665+0000",
                    "started": "2018-06-15T10:18:59.665+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112282",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/112283",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r195691792\n \n \n\n ##########\n File path: cpp/src/arrow/io/mremap.h\n ##########\n @@ -0,0 +1,80 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+#ifdef _WIN32\n+#include \"arrow/io/mman.h\"\n \n Review comment:\n   I ended up renaming the remap method to `arrow::internal::MemoryMapRemap`. Maybe I should move it to `arrow/util` or even into `arrow/util/io-utils.h`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T10:22:14.822+0000",
                    "updated": "2018-06-15T10:22:14.822+0000",
                    "started": "2018-06-15T10:22:14.822+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112283",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/112305",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#issuecomment-396967034\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2134?src=pr&el=h1) Report\n   > Merging [#2134](https://codecov.io/gh/apache/arrow/pull/2134?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/c15eee7b98b77b8352f0b2471191dd81c2503b6d?src=pr&el=desc) will **increase** coverage by `<.01%`.\n   > The diff coverage is `91.6%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2134/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2134?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2134      +/-   ##\n   ==========================================\n   + Coverage   86.42%   86.42%   +<.01%     \n   ==========================================\n     Files         242      231      -11     \n     Lines       41536    40754     -782     \n   ==========================================\n   - Hits        35896    35222     -674     \n   + Misses       5640     5532     -108\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2134?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/io/io-file-test.cc](https://codecov.io/gh/apache/arrow/pull/2134/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9pby1maWxlLXRlc3QuY2M=) | `93.66% <100%> (+0.98%)` | :arrow_up: |\n   | [cpp/src/arrow/io/mremap.h](https://codecov.io/gh/apache/arrow/pull/2134/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9tcmVtYXAuaA==) | `75% <75%> (\u00f8)` | |\n   | [cpp/src/arrow/io/file.cc](https://codecov.io/gh/apache/arrow/pull/2134/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9maWxlLmNj) | `93.12% <83.05%> (-0.55%)` | :arrow_down: |\n   | [rust/src/list\\_builder.rs](https://codecov.io/gh/apache/arrow/pull/2134/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbGlzdF9idWlsZGVyLnJz) | | |\n   | [rust/src/memory\\_pool.rs](https://codecov.io/gh/apache/arrow/pull/2134/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbWVtb3J5X3Bvb2wucnM=) | | |\n   | [rust/src/builder.rs](https://codecov.io/gh/apache/arrow/pull/2134/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYnVpbGRlci5ycw==) | | |\n   | [rust/src/buffer.rs](https://codecov.io/gh/apache/arrow/pull/2134/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYnVmZmVyLnJz) | | |\n   | [rust/src/datatypes.rs](https://codecov.io/gh/apache/arrow/pull/2134/diff?src=pr&el=tree#diff-cnVzdC9zcmMvZGF0YXR5cGVzLnJz) | | |\n   | [rust/src/bitmap.rs](https://codecov.io/gh/apache/arrow/pull/2134/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYml0bWFwLnJz) | | |\n   | [rust/src/lib.rs](https://codecov.io/gh/apache/arrow/pull/2134/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbGliLnJz) | | |\n   | ... and [7 more](https://codecov.io/gh/apache/arrow/pull/2134/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2134?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2134?src=pr&el=footer). Last update [c15eee7...bfe5589](https://codecov.io/gh/apache/arrow/pull/2134?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T12:01:14.239+0000",
                    "updated": "2018-06-15T12:01:14.239+0000",
                    "started": "2018-06-15T12:01:14.239+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112305",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/112308",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on issue #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#issuecomment-397604788\n \n \n   I revised the PR and rebased on the current master.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T12:25:31.898+0000",
                    "updated": "2018-06-15T12:25:31.898+0000",
                    "started": "2018-06-15T12:25:31.898+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112308",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/113781",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r196831488\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -356,49 +360,63 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n     }\n   }\n \n-  Status Open(const std::string& path, FileMode::type mode) {\n-    int prot_flags;\n-    int map_mode;\n-\n+  Status Open(const std::string& path, FileMode::type mode, int64_t size = -1) {\n     file_.reset(new OSFile());\n \n     if (mode != FileMode::READ) {\n       // Memory mapping has permission failures if PROT_READ not set\n-      prot_flags = PROT_READ | PROT_WRITE;\n-      map_mode = MAP_SHARED;\n+      prot_flags_ = PROT_READ | PROT_WRITE;\n+      map_mode_ = MAP_SHARED;\n       constexpr bool append = false;\n       constexpr bool truncate = false;\n       constexpr bool write_only = false;\n       RETURN_NOT_OK(file_->OpenWriteable(path, truncate, append, write_only));\n \n       is_mutable_ = true;\n     } else {\n-      prot_flags = PROT_READ;\n-      map_mode = MAP_PRIVATE;  // Changes are not to be committed back to the file\n+      prot_flags_ = PROT_READ;\n+      map_mode_ = MAP_PRIVATE;  // Changes are not to be committed back to the file\n       RETURN_NOT_OK(file_->OpenReadable(path));\n \n       is_mutable_ = false;\n     }\n \n-    size_ = file_->size();\n+    // Memory mapping fails when file size is 0, if it is 0,\n+    // delay it until the first resize, if it\n+    if (file_->size() > 0) {\n+      RETURN_NOT_OK(InitMMap(file_->size()));\n+    }\n \n-    void* result = nullptr;\n+    position_ = 0;\n \n-    // Memory mapping fails when file size is 0\n-    if (size_ > 0) {\n-      result =\n-          mmap(nullptr, static_cast<size_t>(size_), prot_flags, map_mode, file_->fd(), 0);\n-      if (result == MAP_FAILED) {\n-        std::stringstream ss;\n-        ss << \"Memory mapping file failed: \" << std::strerror(errno);\n-        return Status::IOError(ss.str());\n+    return Status::OK();\n+  }\n+\n+  // Sets the size to the specified value. If the current position\n+  // is further then the new size, sets the position to the last byte.\n+  Status Resize(const int64_t new_size, bool shrink_to_fit = false) {\n+    if (!shrink_to_fit || (new_size > capacity_)) {\n+      RETURN_NOT_OK(Reserve(new_size));\n \n Review comment:\n   We're calling this even if `!shrink_to_fit && new_size < capacity_`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-20T16:10:07.770+0000",
                    "updated": "2018-06-20T16:10:07.770+0000",
                    "started": "2018-06-20T16:10:07.770+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "113781",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/113782",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r196830518\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -356,49 +360,63 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n     }\n   }\n \n-  Status Open(const std::string& path, FileMode::type mode) {\n-    int prot_flags;\n-    int map_mode;\n-\n+  Status Open(const std::string& path, FileMode::type mode, int64_t size = -1) {\n     file_.reset(new OSFile());\n \n     if (mode != FileMode::READ) {\n       // Memory mapping has permission failures if PROT_READ not set\n-      prot_flags = PROT_READ | PROT_WRITE;\n-      map_mode = MAP_SHARED;\n+      prot_flags_ = PROT_READ | PROT_WRITE;\n+      map_mode_ = MAP_SHARED;\n       constexpr bool append = false;\n       constexpr bool truncate = false;\n       constexpr bool write_only = false;\n       RETURN_NOT_OK(file_->OpenWriteable(path, truncate, append, write_only));\n \n       is_mutable_ = true;\n     } else {\n-      prot_flags = PROT_READ;\n-      map_mode = MAP_PRIVATE;  // Changes are not to be committed back to the file\n+      prot_flags_ = PROT_READ;\n+      map_mode_ = MAP_PRIVATE;  // Changes are not to be committed back to the file\n       RETURN_NOT_OK(file_->OpenReadable(path));\n \n       is_mutable_ = false;\n     }\n \n-    size_ = file_->size();\n+    // Memory mapping fails when file size is 0, if it is 0,\n+    // delay it until the first resize, if it\n \n Review comment:\n   \"if it\"?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-20T16:10:08.160+0000",
                    "updated": "2018-06-20T16:10:08.160+0000",
                    "started": "2018-06-20T16:10:08.160+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "113782",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/113783",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r196831944\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -356,49 +360,63 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n     }\n   }\n \n-  Status Open(const std::string& path, FileMode::type mode) {\n-    int prot_flags;\n-    int map_mode;\n-\n+  Status Open(const std::string& path, FileMode::type mode, int64_t size = -1) {\n     file_.reset(new OSFile());\n \n     if (mode != FileMode::READ) {\n       // Memory mapping has permission failures if PROT_READ not set\n-      prot_flags = PROT_READ | PROT_WRITE;\n-      map_mode = MAP_SHARED;\n+      prot_flags_ = PROT_READ | PROT_WRITE;\n+      map_mode_ = MAP_SHARED;\n       constexpr bool append = false;\n       constexpr bool truncate = false;\n       constexpr bool write_only = false;\n       RETURN_NOT_OK(file_->OpenWriteable(path, truncate, append, write_only));\n \n       is_mutable_ = true;\n     } else {\n-      prot_flags = PROT_READ;\n-      map_mode = MAP_PRIVATE;  // Changes are not to be committed back to the file\n+      prot_flags_ = PROT_READ;\n+      map_mode_ = MAP_PRIVATE;  // Changes are not to be committed back to the file\n       RETURN_NOT_OK(file_->OpenReadable(path));\n \n       is_mutable_ = false;\n     }\n \n-    size_ = file_->size();\n+    // Memory mapping fails when file size is 0, if it is 0,\n+    // delay it until the first resize, if it\n+    if (file_->size() > 0) {\n+      RETURN_NOT_OK(InitMMap(file_->size()));\n+    }\n \n-    void* result = nullptr;\n+    position_ = 0;\n \n-    // Memory mapping fails when file size is 0\n-    if (size_ > 0) {\n-      result =\n-          mmap(nullptr, static_cast<size_t>(size_), prot_flags, map_mode, file_->fd(), 0);\n-      if (result == MAP_FAILED) {\n-        std::stringstream ss;\n-        ss << \"Memory mapping file failed: \" << std::strerror(errno);\n-        return Status::IOError(ss.str());\n+    return Status::OK();\n+  }\n+\n+  // Sets the size to the specified value. If the current position\n+  // is further then the new size, sets the position to the last byte.\n+  Status Resize(const int64_t new_size, bool shrink_to_fit = false) {\n+    if (!shrink_to_fit || (new_size > capacity_)) {\n+      RETURN_NOT_OK(Reserve(new_size));\n+    } else {\n+      // shrink\n+      if (new_size == 0) {\n+        return Status::IOError(\"Cannot resize mmap to zero size\");\n       }\n+      RETURN_NOT_OK(ResizeMap(new_size));\n     }\n+    size_ = new_size;\n \n Review comment:\n   Even if `shrink_to_fit` is false? I'm not sure I understand here.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-20T16:10:08.294+0000",
                    "updated": "2018-06-20T16:10:08.294+0000",
                    "started": "2018-06-20T16:10:08.293+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "113783",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/113784",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r196831174\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -356,49 +360,63 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n     }\n   }\n \n-  Status Open(const std::string& path, FileMode::type mode) {\n-    int prot_flags;\n-    int map_mode;\n-\n+  Status Open(const std::string& path, FileMode::type mode, int64_t size = -1) {\n     file_.reset(new OSFile());\n \n     if (mode != FileMode::READ) {\n       // Memory mapping has permission failures if PROT_READ not set\n-      prot_flags = PROT_READ | PROT_WRITE;\n-      map_mode = MAP_SHARED;\n+      prot_flags_ = PROT_READ | PROT_WRITE;\n+      map_mode_ = MAP_SHARED;\n       constexpr bool append = false;\n       constexpr bool truncate = false;\n       constexpr bool write_only = false;\n       RETURN_NOT_OK(file_->OpenWriteable(path, truncate, append, write_only));\n \n       is_mutable_ = true;\n     } else {\n-      prot_flags = PROT_READ;\n-      map_mode = MAP_PRIVATE;  // Changes are not to be committed back to the file\n+      prot_flags_ = PROT_READ;\n+      map_mode_ = MAP_PRIVATE;  // Changes are not to be committed back to the file\n       RETURN_NOT_OK(file_->OpenReadable(path));\n \n       is_mutable_ = false;\n     }\n \n-    size_ = file_->size();\n+    // Memory mapping fails when file size is 0, if it is 0,\n+    // delay it until the first resize, if it\n+    if (file_->size() > 0) {\n+      RETURN_NOT_OK(InitMMap(file_->size()));\n+    }\n \n-    void* result = nullptr;\n+    position_ = 0;\n \n-    // Memory mapping fails when file size is 0\n-    if (size_ > 0) {\n-      result =\n-          mmap(nullptr, static_cast<size_t>(size_), prot_flags, map_mode, file_->fd(), 0);\n-      if (result == MAP_FAILED) {\n-        std::stringstream ss;\n-        ss << \"Memory mapping file failed: \" << std::strerror(errno);\n-        return Status::IOError(ss.str());\n+    return Status::OK();\n+  }\n+\n+  // Sets the size to the specified value. If the current position\n+  // is further then the new size, sets the position to the last byte.\n \n Review comment:\n   Typo: \"than\"\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-20T16:10:08.320+0000",
                    "updated": "2018-06-20T16:10:08.320+0000",
                    "started": "2018-06-20T16:10:08.319+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "113784",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/113785",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r196832768\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -356,49 +360,63 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n     }\n   }\n \n-  Status Open(const std::string& path, FileMode::type mode) {\n-    int prot_flags;\n-    int map_mode;\n-\n+  Status Open(const std::string& path, FileMode::type mode, int64_t size = -1) {\n     file_.reset(new OSFile());\n \n     if (mode != FileMode::READ) {\n       // Memory mapping has permission failures if PROT_READ not set\n-      prot_flags = PROT_READ | PROT_WRITE;\n-      map_mode = MAP_SHARED;\n+      prot_flags_ = PROT_READ | PROT_WRITE;\n+      map_mode_ = MAP_SHARED;\n       constexpr bool append = false;\n       constexpr bool truncate = false;\n       constexpr bool write_only = false;\n       RETURN_NOT_OK(file_->OpenWriteable(path, truncate, append, write_only));\n \n       is_mutable_ = true;\n     } else {\n-      prot_flags = PROT_READ;\n-      map_mode = MAP_PRIVATE;  // Changes are not to be committed back to the file\n+      prot_flags_ = PROT_READ;\n+      map_mode_ = MAP_PRIVATE;  // Changes are not to be committed back to the file\n       RETURN_NOT_OK(file_->OpenReadable(path));\n \n       is_mutable_ = false;\n     }\n \n-    size_ = file_->size();\n+    // Memory mapping fails when file size is 0, if it is 0,\n+    // delay it until the first resize, if it\n \n Review comment:\n   Also, if the size is 0, perhaps `InitMmap` should deal with it?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-20T16:10:08.474+0000",
                    "updated": "2018-06-20T16:10:08.474+0000",
                    "started": "2018-06-20T16:10:08.473+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "113785",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/113786",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r196835428\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -356,49 +360,63 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n     }\n   }\n \n-  Status Open(const std::string& path, FileMode::type mode) {\n-    int prot_flags;\n-    int map_mode;\n-\n+  Status Open(const std::string& path, FileMode::type mode, int64_t size = -1) {\n     file_.reset(new OSFile());\n \n     if (mode != FileMode::READ) {\n       // Memory mapping has permission failures if PROT_READ not set\n-      prot_flags = PROT_READ | PROT_WRITE;\n-      map_mode = MAP_SHARED;\n+      prot_flags_ = PROT_READ | PROT_WRITE;\n+      map_mode_ = MAP_SHARED;\n       constexpr bool append = false;\n       constexpr bool truncate = false;\n       constexpr bool write_only = false;\n       RETURN_NOT_OK(file_->OpenWriteable(path, truncate, append, write_only));\n \n       is_mutable_ = true;\n     } else {\n-      prot_flags = PROT_READ;\n-      map_mode = MAP_PRIVATE;  // Changes are not to be committed back to the file\n+      prot_flags_ = PROT_READ;\n+      map_mode_ = MAP_PRIVATE;  // Changes are not to be committed back to the file\n       RETURN_NOT_OK(file_->OpenReadable(path));\n \n       is_mutable_ = false;\n     }\n \n-    size_ = file_->size();\n+    // Memory mapping fails when file size is 0, if it is 0,\n+    // delay it until the first resize, if it\n+    if (file_->size() > 0) {\n+      RETURN_NOT_OK(InitMMap(file_->size()));\n+    }\n \n-    void* result = nullptr;\n+    position_ = 0;\n \n-    // Memory mapping fails when file size is 0\n-    if (size_ > 0) {\n-      result =\n-          mmap(nullptr, static_cast<size_t>(size_), prot_flags, map_mode, file_->fd(), 0);\n-      if (result == MAP_FAILED) {\n-        std::stringstream ss;\n-        ss << \"Memory mapping file failed: \" << std::strerror(errno);\n-        return Status::IOError(ss.str());\n+    return Status::OK();\n+  }\n+\n+  // Sets the size to the specified value. If the current position\n+  // is further then the new size, sets the position to the last byte.\n+  Status Resize(const int64_t new_size, bool shrink_to_fit = false) {\n+    if (!shrink_to_fit || (new_size > capacity_)) {\n+      RETURN_NOT_OK(Reserve(new_size));\n+    } else {\n+      // shrink\n+      if (new_size == 0) {\n+        return Status::IOError(\"Cannot resize mmap to zero size\");\n       }\n+      RETURN_NOT_OK(ResizeMap(new_size));\n     }\n+    size_ = new_size;\n \n Review comment:\n   Actually, if I read well, `shrink_to_fit` is always true? Perhaps this could be simplified.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-20T16:10:08.597+0000",
                    "updated": "2018-06-20T16:10:08.597+0000",
                    "started": "2018-06-20T16:10:08.597+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "113786",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/113787",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r196839789\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -526,13 +588,22 @@ Status MemoryMappedFile::Write(const void* data, int64_t nbytes) {\n   if (!memory_map_->opened() || !memory_map_->writable()) {\n     return Status::IOError(\"Unable to write\");\n   }\n-  if (nbytes + memory_map_->position() > memory_map_->size()) {\n-    return Status::Invalid(\"Cannot write past end of memory map\");\n-  }\n   return WriteInternal(data, nbytes);\n }\n \n+Status MemoryMappedFile::Resize(int64_t new_size) {\n+  if (new_size >= memory_map_->capacity()) {\n+    return memory_map_->Reserve(new_size);\n+  } else {\n+    return memory_map_->Resize(new_size, /*shrink_to_fit*/ true);\n+  }\n+}\n+\n Status MemoryMappedFile::WriteInternal(const void* data, int64_t nbytes) {\n+  if (nbytes + memory_map_->position() > memory_map_->size()) {\n+    int64_t new_size = BitUtil::NextPower2(nbytes + memory_map_->position());\n \n Review comment:\n   Hmm, really? I would never expect a file to over-allocate memory / disk space for me. I'm already surprised that `Write()` on a memory-mapped file would append silently. For comparison, in Python I can't implicitly write past the end of a mmap'ed file, I have to extend it explicitly:\r\n   \r\n   ```python\r\n   >>> f = open('FOO', 'w+')\r\n   >>> f.truncate(4096)\r\n   4096\r\n   >>> m = mmap.mmap(f.fileno(), 4096)\r\n   >>> m.write(b'x'*8000)\r\n   Traceback (most recent call last):\r\n     File \"<ipython-input-12-183b7a903b2b>\", line 1, in <module>\r\n       m.write(b'x'*8000)\r\n   ValueError: data out of range\r\n   >>> m.resize(8192)\r\n   >>> m.write(b'x'*8000)\r\n   8000\r\n   ```\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-20T16:10:08.710+0000",
                    "updated": "2018-06-20T16:10:08.710+0000",
                    "started": "2018-06-20T16:10:08.709+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "113787",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/113788",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r196832992\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -356,49 +360,63 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n     }\n   }\n \n-  Status Open(const std::string& path, FileMode::type mode) {\n-    int prot_flags;\n-    int map_mode;\n-\n+  Status Open(const std::string& path, FileMode::type mode, int64_t size = -1) {\n \n Review comment:\n   Is it me, or is the `size` argument essentially ignored in this method?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-20T16:10:08.712+0000",
                    "updated": "2018-06-20T16:10:08.712+0000",
                    "started": "2018-06-20T16:10:08.711+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "113788",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/113789",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r196833275\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -356,49 +360,63 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n     }\n   }\n \n-  Status Open(const std::string& path, FileMode::type mode) {\n-    int prot_flags;\n-    int map_mode;\n-\n+  Status Open(const std::string& path, FileMode::type mode, int64_t size = -1) {\n     file_.reset(new OSFile());\n \n     if (mode != FileMode::READ) {\n       // Memory mapping has permission failures if PROT_READ not set\n-      prot_flags = PROT_READ | PROT_WRITE;\n-      map_mode = MAP_SHARED;\n+      prot_flags_ = PROT_READ | PROT_WRITE;\n+      map_mode_ = MAP_SHARED;\n       constexpr bool append = false;\n       constexpr bool truncate = false;\n       constexpr bool write_only = false;\n       RETURN_NOT_OK(file_->OpenWriteable(path, truncate, append, write_only));\n \n       is_mutable_ = true;\n     } else {\n-      prot_flags = PROT_READ;\n-      map_mode = MAP_PRIVATE;  // Changes are not to be committed back to the file\n+      prot_flags_ = PROT_READ;\n+      map_mode_ = MAP_PRIVATE;  // Changes are not to be committed back to the file\n       RETURN_NOT_OK(file_->OpenReadable(path));\n \n       is_mutable_ = false;\n     }\n \n-    size_ = file_->size();\n+    // Memory mapping fails when file size is 0, if it is 0,\n+    // delay it until the first resize, if it\n+    if (file_->size() > 0) {\n+      RETURN_NOT_OK(InitMMap(file_->size()));\n+    }\n \n-    void* result = nullptr;\n+    position_ = 0;\n \n-    // Memory mapping fails when file size is 0\n-    if (size_ > 0) {\n-      result =\n-          mmap(nullptr, static_cast<size_t>(size_), prot_flags, map_mode, file_->fd(), 0);\n-      if (result == MAP_FAILED) {\n-        std::stringstream ss;\n-        ss << \"Memory mapping file failed: \" << std::strerror(errno);\n-        return Status::IOError(ss.str());\n+    return Status::OK();\n+  }\n+\n+  // Sets the size to the specified value. If the current position\n+  // is further then the new size, sets the position to the last byte.\n+  Status Resize(const int64_t new_size, bool shrink_to_fit = false) {\n+    if (!shrink_to_fit || (new_size > capacity_)) {\n+      RETURN_NOT_OK(Reserve(new_size));\n+    } else {\n+      // shrink\n+      if (new_size == 0) {\n+        return Status::IOError(\"Cannot resize mmap to zero size\");\n \n Review comment:\n   I find this a bit weird: we can mmap a file that is initially zero bytes, but we cannot later resize it to zero bytes?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-20T16:10:08.715+0000",
                    "updated": "2018-06-20T16:10:08.715+0000",
                    "started": "2018-06-20T16:10:08.715+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "113789",
                    "issueId": "13165620"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/worklog/113790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2134: ARROW-2701: [C++] Make MemoryMappedFile resizable\nURL: https://github.com/apache/arrow/pull/2134#discussion_r196837503\n \n \n\n ##########\n File path: cpp/src/arrow/io/file.cc\n ##########\n @@ -427,7 +445,51 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n   std::mutex& lock() { return file_->lock(); }\n \n  private:\n+  // Resize the mmap and file to the specified capacity.\n+  // Keeps 64 alignment. Sets the capacity.\n+  Status ResizeMap(int64_t requested_capacity) {\n+    if (file_->mode() != FileMode::type::READWRITE &&\n+        file_->mode() != FileMode::type::WRITE) {\n+      return Status::IOError(\"Cannot resize a readonly memory map\");\n+    }\n+    int64_t new_capacity = BitUtil::RoundUpToMultipleOf64(requested_capacity);\n \n Review comment:\n   I'm surprised: why is this needed or desired?\r\n   (also, in practice, the size of the actual virtual address space mapping will be rounded up to the page size by the OS)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-20T16:10:08.811+0000",
                    "updated": "2018-06-20T16:10:08.811+0000",
                    "started": "2018-06-20T16:10:08.811+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "113790",
                    "issueId": "13165620"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 40800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1ec851d2[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4b166840[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71959b34[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@9b9a92e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6282c92[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@53be56e8[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e2f3b90[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4a1b13a2[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@d10facf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2c38f493[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5bbca93f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@492837e9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 40800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jul 25 02:55:08 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-07-25T02:55:08.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2701/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-06-12T16:51:28.000+0000",
        "updated": "2018-07-25T02:55:13.000+0000",
        "timeoriginalestimate": null,
        "description": "Hi,\r\n\r\nI don't see any reason for the MemoryMappedFile not to be resizable, e.g. like it is in Python stdlib. This patch changes the base class of MemoryMappedFile to ResizableBuffer and implements mmap resizing similar to\u00a0[mmap.resize|https://github.com/python/cpython/blob/415bc46a78e785f357c8960ae70f18a6b6cccbb6/Modules/mmapmodule.c#L454]\u00a0from python stdlib.\r\n\r\nIf the change is ok, we should probably change the comment [here|https://github.com/apache/arrow/blob/master/python/pyarrow/tests/test_io.py#L577], too.\r\n\r\nCheers,\r\n\r\nDimitri.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "11h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 40800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Make MemoryMappedFile resizable",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": "https://github.com/apache/arrow/pull/2205",
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/comment/16539653",
                    "id": "16539653",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I think the consensus was that we should solve this problem on another level,and that there isn't a performant way of ensuring the safety of the read buffers.\u00a0\r\n\r\nWe should close this issue then, so it doesn't litter the issue queue.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-07-11T07:22:56.882+0000",
                    "updated": "2018-07-11T07:23:15.193+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/comment/16540567",
                    "id": "16540567",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'll have a look at the PR when I can; I think making the mmap resizable is still a good idea",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-11T19:22:59.193+0000",
                    "updated": "2018-07-11T19:22:59.193+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165620/comment/16555060",
                    "id": "16555060",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2205\n[https://github.com/apache/arrow/pull/2205]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-25T02:55:08.268+0000",
                    "updated": "2018-07-25T02:55:08.268+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|i3us2f:",
        "customfield_12314139": null
    }
}