{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13270676",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270676",
    "key": "ARROW-7264",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346358",
                "id": "12346358",
                "description": "",
                "name": "0.15.1",
                "archived": false,
                "released": true,
                "releaseDate": "2019-11-01"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7264/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 11,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270676/worklog/349687",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5904: ARROW-7264: [Java] RangeEqualsVisitor type check is not correct\nURL: https://github.com/apache/arrow/pull/5904\n \n \n   Related to [ARROW-7264](https://issues.apache.org/jira/browse/ARROW-7264).\r\n   \r\n   Currently RangeEqualsVisitor generally only checks type once and keep the result to avoid repeated type checking, see\r\n   >typeCompareResult = left.getField().getType().equals(right.getField().getType());\r\n   \r\n   This only compares ArrowType and for complex type, this may cause unexpected behavior, for example List<Int> and List<BigInt> would be type equals which not consider their child field.\r\n   \r\n   We should compare Field here instead and to make it more extendable, we use TypeEqualsVisitor to compare Field, in this way, one could choose whether checks names or metadata either.\r\n   \r\n   Also provide a test for ListVector to validate this change.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-26T10:23:37.413+0000",
                    "updated": "2019-11-26T10:23:37.413+0000",
                    "started": "2019-11-26T10:23:37.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "349687",
                    "issueId": "13270676"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270676/worklog/349689",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5904: ARROW-7264: [Java] RangeEqualsVisitor type check is not correct\nURL: https://github.com/apache/arrow/pull/5904#issuecomment-558564230\n \n \n   https://issues.apache.org/jira/browse/ARROW-7264\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-26T10:23:55.209+0000",
                    "updated": "2019-11-26T10:23:55.209+0000",
                    "started": "2019-11-26T10:23:55.209+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "349689",
                    "issueId": "13270676"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270676/worklog/350214",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5904: ARROW-7264: [Java] RangeEqualsVisitor type check is not correct\nURL: https://github.com/apache/arrow/pull/5904#discussion_r351110168\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/compare/RangeEqualsVisitor.java\n ##########\n @@ -38,37 +38,51 @@\n public class RangeEqualsVisitor implements VectorVisitor<Boolean, Range> {\n   private ValueVector left;\n   private ValueVector right;\n-  private boolean isTypeCheckNeeded;\n+\n+  private TypeEqualsVisitor typeVisitor;\n+  private boolean checkType;\n   private boolean typeCompareResult;\n \n+  /**\n+   * Constructs a new instance with default type visitor (do not check name and metadata).\n+   */\n+  public RangeEqualsVisitor(ValueVector left, ValueVector right, boolean checkType) {\n+    this (left, right, checkType, new TypeEqualsVisitor(right));\n+  }\n+\n   /**\n    * Constructs a new instance.\n    *\n    * @param left left vector\n    * @param right right vector\n-   * @param isTypeCheckNeeded type check needed\n+   * @param checkType whether need check type\n+   * @param typeVisitor type visitor\n    */\n-  public RangeEqualsVisitor(ValueVector left, ValueVector right, boolean isTypeCheckNeeded) {\n+  public RangeEqualsVisitor(\n+      ValueVector left,\n+      ValueVector right,\n+      boolean checkType,\n \n Review comment:\n   it seems redundant to both \"true\" and a typeVisitor when type checking is desired.  I think we should maybe eliminate checkType from her and use nullness of typeVisitor to determine when to perform the check.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-27T06:15:18.892+0000",
                    "updated": "2019-11-27T06:15:18.892+0000",
                    "started": "2019-11-27T06:15:18.891+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "350214",
                    "issueId": "13270676"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270676/worklog/350215",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5904: ARROW-7264: [Java] RangeEqualsVisitor type check is not correct\nURL: https://github.com/apache/arrow/pull/5904#discussion_r351110584\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/compare/RangeEqualsVisitor.java\n ##########\n @@ -38,37 +38,51 @@\n public class RangeEqualsVisitor implements VectorVisitor<Boolean, Range> {\n   private ValueVector left;\n   private ValueVector right;\n-  private boolean isTypeCheckNeeded;\n+\n+  private TypeEqualsVisitor typeVisitor;\n+  private boolean checkType;\n   private boolean typeCompareResult;\n \n+  /**\n+   * Constructs a new instance with default type visitor (do not check name and metadata).\n+   */\n+  public RangeEqualsVisitor(ValueVector left, ValueVector right, boolean checkType) {\n+    this (left, right, checkType, new TypeEqualsVisitor(right));\n+  }\n+\n   /**\n    * Constructs a new instance.\n    *\n    * @param left left vector\n    * @param right right vector\n-   * @param isTypeCheckNeeded type check needed\n+   * @param checkType whether need check type\n+   * @param typeVisitor type visitor\n    */\n-  public RangeEqualsVisitor(ValueVector left, ValueVector right, boolean isTypeCheckNeeded) {\n+  public RangeEqualsVisitor(\n+      ValueVector left,\n+      ValueVector right,\n+      boolean checkType,\n+      TypeEqualsVisitor typeVisitor) {\n     this.left = left;\n     this.right = right;\n-    this.isTypeCheckNeeded = isTypeCheckNeeded;\n+    this.checkType = checkType;\n+    this.typeVisitor = typeVisitor;\n \n     Preconditions.checkArgument(left != null,\n         \"left vector cannot be null\");\n     Preconditions.checkArgument(right != null,\n         \"right vector cannot be null\");\n+    Preconditions.checkArgument(typeVisitor.getRight() == this.right);\n \n Review comment:\n   maybe it would be better to take a BiFunction<ValueVector, ValueVector, Bool> that returns true if the types of two vectors are equal and false otherwise?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-27T06:16:52.225+0000",
                    "updated": "2019-11-27T06:16:52.225+0000",
                    "started": "2019-11-27T06:16:52.225+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "350215",
                    "issueId": "13270676"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270676/worklog/350223",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5904: ARROW-7264: [Java] RangeEqualsVisitor type check is not correct\nURL: https://github.com/apache/arrow/pull/5904#discussion_r351115007\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/compare/RangeEqualsVisitor.java\n ##########\n @@ -38,37 +38,51 @@\n public class RangeEqualsVisitor implements VectorVisitor<Boolean, Range> {\n   private ValueVector left;\n   private ValueVector right;\n-  private boolean isTypeCheckNeeded;\n+\n+  private TypeEqualsVisitor typeVisitor;\n+  private boolean checkType;\n   private boolean typeCompareResult;\n \n+  /**\n+   * Constructs a new instance with default type visitor (do not check name and metadata).\n+   */\n+  public RangeEqualsVisitor(ValueVector left, ValueVector right, boolean checkType) {\n+    this (left, right, checkType, new TypeEqualsVisitor(right));\n+  }\n+\n   /**\n    * Constructs a new instance.\n    *\n    * @param left left vector\n    * @param right right vector\n-   * @param isTypeCheckNeeded type check needed\n+   * @param checkType whether need check type\n+   * @param typeVisitor type visitor\n    */\n-  public RangeEqualsVisitor(ValueVector left, ValueVector right, boolean isTypeCheckNeeded) {\n+  public RangeEqualsVisitor(\n+      ValueVector left,\n+      ValueVector right,\n+      boolean checkType,\n+      TypeEqualsVisitor typeVisitor) {\n     this.left = left;\n     this.right = right;\n-    this.isTypeCheckNeeded = isTypeCheckNeeded;\n+    this.checkType = checkType;\n+    this.typeVisitor = typeVisitor;\n \n     Preconditions.checkArgument(left != null,\n         \"left vector cannot be null\");\n     Preconditions.checkArgument(right != null,\n         \"right vector cannot be null\");\n+    Preconditions.checkArgument(typeVisitor.getRight() == this.right);\n \n Review comment:\n   Does this mean use BiFunction instead TypeEqualsVisitor? I think they have the same effects and we already has visitor.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-27T06:36:47.463+0000",
                    "updated": "2019-11-27T06:36:47.463+0000",
                    "started": "2019-11-27T06:36:47.463+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "350223",
                    "issueId": "13270676"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270676/worklog/350245",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5904: ARROW-7264: [Java] RangeEqualsVisitor type check is not correct\nURL: https://github.com/apache/arrow/pull/5904#discussion_r351126880\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/compare/RangeEqualsVisitor.java\n ##########\n @@ -38,37 +38,51 @@\n public class RangeEqualsVisitor implements VectorVisitor<Boolean, Range> {\n   private ValueVector left;\n   private ValueVector right;\n-  private boolean isTypeCheckNeeded;\n+\n+  private TypeEqualsVisitor typeVisitor;\n+  private boolean checkType;\n   private boolean typeCompareResult;\n \n+  /**\n+   * Constructs a new instance with default type visitor (do not check name and metadata).\n+   */\n+  public RangeEqualsVisitor(ValueVector left, ValueVector right, boolean checkType) {\n+    this (left, right, checkType, new TypeEqualsVisitor(right));\n+  }\n+\n   /**\n    * Constructs a new instance.\n    *\n    * @param left left vector\n    * @param right right vector\n-   * @param isTypeCheckNeeded type check needed\n+   * @param checkType whether need check type\n+   * @param typeVisitor type visitor\n    */\n-  public RangeEqualsVisitor(ValueVector left, ValueVector right, boolean isTypeCheckNeeded) {\n+  public RangeEqualsVisitor(\n+      ValueVector left,\n+      ValueVector right,\n+      boolean checkType,\n \n Review comment:\n   right, revised.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-27T07:24:09.653+0000",
                    "updated": "2019-11-27T07:24:09.653+0000",
                    "started": "2019-11-27T07:24:09.653+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "350245",
                    "issueId": "13270676"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270676/worklog/351695",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5904: ARROW-7264: [Java] RangeEqualsVisitor type check is not correct\nURL: https://github.com/apache/arrow/pull/5904#discussion_r352392925\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/compare/RangeEqualsVisitor.java\n ##########\n @@ -38,37 +38,51 @@\n public class RangeEqualsVisitor implements VectorVisitor<Boolean, Range> {\n   private ValueVector left;\n   private ValueVector right;\n-  private boolean isTypeCheckNeeded;\n+\n+  private TypeEqualsVisitor typeVisitor;\n+  private boolean checkType;\n   private boolean typeCompareResult;\n \n+  /**\n+   * Constructs a new instance with default type visitor (do not check name and metadata).\n+   */\n+  public RangeEqualsVisitor(ValueVector left, ValueVector right, boolean checkType) {\n+    this (left, right, checkType, new TypeEqualsVisitor(right));\n+  }\n+\n   /**\n    * Constructs a new instance.\n    *\n    * @param left left vector\n    * @param right right vector\n-   * @param isTypeCheckNeeded type check needed\n+   * @param checkType whether need check type\n+   * @param typeVisitor type visitor\n    */\n-  public RangeEqualsVisitor(ValueVector left, ValueVector right, boolean isTypeCheckNeeded) {\n+  public RangeEqualsVisitor(\n+      ValueVector left,\n+      ValueVector right,\n+      boolean checkType,\n+      TypeEqualsVisitor typeVisitor) {\n     this.left = left;\n     this.right = right;\n-    this.isTypeCheckNeeded = isTypeCheckNeeded;\n+    this.checkType = checkType;\n+    this.typeVisitor = typeVisitor;\n \n     Preconditions.checkArgument(left != null,\n         \"left vector cannot be null\");\n     Preconditions.checkArgument(right != null,\n         \"right vector cannot be null\");\n+    Preconditions.checkArgument(typeVisitor.getRight() == this.right);\n \n Review comment:\n   Yes, BiFunction instead of TypeEqualsVisitor.  BiFunction is more generic and can consolidate the details of using TypeEqualsVisitor into a single place instead of having to assert TypeEqualsVisitor is setup correctly.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-02T01:39:10.551+0000",
                    "updated": "2019-12-02T01:39:10.551+0000",
                    "started": "2019-12-02T01:39:10.551+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "351695",
                    "issueId": "13270676"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270676/worklog/351719",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5904: ARROW-7264: [Java] RangeEqualsVisitor type check is not correct\nURL: https://github.com/apache/arrow/pull/5904#discussion_r352401915\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/compare/RangeEqualsVisitor.java\n ##########\n @@ -38,37 +38,51 @@\n public class RangeEqualsVisitor implements VectorVisitor<Boolean, Range> {\n   private ValueVector left;\n   private ValueVector right;\n-  private boolean isTypeCheckNeeded;\n+\n+  private TypeEqualsVisitor typeVisitor;\n+  private boolean checkType;\n   private boolean typeCompareResult;\n \n+  /**\n+   * Constructs a new instance with default type visitor (do not check name and metadata).\n+   */\n+  public RangeEqualsVisitor(ValueVector left, ValueVector right, boolean checkType) {\n+    this (left, right, checkType, new TypeEqualsVisitor(right));\n+  }\n+\n   /**\n    * Constructs a new instance.\n    *\n    * @param left left vector\n    * @param right right vector\n-   * @param isTypeCheckNeeded type check needed\n+   * @param checkType whether need check type\n+   * @param typeVisitor type visitor\n    */\n-  public RangeEqualsVisitor(ValueVector left, ValueVector right, boolean isTypeCheckNeeded) {\n+  public RangeEqualsVisitor(\n+      ValueVector left,\n+      ValueVector right,\n+      boolean checkType,\n+      TypeEqualsVisitor typeVisitor) {\n     this.left = left;\n     this.right = right;\n-    this.isTypeCheckNeeded = isTypeCheckNeeded;\n+    this.checkType = checkType;\n+    this.typeVisitor = typeVisitor;\n \n     Preconditions.checkArgument(left != null,\n         \"left vector cannot be null\");\n     Preconditions.checkArgument(right != null,\n         \"right vector cannot be null\");\n+    Preconditions.checkArgument(typeVisitor.getRight() == this.right);\n \n Review comment:\n   ok, revised.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-02T02:47:43.023+0000",
                    "updated": "2019-12-02T02:47:43.023+0000",
                    "started": "2019-12-02T02:47:43.023+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "351719",
                    "issueId": "13270676"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270676/worklog/370304",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #5904: ARROW-7264: [Java] RangeEqualsVisitor type check is not correct\nURL: https://github.com/apache/arrow/pull/5904#issuecomment-573283962\n \n \n   @emkornfield Please also take a look at this PR, thanks :)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-11T05:32:47.199+0000",
                    "updated": "2020-01-11T05:32:47.199+0000",
                    "started": "2020-01-11T05:32:47.199+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "370304",
                    "issueId": "13270676"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270676/worklog/373418",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5904: ARROW-7264: [Java] RangeEqualsVisitor type check is not correct\nURL: https://github.com/apache/arrow/pull/5904#issuecomment-575477642\n \n \n   +1 thanks.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-17T06:00:20.543+0000",
                    "updated": "2020-01-17T06:00:20.543+0000",
                    "started": "2020-01-17T06:00:20.542+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "373418",
                    "issueId": "13270676"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270676/worklog/373419",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5904: ARROW-7264: [Java] RangeEqualsVisitor type check is not correct\nURL: https://github.com/apache/arrow/pull/5904\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-17T06:02:29.360+0000",
                    "updated": "2020-01-17T06:02:29.360+0000",
                    "started": "2020-01-17T06:02:29.360+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "373419",
                    "issueId": "13270676"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4e9a3364[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@298cf134[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@70b4ecc8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3effb6bb[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@52bb0c63[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6a33155d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3d36667f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7ebf550c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@746d96ac[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@606fc81[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@80d77a0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@c9e4498[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jan 17 06:06:04 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-01-17T06:06:04.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7264/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-11-26T09:57:30.000+0000",
        "updated": "2020-01-17T06:06:04.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently {{RangeEqualsVisitor}}\u00a0generally only checks type once and keep the result to avoid repeated type checking, see\r\n{code:java}\r\ntypeCompareResult = left.getField().getType().equals(right.getField().getType());\r\n{code}\r\nThis only compares {{ArrowType}} and for complex type, this may cause unexpected behavior, for example {{List<Int>}}\u00a0and {{List<BigInt>}}\u00a0would be type equals which not consider their child field.\r\n\r\nWe should compare Field here instead and to make it more extendable, we use {{TypeEqualsVisitor}}\u00a0to compare Field, in this way, one could choose whether checks names or metadata either.\r\n\r\n\u00a0\r\n\r\nAlso provide a test for ListVector to validate this change.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] RangeEqualsVisitor type check is not correct",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13270676/comment/17017735",
                    "id": "17017735",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 5904\n[https://github.com/apache/arrow/pull/5904]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-01-17T06:06:04.377+0000",
                    "updated": "2020-01-17T06:06:04.377+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z090mo:",
        "customfield_12314139": null
    }
}