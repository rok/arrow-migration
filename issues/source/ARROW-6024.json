{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13246783",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783",
    "key": "ARROW-6024",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 30000,
            "total": 30000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 30000,
            "total": 30000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6024/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 52,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/281831",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934\n \n \n   Provide more hash algorithms to choose for different scenarios.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T10:38:41.089+0000",
                    "updated": "2019-07-24T10:38:41.089+0000",
                    "started": "2019-07-24T10:38:41.089+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281831",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/281972",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#issuecomment-514652642\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4934?src=pr&el=h1) Report\n   > Merging [#4934](https://codecov.io/gh/apache/arrow/pull/4934?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/ff8c63b23aacd51170dd52697806fa8343ee4cfb?src=pr&el=desc) will **increase** coverage by `1.1%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4934/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4934?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4934      +/-   ##\n   ==========================================\n   + Coverage   88.51%   89.61%    +1.1%     \n   ==========================================\n     Files         908      660     -248     \n     Lines      115478    96707   -18771     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       102218    86667   -15551     \n   + Misses      12898    10040    -2858     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4934?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/json/converter.cc](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NvbnZlcnRlci5jYw==) | `90.53% <0%> (-1.78%)` | :arrow_down: |\n   | [cpp/src/arrow/json/chunked-builder.cc](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NodW5rZWQtYnVpbGRlci5jYw==) | `79.91% <0%> (-1.68%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/parser-test.cc](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcGFyc2VyLXRlc3QuY2M=) | `98.61% <0%> (-1.39%)` | :arrow_down: |\n   | [python/pyarrow/\\_\\_init\\_\\_.py](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX19pbml0X18ucHk=) | `67.04% <0%> (-0.4%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/parser.h](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcGFyc2VyLmg=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/csv/options.h](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3Yvb3B0aW9ucy5o) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | ... and [249 more](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4934?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4934?src=pr&el=footer). Last update [ff8c63b...a22892d](https://codecov.io/gh/apache/arrow/pull/4934?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T14:20:43.316+0000",
                    "updated": "2019-07-24T14:20:43.316+0000",
                    "started": "2019-07-24T14:20:43.316+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281972",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/281986",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#issuecomment-514657337\n \n \n   I'm a little concerned on the direction this is taking. Having multiple hash functions that only differ on finalization doesn't make sense to as they are probably only good for smaller inputs. \r\n   \r\n   The nonnegative implementations seem like they constrain hashes in a suboptimal way and if they really are needed should be done with composition.   I think it might pay to take a step back and write a clearer description of what you are trying to accomplish with different implementation s\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T14:32:15.111+0000",
                    "updated": "2019-07-24T14:32:15.111+0000",
                    "started": "2019-07-24T14:32:15.110+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281986",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/282451",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#issuecomment-514911184\n \n \n   @emkornfield Thanks a lot for your comments. Please see my reply in line.\r\n   \r\n   > I'm a little concerned on the direction this is taking. Having multiple hash functions that only differ on finalization doesn't make sense to as they are probably only good for smaller inputs.\r\n   \r\n   I am not sure if I fully understand your question. For large inputs, the finalization is also critical. If the hash code produced by the previous steps is not good enough, the finalization is the last chance to improve it.\r\n    \r\n   > The nonnegative implementations seem like they constrain hashes in a suboptimal way and if they really are needed should be done with composition. I think it might pay to take a step back and write a clearer description of what you are trying to accomplish with different implementation s\r\n   \r\n   Good suggestion about composition for non-negative implementations. In addition, I have also provided additional descriptions for each hash algorithm, and will update the description of this PR accordingly.\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-25T06:11:22.658+0000",
                    "updated": "2019-07-25T06:11:22.658+0000",
                    "started": "2019-07-25T06:11:22.658+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "282451",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/282462",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#issuecomment-514911184\n \n \n   @emkornfield Thanks a lot for your comments. Please see my reply in line.\r\n   \r\n   > I'm a little concerned on the direction this is taking. Having multiple hash functions that only differ on finalization doesn't make sense to as they are probably only good for smaller inputs.\r\n   \r\n   I am not sure if I fully understand your question. For large inputs, the finalization is also critical. If the hash code produced by the previous steps is not good enough, the finalization is the last chance to improve it.\r\n    \r\n   > The nonnegative implementations seem like they constrain hashes in a suboptimal way and if they really are needed should be done with composition. I think it might pay to take a step back and write a clearer description of what you are trying to accomplish with different implementation s\r\n   \r\n   Good suggestion about composition for non-negative implementations. In addition, I have also provided additional descriptions for each hash algorithm in the class comments, and will update the description of this PR accordingly.\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-25T06:26:02.589+0000",
                    "updated": "2019-07-25T06:26:02.589+0000",
                    "started": "2019-07-25T06:26:02.589+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "282462",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/283082",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#issuecomment-515298737\n \n \n   > I am not sure if I fully understand your question. For large inputs, the finalization is also critical. If the hash code produced by the previous steps is not good enough, the finalization is the last chance to improve it.\r\n   \r\n   My point is we have two implementations of hash functions that only differ in finalization.  This does nothing to actually provide good hash function implementation (from a  randomness/collision perspective).\r\n   \r\n   We should be spelling out the use-cases we are trying to satisfy and have a limited set of good quality hash functions to use in those scenarios.  One of those scenarios might be a very cheap hash function, in which case only a more complicated finalization step is needed.  Using something like the results of https://github.com/rurban/smhasher as a guide might be useful.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-26T03:52:26.679+0000",
                    "updated": "2019-07-26T03:52:26.679+0000",
                    "started": "2019-07-26T03:52:26.678+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283082",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/283083",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#discussion_r307579595\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/util/hash/NonNegativeHasher.java\n ##########\n @@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.memory.util.hash;\n+\n+/**\n+ * Wrapper for another {@link ArrowBufHasher}, to make the generated\n+ * hash code non-negative.\n+ */\n+public class NonNegativeHasher extends ArrowBufHasher {\n+\n+  private ArrowBufHasher innerHasher;\n+\n+  /**\n+   * Constructs a non-negative wrapper for another {@link ArrowBufHasher}.\n+   * @param innerHasher the hasher to be wrapped.\n+   */\n+  public NonNegativeHasher(ArrowBufHasher innerHasher) {\n+    this.innerHasher = innerHasher;\n+  }\n+\n+  @Override\n \n Review comment:\n   this type of overriding makes me think there should probably be an interface someplace to implement instead of relying on abstract classes.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-26T03:53:34.545+0000",
                    "updated": "2019-07-26T03:53:34.545+0000",
                    "started": "2019-07-26T03:53:34.545+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283083",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/283084",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#discussion_r307579698\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/util/hash/NonNegativeHasher.java\n ##########\n @@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.memory.util.hash;\n+\n+/**\n+ * Wrapper for another {@link ArrowBufHasher}, to make the generated\n \n Review comment:\n   I don't think this is super useful.  For hash-tables, I expect the implementation would be masking the result incrementally anyways to achieve positive values.  Are there other use-cases you had in mind?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-26T03:54:26.271+0000",
                    "updated": "2019-07-26T03:54:26.271+0000",
                    "started": "2019-07-26T03:54:26.270+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283084",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/283258",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#discussion_r307675243\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/util/hash/NonNegativeHasher.java\n ##########\n @@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.memory.util.hash;\n+\n+/**\n+ * Wrapper for another {@link ArrowBufHasher}, to make the generated\n \n Review comment:\n   Yes. A use case is here:\r\n   https://github.com/apache/flink/blob/master/flink-core/src/main/java/org/apache/flink/util/MathUtils.java\r\n   \r\n   In Flink, all hash codes are supposed to be positive.\r\n   \r\n   Integer masking is a better choice for conditional negation.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-26T09:59:48.956+0000",
                    "updated": "2019-07-26T09:59:48.956+0000",
                    "started": "2019-07-26T09:59:48.956+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283258",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/283259",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#discussion_r307675378\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/util/hash/NonNegativeHasher.java\n ##########\n @@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.memory.util.hash;\n+\n+/**\n+ * Wrapper for another {@link ArrowBufHasher}, to make the generated\n+ * hash code non-negative.\n+ */\n+public class NonNegativeHasher extends ArrowBufHasher {\n+\n+  private ArrowBufHasher innerHasher;\n+\n+  /**\n+   * Constructs a non-negative wrapper for another {@link ArrowBufHasher}.\n+   * @param innerHasher the hasher to be wrapped.\n+   */\n+  public NonNegativeHasher(ArrowBufHasher innerHasher) {\n+    this.innerHasher = innerHasher;\n+  }\n+\n+  @Override\n \n Review comment:\n   Would you please elaborate your thoughts in more details?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-26T10:00:10.262+0000",
                    "updated": "2019-07-26T10:00:10.262+0000",
                    "started": "2019-07-26T10:00:10.262+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283259",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/283261",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#issuecomment-515392796\n \n \n   > > I am not sure if I fully understand your question. For large inputs, the finalization is also critical. If the hash code produced by the previous steps is not good enough, the finalization is the last chance to improve it.\r\n   > \r\n   > My point is we have two implementations of hash functions that only differ in finalization. This does nothing to actually provide good hash function implementation (from a randomness/collision perspective).\r\n   > \r\n   > We should be spelling out the use-cases we are trying to satisfy and have a limited set of good quality hash functions to use in those scenarios. One of those scenarios might be a very cheap hash function, in which case only a more complicated finalization step is needed. Using something like the results of https://github.com/rurban/smhasher as a guide might be useful.\r\n   \r\n   I think I kind of understand your point. You mean two classes with different finalization implementations are duplicated, right?\r\n   \r\n   IMO, Simple hasing is in one extreme, that provides simple implementation for finalization; Murmur hashing is in the other extreme, that provides expensive implementation, since it involves several multiplications. Jenkins hashing is the trade-off between the two. It produces hash codes with no so good quality, but much less expensive than Murmur hashing, since it has no multiplication. \r\n   \r\n   I think with the 3 hash algorithms, we can satisfy a wide range of use cases. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-26T10:06:58.685+0000",
                    "updated": "2019-07-26T10:06:58.685+0000",
                    "started": "2019-07-26T10:06:58.685+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283261",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/283262",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#issuecomment-515392796\n \n \n   > > I am not sure if I fully understand your question. For large inputs, the finalization is also critical. If the hash code produced by the previous steps is not good enough, the finalization is the last chance to improve it.\r\n   > \r\n   > My point is we have two implementations of hash functions that only differ in finalization. This does nothing to actually provide good hash function implementation (from a randomness/collision perspective).\r\n   > \r\n   > We should be spelling out the use-cases we are trying to satisfy and have a limited set of good quality hash functions to use in those scenarios. One of those scenarios might be a very cheap hash function, in which case only a more complicated finalization step is needed. Using something like the results of https://github.com/rurban/smhasher as a guide might be useful.\r\n   \r\n   I think I kind of understand your point. You mean two classes with different finalization implementations are duplicated, right?\r\n   \r\n   IMO, Simple hasing is in one extreme, that provides simple implementation for finalization; Murmur hashing is in the other extreme, that provides expensive implementation, since it involves several multiplications. Jenkins hashing is the trade-off between the two. It produces hash codes with no so good quality, but much less expensive than Murmur hashing, since it has no multiplication. \r\n   \r\n   I think with the 3 hash algorithms, we can satisfy a wide range of use cases. \r\n   \r\n   What do you think?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-26T10:08:34.356+0000",
                    "updated": "2019-07-26T10:08:34.356+0000",
                    "started": "2019-07-26T10:08:34.355+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283262",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/283874",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#issuecomment-514652642\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4934?src=pr&el=h1) Report\n   > Merging [#4934](https://codecov.io/gh/apache/arrow/pull/4934?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/38b01764da445ce6383b60a50d1e9b313857a3d7?src=pr&el=desc) will **decrease** coverage by `22.62%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4934/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4934?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #4934       +/-   ##\n   ===========================================\n   - Coverage   87.49%   64.87%   -22.63%     \n   ===========================================\n     Files         998      488      -510     \n     Lines      141784    65092    -76692     \n     Branches     1418        0     -1418     \n   ===========================================\n   - Hits       124058    42229    -81829     \n   - Misses      17364    22863     +5499     \n   + Partials      362        0      -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4934?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/util/memory.h](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL21lbW9yeS5o) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/gandiva/date\\_utils.h](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2RhdGVfdXRpbHMuaA==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/util/memory.cc](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL21lbW9yeS5jYw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/filesystem/util-internal.cc](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9maWxlc3lzdGVtL3V0aWwtaW50ZXJuYWwuY2M=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/util/sse-util.h](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3NzZS11dGlsLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/gandiva/decimal\\_type\\_util.h](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2RlY2ltYWxfdHlwZV91dGlsLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/compute/logical\\_type.h](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2xvZ2ljYWxfdHlwZS5o) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/parquet/hasher.h](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2hhc2hlci5o) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/gandiva/basic\\_decimal\\_scalar.h](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Jhc2ljX2RlY2ltYWxfc2NhbGFyLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/compute/kernels/boolean.cc](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2tlcm5lbHMvYm9vbGVhbi5jYw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | ... and [749 more](https://codecov.io/gh/apache/arrow/pull/4934/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4934?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4934?src=pr&el=footer). Last update [38b0176...6299f35](https://codecov.io/gh/apache/arrow/pull/4934?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-28T06:33:17.015+0000",
                    "updated": "2019-07-28T06:33:17.015+0000",
                    "started": "2019-07-28T06:33:17.015+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283874",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/284741",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#issuecomment-516293492\n \n \n   @liyafan82 I'll try to take another look and reply tomorrow.  (same with other PRs).  Sorry for the delay.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T07:06:53.732+0000",
                    "updated": "2019-07-30T07:06:53.732+0000",
                    "started": "2019-07-30T07:06:53.732+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284741",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/284764",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#issuecomment-516307927\n \n \n   > @liyafan82 I'll try to take another look and reply tomorrow. (same with other PRs). Sorry for the delay.\r\n   \r\n   @emkornfield Don't worry. Just take your time. \r\n   It may be late for you. So please take good care of your health :-)\r\n   \r\n   > @liyafan82 I'll try to take another look and reply tomorrow. (same with other PRs). Sorry for the delay.\r\n   \r\n   @emkornfield Don't worry. Just take your time. Thanks.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T07:53:22.473+0000",
                    "updated": "2019-07-30T07:53:22.473+0000",
                    "started": "2019-07-30T07:53:22.473+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284764",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/285347",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#discussion_r308988485\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/util/hash/NonNegativeHasher.java\n ##########\n @@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.memory.util.hash;\n+\n+/**\n+ * Wrapper for another {@link ArrowBufHasher}, to make the generated\n+ * hash code non-negative.\n+ */\n+public class NonNegativeHasher extends ArrowBufHasher {\n+\n+  private ArrowBufHasher innerHasher;\n+\n+  /**\n+   * Constructs a non-negative wrapper for another {@link ArrowBufHasher}.\n+   * @param innerHasher the hasher to be wrapped.\n+   */\n+  public NonNegativeHasher(ArrowBufHasher innerHasher) {\n+    this.innerHasher = innerHasher;\n+  }\n+\n+  @Override\n \n Review comment:\n   It seems strange to override and just delegate these methods.  This could be avoided which an interface exposing only the public method currently exposed on the class.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T23:44:57.690+0000",
                    "updated": "2019-07-30T23:44:57.690+0000",
                    "started": "2019-07-30T23:44:57.689+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "285347",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/285350",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#discussion_r308989921\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/util/hash/NonNegativeHasher.java\n ##########\n @@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.memory.util.hash;\n+\n+/**\n+ * Wrapper for another {@link ArrowBufHasher}, to make the generated\n+ * hash code non-negative.\n+ */\n+public class NonNegativeHasher extends ArrowBufHasher {\n+\n+  private ArrowBufHasher innerHasher;\n+\n+  /**\n+   * Constructs a non-negative wrapper for another {@link ArrowBufHasher}.\n+   * @param innerHasher the hasher to be wrapped.\n+   */\n+  public NonNegativeHasher(ArrowBufHasher innerHasher) {\n+    this.innerHasher = innerHasher;\n+  }\n+\n+  @Override\n \n Review comment:\n   also it seems the protected methods aren't necessarily useful for implementing other hash functions (like murmurhash, etc)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T23:52:01.201+0000",
                    "updated": "2019-07-30T23:52:01.201+0000",
                    "started": "2019-07-30T23:52:01.201+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "285350",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/285370",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#issuecomment-516644622\n \n \n   > I think I kind of understand your point. You mean two classes with different finalization implementations are duplicated, right?\r\n   \r\n   Yes, we should implement good hash algorithms from the start not rely on different finalization for differentiation/performance.\r\n   \r\n   > IMO, Simple hasing is in one extreme, that provides simple implementation for finalization; Murmur hashing is in the other extreme, that provides expensive implementation, since it involves several multiplications. Jenkins hashing is the trade-off between the two. It produces hash codes with no so good quality, but much less expensive than Murmur hashing, since it has no multiplication.\r\n   \r\n   The issue I have is we aren't actually providing Murmur or Jenkins hashing we are only using them for finalization, based on the link to flink it seems like this pattern was adapted from the MathUtils which is used for post-processing for specific use-cases (partitioning within a machine and across a cluster), not mention is made of actual performance.  \r\n   \r\n   > I think with the 3 hash algorithms, we can satisfy a wide range of use cases.\r\n   \r\n   I think we should be clearer on the use-case and try to provide better all around hashes.  In my mind we probably want just 2:\r\n   1.  Something fast but not necessarily great  (based on some light research FNV or DJB2) seem to be reasonable, that is good for short values.\r\n   2.  Something better but possible slower (Murmur Hash or xxHash or whatever the latest thinking is here) and performs better on longer values.\r\n   \r\n   I'm not convinced that we need 3 hash functions.  Without clear guidelines on how to choose them, it seems like it just adds noise to the code-base.\r\n   \r\n   > Yes. A use case is here:\r\n   https://github.com/apache/flink/blob/master/flink-core/src/main/java/org/apache/flink/util/MathUtils.java\r\n   \r\n   I would lean against, this but I don't feel too strongly here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-31T00:22:17.055+0000",
                    "updated": "2019-07-31T00:22:17.055+0000",
                    "started": "2019-07-31T00:22:17.054+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "285370",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/285576",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#issuecomment-516741584\n \n \n   @emkornfield Thanks for all your comments.\r\n   \r\n   The initial purpose of this issue is to support our (open addressing) hash table (for hash join & hash aggregate). The methods introduced in this PR represent the requirements for our use cases.\r\n   \r\n   We want to contribute such methods to the Arrow community, because:\r\n   1. we believe such requirements are general enough in big data/distributed computing.\r\n   2. we have some experience in tuning the hash algorithms, and have some knowledge about the performance implications of these methods.  \r\n   \r\n   It seems you want to provide something more fundamental. That sounds good. Let's work on it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-31T07:59:07.669+0000",
                    "updated": "2019-07-31T07:59:07.669+0000",
                    "started": "2019-07-31T07:59:07.669+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "285576",
                    "issueId": "13246783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/worklog/287456",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4934: ARROW-6024: [Java] Provide more hash algorithms\nURL: https://github.com/apache/arrow/pull/4934#issuecomment-517531976\n \n \n   @pravindra I'd like your thoughts on this (see conversation above).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T03:17:31.021+0000",
                    "updated": "2019-08-02T03:17:31.021+0000",
                    "started": "2019-08-02T03:17:31.021+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "287456",
                    "issueId": "13246783"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 30000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7a40f474[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5bae0493[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@d9520bb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@26343706[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ce9e36[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2a25103c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e117d3b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@91ae7f8[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b57f7c3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@79f1ac65[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7c0cfec5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@22f7f39b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 30000,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Aug 10 05:56:20 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-10T05:56:20.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6024/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-07-24T10:35:35.000+0000",
        "updated": "2019-08-10T05:56:46.000+0000",
        "timeoriginalestimate": null,
        "description": "Provide more hash algorithms to choose for different scenarios. In particular, we provide the following hash algorithms:\r\n * Simple hasher: A hasher that calculates the hash code of integers as is, and do not perform any finalization. So the computation is extremely efficient, but the quality of the produced hash code may not be good.\r\n\r\n * Murmur finalizing hasher: Finalize the hash code by the Murmur hashing algorithm. Details of the algorithm can be found in [https://en.wikipedia.org/wiki/MurmurHash]. Murmur hashing is computational expensive, as it involves several integer multiplications. However, the produced hash codes have good quality in the sense that they are uniformly distributed in the universe.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "8h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 30000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Provide more hash algorithms ",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246783/comment/16904335",
                    "id": "16904335",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4934\n[https://github.com/apache/arrow/pull/4934]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-10T05:56:20.700+0000",
                    "updated": "2019-08-10T05:56:20.700+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z04z3s:",
        "customfield_12314139": null
    }
}