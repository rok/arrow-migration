{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13284529",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529",
    "key": "ARROW-7831",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yfful",
            "name": "yfful",
            "key": "yfful",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "stephane campinas",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yfful",
            "name": "yfful",
            "key": "yfful",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "stephane campinas",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yfful",
            "name": "yfful",
            "key": "yfful",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "stephane campinas",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 22800,
            "total": 22800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/customFieldOption/10430",
                "value": "Patch",
                "id": "10430",
                "disabled": false
            }
        ],
        "progress": {
            "progress": 22800,
            "total": 22800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7831/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 38,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/385040",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "scampi commented on pull request #6402: ARROW-7831: [Java] do not allocate a new offset buffer if the slice starts at 0 since the relative offset pointer would be unchanged\nURL: https://github.com/apache/arrow/pull/6402\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-11T09:19:57.286+0000",
                    "updated": "2020-02-11T09:19:57.286+0000",
                    "started": "2020-02-11T09:19:57.286+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "385040",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/385045",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6402: ARROW-7831: [Java] do not allocate a new offset buffer if the slice starts at 0 since the relative offset pointer would be unchanged\nURL: https://github.com/apache/arrow/pull/6402#issuecomment-584545432\n \n \n   https://issues.apache.org/jira/browse/ARROW-7831\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-11T09:31:49.442+0000",
                    "updated": "2020-02-11T09:31:49.442+0000",
                    "started": "2020-02-11T09:31:49.442+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "385045",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/394686",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #6402: ARROW-7831: [Java] do not allocate a new offset buffer if the slice starts at 0 since the relative offset pointer would be unchanged\nURL: https://github.com/apache/arrow/pull/6402#issuecomment-592362425\n \n \n   @BryanCutler do you have time to take a look?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-28T06:56:19.716+0000",
                    "updated": "2020-02-28T06:56:19.716+0000",
                    "started": "2020-02-28T06:56:19.716+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "394686",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/398935",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6402: ARROW-7831: [Java] do not allocate a new offset buffer if the slice starts at 0 since the relative offset pointer would be unchanged\nURL: https://github.com/apache/arrow/pull/6402#discussion_r388717421\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -740,10 +740,16 @@ private void splitAndTransferOffsetBuffer(int startIndex, int length, BaseVariab\n     final int start = offsetBuffer.getInt(startIndex * OFFSET_WIDTH);\n     final int end = offsetBuffer.getInt((startIndex + length) * OFFSET_WIDTH);\n     final int dataLength = end - start;\n-    target.allocateOffsetBuffer((length + 1) * OFFSET_WIDTH);\n-    for (int i = 0; i < length + 1; i++) {\n-      final int relativeSourceOffset = offsetBuffer.getInt((startIndex + i) * OFFSET_WIDTH) - start;\n-      target.offsetBuffer.setInt(i * OFFSET_WIDTH, relativeSourceOffset);\n+\n+    if (startIndex == 0) {\n+      target.offsetBuffer = offsetBuffer.slice(0, (1 + length) * OFFSET_WIDTH);\n+      target.offsetBuffer.getReferenceManager().retain();\n \n Review comment:\n   Sorry for the late review.  do you want to transfer the buffer here as well?\r\n   \r\n   Either way could you add a unit test to show expected transfer behavior?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-06T05:18:34.014+0000",
                    "updated": "2020-03-06T05:18:34.014+0000",
                    "started": "2020-03-06T05:18:34.014+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "398935",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/401977",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "siddharthteotia commented on pull request #6402: ARROW-7831: [Java] do not allocate a new offset buffer if the slice starts at 0 since the relative offset pointer would be unchanged\nURL: https://github.com/apache/arrow/pull/6402#discussion_r391415583\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -740,10 +740,16 @@ private void splitAndTransferOffsetBuffer(int startIndex, int length, BaseVariab\n     final int start = offsetBuffer.getInt(startIndex * OFFSET_WIDTH);\n     final int end = offsetBuffer.getInt((startIndex + length) * OFFSET_WIDTH);\n     final int dataLength = end - start;\n-    target.allocateOffsetBuffer((length + 1) * OFFSET_WIDTH);\n-    for (int i = 0; i < length + 1; i++) {\n-      final int relativeSourceOffset = offsetBuffer.getInt((startIndex + i) * OFFSET_WIDTH) - start;\n-      target.offsetBuffer.setInt(i * OFFSET_WIDTH, relativeSourceOffset);\n+\n+    if (startIndex == 0) {\n+      target.offsetBuffer = offsetBuffer.slice(0, (1 + length) * OFFSET_WIDTH);\n+      target.offsetBuffer.getReferenceManager().retain();\n \n Review comment:\n   +1 on the unit test. We should also verify that reference management and accounting is intact after this change. So unit test should cover this too.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-12T06:00:17.038+0000",
                    "updated": "2020-03-12T06:00:17.038+0000",
                    "started": "2020-03-12T06:00:17.038+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "401977",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/432280",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "scampi commented on a change in pull request #6402:\nURL: https://github.com/apache/arrow/pull/6402#discussion_r422419677\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n##########\n@@ -740,10 +740,16 @@ private void splitAndTransferOffsetBuffer(int startIndex, int length, BaseVariab\n     final int start = offsetBuffer.getInt(startIndex * OFFSET_WIDTH);\n     final int end = offsetBuffer.getInt((startIndex + length) * OFFSET_WIDTH);\n     final int dataLength = end - start;\n-    target.allocateOffsetBuffer((length + 1) * OFFSET_WIDTH);\n-    for (int i = 0; i < length + 1; i++) {\n-      final int relativeSourceOffset = offsetBuffer.getInt((startIndex + i) * OFFSET_WIDTH) - start;\n-      target.offsetBuffer.setInt(i * OFFSET_WIDTH, relativeSourceOffset);\n+\n+    if (startIndex == 0) {\n+      target.offsetBuffer = offsetBuffer.slice(0, (1 + length) * OFFSET_WIDTH);\n+      target.offsetBuffer.getReferenceManager().retain();\n\nReview comment:\n       > We should also verify that reference management and accounting is intact after this change\r\n   \r\n   @siddharthteotia  I have added a test but this is not checked. Do you have some pointers on how I can check this?\r\n   \r\n   > do you want to transfer the buffer here as well?\r\n   \r\n   @emkornfield What do you mean?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-08T23:35:41.017+0000",
                    "updated": "2020-05-08T23:35:41.017+0000",
                    "started": "2020-05-08T23:35:41.017+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "432280",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/433522",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6402:\nURL: https://github.com/apache/arrow/pull/6402#issuecomment-629016512\n\n\n   @siddharthteotia could you take another look at this to see if it is mergeable?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-15T04:18:27.625+0000",
                    "updated": "2020-05-15T04:18:27.625+0000",
                    "started": "2020-05-15T04:18:27.625+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433522",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/433584",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "scampi commented on a change in pull request #6402:\nURL: https://github.com/apache/arrow/pull/6402#discussion_r425610823\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n##########\n@@ -740,10 +740,16 @@ private void splitAndTransferOffsetBuffer(int startIndex, int length, BaseVariab\n     final int start = offsetBuffer.getInt(startIndex * OFFSET_WIDTH);\n     final int end = offsetBuffer.getInt((startIndex + length) * OFFSET_WIDTH);\n     final int dataLength = end - start;\n-    target.allocateOffsetBuffer((length + 1) * OFFSET_WIDTH);\n-    for (int i = 0; i < length + 1; i++) {\n-      final int relativeSourceOffset = offsetBuffer.getInt((startIndex + i) * OFFSET_WIDTH) - start;\n-      target.offsetBuffer.setInt(i * OFFSET_WIDTH, relativeSourceOffset);\n+\n+    if (startIndex == 0) {\n+      target.offsetBuffer = offsetBuffer.slice(0, (1 + length) * OFFSET_WIDTH);\n+      target.offsetBuffer.getReferenceManager().retain();\n\nReview comment:\n       @emkornfield I based the logic of that branch (relying on `retain()`) on the same case below for splitting the vailidty buffer:\r\n   \r\n   https://github.com/apache/arrow/blob/29545bcdef35f4151379e72e69ef7ce619f1a517/java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java#L772\r\n   \r\n   However, for the value buffer, `transferOwnership` is used, which is called from `transferBuffer`:\r\n   \r\n   https://github.com/apache/arrow/blob/29545bcdef35f4151379e72e69ef7ce619f1a517/java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java#L752\r\n   \r\n   I am not sure about the difference, but from the documentation I understand that the ownership is not transferred to the new allocator when using `retain`. Does that mean the validity buffer case needs to be updated and use `transferOwnership` as well ? \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-15T07:16:08.333+0000",
                    "updated": "2020-05-15T07:16:08.333+0000",
                    "started": "2020-05-15T07:16:08.333+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433584",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/434286",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #6402:\nURL: https://github.com/apache/arrow/pull/6402#discussion_r426346735\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n##########\n@@ -740,10 +740,16 @@ private void splitAndTransferOffsetBuffer(int startIndex, int length, BaseVariab\n     final int start = offsetBuffer.getInt(startIndex * OFFSET_WIDTH);\n     final int end = offsetBuffer.getInt((startIndex + length) * OFFSET_WIDTH);\n     final int dataLength = end - start;\n-    target.allocateOffsetBuffer((length + 1) * OFFSET_WIDTH);\n-    for (int i = 0; i < length + 1; i++) {\n-      final int relativeSourceOffset = offsetBuffer.getInt((startIndex + i) * OFFSET_WIDTH) - start;\n-      target.offsetBuffer.setInt(i * OFFSET_WIDTH, relativeSourceOffset);\n+\n+    if (startIndex == 0) {\n+      target.offsetBuffer = offsetBuffer.slice(0, (1 + length) * OFFSET_WIDTH);\n+      target.offsetBuffer.getReferenceManager().retain();\n\nReview comment:\n       I'm not an expert here.  @siddharthteotia do you know?  @rymurr?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-18T02:56:55.787+0000",
                    "updated": "2020-05-18T02:56:55.787+0000",
                    "started": "2020-05-18T02:56:55.787+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434286",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/434352",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on a change in pull request #6402:\nURL: https://github.com/apache/arrow/pull/6402#discussion_r426491071\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n##########\n@@ -740,10 +740,16 @@ private void splitAndTransferOffsetBuffer(int startIndex, int length, BaseVariab\n     final int start = offsetBuffer.getInt(startIndex * OFFSET_WIDTH);\n     final int end = offsetBuffer.getInt((startIndex + length) * OFFSET_WIDTH);\n     final int dataLength = end - start;\n-    target.allocateOffsetBuffer((length + 1) * OFFSET_WIDTH);\n-    for (int i = 0; i < length + 1; i++) {\n-      final int relativeSourceOffset = offsetBuffer.getInt((startIndex + i) * OFFSET_WIDTH) - start;\n-      target.offsetBuffer.setInt(i * OFFSET_WIDTH, relativeSourceOffset);\n+\n+    if (startIndex == 0) {\n+      target.offsetBuffer = offsetBuffer.slice(0, (1 + length) * OFFSET_WIDTH);\n+      target.offsetBuffer.getReferenceManager().retain();\n\nReview comment:\n       I think we have an inconsistency in the way the value buffer is handled vs the validity/offset buffer. If the testSplitAndTransfer tests were run with two child buffer allocators I think they would fail. We transfer ownership of the data buffer to the target allocator and depending on the branch we just increment the ref count of the 'source' vectors offset/validity buffer (or create a new buffer owned by the source vectors allocator). So if the source buffer allocator is closed while we are still using the target buffer we will end up having a bad day.\r\n   \r\n   I guess the question is does transfer mean 'transfer the data (ie copy)' or does it mean 'transfer ownership'. My feeling is that we mean transfer ownership and that the handling of the validity buffer (in both fixed and variable width vectors) and offset buffer isn't quite right. The reason I think we mean transfer ownership is that we already have `copy` methods and we have the concept of a `TransferPair` which explicitly handles 2 allocators.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-18T09:28:35.741+0000",
                    "updated": "2020-05-18T09:28:35.741+0000",
                    "started": "2020-05-18T09:28:35.741+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "434352",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/436384",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #6402:\nURL: https://github.com/apache/arrow/pull/6402#discussion_r429037376\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n##########\n@@ -740,10 +740,16 @@ private void splitAndTransferOffsetBuffer(int startIndex, int length, BaseVariab\n     final int start = offsetBuffer.getInt(startIndex * OFFSET_WIDTH);\n     final int end = offsetBuffer.getInt((startIndex + length) * OFFSET_WIDTH);\n     final int dataLength = end - start;\n-    target.allocateOffsetBuffer((length + 1) * OFFSET_WIDTH);\n-    for (int i = 0; i < length + 1; i++) {\n-      final int relativeSourceOffset = offsetBuffer.getInt((startIndex + i) * OFFSET_WIDTH) - start;\n-      target.offsetBuffer.setInt(i * OFFSET_WIDTH, relativeSourceOffset);\n+\n+    if (startIndex == 0) {\n+      target.offsetBuffer = offsetBuffer.slice(0, (1 + length) * OFFSET_WIDTH);\n+      target.offsetBuffer.getReferenceManager().retain();\n\nReview comment:\n       @jacques-n some historical context would be useful here, does this warrant another JIRA item to cleanup?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-22T04:32:27.490+0000",
                    "updated": "2020-05-22T04:32:27.490+0000",
                    "started": "2020-05-22T04:32:27.490+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "436384",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/439163",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6402:\nURL: https://github.com/apache/arrow/pull/6402#issuecomment-636402809\n\n\n   ping @siddharthteotia or @rymurr \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-31T00:29:16.391+0000",
                    "updated": "2020-05-31T00:29:16.391+0000",
                    "started": "2020-05-31T00:29:16.390+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439163",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/439473",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on a change in pull request #6402:\nURL: https://github.com/apache/arrow/pull/6402#discussion_r433156439\n\n\n\n##########\nFile path: java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java\n##########\n@@ -886,6 +886,65 @@ public void testNullableFixedType4() {\n    *  -- VarBinaryVector\n    */\n \n+  @Test /* VarCharVector */\n+  public void testSplitAndTransfer1() {\n+    try (final VarCharVector target = newVarCharVector(\"split-target\", allocator)) {\n+      try (final VarCharVector vector = newVarCharVector(EMPTY_SCHEMA_PATH, allocator)) {\n+        vector.allocateNew(1024 * 10, 1024);\n+\n+        vector.set(0, STR1);\n+        vector.set(1, STR2);\n+        vector.set(2, STR3);\n+        vector.setValueCount(3);\n+\n+        final long allocatedMem = allocator.getAllocatedMemory();\n+        final int validityRefCnt = vector.getValidityBuffer().refCnt();\n+        final int offsetRefCnt = vector.getOffsetBuffer().refCnt();\n+        final int dataRefCnt = vector.getDataBuffer().refCnt();\n+\n+        // split and transfer with slice starting at the beginning: this should not allocate anything new\n+        vector.splitAndTransferTo(0, 2, target);\n+        assertEquals(allocator.getAllocatedMemory(), allocatedMem);\n+        // 2 = validity and offset buffers are stored in the same arrowbuf\n+        assertEquals(vector.getValidityBuffer().refCnt(), validityRefCnt + 2);\n\nReview comment:\n       nit: `assertEquals` is normally 'expected' as the first arg and 'actual' as the second. Makes error logs easier to read too. Swapping the order of args here and in the next unit test would be nice.\n\n##########\nFile path: java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java\n##########\n@@ -886,6 +886,65 @@ public void testNullableFixedType4() {\n    *  -- VarBinaryVector\n    */\n \n+  @Test /* VarCharVector */\n+  public void testSplitAndTransfer1() {\n+    try (final VarCharVector target = newVarCharVector(\"split-target\", allocator)) {\n+      try (final VarCharVector vector = newVarCharVector(EMPTY_SCHEMA_PATH, allocator)) {\n+        vector.allocateNew(1024 * 10, 1024);\n+\n+        vector.set(0, STR1);\n+        vector.set(1, STR2);\n+        vector.set(2, STR3);\n+        vector.setValueCount(3);\n+\n+        final long allocatedMem = allocator.getAllocatedMemory();\n+        final int validityRefCnt = vector.getValidityBuffer().refCnt();\n+        final int offsetRefCnt = vector.getOffsetBuffer().refCnt();\n+        final int dataRefCnt = vector.getDataBuffer().refCnt();\n+\n+        // split and transfer with slice starting at the beginning: this should not allocate anything new\n+        vector.splitAndTransferTo(0, 2, target);\n+        assertEquals(allocator.getAllocatedMemory(), allocatedMem);\n+        // 2 = validity and offset buffers are stored in the same arrowbuf\n+        assertEquals(vector.getValidityBuffer().refCnt(), validityRefCnt + 2);\n\nReview comment:\n       Sorry if I am being thick: why does the validity and offset ref count increase by 2? We created one copy for the transfer right? Where does the second come from?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T10:29:36.689+0000",
                    "updated": "2020-06-01T10:29:36.689+0000",
                    "started": "2020-06-01T10:29:36.688+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439473",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/444497",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on a change in pull request #6402:\nURL: https://github.com/apache/arrow/pull/6402#discussion_r439003304\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n##########\n@@ -740,10 +740,16 @@ private void splitAndTransferOffsetBuffer(int startIndex, int length, BaseVariab\n     final int start = offsetBuffer.getInt(startIndex * OFFSET_WIDTH);\n     final int end = offsetBuffer.getInt((startIndex + length) * OFFSET_WIDTH);\n     final int dataLength = end - start;\n-    target.allocateOffsetBuffer((length + 1) * OFFSET_WIDTH);\n-    for (int i = 0; i < length + 1; i++) {\n-      final int relativeSourceOffset = offsetBuffer.getInt((startIndex + i) * OFFSET_WIDTH) - start;\n-      target.offsetBuffer.setInt(i * OFFSET_WIDTH, relativeSourceOffset);\n+\n+    if (startIndex == 0) {\n+      target.offsetBuffer = offsetBuffer.slice(0, (1 + length) * OFFSET_WIDTH);\n+      target.offsetBuffer.getReferenceManager().retain();\n\nReview comment:\n       splitAndTransfer is trying to do best effort transfer of data, not copy. However, for some situations some allocations have to occur. This is only true for split and transfer. Normal transfers never have to copy data and only about ownership. \r\n   \r\n   I can't actually get to the commit these comments are on to confirm the specific details. It makes sense that a split and transfer that starts at the same initial offset doesn't need to rewrite the offsets and therefore would do a transfer. A clearer/more complete optimization would probably to simply read the initial starting offset at the index that we're slicing from and if that is zero, don't do the allocate/copy. In that case, if you have a bunch of empty strings or null values, you still can do a split and transfer with zero copy/allocation.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-11T18:56:34.239+0000",
                    "updated": "2020-06-11T18:56:34.239+0000",
                    "started": "2020-06-11T18:56:34.239+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "444497",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/444676",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6402:\nURL: https://github.com/apache/arrow/pull/6402#issuecomment-643020217\n\n\n   @scampi are you able to address the feedback on this? Otherwise this might need someone to pick it up since 4 months have passed\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-12T01:51:27.651+0000",
                    "updated": "2020-06-12T01:51:27.651+0000",
                    "started": "2020-06-12T01:51:27.651+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "444676",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/444693",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "scampi commented on pull request #6402:\nURL: https://github.com/apache/arrow/pull/6402#issuecomment-643033240\n\n\n   @wesm Sorry for the delay, I'll work on this in the next few days. Things have been hectic on my side\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-12T02:42:28.278+0000",
                    "updated": "2020-06-12T02:42:28.278+0000",
                    "started": "2020-06-12T02:42:28.278+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "444693",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/445460",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "scampi commented on a change in pull request #6402:\nURL: https://github.com/apache/arrow/pull/6402#discussion_r439778364\n\n\n\n##########\nFile path: java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java\n##########\n@@ -886,6 +886,65 @@ public void testNullableFixedType4() {\n    *  -- VarBinaryVector\n    */\n \n+  @Test /* VarCharVector */\n+  public void testSplitAndTransfer1() {\n+    try (final VarCharVector target = newVarCharVector(\"split-target\", allocator)) {\n+      try (final VarCharVector vector = newVarCharVector(EMPTY_SCHEMA_PATH, allocator)) {\n+        vector.allocateNew(1024 * 10, 1024);\n+\n+        vector.set(0, STR1);\n+        vector.set(1, STR2);\n+        vector.set(2, STR3);\n+        vector.setValueCount(3);\n+\n+        final long allocatedMem = allocator.getAllocatedMemory();\n+        final int validityRefCnt = vector.getValidityBuffer().refCnt();\n+        final int offsetRefCnt = vector.getOffsetBuffer().refCnt();\n+        final int dataRefCnt = vector.getDataBuffer().refCnt();\n+\n+        // split and transfer with slice starting at the beginning: this should not allocate anything new\n+        vector.splitAndTransferTo(0, 2, target);\n+        assertEquals(allocator.getAllocatedMemory(), allocatedMem);\n+        // 2 = validity and offset buffers are stored in the same arrowbuf\n+        assertEquals(vector.getValidityBuffer().refCnt(), validityRefCnt + 2);\n\nReview comment:\n       Of course ;o) I'm used to hamcrest where that is the opposite...\n\n##########\nFile path: java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java\n##########\n@@ -886,6 +886,65 @@ public void testNullableFixedType4() {\n    *  -- VarBinaryVector\n    */\n \n+  @Test /* VarCharVector */\n+  public void testSplitAndTransfer1() {\n+    try (final VarCharVector target = newVarCharVector(\"split-target\", allocator)) {\n+      try (final VarCharVector vector = newVarCharVector(EMPTY_SCHEMA_PATH, allocator)) {\n+        vector.allocateNew(1024 * 10, 1024);\n+\n+        vector.set(0, STR1);\n+        vector.set(1, STR2);\n+        vector.set(2, STR3);\n+        vector.setValueCount(3);\n+\n+        final long allocatedMem = allocator.getAllocatedMemory();\n+        final int validityRefCnt = vector.getValidityBuffer().refCnt();\n+        final int offsetRefCnt = vector.getOffsetBuffer().refCnt();\n+        final int dataRefCnt = vector.getDataBuffer().refCnt();\n+\n+        // split and transfer with slice starting at the beginning: this should not allocate anything new\n+        vector.splitAndTransferTo(0, 2, target);\n+        assertEquals(allocator.getAllocatedMemory(), allocatedMem);\n+        // 2 = validity and offset buffers are stored in the same arrowbuf\n+        assertEquals(vector.getValidityBuffer().refCnt(), validityRefCnt + 2);\n\nReview comment:\n       Not at all, that's a good question. I've improved the assertion's comment in commit .\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-13T23:51:52.273+0000",
                    "updated": "2020-06-13T23:51:52.273+0000",
                    "started": "2020-06-13T23:51:52.273+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "445460",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/445461",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "scampi commented on a change in pull request #6402:\nURL: https://github.com/apache/arrow/pull/6402#discussion_r439778366\n\n\n\n##########\nFile path: java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java\n##########\n@@ -886,6 +886,65 @@ public void testNullableFixedType4() {\n    *  -- VarBinaryVector\n    */\n \n+  @Test /* VarCharVector */\n+  public void testSplitAndTransfer1() {\n+    try (final VarCharVector target = newVarCharVector(\"split-target\", allocator)) {\n+      try (final VarCharVector vector = newVarCharVector(EMPTY_SCHEMA_PATH, allocator)) {\n+        vector.allocateNew(1024 * 10, 1024);\n+\n+        vector.set(0, STR1);\n+        vector.set(1, STR2);\n+        vector.set(2, STR3);\n+        vector.setValueCount(3);\n+\n+        final long allocatedMem = allocator.getAllocatedMemory();\n+        final int validityRefCnt = vector.getValidityBuffer().refCnt();\n+        final int offsetRefCnt = vector.getOffsetBuffer().refCnt();\n+        final int dataRefCnt = vector.getDataBuffer().refCnt();\n+\n+        // split and transfer with slice starting at the beginning: this should not allocate anything new\n+        vector.splitAndTransferTo(0, 2, target);\n+        assertEquals(allocator.getAllocatedMemory(), allocatedMem);\n+        // 2 = validity and offset buffers are stored in the same arrowbuf\n+        assertEquals(vector.getValidityBuffer().refCnt(), validityRefCnt + 2);\n\nReview comment:\n       Not at all, that's a good question. I've improved the assertion's comment in commit e304816f1e88609ce79a18d45c657901489e0b13.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-13T23:52:15.026+0000",
                    "updated": "2020-06-13T23:52:15.026+0000",
                    "started": "2020-06-13T23:52:15.026+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "445461",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/445465",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "scampi commented on a change in pull request #6402:\nURL: https://github.com/apache/arrow/pull/6402#discussion_r439778366\n\n\n\n##########\nFile path: java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java\n##########\n@@ -886,6 +886,65 @@ public void testNullableFixedType4() {\n    *  -- VarBinaryVector\n    */\n \n+  @Test /* VarCharVector */\n+  public void testSplitAndTransfer1() {\n+    try (final VarCharVector target = newVarCharVector(\"split-target\", allocator)) {\n+      try (final VarCharVector vector = newVarCharVector(EMPTY_SCHEMA_PATH, allocator)) {\n+        vector.allocateNew(1024 * 10, 1024);\n+\n+        vector.set(0, STR1);\n+        vector.set(1, STR2);\n+        vector.set(2, STR3);\n+        vector.setValueCount(3);\n+\n+        final long allocatedMem = allocator.getAllocatedMemory();\n+        final int validityRefCnt = vector.getValidityBuffer().refCnt();\n+        final int offsetRefCnt = vector.getOffsetBuffer().refCnt();\n+        final int dataRefCnt = vector.getDataBuffer().refCnt();\n+\n+        // split and transfer with slice starting at the beginning: this should not allocate anything new\n+        vector.splitAndTransferTo(0, 2, target);\n+        assertEquals(allocator.getAllocatedMemory(), allocatedMem);\n+        // 2 = validity and offset buffers are stored in the same arrowbuf\n+        assertEquals(vector.getValidityBuffer().refCnt(), validityRefCnt + 2);\n\nReview comment:\n       Not at all, that's a good question. I've improved the assertion's comment in commit e304816f1e88609ce79a18d45c657901489e0b13. Do they make sense ?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-14T00:24:34.498+0000",
                    "updated": "2020-06-14T00:24:34.498+0000",
                    "started": "2020-06-14T00:24:34.497+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "445465",
                    "issueId": "13284529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/worklog/445471",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "scampi commented on a change in pull request #6402:\nURL: https://github.com/apache/arrow/pull/6402#discussion_r439780145\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n##########\n@@ -740,10 +740,16 @@ private void splitAndTransferOffsetBuffer(int startIndex, int length, BaseVariab\n     final int start = offsetBuffer.getInt(startIndex * OFFSET_WIDTH);\n     final int end = offsetBuffer.getInt((startIndex + length) * OFFSET_WIDTH);\n     final int dataLength = end - start;\n-    target.allocateOffsetBuffer((length + 1) * OFFSET_WIDTH);\n-    for (int i = 0; i < length + 1; i++) {\n-      final int relativeSourceOffset = offsetBuffer.getInt((startIndex + i) * OFFSET_WIDTH) - start;\n-      target.offsetBuffer.setInt(i * OFFSET_WIDTH, relativeSourceOffset);\n+\n+    if (startIndex == 0) {\n+      target.offsetBuffer = offsetBuffer.slice(0, (1 + length) * OFFSET_WIDTH);\n+      target.offsetBuffer.getReferenceManager().retain();\n\nReview comment:\n       > If the testSplitAndTransfer tests were run with two child buffer allocators I think they would fail.\r\n   \r\n   @rymurr there was indeed a problem in that case where the sliced data was not transferred to the target allocator. See da7e3eacaf021580b4aae0f17492c17dbbef44a0 for a test about that.\r\n   \r\n   > A clearer/more complete optimization would probably to simply read the initial starting offset at the index that we're slicing from and if that is zero, don't do the allocate/copy\r\n   \r\n   @jacques-n I have extended the condition to include also that case of empties/nulls. See e304816f1e88609ce79a18d45c657901489e0b13\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-14T00:27:51.874+0000",
                    "updated": "2020-06-14T00:27:51.874+0000",
                    "started": "2020-06-14T00:27:51.873+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "445471",
                    "issueId": "13284529"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 22800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@47c5ffe[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@54ae705a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f7c2db8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7877baad[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f68e846[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@e361eb7[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3019f324[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@75fe9558[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4d6c7979[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@739115c5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c6e4840[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@d3b48c0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 22800,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 14 16:36:14 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-07-14T16:36:14.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7831/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-02-11T09:08:57.000+0000",
        "updated": "2020-07-14T17:26:43.000+0000",
        "timeoriginalestimate": null,
        "description": "In case the start of the slice is zero, a new offset buffer is unnecessarily allocated:\r\n\r\nhttps://github.com/apache/arrow/blob/master/java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java#L743\r\n\r\nSince the starting offset is zero, the offset pointers don't have to be updated.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 22800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] unnecessary buffer allocation when calling splitAndTransferTo on variable width vectors",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284529/comment/17157502",
                    "id": "17157502",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 6402\n[https://github.com/apache/arrow/pull/6402]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-07-14T16:36:14.367+0000",
                    "updated": "2020-07-14T16:36:14.367+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0bd3k:",
        "customfield_12314139": null
    }
}