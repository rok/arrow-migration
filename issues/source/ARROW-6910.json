{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13262735",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735",
    "key": "ARROW-6910",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346358",
                "id": "12346358",
                "description": "",
                "name": "0.15.1",
                "archived": false,
                "released": true,
                "releaseDate": "2019-11-01"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "name": "Critical",
            "id": "2"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "1.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
            "name": "MBALearnsToCode",
            "key": "mbalearnstocode",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "V Luong",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
            "name": "MBALearnsToCode",
            "key": "mbalearnstocode",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "V Luong",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 17400,
            "total": 17400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 17400,
            "total": 17400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6910/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 30,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/330961",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701\n \n \n   The current default behavior causes applications dealing in large datasets to hold on to a large amount of physical operating system memory. While this may improve performance in some cases, it empirically seems to be causing problems for users.\r\n   \r\n   There's some discussion of this issue in some other contexts here\r\n   \r\n   https://github.com/jemalloc/jemalloc/issues/1128\r\n   \r\n   Here is a test script I used to check the RSS while reading a large Parquet file (~10GB in memory) in a loop\r\n   \r\n   https://gist.github.com/wesm/c75ad3b6dcd37231aaacf56a80a5e401\r\n   \r\n   with this patch, the RSS increases a bit and then becomes somewhat flat around ~130MB\r\n   \r\n   ```\r\n   $ python test.py \r\n   RSS: 102883328, change: 20443136\r\n   RSS: 112705536, change: 9822208\r\n   RSS: 120995840, change: 8290304\r\n   RSS: 125853696, change: 4857856\r\n   RSS: 130383872, change: 4530176\r\n   RSS: 132333568, change: 1949696\r\n   RSS: 132800512, change: 466944\r\n   RSS: 133206016, change: 405504\r\n   RSS: 134955008, change: 1748992\r\n   RSS: 134430720, change: -524288\r\n   Took 39.76783990859985 seconds\r\n   ```\r\n   \r\n   Without the patch, the memory balloons to the 12+ GB range and stays there until process exit. \r\n   \r\n   ```\r\n   $ python test.py \r\n   RSS: 10833055744, change: 10750091264\r\n   RSS: 14379970560, change: 3546914816\r\n   RSS: 16559378432, change: 2179407872\r\n   RSS: 16928301056, change: 368922624\r\n   RSS: 17635622912, change: 707321856\r\n   RSS: 18375499776, change: 739876864\r\n   RSS: 19364487168, change: 988987392\r\n   RSS: 18165268480, change: -1199218688\r\n   RSS: 15555305472, change: -2609963008\r\n   RSS: 14524010496, change: -1031294976\r\n   Took 36.0588436126709 seconds\r\n   ````\r\n   \r\n   You can see that the runtime in the second case is about 10% better. Which behavior is more desirable will be application dependent which suggests that freeing more aggressively is a less surprising default for users, but we allow users to opt in to the longer page decay time to get better performance (at the expense of higher process RAM usage)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-19T17:05:59.673+0000",
                    "updated": "2019-10-19T17:05:59.673+0000",
                    "started": "2019-10-19T17:05:59.673+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330961",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/330963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#issuecomment-544173983\n \n \n   @ursabot benchmark\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-19T17:10:15.700+0000",
                    "updated": "2019-10-19T17:10:15.700+0000",
                    "started": "2019-10-19T17:10:15.700+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330963",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/330964",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#issuecomment-544174834\n \n \n   https://issues.apache.org/jira/browse/ARROW-6910\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-19T17:16:23.043+0000",
                    "updated": "2019-10-19T17:16:23.043+0000",
                    "started": "2019-10-19T17:16:23.042+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330964",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/330967",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on issue #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#issuecomment-544179057\n \n \n   [AMD64 Ubuntu 18.04 C++ Benchmark (#71877)](https://ci.ursalabs.org/#builders/73/builds/59) builder failed.\n   \n   Revision: e0b2a70d65d8e5c942bd7c486f2d296f5d7c92bb\n   \n   Archery: `'archery benchmark ...'` step's stderr:\n   ```\n   Selected compiler gcc 7.4.0\n   Using ld linker\n   Configured for RELEASE build (set with cmake -DCMAKE_BUILD_TYPE={release,debug,...})\n   CMake Warning at cmake_modules/ThirdpartyToolchain.cmake:168 (find_package):\n     No \"Findbenchmark.cmake\" found in CMAKE_MODULE_PATH.\n   Call Stack (most recent call first):\n     cmake_modules/ThirdpartyToolchain.cmake:1721 (resolve_dependency)\n     CMakeLists.txt:424 (include)\n   \n   \n   CMake Warning (dev) at cmake_modules/ThirdpartyToolchain.cmake:168 (find_package):\n     Findbenchmark.cmake must either be part of this project itself, in this\n     case adjust CMAKE_MODULE_PATH so that it points to the correct location\n     inside its source tree.\n   \n     Or it must be installed by a package which has already been found via\n     find_package().  In this case make sure that package has indeed been found\n     and adjust CMAKE_MODULE_PATH to contain the location where that package has\n     installed Findbenchmark.cmake.  This must be a location provided by that\n     package.  This error in general means that the buildsystem of this project\n     is relying on a Find-module without ensuring that it is actually available.\n   \n   Call Stack (most recent call first):\n     cmake_modules/ThirdpartyToolchain.cmake:1721 (resolve_dependency)\n     CMakeLists.txt:424 (include)\n   This warning is for project developers.  Use -Wno-dev to suppress it.\n   \n   Cloning into '/tmp/arrow-archery-68634yvr/master/arrow'...\n   done.\n   Note: checking out '2966c01cfacbd877de2db7e4eaa2a87dcfdfd1e2'.\n   \n   You are in 'detached HEAD' state. You can look around, make experimental\n   changes and commit them, and you can discard any commits you make in this\n   state without impacting any branches by performing another checkout.\n   \n   If you want to create a new branch to retain commits you create, you may\n   do so (now or later) by using -b with the checkout command again. Example:\n   \n     git checkout -b <new-branch-name>\n   \n   HEAD is now at 2966c01cf Merge e0b2a70d65d8e5c942bd7c486f2d296f5d7c92bb into d9234628a4f510117d7d7c36e5c816e5bea1d9c4\n   Selected compiler gcc 7.4.0\n   Using ld linker\n   Configured for RELEASE build (set with cmake -DCMAKE_BUILD_TYPE={release,debug,...})\n   CMake Warning at cmake_modules/ThirdpartyToolchain.cmake:168 (find_package):\n     No \"Findbenchmark.cmake\" found in CMAKE_MODULE_PATH.\n   Call Stack (most recent call first):\n     cmake_modules/ThirdpartyToolchain.cmake:1721 (resolve_dependency)\n     CMakeLists.txt:424 (include)\n   \n   \n   CMake Warning (dev) at cmake_modules/ThirdpartyToolchain.cmake:168 (find_package):\n     Findbenchmark.cmake must either be part of this project itself, in this\n     case adjust CMAKE_MODULE_PATH so that it points to the correct location\n     inside its source tree.\n   \n     Or it must be installed by a package which has already been found via\n     find_package().  In this case make sure that package has indeed been found\n     and adjust CMAKE_MODULE_PATH to contain the location where that package has\n     installed Findbenchmark.cmake.  This must be a location provided by that\n     package.  This error in general means that the buildsystem of this project\n     is relying on a Find-module without ensuring that it is actually available.\n   \n   Call Stack (most recent call first):\n     cmake_modules/ThirdpartyToolchain.cmake:1721 (resolve_dependency)\n     CMakeLists.txt:424 (include)\n   This warning is for project developers.  Use -Wno-dev to suppress it.\n   \n   2019-10-19 17:18:46\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-ipc-read-write-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 22.26, 34.35, 26.15\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:20:42\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-utf8-util-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 4.94, 23.98, 23.32\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:21:39\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-hashing-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 3.21, 20.30, 22.10\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:22:07\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-csv-parser-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 2.73, 18.55, 21.46\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:22:44\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-compute-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 2.38, 16.71, 20.73\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:24:42\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-decimal-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 1.30, 11.60, 18.37\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:25:40\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-compute-compare-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 1.12, 9.82, 17.37\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:26:39\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-compute-aggregate-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 1.04, 8.21, 16.34\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:27:08\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-bit-util-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 1.02, 7.52, 15.85\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:28:11\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-builder-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 1.01, 6.24, 14.85\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:30:09\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-int-util-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 1.00, 4.56, 13.23\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:30:39\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-compute-sort-to-indices-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 1.00, 4.22, 12.84\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:32:05\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-trie-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 1.00, 3.42, 11.80\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:32:20\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-json-parser-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 1.00, 3.30, 11.62\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:33:03\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-io-memory-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 1.00, 2.97, 11.12\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:34:31\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-type-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 3.51, 3.36, 10.54\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:35:07\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-io-file-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 2.36, 3.08, 10.14\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:35:51\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-compute-take-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 2.00, 2.89, 9.78\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   2019-10-19 17:41:44\n   Running /tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-number-parsing-benchmark\n   Run on (40 X 3600 MHz CPU s)\n   CPU Caches:\n     L1 Data 32K (x20)\n     L1 Instruction 32K (x20)\n     L2 Unified 256K (x20)\n     L3 Unified 51200K (x1)\n   Load Average: 1.02, 1.60, 6.99\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\n   arrow-number-parsing-benchmark: src/utils.h:248: void double_conversion::StringBuilder::AddSubstring(const char*, int): Assertion `!is_finalized() && position_ + n < buffer_.length()' failed.\n   Traceback (most recent call last):\n     File \"/usr/local/bin/archery\", line 11, in <module>\n       load_entry_point('archery', 'console_scripts', 'archery')()\n     File \"/usr/local/lib/python3.6/dist-packages/click/core.py\", line 764, in __call__\n       return self.main(*args, **kwargs)\n     File \"/usr/local/lib/python3.6/dist-packages/click/core.py\", line 717, in main\n       rv = self.invoke(ctx)\n     File \"/usr/local/lib/python3.6/dist-packages/click/core.py\", line 1137, in invoke\n       return _process_result(sub_ctx.command.invoke(sub_ctx))\n     File \"/usr/local/lib/python3.6/dist-packages/click/core.py\", line 1137, in invoke\n       return _process_result(sub_ctx.command.invoke(sub_ctx))\n     File \"/usr/local/lib/python3.6/dist-packages/click/core.py\", line 956, in invoke\n       return ctx.invoke(self.callback, **ctx.params)\n     File \"/usr/local/lib/python3.6/dist-packages/click/core.py\", line 555, in invoke\n       return callback(*args, **kwargs)\n     File \"/usr/local/lib/python3.6/dist-packages/click/decorators.py\", line 17, in new_func\n       return f(get_current_context(), *args, **kwargs)\n     File \"/buildbot/AMD64_Ubuntu_18_04_C___Benchmark/dev/archery/archery/cli.py\", line 461, in benchmark_diff\n       for comparator in runner_comp.comparisons:\n     File \"/buildbot/AMD64_Ubuntu_18_04_C___Benchmark/dev/archery/archery/benchmark/compare.py\", line 114, in comparisons\n       for suite_name, (suite_cont, suite_base) in suites:\n     File \"/buildbot/AMD64_Ubuntu_18_04_C___Benchmark/dev/archery/archery/benchmark/compare.py\", line 89, in pairwise_compare\n       dict_contender = {e.name: e for e in contender}\n     File \"/buildbot/AMD64_Ubuntu_18_04_C___Benchmark/dev/archery/archery/benchmark/compare.py\", line 89, in <dictcomp>\n       dict_contender = {e.name: e for e in contender}\n     File \"/buildbot/AMD64_Ubuntu_18_04_C___Benchmark/dev/archery/archery/benchmark/runner.py\", line 177, in suites\n       suite = self.suite(suite_name, suite_bin)\n     File \"/buildbot/AMD64_Ubuntu_18_04_C___Benchmark/dev/archery/archery/benchmark/runner.py\", line 154, in suite\n       results = suite_cmd.results()\n     File \"/buildbot/AMD64_Ubuntu_18_04_C___Benchmark/dev/archery/archery/benchmark/google.py\", line 64, in results\n       self.run(*argv, check=True)\n     File \"/buildbot/AMD64_Ubuntu_18_04_C___Benchmark/dev/archery/archery/utils/command.py\", line 74, in run\n       return subprocess.run(invocation, **kwargs)\n     File \"/usr/lib/python3.6/subprocess.py\", line 438, in run\n       output=stdout, stderr=stderr)\n   subprocess.CalledProcessError: Command '['/tmp/arrow-archery-68634yvr/WORKSPACE/build/release/arrow-number-parsing-benchmark', '--benchmark_repetitions=10', '--benchmark_out=/tmp/tmpfvisjoek', '--benchmark_out_format=json']' died with <Signals.SIGABRT: 6>.\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-19T17:44:34.922+0000",
                    "updated": "2019-10-19T17:44:34.922+0000",
                    "started": "2019-10-19T17:44:34.921+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330967",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/330975",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#issuecomment-544189730\n \n \n   @fsaintjacques seems that the benchmark command got broken \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-19T19:21:48.864+0000",
                    "updated": "2019-10-19T19:21:48.864+0000",
                    "started": "2019-10-19T19:21:48.863+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330975",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/330976",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#issuecomment-544190059\n \n \n   Guess it could be a legitimate failure. I'll look later \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-19T19:26:07.910+0000",
                    "updated": "2019-10-19T19:26:07.910+0000",
                    "started": "2019-10-19T19:26:07.909+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330976",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/330978",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#issuecomment-544194638\n \n \n   Have you tried \"background_thread:true\" instead, as mentioned in https://github.com/jemalloc/jemalloc/issues/1128 ? I fear that returning memory immediately to the OS (which setting the \"decay\" options to 0 may be doing) may reduce performance on some workloads.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-19T20:25:14.187+0000",
                    "updated": "2019-10-19T20:25:14.187+0000",
                    "started": "2019-10-19T20:25:14.187+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330978",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/331074",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#issuecomment-544261449\n \n \n   I tried background_thread:true with 1 second decay instead of 10 seconds (which is recommended in that issue thread) and here's the output, with some 1 second sleep inserted\r\n   \r\n   ```\r\n   $ python test.py \r\n   sleeping\r\n   RSS: 10880475136, change: 10797621248\r\n   sleeping\r\n   RSS: 13594267648, change: 2713792512\r\n   sleeping\r\n   RSS: 12921249792, change: -673017856\r\n   sleeping\r\n   RSS: 10334597120, change: -2586652672\r\n   sleeping\r\n   RSS: 10237149184, change: -97447936\r\n   sleeping\r\n   RSS: 10437951488, change: 200802304\r\n   sleeping\r\n   RSS: 9919725568, change: -518225920\r\n   sleeping\r\n   RSS: 9462968320, change: -456757248\r\n   sleeping\r\n   RSS: 10122711040, change: 659742720\r\n   sleeping\r\n   RSS: 9661595648, change: -461115392\r\n   Took 47.43621349334717 seconds\r\n   RSS: 7910539264, change: -1751056384\r\n   RSS: 5868593152, change: -2041946112\r\n   RSS: 4238458880, change: -1630134272\r\n   RSS: 3196747776, change: -1041711104\r\n   RSS: 2589286400, change: -607461376\r\n   RSS: 1776238592, change: -813047808\r\n   RSS: 820801536, change: -955437056\r\n   RSS: 377745408, change: -443056128\r\n   RSS: 164728832, change: -213016576\r\n   RSS: 164728832, change: 0\r\n   RSS: 149159936, change: -15568896\r\n   RSS: 149159936, change: 0\r\n   RSS: 149159936, change: 0\r\n   RSS: 149159936, change: 0\r\n   RSS: 149159936, change: 0\r\n   RSS: 149159936, change: 0\r\n   RSS: 149159936, change: 0\r\n   RSS: 149159936, change: 0\r\n   RSS: 149159936, change: 0\r\n   RSS: 149159936, change: 0\r\n   ```\r\n   \r\n   Does this seem acceptable? It seems to do a better job of not letting peak RSS get out of hand\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-20T15:14:00.706+0000",
                    "updated": "2019-10-20T15:14:00.706+0000",
                    "started": "2019-10-20T15:14:00.704+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331074",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/331075",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#issuecomment-544261473\n \n \n   (I don't know how much CPU the background thread takes up, hopefully not a lot)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-20T15:14:17.865+0000",
                    "updated": "2019-10-20T15:14:17.865+0000",
                    "started": "2019-10-20T15:14:17.865+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331075",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/331076",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#issuecomment-544262624\n \n \n   > (I don't know how much CPU the background thread takes up, hopefully not a lot)\r\n   \r\n   Probably less than doing things eagerly (also it should avoid adding latency to the main program).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-20T15:27:44.492+0000",
                    "updated": "2019-10-20T15:27:44.492+0000",
                    "started": "2019-10-20T15:27:44.492+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331076",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/331077",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#discussion_r336783673\n \n \n\n ##########\n File path: cpp/src/arrow/memory_pool.h\n ##########\n @@ -160,6 +160,16 @@ ARROW_EXPORT MemoryPool* system_memory_pool();\n /// May return NotImplemented if jemalloc is not available.\n ARROW_EXPORT Status jemalloc_memory_pool(MemoryPool** out);\n \n+/// \\brief Set jemalloc memory page purging behavior for future-created arenas\n+/// to the indicated number of milliseconds. See dirty_decay_ms and\n+/// muzzy_decay_ms options in jemalloc for a description of what these do. The\n+/// default is configured to 0 which releases memory more aggressively to the\n \n Review comment:\n   Update comment? It doesn't default to 0 anymore.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-20T15:30:59.599+0000",
                    "updated": "2019-10-20T15:30:59.599+0000",
                    "started": "2019-10-20T15:30:59.599+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331077",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/331078",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#discussion_r336783713\n \n \n\n ##########\n File path: cpp/src/arrow/memory_pool.cc\n ##########\n @@ -46,10 +46,19 @@\n // See discussion in https://github.com/jemalloc/jemalloc/issues/1621\n \n #ifdef NDEBUG\n-const char* je_arrow_malloc_conf = \"oversize_threshold:0\";\n+const char* je_arrow_malloc_conf =\n+    (\"oversize_threshold:0,\"\n+     \"dirty_decay_ms:1000,\"\n+     \"muzzy_decay_ms:1000,\"\n+     \"background_thread:true\");\n \n Review comment:\n   It would be nice to add a comment explaining how we came to these settings.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-20T15:30:59.602+0000",
                    "updated": "2019-10-20T15:30:59.602+0000",
                    "started": "2019-10-20T15:30:59.602+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331078",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/331079",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#discussion_r336783700\n \n \n\n ##########\n File path: cpp/src/arrow/memory_pool.cc\n ##########\n @@ -389,6 +398,30 @@ MemoryPool* default_memory_pool() {\n #endif\n }\n \n+#define RETURN_IF_JEMALLOC_ERROR(ERR)                  \\\n+  do {                                                 \\\n+    if (err != 0) {                                    \\\n+      return Status::UnknownError(std::strerror(ERR)); \\\n+    }                                                  \\\n+  } while (0)\n+\n+Status jemalloc_set_decay_ms(int ms) {\n \n Review comment:\n   Can we add a test for this? The `mallctl` calls are not trivial.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-20T15:30:59.765+0000",
                    "updated": "2019-10-20T15:30:59.765+0000",
                    "started": "2019-10-20T15:30:59.764+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331079",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/331080",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#issuecomment-544262947\n \n \n   > Does this seem acceptable? It seems to do a better job of not letting peak RSS get out of hand\r\n   \r\n   Yes, I think that's the main goal here.\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-20T15:31:30.606+0000",
                    "updated": "2019-10-20T15:31:30.606+0000",
                    "started": "2019-10-20T15:31:30.606+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331080",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/331104",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#issuecomment-544282608\n \n \n   Thanks for the review. I'll update the comments and add a test.\r\n   \r\n   It seems that this change wreaks havoc on the Plasma valgrind tests. I'm just going to disable valgrind in the Plasma Python tests and hope for the best. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-20T19:14:45.269+0000",
                    "updated": "2019-10-20T19:14:45.269+0000",
                    "started": "2019-10-20T19:14:45.268+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331104",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/331105",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#issuecomment-544282721\n \n \n   Hmm, I wasn't aware that Valgrind was still enabled somewhere in our test suite. Are you sure that is the case?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-20T19:15:52.665+0000",
                    "updated": "2019-10-20T19:15:52.665+0000",
                    "started": "2019-10-20T19:15:52.665+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331105",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/331107",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#issuecomment-544283680\n \n \n   https://github.com/apache/arrow/blob/master/.travis.yml#L97\r\n   \r\n   I don't think it's worth the effort of figuring out how to fix this. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-20T19:26:25.687+0000",
                    "updated": "2019-10-20T19:26:25.687+0000",
                    "started": "2019-10-20T19:26:25.686+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331107",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/331397",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on issue #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#issuecomment-544496133\n \n \n   Just to confirm, it is a failed assert more than an archery benchmark failure?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T12:41:03.918+0000",
                    "updated": "2019-10-21T12:41:03.918+0000",
                    "started": "2019-10-21T12:41:03.918+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331397",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/331403",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on issue #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#issuecomment-544503571\n \n \n   @wesm Changes look good from my side. It would be nice when you could do a mini-blogpost somewhere. These microoptimizations are a really good point why someone should use Arrow's own implementation around the memory format.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T13:00:55.951+0000",
                    "updated": "2019-10-21T13:00:55.951+0000",
                    "started": "2019-10-21T13:00:55.950+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331403",
                    "issueId": "13262735"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/worklog/331526",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5701: ARROW-6910: [C++][Python] Set jemalloc default configuration to release dirty pages more aggressively back to the OS dirty_decay_ms and muzzy_decay_ms to 0 by default, add C++ / Python option to configure this\nURL: https://github.com/apache/arrow/pull/5701#discussion_r337144195\n \n \n\n ##########\n File path: cpp/src/arrow/memory_pool.h\n ##########\n @@ -160,6 +160,16 @@ ARROW_EXPORT MemoryPool* system_memory_pool();\n /// May return NotImplemented if jemalloc is not available.\n ARROW_EXPORT Status jemalloc_memory_pool(MemoryPool** out);\n \n+/// \\brief Set jemalloc memory page purging behavior for future-created arenas\n+/// to the indicated number of milliseconds. See dirty_decay_ms and\n+/// muzzy_decay_ms options in jemalloc for a description of what these do. The\n+/// default is configured to 0 which releases memory more aggressively to the\n \n Review comment:\n   done\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T17:29:35.667+0000",
                    "updated": "2019-10-21T17:29:35.667+0000",
                    "started": "2019-10-21T17:29:35.666+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331526",
                    "issueId": "13262735"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 17400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@737539d2[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@60ea0d5b[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@626af63d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@52dabffe[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b722ca[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@60c1e8a0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55af219b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@528d519f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6c929876[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@379f9ac[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2f76a3a1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@17cf1e79[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 17400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Nov 06 20:32:29 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-10-22T14:47:39.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6910/watchers",
            "watchCount": 5,
            "isWatching": false
        },
        "created": "2019-10-16T23:49:30.000+0000",
        "updated": "2019-11-06T20:32:29.000+0000",
        "timeoriginalestimate": null,
        "description": "I realize that when I read up a lot of Parquet files using pyarrow.parquet.read_table(...), my program's memory usage becomes very bloated, although I don't keep the table objects after converting them to Pandas DFs.\r\n\r\nYou can try this in an interactive Python shell to reproduce this problem:\r\n\r\n```{python}\r\nfrom tqdm import tqdm\r\nfrom pyarrow.parquet import read_table\r\n\r\nPATH = '/tmp/big.snappy.parquet'\r\n\r\nfor _ in tqdm(range(10)):\r\n    read_table(PATH, use_threads=False, memory_map=False)\r\n    (note that I'm not assigning the read_table(...) result to anything, so I'm not creating any new objects at all)\r\n\r\n```\r\n\r\nDuring the For loop above, if you view the memory usage (e.g. using htop program), you'll see that it keeps creeping up. Either the program crashes during the 10 iterations, or if the 10 iterations complete, the program will still occupy a huge amount of memory, although no objects are kept. That memory is only released when you exit() from Python.\r\n\r\nThis problem means that my compute jobs using PyArrow currently need to use bigger server instances than I think is necessary, which translates to significant extra cost.\r\n\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 17400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/attachment/12983302",
                "id": "12983302",
                "filename": "arrow6910.png",
                "author": {
                    "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                    "name": "wesm",
                    "key": "wesmckinn",
                    "avatarUrls": {
                        "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                        "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                        "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                        "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                    },
                    "displayName": "Wes McKinney",
                    "active": true,
                    "timeZone": "America/New_York"
                },
                "created": "2019-10-17T18:26:23.131+0000",
                "size": 34428,
                "mimeType": "image/png",
                "content": "https://issues.apache.org/jira/secure/attachment/12983302/arrow6910.png"
            }
        ],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] pyarrow.parquet.read_table(...) takes up lots of memory which is not released until program exits",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16953324",
                    "id": "16953324",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "How do you measure memory usage? \"RSS\"? It may be very well be a false positive.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-10-17T02:14:27.841+0000",
                    "updated": "2019-10-17T02:14:27.841+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16953328",
                    "id": "16953328",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Likely duplicate of ARROW-6874",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-17T02:18:06.997+0000",
                    "updated": "2019-10-17T02:18:06.997+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16953357",
                    "id": "16953357",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
                        "name": "MBALearnsToCode",
                        "key": "mbalearnstocode",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "V Luong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~wesm] [~apitrou] ARROW-6874's title states that Table.to_pandas() causes the problem. But it seems from my code above that the problem starts from read_table(...) itself, even before converting to Pandas DFs. So I'm not sure if this can be called a duplicate of ARROW-6874.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
                        "name": "MBALearnsToCode",
                        "key": "mbalearnstocode",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "V Luong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-10-17T03:10:52.969+0000",
                    "updated": "2019-10-17T03:10:52.969+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16953748",
                    "id": "16953748",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I see. Is there something you can do to make the issue more reproducible, like one or more example files? ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-17T13:43:01.896+0000",
                    "updated": "2019-10-17T13:43:01.896+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16953751",
                    "id": "16953751",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~MBALearnsToCode] If it might not be a duplicate, could you try to provide a reproducible example? ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2019-10-17T13:44:28.894+0000",
                    "updated": "2019-10-17T13:44:28.894+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16954005",
                    "id": "16954005",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I don't think this is a bug. I wrote a script to make and read a ~1+GB file in a loop and look at the process's RSS. Here is a plot of what the process's RSS looks like over the course of 100 iterations\r\n\r\n !arrow6910.png! \r\n\r\nThis suggests this is related to internal behavior of our allocator (jemalloc here) which retains unused heap memory to speed up future in-process allocations rather than releasing the memory to the operating system. I'm not an expert on these kinds of system matters, [~apitrou] or others would know more",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-17T18:31:44.972+0000",
                    "updated": "2019-10-17T18:31:44.972+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16954021",
                    "id": "16954021",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
                        "name": "MBALearnsToCode",
                        "key": "mbalearnstocode",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "V Luong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~wesm] [~jorisvandenbossche] [~apitrou]  I've made a Parquet data set available at s3://public-parquet-test-data/big.snappy.parquet for testing (you can do \"wget http://public-parquet-test-data.s3.amazonaws.com/big.snappy.parquet\" if not using AWS CLI). It's only moderately big. I repeatedly load various files thousands of times during iterative model training jobs that last for days. In 0.14.1 my long-running jobs succeeded, but in 0.15.0 the same jobs crashed after 30 mins or 1 hour. My inspection as shared above indicates that memory usage increases with the number of times read_table(...) is called and memory is not released, so long-running jobs would inevitably die.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
                        "name": "MBALearnsToCode",
                        "key": "mbalearnstocode",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "V Luong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-10-17T18:48:08.254+0000",
                    "updated": "2019-10-17T21:50:02.768+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16954022",
                    "id": "16954022",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Can you give me an HTTPS link to download that file? I tried {{wget https://public-parquet-test-data.s3.amazonaws.com/big.parquet}} and it didn't work",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-17T18:53:44.058+0000",
                    "updated": "2019-10-17T18:53:44.058+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16954026",
                    "id": "16954026",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "{code}\r\n$ aws s3 cp s3://public-parquet-test-data/big.parquet . --recursive\r\nfatal error: Unable to locate credentials\r\n{code}\r\n\r\nNot a regular S3 user, sorry",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-17T18:59:36.402+0000",
                    "updated": "2019-10-17T18:59:36.402+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16954029",
                    "id": "16954029",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
                        "name": "MBALearnsToCode",
                        "key": "mbalearnstocode",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "V Luong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "ok let me check again on another machine [~wesm] and let you know",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
                        "name": "MBALearnsToCode",
                        "key": "mbalearnstocode",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "V Luong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-10-17T19:01:28.784+0000",
                    "updated": "2019-10-17T19:01:28.784+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16954134",
                    "id": "16954134",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
                        "name": "MBALearnsToCode",
                        "key": "mbalearnstocode",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "V Luong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~wesm] [~jorisvandenbossche] [~apitrou] can you try \"wget http://public-parquet-test-data.s3.amazonaws.com/big.snappy.parquet\" now? I'll also edit the code in the description to reproduce the problem.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
                        "name": "MBALearnsToCode",
                        "key": "mbalearnstocode",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "V Luong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-10-17T21:51:10.339+0000",
                    "updated": "2019-10-17T21:51:10.339+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16954147",
                    "id": "16954147",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
                        "name": "MBALearnsToCode",
                        "key": "mbalearnstocode",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "V Luong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Using the code above, after just 10 iterations of reading up the file with 1 thread, the program has grown to occupy 15-18GB of memory and does not release it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
                        "name": "MBALearnsToCode",
                        "key": "mbalearnstocode",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "V Luong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-10-17T22:29:06.252+0000",
                    "updated": "2019-10-17T22:29:06.252+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16955038",
                    "id": "16955038",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I can access it. I'll try to have a closer look in the next couple of days to see if I can determine what is going on. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-19T01:29:15.376+0000",
                    "updated": "2019-10-19T01:29:15.376+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16955206",
                    "id": "16955206",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I can confirm that setting the \"dirty_decay_ms\" jemalloc option to 0 causes memory to be released to the OS right away. This is likely to reduce application performance, but it may make sense to make the default option but allow it to be configured at runtime. I'm working on a patch\r\n\r\nsee http://jemalloc.net/jemalloc.3.html",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-19T16:19:23.396+0000",
                    "updated": "2019-10-19T16:20:55.154+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16955242",
                    "id": "16955242",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
                        "name": "MBALearnsToCode",
                        "key": "mbalearnstocode",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "V Luong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Great, thank you a great deal [~wesm]!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
                        "name": "MBALearnsToCode",
                        "key": "mbalearnstocode",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "V Luong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-10-19T18:16:12.733+0000",
                    "updated": "2019-10-19T18:16:12.733+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16957140",
                    "id": "16957140",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 5701\n[https://github.com/apache/arrow/pull/5701]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-10-22T14:47:39.368+0000",
                    "updated": "2019-10-22T14:47:39.368+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16968654",
                    "id": "16968654",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
                        "name": "MBALearnsToCode",
                        "key": "mbalearnstocode",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "V Luong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~apitrou] [~wesm] [~jorisvandenbossche] I'm re-testing this issue using the newly-released 0.15.1, with the following code, in an interactive Python 3.7 shell:\r\n\r\n-----\r\nfrom pyarrow.parquet import read_table\r\nimport os\r\nfrom tqdm import tqdm\r\n\r\n\r\nPARQUET_S3_PATH = 's3://public-parquet-test-data/big.snappy.parquet'\r\nPARQUET_HTTP_PATH = 'http://public-parquet-test-data.s3.amazonaws.com/big.snappy.parquet'\r\nPARQUET_TMP_PATH = '/tmp/big.snappy.parquet'\r\n\r\n\r\nos.system('wget --output-document={} {}'.format(PARQUET_TMP_PATH, PARQUET_HTTP_PATH))\r\n\r\n\r\nfor _ in tqdm(range(10)):\r\n    read_table(\r\n        source=PARQUET_TMP_PATH,\r\n        columns=None,\r\n        use_threads=False,\r\n        metadata=None,\r\n        use_pandas_metadata=False,\r\n        memory_map=False,\r\n        filesystem=None,\r\n        filters=None)\r\n-----\r\n\r\nI observe the following mysterious behavior:\r\n- If I don't do anything after the above For loop, the program still occupies 8-10GB of memory and does not release it. I keep it at this idle state for a good 10-15 minutes and confirm that memory is still occupied.\r\n- Then, I try to do something random, like \"import pyarrow; print(pyarrow.__version__)\" in the interactive shell, and then the memory is immediately released.\r\n\r\nThis behavior remains unintuitive to me, and it seems users still don't have a firm control on the memory used by PyArrow. Each read_table(...) call does not seem memory-neutral by default as of 0.15.1 yet. This means long-running iterative programs, especially ML training involving repeated loading up these files, will inevitably OOM.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
                        "name": "MBALearnsToCode",
                        "key": "mbalearnstocode",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "V Luong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-11-06T20:03:06.504+0000",
                    "updated": "2019-11-06T20:08:59.490+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16968667",
                    "id": "16968667",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "What platform are you on? It's possible the background thread reclamation is not enabled in your build\r\n\r\nAdding {{import gc; gc.collect()}} to your scripts may not be a bad idea",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-11-06T20:18:44.007+0000",
                    "updated": "2019-11-06T20:18:44.007+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16968670",
                    "id": "16968670",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "If you can open a new JIRA for further investigation that would be helpful, the original issue you reported is no longer present, as chronicled in the linked pull request",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-11-06T20:20:47.962+0000",
                    "updated": "2019-11-06T20:20:47.962+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16968675",
                    "id": "16968675",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
                        "name": "MBALearnsToCode",
                        "key": "mbalearnstocode",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "V Luong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "ok [~wesm] let me create a new JIRA ticket for 0.15.1",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=MBALearnsToCode",
                        "name": "MBALearnsToCode",
                        "key": "mbalearnstocode",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "V Luong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-11-06T20:24:40.159+0000",
                    "updated": "2019-11-06T20:24:40.159+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262735/comment/16968683",
                    "id": "16968683",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "The place to start will be twiddling with the jemalloc conf settings here:\r\n\r\nhttps://github.com/apache/arrow/blob/master/cpp/src/arrow/memory_pool.cc#L48",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-11-06T20:32:29.120+0000",
                    "updated": "2019-11-06T20:32:29.120+0000"
                }
            ],
            "maxResults": 21,
            "total": 21,
            "startAt": 0
        },
        "customfield_12311820": "0|z07o3k:",
        "customfield_12314139": null
    }
}