{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13307285",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285",
    "key": "ARROW-8938",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12589350",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12589350",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13306872",
                    "key": "ARROW-8894",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13306872",
                    "fields": {
                        "summary": "[C++] C++ array kernels framework and execution buildout (umbrella issue)",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            },
            {
                "id": "12589352",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12589352",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13264088",
                    "key": "ARROW-6978",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264088",
                    "fields": {
                        "summary": "[R] Add bindings for sum and mean compute kernels",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            },
            {
                "id": "12589351",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12589351",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13264120",
                    "key": "ARROW-6982",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264120",
                    "fields": {
                        "summary": "[R] Add bindings for compare and boolean kernels",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8938/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 20,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/437320",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson opened a new pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279\n\n\n   @bkietz and I paired on this this morning. It's rough but it's far enough along that I was able to remove two bindings for Array Filter/Take in favor of the new way. \r\n   \r\n   I'll call out a couple of the decisions we made and remaining questions in comments in the diff.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-27T03:34:52.993+0000",
                    "updated": "2020-05-27T03:34:52.993+0000",
                    "started": "2020-05-27T03:34:52.992+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "437320",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/437436",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#issuecomment-634290820\n\n\n   https://issues.apache.org/jira/browse/ARROW-8938\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-27T03:49:28.240+0000",
                    "updated": "2020-05-27T03:49:28.240+0000",
                    "started": "2020-05-27T03:49:28.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "437436",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/437576",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#discussion_r430719454\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -223,4 +205,66 @@ std::shared_ptr<arrow::Table> Table__FilterChunked(\n   }\n   return tab;\n }\n+\n+arrow::Datum to_datum(SEXP x) {\n+  // TODO: this is repetitive, can we DRY it out?\n+  if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"Array\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::Array>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::Array>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"ChunkedArray\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::ChunkedArray>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::ChunkedArray>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"RecordBatch\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::RecordBatch>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::RecordBatch>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"Table\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::Table>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::Table>>(obj);\n+  } else {\n+    // TODO: scalar?\n\nReview comment:\n       Currently elsewhere we use a scalar wrapper function from the dataset namespace (see https://github.com/apache/arrow/blob/master/r/src/expression.cpp#L106-L158). What should we be doing here?\n\n##########\nFile path: r/R/array.R\n##########\n@@ -128,17 +128,19 @@ Array <- R6Class(\"Array\",\n         i <- Array$create(i)\n       }\n       if (inherits(i, \"ChunkedArray\")) {\n+        # Invalid: Kernel does not support chunked array arguments\n\nReview comment:\n       @wesm I didn't see a JIRA for this but admittedly there are a lot attached to the umbrella ticket so I may have missed it. Is there one for supporting Take with ChunkedArrays (as either the first and/or second argument)? Likewise for Take/Filter on RecordBatch and Table.\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -223,4 +205,66 @@ std::shared_ptr<arrow::Table> Table__FilterChunked(\n   }\n   return tab;\n }\n+\n+arrow::Datum to_datum(SEXP x) {\n\nReview comment:\n       We chose not to expose the Datum class in R at all. Datum is redundant because we already have the SEXP box for different inputs, so we can just deal with that in the interface. \r\n   \r\n   Unrelated, see comment on the next line.\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -223,4 +205,66 @@ std::shared_ptr<arrow::Table> Table__FilterChunked(\n   }\n   return tab;\n }\n+\n+arrow::Datum to_datum(SEXP x) {\n+  // TODO: this is repetitive, can we DRY it out?\n+  if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"Array\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::Array>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::Array>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"ChunkedArray\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::ChunkedArray>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::ChunkedArray>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"RecordBatch\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::RecordBatch>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::RecordBatch>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"Table\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::Table>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::Table>>(obj);\n+  } else {\n+    // TODO: scalar?\n+    // This assumes that R objects have already been converted to Arrow objects;\n+    // that seems right but should we do the wrapping here too/instead?\n+    Rcpp::stop(\"to_datum: Not implemented\");\n+  }\n+}\n+\n+SEXP from_datum(arrow::Datum datum) {\n+  if (datum.is_array()) {\n+    return Rcpp::wrap(datum.make_array());\n+  } else if (datum.is_arraylike()) {\n+    return Rcpp::wrap(datum.chunked_array());\n+  } else {\n+    // TODO: the other datum types\n+    Rcpp::stop(\"from_datum: Not implemented\");\n+  }\n+}\n+\n+std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(std::string func_name,\n+    List_ options) {\n+  if (func_name == \"filter\") {\n+    auto out = std::make_shared<arrow::compute::FilterOptions>(arrow::compute::FilterOptions::Defaults());\n+    if (!Rf_isNull(options[\"keep_na\"]) && options[\"keep_na\"]) {\n+      out->null_selection_behavior = arrow::compute::FilterOptions::EMIT_NULL;\n+    }\n+    return out;\n+  } else if (func_name == \"take\") {\n+    auto out = std::make_shared<arrow::compute::TakeOptions>(arrow::compute::TakeOptions::Defaults());\n+    return out;\n+  } else {\n+    return nullptr;\n+  }\n+  // TODO: make sure the correct destructor is called?\n\nReview comment:\n       This was @bkietz's note to self, I think\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-27T04:09:35.299+0000",
                    "updated": "2020-05-27T04:09:35.299+0000",
                    "started": "2020-05-27T04:09:35.298+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "437576",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/437867",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#issuecomment-634755810\n\n\n   @github-actions autotune\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-27T15:51:56.611+0000",
                    "updated": "2020-05-27T15:51:56.611+0000",
                    "started": "2020-05-27T15:51:56.611+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "437867",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/437878",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#discussion_r431263416\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -223,4 +205,66 @@ std::shared_ptr<arrow::Table> Table__FilterChunked(\n   }\n   return tab;\n }\n+\n+arrow::Datum to_datum(SEXP x) {\n+  // TODO: this is repetitive, can we DRY it out?\n+  if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"Array\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::Array>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::Array>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"ChunkedArray\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::ChunkedArray>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::ChunkedArray>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"RecordBatch\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::RecordBatch>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::RecordBatch>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"Table\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::Table>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::Table>>(obj);\n+  } else {\n+    // TODO: scalar?\n\nReview comment:\n       I would recommend refactoring that function into `std::shared_ptr<Scalar> to_scalar(SEXP)`. That function need not be exported (same logic as `Datum`; `SEXP` already holds whatever value). The climax of `to_scalar` should be a call to `arrow::MakeScalar`.\r\n   \r\n   After this:\r\n   ```c++\r\n   std::shared_ptr<ds::Expression> dataset___expr__scalar(SEXP x) {\r\n     return ds::scalar(to_scalar(x));\r\n   }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-27T16:06:49.211+0000",
                    "updated": "2020-05-27T16:06:49.211+0000",
                    "started": "2020-05-27T16:06:49.211+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "437878",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/437880",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#discussion_r431266235\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -223,4 +205,66 @@ std::shared_ptr<arrow::Table> Table__FilterChunked(\n   }\n   return tab;\n }\n+\n+arrow::Datum to_datum(SEXP x) {\n+  // TODO: this is repetitive, can we DRY it out?\n+  if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"Array\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::Array>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::Array>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"ChunkedArray\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::ChunkedArray>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::ChunkedArray>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"RecordBatch\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::RecordBatch>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::RecordBatch>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"Table\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::Table>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::Table>>(obj);\n+  } else {\n+    // TODO: scalar?\n+    // This assumes that R objects have already been converted to Arrow objects;\n+    // that seems right but should we do the wrapping here too/instead?\n+    Rcpp::stop(\"to_datum: Not implemented\");\n+  }\n+}\n+\n+SEXP from_datum(arrow::Datum datum) {\n+  if (datum.is_array()) {\n+    return Rcpp::wrap(datum.make_array());\n+  } else if (datum.is_arraylike()) {\n+    return Rcpp::wrap(datum.chunked_array());\n+  } else {\n+    // TODO: the other datum types\n+    Rcpp::stop(\"from_datum: Not implemented\");\n+  }\n+}\n+\n+std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(std::string func_name,\n+    List_ options) {\n+  if (func_name == \"filter\") {\n+    auto out = std::make_shared<arrow::compute::FilterOptions>(arrow::compute::FilterOptions::Defaults());\n+    if (!Rf_isNull(options[\"keep_na\"]) && options[\"keep_na\"]) {\n+      out->null_selection_behavior = arrow::compute::FilterOptions::EMIT_NULL;\n+    }\n+    return out;\n+  } else if (func_name == \"take\") {\n+    auto out = std::make_shared<arrow::compute::TakeOptions>(arrow::compute::TakeOptions::Defaults());\n+    return out;\n+  } else {\n+    return nullptr;\n+  }\n+  // TODO: make sure the correct destructor is called?\n\nReview comment:\n       ```suggestion\r\n   ```\r\n   confirmed: `make_shared<T>` sets the destructor to `deleter<T>` (so we aren't relying on `~FunctionOptions` being virtual)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-27T16:10:52.010+0000",
                    "updated": "2020-05-27T16:10:52.010+0000",
                    "started": "2020-05-27T16:10:52.010+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "437880",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/437890",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#discussion_r431273570\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -223,4 +205,66 @@ std::shared_ptr<arrow::Table> Table__FilterChunked(\n   }\n   return tab;\n }\n+\n+arrow::Datum to_datum(SEXP x) {\n\nReview comment:\n       How's this:\r\n   ```c++\r\n   template <typename T>\r\n   std::shared_ptr<T> MaybeUnbox(const char* class_name, SEXP x) {\r\n     if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, class_name)) {\r\n       Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<T>> obj(x);\r\n       return static_cast<std::shared_ptr<T>>(obj);\r\n     }\r\n     return nullptr;\r\n   }\r\n   \r\n   arrow::Datum to_datum(SEXP x) {\r\n     if (auto array = MaybeUnbox<arrow::Array>(\"Array\", x)) {\r\n       return array;\r\n     }\r\n   \r\n     if (auto chunked_array = MaybeUnbox<arrow::ChunkedArray>(\"ChunkedArray\", x)) {\r\n       return chunked_array;\r\n     }\r\n   \r\n     // ...\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-27T16:21:51.593+0000",
                    "updated": "2020-05-27T16:21:51.593+0000",
                    "started": "2020-05-27T16:21:51.593+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "437890",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/437898",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#discussion_r431269117\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -223,4 +205,66 @@ std::shared_ptr<arrow::Table> Table__FilterChunked(\n   }\n   return tab;\n }\n+\n+arrow::Datum to_datum(SEXP x) {\n\nReview comment:\n       I also don't think it needs to be exposed\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -223,4 +205,66 @@ std::shared_ptr<arrow::Table> Table__FilterChunked(\n   }\n   return tab;\n }\n+\n+arrow::Datum to_datum(SEXP x) {\n+  // TODO: this is repetitive, can we DRY it out?\n+  if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"Array\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::Array>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::Array>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"ChunkedArray\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::ChunkedArray>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::ChunkedArray>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"RecordBatch\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::RecordBatch>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::RecordBatch>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"Table\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::Table>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::Table>>(obj);\n+  } else {\n+    // TODO: scalar?\n\nReview comment:\n       Can we create an R6 class wrapper for `arrow::Scalar`? \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-27T16:29:36.250+0000",
                    "updated": "2020-05-27T16:29:36.250+0000",
                    "started": "2020-05-27T16:29:36.250+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "437898",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/437910",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#discussion_r431291390\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -223,4 +205,66 @@ std::shared_ptr<arrow::Table> Table__FilterChunked(\n   }\n   return tab;\n }\n+\n+arrow::Datum to_datum(SEXP x) {\n+  // TODO: this is repetitive, can we DRY it out?\n+  if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"Array\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::Array>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::Array>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"ChunkedArray\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::ChunkedArray>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::ChunkedArray>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"RecordBatch\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::RecordBatch>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::RecordBatch>>(obj);\n+  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"Table\")) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::Table>> obj(x);\n+    return static_cast<std::shared_ptr<arrow::Table>>(obj);\n+  } else {\n+    // TODO: scalar?\n\nReview comment:\n       Sure, we can, and I think we should, unlike Datum, because it makes sense to hold a Scalar in R. Though I suspect that converting from Scalar to R requires some non-trivial refactoring of array-to-vector.cpp.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-27T16:48:12.503+0000",
                    "updated": "2020-05-27T16:48:12.503+0000",
                    "started": "2020-05-27T16:48:12.502+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "437910",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/437991",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#discussion_r431404447\n\n\n\n##########\nFile path: r/R/scalar.R\n##########\n@@ -0,0 +1,53 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include arrowExports.R\n+\n+#' Arrow scalars\n+#'\n+#' @description\n+#' `Scalar`s are used to store a singular value of an arrow `DataType`\n+#'\n+#' @name Scalar\n+#' @rdname Scalar\n+#' @export\n+Scalar <- R6Class(\"Scalar\", inherit = ArrowObject,\n+  public = list(\n+    ToString = function() Scalar__ToString(self),\n+    as_vector = function() Scalar__as_vector(self)\n+  ),\n+  active = list(\n+    is_valid = function() Scalar__is_valid(self),\n+    type = function() DataType$create(Scalar__type(self))\n+  )\n+)\n+Scalar$create <- function(x) {\n+  # TODO: it would probably be best if an explicit type could be provided\n+  if (!inherits(x, \"externalptr\")) {\n+    x <- Scalar__create(x)\n+  }\n+  shared_ptr(Scalar, x)\n+}\n+\n+#' @export\n+length.Scalar <- function(x) 1\n\nReview comment:\n       ```suggestion\r\n   length.Scalar <- function(x) 1L\r\n   ```\r\n   \r\n   `length` should be an explicit integer, for consistency\n\n##########\nFile path: r/src/expression.cpp\n##########\n@@ -104,57 +104,9 @@ std::shared_ptr<ds::Expression> dataset___expr__is_valid(\n \n // [[arrow::export]]\n std::shared_ptr<ds::Expression> dataset___expr__scalar(SEXP x) {\n-  switch (TYPEOF(x)) {\n-    case NILSXP:\n-      return ds::scalar(std::make_shared<arrow::NullScalar>());\n-    case LGLSXP:\n-      return ds::scalar(Rf_asLogical(x));\n-    case REALSXP:\n-      if (Rf_inherits(x, \"Date\")) {\n-        return ds::scalar(std::make_shared<arrow::Date32Scalar>(REAL(x)[0]));\n-      } else if (Rf_inherits(x, \"POSIXct\")) {\n-        return ds::scalar(std::make_shared<arrow::TimestampScalar>(\n-            REAL(x)[0], arrow::timestamp(arrow::TimeUnit::SECOND)));\n-      } else if (Rf_inherits(x, \"integer64\")) {\n-        int64_t value = *reinterpret_cast<int64_t*>(REAL(x));\n-        return ds::scalar(value);\n-      } else if (Rf_inherits(x, \"difftime\")) {\n-        int multiplier = 0;\n-        // TODO: shared with TimeConverter<> in array_from_vector.cpp\n-        std::string unit(CHAR(STRING_ELT(Rf_getAttrib(x, arrow::r::symbols::units), 0)));\n-        if (unit == \"secs\") {\n-          multiplier = 1;\n-        } else if (unit == \"mins\") {\n-          multiplier = 60;\n-        } else if (unit == \"hours\") {\n-          multiplier = 3600;\n-        } else if (unit == \"days\") {\n-          multiplier = 86400;\n-        } else if (unit == \"weeks\") {\n-          multiplier = 604800;\n-        } else {\n-          Rcpp::stop(\"unknown difftime unit\");\n-        }\n-        return ds::scalar(std::make_shared<arrow::Time32Scalar>(\n-            static_cast<int>(REAL(x)[0] * multiplier),\n-            arrow::time32(arrow::TimeUnit::SECOND)));\n-      }\n-      return ds::scalar(Rf_asReal(x));\n-    case INTSXP:\n-      if (Rf_inherits(x, \"factor\")) {\n-        // TODO: This does not use the actual value, just the levels\n-        auto type = arrow::r::InferArrowTypeFromFactor(x);\n-        return ds::scalar(std::make_shared<arrow::DictionaryScalar>(type));\n-      }\n-      return ds::scalar(Rf_asInteger(x));\n-    case STRSXP:\n-      return ds::scalar(CHAR(STRING_ELT(x, 0)));\n-    default:\n-      Rcpp::stop(\n-          tfm::format(\"R object of type %s not supported\", Rf_type2char(TYPEOF(x))));\n-  }\n-\n-  return nullptr;\n+  // defined in scalar.cpp\n+  std::shared_ptr<arrow::Scalar> Scalar__create(SEXP x);\n\nReview comment:\n       Does this need to be added to the header file that is included here? I seem to recall having to do that before.\n\n##########\nFile path: r/R/scalar.R\n##########\n@@ -0,0 +1,53 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include arrowExports.R\n+\n+#' Arrow scalars\n+#'\n+#' @description\n+#' `Scalar`s are used to store a singular value of an arrow `DataType`\n+#'\n+#' @name Scalar\n+#' @rdname Scalar\n+#' @export\n+Scalar <- R6Class(\"Scalar\", inherit = ArrowObject,\n+  public = list(\n+    ToString = function() Scalar__ToString(self),\n+    as_vector = function() Scalar__as_vector(self)\n+  ),\n+  active = list(\n+    is_valid = function() Scalar__is_valid(self),\n+    type = function() DataType$create(Scalar__type(self))\n+  )\n+)\n+Scalar$create <- function(x) {\n+  # TODO: it would probably be best if an explicit type could be provided\n\nReview comment:\n       Can you cast a scalar? (Presumably so.) If so, you could add a `type = NULL` arg and `if (!is.null(type))` cast to that. Or, let the caller cast outside this method.\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -206,60 +206,91 @@ std::shared_ptr<arrow::Table> Table__FilterChunked(\n   return tab;\n }\n \n+template <typename T>\n+std::shared_ptr<T> MaybeUnbox(const char* class_name, SEXP x) {\n+  if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, class_name)) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<T>> obj(x);\n+    return static_cast<std::shared_ptr<T>>(obj);\n+  }\n+  return nullptr;\n+}\n+\n arrow::Datum to_datum(SEXP x) {\n-  // TODO: this is repetitive, can we DRY it out?\n-  if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"Array\")) {\n-    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::Array>> obj(x);\n-    return static_cast<std::shared_ptr<arrow::Array>>(obj);\n-  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"ChunkedArray\")) {\n-    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::ChunkedArray>> obj(x);\n-    return static_cast<std::shared_ptr<arrow::ChunkedArray>>(obj);\n-  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"RecordBatch\")) {\n-    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::RecordBatch>> obj(x);\n-    return static_cast<std::shared_ptr<arrow::RecordBatch>>(obj);\n-  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"Table\")) {\n-    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::Table>> obj(x);\n-    return static_cast<std::shared_ptr<arrow::Table>>(obj);\n-  } else {\n-    // TODO: scalar?\n-    // This assumes that R objects have already been converted to Arrow objects;\n-    // that seems right but should we do the wrapping here too/instead?\n-    Rcpp::stop(\"to_datum: Not implemented\");\n+  if (auto array = MaybeUnbox<arrow::Array>(\"Array\", x)) {\n+    return array;\n+  }\n+\n+  if (auto chunked_array = MaybeUnbox<arrow::ChunkedArray>(\"ChunkedArray\", x)) {\n+    return chunked_array;\n+  }\n+\n+  if (auto batch = MaybeUnbox<arrow::RecordBatch>(\"RecordBatch\", x)) {\n+    return batch;\n+  }\n+\n+  if (auto table = MaybeUnbox<arrow::Table>(\"Table\", x)) {\n+    return table;\n+  }\n+\n+  if (auto scalar = MaybeUnbox<arrow::Scalar>(\"Scalar\", x)) {\n+    return scalar;\n   }\n+\n+  // This assumes that R objects have already been converted to Arrow objects;\n+  // that seems right but should we do the wrapping here too/instead?\n+  Rcpp::stop(\"to_datum: Not implemented for type %s\", Rf_type2char(TYPEOF(x)));\n\nReview comment:\n       Let's add a test for this error message\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-27T20:00:34.184+0000",
                    "updated": "2020-05-27T20:00:34.184+0000",
                    "started": "2020-05-27T20:00:34.184+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "437991",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/437994",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#discussion_r431416935\n\n\n\n##########\nFile path: r/src/expression.cpp\n##########\n@@ -104,57 +104,9 @@ std::shared_ptr<ds::Expression> dataset___expr__is_valid(\n \n // [[arrow::export]]\n std::shared_ptr<ds::Expression> dataset___expr__scalar(SEXP x) {\n-  switch (TYPEOF(x)) {\n-    case NILSXP:\n-      return ds::scalar(std::make_shared<arrow::NullScalar>());\n-    case LGLSXP:\n-      return ds::scalar(Rf_asLogical(x));\n-    case REALSXP:\n-      if (Rf_inherits(x, \"Date\")) {\n-        return ds::scalar(std::make_shared<arrow::Date32Scalar>(REAL(x)[0]));\n-      } else if (Rf_inherits(x, \"POSIXct\")) {\n-        return ds::scalar(std::make_shared<arrow::TimestampScalar>(\n-            REAL(x)[0], arrow::timestamp(arrow::TimeUnit::SECOND)));\n-      } else if (Rf_inherits(x, \"integer64\")) {\n-        int64_t value = *reinterpret_cast<int64_t*>(REAL(x));\n-        return ds::scalar(value);\n-      } else if (Rf_inherits(x, \"difftime\")) {\n-        int multiplier = 0;\n-        // TODO: shared with TimeConverter<> in array_from_vector.cpp\n-        std::string unit(CHAR(STRING_ELT(Rf_getAttrib(x, arrow::r::symbols::units), 0)));\n-        if (unit == \"secs\") {\n-          multiplier = 1;\n-        } else if (unit == \"mins\") {\n-          multiplier = 60;\n-        } else if (unit == \"hours\") {\n-          multiplier = 3600;\n-        } else if (unit == \"days\") {\n-          multiplier = 86400;\n-        } else if (unit == \"weeks\") {\n-          multiplier = 604800;\n-        } else {\n-          Rcpp::stop(\"unknown difftime unit\");\n-        }\n-        return ds::scalar(std::make_shared<arrow::Time32Scalar>(\n-            static_cast<int>(REAL(x)[0] * multiplier),\n-            arrow::time32(arrow::TimeUnit::SECOND)));\n-      }\n-      return ds::scalar(Rf_asReal(x));\n-    case INTSXP:\n-      if (Rf_inherits(x, \"factor\")) {\n-        // TODO: This does not use the actual value, just the levels\n-        auto type = arrow::r::InferArrowTypeFromFactor(x);\n-        return ds::scalar(std::make_shared<arrow::DictionaryScalar>(type));\n-      }\n-      return ds::scalar(Rf_asInteger(x));\n-    case STRSXP:\n-      return ds::scalar(CHAR(STRING_ELT(x, 0)));\n-    default:\n-      Rcpp::stop(\n-          tfm::format(\"R object of type %s not supported\", Rf_type2char(TYPEOF(x))));\n-  }\n-\n-  return nullptr;\n+  // defined in scalar.cpp\n+  std::shared_ptr<arrow::Scalar> Scalar__create(SEXP x);\n\nReview comment:\n       Adding `Scalar__create` to the header seems like overkill until it's used by more than just this function, but I can move it for consistency if preferred\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-27T20:17:26.739+0000",
                    "updated": "2020-05-27T20:17:26.739+0000",
                    "started": "2020-05-27T20:17:26.739+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "437994",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/437995",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#discussion_r431417510\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -206,60 +206,91 @@ std::shared_ptr<arrow::Table> Table__FilterChunked(\n   return tab;\n }\n \n+template <typename T>\n+std::shared_ptr<T> MaybeUnbox(const char* class_name, SEXP x) {\n+  if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, class_name)) {\n+    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<T>> obj(x);\n+    return static_cast<std::shared_ptr<T>>(obj);\n+  }\n+  return nullptr;\n+}\n+\n arrow::Datum to_datum(SEXP x) {\n-  // TODO: this is repetitive, can we DRY it out?\n-  if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"Array\")) {\n-    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::Array>> obj(x);\n-    return static_cast<std::shared_ptr<arrow::Array>>(obj);\n-  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"ChunkedArray\")) {\n-    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::ChunkedArray>> obj(x);\n-    return static_cast<std::shared_ptr<arrow::ChunkedArray>>(obj);\n-  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"RecordBatch\")) {\n-    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::RecordBatch>> obj(x);\n-    return static_cast<std::shared_ptr<arrow::RecordBatch>>(obj);\n-  } else if (Rf_inherits(x, \"ArrowObject\") && Rf_inherits(x, \"Table\")) {\n-    Rcpp::ConstReferenceSmartPtrInputParameter<std::shared_ptr<arrow::Table>> obj(x);\n-    return static_cast<std::shared_ptr<arrow::Table>>(obj);\n-  } else {\n-    // TODO: scalar?\n-    // This assumes that R objects have already been converted to Arrow objects;\n-    // that seems right but should we do the wrapping here too/instead?\n-    Rcpp::stop(\"to_datum: Not implemented\");\n+  if (auto array = MaybeUnbox<arrow::Array>(\"Array\", x)) {\n+    return array;\n+  }\n+\n+  if (auto chunked_array = MaybeUnbox<arrow::ChunkedArray>(\"ChunkedArray\", x)) {\n+    return chunked_array;\n+  }\n+\n+  if (auto batch = MaybeUnbox<arrow::RecordBatch>(\"RecordBatch\", x)) {\n+    return batch;\n+  }\n+\n+  if (auto table = MaybeUnbox<arrow::Table>(\"Table\", x)) {\n+    return table;\n+  }\n+\n+  if (auto scalar = MaybeUnbox<arrow::Scalar>(\"Scalar\", x)) {\n+    return scalar;\n   }\n+\n+  // This assumes that R objects have already been converted to Arrow objects;\n+  // that seems right but should we do the wrapping here too/instead?\n+  Rcpp::stop(\"to_datum: Not implemented for type %s\", Rf_type2char(TYPEOF(x)));\n\nReview comment:\n       Alright\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-27T20:18:30.524+0000",
                    "updated": "2020-05-27T20:18:30.524+0000",
                    "started": "2020-05-27T20:18:30.524+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "437995",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/437998",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#discussion_r431423981\n\n\n\n##########\nFile path: r/src/expression.cpp\n##########\n@@ -104,57 +104,9 @@ std::shared_ptr<ds::Expression> dataset___expr__is_valid(\n \n // [[arrow::export]]\n std::shared_ptr<ds::Expression> dataset___expr__scalar(SEXP x) {\n-  switch (TYPEOF(x)) {\n-    case NILSXP:\n-      return ds::scalar(std::make_shared<arrow::NullScalar>());\n-    case LGLSXP:\n-      return ds::scalar(Rf_asLogical(x));\n-    case REALSXP:\n-      if (Rf_inherits(x, \"Date\")) {\n-        return ds::scalar(std::make_shared<arrow::Date32Scalar>(REAL(x)[0]));\n-      } else if (Rf_inherits(x, \"POSIXct\")) {\n-        return ds::scalar(std::make_shared<arrow::TimestampScalar>(\n-            REAL(x)[0], arrow::timestamp(arrow::TimeUnit::SECOND)));\n-      } else if (Rf_inherits(x, \"integer64\")) {\n-        int64_t value = *reinterpret_cast<int64_t*>(REAL(x));\n-        return ds::scalar(value);\n-      } else if (Rf_inherits(x, \"difftime\")) {\n-        int multiplier = 0;\n-        // TODO: shared with TimeConverter<> in array_from_vector.cpp\n-        std::string unit(CHAR(STRING_ELT(Rf_getAttrib(x, arrow::r::symbols::units), 0)));\n-        if (unit == \"secs\") {\n-          multiplier = 1;\n-        } else if (unit == \"mins\") {\n-          multiplier = 60;\n-        } else if (unit == \"hours\") {\n-          multiplier = 3600;\n-        } else if (unit == \"days\") {\n-          multiplier = 86400;\n-        } else if (unit == \"weeks\") {\n-          multiplier = 604800;\n-        } else {\n-          Rcpp::stop(\"unknown difftime unit\");\n-        }\n-        return ds::scalar(std::make_shared<arrow::Time32Scalar>(\n-            static_cast<int>(REAL(x)[0] * multiplier),\n-            arrow::time32(arrow::TimeUnit::SECOND)));\n-      }\n-      return ds::scalar(Rf_asReal(x));\n-    case INTSXP:\n-      if (Rf_inherits(x, \"factor\")) {\n-        // TODO: This does not use the actual value, just the levels\n-        auto type = arrow::r::InferArrowTypeFromFactor(x);\n-        return ds::scalar(std::make_shared<arrow::DictionaryScalar>(type));\n-      }\n-      return ds::scalar(Rf_asInteger(x));\n-    case STRSXP:\n-      return ds::scalar(CHAR(STRING_ELT(x, 0)));\n-    default:\n-      Rcpp::stop(\n-          tfm::format(\"R object of type %s not supported\", Rf_type2char(TYPEOF(x))));\n-  }\n-\n-  return nullptr;\n+  // defined in scalar.cpp\n+  std::shared_ptr<arrow::Scalar> Scalar__create(SEXP x);\n\nReview comment:\n       \ud83e\udd37 if it works, I'm fine with it, I don't have opinions about proper C++ style--I just do what the linter tells me to do.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-27T20:32:00.613+0000",
                    "updated": "2020-05-27T20:32:00.613+0000",
                    "started": "2020-05-27T20:32:00.613+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "437998",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/438305",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#discussion_r431919633\n\n\n\n##########\nFile path: r/R/scalar.R\n##########\n@@ -0,0 +1,56 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include arrowExports.R\n+\n+#' Arrow scalars\n+#'\n+#' @description\n+#' `Scalar`s are used to store a singular value of an arrow `DataType`\n+#'\n+#' @name Scalar\n+#' @rdname Scalar\n+#' @export\n+Scalar <- R6Class(\"Scalar\", inherit = ArrowObject,\n+  public = list(\n+    ToString = function() Scalar__ToString(self),\n+    cast = function(target_type) {\n+      Scalar$create(Scalar__CastTo(self, as_type(target_type)))\n+    },\n+    as_vector = function() Scalar__as_vector(self)\n+  ),\n+  active = list(\n+    is_valid = function() Scalar__is_valid(self),\n+    type = function() DataType$create(Scalar__type(self))\n+  )\n+)\n+Scalar$create <- function(x) {\n+  # TODO: it would probably be best if an explicit type could be provided\n\nReview comment:\n       Why is that? `Array$create()` can make timestamps from the appropriate R object.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-28T15:19:36.433+0000",
                    "updated": "2020-05-28T15:19:36.433+0000",
                    "started": "2020-05-28T15:19:36.433+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "438305",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/438388",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#discussion_r432048400\n\n\n\n##########\nFile path: r/R/scalar.R\n##########\n@@ -0,0 +1,56 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include arrowExports.R\n+\n+#' Arrow scalars\n+#'\n+#' @description\n+#' `Scalar`s are used to store a singular value of an arrow `DataType`\n+#'\n+#' @name Scalar\n+#' @rdname Scalar\n+#' @export\n+Scalar <- R6Class(\"Scalar\", inherit = ArrowObject,\n+  public = list(\n+    ToString = function() Scalar__ToString(self),\n+    cast = function(target_type) {\n+      Scalar$create(Scalar__CastTo(self, as_type(target_type)))\n+    },\n+    as_vector = function() Scalar__as_vector(self)\n+  ),\n+  active = list(\n+    is_valid = function() Scalar__is_valid(self),\n+    type = function() DataType$create(Scalar__type(self))\n+  )\n+)\n+Scalar$create <- function(x) {\n+  # TODO: it would probably be best if an explicit type could be provided\n\nReview comment:\n       That's fine then. If it turns out there are some shortcomings (creating timestamp scalars with different units?) then we can always deal with it later.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-28T18:49:27.539+0000",
                    "updated": "2020-05-28T18:49:27.539+0000",
                    "started": "2020-05-28T18:49:27.539+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "438388",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/438434",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#discussion_r432120245\n\n\n\n##########\nFile path: r/src/scalar.cpp\n##########\n@@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"./arrow_types.h\"\n+\n+#if defined(ARROW_R_WITH_ARROW)\n+\n+#include <arrow/array.h>\n+#include <arrow/scalar.h>\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::Scalar> Array__GetScalar(const std::shared_ptr<arrow::Array>& x, int64_t i) {\n\nReview comment:\n       I removed the bespoke Scalar__create logic in favor of reusing the Array logic, like we are doing on the scalar-to-vector side. Scalar$create creates a length-1 Array and takes the 0th element as a Scalar. This added support for nested types as Scalar for free, and prevents other inconsistencies from arising. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-28T21:00:17.550+0000",
                    "updated": "2020-05-28T21:00:17.550+0000",
                    "started": "2020-05-28T21:00:17.550+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "438434",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/438436",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#discussion_r432121430\n\n\n\n##########\nFile path: r/R/array.R\n##########\n@@ -128,17 +128,19 @@ Array <- R6Class(\"Array\",\n         i <- Array$create(i)\n       }\n       if (inherits(i, \"ChunkedArray\")) {\n+        # Invalid: Kernel does not support chunked array arguments\n\nReview comment:\n       https://issues.apache.org/jira/browse/ARROW-8976\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-28T21:02:21.168+0000",
                    "updated": "2020-05-28T21:02:21.168+0000",
                    "started": "2020-05-28T21:02:21.167+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "438436",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/438438",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#issuecomment-635606195\n\n\n   There's more to do but this is enough to provide a foundation for future compute work in R.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-28T21:03:06.906+0000",
                    "updated": "2020-05-28T21:03:06.906+0000",
                    "started": "2020-05-28T21:03:06.906+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "438438",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/438550",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson closed pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-29T02:35:02.735+0000",
                    "updated": "2020-05-29T02:35:02.735+0000",
                    "started": "2020-05-29T02:35:02.735+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "438550",
                    "issueId": "13307285"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/worklog/438713",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #7279:\nURL: https://github.com/apache/arrow/pull/7279#issuecomment-635950388\n\n\n   +1\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-29T12:40:12.888+0000",
                    "updated": "2020-05-29T12:40:12.888+0000",
                    "started": "2020-05-29T12:40:12.888+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "438713",
                    "issueId": "13307285"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 12000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3694047f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3427ed01[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@73225edd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7866fa5d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@f7b7012[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@724a547a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@13ff3858[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5c049c68[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@82b8c1a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@28e2f0e1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4235205d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3aaa13af[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri May 29 02:34:56 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-05-29T02:34:56.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8938/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-05-25T19:49:24.000+0000",
        "updated": "2020-05-29T12:40:13.000+0000",
        "timeoriginalestimate": null,
        "description": "This will drastically simplify exposing new functions to R users",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Provide binding for arrow::compute::CallFunction",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307285/comment/17119217",
                    "id": "17119217",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 7279\n[https://github.com/apache/arrow/pull/7279]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-05-29T02:34:56.656+0000",
                    "updated": "2020-05-29T02:34:56.656+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0f534:",
        "customfield_12314139": null
    }
}