{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13260058",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260058",
    "key": "ARROW-6762",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346358",
                "id": "12346358",
                "description": "",
                "name": "0.15.1",
                "archived": false,
                "released": true,
                "releaseDate": "2019-11-01"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "json",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6762/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 12,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260058/worklog/321871",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5564: ARROW-6762: [C++] Support reading JSON files with no newline at end\nURL: https://github.com/apache/arrow/pull/5564\n \n \n   Also fix some lifetime issues in parallel mode, and add tests.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-02T13:11:02.177+0000",
                    "updated": "2019-10-02T13:11:02.177+0000",
                    "started": "2019-10-02T13:11:02.177+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "321871",
                    "issueId": "13260058"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260058/worklog/321873",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5564: ARROW-6762: [C++] Support reading JSON files with no newline at end\nURL: https://github.com/apache/arrow/pull/5564#issuecomment-537487073\n \n \n   https://issues.apache.org/jira/browse/ARROW-6762\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-02T13:16:27.486+0000",
                    "updated": "2019-10-02T13:16:27.486+0000",
                    "started": "2019-10-02T13:16:27.486+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "321873",
                    "issueId": "13260058"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260058/worklog/321887",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #5564: ARROW-6762: [C++] Support reading JSON files with no newline at end\nURL: https://github.com/apache/arrow/pull/5564#issuecomment-537506907\n \n \n   @ursabot build\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-02T14:02:39.507+0000",
                    "updated": "2019-10-02T14:02:39.507+0000",
                    "started": "2019-10-02T14:02:39.506+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "321887",
                    "issueId": "13260058"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260058/worklog/322243",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5564: ARROW-6762: [C++] Support reading JSON files with no newline at end\nURL: https://github.com/apache/arrow/pull/5564#discussion_r330624834\n \n \n\n ##########\n File path: cpp/src/arrow/json/chunker_test.cc\n ##########\n @@ -103,6 +116,37 @@ void AssertChunking(Chunker& chunker, std::shared_ptr<Buffer> buf, int total_cou\n   }\n }\n \n+void AssertChunkingBlockSize(Chunker& chunker, std::shared_ptr<Buffer> buf,\n+                             int64_t block_size, int expected_count) {\n+  std::shared_ptr<Buffer> partial = Buffer::FromString({});\n+  int64_t pos = 0;\n+  int total_count = 0;\n+  while (pos < buf->size()) {\n+    int count;\n+    auto block = SliceBuffer(buf, pos, std::min(block_size, buf->size() - pos));\n+    pos += block->size();\n+    std::shared_ptr<Buffer> completion, whole, next_partial;\n+\n+    if (pos == buf->size()) {\n+      // Last block\n+      ASSERT_OK(chunker.ProcessFinal(partial, block, &completion, &whole));\n+    } else {\n+      ASSERT_OK(chunker.ProcessWithPartial(partial, block, &completion, &whole));\n \n Review comment:\n   Reusing variables this much is a little confusing\r\n   ```suggestion\r\n         std::shared_ptr<Buffer> starts_with_whole;\r\n         ASSERT_OK(chunker.ProcessWithPartial(partial, block, &completion, &starts_with_whole));\r\n         ASSERT_OK(chunker.Process(starts_with_whole, &whole, &next_partial));\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-02T20:50:38.810+0000",
                    "updated": "2019-10-02T20:50:38.810+0000",
                    "started": "2019-10-02T20:50:38.810+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322243",
                    "issueId": "13260058"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260058/worklog/322244",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5564: ARROW-6762: [C++] Support reading JSON files with no newline at end\nURL: https://github.com/apache/arrow/pull/5564#discussion_r330756194\n \n \n\n ##########\n File path: cpp/src/arrow/json/chunker.cc\n ##########\n @@ -208,9 +246,16 @@ class ParsingChunker : public Chunker {\n     }\n     auto length = ConsumeWholeObject(MultiStringStream({partial, block}));\n     if (length == string_view::npos) {\n-      // straddling object straddles *two* block boundaries.\n-      // retry with larger buffer\n-      return StraddlingTooLarge();\n+      // no newlines in this block\n+      if (is_final) {\n+        // => it's entirely a completion of partial\n+        *completion = block;\n+        *rest = SliceBuffer(block, 0, 0);\n+        return Status::OK();\n+      } else {\n \n Review comment:\n   ```suggestion\r\n         }\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-02T20:50:38.813+0000",
                    "updated": "2019-10-02T20:50:38.813+0000",
                    "started": "2019-10-02T20:50:38.813+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322244",
                    "issueId": "13260058"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260058/worklog/322245",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5564: ARROW-6762: [C++] Support reading JSON files with no newline at end\nURL: https://github.com/apache/arrow/pull/5564#discussion_r330676875\n \n \n\n ##########\n File path: cpp/src/arrow/json/chunker.h\n ##########\n @@ -41,23 +41,48 @@ class ARROW_EXPORT Chunker {\n   virtual ~Chunker() = default;\n \n   /// \\brief Carve up a chunk in a block of data to contain only whole objects\n+  ///\n+  /// Post-conditions:\n+  /// - block == whole + partial\n+  /// - `whole` is a valid block of JSON data\n+  /// - `partial` doesn't contain an entire JSON object\n+  ///\n   /// \\param[in] block json data to be chunked\n   /// \\param[out] whole subrange of block containing whole json objects\n   /// \\param[out] partial subrange of block a partial json object\n-  virtual Status Process(const std::shared_ptr<Buffer>& block,\n-                         std::shared_ptr<Buffer>* whole,\n+  virtual Status Process(std::shared_ptr<Buffer> block, std::shared_ptr<Buffer>* whole,\n                          std::shared_ptr<Buffer>* partial) = 0;\n \n   /// \\brief Carve the completion of a partial object out of a block\n+  ///\n+  /// Post-conditions:\n+  /// - block == completion + rest\n+  /// - `partial + completion` is a valid block of JSON data\n+  /// - `completion` doesn't contain an entire JSON object\n+  ///\n   /// \\param[in] partial incomplete json object\n   /// \\param[in] block json data\n   /// \\param[out] completion subrange of block containing the completion of partial\n   /// \\param[out] rest subrange of block containing what completion does not cover\n-  virtual Status ProcessWithPartial(const std::shared_ptr<Buffer>& partial,\n-                                    const std::shared_ptr<Buffer>& block,\n+  virtual Status ProcessWithPartial(std::shared_ptr<Buffer> partial,\n \n Review comment:\n   not sure why `const&` was removed here; the chunker doesn't take ownership of the buffer so a copy is unnecessary\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-02T20:50:38.918+0000",
                    "updated": "2019-10-02T20:50:38.918+0000",
                    "started": "2019-10-02T20:50:38.917+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322245",
                    "issueId": "13260058"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260058/worklog/322246",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5564: ARROW-6762: [C++] Support reading JSON files with no newline at end\nURL: https://github.com/apache/arrow/pull/5564#discussion_r330760085\n \n \n\n ##########\n File path: cpp/src/arrow/json/chunker.cc\n ##########\n @@ -88,9 +104,16 @@ class NewlinesStrictlyDelimitChunker : public Chunker {\n     }\n     auto first_newline = string_view(*block).find_first_of(\"\\n\\r\");\n     if (first_newline == string_view::npos) {\n-      // no newlines in this block; straddling object straddles *two* block boundaries.\n-      // retry with larger buffer\n-      return StraddlingTooLarge();\n+      // no newlines in this block\n+      if (is_final) {\n+        // => it's entirely a completion of partial\n+        *completion = block;\n+        *rest = SliceBuffer(block, 0, 0);\n+        return Status::OK();\n+      } else {\n \n Review comment:\n   ```suggestion\r\n         }\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-02T20:50:38.939+0000",
                    "updated": "2019-10-02T20:50:38.939+0000",
                    "started": "2019-10-02T20:50:38.939+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322246",
                    "issueId": "13260058"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260058/worklog/322296",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5564: ARROW-6762: [C++] Support reading JSON files with no newline at end\nURL: https://github.com/apache/arrow/pull/5564#discussion_r330787735\n \n \n\n ##########\n File path: cpp/src/arrow/json/chunker.h\n ##########\n @@ -41,23 +41,48 @@ class ARROW_EXPORT Chunker {\n   virtual ~Chunker() = default;\n \n   /// \\brief Carve up a chunk in a block of data to contain only whole objects\n+  ///\n+  /// Post-conditions:\n+  /// - block == whole + partial\n+  /// - `whole` is a valid block of JSON data\n+  /// - `partial` doesn't contain an entire JSON object\n+  ///\n   /// \\param[in] block json data to be chunked\n   /// \\param[out] whole subrange of block containing whole json objects\n   /// \\param[out] partial subrange of block a partial json object\n-  virtual Status Process(const std::shared_ptr<Buffer>& block,\n-                         std::shared_ptr<Buffer>* whole,\n+  virtual Status Process(std::shared_ptr<Buffer> block, std::shared_ptr<Buffer>* whole,\n                          std::shared_ptr<Buffer>* partial) = 0;\n \n   /// \\brief Carve the completion of a partial object out of a block\n+  ///\n+  /// Post-conditions:\n+  /// - block == completion + rest\n+  /// - `partial + completion` is a valid block of JSON data\n+  /// - `completion` doesn't contain an entire JSON object\n+  ///\n   /// \\param[in] partial incomplete json object\n   /// \\param[in] block json data\n   /// \\param[out] completion subrange of block containing the completion of partial\n   /// \\param[out] rest subrange of block containing what completion does not cover\n-  virtual Status ProcessWithPartial(const std::shared_ptr<Buffer>& partial,\n-                                    const std::shared_ptr<Buffer>& block,\n+  virtual Status ProcessWithPartial(std::shared_ptr<Buffer> partial,\n \n Review comment:\n   Because otherwise it's buggy when you pass the same variable as input and output.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-02T21:50:47.788+0000",
                    "updated": "2019-10-02T21:50:47.788+0000",
                    "started": "2019-10-02T21:50:47.787+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322296",
                    "issueId": "13260058"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260058/worklog/322350",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #5564: ARROW-6762: [C++] Support reading JSON files with no newline at end\nURL: https://github.com/apache/arrow/pull/5564#issuecomment-537719298\n \n \n   > Is there some use case for running a ChunkedArrayBuilder in a task group but never calling finish on it?\r\n   \r\n   I had some actual crashes when adding the tests. The main situation is when the reader exits early - for example because chunking fails, but I think it may also happen if readahead fails (think I/O or decompression error).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-02T23:11:18.238+0000",
                    "updated": "2019-10-02T23:11:18.238+0000",
                    "started": "2019-10-02T23:11:18.238+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322350",
                    "issueId": "13260058"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260058/worklog/322505",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5564: ARROW-6762: [C++] Support reading JSON files with no newline at end\nURL: https://github.com/apache/arrow/pull/5564#discussion_r330957717\n \n \n\n ##########\n File path: cpp/src/arrow/json/chunker.cc\n ##########\n @@ -88,9 +104,16 @@ class NewlinesStrictlyDelimitChunker : public Chunker {\n     }\n     auto first_newline = string_view(*block).find_first_of(\"\\n\\r\");\n     if (first_newline == string_view::npos) {\n-      // no newlines in this block; straddling object straddles *two* block boundaries.\n-      // retry with larger buffer\n-      return StraddlingTooLarge();\n+      // no newlines in this block\n+      if (is_final) {\n+        // => it's entirely a completion of partial\n+        *completion = block;\n+        *rest = SliceBuffer(block, 0, 0);\n+        return Status::OK();\n+      } else {\n \n Review comment:\n   I prefer like it is currently.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T09:58:29.519+0000",
                    "updated": "2019-10-03T09:58:29.519+0000",
                    "started": "2019-10-03T09:58:29.519+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322505",
                    "issueId": "13260058"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260058/worklog/322506",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5564: ARROW-6762: [C++] Support reading JSON files with no newline at end\nURL: https://github.com/apache/arrow/pull/5564#discussion_r330957898\n \n \n\n ##########\n File path: cpp/src/arrow/json/chunker_test.cc\n ##########\n @@ -103,6 +116,37 @@ void AssertChunking(Chunker& chunker, std::shared_ptr<Buffer> buf, int total_cou\n   }\n }\n \n+void AssertChunkingBlockSize(Chunker& chunker, std::shared_ptr<Buffer> buf,\n+                             int64_t block_size, int expected_count) {\n+  std::shared_ptr<Buffer> partial = Buffer::FromString({});\n+  int64_t pos = 0;\n+  int total_count = 0;\n+  while (pos < buf->size()) {\n+    int count;\n+    auto block = SliceBuffer(buf, pos, std::min(block_size, buf->size() - pos));\n+    pos += block->size();\n+    std::shared_ptr<Buffer> completion, whole, next_partial;\n+\n+    if (pos == buf->size()) {\n+      // Last block\n+      ASSERT_OK(chunker.ProcessFinal(partial, block, &completion, &whole));\n+    } else {\n+      ASSERT_OK(chunker.ProcessWithPartial(partial, block, &completion, &whole));\n \n Review comment:\n   Will do.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T09:58:59.375+0000",
                    "updated": "2019-10-03T09:58:59.375+0000",
                    "started": "2019-10-03T09:58:59.375+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322506",
                    "issueId": "13260058"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260058/worklog/322673",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5564: ARROW-6762: [C++] Support reading JSON files with no newline at end\nURL: https://github.com/apache/arrow/pull/5564\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T14:57:16.174+0000",
                    "updated": "2019-10-03T14:57:16.174+0000",
                    "started": "2019-10-03T14:57:16.174+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322673",
                    "issueId": "13260058"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 6000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3786d198[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@38b400b9[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1727f7b6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@f8e8c23[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3f61fb97[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4ecb093f[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6679cd17[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1dedaa6f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2d604706[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3b742164[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@134d4268[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@63032cbc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6000,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Oct 03 14:57:19 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-10-03T14:57:19.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6762/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2019-10-02T08:03:27.000+0000",
        "updated": "2019-10-18T19:56:08.000+0000",
        "timeoriginalestimate": null,
        "description": "Using the {{SampleRecord.jl}} attachment from ARROW-6737, I notice that trying to read this file on master results in a segfault:\r\n\r\n{code}\r\nIn [1]: from pyarrow import json \r\n   ...: import pyarrow.parquet as pq \r\n   ...:  \r\n   ...: r = json.read_json('SampleRecord.jl') \r\nWARNING: Logging before InitGoogleLogging() is written to STDERR\r\nF1002 09:56:55.362766 13035 reader.cc:93]  Check failed: (string_view(*next_partial).find_first_not_of(\" \\t\\n\\r\")) == (string_view::npos) \r\n*** Check failure stack trace: ***\r\nAborted (core dumped)\r\n{code}\r\n\r\nwhile with 0.14.1 this works fine:\r\n\r\n{code}\r\nIn [24]: from pyarrow import json \r\n    ...: import pyarrow.parquet as pq \r\n    ...:  \r\n    ...: r = json.read_json('SampleRecord.jl')                                                                                                                                                                     \r\n\r\nIn [25]: r                                                                                                                                                                                                         \r\nOut[25]: \r\npyarrow.Table\r\n_type: string\r\nprovider_name: string\r\narrival: timestamp[s]\r\nberthed: timestamp[s]\r\nberth: null\r\ncargoes: list<item: struct<movement: string, product: string, volume: string, volume_unit: string, buyer: null, seller: null>>\r\n  child 0, item: struct<movement: string, product: string, volume: string, volume_unit: string, buyer: null, seller: null>\r\n      child 0, movement: string\r\n      child 1, product: string\r\n      child 2, volume: string\r\n      child 3, volume_unit: string\r\n      child 4, buyer: null\r\n      child 5, seller: null\r\ndeparture: timestamp[s]\r\neta: null\r\ninstallation: null\r\nport_name: string\r\nnext_zone: null\r\nreported_date: timestamp[s]\r\nshipping_agent: null\r\nvessel: struct<beam: null, build_year: null, call_sign: null, dead_weight: null, dwt: null, flag_code: null, flag_name: null, gross_tonnage: null, imo: string, length: int64, mmsi: null, name: string, type: null, vessel_type: null>\r\n  child 0, beam: null\r\n  child 1, build_year: null\r\n  child 2, call_sign: null\r\n  child 3, dead_weight: null\r\n  child 4, dwt: null\r\n  child 5, flag_code: null\r\n  child 6, flag_name: null\r\n  child 7, gross_tonnage: null\r\n  child 8, imo: string\r\n  child 9, length: int64\r\n  child 10, mmsi: null\r\n  child 11, name: string\r\n  child 12, type: null\r\n  child 13, vessel_type: null\r\n\r\nIn [26]: pa.__version__                                                                                                                                                                                            \r\nOut[26]: '0.14.1'\r\n{code}\r\n\r\ncc [~apitrou] [~bkietz]",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] JSON reader segfaults on newline",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260058/comment/16942597",
                    "id": "16942597",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Ok, the issue is that the JSON reader assumes the file always ends with a newline. Some JSON files may not have a newline at the end of the last line.\r\n\r\nSo it would not crash in release mode (it's a debug assertion), but probably produce the wrong result.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-10-02T08:37:24.738+0000",
                    "updated": "2019-10-02T08:37:24.738+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260058/comment/16942801",
                    "id": "16942801",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "This is a [stated limitation|https://github.com/apache/arrow/blob/master/cpp/src/arrow/json/options.h#L50] of the JSON parser when parsing with strict newline delimiters. Still, it shouldn't crash; we should probably change the debug assertion to an informative error message suggesting {{newlines_in_values=true}} or appending an empty line.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-02T13:17:35.990+0000",
                    "updated": "2019-10-02T13:19:13.722+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260058/comment/16942811",
                    "id": "16942811",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Well, the attached PR removes the limitation then.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-10-02T13:29:09.829+0000",
                    "updated": "2019-10-02T13:29:09.829+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260058/comment/16943646",
                    "id": "16943646",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 5564\n[https://github.com/apache/arrow/pull/5564]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-10-03T14:57:19.118+0000",
                    "updated": "2019-10-03T14:57:19.118+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z077zc:",
        "customfield_12314139": null
    }
}