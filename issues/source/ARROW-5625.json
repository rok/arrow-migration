{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13239870",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13239870",
    "key": "ARROW-5625",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5625/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 13,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13239870/worklog/261341",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4593: ARROW-5625: [R] convert Array of struct type to data frame columns\nURL: https://github.com/apache/arrow/pull/4593\n \n \n   struct arrays become data frame columns, i.e. \r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   library(tibble)\r\n   \r\n   tf <- tempfile()\r\n   writeLines('\r\n       { \"hello\": 3.5, \"world\": false, \"yo\": \"thing\", \"nuf\": {} }\r\n       { \"hello\": 3.25, \"world\": null, \"nuf\": null }\r\n       { \"hello\": 3.125, \"world\": null, \"yo\": \"\\u5fcd\", \"nuf\": { \"ps\": 78.0, \"house\": \"Gryffindor\"} }\r\n       { \"hello\": 0.0, \"world\": true, \"yo\": null, \"nuf\": { \"ps\": 90.0, \"house\": \"Slytherin\" } }\r\n     ', tf)\r\n   \r\n   tab1 <- read_json_arrow(tf, as_tibble = FALSE)\r\n   array <- tab1$column(3)$data()$chunk(0)\r\n   array$field(0)\r\n   #> arrow::Array \r\n   #> [\r\n   #>   null,\r\n   #>   null,\r\n   #>   78,\r\n   #>   90\r\n   #> ]\r\n   array$as_vector()\r\n   #>   ps      house\r\n   #> 1 NA       <NA>\r\n   #> 2 NA       <NA>\r\n   #> 3 78 Gryffindor\r\n   #> 4 90  Slytherin\r\n   as.data.frame(tab1)\r\n   #> # A tibble: 4 x 4\r\n   #>   hello world yo    nuf$ps $house    \r\n   #>   <dbl> <lgl> <chr>  <dbl> <chr>     \r\n   #> 1  3.5  FALSE thing     NA <NA>      \r\n   #> 2  3.25 NA    <NA>      NA <NA>      \r\n   #> 3  3.12 NA    \u5fcd        78 Gryffindor\r\n   #> 4  0    TRUE  <NA>      90 Slytherin\r\n   ```\r\n   \r\n   <sup>Created on 2019-06-17 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0.9000)</sup>\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T13:34:14.118+0000",
                    "updated": "2019-06-17T13:34:14.118+0000",
                    "started": "2019-06-17T13:34:14.117+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261341",
                    "issueId": "13239870"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13239870/worklog/261342",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on issue #4593: ARROW-5625: [R] convert Array of struct type to data frame columns\nURL: https://github.com/apache/arrow/pull/4593#issuecomment-502684878\n \n \n   This is similar to #4575, @fsaintjacques you might want to adopt this one too. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T13:35:41.757+0000",
                    "updated": "2019-06-17T13:35:41.757+0000",
                    "started": "2019-06-17T13:35:41.757+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261342",
                    "issueId": "13239870"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13239870/worklog/261396",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4593: ARROW-5625: [R] convert Array of struct type to data frame columns\nURL: https://github.com/apache/arrow/pull/4593#discussion_r294317703\n \n \n\n ##########\n File path: r/src/array__to_vector.cpp\n ##########\n @@ -345,6 +345,64 @@ class Converter_Dictionary : public Converter {\n   }\n };\n \n+class Converter_Struct : public Converter {\n+ public:\n+  explicit Converter_Struct(const ArrayVector& arrays) : Converter(arrays), converters() {\n+    auto first_array =\n+        internal::checked_cast<arrow::StructArray*>(Converter::arrays_[0].get());\n+    int nf = first_array->num_fields();\n+    for (int i = 0; i < nf; i++) {\n+      converters.push_back(Converter::Make({first_array->field(i)}));\n+    }\n+  }\n+\n+  SEXP Allocate(R_xlen_t n) const {\n+    // allocate a data frame column to host each array\n+    auto first_array =\n+        internal::checked_cast<arrow::StructArray*>(Converter::arrays_[0].get());\n+    auto type = first_array->struct_type();\n+    int nf = first_array->num_fields();\n+    Rcpp::List out(nf);\n+    Rcpp::CharacterVector colnames(nf);\n+    for (int i = 0; i < nf; i++) {\n+      out[i] = converters[i]->Allocate(n);\n+      colnames[i] = type->child(i)->name();\n+    }\n+    IntegerVector rn(2);\n+    rn[0] = NA_INTEGER;\n+    rn[1] = -n;\n+    Rf_setAttrib(out, symbols::row_names, rn);\n+    Rf_setAttrib(out, R_NamesSymbol, colnames);\n+    Rf_setAttrib(out, R_ClassSymbol, Rf_mkString(\"data.frame\"));\n+    return out;\n+  }\n+\n+  Status Ingest_all_nulls(SEXP data, R_xlen_t start, R_xlen_t n) const {\n+    int nf = converters.size();\n+    for (int i = 0; i < nf; i++) {\n+      STOP_IF_NOT_OK(converters[i]->Ingest_all_nulls(VECTOR_ELT(data, i), start, n));\n+    }\n+    return Status::OK();\n+  }\n+\n+  Status Ingest_some_nulls(SEXP data, const std::shared_ptr<arrow::Array>& array,\n+                           R_xlen_t start, R_xlen_t n) const {\n+    auto struct_array = internal::checked_cast<arrow::StructArray*>(array.get());\n+    int nf = converters.size();\n+    ArrayVector arrays(nf);\n+    STOP_IF_NOT_OK(struct_array->Flatten(default_memory_pool(), &arrays));\n \n Review comment:\n   You're effectively doing nothing with `arrays`, is this intended?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T14:35:46.306+0000",
                    "updated": "2019-06-17T14:35:46.306+0000",
                    "started": "2019-06-17T14:35:46.306+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261396",
                    "issueId": "13239870"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13239870/worklog/261397",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4593: ARROW-5625: [R] convert Array of struct type to data frame columns\nURL: https://github.com/apache/arrow/pull/4593#discussion_r294323659\n \n \n\n ##########\n File path: r/tests/testthat/test-json.R\n ##########\n @@ -77,8 +77,8 @@ test_that(\"Can read json file with nested columns (ARROW-5503)\", {\n   writeLines('\n     { \"hello\": 3.5, \"world\": false, \"yo\": \"thing\", \"arr\": [1, 2, 3], \"nuf\": {} }\n     { \"hello\": 3.25, \"world\": null, \"arr\": [2], \"nuf\": null }\n-    { \"hello\": 3.125, \"world\": null, \"yo\": \"\\u5fcd\", \"arr\": [], \"nuf\": { \"ps\": 78 } }\n-    { \"hello\": 0.0, \"world\": true, \"yo\": null, \"arr\": null, \"nuf\": { \"ps\": 90 } }\n+    { \"hello\": 3.125, \"world\": null, \"yo\": \"\\u5fcd\", \"arr\": [], \"nuf\": { \"ps\": 78.0 } }\n+    { \"hello\": 0.0, \"world\": true, \"yo\": null, \"arr\": null, \"nuf\": { \"ps\": 90.0 } }\n \n Review comment:\n   What about omitting fields, e.g. `{\"hello\":\"hi\"}`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T14:35:46.339+0000",
                    "updated": "2019-06-17T14:35:46.339+0000",
                    "started": "2019-06-17T14:35:46.338+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261397",
                    "issueId": "13239870"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13239870/worklog/261404",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4593: ARROW-5625: [R] convert Array of struct type to data frame columns\nURL: https://github.com/apache/arrow/pull/4593#discussion_r294332879\n \n \n\n ##########\n File path: r/src/array__to_vector.cpp\n ##########\n @@ -345,6 +345,64 @@ class Converter_Dictionary : public Converter {\n   }\n };\n \n+class Converter_Struct : public Converter {\n+ public:\n+  explicit Converter_Struct(const ArrayVector& arrays) : Converter(arrays), converters() {\n+    auto first_array =\n+        internal::checked_cast<arrow::StructArray*>(Converter::arrays_[0].get());\n+    int nf = first_array->num_fields();\n+    for (int i = 0; i < nf; i++) {\n+      converters.push_back(Converter::Make({first_array->field(i)}));\n+    }\n+  }\n+\n+  SEXP Allocate(R_xlen_t n) const {\n+    // allocate a data frame column to host each array\n+    auto first_array =\n+        internal::checked_cast<arrow::StructArray*>(Converter::arrays_[0].get());\n+    auto type = first_array->struct_type();\n+    int nf = first_array->num_fields();\n+    Rcpp::List out(nf);\n+    Rcpp::CharacterVector colnames(nf);\n+    for (int i = 0; i < nf; i++) {\n+      out[i] = converters[i]->Allocate(n);\n+      colnames[i] = type->child(i)->name();\n+    }\n+    IntegerVector rn(2);\n+    rn[0] = NA_INTEGER;\n+    rn[1] = -n;\n+    Rf_setAttrib(out, symbols::row_names, rn);\n+    Rf_setAttrib(out, R_NamesSymbol, colnames);\n+    Rf_setAttrib(out, R_ClassSymbol, Rf_mkString(\"data.frame\"));\n+    return out;\n+  }\n+\n+  Status Ingest_all_nulls(SEXP data, R_xlen_t start, R_xlen_t n) const {\n+    int nf = converters.size();\n+    for (int i = 0; i < nf; i++) {\n+      STOP_IF_NOT_OK(converters[i]->Ingest_all_nulls(VECTOR_ELT(data, i), start, n));\n+    }\n+    return Status::OK();\n+  }\n+\n+  Status Ingest_some_nulls(SEXP data, const std::shared_ptr<arrow::Array>& array,\n+                           R_xlen_t start, R_xlen_t n) const {\n+    auto struct_array = internal::checked_cast<arrow::StructArray*>(array.get());\n+    int nf = converters.size();\n+    ArrayVector arrays(nf);\n+    STOP_IF_NOT_OK(struct_array->Flatten(default_memory_pool(), &arrays));\n \n Review comment:\n   Thanks. using it now. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T14:42:08.720+0000",
                    "updated": "2019-06-17T14:42:08.720+0000",
                    "started": "2019-06-17T14:42:08.720+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261404",
                    "issueId": "13239870"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13239870/worklog/261407",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4593: ARROW-5625: [R] convert Array of struct type to data frame columns\nURL: https://github.com/apache/arrow/pull/4593#discussion_r294334599\n \n \n\n ##########\n File path: r/src/array__to_vector.cpp\n ##########\n @@ -345,6 +345,64 @@ class Converter_Dictionary : public Converter {\n   }\n };\n \n+class Converter_Struct : public Converter {\n+ public:\n+  explicit Converter_Struct(const ArrayVector& arrays) : Converter(arrays), converters() {\n+    auto first_array =\n+        internal::checked_cast<arrow::StructArray*>(Converter::arrays_[0].get());\n+    int nf = first_array->num_fields();\n+    for (int i = 0; i < nf; i++) {\n+      converters.push_back(Converter::Make({first_array->field(i)}));\n+    }\n+  }\n+\n+  SEXP Allocate(R_xlen_t n) const {\n+    // allocate a data frame column to host each array\n+    auto first_array =\n+        internal::checked_cast<arrow::StructArray*>(Converter::arrays_[0].get());\n+    auto type = first_array->struct_type();\n+    int nf = first_array->num_fields();\n+    Rcpp::List out(nf);\n+    Rcpp::CharacterVector colnames(nf);\n+    for (int i = 0; i < nf; i++) {\n+      out[i] = converters[i]->Allocate(n);\n+      colnames[i] = type->child(i)->name();\n+    }\n+    IntegerVector rn(2);\n+    rn[0] = NA_INTEGER;\n+    rn[1] = -n;\n+    Rf_setAttrib(out, symbols::row_names, rn);\n+    Rf_setAttrib(out, R_NamesSymbol, colnames);\n+    Rf_setAttrib(out, R_ClassSymbol, Rf_mkString(\"data.frame\"));\n+    return out;\n+  }\n+\n+  Status Ingest_all_nulls(SEXP data, R_xlen_t start, R_xlen_t n) const {\n+    int nf = converters.size();\n+    for (int i = 0; i < nf; i++) {\n+      STOP_IF_NOT_OK(converters[i]->Ingest_all_nulls(VECTOR_ELT(data, i), start, n));\n+    }\n+    return Status::OK();\n+  }\n+\n+  Status Ingest_some_nulls(SEXP data, const std::shared_ptr<arrow::Array>& array,\n+                           R_xlen_t start, R_xlen_t n) const {\n+    auto struct_array = internal::checked_cast<arrow::StructArray*>(array.get());\n+    int nf = converters.size();\n+    ArrayVector arrays(nf);\n+    STOP_IF_NOT_OK(struct_array->Flatten(default_memory_pool(), &arrays));\n \n Review comment:\n   Could you add a comment why it is necessary? I just realized that this is needed due to the merge of Nulls. Probably worth a unit test.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T14:45:36.553+0000",
                    "updated": "2019-06-17T14:45:36.553+0000",
                    "started": "2019-06-17T14:45:36.552+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261407",
                    "issueId": "13239870"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13239870/worklog/261409",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4593: ARROW-5625: [R] convert Array of struct type to data frame columns\nURL: https://github.com/apache/arrow/pull/4593#discussion_r294336366\n \n \n\n ##########\n File path: r/tests/testthat/test-json.R\n ##########\n @@ -77,8 +77,8 @@ test_that(\"Can read json file with nested columns (ARROW-5503)\", {\n   writeLines('\n     { \"hello\": 3.5, \"world\": false, \"yo\": \"thing\", \"arr\": [1, 2, 3], \"nuf\": {} }\n     { \"hello\": 3.25, \"world\": null, \"arr\": [2], \"nuf\": null }\n-    { \"hello\": 3.125, \"world\": null, \"yo\": \"\\u5fcd\", \"arr\": [], \"nuf\": { \"ps\": 78 } }\n-    { \"hello\": 0.0, \"world\": true, \"yo\": null, \"arr\": null, \"nuf\": { \"ps\": 90 } }\n+    { \"hello\": 3.125, \"world\": null, \"yo\": \"\\u5fcd\", \"arr\": [], \"nuf\": { \"ps\": 78.0 } }\n+    { \"hello\": 0.0, \"world\": true, \"yo\": null, \"arr\": null, \"nuf\": { \"ps\": 90.0 } }\n \n Review comment:\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   library(tibble)\r\n   \r\n   tf <- tempfile()\r\n   writeLines('\r\n       { \"hello\": 3.5, \"world\": false, \"yo\": \"thing\" }\r\n       { \"hello\": 2.3}\r\n     ', tf)\r\n   \r\n   read_json_arrow(tf, as_tibble = TRUE)\r\n   #> # A tibble: 2 x 3\r\n   #>   hello world yo   \r\n   #>   <dbl> <lgl> <chr>\r\n   #> 1   3.5 FALSE thing\r\n   #> 2   2.3 NA    <NA>\r\n   ```\r\n   \r\n   Maybe this `read_json_arrow()` needs more tests. \r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   library(tibble)\r\n   \r\n   tf <- tempfile()\r\n   writeLines('\r\n       { \"hello\": 3.5, \"world\": false, \"yo\": \"thing\" }\r\n       { \"hello\": \"hi\"}\r\n     ', tf)\r\n   \r\n   read_json_arrow(tf, as_tibble = TRUE)\r\n   #> Error in json___TableReader__Read(self): Invalid: Empty JSON file\r\n   ```\r\n   \r\n   but it's not really this pull request territory. I'm using this at the moment because we currently don't have an R way to create list arrays or struct arrays, i.e. we need to be able to go the other direction with e.g. \r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   library(tibble)\r\n   \r\n   array(list(1:3, 4:5), type = list_of(int32()))\r\n   #> Error in Array__from_vector(x, type): NotImplemented: type not implemented\r\n   ```\r\n   \r\n   which is the purpose of this one: https://issues.apache.org/jira/browse/ARROW-3809?filter=12344983\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T14:49:03.365+0000",
                    "updated": "2019-06-17T14:49:03.365+0000",
                    "started": "2019-06-17T14:49:03.364+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261409",
                    "issueId": "13239870"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13239870/worklog/261411",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4593: ARROW-5625: [R] convert Array of struct type to data frame columns\nURL: https://github.com/apache/arrow/pull/4593#discussion_r294338527\n \n \n\n ##########\n File path: r/tests/testthat/test-json.R\n ##########\n @@ -77,8 +77,8 @@ test_that(\"Can read json file with nested columns (ARROW-5503)\", {\n   writeLines('\n     { \"hello\": 3.5, \"world\": false, \"yo\": \"thing\", \"arr\": [1, 2, 3], \"nuf\": {} }\n     { \"hello\": 3.25, \"world\": null, \"arr\": [2], \"nuf\": null }\n-    { \"hello\": 3.125, \"world\": null, \"yo\": \"\\u5fcd\", \"arr\": [], \"nuf\": { \"ps\": 78 } }\n-    { \"hello\": 0.0, \"world\": true, \"yo\": null, \"arr\": null, \"nuf\": { \"ps\": 90 } }\n+    { \"hello\": 3.125, \"world\": null, \"yo\": \"\\u5fcd\", \"arr\": [], \"nuf\": { \"ps\": 78.0 } }\n+    { \"hello\": 0.0, \"world\": true, \"yo\": null, \"arr\": null, \"nuf\": { \"ps\": 90.0 } }\n \n Review comment:\n   This is an error of mine, I meant `{\"hello\": 1.2}` not a bad type. But good if it uncovered an error :)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T14:53:19.107+0000",
                    "updated": "2019-06-17T14:53:19.107+0000",
                    "started": "2019-06-17T14:53:19.106+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261411",
                    "issueId": "13239870"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13239870/worklog/261424",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4593: ARROW-5625: [R] convert Array of struct type to data frame columns\nURL: https://github.com/apache/arrow/pull/4593#discussion_r294345321\n \n \n\n ##########\n File path: r/src/array__to_vector.cpp\n ##########\n @@ -345,6 +345,64 @@ class Converter_Dictionary : public Converter {\n   }\n };\n \n+class Converter_Struct : public Converter {\n+ public:\n+  explicit Converter_Struct(const ArrayVector& arrays) : Converter(arrays), converters() {\n+    auto first_array =\n+        internal::checked_cast<arrow::StructArray*>(Converter::arrays_[0].get());\n+    int nf = first_array->num_fields();\n+    for (int i = 0; i < nf; i++) {\n+      converters.push_back(Converter::Make({first_array->field(i)}));\n+    }\n+  }\n+\n+  SEXP Allocate(R_xlen_t n) const {\n+    // allocate a data frame column to host each array\n+    auto first_array =\n+        internal::checked_cast<arrow::StructArray*>(Converter::arrays_[0].get());\n+    auto type = first_array->struct_type();\n+    int nf = first_array->num_fields();\n+    Rcpp::List out(nf);\n+    Rcpp::CharacterVector colnames(nf);\n+    for (int i = 0; i < nf; i++) {\n+      out[i] = converters[i]->Allocate(n);\n+      colnames[i] = type->child(i)->name();\n+    }\n+    IntegerVector rn(2);\n+    rn[0] = NA_INTEGER;\n+    rn[1] = -n;\n+    Rf_setAttrib(out, symbols::row_names, rn);\n+    Rf_setAttrib(out, R_NamesSymbol, colnames);\n+    Rf_setAttrib(out, R_ClassSymbol, Rf_mkString(\"data.frame\"));\n+    return out;\n+  }\n+\n+  Status Ingest_all_nulls(SEXP data, R_xlen_t start, R_xlen_t n) const {\n+    int nf = converters.size();\n+    for (int i = 0; i < nf; i++) {\n+      STOP_IF_NOT_OK(converters[i]->Ingest_all_nulls(VECTOR_ELT(data, i), start, n));\n+    }\n+    return Status::OK();\n+  }\n+\n+  Status Ingest_some_nulls(SEXP data, const std::shared_ptr<arrow::Array>& array,\n+                           R_xlen_t start, R_xlen_t n) const {\n+    auto struct_array = internal::checked_cast<arrow::StructArray*>(array.get());\n+    int nf = converters.size();\n+    ArrayVector arrays(nf);\n+    STOP_IF_NOT_OK(struct_array->Flatten(default_memory_pool(), &arrays));\n \n Review comment:\n   \ud83e\udd14 getting this: \r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   library(tibble)\r\n   \r\n   tf <- tempfile()\r\n   writeLines('\r\n       { \"nuf\": {} }\r\n       { \"nuf\": null }\r\n       { \"nuf\": { \"ps\": 78.0, \"hello\": \"hi\" } }\r\n       { \"nuf\": { \"ps\": 90.0, \"hello\": \"bonjour\" } }\r\n       { \"nuf\": { \"hello\": \"ciao\" } }\r\n       { \"nuf\": { \"ps\": 19 } }\r\n     ', tf)\r\n   tab <- read_json_arrow(tf, as_tibble = FALSE)\r\n   as_tibble(tab)\r\n   #> # A tibble: 6 x 1\r\n   #>   nuf$ps $hello \r\n   #>    <dbl> <chr>  \r\n   #> 1     NA <NA>   \r\n   #> 2     NA <NA>   \r\n   #> 3     78 hi     \r\n   #> 4     90 bonjour\r\n   #> 5     NA ciao   \r\n   #> 6     19 <NA>\r\n   \r\n   struct_array <- tab$column(0)$data()$chunk(0)\r\n   struct_array$IsNull(0)\r\n   #> [1] FALSE\r\n   struct_array$IsNull(1)\r\n   #> [1] TRUE\r\n   struct_array$IsNull(2)\r\n   #> [1] FALSE\r\n   struct_array$IsNull(3)\r\n   #> [1] FALSE\r\n   struct_array$IsNull(4)\r\n   #> [1] FALSE\r\n   struct_array$IsNull(5)\r\n   #> [1] FALSE\r\n   ```\r\n   \r\n   so only `{ \"nuf\": null }` makes the item a null, each item or both can be independently null without the struct being null. So maybe there's no need to `Flatten()` and I could just use `->field(i)` in the loop as it used to be\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T15:06:35.929+0000",
                    "updated": "2019-06-17T15:06:35.929+0000",
                    "started": "2019-06-17T15:06:35.928+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261424",
                    "issueId": "13239870"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13239870/worklog/261431",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4593: ARROW-5625: [R] convert Array of struct type to data frame columns\nURL: https://github.com/apache/arrow/pull/4593#discussion_r294347389\n \n \n\n ##########\n File path: r/src/array__to_vector.cpp\n ##########\n @@ -345,6 +345,64 @@ class Converter_Dictionary : public Converter {\n   }\n };\n \n+class Converter_Struct : public Converter {\n+ public:\n+  explicit Converter_Struct(const ArrayVector& arrays) : Converter(arrays), converters() {\n+    auto first_array =\n+        internal::checked_cast<arrow::StructArray*>(Converter::arrays_[0].get());\n+    int nf = first_array->num_fields();\n+    for (int i = 0; i < nf; i++) {\n+      converters.push_back(Converter::Make({first_array->field(i)}));\n+    }\n+  }\n+\n+  SEXP Allocate(R_xlen_t n) const {\n+    // allocate a data frame column to host each array\n+    auto first_array =\n+        internal::checked_cast<arrow::StructArray*>(Converter::arrays_[0].get());\n+    auto type = first_array->struct_type();\n+    int nf = first_array->num_fields();\n+    Rcpp::List out(nf);\n+    Rcpp::CharacterVector colnames(nf);\n+    for (int i = 0; i < nf; i++) {\n+      out[i] = converters[i]->Allocate(n);\n+      colnames[i] = type->child(i)->name();\n+    }\n+    IntegerVector rn(2);\n+    rn[0] = NA_INTEGER;\n+    rn[1] = -n;\n+    Rf_setAttrib(out, symbols::row_names, rn);\n+    Rf_setAttrib(out, R_NamesSymbol, colnames);\n+    Rf_setAttrib(out, R_ClassSymbol, Rf_mkString(\"data.frame\"));\n+    return out;\n+  }\n+\n+  Status Ingest_all_nulls(SEXP data, R_xlen_t start, R_xlen_t n) const {\n+    int nf = converters.size();\n+    for (int i = 0; i < nf; i++) {\n+      STOP_IF_NOT_OK(converters[i]->Ingest_all_nulls(VECTOR_ELT(data, i), start, n));\n+    }\n+    return Status::OK();\n+  }\n+\n+  Status Ingest_some_nulls(SEXP data, const std::shared_ptr<arrow::Array>& array,\n+                           R_xlen_t start, R_xlen_t n) const {\n+    auto struct_array = internal::checked_cast<arrow::StructArray*>(array.get());\n+    int nf = converters.size();\n+    ArrayVector arrays(nf);\n+    STOP_IF_NOT_OK(struct_array->Flatten(default_memory_pool(), &arrays));\n \n Review comment:\n   Don't forget that the array can be produced by an external program, not just JSON.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T15:10:11.407+0000",
                    "updated": "2019-06-17T15:10:11.407+0000",
                    "started": "2019-06-17T15:10:11.406+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261431",
                    "issueId": "13239870"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13239870/worklog/261539",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4593: ARROW-5625: [R] convert Array of struct type to data frame columns\nURL: https://github.com/apache/arrow/pull/4593#issuecomment-502766501\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4593?src=pr&el=h1) Report\n   > Merging [#4593](https://codecov.io/gh/apache/arrow/pull/4593?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/9425831dfaf854b5f6e26af1b23afe60f883af74?src=pr&el=desc) will **decrease** coverage by `12.76%`.\n   > The diff coverage is `92.47%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4593/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4593?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master   #4593       +/-   ##\n   ==========================================\n   - Coverage   88.57%   75.8%   -12.77%     \n   ==========================================\n     Files         860      56      -804     \n     Lines      108022    3278   -104744     \n     Branches     1253       0     -1253     \n   ==========================================\n   - Hits        95678    2485    -93193     \n   + Misses      12065     793    -11272     \n   + Partials      279       0      -279\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4593?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [r/src/arrow\\_types.h](https://codecov.io/gh/apache/arrow/pull/4593/diff?src=pr&el=tree#diff-ci9zcmMvYXJyb3dfdHlwZXMuaA==) | `96% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [r/src/datatype.cpp](https://codecov.io/gh/apache/arrow/pull/4593/diff?src=pr&el=tree#diff-ci9zcmMvZGF0YXR5cGUuY3Bw) | `74.48% <100%> (+1.08%)` | :arrow_up: |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4593/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | `54.54% <100%> (+4.54%)` | :arrow_up: |\n   | [r/src/array.cpp](https://codecov.io/gh/apache/arrow/pull/4593/diff?src=pr&el=tree#diff-ci9zcmMvYXJyYXkuY3Bw) | `79.16% <100%> (+4.8%)` | :arrow_up: |\n   | [r/R/ChunkedArray.R](https://codecov.io/gh/apache/arrow/pull/4593/diff?src=pr&el=tree#diff-ci9SL0NodW5rZWRBcnJheS5S) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [r/R/arrowExports.R](https://codecov.io/gh/apache/arrow/pull/4593/diff?src=pr&el=tree#diff-ci9SL2Fycm93RXhwb3J0cy5S) | `73.73% <100%> (+0.61%)` | :arrow_up: |\n   | [r/R/Struct.R](https://codecov.io/gh/apache/arrow/pull/4593/diff?src=pr&el=tree#diff-ci9SL1N0cnVjdC5S) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [r/src/arrowExports.cpp](https://codecov.io/gh/apache/arrow/pull/4593/diff?src=pr&el=tree#diff-ci9zcmMvYXJyb3dFeHBvcnRzLmNwcA==) | `73.9% <100%> (+0.67%)` | :arrow_up: |\n   | [r/R/array.R](https://codecov.io/gh/apache/arrow/pull/4593/diff?src=pr&el=tree#diff-ci9SL2FycmF5LlI=) | `75% <60%> (+3%)` | :arrow_up: |\n   | [r/src/array\\_\\_to\\_vector.cpp](https://codecov.io/gh/apache/arrow/pull/4593/diff?src=pr&el=tree#diff-ci9zcmMvYXJyYXlfX3RvX3ZlY3Rvci5jcHA=) | `76.63% <86.48%> (+1.16%)` | :arrow_up: |\n   | ... and [804 more](https://codecov.io/gh/apache/arrow/pull/4593/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4593?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4593?src=pr&el=footer). Last update [9425831...b1f087e](https://codecov.io/gh/apache/arrow/pull/4593?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T16:58:01.205+0000",
                    "updated": "2019-06-17T16:58:01.205+0000",
                    "started": "2019-06-17T16:58:01.204+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261539",
                    "issueId": "13239870"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13239870/worklog/261787",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4593: ARROW-5625: [R] convert Array of struct type to data frame columns\nURL: https://github.com/apache/arrow/pull/4593#discussion_r294507608\n \n \n\n ##########\n File path: r/src/array__to_vector.cpp\n ##########\n @@ -345,6 +345,64 @@ class Converter_Dictionary : public Converter {\n   }\n };\n \n+class Converter_Struct : public Converter {\n+ public:\n+  explicit Converter_Struct(const ArrayVector& arrays) : Converter(arrays), converters() {\n+    auto first_array =\n+        internal::checked_cast<arrow::StructArray*>(Converter::arrays_[0].get());\n+    int nf = first_array->num_fields();\n+    for (int i = 0; i < nf; i++) {\n+      converters.push_back(Converter::Make({first_array->field(i)}));\n+    }\n+  }\n+\n+  SEXP Allocate(R_xlen_t n) const {\n+    // allocate a data frame column to host each array\n+    auto first_array =\n+        internal::checked_cast<arrow::StructArray*>(Converter::arrays_[0].get());\n+    auto type = first_array->struct_type();\n+    int nf = first_array->num_fields();\n+    Rcpp::List out(nf);\n+    Rcpp::CharacterVector colnames(nf);\n+    for (int i = 0; i < nf; i++) {\n+      out[i] = converters[i]->Allocate(n);\n+      colnames[i] = type->child(i)->name();\n+    }\n+    IntegerVector rn(2);\n+    rn[0] = NA_INTEGER;\n+    rn[1] = -n;\n+    Rf_setAttrib(out, symbols::row_names, rn);\n+    Rf_setAttrib(out, R_NamesSymbol, colnames);\n+    Rf_setAttrib(out, R_ClassSymbol, Rf_mkString(\"data.frame\"));\n+    return out;\n+  }\n+\n+  Status Ingest_all_nulls(SEXP data, R_xlen_t start, R_xlen_t n) const {\n+    int nf = converters.size();\n+    for (int i = 0; i < nf; i++) {\n+      STOP_IF_NOT_OK(converters[i]->Ingest_all_nulls(VECTOR_ELT(data, i), start, n));\n+    }\n+    return Status::OK();\n+  }\n+\n+  Status Ingest_some_nulls(SEXP data, const std::shared_ptr<arrow::Array>& array,\n+                           R_xlen_t start, R_xlen_t n) const {\n+    auto struct_array = internal::checked_cast<arrow::StructArray*>(array.get());\n+    int nf = converters.size();\n+    ArrayVector arrays(nf);\n+    STOP_IF_NOT_OK(struct_array->Flatten(default_memory_pool(), &arrays));\n \n Review comment:\n   sure, but right now that's my only reproducible way to get one\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T20:38:59.721+0000",
                    "updated": "2019-06-17T20:38:59.721+0000",
                    "started": "2019-06-17T20:38:59.720+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261787",
                    "issueId": "13239870"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13239870/worklog/262125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4593: ARROW-5625: [R] convert Array of struct type to data frame columns\nURL: https://github.com/apache/arrow/pull/4593\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-18T07:59:44.215+0000",
                    "updated": "2019-06-18T07:59:44.215+0000",
                    "started": "2019-06-18T07:59:44.215+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "262125",
                    "issueId": "13239870"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 7800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@34b7eee0[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6853cf5d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72cdd9c1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@412c9e2[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16d98f23[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@58d6dc07[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4449150d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@568699bf[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c7cb4db[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@622477b7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ec9f783[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@c60c084[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7800,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jun 18 07:59:38 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-06-18T07:59:38.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5625/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-06-17T07:17:25.000+0000",
        "updated": "2019-06-18T07:59:44.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] convert Array of struct type to data frame columns",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13239870/comment/16866334",
                    "id": "16866334",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
                        "name": "romainfrancois",
                        "key": "romainfrancois",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
                        },
                        "displayName": "Romain Francois",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4593\n[https://github.com/apache/arrow/pull/4593]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
                        "name": "romainfrancois",
                        "key": "romainfrancois",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
                        },
                        "displayName": "Romain Francois",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-06-18T07:59:38.568+0000",
                    "updated": "2019-06-18T07:59:38.568+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z03t34:",
        "customfield_12314139": null
    }
}