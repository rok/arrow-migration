{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13210469",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469",
    "key": "ARROW-4294",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "features",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344316",
                "id": "12344316",
                "name": "0.11.1",
                "archived": false,
                "released": true,
                "releaseDate": "2018-10-23"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=anuragkh",
            "name": "anuragkh",
            "key": "anuragkh",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34048",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34048",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34048",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34048"
            },
            "displayName": "Anurag Khandelwal",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332956",
                "id": "12332956",
                "name": "C++ - Plasma"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=anuragkh",
            "name": "anuragkh",
            "key": "anuragkh",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34048",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34048",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34048",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34048"
            },
            "displayName": "Anurag Khandelwal",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=anuragkh",
            "name": "anuragkh",
            "key": "anuragkh",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34048",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34048",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34048",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34048"
            },
            "displayName": "Anurag Khandelwal",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 30000,
            "total": 30000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 30000,
            "total": 30000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4294/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 50,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187298",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anuragkh commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432\n \n \n   https://issues.apache.org/jira/browse/ARROW-4294\r\n   \r\n   Currently, when Plasma needs storage space for additional objects, it evicts objects by deleting them from the Plasma store. This is a problem when it isn't possible to reconstruct the object or reconstructing it is expensive. This patch adds support for a pluggable external store that Plasma can evict objects to when it runs out of memory. \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T02:29:22.235+0000",
                    "updated": "2019-01-19T02:29:22.235+0000",
                    "started": "2019-01-19T02:29:22.235+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187298",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187372",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#issuecomment-455795524\n \n \n   rebased\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T16:45:05.523+0000",
                    "updated": "2019-01-19T16:45:05.523+0000",
                    "started": "2019-01-19T16:45:05.522+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187372",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187377",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249251007\n \n \n\n ##########\n File path: cpp/src/plasma/CMakeLists.txt\n ##########\n @@ -126,10 +126,24 @@ if (\"${COMPILER_FAMILY}\" STREQUAL \"gcc\")\n     \" -Wno-conversion\")\n endif()\n \n+list(APPEND PLASMA_EXTERNAL_STORE_SOURCES \"external_store_worker.cc\" \"external_store.cc\" \"hash_table_store.cc\")\n+\n+if (PLASMA_EXTRA_EXTERNAL_STORE_SOURCES)\n+  list(APPEND PLASMA_EXTERNAL_STORE_SOURCES ${PLASMA_EXTRA_EXTERNAL_STORE_SOURCES})\n+endif ()\n+\n+if (PLASMA_EXTERNAL_STORE_LIBDIRS)\n+  link_directories(${PLASMA_EXTERNAL_STORE_LIBDIRS})\n+endif ()\n+\n+if (NOT APPLE AND UNIX)\n \n Review comment:\n   Please don't set `--no-as-needed` globally. Why do you need this?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T17:18:56.424+0000",
                    "updated": "2019-01-19T17:18:56.424+0000",
                    "started": "2019-01-19T17:18:56.423+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187377",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187378",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249251107\n \n \n\n ##########\n File path: cpp/src/plasma/external_store.cc\n ##########\n @@ -0,0 +1,67 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <iostream>\n+#include <sstream>\n+\n+#include \"external_store.h\"\n+\n+namespace plasma {\n+\n+std::shared_ptr<std::map<std::string, std::shared_ptr<ExternalStore>>> ExternalStores::external_stores_ = nullptr;\n+\n+std::string ExternalStores::ExtractStoreName(const std::string& endpoint) {\n+  size_t off = endpoint.find_first_of(':');\n+  if (off == std::string::npos) {\n+    throw std::invalid_argument(\"Malformed endpoint \" + endpoint);\n+  }\n+  return endpoint.substr(0, off);\n+}\n+\n+void ExternalStores::RegisterStore(const std::string& store_name,\n+                                   std::shared_ptr<ExternalStore> store) {\n+  std::cerr << \"Registering external store \\\"\" << store_name << \"\\\"\" << std::endl;\n+  Stores()->insert({ store_name, store });\n \n Review comment:\n   Without the `shared_pointer` you can access `external_stores_` directly.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T17:18:56.453+0000",
                    "updated": "2019-01-19T17:18:56.453+0000",
                    "started": "2019-01-19T17:18:56.452+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187378",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187379",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249251067\n \n \n\n ##########\n File path: cpp/src/plasma/CMakeLists.txt\n ##########\n @@ -126,10 +126,24 @@ if (\"${COMPILER_FAMILY}\" STREQUAL \"gcc\")\n     \" -Wno-conversion\")\n endif()\n \n+list(APPEND PLASMA_EXTERNAL_STORE_SOURCES \"external_store_worker.cc\" \"external_store.cc\" \"hash_table_store.cc\")\n+\n+if (PLASMA_EXTRA_EXTERNAL_STORE_SOURCES)\n \n Review comment:\n   This seems in such a fashion that you would need to checkout Arrow sources and place your custom source files in it to extend the stores. This won't be a viable way to make this freely extendables.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T17:18:56.484+0000",
                    "updated": "2019-01-19T17:18:56.484+0000",
                    "started": "2019-01-19T17:18:56.483+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187379",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249251127\n \n \n\n ##########\n File path: cpp/src/plasma/external_store.h\n ##########\n @@ -0,0 +1,129 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef EXTERNAL_STORE_H\n+#define EXTERNAL_STORE_H\n+\n+#include <map>\n+#include \"plasma/client.h\"\n+\n+namespace plasma {\n+\n+// ==== The external store ====\n+//\n+// This file contains declaration for all functions that need to be implemented\n+// for an external storage service so that objects evicted from Plasma store\n+// can be written to it.\n+\n+class ExternalStoreHandle {\n+ public:\n+  ExternalStoreHandle() = default;\n+\n+  virtual ~ExternalStoreHandle() = default;\n+\n+  /// This method will be called whenever an object in the Plasma store needs\n+  /// to be evicted to the external store.\n+  ///\n+  /// \\param num_objects The number of objects to put.\n+  /// \\param ids The IDs of the objects to put.\n+  /// \\param data The object data to put.\n+  /// \\param object_metadata The object metadata to put.\n+  /// \\return The return status.\n+  virtual Status Put(size_t num_objects, const ObjectID *ids, const std::string *data) = 0;\n+\n+  /// This method will be called whenever an evicted object in the External\n+  /// store store needs to be accessed.\n+  ///\n+  /// \\param num_objects The number of objects to get.\n+  /// \\param ids The IDs of the objects to get.\n+  /// \\param[out] data The object data.\n+  /// \\param[out] object_metadata The object metadata.\n+  /// \\return The return status.\n+  virtual Status Get(size_t num_objects, const ObjectID *ids, std::string *data) = 0;\n+\n+};\n+\n+class ExternalStore {\n+ public:\n+  /// Default constructor\n+  ExternalStore() = default;\n+\n+  /// Virtual destructor\n+  virtual ~ExternalStore() = default;\n+\n+  /// Connect to the local plasma store. Return the resulting connection.\n+  ///\n+  /// \\param endpoint The name of the endpoint to connect to the external\n+  ///        storage service. While the formatting of the endpoint name is\n+  ///        specific to the implementation of the external store, it always\n+  ///        starts with {store-name}://, where {store-name} is the name of the\n+  ///        external store.\n+  ///\n+  /// \\return The return status.\n+  virtual std::shared_ptr<ExternalStoreHandle> Connect(const std::string &endpoint) = 0;\n+};\n+\n+class ExternalStores {\n+ public:\n+  /// Extracts the external store name from the external store endpoint\n+  ///\n+  /// \\param endpoint The endpoint for the external store\n+  /// \\return The external store name\n+  static std::string ExtractStoreName(const std::string &endpoint);\n+\n+  /// Register a new external store.\n+  ///\n+  /// \\param store_name Name of the new external store.\n+  /// \\param store The new external store object.\n+  static void RegisterStore(const std::string &store_name,\n+                            std::shared_ptr<ExternalStore> store);\n+\n+  /// Register a new external store.\n+  ///\n+  /// \\param store_name Name of the new external store.\n+  static void DeregisterStore(const std::string &store_name);\n+\n+  /// Obtain the external store given its name.\n+  ///\n+  /// \\param store_name Name of the external store.\n+  /// \\return The external store object.\n+  static std::shared_ptr<ExternalStore> GetStore(const std::string &store_name);\n+\n+ private:\n+  /// Obtain the mapping between external store names and external store instances\n+  /// \\return The mapping between external store names and external store instances\n+  static std::shared_ptr<std::map<std::string, std::shared_ptr<ExternalStore>>> Stores();\n \n Review comment:\n   Don't declare these variables here but declare them privately in the `.cc`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T17:18:56.507+0000",
                    "updated": "2019-01-19T17:18:56.507+0000",
                    "started": "2019-01-19T17:18:56.506+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187380",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187381",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249251093\n \n \n\n ##########\n File path: cpp/src/plasma/external_store.cc\n ##########\n @@ -0,0 +1,67 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <iostream>\n+#include <sstream>\n+\n+#include \"external_store.h\"\n+\n+namespace plasma {\n+\n+std::shared_ptr<std::map<std::string, std::shared_ptr<ExternalStore>>> ExternalStores::external_stores_ = nullptr;\n \n Review comment:\n   Make this a `std::unordered_map` and also remove the `shared_ptr`. Then this map will be initialised on startup. There is no need for using a pointer indirection here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T17:18:56.522+0000",
                    "updated": "2019-01-19T17:18:56.522+0000",
                    "started": "2019-01-19T17:18:56.521+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187381",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187382",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249251184\n \n \n\n ##########\n File path: cpp/src/plasma/external_store_worker.h\n ##########\n @@ -0,0 +1,158 @@\n+#ifndef EXTERNAL_STORE_WORKER_H\n+#define EXTERNAL_STORE_WORKER_H\n+\n+#include <unistd.h>\n+\n+#include <condition_variable>\n+#include <future>\n+#include <iostream>\n+#include <mutex>\n+#include <queue>\n+#include <thread>\n+\n+#include \"plasma/common.h\"\n+#include \"plasma/external_store.h\"\n+\n+namespace plasma {\n+\n+// ==== The external store worker ====\n+//\n+// The worker maintains a thread-pool internally for servicing Get requests.\n \n Review comment:\n   Arrow already has a thread pool, why not use it?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T17:18:56.540+0000",
                    "updated": "2019-01-19T17:18:56.540+0000",
                    "started": "2019-01-19T17:18:56.540+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187382",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187405",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anuragkh commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249254532\n \n \n\n ##########\n File path: cpp/src/plasma/CMakeLists.txt\n ##########\n @@ -126,10 +126,24 @@ if (\"${COMPILER_FAMILY}\" STREQUAL \"gcc\")\n     \" -Wno-conversion\")\n endif()\n \n+list(APPEND PLASMA_EXTERNAL_STORE_SOURCES \"external_store_worker.cc\" \"external_store.cc\" \"hash_table_store.cc\")\n+\n+if (PLASMA_EXTRA_EXTERNAL_STORE_SOURCES)\n+  list(APPEND PLASMA_EXTERNAL_STORE_SOURCES ${PLASMA_EXTRA_EXTERNAL_STORE_SOURCES})\n+endif ()\n+\n+if (PLASMA_EXTERNAL_STORE_LIBDIRS)\n+  link_directories(${PLASMA_EXTERNAL_STORE_LIBDIRS})\n+endif ()\n+\n+if (NOT APPLE AND UNIX)\n \n Review comment:\n   You're right, this is not necessary, I'll remove it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T19:16:49.196+0000",
                    "updated": "2019-01-19T19:16:49.196+0000",
                    "started": "2019-01-19T19:16:49.196+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187405",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187407",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anuragkh commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249254587\n \n \n\n ##########\n File path: cpp/src/plasma/CMakeLists.txt\n ##########\n @@ -126,10 +126,24 @@ if (\"${COMPILER_FAMILY}\" STREQUAL \"gcc\")\n     \" -Wno-conversion\")\n endif()\n \n+list(APPEND PLASMA_EXTERNAL_STORE_SOURCES \"external_store_worker.cc\" \"external_store.cc\" \"hash_table_store.cc\")\n+\n+if (PLASMA_EXTRA_EXTERNAL_STORE_SOURCES)\n \n Review comment:\n   You can specify external sources with -DPLASMA_EXTERNAL_STORE_SOURCES in arrow's cmake build, and don't have to place them in Arrow sources. I am open to suggestions if there is a better alternative.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T19:18:36.683+0000",
                    "updated": "2019-01-19T19:18:36.683+0000",
                    "started": "2019-01-19T19:18:36.682+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187407",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187409",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anuragkh commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249255526\n \n \n\n ##########\n File path: cpp/src/plasma/external_store_worker.h\n ##########\n @@ -0,0 +1,158 @@\n+#ifndef EXTERNAL_STORE_WORKER_H\n+#define EXTERNAL_STORE_WORKER_H\n+\n+#include <unistd.h>\n+\n+#include <condition_variable>\n+#include <future>\n+#include <iostream>\n+#include <mutex>\n+#include <queue>\n+#include <thread>\n+\n+#include \"plasma/common.h\"\n+#include \"plasma/external_store.h\"\n+\n+namespace plasma {\n+\n+// ==== The external store worker ====\n+//\n+// The worker maintains a thread-pool internally for servicing Get requests.\n \n Review comment:\n   I'm using my thread-pool in some ways that the Arrow thread-pool doesn't support:\r\n   1. I'm maintaining a queue of object IDs to fetch, and fetching multiple object IDs per thread to improve performance via batching.\r\n   2. I'm using the thread-pool to detect if too many Get() requests have been enqueued, and send an error message back to the caller so that the calling thread can try a synchronous Get() instead.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T19:51:06.885+0000",
                    "updated": "2019-01-19T19:51:06.885+0000",
                    "started": "2019-01-19T19:51:06.882+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187409",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187428",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249259141\n \n \n\n ##########\n File path: cpp/src/plasma/external_store.cc\n ##########\n @@ -0,0 +1,64 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <iostream>\n+#include <sstream>\n+\n+#include \"external_store.h\"\n+\n+namespace plasma {\n+\n+std::string ExternalStores::ExtractStoreName(const std::string& endpoint) {\n+  size_t off = endpoint.find_first_of(':');\n+  if (off == std::string::npos) {\n+    throw std::invalid_argument(\"Malformed endpoint \" + endpoint);\n \n Review comment:\n   We use arrow::Status to indicate failures, in the future there might be an extensible API for this (see https://github.com/apache/arrow/pull/3199/files), but for now I'd suggest Status::Invalid here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T22:14:32.520+0000",
                    "updated": "2019-01-19T22:14:32.520+0000",
                    "started": "2019-01-19T22:14:32.519+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187428",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187429",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249259146\n \n \n\n ##########\n File path: cpp/src/plasma/external_store.cc\n ##########\n @@ -0,0 +1,64 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <iostream>\n+#include <sstream>\n+\n+#include \"external_store.h\"\n+\n+namespace plasma {\n+\n+std::string ExternalStores::ExtractStoreName(const std::string& endpoint) {\n+  size_t off = endpoint.find_first_of(':');\n+  if (off == std::string::npos) {\n+    throw std::invalid_argument(\"Malformed endpoint \" + endpoint);\n+  }\n+  return endpoint.substr(0, off);\n+}\n+\n+void ExternalStores::RegisterStore(const std::string& store_name,\n+                                   std::shared_ptr<ExternalStore> store) {\n+  std::cerr << \"Registering external store \\\"\" << store_name << \"\\\"\" << std::endl;\n \n Review comment:\n   Let's replace this with ARROW_LOG(INFO)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T22:14:47.096+0000",
                    "updated": "2019-01-19T22:14:47.096+0000",
                    "started": "2019-01-19T22:14:47.096+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187429",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187430",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249259152\n \n \n\n ##########\n File path: cpp/src/plasma/external_store.cc\n ##########\n @@ -0,0 +1,64 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <iostream>\n+#include <sstream>\n+\n+#include \"external_store.h\"\n+\n+namespace plasma {\n+\n+std::string ExternalStores::ExtractStoreName(const std::string& endpoint) {\n+  size_t off = endpoint.find_first_of(':');\n+  if (off == std::string::npos) {\n+    throw std::invalid_argument(\"Malformed endpoint \" + endpoint);\n+  }\n+  return endpoint.substr(0, off);\n+}\n+\n+void ExternalStores::RegisterStore(const std::string& store_name,\n+                                   std::shared_ptr<ExternalStore> store) {\n+  std::cerr << \"Registering external store \\\"\" << store_name << \"\\\"\" << std::endl;\n+  Stores().insert({ store_name, store });\n+}\n+\n+void ExternalStores::DeregisterStore(const std::string &store_name) {\n+  std::cerr << \"Deregistering external store \\\"\" << store_name << \"\\\"\" << std::endl;\n \n Review comment:\n   ARROW_LOG(INFO)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T22:15:06.838+0000",
                    "updated": "2019-01-19T22:15:06.838+0000",
                    "started": "2019-01-19T22:15:06.837+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187430",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187431",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249259168\n \n \n\n ##########\n File path: cpp/src/plasma/external_store.cc\n ##########\n @@ -0,0 +1,64 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <iostream>\n+#include <sstream>\n+\n+#include \"external_store.h\"\n+\n+namespace plasma {\n+\n+std::string ExternalStores::ExtractStoreName(const std::string& endpoint) {\n+  size_t off = endpoint.find_first_of(':');\n+  if (off == std::string::npos) {\n+    throw std::invalid_argument(\"Malformed endpoint \" + endpoint);\n+  }\n+  return endpoint.substr(0, off);\n+}\n+\n+void ExternalStores::RegisterStore(const std::string& store_name,\n+                                   std::shared_ptr<ExternalStore> store) {\n+  std::cerr << \"Registering external store \\\"\" << store_name << \"\\\"\" << std::endl;\n+  Stores().insert({ store_name, store });\n+}\n+\n+void ExternalStores::DeregisterStore(const std::string &store_name) {\n+  std::cerr << \"Deregistering external store \\\"\" << store_name << \"\\\"\" << std::endl;\n+  auto it = Stores().find(store_name);\n+  if (it == Stores().end()) {\n+    return;\n+  }\n+  std::shared_ptr<ExternalStore> store = it->second;\n \n Review comment:\n   This line should be removed I think\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T22:15:54.125+0000",
                    "updated": "2019-01-19T22:15:54.125+0000",
                    "started": "2019-01-19T22:15:54.125+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187431",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187433",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249259292\n \n \n\n ##########\n File path: python/pyarrow/tests/test_plasma.py\n ##########\n @@ -918,6 +919,63 @@ def client_get_multiple(plasma_store_name):\n                 break\n \n \n+@pytest.mark.plasma\n+class TestPlasmaClient(object):\n+\n+    def setup_method(self, test_method):\n+        import pyarrow.plasma as plasma\n+        # Start Plasma store.\n+        self.plasma_store_ctx = plasma.start_plasma_store(\n+            plasma_store_memory=104857600,\n \n Review comment:\n   100 * 1024 * 1024 would be clearer here to understand the below code\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T22:21:26.535+0000",
                    "updated": "2019-01-19T22:21:26.535+0000",
                    "started": "2019-01-19T22:21:26.535+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187433",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187434",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249259292\n \n \n\n ##########\n File path: python/pyarrow/tests/test_plasma.py\n ##########\n @@ -918,6 +919,63 @@ def client_get_multiple(plasma_store_name):\n                 break\n \n \n+@pytest.mark.plasma\n+class TestPlasmaClient(object):\n+\n+    def setup_method(self, test_method):\n+        import pyarrow.plasma as plasma\n+        # Start Plasma store.\n+        self.plasma_store_ctx = plasma.start_plasma_store(\n+            plasma_store_memory=104857600,\n \n Review comment:\n   100 * 1024 * 1024 would be clearer here to understand the code below\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T22:21:39.358+0000",
                    "updated": "2019-01-19T22:21:39.358+0000",
                    "started": "2019-01-19T22:21:39.358+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187434",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187435",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249259526\n \n \n\n ##########\n File path: python/pyarrow/_plasma.pyx\n ##########\n @@ -373,6 +373,7 @@ cdef class PlasmaClient:\n             The number of milliseconds that the get call should block before\n             timing out and returning. Pass -1 if the call should block and 0\n             if the call should return immediately.\n+        with_meta : bool\n \n Review comment:\n   This is not used any more, right?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T22:33:17.871+0000",
                    "updated": "2019-01-19T22:33:17.871+0000",
                    "started": "2019-01-19T22:33:17.870+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187435",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187436",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anuragkh commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249259774\n \n \n\n ##########\n File path: cpp/src/plasma/external_store.cc\n ##########\n @@ -0,0 +1,64 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <iostream>\n+#include <sstream>\n+\n+#include \"external_store.h\"\n+\n+namespace plasma {\n+\n+std::string ExternalStores::ExtractStoreName(const std::string& endpoint) {\n+  size_t off = endpoint.find_first_of(':');\n+  if (off == std::string::npos) {\n+    throw std::invalid_argument(\"Malformed endpoint \" + endpoint);\n+  }\n+  return endpoint.substr(0, off);\n+}\n+\n+void ExternalStores::RegisterStore(const std::string& store_name,\n+                                   std::shared_ptr<ExternalStore> store) {\n+  std::cerr << \"Registering external store \\\"\" << store_name << \"\\\"\" << std::endl;\n \n Review comment:\n   This code is called during static initialization, when ARROW_LOG isn\u2019t initialized yet. I can remove the log message altogether.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T22:46:12.328+0000",
                    "updated": "2019-01-19T22:46:12.328+0000",
                    "started": "2019-01-19T22:46:12.328+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187436",
                    "issueId": "13210469"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/worklog/187439",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on pull request #3432: ARROW-4294: [C++] [Plasma] Add support for evicting Plasma objects to external store.\nURL: https://github.com/apache/arrow/pull/3432#discussion_r249260090\n \n \n\n ##########\n File path: cpp/src/plasma/external_store.h\n ##########\n @@ -0,0 +1,124 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef EXTERNAL_STORE_H\n+#define EXTERNAL_STORE_H\n+\n+#include <map>\n+#include \"plasma/client.h\"\n+\n+namespace plasma {\n+\n+// ==== The external store ====\n+//\n+// This file contains declaration for all functions that need to be implemented\n+// for an external storage service so that objects evicted from Plasma store\n+// can be written to it.\n+\n+class ExternalStoreHandle {\n+ public:\n+  ExternalStoreHandle() = default;\n+\n+  virtual ~ExternalStoreHandle() = default;\n+\n+  /// This method will be called whenever an object in the Plasma store needs\n+  /// to be evicted to the external store.\n+  ///\n+  /// \\param num_objects The number of objects to put.\n+  /// \\param ids The IDs of the objects to put.\n+  /// \\param data The object data to put.\n+  /// \\return The return status.\n+  virtual Status Put(size_t num_objects, const ObjectID *ids, const std::string *data) = 0;\n \n Review comment:\n   This part was a little confusing to me. Why isn't the signature taking a const std::vector<ObjectID>& and a const std::vector<std::string>&; then I saw it is used to put chunks and I guess we want to avoid copies of the data here.\r\n   \r\n   I'd consider renaming it/making the signature clearer. I'd also consider using arrow::Buffer for the data, since that can avoid copies and can also be conveniently sliced into, see https://github.com/apache/arrow/blob/master/cpp/src/arrow/buffer.h.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-19T23:01:08.674+0000",
                    "updated": "2019-01-19T23:01:08.674+0000",
                    "started": "2019-01-19T23:01:08.674+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "187439",
                    "issueId": "13210469"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 30000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@79835a7e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6df2f9eb[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4382a58[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7e7fb695[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@274ac136[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1e9b9906[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b341a67[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@587cd48a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@294eedc2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6bdf1244[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1043ca7a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2e25847c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 30000,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Feb 05 02:24:30 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-02-05T02:24:30.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4294/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-01-18T21:04:30.000+0000",
        "updated": "2019-02-05T02:24:47.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently,\u00a0when Plasma needs\u00a0storage space for additional objects, it evicts objects by deleting them from the Plasma store. This is a problem when it isn't possible to reconstruct the object or reconstructing it is expensive. Adding support for a pluggable external\u00a0store that Plasma can evict objects to will address this issue.\u00a0\r\n\r\nMy proposal is described below.\r\n\r\n*Requirements*\r\n * Objects in Plasma should be evicted to a external store\u00a0rather than being removed altogether\r\n * Communication to the external storage service should be through a very thin, shim interface. At the same time, the interface should be general enough to support arbitrary remote services (e.g., S3, DynamoDB, Redis, etc.)\r\n * Should be pluggable (e.g., it should be simple to add in or remove the external storage service for eviction, switch between different remote services, etc.) and easy to implement\r\n\r\n*Assumptions/Non-Requirements*\r\n * The external store\u00a0has practically infinite storage\r\n * The external store's\u00a0write\u00a0operation is idempotent and atomic; this is needed ensure there are no race conditions due to multiple concurrent evictions of the same object.\r\n\r\n*Proposed Implementation*\r\n * Define a ExternalStore interface with a Connect call. The call returns an ExternalStoreHandle, that exposes Put and Get calls. Any external store that needs to be supported has to have this interface implemented.\r\n * In order to read or write data to the external store in a thread-safe manner, one ExternalStoreHandle should be created per-thread. While the ExternalStoreHandle itself is not required to be thread-safe, multiple ExternalStoreHandles across multiple threads should be able to modify the external store in a thread-safe manner. These handles are most likely going to be wrappers around the external store client interfaces.\r\n * Replace the DeleteObjects method in the Plasma Store with an EvictObjects method. If an external store is specified for the Plasma store, the EvictObjects method would mark the object state as PLASMA_EVICTED, write the object data to the external store (via the ExternalStoreHandle) and reclaim the memory associated with the object data/metadata rather than remove the entry from the Object Table altogether. In case there is no valid external store, the eviction path would remain the same (i.e., the object entry is still deleted from the Object Table).\r\n * The Get method in Plasma Store now tries to fetch the object from external store if it is not found locally and there is an external store associated with the Plasma Store. The method tries to offload this to an external worker thread pool with a fire-and-forget model, but may need to do this synchronously if there are too many requests already enqueued.\r\n * The CMake build system can expose a variable, EXTERNAL_STORE_SOURCES, which can be appended to with implementations of the ExternalStore and ExternalStoreHandle interfaces, which will then be compiled into the plasma_store_server executable.\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "8h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 30000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Plasma] Add support for evicting objects to external store",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/comment/16746919",
                    "id": "16746919",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=anuragkh",
                        "name": "anuragkh",
                        "key": "anuragkh",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34048",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34048",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34048",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34048"
                        },
                        "displayName": "Anurag Khandelwal",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cc [~pcmoritz]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=anuragkh",
                        "name": "anuragkh",
                        "key": "anuragkh",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34048",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34048",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34048",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34048"
                        },
                        "displayName": "Anurag Khandelwal",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-01-19T02:44:46.008+0000",
                    "updated": "2019-01-19T02:44:46.008+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210469/comment/16760403",
                    "id": "16760403",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
                        "name": "pcmoritz",
                        "key": "pcmoritz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Philipp Moritz",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 3482\n[https://github.com/apache/arrow/pull/3482]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
                        "name": "pcmoritz",
                        "key": "pcmoritz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Philipp Moritz",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-02-05T02:24:30.477+0000",
                    "updated": "2019-02-05T02:24:30.477+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|yi02yo:",
        "customfield_12314139": null
    }
}