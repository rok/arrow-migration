{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13151261",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261",
    "key": "ARROW-2435",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=liurenjie1024",
            "name": "liurenjie1024",
            "key": "liurenjie1024",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Renjie Liu",
            "active": true,
            "timeZone": "Asia/Chongqing"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=liurenjie1024",
            "name": "liurenjie1024",
            "key": "liurenjie1024",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Renjie Liu",
            "active": true,
            "timeZone": "Asia/Chongqing"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=liurenjie1024",
            "name": "liurenjie1024",
            "key": "liurenjie1024",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Renjie Liu",
            "active": true,
            "timeZone": "Asia/Chongqing"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2435/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5f38ada3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f1d5598[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@44ea8b38[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@51ceb7a8[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@d349f8f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@78639cf3[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@68407b8c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4c17f2db[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@65f6d431[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1965878[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a61cfdd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@19137960[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Apr 21 10:43:02 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-04-15T08:00:34.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2435/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-04-10T02:30:27.000+0000",
        "updated": "2018-04-21T10:43:02.000+0000",
        "timeoriginalestimate": null,
        "description": "Add memory pool abstraction as the c++ api.",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Add memory pool abstraction.",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16431960",
                    "id": "16431960",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "liurenjie1024 opened a new pull request #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875\n \n \n   Current implementation use libc for memory allocation and deallocation. This can't be ported cross platforms. We can add a memory pool abstraction for many use cases, such as:\r\n   \r\n   * Easy migration to other allocation api, such as the api use in rust alloc crate.\r\n   * Logging.\r\n   * Statistics updating.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-10T09:05:17.550+0000",
                    "updated": "2018-04-10T09:05:17.550+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16431970",
                    "id": "16431970",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on a change in pull request #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#discussion_r180347909\n \n \n\n ##########\n File path: rust/src/memory_pool.rs\n ##########\n @@ -0,0 +1,54 @@\n+use libc;\n+use std::sync::Arc;\n+use std::mem;\n+\n+use super::error::ArrowError;\n+use super::error::Result;\n+\n+const ALIGNMENT: usize = 64;\n+\n+pub trait MemoryPool {\n+  fn allocate_aligned(&self, size: usize) -> Result<*mut u8>;\n \n Review comment:\n   This should also get a `Reallocate` function as we have in C++ https://github.com/apache/arrow/blob/6633cc94c84f9ecc516f03175da56361cf4bd67f/cpp/src/arrow/memory_pool.h#L77\r\n   \r\n   When using jemalloc, this was one of the major performance improvements that we could avoid 50% of all reallocations.\r\n   \r\n   For starters, it will be ok to always allocate a new block of memory.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-10T09:14:17.812+0000",
                    "updated": "2018-04-10T09:14:17.812+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16431971",
                    "id": "16431971",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on a change in pull request #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#discussion_r180347430\n \n \n\n ##########\n File path: rust/src/memory_pool.rs\n ##########\n @@ -0,0 +1,54 @@\n+use libc;\n \n Review comment:\n   You need to add an Apache license header as we have in all other files.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-10T09:14:17.915+0000",
                    "updated": "2018-04-10T09:14:17.915+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16432010",
                    "id": "16432010",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "liurenjie1024 commented on a change in pull request #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#discussion_r180362068\n \n \n\n ##########\n File path: rust/src/memory_pool.rs\n ##########\n @@ -0,0 +1,54 @@\n+use libc;\n \n Review comment:\n   Fixed.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-10T10:00:50.953+0000",
                    "updated": "2018-04-10T10:00:50.953+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16432012",
                    "id": "16432012",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "liurenjie1024 commented on a change in pull request #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#discussion_r180362225\n \n \n\n ##########\n File path: rust/src/memory_pool.rs\n ##########\n @@ -0,0 +1,54 @@\n+use libc;\n+use std::sync::Arc;\n+use std::mem;\n+\n+use super::error::ArrowError;\n+use super::error::Result;\n+\n+const ALIGNMENT: usize = 64;\n+\n+pub trait MemoryPool {\n+  fn allocate_aligned(&self, size: usize) -> Result<*mut u8>;\n \n Review comment:\n   Hi, xhochy:\r\n   Thanks for the review and I've added an implementation for that method.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-10T10:01:28.537+0000",
                    "updated": "2018-04-10T10:01:28.537+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16432187",
                    "id": "16432187",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on a change in pull request #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#discussion_r180402305\n \n \n\n ##########\n File path: rust/src/memory_pool.rs\n ##########\n @@ -0,0 +1,93 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use libc;\n+use std::mem;\n+use std::cmp;\n+\n+use super::error::ArrowError;\n+use super::error::Result;\n+\n+const ALIGNMENT: usize = 64;\n+\n+/// Memory pool for allocating memory. It's also responsible for tracking memory usage.\n+pub trait MemoryPool {\n+    /// Allocate memory.\n+    /// The implementation should ensures that allocated memory is aligned.\n+    fn allocate(&self, size: usize) -> Result<*mut u8>;\n+\n+    /// Reallocate memory.\n+    /// If the implementation doesn't support reallocating aligned memory, it allocates new memory\n+    /// and copied old memory to it.\n+    fn reallocate(&self, old_size: usize, new_size: usize, pointer: *mut u8) -> Result<*mut u8>;\n+\n+    /// Free memory.\n+    fn free(&self, ptr: *mut u8);\n+}\n+\n+/// Implementation of memory pool using lib api.\n+#[allow(dead_code)]\n+struct LibcMemoryPool;\n+\n+impl MemoryPool for LibcMemoryPool {\n+    fn allocate(&self, size: usize) -> Result<*mut u8> {\n+        unsafe {\n+            let mut page: *mut libc::c_void = mem::uninitialized();\n+            let result = libc::posix_memalign(&mut page, ALIGNMENT, size);\n+            match result {\n+                0 => Ok(mem::transmute::<*mut libc::c_void, *mut u8>(page)),\n+                _ => Err(ArrowError::MemoryError(\n+                    \"Failed to allocate memory\".to_string(),\n+                )),\n+            }\n+        }\n+    }\n+\n+    fn reallocate(&self, old_size: usize, new_size: usize, pointer: *mut u8) -> Result<*mut u8> {\n+        unsafe {\n+            let result = self.allocate(new_size)?;\n+            let dst = mem::transmute::<*mut u8, *mut libc::c_void>(result);\n+            libc::memcpy(\n+                dst,\n+                mem::transmute::<*mut u8, *const libc::c_void>(pointer),\n+                cmp::min(old_size, new_size),\n+            );\n \n Review comment:\n   I would have expected that we also free `pointer` here.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-10T12:32:39.733+0000",
                    "updated": "2018-04-10T12:32:39.733+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16432222",
                    "id": "16432222",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "andygrove commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-380092065\n \n \n   This is looking good. Thanks @liurenjie1024 \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-10T13:09:29.214+0000",
                    "updated": "2018-04-10T13:09:29.214+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16432281",
                    "id": "16432281",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "andygrove commented on a change in pull request #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#discussion_r180425960\n \n \n\n ##########\n File path: rust/src/memory_pool.rs\n ##########\n @@ -0,0 +1,93 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use libc;\n+use std::mem;\n+use std::cmp;\n+\n+use super::error::ArrowError;\n+use super::error::Result;\n+\n+const ALIGNMENT: usize = 64;\n+\n+/// Memory pool for allocating memory. It's also responsible for tracking memory usage.\n+pub trait MemoryPool {\n+    /// Allocate memory.\n+    /// The implementation should ensures that allocated memory is aligned.\n+    fn allocate(&self, size: usize) -> Result<*mut u8>;\n+\n+    /// Reallocate memory.\n+    /// If the implementation doesn't support reallocating aligned memory, it allocates new memory\n+    /// and copied old memory to it.\n+    fn reallocate(&self, old_size: usize, new_size: usize, pointer: *mut u8) -> Result<*mut u8>;\n+\n+    /// Free memory.\n+    fn free(&self, ptr: *mut u8);\n+}\n+\n+/// Implementation of memory pool using lib api.\n+#[allow(dead_code)]\n+struct LibcMemoryPool;\n+\n+impl MemoryPool for LibcMemoryPool {\n+    fn allocate(&self, size: usize) -> Result<*mut u8> {\n+        unsafe {\n+            let mut page: *mut libc::c_void = mem::uninitialized();\n+            let result = libc::posix_memalign(&mut page, ALIGNMENT, size);\n+            match result {\n+                0 => Ok(mem::transmute::<*mut libc::c_void, *mut u8>(page)),\n+                _ => Err(ArrowError::MemoryError(\n+                    \"Failed to allocate memory\".to_string(),\n+                )),\n+            }\n+        }\n+    }\n+\n+    fn reallocate(&self, old_size: usize, new_size: usize, pointer: *mut u8) -> Result<*mut u8> {\n+        unsafe {\n+            let result = self.allocate(new_size)?;\n+            let dst = mem::transmute::<*mut u8, *mut libc::c_void>(result);\n+            libc::memcpy(\n+                dst,\n+                mem::transmute::<*mut u8, *const libc::c_void>(pointer),\n+                cmp::min(old_size, new_size),\n+            );\n \n Review comment:\n   I agree, the old buffer needs to be released\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-10T13:46:16.223+0000",
                    "updated": "2018-04-10T13:46:16.223+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16432458",
                    "id": "16432458",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "paddyhoran commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-380141516\n \n \n   This is similar to what we had in iron-arrow before the contribution to the main arrow repo but it seemed that @andygrove went a different direction initially.\r\n   \r\n   I just added windows support last night to memory.rs and friends.  Do we plan to isolate libc calls to this new memory pool (replacing the memory.rs approach)?\r\n   \r\n   Just wondering what the direction is as the above memory pool approach does not work from windows.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-10T15:24:30.258+0000",
                    "updated": "2018-04-10T15:24:30.258+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16432485",
                    "id": "16432485",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "paddyhoran commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-380141516\n \n \n   This is similar to what we had in iron-arrow before the contribution to the main arrow repo but it seemed that @andygrove went a different direction initially.\r\n   \r\n   I just added windows support last night to memory.rs and friends.  Do we plan to isolate libc calls to this new memory pool (replacing the memory.rs approach)?\r\n   \r\n   Just wondering what the direction is as the above memory pool approach does not work for windows.\r\n   \r\n   I can add windows support for memory pool also once it's merged.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-10T15:40:41.527+0000",
                    "updated": "2018-04-10T15:40:41.527+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16432831",
                    "id": "16432831",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "andygrove commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-380221529\n \n \n   We should definitely isolate all memory alloc/free in the one file, which I think this PR does nicely. We just need to merge the windows changes and fix the oustanding issue where realloc is failing to free the old memory and I think we're good.\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-10T19:36:33.003+0000",
                    "updated": "2018-04-10T19:36:33.003+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16433135",
                    "id": "16433135",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "paddyhoran commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-380273948\n \n \n   As CI is not currently setup for Windows I think it\u2019s fine to push ahead with this change without windows support, then reopen the windows support jira and I\u2019ll address it in a separate PR.\r\n   \r\n   I seem to be the only person on Windows and momentum is more important at this stage of the rust implementation.\r\n   \r\n   Once we have windows CI setup I think we try to keep windows support working on all PRs.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-10T22:59:23.118+0000",
                    "updated": "2018-04-10T22:59:23.118+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16433294",
                    "id": "16433294",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "liurenjie1024 commented on a change in pull request #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#discussion_r180616961\n \n \n\n ##########\n File path: rust/src/memory_pool.rs\n ##########\n @@ -0,0 +1,93 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use libc;\n+use std::mem;\n+use std::cmp;\n+\n+use super::error::ArrowError;\n+use super::error::Result;\n+\n+const ALIGNMENT: usize = 64;\n+\n+/// Memory pool for allocating memory. It's also responsible for tracking memory usage.\n+pub trait MemoryPool {\n+    /// Allocate memory.\n+    /// The implementation should ensures that allocated memory is aligned.\n+    fn allocate(&self, size: usize) -> Result<*mut u8>;\n+\n+    /// Reallocate memory.\n+    /// If the implementation doesn't support reallocating aligned memory, it allocates new memory\n+    /// and copied old memory to it.\n+    fn reallocate(&self, old_size: usize, new_size: usize, pointer: *mut u8) -> Result<*mut u8>;\n+\n+    /// Free memory.\n+    fn free(&self, ptr: *mut u8);\n+}\n+\n+/// Implementation of memory pool using lib api.\n+#[allow(dead_code)]\n+struct LibcMemoryPool;\n+\n+impl MemoryPool for LibcMemoryPool {\n+    fn allocate(&self, size: usize) -> Result<*mut u8> {\n+        unsafe {\n+            let mut page: *mut libc::c_void = mem::uninitialized();\n+            let result = libc::posix_memalign(&mut page, ALIGNMENT, size);\n+            match result {\n+                0 => Ok(mem::transmute::<*mut libc::c_void, *mut u8>(page)),\n+                _ => Err(ArrowError::MemoryError(\n+                    \"Failed to allocate memory\".to_string(),\n+                )),\n+            }\n+        }\n+    }\n+\n+    fn reallocate(&self, old_size: usize, new_size: usize, pointer: *mut u8) -> Result<*mut u8> {\n+        unsafe {\n+            let result = self.allocate(new_size)?;\n+            let dst = mem::transmute::<*mut u8, *mut libc::c_void>(result);\n+            libc::memcpy(\n+                dst,\n+                mem::transmute::<*mut u8, *const libc::c_void>(pointer),\n+                cmp::min(old_size, new_size),\n+            );\n \n Review comment:\n   Thanks for the review, and I've fixed it.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-11T02:06:29.207+0000",
                    "updated": "2018-04-11T02:06:29.207+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16433673",
                    "id": "16433673",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "liurenjie1024 commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-380398449\n \n \n   Hi, can anybody help to merge this?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-11T10:03:35.194+0000",
                    "updated": "2018-04-11T10:03:35.194+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16434901",
                    "id": "16434901",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "andygrove commented on a change in pull request #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#discussion_r180959288\n \n \n\n ##########\n File path: rust/src/memory_pool.rs\n ##########\n @@ -0,0 +1,90 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use libc;\n+use std::mem;\n+use std::cmp;\n+\n+use super::error::ArrowError;\n+use super::error::Result;\n+\n+const ALIGNMENT: usize = 64;\n+\n+/// Memory pool for allocating memory. It's also responsible for tracking memory usage.\n+pub trait MemoryPool {\n+    /// Allocate memory.\n+    /// The implementation should ensures that allocated memory is aligned.\n+    fn allocate(&self, size: usize) -> Result<*mut u8>;\n+\n+    /// Reallocate memory.\n+    /// If the implementation doesn't support reallocating aligned memory, it allocates new memory\n+    /// and copied old memory to it.\n+    fn reallocate(&self, old_size: usize, new_size: usize, pointer: *mut u8) -> Result<*mut u8>;\n+\n+    /// Free memory.\n+    fn free(&self, ptr: *mut u8);\n+}\n+\n+/// Implementation of memory pool using libc api.\n+#[allow(dead_code)]\n+struct LibcMemoryPool;\n+\n+impl MemoryPool for LibcMemoryPool {\n+    fn allocate(&self, size: usize) -> Result<*mut u8> {\n+        unsafe {\n+            let mut page: *mut libc::c_void = mem::uninitialized();\n+            let result = libc::posix_memalign(&mut page, ALIGNMENT, size);\n+            match result {\n+                0 => Ok(mem::transmute::<*mut libc::c_void, *mut u8>(page)),\n+                _ => Err(ArrowError::MemoryError(\n+                    \"Failed to allocate memory\".to_string(),\n+                )),\n+            }\n+        }\n+    }\n+\n+    fn reallocate(&self, old_size: usize, new_size: usize, pointer: *mut u8) -> Result<*mut u8> {\n+        unsafe {\n+            let old_src = mem::transmute::<*mut u8, *mut libc::c_void>(pointer);\n+            let result = self.allocate(new_size)?;\n+            let dst = mem::transmute::<*mut u8, *mut libc::c_void>(result);\n+            libc::memcpy(dst, old_src, cmp::min(old_size, new_size));\n+            libc::free(old_src);\n+            Ok(result)\n+        }\n+    }\n+\n+    fn free(&self, ptr: *mut u8) {\n+        unsafe { libc::free(mem::transmute::<*mut u8, *mut libc::c_void>(ptr)) }\n+    }\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    use super::*;\n+\n+    #[test]\n+    fn test_allocate() {\n+        let memory_pool = LibcMemoryPool {};\n+\n+        for _ in 0..10 {\n+            let p = memory_pool.allocate(1024).unwrap();\n+            // make sure this is 64-byte aligned\n+            assert_eq!(0, (p as usize) % 64);\n+        }\n \n Review comment:\n   Could you update this test to also call free(). Also would be good to add a test for reallocate as well.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-12T03:57:59.340+0000",
                    "updated": "2018-04-12T03:57:59.340+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16436730",
                    "id": "16436730",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "liurenjie1024 commented on a change in pull request #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#discussion_r181276036\n \n \n\n ##########\n File path: rust/src/memory_pool.rs\n ##########\n @@ -0,0 +1,90 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use libc;\n+use std::mem;\n+use std::cmp;\n+\n+use super::error::ArrowError;\n+use super::error::Result;\n+\n+const ALIGNMENT: usize = 64;\n+\n+/// Memory pool for allocating memory. It's also responsible for tracking memory usage.\n+pub trait MemoryPool {\n+    /// Allocate memory.\n+    /// The implementation should ensures that allocated memory is aligned.\n+    fn allocate(&self, size: usize) -> Result<*mut u8>;\n+\n+    /// Reallocate memory.\n+    /// If the implementation doesn't support reallocating aligned memory, it allocates new memory\n+    /// and copied old memory to it.\n+    fn reallocate(&self, old_size: usize, new_size: usize, pointer: *mut u8) -> Result<*mut u8>;\n+\n+    /// Free memory.\n+    fn free(&self, ptr: *mut u8);\n+}\n+\n+/// Implementation of memory pool using libc api.\n+#[allow(dead_code)]\n+struct LibcMemoryPool;\n+\n+impl MemoryPool for LibcMemoryPool {\n+    fn allocate(&self, size: usize) -> Result<*mut u8> {\n+        unsafe {\n+            let mut page: *mut libc::c_void = mem::uninitialized();\n+            let result = libc::posix_memalign(&mut page, ALIGNMENT, size);\n+            match result {\n+                0 => Ok(mem::transmute::<*mut libc::c_void, *mut u8>(page)),\n+                _ => Err(ArrowError::MemoryError(\n+                    \"Failed to allocate memory\".to_string(),\n+                )),\n+            }\n+        }\n+    }\n+\n+    fn reallocate(&self, old_size: usize, new_size: usize, pointer: *mut u8) -> Result<*mut u8> {\n+        unsafe {\n+            let old_src = mem::transmute::<*mut u8, *mut libc::c_void>(pointer);\n+            let result = self.allocate(new_size)?;\n+            let dst = mem::transmute::<*mut u8, *mut libc::c_void>(result);\n+            libc::memcpy(dst, old_src, cmp::min(old_size, new_size));\n+            libc::free(old_src);\n+            Ok(result)\n+        }\n+    }\n+\n+    fn free(&self, ptr: *mut u8) {\n+        unsafe { libc::free(mem::transmute::<*mut u8, *mut libc::c_void>(ptr)) }\n+    }\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    use super::*;\n+\n+    #[test]\n+    fn test_allocate() {\n+        let memory_pool = LibcMemoryPool {};\n+\n+        for _ in 0..10 {\n+            let p = memory_pool.allocate(1024).unwrap();\n+            // make sure this is 64-byte aligned\n+            assert_eq!(0, (p as usize) % 64);\n+        }\n \n Review comment:\n   Hi, @andygrove \r\n   \r\n   Test  added. I tried also to test free but it seems that there is no easy way to test that.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-13T03:03:54.384+0000",
                    "updated": "2018-04-13T03:03:54.384+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16437297",
                    "id": "16437297",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "andygrove commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-381135426\n \n \n   @xhochy I think this looks good now?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-13T13:29:26.617+0000",
                    "updated": "2018-04-13T13:29:26.617+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16437337",
                    "id": "16437337",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "crepererum commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-381146548\n \n \n   Could we not use something closer to the hopefully-soon-stable [Allocator API](https://doc.rust-lang.org/alloc/allocator/trait.Alloc.html)?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-13T14:07:05.492+0000",
                    "updated": "2018-04-13T14:07:05.492+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16437341",
                    "id": "16437341",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "crepererum commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-381147104\n \n \n   Or in other words: do you (@andygrove) think we should switch to the upstream API once it is stable?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-13T14:08:58.642+0000",
                    "updated": "2018-04-13T14:08:58.642+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16437380",
                    "id": "16437380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "liurenjie1024 commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-381157762\n \n \n   @crepererum We can have memory pool as a wrapper allocator api so that we can have more functionality, e.g. statistics about memory usage\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-13T14:43:23.948+0000",
                    "updated": "2018-04-13T14:43:23.948+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16438385",
                    "id": "16438385",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "andygrove commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-381336600\n \n \n   @crepererum I'm all for switching to allocator API once stable. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-14T15:23:11.031+0000",
                    "updated": "2018-04-14T15:23:11.031+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16438386",
                    "id": "16438386",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "andygrove commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-381336647\n \n \n   @xhochy @pitrou I think we can merge this one now\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-14T15:23:37.137+0000",
                    "updated": "2018-04-14T15:23:37.137+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16438394",
                    "id": "16438394",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-381338090\n \n \n   I'll let @xhochy handle it, since he commented on the PR.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-14T15:43:30.931+0000",
                    "updated": "2018-04-14T15:43:30.931+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16438618",
                    "id": "16438618",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy closed pull request #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/.gitignore b/.gitignore\nindex c902ba39c..d9c69e954 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -30,6 +30,7 @@ MANIFEST\n *.vcxproj\n *.vcxproj.*\n *.sln\n+*.iml\n \n cpp/.idea/\n python/.eggs/\ndiff --git a/rust/src/error.rs b/rust/src/error.rs\nindex 6a342e063..d82ee1190 100644\n--- a/rust/src/error.rs\n+++ b/rust/src/error.rs\n@@ -20,3 +20,5 @@ pub enum ArrowError {\n     MemoryError(String),\n     ParseError(String),\n }\n+\n+pub type Result<T> = ::std::result::Result<T, ArrowError>;\ndiff --git a/rust/src/lib.rs b/rust/src/lib.rs\nindex 6ab3daabb..2d2274029 100644\n--- a/rust/src/lib.rs\n+++ b/rust/src/lib.rs\n@@ -29,3 +29,4 @@ pub mod datatypes;\n pub mod error;\n pub mod list;\n pub mod memory;\n+pub mod memory_pool;\ndiff --git a/rust/src/memory_pool.rs b/rust/src/memory_pool.rs\nnew file mode 100644\nindex 000000000..acfcc3071\n--- /dev/null\n+++ b/rust/src/memory_pool.rs\n@@ -0,0 +1,105 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use libc;\n+use std::mem;\n+use std::cmp;\n+\n+use super::error::ArrowError;\n+use super::error::Result;\n+\n+const ALIGNMENT: usize = 64;\n+\n+/// Memory pool for allocating memory. It's also responsible for tracking memory usage.\n+pub trait MemoryPool {\n+    /// Allocate memory.\n+    /// The implementation should ensures that allocated memory is aligned.\n+    fn allocate(&self, size: usize) -> Result<*mut u8>;\n+\n+    /// Reallocate memory.\n+    /// If the implementation doesn't support reallocating aligned memory, it allocates new memory\n+    /// and copied old memory to it.\n+    fn reallocate(&self, old_size: usize, new_size: usize, pointer: *mut u8) -> Result<*mut u8>;\n+\n+    /// Free memory.\n+    fn free(&self, ptr: *mut u8);\n+}\n+\n+/// Implementation of memory pool using libc api.\n+#[allow(dead_code)]\n+struct LibcMemoryPool;\n+\n+impl MemoryPool for LibcMemoryPool {\n+    fn allocate(&self, size: usize) -> Result<*mut u8> {\n+        unsafe {\n+            let mut page: *mut libc::c_void = mem::uninitialized();\n+            let result = libc::posix_memalign(&mut page, ALIGNMENT, size);\n+            match result {\n+                0 => Ok(mem::transmute::<*mut libc::c_void, *mut u8>(page)),\n+                _ => Err(ArrowError::MemoryError(\n+                    \"Failed to allocate memory\".to_string(),\n+                )),\n+            }\n+        }\n+    }\n+\n+    fn reallocate(&self, old_size: usize, new_size: usize, pointer: *mut u8) -> Result<*mut u8> {\n+        unsafe {\n+            let old_src = mem::transmute::<*mut u8, *mut libc::c_void>(pointer);\n+            let result = self.allocate(new_size)?;\n+            let dst = mem::transmute::<*mut u8, *mut libc::c_void>(result);\n+            libc::memcpy(dst, old_src, cmp::min(old_size, new_size));\n+            libc::free(old_src);\n+            Ok(result)\n+        }\n+    }\n+\n+    fn free(&self, ptr: *mut u8) {\n+        unsafe { libc::free(mem::transmute::<*mut u8, *mut libc::c_void>(ptr)) }\n+    }\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    use super::*;\n+\n+    #[test]\n+    fn test_allocate() {\n+        let memory_pool = LibcMemoryPool {};\n+\n+        for _ in 0..10 {\n+            let p = memory_pool.allocate(1024).unwrap();\n+            // make sure this is 64-byte aligned\n+            assert_eq!(0, (p as usize) % ALIGNMENT);\n+            memory_pool.free(p);\n+        }\n+    }\n+\n+    #[test]\n+    fn test_reallocate() {\n+        let memory_pool = LibcMemoryPool {};\n+\n+        for _ in 0..10 {\n+            let p1 = memory_pool.allocate(1024).unwrap();\n+            let p2 = memory_pool.reallocate(1024, 2048, p1).unwrap();\n+            // make sure this is 64-byte aligned\n+            assert_eq!(0, (p1 as usize) % ALIGNMENT);\n+            assert_eq!(0, (p2 as usize) % ALIGNMENT);\n+            memory_pool.free(p2);\n+        }\n+    }\n+}\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-15T08:00:30.399+0000",
                    "updated": "2018-04-15T08:00:30.399+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16438619",
                    "id": "16438619",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 1875\n[https://github.com/apache/arrow/pull/1875]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-04-15T08:00:34.791+0000",
                    "updated": "2018-04-15T08:00:34.791+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16444496",
                    "id": "16444496",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "paddyhoran commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-382828635\n \n \n   I'm trying to add windows support for these changes and I have a few questions:\r\n    - Why are we using `*mut u8` instead of `*const u8`?\r\n    - Why switch to `usize` for `size` instead of `i64`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-19T18:05:02.175+0000",
                    "updated": "2018-04-19T18:05:02.175+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16444497",
                    "id": "16444497",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "paddyhoran commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-382828635\n \n \n   I'm trying to add windows support for these changes and I have a few questions:\r\n    - Why are we using `*mut u8` instead of `*const u8`?\r\n    - Why switch to `usize` for `size` instead of `i64`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-19T18:05:18.880+0000",
                    "updated": "2018-04-19T18:05:18.880+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16445125",
                    "id": "16445125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "paddyhoran commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-382828635\n \n \n   I'm trying to add windows support for these changes and I have a few questions:\r\n    - Why are we using `*mut u8` instead of `*const u8`?\r\n    - Why switch to `usize` for `size` instead of `i64`?\r\n   \r\n   @liurenjie1024 thoughts?  Not questioning your approach, just inexperienced and trying to understand...\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-20T01:58:38.505+0000",
                    "updated": "2018-04-20T01:58:38.505+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16445136",
                    "id": "16445136",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "liurenjie1024 commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-382943494\n \n \n   Hi @paddyhoran,\r\n   in fact these are conventions inherited from allocator api, and here are my thoughts:\r\n   *  when you allocate a new piece of memory, in most cases it's used for storing data, and you need to write to it.\r\n   * usize is a type designed for size and it has different length in different platforms for the sake of efficiency. If you use i64 in 32-bit platforms, it may be wasteful and hurt performance.  \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-20T02:07:18.392+0000",
                    "updated": "2018-04-20T02:07:18.392+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16445192",
                    "id": "16445192",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "andygrove commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-382953309\n \n \n   I commented on the JIRA but will comment here too.\n   \n   We now have two different memory implementations but only one is actually\n   used.\n   \n   Also my original code has libc calls scattered around instead of being\n   isolated in one file, which isn't good and has also meant having to deal\n   with Windows in multiple places instead of just in the memory related\n   source files.\n   \n   I'm looking at this now to try and figure out what we should do. I think we\n   will just want to use Rust's allocator API anyway once that becomes stable\n   so I'm not sure we really need a pluggable memory pool but I guess we can\n   have that discussion later.\n   \n   I'm thinking I should at least submit a PR to move all the current memory\n   handling into the memory.rs file.\n   \n   \n   \n   \n   \n   On Thu, Apr 19, 2018 at 8:07 PM, Renjie Liu <notifications@github.com>\n   wrote:\n   \n   > Hi @paddyhoran <https://github.com/paddyhoran>,\n   > in fact these are conventions inherited from allocator api, and here are\n   > my thoughts:\n   >\n   >    - when you allocate a new piece of memory, in most cases it's used for\n   >    storing data, and you need to write to it.\n   >    - usize is a type designed for size and it has different length in\n   >    different platforms for the sake of efficiency. If you use i64 in 32-bit\n   >    platforms, it may be wasteful and hurt performance.\n   >\n   > \u2014\n   > You are receiving this because you were mentioned.\n   > Reply to this email directly, view it on GitHub\n   > <https://github.com/apache/arrow/pull/1875#issuecomment-382943494>, or mute\n   > the thread\n   > <https://github.com/notifications/unsubscribe-auth/AA5AxJ5mPMV-2J42RGhcF6Yc-LK6HacSks5tqULcgaJpZM4TN3tE>\n   > .\n   >\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-20T02:50:22.415+0000",
                    "updated": "2018-04-20T02:50:22.415+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16445201",
                    "id": "16445201",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "andygrove commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-382954515\n \n \n   Here is the PR:\n   \n   https://github.com/apache/arrow/pull/1919\n   \n   I haven't put a JIRA number on this yet.\n   \n   On Thu, Apr 19, 2018 at 8:50 PM, Andy Grove <andygrove73@gmail.com> wrote:\n   \n   > I commented on the JIRA but will comment here too.\n   >\n   > We now have two different memory implementations but only one is actually\n   > used.\n   >\n   > Also my original code has libc calls scattered around instead of being\n   > isolated in one file, which isn't good and has also meant having to deal\n   > with Windows in multiple places instead of just in the memory related\n   > source files.\n   >\n   > I'm looking at this now to try and figure out what we should do. I think\n   > we will just want to use Rust's allocator API anyway once that becomes\n   > stable so I'm not sure we really need a pluggable memory pool but I guess\n   > we can have that discussion later.\n   >\n   > I'm thinking I should at least submit a PR to move all the current memory\n   > handling into the memory.rs file.\n   >\n   >\n   >\n   >\n   >\n   > On Thu, Apr 19, 2018 at 8:07 PM, Renjie Liu <notifications@github.com>\n   > wrote:\n   >\n   >> Hi @paddyhoran <https://github.com/paddyhoran>,\n   >> in fact these are conventions inherited from allocator api, and here are\n   >> my thoughts:\n   >>\n   >>    - when you allocate a new piece of memory, in most cases it's used\n   >>    for storing data, and you need to write to it.\n   >>    - usize is a type designed for size and it has different length in\n   >>    different platforms for the sake of efficiency. If you use i64 in 32-bit\n   >>    platforms, it may be wasteful and hurt performance.\n   >>\n   >> \u2014\n   >> You are receiving this because you were mentioned.\n   >> Reply to this email directly, view it on GitHub\n   >> <https://github.com/apache/arrow/pull/1875#issuecomment-382943494>, or mute\n   >> the thread\n   >> <https://github.com/notifications/unsubscribe-auth/AA5AxJ5mPMV-2J42RGhcF6Yc-LK6HacSks5tqULcgaJpZM4TN3tE>\n   >> .\n   >>\n   >\n   >\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-20T02:55:42.909+0000",
                    "updated": "2018-04-20T02:55:42.909+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16445231",
                    "id": "16445231",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "liurenjie1024 commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-382961933\n \n \n   My initial plan was to create three memory pool implementations: libc, windows and one using allocator api (which is only available in nightly channel). Since we are not sure when allocator api will get stable, I think it still deserves the effort on it.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-20T03:30:25.454+0000",
                    "updated": "2018-04-20T03:30:25.454+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16445234",
                    "id": "16445234",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "paddyhoran commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-382962137\n \n \n   @liurenjie1024 thanks.  \r\n   \r\n   I was looking at the C++ implementation for reference:\r\n    - I see that we basically do a reinterpret_cast before using the `*const u8` version.\r\n    - I thought that `usize` is really for pointers, in the C++ implementation they use i64 for size\r\n   \r\n   How do you feel about refactoring this implementation to use the functions in `memory.rs` once @andygrove's PR above is merged? \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-20T03:31:29.907+0000",
                    "updated": "2018-04-20T03:31:29.907+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16445237",
                    "id": "16445237",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "paddyhoran commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-382962137\n \n \n   @liurenjie1024 thanks.  \r\n   \r\n   I was looking at the C++ implementation for reference:\r\n    - I see that we basically do a reinterpret_cast before using the `*const u8` version.\r\n    - I thought that `usize` is really for pointers, in the C++ implementation they use i64 for size\r\n   \r\n   How do you feel about refactoring this implementation to use the functions in `memory.rs` once @andygrove's PR above is merged?\r\n   \r\n   I'm having trouble adding windows support and it's not used anywhere else in the codebase...\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-20T03:33:04.271+0000",
                    "updated": "2018-04-20T03:33:04.271+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16445536",
                    "id": "16445536",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "liurenjie1024 commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-383041102\n \n \n   @paddyhoran Can you post a PR for that? If it really blocks windows support, I'm certainly happy to accept the refactoring.  \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-20T09:30:21.299+0000",
                    "updated": "2018-04-20T09:30:21.299+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16445647",
                    "id": "16445647",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "paddyhoran commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-383077465\n \n \n   @liurenjie1024 ok.  I'll take a look at this when I get a chance.  Right now though I'm going to see if I can conditionally compile this to get [ARROW-2474](https://issues.apache.org/jira/browse/ARROW-2474?filter=12343557) done.  The memory pool abstraction is not used anywhere within the codebase and with the fix I am proposing would not be available on windows.  I'll open a new JIRA to track the refactor work.\r\n   \r\n   @andygrove are you ok with this?  I know this is not a best practice and I would not want to get into the habit of doing this, I just want to get windows building again so I can work on windows CI.  Given that we are not sure how the allocator API will impact the need for a memory pool I think it's ok in this situation?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-20T12:16:31.989+0000",
                    "updated": "2018-04-20T12:16:31.989+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16445701",
                    "id": "16445701",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "andygrove commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-383092381\n \n \n   @paddyhoran I think this is fine. Once you have done that I will then do another refactor to make the builders use the memory pool abstraction.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-20T13:16:13.532+0000",
                    "updated": "2018-04-20T13:16:13.532+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151261/comment/16446738",
                    "id": "16446738",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "andygrove commented on issue #1875: ARROW-2435: [Rust] Add memory pool abstraction.\nURL: https://github.com/apache/arrow/pull/1875#issuecomment-383284486\n \n \n   @paddyhoran I think this is fine. Once you have done that I will then do another refactor to make the builders use the memory pool abstraction.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-21T10:43:02.344+0000",
                    "updated": "2018-04-21T10:43:02.344+0000"
                }
            ],
            "maxResults": 38,
            "total": 38,
            "startAt": 0
        },
        "customfield_12311820": "0|i3scmf:",
        "customfield_12314139": null
    }
}