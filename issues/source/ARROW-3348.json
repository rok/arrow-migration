{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13188073",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188073",
    "key": "ARROW-3348",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343066",
                "id": "12343066",
                "description": "",
                "name": "0.11.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-10-08"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=robertnishihara",
            "name": "robertnishihara",
            "key": "robertnishihara",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Robert Nishihara",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332956",
                "id": "12332956",
                "name": "C++ - Plasma"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=robertnishihara",
            "name": "robertnishihara",
            "key": "robertnishihara",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Robert Nishihara",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=robertnishihara",
            "name": "robertnishihara",
            "key": "robertnishihara",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Robert Nishihara",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3348/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 11,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188073/worklog/149019",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara opened a new pull request #2650: ARROW-3348: [Plasma] Fix bug in which plasma store dies when object created by remo\u2026\nURL: https://github.com/apache/arrow/pull/2650\n \n \n   \u2026ved client is created.\r\n   \r\n   This PR also includes a couple documentation and other very small changes which I'm happy to revert if people want.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-28T05:25:39.356+0000",
                    "updated": "2018-09-28T05:25:39.356+0000",
                    "started": "2018-09-28T05:25:39.355+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149019",
                    "issueId": "13188073"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188073/worklog/149020",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on a change in pull request #2650: ARROW-3348: [Plasma] Fix bug in which plasma store dies when object created by remo\u2026\nURL: https://github.com/apache/arrow/pull/2650#discussion_r221143961\n \n \n\n ##########\n File path: cpp/src/plasma/client.cc\n ##########\n @@ -645,24 +643,24 @@ Status PlasmaClient::Impl::PerformRelease(const ObjectID& object_id) {\n }\n \n Status PlasmaClient::Impl::Release(const ObjectID& object_id) {\n+  // If the client is already disconnected, ignore release requests.\n+  if (store_conn_ < 0) {\n+    return Status::OK();\n+  }\n \n Review comment:\n   This change is unrelated to the bug.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-28T05:26:00.021+0000",
                    "updated": "2018-09-28T05:26:00.021+0000",
                    "started": "2018-09-28T05:26:00.020+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149020",
                    "issueId": "13188073"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188073/worklog/149021",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on a change in pull request #2650: ARROW-3348: [Plasma] Fix bug in which plasma store dies when object created by remo\u2026\nURL: https://github.com/apache/arrow/pull/2650#discussion_r221144024\n \n \n\n ##########\n File path: cpp/src/plasma/store.cc\n ##########\n @@ -584,6 +609,9 @@ void PlasmaStore::DisconnectClient(int client_fd) {\n     }\n   }\n \n+  /// Remove all of the client's GetRequests.\n+  RemoveGetRequestsForClient(client);\n \n Review comment:\n   This is the key fix. Essentially, when a client disconnects, we need to clean up its get requests.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-28T05:26:25.018+0000",
                    "updated": "2018-09-28T05:26:25.018+0000",
                    "started": "2018-09-28T05:26:25.016+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149021",
                    "issueId": "13188073"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188073/worklog/149187",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on a change in pull request #2650: ARROW-3348: [Plasma] Fix bug in which plasma store dies when object created by remo\u2026\nURL: https://github.com/apache/arrow/pull/2650#discussion_r221279410\n \n \n\n ##########\n File path: python/pyarrow/tests/test_plasma.py\n ##########\n @@ -747,6 +748,35 @@ def test_use_one_memory_mapped_file(self):\n             create_object(self.plasma_client2, DEFAULT_PLASMA_STORE_MEMORY + 1,\n                           0)\n \n+    def test_client_death_during_get(self):\n \n Review comment:\n   This test fails prior to this PR.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-28T14:48:44.432+0000",
                    "updated": "2018-09-28T14:48:44.432+0000",
                    "started": "2018-09-28T14:48:44.431+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149187",
                    "issueId": "13188073"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188073/worklog/149188",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on a change in pull request #2650: ARROW-3348: [Plasma] Fix bug in which plasma store dies when object created by remo\u2026\nURL: https://github.com/apache/arrow/pull/2650#discussion_r221279690\n \n \n\n ##########\n File path: cpp/src/plasma/store.cc\n ##########\n @@ -259,6 +259,46 @@ void PlasmaObject_init(PlasmaObject* object, ObjectTableEntry* entry) {\n   object->device_num = entry->device_num;\n }\n \n+void PlasmaStore::RemoveGetRequest(GetRequest* get_request) {\n \n Review comment:\n   This function is just factored out from `PlasmaStore::ReturnFromGet`. We shouldn't be using raw pointers.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-28T14:49:30.060+0000",
                    "updated": "2018-09-28T14:49:30.060+0000",
                    "started": "2018-09-28T14:49:30.059+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149188",
                    "issueId": "13188073"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188073/worklog/149192",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2650: ARROW-3348: [Plasma] Fix bug in which plasma store dies when object created by remo\u2026\nURL: https://github.com/apache/arrow/pull/2650#issuecomment-425463803\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2650?src=pr&el=h1) Report\n   > Merging [#2650](https://codecov.io/gh/apache/arrow/pull/2650?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/3a503ef64fa8191b5b9642e9584f9ee06ae96ca9?src=pr&el=desc) will **increase** coverage by `1.05%`.\n   > The diff coverage is `86.66%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2650/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2650?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2650      +/-   ##\n   ==========================================\n   + Coverage   87.19%   88.25%   +1.05%     \n   ==========================================\n     Files         381      319      -62     \n     Lines       59223    55538    -3685     \n   ==========================================\n   - Hits        51642    49015    -2627     \n   + Misses       7507     6523     -984     \n   + Partials       74        0      -74\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2650?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/store.h](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/client.cc](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50LmNj) | `84.43% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | `91% <84%> (+1.1%)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_plasma.py](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wbGFzbWEucHk=) | `96.32% <88.88%> (-0.29%)` | :arrow_down: |\n   | [rust/src/record\\_batch.rs](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-cnVzdC9zcmMvcmVjb3JkX2JhdGNoLnJz) | | |\n   | [go/arrow/datatype\\_nested.go](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbmVzdGVkLmdv) | | |\n   | [rust/src/util/bit\\_util.rs](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-cnVzdC9zcmMvdXRpbC9iaXRfdXRpbC5ycw==) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | ... and [57 more](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2650?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2650?src=pr&el=footer). Last update [3a503ef...3937c47](https://codecov.io/gh/apache/arrow/pull/2650?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-28T14:59:32.839+0000",
                    "updated": "2018-09-28T14:59:32.839+0000",
                    "started": "2018-09-28T14:59:32.839+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149192",
                    "issueId": "13188073"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188073/worklog/149538",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on a change in pull request #2650: ARROW-3348: [Plasma] Fix bug in which plasma store dies when object created by remo\u2026\nURL: https://github.com/apache/arrow/pull/2650#discussion_r221413487\n \n \n\n ##########\n File path: cpp/src/plasma/store.cc\n ##########\n @@ -259,6 +259,50 @@ void PlasmaObject_init(PlasmaObject* object, ObjectTableEntry* entry) {\n   object->device_num = entry->device_num;\n }\n \n+void PlasmaStore::RemoveGetRequest(GetRequest* get_request) {\n+  // Remove the get request from each of the relevant object_get_requests hash\n+  // tables if it is present there. It should only be present there if the get\n+  // request timed out or if it was issued by a client that has disconnected.\n+  for (ObjectID& object_id : get_request->object_ids) {\n+    auto object_request_iter = object_get_requests_.find(object_id);\n+    if (object_request_iter != object_get_requests_.end()) {\n+      auto& get_requests = object_request_iter->second;\n+      // Erase get_req from the vector.\n+      auto it = std::find(get_requests.begin(), get_requests.end(), get_request);\n+      if (it != get_requests.end()) {\n+        get_requests.erase(it);\n+        // If the vector is empty, remove the object ID from the map.\n+        if (get_requests.empty()) {\n+          object_get_requests_.erase(object_request_iter);\n \n Review comment:\n   I added this line. I think this may have been a minor memory leak in the past, that is perhaps some keys never got removed from `object_get_requests_`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-29T02:57:25.067+0000",
                    "updated": "2018-09-29T02:57:25.067+0000",
                    "started": "2018-09-29T02:57:25.066+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149538",
                    "issueId": "13188073"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188073/worklog/149539",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on issue #2650: ARROW-3348: [Plasma] Fix bug in which plasma store dies when object created by remo\u2026\nURL: https://github.com/apache/arrow/pull/2650#issuecomment-425610296\n \n \n   Assuming tests pass, I will merge this unless others have comments.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-29T02:57:46.213+0000",
                    "updated": "2018-09-29T02:57:46.213+0000",
                    "started": "2018-09-29T02:57:46.213+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149539",
                    "issueId": "13188073"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188073/worklog/149563",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2650: ARROW-3348: [Plasma] Fix bug in which plasma store dies when object created by remo\u2026\nURL: https://github.com/apache/arrow/pull/2650#issuecomment-425463803\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2650?src=pr&el=h1) Report\n   > Merging [#2650](https://codecov.io/gh/apache/arrow/pull/2650?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/3a503ef64fa8191b5b9642e9584f9ee06ae96ca9?src=pr&el=desc) will **increase** coverage by `1.05%`.\n   > The diff coverage is `88.46%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2650/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2650?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2650      +/-   ##\n   ==========================================\n   + Coverage   87.19%   88.25%   +1.05%     \n   ==========================================\n     Files         381      319      -62     \n     Lines       59223    55548    -3675     \n   ==========================================\n   - Hits        51642    49025    -2617     \n   + Misses       7507     6523     -984     \n   + Partials       74        0      -74\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2650?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/store.h](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/client.cc](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50LmNj) | `84.43% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | `91.05% <87.5%> (+1.15%)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_plasma.py](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wbGFzbWEucHk=) | `96.32% <88.88%> (-0.29%)` | :arrow_down: |\n   | [cpp/src/arrow/util/parsing.h](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3BhcnNpbmcuaA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [rust/src/record\\_batch.rs](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-cnVzdC9zcmMvcmVjb3JkX2JhdGNoLnJz) | | |\n   | [go/arrow/datatype\\_nested.go](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbmVzdGVkLmdv) | | |\n   | [rust/src/util/bit\\_util.rs](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-cnVzdC9zcmMvdXRpbC9iaXRfdXRpbC5ycw==) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | ... and [58 more](https://codecov.io/gh/apache/arrow/pull/2650/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2650?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2650?src=pr&el=footer). Last update [3a503ef...09058e1](https://codecov.io/gh/apache/arrow/pull/2650?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-29T05:40:41.787+0000",
                    "updated": "2018-09-29T05:40:41.787+0000",
                    "started": "2018-09-29T05:40:41.787+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149563",
                    "issueId": "13188073"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188073/worklog/149683",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara closed pull request #2650: ARROW-3348: [Plasma] Fix bug in which plasma store dies when object created by remo\u2026\nURL: https://github.com/apache/arrow/pull/2650\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/plasma/client.cc b/cpp/src/plasma/client.cc\nindex c5f372f0f9..d88e8b1a95 100644\n--- a/cpp/src/plasma/client.cc\n+++ b/cpp/src/plasma/client.cc\n@@ -422,14 +422,12 @@ Status PlasmaClient::Impl::Create(const ObjectID& object_id, int64_t data_size,\n \n   // Increment the count of the number of instances of this object that this\n   // client is using. A call to PlasmaClient::Release is required to decrement\n-  // this\n-  // count. Cache the reference to the object.\n+  // this count. Cache the reference to the object.\n   IncrementObjectCount(object_id, &object, false);\n   // We increment the count a second time (and the corresponding decrement will\n   // happen in a PlasmaClient::Release call in plasma_seal) so even if the\n-  // buffer\n-  // returned by PlasmaClient::Dreate goes out of scope, the object does not get\n-  // released before the call to PlasmaClient::Seal happens.\n+  // buffer returned by PlasmaClient::Create goes out of scope, the object does\n+  // not get released before the call to PlasmaClient::Seal happens.\n   IncrementObjectCount(object_id, &object, false);\n   return Status::OK();\n }\n@@ -645,24 +643,24 @@ Status PlasmaClient::Impl::PerformRelease(const ObjectID& object_id) {\n }\n \n Status PlasmaClient::Impl::Release(const ObjectID& object_id) {\n+  // If the client is already disconnected, ignore release requests.\n+  if (store_conn_ < 0) {\n+    return Status::OK();\n+  }\n   // If an object is in the deletion cache, handle it directly without waiting.\n   auto iter = deletion_cache_.find(object_id);\n   if (iter != deletion_cache_.end()) {\n     RETURN_NOT_OK(PerformRelease(object_id));\n     return Status::OK();\n   }\n-  // If the client is already disconnected, ignore release requests.\n-  if (store_conn_ < 0) {\n-    return Status::OK();\n-  }\n   // Add the new object to the release history.\n   release_history_.push_front(object_id);\n   // If there are too many bytes in use by the client or if there are too many\n   // pending release calls, and there are at least some pending release calls in\n   // the release_history list, then release some objects.\n \n-  // TODO(wap) Evicition policy only works on host memory, and thus objects\n-  //           on the GPU cannot be released currently.\n+  // TODO(wap): Eviction policy only works on host memory, and thus objects on\n+  // the GPU cannot be released currently.\n   while ((in_use_object_bytes_ > std::min(kL3CacheSizeBytes, store_capacity_ / 100) ||\n           release_history_.size() > config_.release_delay) &&\n          release_history_.size() > 0) {\ndiff --git a/cpp/src/plasma/store.cc b/cpp/src/plasma/store.cc\nindex cc0623cde2..c1cab81349 100644\n--- a/cpp/src/plasma/store.cc\n+++ b/cpp/src/plasma/store.cc\n@@ -259,6 +259,50 @@ void PlasmaObject_init(PlasmaObject* object, ObjectTableEntry* entry) {\n   object->device_num = entry->device_num;\n }\n \n+void PlasmaStore::RemoveGetRequest(GetRequest* get_request) {\n+  // Remove the get request from each of the relevant object_get_requests hash\n+  // tables if it is present there. It should only be present there if the get\n+  // request timed out or if it was issued by a client that has disconnected.\n+  for (ObjectID& object_id : get_request->object_ids) {\n+    auto object_request_iter = object_get_requests_.find(object_id);\n+    if (object_request_iter != object_get_requests_.end()) {\n+      auto& get_requests = object_request_iter->second;\n+      // Erase get_req from the vector.\n+      auto it = std::find(get_requests.begin(), get_requests.end(), get_request);\n+      if (it != get_requests.end()) {\n+        get_requests.erase(it);\n+        // If the vector is empty, remove the object ID from the map.\n+        if (get_requests.empty()) {\n+          object_get_requests_.erase(object_request_iter);\n+        }\n+      }\n+    }\n+  }\n+  // Remove the get request.\n+  if (get_request->timer != -1) {\n+    ARROW_CHECK(loop_->RemoveTimer(get_request->timer) == AE_OK);\n+  }\n+  delete get_request;\n+}\n+\n+void PlasmaStore::RemoveGetRequestsForClient(Client* client) {\n+  std::unordered_set<GetRequest*> get_requests_to_remove;\n+  for (auto const& pair : object_get_requests_) {\n+    for (GetRequest* get_request : pair.second) {\n+      if (get_request->client == client) {\n+        get_requests_to_remove.insert(get_request);\n+      }\n+    }\n+  }\n+\n+  // It shouldn't be possible for a given client to be in the middle of multiple get\n+  // requests.\n+  ARROW_CHECK(get_requests_to_remove.size() <= 1);\n+  for (GetRequest* get_request : get_requests_to_remove) {\n+    RemoveGetRequest(get_request);\n+  }\n+}\n+\n void PlasmaStore::ReturnFromGet(GetRequest* get_req) {\n   // Figure out how many file descriptors we need to send.\n   std::unordered_set<int> fds_to_send;\n@@ -305,26 +349,20 @@ void PlasmaStore::ReturnFromGet(GetRequest* get_req) {\n   // Remove the get request from each of the relevant object_get_requests hash\n   // tables if it is present there. It should only be present there if the get\n   // request timed out.\n-  for (ObjectID& object_id : get_req->object_ids) {\n-    auto object_request_iter = object_get_requests_.find(object_id);\n-    if (object_request_iter != object_get_requests_.end()) {\n-      auto& get_requests = object_request_iter->second;\n-      // Erase get_req from the vector.\n-      auto it = std::find(get_requests.begin(), get_requests.end(), get_req);\n-      if (it != get_requests.end()) {\n-        get_requests.erase(it);\n-      }\n-    }\n-  }\n-  // Remove the get request.\n-  if (get_req->timer != -1) {\n-    ARROW_CHECK(loop_->RemoveTimer(get_req->timer) == AE_OK);\n-  }\n-  delete get_req;\n+  RemoveGetRequest(get_req);\n }\n \n void PlasmaStore::UpdateObjectGetRequests(const ObjectID& object_id) {\n-  auto& get_requests = object_get_requests_[object_id];\n+  auto it = object_get_requests_.find(object_id);\n+  // If there are no get requests involving this object, then return.\n+  if (it == object_get_requests_.end()) {\n+    return;\n+  }\n+\n+  auto& get_requests = it->second;\n+\n+  // After finishing the loop below, get_requests and it will have been\n+  // invalidated by the removal of object_id from object_get_requests_.\n   size_t index = 0;\n   size_t num_requests = get_requests.size();\n   for (size_t i = 0; i < num_requests; ++i) {\n@@ -348,10 +386,9 @@ void PlasmaStore::UpdateObjectGetRequests(const ObjectID& object_id) {\n     }\n   }\n \n-  DCHECK(index == get_requests.size());\n-  // Remove the array of get requests for this object, since no one should be\n-  // waiting for this object anymore.\n-  object_get_requests_.erase(object_id);\n+  // Since no one should be waiting for this object anymore, the object ID\n+  // should have been removed from the map.\n+  ARROW_CHECK(object_get_requests_.count(object_id) == 0);\n }\n \n void PlasmaStore::ProcessGetRequest(Client* client,\n@@ -584,6 +621,9 @@ void PlasmaStore::DisconnectClient(int client_fd) {\n     }\n   }\n \n+  /// Remove all of the client's GetRequests.\n+  RemoveGetRequestsForClient(client);\n+\n   for (const auto& entry : sealed_objects) {\n     RemoveFromClientObjectIds(entry.first, entry.second, client);\n   }\ndiff --git a/cpp/src/plasma/store.h b/cpp/src/plasma/store.h\nindex 4b83143de2..44fdf603f7 100644\n--- a/cpp/src/plasma/store.h\n+++ b/cpp/src/plasma/store.h\n@@ -183,6 +183,16 @@ class PlasmaStore {\n   void AddToClientObjectIds(const ObjectID& object_id, ObjectTableEntry* entry,\n                             Client* client);\n \n+  /// Remove a GetRequest and clean up the relevant data structures.\n+  ///\n+  /// @param get_request The GetRequest to remove.\n+  void RemoveGetRequest(GetRequest* get_request);\n+\n+  /// Remove all of the GetRequests for a given client.\n+  ///\n+  /// @param client The client whose GetRequests should be removed.\n+  void RemoveGetRequestsForClient(Client* client);\n+\n   void ReturnFromGet(GetRequest* get_req);\n \n   void UpdateObjectGetRequests(const ObjectID& object_id);\ndiff --git a/python/pyarrow/tests/test_plasma.py b/python/pyarrow/tests/test_plasma.py\nindex 061acd5593..846d6915c6 100644\n--- a/python/pyarrow/tests/test_plasma.py\n+++ b/python/pyarrow/tests/test_plasma.py\n@@ -20,6 +20,7 @@\n from __future__ import print_function\n \n import math\n+import multiprocessing\n import os\n import pytest\n import random\n@@ -117,10 +118,10 @@ def setup_method(self, test_method):\n             plasma_store_memory=DEFAULT_PLASMA_STORE_MEMORY,\n             use_valgrind=USE_VALGRIND,\n             use_one_memory_mapped_file=use_one_memory_mapped_file)\n-        plasma_store_name, self.p = self.plasma_store_ctx.__enter__()\n+        self.plasma_store_name, self.p = self.plasma_store_ctx.__enter__()\n         # Connect to Plasma.\n-        self.plasma_client = plasma.connect(plasma_store_name, \"\", 64)\n-        self.plasma_client2 = plasma.connect(plasma_store_name, \"\", 0)\n+        self.plasma_client = plasma.connect(self.plasma_store_name, \"\", 64)\n+        self.plasma_client2 = plasma.connect(self.plasma_store_name, \"\", 0)\n \n     def teardown_method(self, test_method):\n         try:\n@@ -747,6 +748,35 @@ def test_use_one_memory_mapped_file(self):\n             create_object(self.plasma_client2, DEFAULT_PLASMA_STORE_MEMORY + 1,\n                           0)\n \n+    def test_client_death_during_get(self):\n+        import pyarrow.plasma as plasma\n+\n+        object_id = random_object_id()\n+\n+        def client_blocked_in_get(plasma_store_name):\n+            client = plasma.connect(self.plasma_store_name, \"\", 0)\n+            # Try to get an object ID that doesn't exist. This should block.\n+            client.get([object_id])\n+\n+        p = multiprocessing.Process(target=client_blocked_in_get,\n+                                    args=(self.plasma_store_name, ))\n+        p.start()\n+        # Make sure the process is running.\n+        time.sleep(0.2)\n+        assert p.is_alive()\n+\n+        # Kill the client process.\n+        p.terminate()\n+        # Wait a little for the store to process the disconnect event.\n+        time.sleep(0.1)\n+\n+        # Create the object.\n+        self.plasma_client.put(1, object_id=object_id)\n+\n+        # Check that the store is still alive. This will raise an exception if\n+        # the client is dead.\n+        self.plasma_client.contains(random_object_id())\n+\n \n @pytest.mark.plasma\n def test_object_id_size():\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-30T01:29:36.616+0000",
                    "updated": "2018-09-30T01:29:36.616+0000",
                    "started": "2018-09-30T01:29:36.616+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149683",
                    "issueId": "13188073"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188073/worklog/149825",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2650: ARROW-3348: [Plasma] Fix bug in which plasma store dies when object created by remo\u2026\nURL: https://github.com/apache/arrow/pull/2650#issuecomment-425739620\n \n \n   LGTM\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-30T18:08:22.305+0000",
                    "updated": "2018-09-30T18:08:22.305+0000",
                    "started": "2018-09-30T18:08:22.304+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149825",
                    "issueId": "13188073"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@108119fb[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@33c9bfe6[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@31929422[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4fda3b79[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@61944a66[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@68a8fd7a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4dbe57c9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@53a1bcf4[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@10a51b9c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3f4977df[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@767fe0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5eee3506[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Sep 30 01:29:29 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-09-30T01:29:29.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3348/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-09-28T05:20:13.000+0000",
        "updated": "2018-09-30T18:08:22.000+0000",
        "timeoriginalestimate": null,
        "description": "I will have a patch for this soon.\r\n\r\nTo reproduce the bug do the following:\r\n # Start plasma store\r\n # Create client 1 and have it call {{get(object_id)}}\r\n # Kill client 1\r\n # Create client 2 and have it kill create an object with ID {{object_id}}\r\n\r\nThis will cause the plasma store to crash.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "Plasma store dies when an object that a dead client is waiting for gets created.",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188073/comment/16633177",
                    "id": "16633177",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=robertnishihara",
                        "name": "robertnishihara",
                        "key": "robertnishihara",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Robert Nishihara",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 2650\n[https://github.com/apache/arrow/pull/2650]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=robertnishihara",
                        "name": "robertnishihara",
                        "key": "robertnishihara",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Robert Nishihara",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-09-30T01:29:29.817+0000",
                    "updated": "2018-09-30T01:29:29.817+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3yllz:",
        "customfield_12314139": null
    }
}